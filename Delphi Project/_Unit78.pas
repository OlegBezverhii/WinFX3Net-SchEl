//***************************************
//IDR home page: http://kpnc.org/idr32/en
//Decompiled by IDR v.01.04.2017
//***************************************
unit _Unit78;

interface

uses
  SysUtils, Classes, System.Generics.Defaults, System.Generics.Collections, Vcl.ImgList, Vcl.Menus, System.Generics.Collections, System.Rtti, System.Generics.Defaults, System.Win.Registry, Vcl.Graphics, System.UIConsts, System.TypInfo, System.Classes, System.Classes, System.Generics.Collections;

type
  TComparer<Vcl.Themes.TStyleHookClass> = class(TInterfacedObject)
  published
    procedure TLicFile>.Compare(Left:TLicFile; Right:TLicFile);//0079EC18
    //procedure Themes.TStyleHookClass>.Default(?:?);//00594914
  public
    procedure v0; virtual; abstract;//v0//00405554
  end;
  TList<Vcl.Themes.TPair<System.TClass,System.Generics.Collections.TList<Vcl.Themes.TStyleHookClass>>>.arrayofT = array of TPair<System.TClass,System.Generics.Collections.TList<Vcl.Themes.TStyleHookClass>>;
//elSize = 8;
  TCollectionNotifyEvent<Vcl.Themes.TPair<System.TClass,System.Generics.Collections.TList<Vcl.Themes.TStyleHookClass>>> = procedure(Sender:TObject; const Item:TPair<System.TClass,System.Generics.Collections.TList<Vcl.Themes.TStyleHookClass>>; Action:TCollectionNotification) of object;;
  TList<Vcl.Themes.TPair<System.TClass,System.Generics.Collections.TList<Vcl.Themes.TStyleHookClass>>>.TEnumerator = class(TEnumerator<Vcl.Themes.TPair<System.TClass,System.Generics.Collections.TList<Vcl.Themes.TStyleHookClass>>>)
  published
    function Themes.TPair<System.TClass,System.Generics.Collections.TList<Vcl.Themes.TStyleHookClass>>>.TEnumerator.MoveNext:Boolean;//00594C48
    constructor sub_00594C04(AList:TList<Vcl.Themes.TPair<System.TClass,System.Generics.Collections.TList<Vcl.Themes.TStyleHookClass>>>);//00594C04
  public
    FList:TList<Vcl.Themes.TPair<System.TClass,System.Generics.Collections.TList<Vcl.Themes.TStyleHookClass>>>;//f4
    FIndex:Integer;//f8
    //procedure v0(?:?); virtual;//v0//00594BE8
    procedure v4; virtual;//v4//00594BFC
  end;
  TList<Vcl.Themes.TPair<System.TClass,System.Generics.Collections.TList<Vcl.Themes.TStyleHookClass>>> = class(TEnumerable<Vcl.Themes.TPair<System.TClass,System.Generics.Collections.TList<Vcl.Themes.TStyleHookClass>>>)
  published
    procedure Themes.TPair<System.TClass,System.Generics.Collections.TList<Vcl.Themes.TStyleHookClass>>>.Add(Value:TPair<System.TClass,System.Generics.Collections.TList<Vcl.Themes.TStyleHookClass>>);//00594B74
    //procedure Themes.TPair<System.TClass,System.Generics.Collections.TList<Vcl.Themes.TStyleHookClass>>>.Error(Msg:string; Data:NativeInt; ?:?);//00594B3C
    procedure Themes.TPair<System.TClass,System.Generics.Collections.TList<Vcl.Themes.TStyleHookClass>>>.GetEnumerator;//00594B9C
    //procedure Themes.TPair<System.TClass,System.Generics.Collections.TList<Vcl.Themes.TStyleHookClass>>>.ToArray(?:?);//00594B88
    constructor sub_00594A40(AComparer:IComparer<Vcl.Themes.TPair<System.TClass,System.Generics.Collections.TList<Vcl.Themes.TStyleHookClass>>>);//00594A40
    constructor sub_005949C8;//005949C8
    destructor Themes.TPair<System.TClass,System.Generics.Collections.TList<Vcl.Themes.TStyleHookClass>>>.Destroy();//00594AF0
    procedure TLicFile>.Compare(Left:TLicFile; Right:TLicFile);//0079EC18
  public
    FItems:TList<Vcl.Themes.TPair<System.TClass,System.Generics.Collections.TList<Vcl.Themes.TStyleHookClass>>>.arrayofT;//f4
    FListHelper:TListHelper;//f8
    FComparer:IComparer<Vcl.Themes.TPair<System.TClass,System.Generics.Collections.TList<Vcl.Themes.TStyleHookClass>>>;//fC
    FOnNotify:TCollectionNotifyEvent<Vcl.Themes.TPair<System.TClass,System.Generics.Collections.TList<Vcl.Themes.TStyleHookClass>>>;//f10
    FArrayManager:TArrayManager<Vcl.Themes.TPair<System.TClass,System.Generics.Collections.TList<Vcl.Themes.TStyleHookClass>>>;//f18
    FItems:TList<Vcl.Themes.TPair<System.TClass,System.Generics.Collections.TList<Vcl.Themes.TStyleHookClass>>>.arrayofT;//f20
    FComparer:IComparer<Vcl.Themes.TPair<System.TClass,System.Generics.Collections.TList<Vcl.Themes.TStyleHookClass>>>;//f24
    FOnNotify:TCollectionNotifyEvent<Vcl.Themes.TPair<System.TClass,System.Generics.Collections.TList<Vcl.Themes.TStyleHookClass>>>;//f28
    destructor Themes.TPair<System.TClass,System.Generics.Collections.TList<Vcl.Themes.TStyleHookClass>>>.Destroy(); virtual;//00594AF0
    procedure v0; virtual;//v0//005949A8
    //procedure Themes.TPair<System.TClass,System.Generics.Collections.TList<Vcl.Themes.TStyleHookClass>>>.ToArray(?:?); virtual;//v4//00594B88
    //procedure v8(?:?); virtual;//v8//005949B0
    //procedure Themes.TPair<System.TClass,System.Generics.Collections.TList<Vcl.Themes.TStyleHookClass>>>.Error(Msg:string; Data:NativeInt; ?:?); virtual;//vC//00594B3C
  end;
  TList<System.TClass>.arrayofT = array of TClass;
//elSize = 4;
  TList<System.TClass>.TEnumerator = class(TEnumerator<System.TClass>)
  published
    function TClass>.TEnumerator.MoveNext:Boolean;//00594F68
    constructor sub_00594F24(AList:TList<System.TClass>);//00594F24
  public
    FList:TList<System.TClass>;//f4
    FIndex:Integer;//f8
    procedure v0; virtual;//v0//00594F14
    procedure v4; virtual;//v4//00594F1C
  end;
  TList<System.TClass> = class(TEnumerable<System.TClass>)
  published
    procedure TClass>.Add(Value:TClass);//00594EC4
    //procedure TClass>.Error(Msg:string; Data:NativeInt; ?:?);//00594E8C
    procedure TClass>.GetEnumerator;//00594EE8
    //procedure TClass>.ToArray(?:?);//00594ED4
    constructor sub_00594D90(AComparer:IComparer<System.TClass>);//00594D90
    constructor sub_00594D18;//00594D18
    destructor TClass>.Destroy();//00594E40
    procedure TLicFile>.Compare(Left:TLicFile; Right:TLicFile);//0079EC18
  public
    FItems:TList<System.TClass>.arrayofT;//f4
    FListHelper:TListHelper;//f8
    FComparer:IComparer<System.TClass>;//fC
    FOnNotify:TCollectionNotifyEvent<System.TClass>;//f10
    FArrayManager:TArrayManager<System.TClass>;//f18
    FItems:TList<System.TClass>.arrayofT;//f20
    FComparer:IComparer<System.TClass>;//f24
    FOnNotify:TCollectionNotifyEvent<System.TClass>;//f28
    destructor TClass>.Destroy(); virtual;//00594E40
    procedure v0; virtual;//v0//00594CF8
    //procedure TClass>.ToArray(?:?); virtual;//v4//00594ED4
    //procedure v8(?:?); virtual;//v8//00594D00
    //procedure TClass>.Error(Msg:string; Data:NativeInt; ?:?); virtual;//vC//00594E8C
  end;
  TList<Vcl.Themes.TList<Vcl.Themes.TStyleHookClass>>.arrayofT = array of TList<Vcl.Themes.TStyleHookClass>;
//elSize = 4;
  TList<Vcl.Themes.TList<Vcl.Themes.TStyleHookClass>>.TEnumerator = class(TEnumerator<Vcl.Themes.TList<Vcl.Themes.TStyleHookClass>>)
  published
    function Themes.TList<Vcl.Themes.TStyleHookClass>>.TEnumerator.MoveNext:Boolean;//00595268
    constructor sub_00595224(AList:TList<Vcl.Themes.TList<Vcl.Themes.TStyleHookClass>>);//00595224
  public
    FList:TList<Vcl.Themes.TList<Vcl.Themes.TStyleHookClass>>;//f4
    FIndex:Integer;//f8
    procedure v0; virtual;//v0//00595214
    procedure v4; virtual;//v4//0059521C
  end;
  TList<Vcl.Themes.TList<Vcl.Themes.TStyleHookClass>> = class(TEnumerable<Vcl.Themes.TList<Vcl.Themes.TStyleHookClass>>)
  published
    procedure Themes.TList<Vcl.Themes.TStyleHookClass>>.Add(Value:TList<Vcl.Themes.TStyleHookClass>);//005951C4
    //procedure Themes.TList<Vcl.Themes.TStyleHookClass>>.Error(Msg:string; Data:NativeInt; ?:?);//0059518C
    procedure Themes.TList<Vcl.Themes.TStyleHookClass>>.GetEnumerator;//005951E8
    //procedure Themes.TList<Vcl.Themes.TStyleHookClass>>.ToArray(?:?);//005951D4
    constructor sub_00595090(AComparer:IComparer<Vcl.Themes.TList<Vcl.Themes.TStyleHookClass>>);//00595090
    constructor sub_00595018;//00595018
    destructor Themes.TList<Vcl.Themes.TStyleHookClass>>.Destroy();//00595140
    procedure TLicFile>.Compare(Left:TLicFile; Right:TLicFile);//0079EC18
  public
    FItems:TList<Vcl.Themes.TList<Vcl.Themes.TStyleHookClass>>.arrayofT;//f4
    FListHelper:TListHelper;//f8
    FComparer:IComparer<Vcl.Themes.TList<Vcl.Themes.TStyleHookClass>>;//fC
    FOnNotify:TCollectionNotifyEvent<System.Generics.Collections.TList<Vcl.Themes.TStyleHookClass>>;//f10
    FArrayManager:TArrayManager<Vcl.Themes.TList<Vcl.Themes.TStyleHookClass>>;//f18
    FItems:TList<Vcl.Themes.TList<Vcl.Themes.TStyleHookClass>>.arrayofT;//f20
    FComparer:IComparer<Vcl.Themes.TList<Vcl.Themes.TStyleHookClass>>;//f24
    FOnNotify:TCollectionNotifyEvent<System.Generics.Collections.TList<Vcl.Themes.TStyleHookClass>>;//f28
    destructor Themes.TList<Vcl.Themes.TStyleHookClass>>.Destroy(); virtual;//00595140
    procedure v0; virtual;//v0//00594FF8
    //procedure Themes.TList<Vcl.Themes.TStyleHookClass>>.ToArray(?:?); virtual;//v4//005951D4
    //procedure v8(?:?); virtual;//v8//00595000
    //procedure Themes.TList<Vcl.Themes.TStyleHookClass>>.Error(Msg:string; Data:NativeInt; ?:?); virtual;//vC//0059518C
  end;
  TList<Vcl.Themes.TPair<System.string,Vcl.Themes.TSysStyleHookClass>>.arrayofT = array of TPair<System.string,Vcl.Themes.TSysStyleHookClass>;
//elSize = 8;
  TCollectionNotifyEvent<Vcl.Themes.TPair<System.string,Vcl.Themes.TSysStyleHookClass>> = procedure(Sender:TObject; const Item:TPair<System.string,Vcl.Themes.TSysStyleHookClass>; Action:TCollectionNotification) of object;;
  TList<Vcl.Themes.TPair<System.string,Vcl.Themes.TSysStyleHookClass>>.TEnumerator = class(TEnumerator<Vcl.Themes.TPair<System.string,Vcl.Themes.TSysStyleHookClass>>)
  published
    function Themes.TPair<System.string,Vcl.Themes.TSysStyleHookClass>>.TEnumerator.MoveNext:Boolean;//005955E8
    constructor sub_005955A4(AList:TList<Vcl.Themes.TPair<System.string,Vcl.Themes.TSysStyleHookClass>>);//005955A4
  public
    FList:TList<Vcl.Themes.TPair<System.string,Vcl.Themes.TSysStyleHookClass>>;//f4
    FIndex:Integer;//f8
    //procedure v0(?:?); virtual;//v0//00595588
    procedure v4; virtual;//v4//0059559C
  end;
  TList<Vcl.Themes.TPair<System.string,Vcl.Themes.TSysStyleHookClass>> = class(TEnumerable<Vcl.Themes.TPair<System.string,Vcl.Themes.TSysStyleHookClass>>)
  published
    procedure Themes.TPair<System.string,Vcl.Themes.TSysStyleHookClass>>.Add(Value:TPair<System.string,Vcl.Themes.TSysStyleHookClass>);//005954C8
    //procedure Themes.TPair<System.string,Vcl.Themes.TSysStyleHookClass>>.Error(Msg:string; Data:NativeInt; ?:?);//00595490
    procedure Themes.TPair<System.string,Vcl.Themes.TSysStyleHookClass>>.GetEnumerator;//005954F0
    //procedure Themes.TPair<System.string,Vcl.Themes.TSysStyleHookClass>>.ToArray(?:?);//005954DC
    constructor sub_00595394(AComparer:IComparer<Vcl.Themes.TPair<System.string,Vcl.Themes.TSysStyleHookClass>>);//00595394
    constructor sub_0059531C;//0059531C
    destructor Themes.TPair<System.string,Vcl.Themes.TSysStyleHookClass>>.Destroy();//00595444
    procedure TLicFile>.Compare(Left:TLicFile; Right:TLicFile);//0079EC18
  public
    FListHelper:TListHelper;//f8
    FItems:TList<Vcl.Themes.TPair<System.string,Vcl.Themes.TSysStyleHookClass>>.arrayofT;//f20
    FComparer:IComparer<Vcl.Themes.TPair<System.string,Vcl.Themes.TSysStyleHookClass>>;//f24
    FOnNotify:TCollectionNotifyEvent<Vcl.Themes.TPair<System.string,Vcl.Themes.TSysStyleHookClass>>;//f28
    destructor Themes.TPair<System.string,Vcl.Themes.TSysStyleHookClass>>.Destroy(); virtual;//00595444
    procedure v0; virtual;//v0//005952FC
    //procedure Themes.TPair<System.string,Vcl.Themes.TSysStyleHookClass>>.ToArray(?:?); virtual;//v4//005954DC
    //procedure v8(?:?); virtual;//v8//00595304
    //procedure Themes.TPair<System.string,Vcl.Themes.TSysStyleHookClass>>.Error(Msg:string; Data:NativeInt; ?:?); virtual;//vC//00595490
  end;
  TList<Vcl.Themes.TSysStyleHookClass>.arrayofT = array of TSysStyleHookClass;
//elSize = 4;
  TList<Vcl.Themes.TSysStyleHookClass>.TEnumerator = class(TEnumerator<Vcl.Themes.TSysStyleHookClass>)
  published
    function Themes.TSysStyleHookClass>.TEnumerator.MoveNext:Boolean;//005958E8
    constructor sub_005958A4(AList:TList<Vcl.Themes.TSysStyleHookClass>);//005958A4
  public
    FList:TList<Vcl.Themes.TSysStyleHookClass>;//f4
    FIndex:Integer;//f8
    procedure v0; virtual;//v0//00595894
    procedure v4; virtual;//v4//0059589C
  end;
  TList<Vcl.Themes.TSysStyleHookClass> = class(TEnumerable<Vcl.Themes.TSysStyleHookClass>)
  published
    procedure Themes.TSysStyleHookClass>.Add(Value:TSysStyleHookClass);//00595844
    //procedure Themes.TSysStyleHookClass>.Error(Msg:string; Data:NativeInt; ?:?);//0059580C
    procedure Themes.TSysStyleHookClass>.GetEnumerator;//00595868
    //procedure Themes.TSysStyleHookClass>.ToArray(?:?);//00595854
    constructor sub_00595710(AComparer:IComparer<Vcl.Themes.TSysStyleHookClass>);//00595710
    constructor sub_00595698;//00595698
    destructor Themes.TSysStyleHookClass>.Destroy();//005957C0
    procedure TLicFile>.Compare(Left:TLicFile; Right:TLicFile);//0079EC18
  public
    FListHelper:TListHelper;//f8
    FItems:TList<Vcl.Themes.TSysStyleHookClass>.arrayofT;//f20
    FComparer:IComparer<Vcl.Themes.TSysStyleHookClass>;//f24
    FOnNotify:TCollectionNotifyEvent<Vcl.Themes.TSysStyleHookClass>;//f28
    destructor Themes.TSysStyleHookClass>.Destroy(); virtual;//005957C0
    procedure v0; virtual;//v0//00595678
    //procedure Themes.TSysStyleHookClass>.ToArray(?:?); virtual;//v4//00595854
    //procedure v8(?:?); virtual;//v8//00595680
    //procedure Themes.TSysStyleHookClass>.Error(Msg:string; Data:NativeInt; ?:?); virtual;//vC//0059580C
  end;
  TList<Vcl.Themes.TPair<Winapi.Windows.HWND,Vcl.Themes.TSysStyleHook>>.arrayofT = array of TPair<Winapi.Windows.HWND,Vcl.Themes.TSysStyleHook>;
//elSize = 8;
  TCollectionNotifyEvent<Vcl.Themes.TPair<Winapi.Windows.HWND,Vcl.Themes.TSysStyleHook>> = procedure(Sender:TObject; const Item:TPair<Winapi.Windows.HWND,Vcl.Themes.TSysStyleHook>; Action:TCollectionNotification) of object;;
  TList<Vcl.Themes.TPair<Winapi.Windows.HWND,Vcl.Themes.TSysStyleHook>>.TEnumerator = class(TEnumerator<Vcl.Themes.TPair<Winapi.Windows.HWND,Vcl.Themes.TSysStyleHook>>)
  published
    function Themes.TPair<Winapi.Windows.HWND,Vcl.Themes.TSysStyleHook>>.TEnumerator.MoveNext:Boolean;//00595C1C
    constructor sub_00595BD8(AList:TList<Vcl.Themes.TPair<Winapi.Windows.HWND,Vcl.Themes.TSysStyleHook>>);//00595BD8
  public
    FList:TList<Vcl.Themes.TPair<Winapi.Windows.HWND,Vcl.Themes.TSysStyleHook>>;//f4
    FIndex:Integer;//f8
    //procedure v0(?:?); virtual;//v0//00595BBC
    procedure v4; virtual;//v4//00595BD0
  end;
  TList<Vcl.Themes.TPair<Winapi.Windows.HWND,Vcl.Themes.TSysStyleHook>> = class(TEnumerable<Vcl.Themes.TPair<Winapi.Windows.HWND,Vcl.Themes.TSysStyleHook>>)
  published
    procedure Themes.TPair<Winapi.Windows.HWND,Vcl.Themes.TSysStyleHook>>.Add(Value:TPair<Winapi.Windows.HWND,Vcl.Themes.TSysStyleHook>);//00595B48
    //procedure Themes.TPair<Winapi.Windows.HWND,Vcl.Themes.TSysStyleHook>>.Error(Msg:string; Data:NativeInt; ?:?);//00595B10
    procedure Themes.TPair<Winapi.Windows.HWND,Vcl.Themes.TSysStyleHook>>.GetEnumerator;//00595B70
    //procedure Themes.TPair<Winapi.Windows.HWND,Vcl.Themes.TSysStyleHook>>.ToArray(?:?);//00595B5C
    constructor sub_00595A14(AComparer:IComparer<Vcl.Themes.TPair<Winapi.Windows.HWND,Vcl.Themes.TSysStyleHook>>);//00595A14
    constructor sub_0059599C;//0059599C
    destructor Themes.TPair<Winapi.Windows.HWND,Vcl.Themes.TSysStyleHook>>.Destroy();//00595AC4
    procedure TLicFile>.Compare(Left:TLicFile; Right:TLicFile);//0079EC18
  public
    FListHelper:TListHelper;//f8
    FItems:TList<Vcl.Themes.TPair<Winapi.Windows.HWND,Vcl.Themes.TSysStyleHook>>.arrayofT;//f20
    FComparer:IComparer<Vcl.Themes.TPair<Winapi.Windows.HWND,Vcl.Themes.TSysStyleHook>>;//f24
    FOnNotify:TCollectionNotifyEvent<Vcl.Themes.TPair<Winapi.Windows.HWND,Vcl.Themes.TSysStyleHook>>;//f28
    destructor Themes.TPair<Winapi.Windows.HWND,Vcl.Themes.TSysStyleHook>>.Destroy(); virtual;//00595AC4
    procedure v0; virtual;//v0//0059597C
    //procedure Themes.TPair<Winapi.Windows.HWND,Vcl.Themes.TSysStyleHook>>.ToArray(?:?); virtual;//v4//00595B5C
    //procedure v8(?:?); virtual;//v8//00595984
    //procedure Themes.TPair<Winapi.Windows.HWND,Vcl.Themes.TSysStyleHook>>.Error(Msg:string; Data:NativeInt; ?:?); virtual;//vC//00595B10
  end;
  TList<Winapi.Windows.HWND>.arrayofT = array of HWND;
//elSize = 4
//varType equivalent: varInteger;
  TList<Winapi.Windows.HWND>.TEnumerator = class(TEnumerator<Winapi.Windows.HWND>)
  published
    function Windows.HWND>.TEnumerator.MoveNext:Boolean;//00595F3C
    constructor sub_00595EF8(AList:TList<Winapi.Windows.HWND>);//00595EF8
  public
    FList:TList<Winapi.Windows.HWND>;//f4
    FIndex:Integer;//f8
    procedure v0; virtual;//v0//00595EE8
    procedure v4; virtual;//v4//00595EF0
  end;
  TList<Winapi.Windows.HWND> = class(TEnumerable<Winapi.Windows.HWND>)
  published
    procedure Windows.HWND>.Add(Value:HWND);//00595E98
    //procedure Windows.HWND>.Error(Msg:string; Data:NativeInt; ?:?);//00595E60
    procedure Windows.HWND>.GetEnumerator;//00595EBC
    //procedure Windows.HWND>.ToArray(?:?);//00595EA8
    constructor sub_00595D64(AComparer:IComparer<Winapi.Windows.HWND>);//00595D64
    constructor sub_00595CEC;//00595CEC
    destructor Windows.HWND>.Destroy();//00595E14
    procedure TLicFile>.Compare(Left:TLicFile; Right:TLicFile);//0079EC18
  public
    FListHelper:TListHelper;//f8
    FItems:TList<Winapi.Windows.HWND>.arrayofT;//f20
    FComparer:IComparer<Winapi.Windows.HWND>;//f24
    FOnNotify:TCollectionNotifyEvent<Winapi.Windows.HWND>;//f28
    destructor Windows.HWND>.Destroy(); virtual;//00595E14
    procedure v0; virtual;//v0//00595CCC
    //procedure Windows.HWND>.ToArray(?:?); virtual;//v4//00595EA8
    //procedure v8(?:?); virtual;//v8//00595CD4
    //procedure Windows.HWND>.Error(Msg:string; Data:NativeInt; ?:?); virtual;//vC//00595E60
  end;
  TList<Vcl.Themes.TSysStyleHook>.arrayofT = array of TSysStyleHook;
//elSize = 4;
  TList<Vcl.Themes.TSysStyleHook>.TEnumerator = class(TEnumerator<Vcl.Themes.TSysStyleHook>)
  published
    function Themes.TSysStyleHook>.TEnumerator.MoveNext:Boolean;//0059623C
    constructor sub_005961F8(AList:TList<Vcl.Themes.TSysStyleHook>);//005961F8
  public
    FList:TList<Vcl.Themes.TSysStyleHook>;//f4
    FIndex:Integer;//f8
    procedure v0; virtual;//v0//005961E8
    procedure v4; virtual;//v4//005961F0
  end;
  TList<Vcl.Themes.TSysStyleHook> = class(TEnumerable<Vcl.Themes.TSysStyleHook>)
  published
    procedure Themes.TSysStyleHook>.Add(Value:TSysStyleHook);//00596198
    //procedure Themes.TSysStyleHook>.Error(Msg:string; Data:NativeInt; ?:?);//00596160
    procedure Themes.TSysStyleHook>.GetEnumerator;//005961BC
    //procedure Themes.TSysStyleHook>.ToArray(?:?);//005961A8
    constructor sub_00596064(AComparer:IComparer<Vcl.Themes.TSysStyleHook>);//00596064
    constructor sub_00595FEC;//00595FEC
    destructor Themes.TSysStyleHook>.Destroy();//00596114
    procedure TLicFile>.Compare(Left:TLicFile; Right:TLicFile);//0079EC18
  public
    FListHelper:TListHelper;//f8
    FItems:TList<Vcl.Themes.TSysStyleHook>.arrayofT;//f20
    FComparer:IComparer<Vcl.Themes.TSysStyleHook>;//f24
    FOnNotify:TCollectionNotifyEvent<Vcl.Themes.TSysStyleHook>;//f28
    destructor Themes.TSysStyleHook>.Destroy(); virtual;//00596114
    procedure v0; virtual;//v0//00595FCC
    //procedure Themes.TSysStyleHook>.ToArray(?:?); virtual;//v4//005961A8
    //procedure v8(?:?); virtual;//v8//00595FD4
    //procedure Themes.TSysStyleHook>.Error(Msg:string; Data:NativeInt; ?:?); virtual;//vC//00596160
  end;
  TList<Vcl.Themes.TPair<Winapi.Windows.HWND,Vcl.Themes.TChildControlInfo>>.arrayofT = array of TPair<Winapi.Windows.HWND,Vcl.Themes.TChildControlInfo>;
//elSize = 10;
  TCollectionNotifyEvent<Vcl.Themes.TPair<Winapi.Windows.HWND,Vcl.Themes.TChildControlInfo>> = procedure(Sender:TObject; const Item:TPair<Winapi.Windows.HWND,Vcl.Themes.TChildControlInfo>; Action:TCollectionNotification) of object;;
  TList<Vcl.Themes.TPair<Winapi.Windows.HWND,Vcl.Themes.TChildControlInfo>>.TEnumerator = class(TEnumerator<Vcl.Themes.TPair<Winapi.Windows.HWND,Vcl.Themes.TChildControlInfo>>)
  published
    function Themes.TPair<Winapi.Windows.HWND,Vcl.Themes.TChildControlInfo>>.TEnumerator.MoveNext:Boolean;//00596570
    constructor sub_0059652C(AList:TList<Vcl.Themes.TPair<Winapi.Windows.HWND,Vcl.Themes.TChildControlInfo>>);//0059652C
  public
    FList:TList<Vcl.Themes.TPair<Winapi.Windows.HWND,Vcl.Themes.TChildControlInfo>>;//f4
    FIndex:Integer;//f8
    //procedure v0(?:?); virtual;//v0//00596510
    procedure v4; virtual;//v4//00596524
  end;
  TList<Vcl.Themes.TPair<Winapi.Windows.HWND,Vcl.Themes.TChildControlInfo>> = class(TEnumerable<Vcl.Themes.TPair<Winapi.Windows.HWND,Vcl.Themes.TChildControlInfo>>)
  published
    procedure Themes.TPair<Winapi.Windows.HWND,Vcl.Themes.TChildControlInfo>>.Add(Value:TPair<Winapi.Windows.HWND,Vcl.Themes.TChildControlInfo>);//0059649C
    //procedure Themes.TPair<Winapi.Windows.HWND,Vcl.Themes.TChildControlInfo>>.Error(Msg:string; Data:NativeInt; ?:?);//00596464
    procedure Themes.TPair<Winapi.Windows.HWND,Vcl.Themes.TChildControlInfo>>.GetEnumerator;//005964C4
    //procedure Themes.TPair<Winapi.Windows.HWND,Vcl.Themes.TChildControlInfo>>.ToArray(?:?);//005964B0
    constructor sub_00596368(AComparer:IComparer<Vcl.Themes.TPair<Winapi.Windows.HWND,Vcl.Themes.TChildControlInfo>>);//00596368
    constructor sub_005962F0;//005962F0
    destructor Themes.TPair<Winapi.Windows.HWND,Vcl.Themes.TChildControlInfo>>.Destroy();//00596418
    procedure TLicFile>.Compare(Left:TLicFile; Right:TLicFile);//0079EC18
  public
    FListHelper:TListHelper;//f8
    FItems:TList<Vcl.Themes.TPair<Winapi.Windows.HWND,Vcl.Themes.TChildControlInfo>>.arrayofT;//f20
    FComparer:IComparer<Vcl.Themes.TPair<Winapi.Windows.HWND,Vcl.Themes.TChildControlInfo>>;//f24
    FOnNotify:TCollectionNotifyEvent<Vcl.Themes.TPair<Winapi.Windows.HWND,Vcl.Themes.TChildControlInfo>>;//f28
    destructor Themes.TPair<Winapi.Windows.HWND,Vcl.Themes.TChildControlInfo>>.Destroy(); virtual;//00596418
    procedure v0; virtual;//v0//005962D0
    //procedure Themes.TPair<Winapi.Windows.HWND,Vcl.Themes.TChildControlInfo>>.ToArray(?:?); virtual;//v4//005964B0
    //procedure v8(?:?); virtual;//v8//005962D8
    //procedure Themes.TPair<Winapi.Windows.HWND,Vcl.Themes.TChildControlInfo>>.Error(Msg:string; Data:NativeInt; ?:?); virtual;//vC//00596464
  end;
  TList<Vcl.Themes.TChildControlInfo>.arrayofT = array of TChildControlInfo;
//elSize = C;
  TList<Vcl.Themes.TChildControlInfo>.TEnumerator = class(TEnumerator<Vcl.Themes.TChildControlInfo>)
  published
    function Themes.TChildControlInfo>.TEnumerator.MoveNext:Boolean;//005968B8
    constructor sub_00596874(AList:TList<Vcl.Themes.TChildControlInfo>);//00596874
  public
    FList:TList<Vcl.Themes.TChildControlInfo>;//f4
    FIndex:Integer;//f8
    //procedure v0(?:?); virtual;//v0//00596858
    procedure v4; virtual;//v4//0059686C
  end;
  TList<Vcl.Themes.TChildControlInfo> = class(TEnumerable<Vcl.Themes.TChildControlInfo>)
  published
    procedure Themes.TChildControlInfo>.Add(Value:TChildControlInfo);//005967D0
    //procedure Themes.TChildControlInfo>.Error(Msg:string; Data:NativeInt; ?:?);//00596798
    procedure Themes.TChildControlInfo>.GetEnumerator;//005967F8
    //procedure Themes.TChildControlInfo>.ToArray(?:?);//005967E4
    constructor sub_0059669C(AComparer:IComparer<Vcl.Themes.TChildControlInfo>);//0059669C
    constructor sub_00596624;//00596624
    destructor Themes.TChildControlInfo>.Destroy();//0059674C
    procedure TLicFile>.Compare(Left:TLicFile; Right:TLicFile);//0079EC18
  public
    FListHelper:TListHelper;//f8
    FItems:TList<Vcl.Themes.TChildControlInfo>.arrayofT;//f20
    FComparer:IComparer<Vcl.Themes.TChildControlInfo>;//f24
    FOnNotify:TCollectionNotifyEvent<Vcl.Themes.TChildControlInfo>;//f28
    destructor Themes.TChildControlInfo>.Destroy(); virtual;//0059674C
    procedure v0; virtual;//v0//00596604
    //procedure Themes.TChildControlInfo>.ToArray(?:?); virtual;//v4//005967E4
    //procedure v8(?:?); virtual;//v8//0059660C
    //procedure Themes.TChildControlInfo>.Error(Msg:string; Data:NativeInt; ?:?); virtual;//vC//00596798
  end;
  TList<Vcl.Themes.TPair<System.string,Vcl.Themes.TStyleManager.TSourceInfo>>.arrayofT = array of TPair<System.string,Vcl.Themes.TStyleManager.TSourceInfo>;
//elSize = C;
  TCollectionNotifyEvent<Vcl.Themes.TPair<System.string,Vcl.Themes.TStyleManager.TSourceInfo>> = procedure(Sender:TObject; const Item:TPair<System.string,Vcl.Themes.TStyleManager.TSourceInfo>; Action:TCollectionNotification) of object;;
  TList<Vcl.Themes.TPair<System.string,Vcl.Themes.TStyleManager.TSourceInfo>>.TEnumerator = class(TEnumerator<Vcl.Themes.TPair<System.string,Vcl.Themes.TStyleManager.TSourceInfo>>)
  published
    function Themes.TPair<System.string,Vcl.Themes.TStyleManager.TSourceInfo>>.TEnumerator.MoveNext:Boolean;//00596C3C
    constructor sub_00596BF8(AList:TList<Vcl.Themes.TPair<System.string,Vcl.Themes.TStyleManager.TSourceInfo>>);//00596BF8
  public
    FList:TList<Vcl.Themes.TPair<System.string,Vcl.Themes.TStyleManager.TSourceInfo>>;//f4
    FIndex:Integer;//f8
    //procedure v0(?:?); virtual;//v0//00596BDC
    procedure v4; virtual;//v4//00596BF0
  end;
  TList<Vcl.Themes.TPair<System.string,Vcl.Themes.TStyleManager.TSourceInfo>> = class(TEnumerable<Vcl.Themes.TPair<System.string,Vcl.Themes.TStyleManager.TSourceInfo>>)
  published
    procedure Themes.TPair<System.string,Vcl.Themes.TStyleManager.TSourceInfo>>.Add(Value:TPair<System.string,Vcl.Themes.TStyleManager.TSourceInfo>);//00596B18
    //procedure Themes.TPair<System.string,Vcl.Themes.TStyleManager.TSourceInfo>>.Error(Msg:string; Data:NativeInt; ?:?);//00596AE0
    procedure Themes.TPair<System.string,Vcl.Themes.TStyleManager.TSourceInfo>>.GetEnumerator;//00596B40
    //procedure Themes.TPair<System.string,Vcl.Themes.TStyleManager.TSourceInfo>>.ToArray(?:?);//00596B2C
    constructor sub_005969E4(AComparer:IComparer<Vcl.Themes.TPair<System.string,Vcl.Themes.TStyleManager.TSourceInfo>>);//005969E4
    constructor sub_0059696C;//0059696C
    destructor Themes.TPair<System.string,Vcl.Themes.TStyleManager.TSourceInfo>>.Destroy();//00596A94
    procedure TLicFile>.Compare(Left:TLicFile; Right:TLicFile);//0079EC18
  public
    FItems:TList<Vcl.Themes.TPair<System.string,Vcl.Themes.TStyleManager.TSourceInfo>>.arrayofT;//f4
    FListHelper:TListHelper;//f8
    FComparer:IComparer<Vcl.Themes.TPair<System.string,Vcl.Themes.TStyleManager.TSourceInfo>>;//fC
    FOnNotify:TCollectionNotifyEvent<Vcl.Themes.TPair<System.string,Vcl.Themes.TStyleManager.TSourceInfo>>;//f10
    FArrayManager:TArrayManager<Vcl.Themes.TPair<System.string,Vcl.Themes.TStyleManager.TSourceInfo>>;//f18
    FItems:TList<Vcl.Themes.TPair<System.string,Vcl.Themes.TStyleManager.TSourceInfo>>.arrayofT;//f20
    FComparer:IComparer<Vcl.Themes.TPair<System.string,Vcl.Themes.TStyleManager.TSourceInfo>>;//f24
    FOnNotify:TCollectionNotifyEvent<Vcl.Themes.TPair<System.string,Vcl.Themes.TStyleManager.TSourceInfo>>;//f28
    destructor Themes.TPair<System.string,Vcl.Themes.TStyleManager.TSourceInfo>>.Destroy(); virtual;//00596A94
    procedure v0; virtual;//v0//0059694C
    //procedure Themes.TPair<System.string,Vcl.Themes.TStyleManager.TSourceInfo>>.ToArray(?:?); virtual;//v4//00596B2C
    //procedure v8(?:?); virtual;//v8//00596954
    //procedure Themes.TPair<System.string,Vcl.Themes.TStyleManager.TSourceInfo>>.Error(Msg:string; Data:NativeInt; ?:?); virtual;//vC//00596AE0
  end;
  TList<Vcl.Themes.TStyleManager.TSourceInfo>.arrayofT = array of TStyleManager.TSourceInfo;
//elSize = 8;
  TList<Vcl.Themes.TStyleManager.TSourceInfo>.TEnumerator = class(TEnumerator<Vcl.Themes.TStyleManager.TSourceInfo>)
  published
    function Themes.TStyleManager.TSourceInfo>.TEnumerator.MoveNext:Boolean;//00596F70
    constructor sub_00596F2C(AList:TList<Vcl.Themes.TStyleManager.TSourceInfo>);//00596F2C
  public
    FList:TList<Vcl.Themes.TStyleManager.TSourceInfo>;//f4
    FIndex:Integer;//f8
    //procedure v0(?:?); virtual;//v0//00596F10
    procedure v4; virtual;//v4//00596F24
  end;
  TList<Vcl.Themes.TStyleManager.TSourceInfo> = class(TEnumerable<Vcl.Themes.TStyleManager.TSourceInfo>)
  published
    procedure Themes.TStyleManager.TSourceInfo>.Add(Value:TStyleManager.TSourceInfo);//00596E9C
    //procedure Themes.TStyleManager.TSourceInfo>.Error(Msg:string; Data:NativeInt; ?:?);//00596E64
    procedure Themes.TStyleManager.TSourceInfo>.GetEnumerator;//00596EC4
    //procedure Themes.TStyleManager.TSourceInfo>.ToArray(?:?);//00596EB0
    constructor sub_00596D68(AComparer:IComparer<Vcl.Themes.TStyleManager.TSourceInfo>);//00596D68
    constructor sub_00596CF0;//00596CF0
    destructor Themes.TStyleManager.TSourceInfo>.Destroy();//00596E18
    procedure TLicFile>.Compare(Left:TLicFile; Right:TLicFile);//0079EC18
  public
    FItems:TList<Vcl.Themes.TStyleManager.TSourceInfo>.arrayofT;//f4
    FListHelper:TListHelper;//f8
    FComparer:IComparer<Vcl.Themes.TStyleManager.TSourceInfo>;//fC
    FOnNotify:TCollectionNotifyEvent<Vcl.Themes.TStyleManager.TSourceInfo>;//f10
    FArrayManager:TArrayManager<Vcl.Themes.TStyleManager.TSourceInfo>;//f18
    FItems:TList<Vcl.Themes.TStyleManager.TSourceInfo>.arrayofT;//f20
    FComparer:IComparer<Vcl.Themes.TStyleManager.TSourceInfo>;//f24
    FOnNotify:TCollectionNotifyEvent<Vcl.Themes.TStyleManager.TSourceInfo>;//f28
    destructor Themes.TStyleManager.TSourceInfo>.Destroy(); virtual;//00596E18
    procedure v0; virtual;//v0//00596CD0
    //procedure Themes.TStyleManager.TSourceInfo>.ToArray(?:?); virtual;//v4//00596EB0
    //procedure v8(?:?); virtual;//v8//00596CD8
    //procedure Themes.TStyleManager.TSourceInfo>.Error(Msg:string; Data:NativeInt; ?:?); virtual;//vC//00596E64
  end;
  TComparer<Vcl.Themes.TStyleManager.TStyleClassDescriptor> = class(TInterfacedObject)
  published
    procedure TLicFile>.Compare(Left:TLicFile; Right:TLicFile);//0079EC18
    function Themes.TStyleManager.TStyleClassDescriptor>.Default:IComparer<Vcl.Themes.TStyleManager.TStyleClassDescriptor>;//00596F90
  public
    procedure v0; virtual; abstract;//v0//00405554
  end;
  TComparer<Vcl.Themes.TCustomStyleEngineClass> = class(TInterfacedObject)
  published
    procedure TLicFile>.Compare(Left:TLicFile; Right:TLicFile);//0079EC18
    function Themes.TCustomStyleEngineClass>.Default:IComparer<Vcl.Themes.TCustomStyleEngineClass>;//00596FB0
  public
    procedure v0; virtual; abstract;//v0//00405554
  end;
  TComparer<Vcl.Themes.TCustomStyleServices> = class(TInterfacedObject)
  published
    procedure TLicFile>.Compare(Left:TLicFile; Right:TLicFile);//0079EC18
    function Themes.TCustomStyleServices>.Default:IComparer<Vcl.Themes.TCustomStyleServices>;//00596FD0
  public
    procedure v0; virtual; abstract;//v0//00405554
  end;
  TComparer<System.Types.TPoint> = class(TInterfacedObject)
  published
    procedure TLicFile>.Compare(Left:TLicFile; Right:TLicFile);//0079EC18
    //procedure Types.TPoint>.Default(?:?);//00596FF0
  public
    procedure v0; virtual; abstract;//v0//00405554
  end;
  TComparer<Vcl.Themes.TPair<System.TClass,System.Generics.Collections.TList<Vcl.Themes.TStyleHookClass>>> = class(TInterfacedObject)
  published
    procedure TLicFile>.Compare(Left:TLicFile; Right:TLicFile);//0079EC18
    //procedure Themes.TPair<System.TClass,System.Generics.Collections.TList<Vcl.Themes.TStyleHookClass>>>.Default(?:?);//00597010
  public
    procedure v0; virtual; abstract;//v0//00405554
  end;
  TComparer<System.TClass> = class(TInterfacedObject)
  published
    procedure TLicFile>.Compare(Left:TLicFile; Right:TLicFile);//0079EC18
    //procedure TClass>.Default(?:?);//00597030
  public
    procedure v0; virtual; abstract;//v0//00405554
  end;
  TComparer<Vcl.Themes.TList<Vcl.Themes.TStyleHookClass>> = class(TInterfacedObject)
  published
    procedure TLicFile>.Compare(Left:TLicFile; Right:TLicFile);//0079EC18
    //procedure Themes.TList<Vcl.Themes.TStyleHookClass>>.Default(?:?);//00597050
  public
    procedure v0; virtual; abstract;//v0//00405554
  end;
  TComparer<Vcl.Themes.TPair<System.string,Vcl.Themes.TSysStyleHookClass>> = class(TInterfacedObject)
  published
    procedure TLicFile>.Compare(Left:TLicFile; Right:TLicFile);//0079EC18
    //procedure Themes.TPair<System.string,Vcl.Themes.TSysStyleHookClass>>.Default(?:?);//00597070
  public
    procedure v0; virtual; abstract;//v0//00405554
  end;
  TComparer<Vcl.Themes.TSysStyleHookClass> = class(TInterfacedObject)
  published
    procedure TLicFile>.Compare(Left:TLicFile; Right:TLicFile);//0079EC18
    //procedure Themes.TSysStyleHookClass>.Default(?:?);//00597090
  public
    procedure v0; virtual; abstract;//v0//00405554
  end;
  TComparer<Vcl.Themes.TPair<Winapi.Windows.HWND,Vcl.Themes.TSysStyleHook>> = class(TInterfacedObject)
  published
    procedure TLicFile>.Compare(Left:TLicFile; Right:TLicFile);//0079EC18
    //procedure Themes.TPair<Winapi.Windows.HWND,Vcl.Themes.TSysStyleHook>>.Default(?:?);//005970B0
  public
    procedure v0; virtual; abstract;//v0//00405554
  end;
  TComparer<Winapi.Windows.HWND> = class(TInterfacedObject)
  published
    procedure TLicFile>.Compare(Left:TLicFile; Right:TLicFile);//0079EC18
    //procedure Windows.HWND>.Default(?:?);//005970D0
  public
    procedure v0; virtual; abstract;//v0//00405554
  end;
  TComparer<Vcl.Themes.TSysStyleHook> = class(TInterfacedObject)
  published
    procedure TLicFile>.Compare(Left:TLicFile; Right:TLicFile);//0079EC18
    //procedure Themes.TSysStyleHook>.Default(?:?);//005970F0
  public
    procedure v0; virtual; abstract;//v0//00405554
  end;
  TComparer<Vcl.Themes.TPair<Winapi.Windows.HWND,Vcl.Themes.TChildControlInfo>> = class(TInterfacedObject)
  published
    procedure TLicFile>.Compare(Left:TLicFile; Right:TLicFile);//0079EC18
    //procedure Themes.TPair<Winapi.Windows.HWND,Vcl.Themes.TChildControlInfo>>.Default(?:?);//00597110
  public
    procedure v0; virtual; abstract;//v0//00405554
  end;
  TComparer<Vcl.Themes.TChildControlInfo> = class(TInterfacedObject)
  published
    procedure TLicFile>.Compare(Left:TLicFile; Right:TLicFile);//0079EC18
    //procedure Themes.TChildControlInfo>.Default(?:?);//00597130
  public
    procedure v0; virtual; abstract;//v0//00405554
  end;
  TComparer<Vcl.Themes.TPair<System.string,Vcl.Themes.TStyleManager.TSourceInfo>> = class(TInterfacedObject)
  published
    procedure TLicFile>.Compare(Left:TLicFile; Right:TLicFile);//0079EC18
    //procedure Themes.TPair<System.string,Vcl.Themes.TStyleManager.TSourceInfo>>.Default(?:?);//00597150
  public
    procedure v0; virtual; abstract;//v0//00405554
  end;
  TComparer<Vcl.Themes.TStyleManager.TSourceInfo> = class(TInterfacedObject)
  published
    procedure TLicFile>.Compare(Left:TLicFile; Right:TLicFile);//0079EC18
    //procedure Themes.TStyleManager.TSourceInfo>.Default(?:?);//00597170
  public
    procedure v0; virtual; abstract;//v0//00405554
  end;
  TChangeLink = class(TImageLink)
  published
    constructor Create;//005A9F18
  public
    constructor Create; virtual;//v0//005A9F18
  end;
  TDrawingStyle = (dsFocus, dsSelected, dsNormal, dsTransparent);
  TImageType = (itImage, itMask);
  TResType = (rtBitmap, rtCursor, rtIcon);
  TLoadResource = (lrDefaultColor, lrDefaultSize, lrFromFile, lrMap3DColors, lrTransparent, lrMonoChrome);
  TLoadResources = set of TLoadResource;
  TColorDepth = (cdDefault, cdDeviceDependent, cd4Bit, cd8Bit, cd16Bit, cd24Bit, cd32Bit);
  TCustomImageList = class(TBaseImageList)
  published
    function GetHotSpot:TPoint;//005A9620
    procedure GetIcon(Index:Integer; Image:TIcon);//005A89F0
    procedure EndUpdate;//005A9EF8
    procedure Draw(Canvas:TCanvas; X:Integer; Enabled:Boolean; Index:Integer; Y:Integer);//005A9224
    procedure Draw(Canvas:TCanvas; X:Integer; Enabled:Boolean; AImageType:TImageType; ADrawingStyle:TDrawingStyle; Index:Integer; Y:Integer);//005A924C
    procedure GetIcon(Index:Integer; Image:TIcon; AImageType:TImageType; ADrawingStyle:TDrawingStyle);//005A8A04
    procedure SetSize(AWidth:Integer; AHeight:Integer);//005A8DCC
    procedure UnRegisterChanges(Value:TChangeLink);//005A966C
    procedure ReplaceMasked(Index:Integer; NewImage:TBitmap; MaskColor:TColor);//005A8A78
    function HandleAllocated:Boolean;//005A84A4
    procedure RegisterChanges(Value:TChangeLink);//005A9674
    procedure Assign(Source:TPersistent);//005A9484
    function Add(Image:TBitmap; Mask:TBitmap):Integer;//005A8810
    destructor Destroy();//005A839C
    constructor Create(AOwner:TComponent);//005A82FC
    constructor Create(AWidth:Integer; AHeight:Integer);//005A8348
    procedure TLicFile>.Compare(Left:TLicFile; Right:TLicFile);//0079EC18
    procedure Clear;//005A8D24
    procedure Delete(Index:Integer);//005A8C9C
    procedure BeginUpdate;//005A9EF0
    function AddImage(Value:TCustomImageList; Index:Integer):Integer;//005A944C
    function AddMasked(Image:TBitmap; MaskColor:TColor):Integer;//005A88D8
  public
    FHeight:Integer;//f50
    FWidth:Integer;//f54
    FAllocBy:Integer;//f58
    FHandle:NativeUInt;//f5C
    FDrawingStyle:TDrawingStyle;//f60
    FMasked:Boolean;//f61
    FShareImages:Boolean;//f62
    FImageType:TImageType;//f63
    FBkColor:TColor;//f64
    FBlendColor:TColor;//f68
    FGrayscaleFactor:Byte;//f6C
    FBitmap:TBitmap;//f70
    FMonoBitmap:TBitmap;//f74
    FGrayscaleBitmap:TBitmap;//f78
    FChanged:Boolean;//f7C
    FUpdateCount:Integer;//f80
    FOnChange:TNotifyEvent;//f88
    f8C:dword;//f8C
    FColorDepth:TColorDepth;//f90
    destructor Destroy(); virtual;//005A839C
    procedure AssignTo(Dest:TPersistent); virtual;//v0//005A9514
    procedure DefineProperties(Filer:TFiler); virtual;//v4//005A9808
    procedure Assign(Source:TPersistent); virtual;//v8//005A9484
    constructor Create(AOwner:TComponent); virtual;//v3C//005A82FC
    procedure v44; virtual;//v44//005A9640
    //function v48:?; virtual;//v48//005A8A54
    //procedure v50(?:?; ?:?; ?:?; ?:?; ?:?; ?:?); virtual;//v50//005A8F20
    procedure Initialize; virtual;//v54//005A83F0
    //procedure v58(?:?); virtual;//v58//005A9CCC
    procedure WriteData(Stream:Classes.TStream); virtual;//v5C//005A9D80
    function GetHotSpot:TPoint; virtual;//v60//005A9620
    function GetHandle:HIMAGELIST;//005A8698
  end;
  EMenuError = class(Exception)
  end;
  TMenuBreak = (mbNone, mbBreak, mbBarBreak);
  TMenuChangeEvent = procedure(Sender:TObject; Source:TMenuItem; Rebuild:Boolean) of object;;
  TMenuDrawItemEvent = procedure(Sender:TObject; ACanvas:TCanvas; ARect:TRect; Selected:Boolean) of object;;
  TAdvancedMenuDrawItemEvent = procedure(Sender:TObject; ACanvas:TCanvas; ARect:TRect; State:TOwnerDrawState) of object;;
  TMenuMeasureItemEvent = procedure(Sender:TObject; ACanvas:TCanvas; var Width:Integer; var Height:Integer) of object;;
  TMenuItemAutoFlag = (maAutomatic, maManual, maParent);
  TMenuAutoFlag = (maAutomatic, maManual);
  TMenuActionLink = class(TActionLink)
  public
    ................FClient:TMenuItem;//f18
    procedure AssignClient(AClient:TObject); virtual;//v0//005ACF30
    //function v8:?; virtual;//v8//005AD0F8
    //procedure v10(?:?; ?:?); virtual;//v10//005AD240
    //function IsCaptionLinked:?; virtual;//v24//005ACF80
    //function IsCheckedLinked:?; virtual;//v28//005ACFAC
    //function IsEnabledLinked:?; virtual;//v2C//005ACFD4
    //function IsGroupIndexLinked:?; virtual;//v30//005AD04C
    //function IsHelpContextLinked:?; virtual;//v34//005ACFFC
    //function IsHintLinked:?; virtual;//v3C//005AD020
    //function IsImageIndexLinked:?; virtual;//v40//005AD07C
    //function IsShortCutLinked:?; virtual;//v44//005AD0A4
    //function IsStatusActionLinked:?; virtual;//v48//005AD0D0
    //procedure v50(?:?); virtual;//v50//005AD120
    procedure SetCaption(const Value:UnicodeString); virtual;//v54//005AD140
    procedure SetChecked(Value:Boolean); virtual;//v58//005AD160
    procedure SetEnabled(Value:Boolean); virtual;//v5C//005AD180
    //procedure v64(?:?); virtual;//v64//005AD1A0
    //procedure v70(?:?); virtual;//v70//005AD1BC
    procedure SetImageIndex(Value:Integer); virtual;//v74//005AD1E0
    procedure SetShortCut(Value:Classes.TShortCut); virtual;//v78//005AD200
    procedure SetVisible(Value:Boolean); virtual;//v7C//005AD220
    //function v84:?; virtual;//v84//005ACF4C
  end;
  TMenuItemEnumerator = class(TObject)
  published
    function GetCurrent:TMenuItem;//005AD26C
    procedure TLicFile>.Compare(Left:TLicFile; Right:TLicFile);//0079EC18
  public
    FIndex:Integer;//f4
    FMenuItem:TMenuItem;//f8
    constructor Create;//00590430
  end;
  TMenuItem = class(TComponent)
  published
    procedure Add(Item:TMenuItem);//005B0ABC
    procedure HasParent;//005B0564
    procedure Remove(Item:TMenuItem);//005B0AD8
    function GetItem(Index:Integer):TMenuItem;//005B072C
    procedure SetParentComponent(Value:TComponent);//005B0CAC
    function GetParentMenu:TMenu;//005B0D00
    procedure Click;//005B09F0
    procedure TLicFile>.Compare(Left:TLicFile; Right:TLicFile);//0079EC18
    procedure Insert(Index:Integer; Item:TMenuItem);//005B08BC
    destructor Destroy();//005AD2FC
    constructor Create(AOwner:TComponent);//005AD278
    procedure Delete(Index:Integer);//005B0978
    procedure InitiateAction;//005B08AC
    procedure GetChildren(Root:TComponent; Proc:TGetChildProc);//005B07F8
    function GetImageList:TCustomImageList;//005AFDD0
    procedure GetParentComponent;//005B0C98
    function IndexOf(Item:TMenuItem):Integer;//005B0AA4
    function IsLine:Boolean;//005B1978
  public
    FCaption:string;//f40
    FRadioItem:Boolean;//f41
    FVisible:Boolean;//f42
    FGroupIndex:Byte;//f43
    FChecked:Boolean;//f44
    FEnabled:Boolean;//f45
    FDefault:Boolean;//f46
    FAutoHotkeys:TMenuItemAutoFlag;//f47
    FAutoLineReduction:TMenuItemAutoFlag;//f48
    FRadioItem:Boolean;//f49
    FVisible:Boolean;//f4A
    FGroupIndex:byte;//f4B
    FImageIndex:TImageIndex;//f4C
    FActionLink:TMenuActionLink;//f50
    FBreak:TMenuBreak;//f54
    FBitmap:TBitmap;//f58
    FCommand:word;//f5C
    FHelpContext:THelpContext;//f60
    FHint:string;//f64
    FItems:TList;//f68
    FShortCut:TShortCut;//f6C
    FParent:TMenuItem;//f70
    FMerged:TMenuItem;//f74
    FMergedWith:TMenuItem;//f78
    FMenu:TMenu;//f7C
    FStreamedRebuild:Boolean;//f80
    FImageChangeLink:TChangeLink;//f84
    FSubMenuImages:TCustomImageList;//f88
    FOnChange:TMenuChangeEvent;//f90
    f92:word;//f92
    f94:TMenu;//f94
    FOnClick:TNotifyEvent;//f98
    f9A:word;//f9A
    f9C:TPopupMenu;//f9C
    FOnDrawItem:TMenuDrawItemEvent;//fA0
    fA2:word;//fA2
    fA4:dword;//fA4
    FOnAdvancedDrawItem:TAdvancedMenuDrawItemEvent;//fA8
    fAA:word;//fAA
    fAC:dword;//fAC
    FOnMeasureItem:TMenuMeasureItemEvent;//fB0
    fB2:word;//fB2
    FHandle:HMENU;//fB4
    FAutoCheck:Boolean;//fB8
    FHandle:HMENU;//fBC
    destructor Destroy(); virtual;//005AD2FC
    procedure AssignTo(Dest:TPersistent); virtual;//v0//005B0FA4
    procedure DefineProperties(Filer:Classes.TFiler); virtual;//v4//005AD9DC
    procedure Loaded; virtual;//v10//005AD80C
    procedure Notification(AComponent:TComponent; Operation:TOperation); virtual;//v14//005B1028
    constructor Create(AOwner:TComponent); virtual;//v3C//005AD278
    //procedure v44(?:?; ?:?; ?:?); virtual;//v44//005AFC28
    //procedure v48(?:?; ?:?; ?:?); virtual;//v48//005ADC68
    //procedure v4C(?:?; ?:?; ?:?); virtual;//v4C//005B02C4
    //procedure v50(?:?); virtual;//v50//005B0B00
    procedure InitiateAction; virtual;//v54//005B08AC
    procedure Click; virtual;//v58//005B09F0
    procedure sub_005B0714; dynamic;//005B0714
    //procedure sub_005B0D3C(?:?; ?:?); dynamic;//005B0D3C
    procedure HasParent; dynamic;//005B0564
    procedure GetParentComponent; dynamic;//005B0C98
    procedure SetParentComponent(Value:TComponent); dynamic;//005B0CAC
    procedure SetChildOrder(Child:Classes.TComponent; Order:Integer); dynamic;//005B0830
    procedure GetChildren(Root:TComponent; Proc:TGetChildProc); dynamic;//005B07F8
    constructor Create;//0058F68C
    procedure ReadShortCutText(Reader:Classes.TReader);//005AD778
    procedure SetBreak(Value:TMenuBreak);//005B0568
    procedure SetCaption(const Value:UnicodeString);//005B0580
    procedure SetChecked(Value:Boolean);//005B05F4
    procedure SetEnabled(Value:Boolean);//005B0648
    procedure SetGroupIndex(Value:Byte);//005B06C0
    //function GetAction:?;//005B0704
    function GetCount:Integer;//005B071C
    procedure SetShortCut(Value:Classes.TShortCut);//005B0750
    procedure SetVisible(Value:Boolean);//005B0768
    procedure SetImageIndex(Value:ImgList.TImageIndex);//005B0780
    procedure SetMenuIndex(Value:Integer);//005B07B0
    procedure SetDefault(Value:Boolean);//005B0850
    //function GetBitmap:?;//005B0BA0
    procedure SetAction(Value:TBasicAction);//005B0BC8
    procedure SetBitmap(Value:TBitmap);//005B0C38
    procedure SetRadioItem(Value:Boolean);//005B0D10
    function IsStoredCaption(Value:string):Boolean;//005B0E84
    function IsStoredChecked(Value:Boolean):Boolean;//005B0EA4
    function IsStoredEnabled(Value:Boolean):Boolean;//005B0EC4
    function IsStoredHint(Value:string):Boolean;//005B0EE4
    function IsStoredHelpContext(Value:THelpContext):Boolean;//005B0F04
    function IsStoredImageIndex(Value:TImageIndex):Boolean;//005B0F24
    function IsStoredShortCut(Value:TShortCut):Boolean;//005B0F44
    function IsStoredVisible(Value:Boolean):Boolean;//005B0F64
    function IsStoredOnClick(Value:TNotifyEvent):Boolean;//005B0F84
    procedure SetSubMenuImages(Value:TCustomImageList);//005B107C
    procedure SetAutoHotkeys(Value:TMenuItemAutoFlag);//005B1960
    procedure SetAutoLineReduction(Value:TMenuItemAutoFlag);//005B1AE8
  end;
  TFindItemKind = (fkCommand, fkHandle, fkShortCut);
  TMenu = class(TComponent)
  published
    procedure ParentBiDiModeChanged;//005B2C38
    procedure IsShortCut(var Message:TWMKey);//005B2390
    procedure ProcessMenuChar(var Message:TWMMenuChar);//005B29EC
    procedure ParentBiDiModeChanged(AControl:TObject);//005B2C60
    function IsRightToLeft:Boolean;//005B2890
    destructor Destroy();//005B1C30
    function DispatchCommand(ACommand:Word):Boolean;//005B1E08
    constructor Create(AOwner:TComponent);//005B1B84
    procedure CreateMenuItem;//005B1C20
    //procedure GetChildren(Root:TComponent; Proc:TGetChildProc; ?:?);//005B1C64
    function GetHelpContext(Value:NativeUInt; ByCommand:Boolean):THelpContext;//005B1D98
    function DispatchPopup(AHandle:HMENU):Boolean;//005B1E2C
    function FindItem(Value:NativeUInt; Kind:TFindItemKind):TMenuItem;//005B1D68
  public
    FBiDiMode:TBiDiMode;//f40
    FItems:TMenuItem;//f44
    FParentBiDiMode:Boolean;//f45
    FWindowHandle:HWND;//f48
    FOwnerDraw:Boolean;//f4C
    FParentBiDiMode:Boolean;//f4D
    FImageChangeLink:TChangeLink;//f50
    FImages:TCustomImageList;//f54
    FOnChange:TMenuChangeEvent;//f58
    f5A:word;//f5A
    f5C:dword;//f5C
    FMenuImage:string;//f60
    destructor Destroy(); virtual;//005B1C30
    procedure Loaded; virtual;//v10//005B27C8
    procedure Notification(AComponent:TComponent; Operation:TOperation); virtual;//v14//005B2864
    constructor Create(AOwner:TComponent); virtual;//v3C//005B1B84
    //procedure v44(?:?); virtual;//v44//005B27B0
    procedure v48; virtual;//v48//005B1C88
    //procedure v4C(?:?; ?:?; ?:?); virtual;//v4C//005B27E0
    procedure IsShortCut(var Message:TWMKey); dynamic;//005B2390
    procedure CreateMenuItem; dynamic;//005B1C20
    //procedure sub_0049ECB8(?:?; ?:?); dynamic;//005B1C94
    //procedure GetChildren(Root:TComponent; Proc:TGetChildProc; ?:?); dynamic;//005B1C64
    function DoGetMenuString(Menu:Windows.HMENU; ItemID:Windows.UINT; Str:PChar; MaxCount:Integer; Flag:Windows.UINT):Integer;//005B2B68
  end;
  TMainMenu = class(TMenu)
  published
    procedure TLicFile>.Compare(Left:TLicFile; Right:TLicFile);//0079EC18
    procedure Unmerge(Menu:TMainMenu);//005B2D6C
    procedure Merge(Menu:TMainMenu);//005B2D50
  public
    FOle2Menu:HMENU;//f68
    FAutoMerge:Boolean;//f6C
    procedure v48; virtual;//v48//005B2DB4
    //procedure v4C(?:?; ?:?; ?:?); virtual;//v4C//005B2CF4
    procedure IsStoredBiDiMode(Value:TBiDiMode);//005B2484
    procedure SetOwnerDraw(Value:Boolean);//005B26E8
    procedure SetImages(Value:TCustomImageList);//005B2828
    procedure SetBiDiMode(Value:TBiDiMode);//005B2C14
    procedure SetParentBiDiMode(Value:Boolean);//005B2C28
    //function GetAutoHotkeys:?;//005B2C8C
    procedure SetAutoHotkeys(Value:TMenuAutoFlag);//005B2C9C
    //function GetAutoLineReduction:?;//005B2CB0
    procedure SetAutoLineReduction(Value:TMenuAutoFlag);//005B2CC0
    procedure SetAutoMerge(Value:Boolean);//005B2CD4
  end;
  TPopupAlignment = (paLeft, paRight, paCenter);
  TTrackButton = (tbRightButton, tbLeftButton);
  TMenuAnimations = (maLeftToRight, maRightToLeft, maTopToBottom, maBottomToTop, maNone);
  TMenuAnimation = set of TMenuAnimations;
  TPopupMenu = class(TMenu)
  published
    procedure TLicFile>.Compare(Left:TLicFile; Right:TLicFile);//0079EC18
    procedure Popup(X:Integer; Y:Integer);//005B351C
    constructor Create(AOwner:TComponent);//005B33AC
    destructor Destroy();//005B3424
  public
    FPopupPoint:TPoint;//f68
    FAutoPopup:Boolean;//f69
    FPopupComponent:TComponent;//f6C
    FAlignment:TPopupAlignment;//f70
    FAutoPopup:Boolean;//f71
    FPopupComponent:TComponent;//f74
    FTrackButton:TTrackButton;//f78
    FMenuAnimation:TMenuAnimation;//f79
    FOnPopup:TNotifyEvent;//f80
    f82:word;//f82
    f84:dword;//f84
    destructor Destroy(); virtual;//005B3424
    constructor Create(AOwner:TComponent); virtual;//v3C//005B33AC
    procedure v50; virtual;//v50//005B3454
    procedure Popup(X:Integer; Y:Integer); virtual;//v54//005B351C
    //function GetHelpContext:?;//005B3470
    procedure SetHelpContext(Value:THelpContext);//005B3478
  end;
  TPopupList = class(TList)
  published
    procedure Remove(Popup:TPopupMenu);//005B3390
    procedure Add(Popup:TPopupMenu);//005B3368
  public
    ...FWindow:HWND;//f10
    //procedure v10(?:?); virtual;//v10//005B2E10
    procedure MainWndProc(var Message:Messages.TMessage);//005B2DC4
  end;
  TMenuItemStack = class(TStack)
  published
    procedure ClearItem(AItem:TMenuItem);//005B35E8
  end;
  TMenuUpdater = class(TObject)
  published
    procedure DoIterateMenus(Menu1:TMenuItem; Menu2:TMenuItem);//005B11F0
  end;
    procedure RegisterStyleHook(ControlClass:TClass; StyleHookClass:TStyleHookClass);//0058DC6C
    procedure UnRegisterStyleHook(ControlClass:TClass; StyleHookClass:TStyleHookClass);//0058DD8C
    constructor Create(AHandle:NativeUInt);//0058DF48
    destructor Destroy();//0058DF78
    procedure Focused;//0058DFC8
    //function sub_0058DFE4(?:TSysControl):?;//0058DFE4
    //procedure sub_0058E100(?:TSysControl; ?:?);//0058E100
    procedure sub_0058E160(?:TSysControl);//0058E160
    //function sub_0058E194(?:?):?;//0058E194
    //function sub_0058E1E4(?:?):?;//0058E1E4
    //function sub_0058E1F0(?:?):?;//0058E1F0
    procedure sub_0058E1FC(?:TSysControl);//0058E1FC
    //function sub_0058E3B0(?:TSysControl):?;//0058E3B0
    //procedure sub_0058E3CC(?:?; ?:?);//0058E3CC
    //function sub_0058E3F0(?:TSysControl):?;//0058E3F0
    procedure sub_0058E3FC(?:TSysControl);//0058E3FC
    procedure sub_0058E41C(?:TSysControl; ?:Pointer);//0058E41C
    procedure UseRightToLeftAlignment;//0058E43C
    //function sub_0058E460(?:?):Boolean;//0058E460
    constructor sub_0058E480(AHandle:NativeUInt);//0058E480
    destructor Destroy();//0058E574
    //function sub_0058E610(?:TSysStyleHook; ?:?):?;//0058E610
    procedure sub_0058E62C;//0058E62C
    //procedure sub_0058E668(?:?; ?:?; ?:?);//0058E668
    //procedure sub_0058E7DC(?:?);//0058E7DC
    //function sub_0058E7F0(?:TSysStyleHook):?;//0058E7F0
    //function sub_0058E7F4(?:TSysStyleHook):?;//0058E7F4
    //function sub_0058E7F8(?:TSysStyleHook):?;//0058E7F8
    //function sub_0058E848:?;//0058E848
    procedure sub_0058E84C(?:TSysStyleHook; ?:TColor);//0058E84C
    //procedure sub_0058E890(?:TSysStyleHook; ?:?);//0058E890
    //procedure sub_0058E89C(?:?; ?:?);//0058E89C
    //procedure sub_0058E8AC(?:TSysStyleHook; ?:?);//0058E8AC
    //function sub_0058E8E8(?:TSysStyleHook):?;//0058E8E8
    procedure sub_0058E92C;//0058E92C
    function sub_0058E98C(?:TSysStyleHook):Boolean;//0058E98C
    procedure Invalidate;//0058E9A8
    procedure InvalidateNC;//0058E9C8
    procedure sub_0058E9DC;//0058E9DC
    //procedure sub_0058E9E0(?:?);//0058E9E0
    //procedure sub_0058EA14(?:TSysStyleHook; ?:TSysControl; ?:?);//0058EA14
    procedure sub_0058EBDC;//0058EBDC
    procedure sub_0058EBE0;//0058EBE0
    procedure Refresh;//0058EBE8
    //procedure WMEraseBkgnd(?:?);//0058EBF8
    //function sub_0058ED6C:?;//0058ED6C
    procedure WMNCPaint;//0058EDA0
    //procedure WMPaint(?:?);//0058EE78
    //procedure sub_0058F050(?:?);//0058F050
    destructor Themes.TStyleHookClass>.Destroy();//0058F308
    function Themes.TStyleHookClass>.GetEnumerator:TEnumerator<Vcl.Themes.TStyleHookClass>;//0058F32C
    //procedure Themes.TStyleHookClass>.ToArray(?:?);//0058F334
    function Themes.TStyleHookClass>.MoveNext:Boolean;//0058F3E8
    procedure sub_0058F438(?:TList<Vcl.Themes.TStyleHookClass>);//0058F438
    //procedure sub_0058F444(?:?; ?:?);//0058F444
    //procedure sub_0058F450(?:?; ?:?; ?:?);//0058F450
    procedure sub_0058F460;//0058F460
    //procedure sub_0058F468(?:?);//0058F468
    constructor sub_0058F480;//0058F480
    constructor sub_0058F4F8(AComparer:IComparer<Vcl.Themes.TStyleHookClass>);//0058F4F8
    destructor Themes.TStyleHookClass>.Destroy();//0058F5A8
    //procedure Themes.TStyleHookClass>.Error(Msg:string; Data:NativeInt; ?:?);//0058F5F4
    procedure Themes.TStyleHookClass>.Add(Value:TStyleHookClass);//0058F62C
    //procedure Themes.TStyleHookClass>.ToArray(?:?);//0058F63C
    function Themes.TStyleHookClass>.GetEnumerator:TList<Vcl.Themes.TStyleHookClass>.TEnumerator;//0058F650
    //function sub_0058F660(?:?):?;//0058F660
    procedure sub_0058F67C;//0058F67C
    procedure sub_0058F684;//0058F684
    function Themes.TStyleHookClass>.TEnumerator.MoveNext:Boolean;//0058F6D0
    //procedure sub_0058F6F0(?:TDictionary<System; ?:?; ?:?);//0058F6F0
    destructor Themes.TPair<System.TClass,System.Generics.Collections.TList<Vcl.Themes.TStyleHookClass>>>.Destroy();//0058F78C
    function Themes.TPair<System.TClass,System.Generics.Collections.TList<Vcl.Themes.TStyleHookClass>>>.GetEnumerator:TEnumerator<Vcl.Themes.TPair<System.TClass,System.Generics.Collections.TList<Vcl.Themes.TStyleHookClass>>>;//0058F7B0
    //procedure Themes.TPair<System.TClass,System.Generics.Collections.TList<Vcl.Themes.TStyleHookClass>>>.ToArray(?:?);//0058F7B8
    function Themes.TPair<System.TClass,System.Generics.Collections.TList<Vcl.Themes.TStyleHookClass>>>.MoveNext:Boolean;//0058F874
    procedure sub_0058F87C(?:TDictionary<System.TClass,System.Generics.Collections.TList<Vcl.Themes.TStyleHookClass>>; ?:Integer);//0058F87C
    //procedure sub_0058F8BC(?:?; ?:?);//0058F8BC
    procedure sub_0058F9EC(?:TDictionary<System);//0058F9EC
    //function sub_0058FA14(?:TDictionary<System; ?:TClass; ?:?):?;//0058FA14
    //function sub_0058FAC0(?:TDictionary<System; ?:TClass):?;//0058FAC0
    function TClass,System.Generics.Collections.TList<Vcl.Themes.TStyleHookClass>>.GetItem(Key:TClass):TList<Vcl.Themes.TStyleHookClass>;//0058FAE0
    //procedure sub_0058FB24(?:?; ?:?; ?:?; ?:?);//0058FB24
    //procedure sub_0058FB6C(?:TDictionary<System; ?:?; ?:?; ?:?; ?:?);//0058FB6C
    procedure sub_0058FBBC;//0058FBBC
    //procedure sub_0058FBC4(?:?);//0058FBC4
    //procedure sub_0058FBDC(?:?);//0058FBDC
    constructor sub_0058FBF4(ACapacity:Integer);//0058FBF4
    constructor sub_0058FC2C(ACapacity:Integer; AComparer:IEqualityComparer<System.TClass>);//0058FC2C
    destructor TClass,System.Generics.Collections.TList<Vcl.Themes.TStyleHookClass>>.Destroy();//0058FCE4
    procedure TClass,System.Generics.Collections.TList<Vcl.Themes.TStyleHookClass>>.Add(Key:TClass; Value:TList<Vcl.Themes.TStyleHookClass>);//0058FD20
    procedure TClass,System.Generics.Collections.TList<Vcl.Themes.TStyleHookClass>>.Clear;//0058FD84
    function TClass,System.Generics.Collections.TList<Vcl.Themes.TStyleHookClass>>.ContainsKey(Key:TClass):Boolean;//0058FE50
    //procedure TClass,System.Generics.Collections.TList<Vcl.Themes.TStyleHookClass>>.ToArray(?:?);//0058FE74
    function TClass,System.Generics.Collections.TList<Vcl.Themes.TStyleHookClass>>.GetEnumerator:TDictionary<System.TClass,System.Generics.Collections.TList<Vcl.Themes.TStyleHookClass>>.TPairEnumerator;//0058FECC
    //procedure sub_0058FEDC(?:TDictionary<System; ?:?; ?:?);//0058FEDC
    destructor TClass>.Destroy();//0058FF68
    function TClass>.GetEnumerator:TEnumerator<System.TClass>;//0058FF8C
    //procedure TClass>.ToArray(?:?);//0058FF94
    function TClass>.MoveNext:Boolean;//00590048
    procedure sub_00590058;//00590058
    constructor sub_00590060(ADictionary:TDictionary<System.TClass,System.Generics.Collections.TList<Vcl.Themes.TStyleHookClass>>);//00590060
    procedure TClass,System.Generics.Collections.TList<Vcl.Themes.TStyleHookClass>>.TKeyCollection.GetEnumerator;//0059009C
    //procedure TClass,System.Generics.Collections.TList<Vcl.Themes.TStyleHookClass>>.TKeyCollection.ToArray(?:?);//005900AC
    //function sub_005900C4(?:?):?;//005900C4
    procedure sub_005900D8;//005900D8
    procedure sub_005900E0;//005900E0
    constructor sub_005900E8(ADictionary:TDictionary<System.TClass,System.Generics.Collections.TList<Vcl.Themes.TStyleHookClass>>);//005900E8
    function TClass,System.Generics.Collections.TList<Vcl.Themes.TStyleHookClass>>.TKeyEnumerator.MoveNext:Boolean;//0059012C
    //procedure sub_00590164(?:TDictionary<System; ?:?; ?:?);//00590164
    destructor Themes.TList<Vcl.Themes.TStyleHookClass>>.Destroy();//005901F0
    function Themes.TList<Vcl.Themes.TStyleHookClass>>.GetEnumerator:TEnumerator<Vcl.Themes.TList<Vcl.Themes.TStyleHookClass>>;//00590214
    //procedure Themes.TList<Vcl.Themes.TStyleHookClass>>.ToArray(?:?);//0059021C
    function Themes.TList<Vcl.Themes.TStyleHookClass>>.MoveNext:Boolean;//005902D0
    procedure sub_005902E0;//005902E0
    constructor sub_005902E8(ADictionary:TDictionary<System.TClass,System.Generics.Collections.TList<Vcl.Themes.TStyleHookClass>>);//005902E8
    procedure TClass,System.Generics.Collections.TList<Vcl.Themes.TStyleHookClass>>.TValueCollection.GetEnumerator;//00590324
    //procedure TClass,System.Generics.Collections.TList<Vcl.Themes.TStyleHookClass>>.TValueCollection.ToArray(?:?);//00590334
    //function sub_0059034C(?:?):?;//0059034C
    procedure sub_00590360;//00590360
    procedure sub_00590368;//00590368
    constructor sub_00590370(ADictionary:TDictionary<System.TClass,System.Generics.Collections.TList<Vcl.Themes.TStyleHookClass>>);//00590370
    function TClass,System.Generics.Collections.TList<Vcl.Themes.TStyleHookClass>>.TValueEnumerator.MoveNext:Boolean;//005903B4
    //procedure sub_005903EC(?:TDictionary<System.TClass,System.Generics.Collections.TList<Vcl.Themes.TStyleHookClass>>.TPairEnumerator; ?:?);//005903EC
    //procedure sub_00590414(?:?);//00590414
    procedure sub_00590428;//00590428
    function TClass,System.Generics.Collections.TList<Vcl.Themes.TStyleHookClass>>.TPairEnumerator.MoveNext:Boolean;//00590474
    //procedure sub_005904AC(?:?; ?:TClass; ?:TStyleHookClass);//005904AC
    //procedure sub_005904B4(?:TDictionary<System; ?:?; ?:?);//005904B4
    destructor Themes.TPair<System.string,Vcl.Themes.TSysStyleHookClass>>.Destroy();//00590590
    function Themes.TPair<System.string,Vcl.Themes.TSysStyleHookClass>>.GetEnumerator:TEnumerator<Vcl.Themes.TPair<System.string,Vcl.Themes.TSysStyleHookClass>>;//005905B4
    //procedure Themes.TPair<System.string,Vcl.Themes.TSysStyleHookClass>>.ToArray(?:?);//005905BC
    function Themes.TPair<System.string,Vcl.Themes.TSysStyleHookClass>>.MoveNext:Boolean;//005906B4
    procedure sub_005906BC(?:TDictionary<System.string,Vcl.Themes.TSysStyleHookClass>; ?:Integer);//005906BC
    //procedure sub_005906FC(?:?; ?:?);//005906FC
    //function sub_0059082C(?:?; ?:?; ?:?):?;//0059082C
    //procedure sub_005908D8(?:?; ?:?; ?:?; ?:?);//005908D8
    procedure sub_00590928;//00590928
    //procedure sub_00590930(?:?);//00590930
    //procedure sub_00590948(?:?);//00590948
    constructor sub_00590960(ACapacity:Integer);//00590960
    constructor sub_00590998(ACapacity:Integer; AComparer:IEqualityComparer<System.string>);//00590998
    destructor string,Vcl.Themes.TSysStyleHookClass>.Destroy();//00590A50
    procedure string,Vcl.Themes.TSysStyleHookClass>.Clear;//00590A8C
    //procedure string,Vcl.Themes.TSysStyleHookClass>.ToArray(?:?);//00590B58
    procedure string,Vcl.Themes.TSysStyleHookClass>.GetEnumerator;//00590BB0
    //procedure sub_00590BC0(?:TDictionary<System; ?:?; ?:?);//00590BC0
    destructor string>.Destroy();//00590C84
    function string>.GetEnumerator:TEnumerator<System.string>;//00590CA8
    //procedure string>.ToArray(?:?);//00590CB0
    function string>.MoveNext:Boolean;//00590D98
    procedure sub_00590DA8;//00590DA8
    constructor sub_00590DB0(ADictionary:TDictionary<System.string,Vcl.Themes.TSysStyleHookClass>);//00590DB0
    procedure string,Vcl.Themes.TSysStyleHookClass>.TKeyCollection.GetEnumerator;//00590DEC
    //procedure string,Vcl.Themes.TSysStyleHookClass>.TKeyCollection.ToArray(?:?);//00590DFC
    //procedure sub_00590E14(?:TDictionary<System.string,Vcl.Themes.TSysStyleHookClass>.TKeyEnumerator; ?:?);//00590E14
    //procedure sub_00590E34(?:?);//00590E34
    procedure sub_00590E48;//00590E48
    constructor sub_00590E50(ADictionary:TDictionary<System.string,Vcl.Themes.TSysStyleHookClass>);//00590E50
    function string,Vcl.Themes.TSysStyleHookClass>.TKeyEnumerator.MoveNext:Boolean;//00590E94
    //procedure sub_00590ECC(?:TDictionary<System; ?:?; ?:?);//00590ECC
    destructor Themes.TSysStyleHookClass>.Destroy();//00590F58
    function Themes.TSysStyleHookClass>.GetEnumerator:TEnumerator<Vcl.Themes.TSysStyleHookClass>;//00590F7C
    //procedure Themes.TSysStyleHookClass>.ToArray(?:?);//00590F84
    function Themes.TSysStyleHookClass>.MoveNext:Boolean;//00591038
    procedure sub_00591048;//00591048
    constructor sub_00591050(ADictionary:TDictionary<System.string,Vcl.Themes.TSysStyleHookClass>);//00591050
    procedure string,Vcl.Themes.TSysStyleHookClass>.TValueCollection.GetEnumerator;//0059108C
    //procedure string,Vcl.Themes.TSysStyleHookClass>.TValueCollection.ToArray(?:?);//0059109C
    //function sub_005910B4(?:?):?;//005910B4
    procedure sub_005910C8;//005910C8
    procedure sub_005910D0;//005910D0
    constructor sub_005910D8(ADictionary:TDictionary<System.string,Vcl.Themes.TSysStyleHookClass>);//005910D8
    function string,Vcl.Themes.TSysStyleHookClass>.TValueEnumerator.MoveNext:Boolean;//0059111C
    //procedure sub_00591154(?:TDictionary<System.string,Vcl.Themes.TSysStyleHookClass>.TPairEnumerator; ?:?);//00591154
    //procedure sub_00591188(?:?);//00591188
    procedure sub_0059119C;//0059119C
    constructor sub_005911A4(ADictionary:TDictionary<System.string,Vcl.Themes.TSysStyleHookClass>);//005911A4
    function string,Vcl.Themes.TSysStyleHookClass>.TPairEnumerator.MoveNext:Boolean;//005911E8
    //procedure sub_00591220(?:?; ?:?);//00591220
    //procedure sub_00591250(?:?; ?:?);//00591250
    //procedure sub_00591280(?:TDictionary<Winapi; ?:?; ?:?);//00591280
    destructor Themes.TPair<Winapi.Windows.HWND,Vcl.Themes.TSysStyleHook>>.Destroy();//0059131C
    function Themes.TPair<Winapi.Windows.HWND,Vcl.Themes.TSysStyleHook>>.GetEnumerator:TEnumerator<Vcl.Themes.TPair<Winapi.Windows.HWND,Vcl.Themes.TSysStyleHook>>;//00591340
    //procedure Themes.TPair<Winapi.Windows.HWND,Vcl.Themes.TSysStyleHook>>.ToArray(?:?);//00591348
    function Themes.TPair<Winapi.Windows.HWND,Vcl.Themes.TSysStyleHook>>.MoveNext:Boolean;//00591404
    procedure sub_0059140C(?:TDictionary<Winapi.Windows.HWND,Vcl.Themes.TSysStyleHook>; ?:Integer);//0059140C
    //procedure sub_0059144C(?:?; ?:?);//0059144C
    procedure sub_0059157C(?:TDictionary<Winapi);//0059157C
    //function sub_005915A4(?:TDictionary<Winapi; ?:HWND; ?:?):?;//005915A4
    //function sub_00591650(?:TDictionary<Winapi; ?:HWND):?;//00591650
    //procedure sub_00591670(?:?; ?:?; ?:?; ?:?);//00591670
    //procedure sub_005916B8(?:TDictionary<Winapi; ?:?; ?:?; ?:?; ?:?);//005916B8
    procedure sub_00591708;//00591708
    //procedure sub_00591710(?:?);//00591710
    //procedure sub_00591728(?:?);//00591728
    constructor sub_00591740(ACapacity:Integer);//00591740
    constructor sub_00591778(ACapacity:Integer; AComparer:IEqualityComparer<Winapi.Windows.HWND>);//00591778
    destructor Windows.HWND,Vcl.Themes.TSysStyleHook>.Destroy();//00591830
    procedure Windows.HWND,Vcl.Themes.TSysStyleHook>.Add(Key:HWND; Value:TSysStyleHook);//0059186C
    procedure Windows.HWND,Vcl.Themes.TSysStyleHook>.Clear;//005918D0
    function Windows.HWND,Vcl.Themes.TSysStyleHook>.ContainsKey(Key:HWND):Boolean;//0059199C
    //procedure Windows.HWND,Vcl.Themes.TSysStyleHook>.ToArray(?:?);//005919C0
    //function sub_005919F8(?:?):?;//005919F8
    procedure Windows.HWND,Vcl.Themes.TSysStyleHook>.GetEnumerator;//00591A18
    //procedure sub_00591A28(?:TDictionary<Winapi; ?:?; ?:?);//00591A28
    destructor Windows.HWND>.Destroy();//00591AB4
    function Windows.HWND>.GetEnumerator:TEnumerator<Winapi.Windows.HWND>;//00591AD8
    //procedure Windows.HWND>.ToArray(?:?);//00591AE0
    function Windows.HWND>.MoveNext:Boolean;//00591B94
    procedure sub_00591BA4;//00591BA4
    constructor sub_00591BAC(ADictionary:TDictionary<Winapi.Windows.HWND,Vcl.Themes.TSysStyleHook>);//00591BAC
    procedure Windows.HWND,Vcl.Themes.TSysStyleHook>.TKeyCollection.GetEnumerator;//00591BE8
    //procedure Windows.HWND,Vcl.Themes.TSysStyleHook>.TKeyCollection.ToArray(?:?);//00591BF8
    //function sub_00591C10(?:?):?;//00591C10
    procedure sub_00591C24;//00591C24
    procedure sub_00591C2C;//00591C2C
    constructor sub_00591C34(ADictionary:TDictionary<Winapi.Windows.HWND,Vcl.Themes.TSysStyleHook>);//00591C34
    function Windows.HWND,Vcl.Themes.TSysStyleHook>.TKeyEnumerator.MoveNext:Boolean;//00591C78
    //procedure sub_00591CB0(?:TDictionary<Winapi; ?:?; ?:?);//00591CB0
    destructor Themes.TSysStyleHook>.Destroy();//00591D3C
    function Themes.TSysStyleHook>.GetEnumerator:TEnumerator<Vcl.Themes.TSysStyleHook>;//00591D60
    //procedure Themes.TSysStyleHook>.ToArray(?:?);//00591D68
    function Themes.TSysStyleHook>.MoveNext:Boolean;//00591E1C
    procedure sub_00591E2C;//00591E2C
    constructor sub_00591E34(ADictionary:TDictionary<Winapi.Windows.HWND,Vcl.Themes.TSysStyleHook>);//00591E34
    function Windows.HWND,Vcl.Themes.TSysStyleHook>.TValueCollection.GetEnumerator:TDictionary<Winapi.Windows.HWND,Vcl.Themes.TSysStyleHook>.TValueEnumerator;//00591E70
    //procedure Windows.HWND,Vcl.Themes.TSysStyleHook>.TValueCollection.ToArray(?:?);//00591E80
    //function sub_00591E98(?:TDictionary<Winapi.Windows.HWND,Vcl.Themes.TSysStyleHook>.TValueEnumerator):?;//00591E98
    procedure sub_00591EAC;//00591EAC
    procedure sub_00591EB4;//00591EB4
    constructor sub_00591EBC(ADictionary:TDictionary<Winapi.Windows.HWND,Vcl.Themes.TSysStyleHook>);//00591EBC
    function Windows.HWND,Vcl.Themes.TSysStyleHook>.TValueEnumerator.MoveNext:Boolean;//00591F00
    //procedure sub_00591F38(?:TDictionary<Winapi.Windows.HWND,Vcl.Themes.TSysStyleHook>.TPairEnumerator; ?:?);//00591F38
    //procedure sub_00591F60(?:?);//00591F60
    procedure sub_00591F74;//00591F74
    constructor sub_00591F7C(ADictionary:TDictionary<Winapi.Windows.HWND,Vcl.Themes.TSysStyleHook>);//00591F7C
    function Windows.HWND,Vcl.Themes.TSysStyleHook>.TPairEnumerator.MoveNext:Boolean;//00591FC0
    //procedure sub_00591FF8(?:?; ?:?);//00591FF8
    //procedure sub_00592028(?:?; ?:?);//00592028
    //procedure sub_00592058(?:TDictionary<Winapi; ?:?; ?:?);//00592058
    destructor Themes.TPair<Winapi.Windows.HWND,Vcl.Themes.TChildControlInfo>>.Destroy();//005920F4
    function Themes.TPair<Winapi.Windows.HWND,Vcl.Themes.TChildControlInfo>>.GetEnumerator:TEnumerator<Vcl.Themes.TPair<Winapi.Windows.HWND,Vcl.Themes.TChildControlInfo>>;//00592118
    //procedure Themes.TPair<Winapi.Windows.HWND,Vcl.Themes.TChildControlInfo>>.ToArray(?:?);//00592120
    function Themes.TPair<Winapi.Windows.HWND,Vcl.Themes.TChildControlInfo>>.MoveNext:Boolean;//005921DC
    procedure sub_005921E4(?:TDictionary<Winapi.Windows.HWND,Vcl.Themes.TChildControlInfo>; ?:Integer);//005921E4
    //procedure sub_00592224(?:?; ?:?);//00592224
    //function sub_00592358(?:TDictionary<Winapi; ?:HWND; ?:?):?;//00592358
    //function sub_00592404(?:TDictionary<Winapi; ?:HWND):?;//00592404
    //procedure Windows.HWND,Vcl.Themes.TChildControlInfo>.GetItem(Key:HWND; ?:?);//00592424
    //procedure sub_0059247C(?:?; ?:?; ?:?; ?:?);//0059247C
    procedure sub_005924D4;//005924D4
    //procedure sub_005924DC(?:?);//005924DC
    //procedure sub_005924F4(?:?);//005924F4
    constructor sub_0059250C(ACapacity:Integer);//0059250C
    constructor sub_00592544(ACapacity:Integer; AComparer:IEqualityComparer<Winapi.Windows.HWND>);//00592544
    destructor Windows.HWND,Vcl.Themes.TChildControlInfo>.Destroy();//005925FC
    procedure Windows.HWND,Vcl.Themes.TChildControlInfo>.Clear;//00592638
    //procedure Windows.HWND,Vcl.Themes.TChildControlInfo>.ToArray(?:?);//00592704
    //function sub_0059271C(?:?):?;//0059271C
    procedure Windows.HWND,Vcl.Themes.TChildControlInfo>.GetEnumerator;//0059275C
    procedure sub_00592774;//00592774
    constructor sub_0059277C(ADictionary:TDictionary<Winapi.Windows.HWND,Vcl.Themes.TChildControlInfo>);//0059277C
    function Windows.HWND,Vcl.Themes.TChildControlInfo>.TKeyCollection.GetEnumerator:TDictionary<Winapi.Windows.HWND,Vcl.Themes.TChildControlInfo>.TKeyEnumerator;//005927B8
    //procedure Windows.HWND,Vcl.Themes.TChildControlInfo>.TKeyCollection.ToArray(?:?);//005927C8
    //function sub_005927E0(?:TDictionary<Winapi.Windows.HWND,Vcl.Themes.TChildControlInfo>.TKeyEnumerator):?;//005927E0
    procedure sub_005927F4;//005927F4
    procedure sub_005927FC;//005927FC
    constructor sub_00592804(ADictionary:TDictionary<Winapi.Windows.HWND,Vcl.Themes.TChildControlInfo>);//00592804
    function Windows.HWND,Vcl.Themes.TChildControlInfo>.TKeyEnumerator.MoveNext:Boolean;//00592848
    //procedure sub_00592880(?:TDictionary<Winapi; ?:?; ?:?);//00592880
    destructor Themes.TChildControlInfo>.Destroy();//00592924
    function Themes.TChildControlInfo>.GetEnumerator:TEnumerator<Vcl.Themes.TChildControlInfo>;//00592948
    //procedure Themes.TChildControlInfo>.ToArray(?:?);//00592950
    function Themes.TChildControlInfo>.MoveNext:Boolean;//00592A0C
    procedure sub_00592A1C;//00592A1C
    constructor sub_00592A24(ADictionary:TDictionary<Winapi.Windows.HWND,Vcl.Themes.TChildControlInfo>);//00592A24
    procedure Windows.HWND,Vcl.Themes.TChildControlInfo>.TValueCollection.GetEnumerator;//00592A60
    //procedure Windows.HWND,Vcl.Themes.TChildControlInfo>.TValueCollection.ToArray(?:?);//00592A70
    //procedure sub_00592A88(?:TDictionary<Winapi.Windows.HWND,Vcl.Themes.TChildControlInfo>.TValueEnumerator; ?:?);//00592A88
    //procedure sub_00592AAC(?:?);//00592AAC
    procedure sub_00592AC0;//00592AC0
    constructor sub_00592AC8(ADictionary:TDictionary<Winapi.Windows.HWND,Vcl.Themes.TChildControlInfo>);//00592AC8
    function Windows.HWND,Vcl.Themes.TChildControlInfo>.TValueEnumerator.MoveNext:Boolean;//00592B0C
    //procedure sub_00592B44(?:TDictionary<Winapi.Windows.HWND,Vcl.Themes.TChildControlInfo>.TPairEnumerator; ?:?);//00592B44
    //procedure sub_00592B7C(?:?);//00592B7C
    procedure sub_00592B90;//00592B90
    constructor sub_00592B98(ADictionary:TDictionary<Winapi.Windows.HWND,Vcl.Themes.TChildControlInfo>);//00592B98
    function Windows.HWND,Vcl.Themes.TChildControlInfo>.TPairEnumerator.MoveNext:Boolean;//00592BDC
    //procedure sub_00592C14(?:?; ?:?);//00592C14
    //procedure sub_00592C44(?:?; ?:?);//00592C44
    //procedure sub_00592C74(?:TDictionary<System; ?:?; ?:?);//00592C74
    destructor Themes.TPair<System.string,Vcl.Themes.TStyleManager.TSourceInfo>>.Destroy();//00592D50
    function Themes.TPair<System.string,Vcl.Themes.TStyleManager.TSourceInfo>>.GetEnumerator:TEnumerator<Vcl.Themes.TPair<System.string,Vcl.Themes.TStyleManager.TSourceInfo>>;//00592D74
    //procedure Themes.TPair<System.string,Vcl.Themes.TStyleManager.TSourceInfo>>.ToArray(?:?);//00592D7C
    function Themes.TPair<System.string,Vcl.Themes.TStyleManager.TSourceInfo>>.MoveNext:Boolean;//00592E74
    procedure sub_00592E7C(?:TDictionary<System.string,Vcl.Themes.TStyleManager.TSourceInfo>; ?:Integer);//00592E7C
    //procedure sub_00592EBC(?:?; ?:?);//00592EBC
    //function sub_00592FF0(?:?; ?:?; ?:?):?;//00592FF0
    //procedure sub_0059309C(?:?; ?:?; ?:?; ?:?);//0059309C
    procedure sub_005930F8;//005930F8
    //procedure sub_00593100(?:?);//00593100
    //procedure sub_00593118(?:?);//00593118
    constructor string,Vcl.Themes.TStyleManager.TSourceInfo>.Create;//00593130
    constructor sub_00593168(ACapacity:Integer; AComparer:IEqualityComparer<System.string>);//00593168
    destructor string,Vcl.Themes.TStyleManager.TSourceInfo>.Destroy();//00593220
    procedure string,Vcl.Themes.TStyleManager.TSourceInfo>.Clear;//0059325C
    //procedure string,Vcl.Themes.TStyleManager.TSourceInfo>.ToArray(?:?);//00593328
    function string,Vcl.Themes.TStyleManager.TSourceInfo>.GetEnumerator:TDictionary<System.string,Vcl.Themes.TStyleManager.TSourceInfo>.TPairEnumerator;//00593380
    procedure sub_00593398;//00593398
    constructor sub_005933A0(ADictionary:TDictionary<System.string,Vcl.Themes.TStyleManager.TSourceInfo>);//005933A0
    procedure string,Vcl.Themes.TStyleManager.TSourceInfo>.TKeyCollection.GetEnumerator;//005933DC
    //procedure string,Vcl.Themes.TStyleManager.TSourceInfo>.TKeyCollection.ToArray(?:?);//005933EC
    //procedure sub_00593404(?:TDictionary<System.string,Vcl.Themes.TStyleManager.TSourceInfo>.TKeyEnumerator; ?:?);//00593404
    //procedure sub_00593424(?:?);//00593424
    procedure sub_00593438;//00593438
    constructor sub_00593440(ADictionary:TDictionary<System.string,Vcl.Themes.TStyleManager.TSourceInfo>);//00593440
    function string,Vcl.Themes.TStyleManager.TSourceInfo>.TKeyEnumerator.MoveNext:Boolean;//00593484
    //procedure sub_005934BC(?:TDictionary<System; ?:?; ?:?);//005934BC
    destructor Themes.TStyleManager.TSourceInfo>.Destroy();//00593558
    function Themes.TStyleManager.TSourceInfo>.GetEnumerator:TEnumerator<Vcl.Themes.TStyleManager.TSourceInfo>;//0059357C
    //procedure Themes.TStyleManager.TSourceInfo>.ToArray(?:?);//00593584
    function Themes.TStyleManager.TSourceInfo>.MoveNext:Boolean;//00593640
    procedure sub_00593650;//00593650
    constructor sub_00593658(ADictionary:TDictionary<System.string,Vcl.Themes.TStyleManager.TSourceInfo>);//00593658
    procedure string,Vcl.Themes.TStyleManager.TSourceInfo>.TValueCollection.GetEnumerator;//00593694
    //procedure string,Vcl.Themes.TStyleManager.TSourceInfo>.TValueCollection.ToArray(?:?);//005936A4
    //procedure sub_005936BC(?:TDictionary<System.string,Vcl.Themes.TStyleManager.TSourceInfo>.TValueEnumerator; ?:?);//005936BC
    //procedure sub_005936D8(?:?);//005936D8
    procedure sub_005936EC;//005936EC
    constructor sub_005936F4(ADictionary:TDictionary<System.string,Vcl.Themes.TStyleManager.TSourceInfo>);//005936F4
    function string,Vcl.Themes.TStyleManager.TSourceInfo>.TValueEnumerator.MoveNext:Boolean;//00593738
    //procedure sub_00593770(?:TDictionary<System.string,Vcl.Themes.TStyleManager.TSourceInfo>.TPairEnumerator; ?:?);//00593770
    //procedure sub_005937A8(?:?);//005937A8
    procedure sub_005937BC;//005937BC
    constructor sub_005937C4(ADictionary:TDictionary<System.string,Vcl.Themes.TStyleManager.TSourceInfo>);//005937C4
    function string,Vcl.Themes.TStyleManager.TSourceInfo>.TPairEnumerator.MoveNext:Boolean;//00593808
    destructor Themes.TStyleManager.TStyleClassDescriptor>.Destroy();//00593840
    function Themes.TStyleManager.TStyleClassDescriptor>.GetEnumerator:TEnumerator<Vcl.Themes.TStyleManager.TStyleClassDescriptor>;//00593864
    //procedure Themes.TStyleManager.TStyleClassDescriptor>.ToArray(?:?);//0059386C
    function Themes.TStyleManager.TStyleClassDescriptor>.MoveNext:Boolean;//00593964
    procedure sub_005939B4(?:TList<Vcl.Themes.TStyleManager.TStyleClassDescriptor>);//005939B4
    //procedure sub_005939C0(?:?);//005939C0
    //procedure sub_005939D0(?:?);//005939D0
    procedure sub_005939E0;//005939E0
    //procedure sub_005939E8(?:?);//005939E8
    constructor Themes.TStyleManager.TStyleClassDescriptor>.Create();//00593A00
    constructor sub_00593A78(AComparer:IComparer<Vcl.Themes.TStyleManager.TStyleClassDescriptor>);//00593A78
    destructor Themes.TStyleManager.TStyleClassDescriptor>.Destroy();//00593B28
    //procedure Themes.TStyleManager.TStyleClassDescriptor>.Error(Msg:string; Data:NativeInt; ?:?);//00593B74
    procedure Themes.TStyleManager.TStyleClassDescriptor>.Add(Value:TStyleManager.TStyleClassDescriptor);//00593BAC
    //procedure Themes.TStyleManager.TStyleClassDescriptor>.ToArray(?:?);//00593BC0
    procedure Themes.TStyleManager.TStyleClassDescriptor>.GetEnumerator;//00593BD4
    //procedure sub_00593BE4(?:TList<Vcl.Themes.TStyleManager.TStyleClassDescriptor>.TEnumerator; ?:?);//00593BE4
    //procedure sub_00593C70(?:?);//00593C70
    procedure sub_00593C84;//00593C84
    constructor sub_00593C8C(AList:TList<Vcl.Themes.TStyleManager.TStyleClassDescriptor>);//00593C8C
    function Themes.TStyleManager.TStyleClassDescriptor>.TEnumerator.MoveNext:Boolean;//00593CD0
    destructor Themes.TCustomStyleEngineClass>.Destroy();//00593CF0
    function Themes.TCustomStyleEngineClass>.GetEnumerator:TEnumerator<Vcl.Themes.TCustomStyleEngineClass>;//00593D14
    //procedure Themes.TCustomStyleEngineClass>.ToArray(?:?);//00593D1C
    function Themes.TCustomStyleEngineClass>.MoveNext:Boolean;//00593DD0
    procedure sub_00593E20(?:TList<Vcl.Themes.TCustomStyleEngineClass>);//00593E20
    //procedure sub_00593E2C(?:?; ?:?);//00593E2C
    //procedure sub_00593E38(?:?; ?:?; ?:?);//00593E38
    procedure sub_00593E48;//00593E48
    //procedure sub_00593E50(?:?);//00593E50
    constructor Themes.TCustomStyleEngineClass>.Create();//00593E68
    constructor sub_00593EE0(AComparer:IComparer<Vcl.Themes.TCustomStyleEngineClass>);//00593EE0
    destructor Themes.TCustomStyleEngineClass>.Destroy();//00593F90
    //procedure Themes.TCustomStyleEngineClass>.Error(Msg:string; Data:NativeInt; ?:?);//00593FDC
    procedure Themes.TCustomStyleEngineClass>.Add(Value:TCustomStyleEngineClass);//00594014
    //procedure Themes.TCustomStyleEngineClass>.ToArray(?:?);//00594024
    procedure Themes.TCustomStyleEngineClass>.GetEnumerator;//00594038
    //function sub_00594048(?:?):?;//00594048
    procedure sub_00594064;//00594064
    procedure sub_0059406C;//0059406C
    constructor sub_00594074(AList:TList<Vcl.Themes.TCustomStyleEngineClass>);//00594074
    function Themes.TCustomStyleEngineClass>.TEnumerator.MoveNext:Boolean;//005940B8
    destructor Themes.TCustomStyleServices>.Destroy();//005940D8
    function Themes.TCustomStyleServices>.GetEnumerator:TEnumerator<Vcl.Themes.TCustomStyleServices>;//005940FC
    //procedure Themes.TCustomStyleServices>.ToArray(?:?);//00594104
    function Themes.TCustomStyleServices>.MoveNext:Boolean;//005941B8
    procedure sub_00594208(?:TList<Vcl.Themes.TCustomStyleServices>);//00594208
    //procedure sub_00594214(?:?; ?:?);//00594214
    //procedure sub_00594220(?:?; ?:?; ?:?);//00594220
    procedure sub_00594230;//00594230
    //procedure sub_00594238(?:?);//00594238
    constructor Themes.TCustomStyleServices>.Create();//00594250
    constructor sub_005942C8(AComparer:IComparer<Vcl.Themes.TCustomStyleServices>);//005942C8
    destructor Themes.TCustomStyleServices>.Destroy();//00594378
    //procedure Themes.TCustomStyleServices>.Error(Msg:string; Data:NativeInt; ?:?);//005943C4
    procedure Themes.TCustomStyleServices>.Add(Value:TCustomStyleServices);//005943FC
    //procedure Themes.TCustomStyleServices>.ToArray(?:?);//0059440C
    procedure Themes.TCustomStyleServices>.GetEnumerator;//00594420
    //function sub_00594430(?:?):?;//00594430
    procedure sub_0059444C;//0059444C
    procedure sub_00594454;//00594454
    constructor sub_0059445C(AList:TList<Vcl.Themes.TCustomStyleServices>);//0059445C
    function Themes.TCustomStyleServices>.TEnumerator.MoveNext:Boolean;//005944A0
    destructor Types.TPoint>.Destroy();//005944C0
    function Types.TPoint>.GetEnumerator:TEnumerator<System.Types.TPoint>;//005944E4
    //procedure Types.TPoint>.ToArray(?:?);//005944EC
    function Types.TPoint>.MoveNext:Boolean;//005945A8
    procedure sub_005945F8(?:TList<System.Types.TPoint>);//005945F8
    //procedure sub_00594604(?:?);//00594604
    //procedure sub_00594614(?:?);//00594614
    procedure sub_00594624;//00594624
    //procedure sub_0059462C(?:?);//0059462C
    constructor sub_00594644;//00594644
    constructor sub_005946BC(AComparer:IComparer<System.Types.TPoint>);//005946BC
    destructor Types.TPoint>.Destroy();//0059476C
    //procedure Types.TPoint>.Error(Msg:string; Data:NativeInt; ?:?);//005947B8
    procedure Types.TPoint>.Add(Value:TPoint);//005947F0
    procedure Types.TPoint>.AddRange(Values:TPoint);//00594804
    //procedure Types.TPoint>.InsertRange(Index:Integer; Values:TPoint; ?:?);//00594818
    //procedure Types.TPoint>.ToArray(?:?);//00594834
    procedure Types.TPoint>.GetEnumerator;//00594848
    //procedure sub_00594858(?:TList<System.Types.TPoint>.TEnumerator; ?:?);//00594858
    //procedure sub_00594894(?:?);//00594894
    procedure sub_005948A8;//005948A8
    constructor sub_005948B0(AList:TList<System.Types.TPoint>);//005948B0
    function Types.TPoint>.TEnumerator.MoveNext:Boolean;//005948F4
    procedure sub_0059497C(?:TList<Vcl.Themes.TPair<System.TClass,System.Generics.Collections.TList<Vcl.Themes.TStyleHookClass>>>);//0059497C
    //procedure sub_00594988(?:?);//00594988
    //procedure sub_00594998(?:?);//00594998
    procedure sub_005949A8;//005949A8
    //procedure sub_005949B0(?:?);//005949B0
    //procedure sub_00594BAC(?:TList<Vcl.Themes.TPair<System.TClass,System.Generics.Collections.TList<Vcl.Themes.TStyleHookClass>>>.TEnumerator; ?:?);//00594BAC
    //procedure sub_00594BE8(?:?);//00594BE8
    procedure sub_00594BFC;//00594BFC
    //procedure sub_00594C68(?:?);//00594C68
    procedure sub_00594CD0(?:TList<System.TClass>);//00594CD0
    //procedure sub_00594CDC(?:?; ?:?);//00594CDC
    //procedure sub_00594CE8(?:?; ?:?; ?:?);//00594CE8
    procedure sub_00594CF8;//00594CF8
    //procedure sub_00594D00(?:?);//00594D00
    //function sub_00594EF8(?:?):?;//00594EF8
    procedure sub_00594F14;//00594F14
    procedure sub_00594F1C;//00594F1C
    procedure sub_00594FD0(?:TList<Vcl.Themes.TList<Vcl.Themes.TStyleHookClass>>);//00594FD0
    //procedure sub_00594FDC(?:?; ?:?);//00594FDC
    //procedure sub_00594FE8(?:?; ?:?; ?:?);//00594FE8
    procedure sub_00594FF8;//00594FF8
    //procedure sub_00595000(?:?);//00595000
    //function sub_005951F8(?:?):?;//005951F8
    procedure sub_00595214;//00595214
    procedure sub_0059521C;//0059521C
    procedure sub_005952D0(?:TList<Vcl.Themes.TPair<System.string,Vcl.Themes.TSysStyleHookClass>>);//005952D0
    //procedure sub_005952DC(?:?);//005952DC
    //procedure sub_005952EC(?:?);//005952EC
    procedure sub_005952FC;//005952FC
    //procedure sub_00595304(?:?);//00595304
    //procedure sub_00595500(?:TList<Vcl.Themes.TPair<System.string,Vcl.Themes.TSysStyleHookClass>>.TEnumerator; ?:?);//00595500
    //procedure sub_00595588(?:?);//00595588
    procedure sub_0059559C;//0059559C
    procedure sub_00595650(?:TList<Vcl.Themes.TSysStyleHookClass>);//00595650
    //procedure sub_0059565C(?:?; ?:?);//0059565C
    //procedure sub_00595668(?:?; ?:?; ?:?);//00595668
    procedure sub_00595678;//00595678
    //procedure sub_00595680(?:?);//00595680
    //function sub_00595878(?:?):?;//00595878
    procedure sub_00595894;//00595894
    procedure sub_0059589C;//0059589C
    procedure sub_00595950(?:TList<Vcl.Themes.TPair<Winapi.Windows.HWND,Vcl.Themes.TSysStyleHook>>);//00595950
    //procedure sub_0059595C(?:?);//0059595C
    //procedure sub_0059596C(?:?);//0059596C
    procedure sub_0059597C;//0059597C
    //procedure sub_00595984(?:?);//00595984
    //procedure sub_00595B80(?:TList<Vcl.Themes.TPair<Winapi.Windows.HWND,Vcl.Themes.TSysStyleHook>>.TEnumerator; ?:?);//00595B80
    //procedure sub_00595BBC(?:?);//00595BBC
    procedure sub_00595BD0;//00595BD0
    //procedure sub_00595C3C(?:?);//00595C3C
    procedure sub_00595CA4(?:TList<Winapi.Windows.HWND>);//00595CA4
    //procedure sub_00595CB0(?:?; ?:?);//00595CB0
    //procedure sub_00595CBC(?:?; ?:?; ?:?);//00595CBC
    procedure sub_00595CCC;//00595CCC
    //procedure sub_00595CD4(?:?);//00595CD4
    //function sub_00595ECC(?:?):?;//00595ECC
    procedure sub_00595EE8;//00595EE8
    procedure sub_00595EF0;//00595EF0
    procedure sub_00595FA4(?:TList<Vcl.Themes.TSysStyleHook>);//00595FA4
    //procedure sub_00595FB0(?:?; ?:?);//00595FB0
    //procedure sub_00595FBC(?:?; ?:?; ?:?);//00595FBC
    procedure sub_00595FCC;//00595FCC
    //procedure sub_00595FD4(?:?);//00595FD4
    //function sub_005961CC(?:?):?;//005961CC
    procedure sub_005961E8;//005961E8
    procedure sub_005961F0;//005961F0
    procedure sub_005962A4(?:TList<Vcl.Themes.TPair<Winapi.Windows.HWND,Vcl.Themes.TChildControlInfo>>);//005962A4
    //procedure sub_005962B0(?:?);//005962B0
    //procedure sub_005962C0(?:?);//005962C0
    procedure sub_005962D0;//005962D0
    //procedure sub_005962D8(?:?);//005962D8
    //procedure sub_005964D4(?:TList<Vcl.Themes.TPair<Winapi.Windows.HWND,Vcl.Themes.TChildControlInfo>>.TEnumerator; ?:?);//005964D4
    //procedure sub_00596510(?:?);//00596510
    procedure sub_00596524;//00596524
    procedure sub_005965D8(?:TList<Vcl.Themes.TChildControlInfo>);//005965D8
    //procedure sub_005965E4(?:?);//005965E4
    //procedure sub_005965F4(?:?);//005965F4
    procedure sub_00596604;//00596604
    //procedure sub_0059660C(?:?);//0059660C
    //procedure sub_00596808(?:TList<Vcl.Themes.TChildControlInfo>.TEnumerator; ?:?);//00596808
    //procedure sub_00596858(?:?);//00596858
    procedure sub_0059686C;//0059686C
    procedure sub_00596920(?:TList<Vcl.Themes.TPair<System.string,Vcl.Themes.TStyleManager.TSourceInfo>>);//00596920
    //procedure sub_0059692C(?:?);//0059692C
    //procedure sub_0059693C(?:?);//0059693C
    procedure sub_0059694C;//0059694C
    //procedure sub_00596954(?:?);//00596954
    //procedure sub_00596B50(?:TList<Vcl.Themes.TPair<System.string,Vcl.Themes.TStyleManager.TSourceInfo>>.TEnumerator; ?:?);//00596B50
    //procedure sub_00596BDC(?:?);//00596BDC
    procedure sub_00596BF0;//00596BF0
    procedure sub_00596CA4(?:TList<Vcl.Themes.TStyleManager.TSourceInfo>);//00596CA4
    //procedure sub_00596CB0(?:?);//00596CB0
    //procedure sub_00596CC0(?:?);//00596CC0
    procedure sub_00596CD0;//00596CD0
    //procedure sub_00596CD8(?:?);//00596CD8
    //procedure sub_00596ED4(?:TList<Vcl.Themes.TStyleManager.TSourceInfo>.TEnumerator; ?:?);//00596ED4
    //procedure sub_00596F10(?:?);//00596F10
    procedure sub_00596F24;//00596F24
    function GetRGBColor(Value:UITypes.TColor):DWORD;//005A82BC
    function GetColor(Value:Types.DWORD):TColor;//005A82DC
    procedure Initialize;//005A83F0
    procedure sub_005A84AC(?:TCustomImageList);//005A84AC
    procedure sub_005A84B8(?:TCustomImageList);//005A84B8
    procedure sub_005A859C(?:TDragImageList);//005A859C
    procedure SetShareImages(Value:Boolean);//005A85D4
    procedure SetWidth(Value:Integer);//005A85E0
    procedure SetHeight(Value:Integer);//005A8620
    procedure sub_005A8660(?:TDragImageList; ?:IntPtr);//005A8660
    procedure sub_005A8688(?:TCustomImageList; ?:HBITMAP);//005A8688
    procedure sub_005A86A8(?:TCustomImageList; ?:TBitmap; ?:TBitmap);//005A86A8
    procedure sub_005A8734(?:TCustomImageList);//005A8734
    procedure sub_005A8764(?:TImageList);//005A8764
    //function sub_005A8A54:?;//005A8A54
    procedure SetBkColor(Value:TColor);//005A8D30
    procedure SetColorDepth(Value:TColorDepth);//005A8D64
    //function GetBkColor:?;//005A8E14
    //procedure sub_005A8E3C(?:TBitmap; ?:?);//005A8E3C
    //procedure sub_005A8F20(?:?; ?:?; ?:?; ?:?; ?:?; ?:?);//005A8F20
    procedure sub_005A9294(?:TCustomImageList; ?:HIMAGELIST; ?:Integer);//005A9294
    procedure AssignTo(Dest:TPersistent);//005A9514
    procedure sub_005A9598(?:TCustomImageList; ?:TBitmap);//005A9598
    procedure SetDrawingStyle(Value:TDrawingStyle);//005A9610
    procedure sub_005A9640;//005A9640
    function StreamsEqual(S1:TMemoryStream; S2:TMemoryStream):Boolean;//005A967C
    //function sub_005A96C0(?:?; ?:?):?;//005A96C0
    //function sub_005A97B0(?:?):Boolean;//005A97B0
    procedure DefineProperties(Filer:TFiler);//005A9808
    //procedure sub_005A986C(?:TCustomImageList; ?:?);//005A986C
    //procedure sub_005A9B00(?:TCustomImageList; ?:?);//005A9B00
    //procedure sub_005A9CCC(?:?);//005A9CCC
    procedure WriteData(Stream:Classes.TStream);//005A9D80
    function FindPopupControl(const Pos:Types.TPoint):TControl;//005AC938
    procedure Error(ResStr:PResStringRec);//005AC96C
    function ShortCut(Key:Word; Shift:Classes.TShiftState):TShortCut;//005AC990
    function GetSpecialName(ShortCut:Classes.TShortCut):UnicodeString;//005AC9C8
    function ShortCutToText(ShortCut:Classes.TShortCut):UnicodeString;//005ACA24
    function CompareFront(var Text:UnicodeString; const Front:UnicodeString):Boolean;//005ACC20
    function TextToShortCut(Text:UnicodeString):TShortCut;//005ACCA0
    function UniqueCommand:Word;//005ACD9C
    //function sub_005ACDBC(?:?; ?:?; ?:?; ?:?):?;//005ACDBC
    procedure IterateMenus(Func:TIterator; Menu1:TMenuItem; Menu2:TMenuItem);//005ACE20
    procedure AssignClient(AClient:TObject);//005ACF30
    //function sub_005ACF4C:?;//005ACF4C
    //function IsCaptionLinked:?;//005ACF80
    //function IsCheckedLinked:?;//005ACFAC
    //function IsEnabledLinked:?;//005ACFD4
    //function IsHelpContextLinked:?;//005ACFFC
    //function IsHintLinked:?;//005AD020
    //function IsGroupIndexLinked:?;//005AD04C
    //function IsImageIndexLinked:?;//005AD07C
    //function IsShortCutLinked:?;//005AD0A4
    //function IsStatusActionLinked:?;//005AD0D0
    //function sub_005AD0F8:?;//005AD0F8
    //procedure sub_005AD120(?:?);//005AD120
    procedure SetCaption(const Value:UnicodeString);//005AD140
    procedure SetChecked(Value:Boolean);//005AD160
    procedure SetEnabled(Value:Boolean);//005AD180
    //procedure sub_005AD1A0(?:?);//005AD1A0
    //procedure sub_005AD1BC(?:?);//005AD1BC
    procedure SetImageIndex(Value:Integer);//005AD1E0
    procedure SetShortCut(Value:Classes.TShortCut);//005AD200
    procedure SetVisible(Value:Boolean);//005AD220
    //procedure sub_005AD240(?:?; ?:?);//005AD240
    //procedure sub_005AD3EC(?:?; ?:?; ?:?);//005AD3EC
    //function sub_005AD6E8(?:?):?;//005AD6E8
    procedure sub_005AD708(?:TMenuItem);//005AD708
    procedure sub_005AD7D0(?:TMenuItem; ?:TMenuItem);//005AD7D0
    procedure Loaded;//005AD80C
    procedure sub_005AD84C(?:TMenuItem);//005AD84C
    procedure sub_005AD924(?:TMenuItem; ?:Integer; ?:Byte);//005AD924
    //function sub_005AD984(?:TMenuItem):?;//005AD984
    procedure DefineProperties(Filer:Classes.TFiler);//005AD9DC
    //procedure sub_005ADA30(?:TMenuItem; ?:?; ?:UnicodeString; ?:?; ?:?; ?:?);//005ADA30
    //procedure sub_005ADC68(?:?; ?:?; ?:?);//005ADC68
    //procedure sub_005ADCA8(?:?; ?:?; ?:?; ?:?; ?:?);//005ADCA8
    //procedure sub_005ADE0C(?:?; ?:?);//005ADE0C
    //procedure sub_005AE948(?:?);//005AE948
    //procedure sub_005AF2A8(?:?);//005AF2A8
    //procedure sub_005AFC28(?:?; ?:?; ?:?);//005AFC28
    procedure GetMenuSize;//005AFE04
    //procedure sub_005AFE50(?:?);//005AFE50
    //procedure sub_005B02C4(?:?; ?:?; ?:?);//005B02C4
    procedure sub_005B05A8(?:TMenuItem);//005B05A8
    procedure sub_005B0714;//005B0714
    //function sub_005B0798(?:?; ?:?):?;//005B0798
    procedure SetChildOrder(Child:Classes.TComponent; Order:Integer);//005B0830
    //procedure sub_005B0B00(?:?);//005B0B00
    //procedure sub_005B0B44(?:?; ?:?; ?:?; ?:?);//005B0B44
    procedure sub_005B0C6C(?:TMenuItem);//005B0C6C
    //procedure sub_005B0D3C(?:?; ?:?);//005B0D3C
    //procedure sub_005B0E60(?:?; ?:?);//005B0E60
    procedure AssignTo(Dest:TPersistent);//005B0FA4
    procedure Notification(AComponent:TComponent; Operation:TOperation);//005B1028
    function UpdateItem(MenuItem:TMenuItem):Boolean;//005B11C8
    procedure sub_005B11FC(?:TMenuItem);//005B11FC
    function IfHotkeyAvailable(const AHotkey:UnicodeString):Boolean;//005B120C
    //procedure sub_005B1240(?:?);//005B1240
    //procedure sub_005B12C4(?:UnicodeString; ?:?; ?:?);//005B12C4
    //function sub_005B1460(?:TMenuItem; ?:?):?;//005B1460
    //function sub_005B19A0(?:TMenuItem; ?:?):?;//005B19A0
    //function sub_005B1B00:?;//005B1B00
    //function sub_005B1B24(?:?):?;//005B1B24
    //function sub_005B1B54(?:?):?;//005B1B54
    procedure sub_005B1C88;//005B1C88
    //procedure sub_0049ECB8(?:?; ?:?);//005B1C94
    procedure sub_005B1CB4(?:TMainMenu);//005B1CB4
    //function sub_005B1CCC(?:TMenuItem; ?:?):?;//005B1CCC
    //function sub_005B1EEC(?:?):?;//005B1EEC
    function IsWOW64:BOOL;//005B1F00
    procedure GetAltGRStatus;//005B1F74
    function IsAltGRPressed:Boolean;//005B21A0
    function ShortCutFromMessage(Message:Messages.TWMKey):TShortCut;//005B21DC
    //function sub_005B222C:?;//005B222C
    //function sub_005B223C(?:Byte; ?:?; ?:?):?;//005B223C
    procedure sub_005B248C(?:TMainMenu);//005B248C
    procedure BuildImage(Menu:Windows.HMENU);//005B2594
    //function sub_005B2664(?:TMainMenu):?;//005B2664
    procedure sub_005B26F8(?:TPopupMenu);//005B26F8
    procedure sub_005B2778(?:TComponent; ?:HWND);//005B2778
    //procedure sub_005B27B0(?:?);//005B27B0
    procedure Loaded;//005B27C8
    //procedure sub_005B27E0(?:?; ?:?; ?:?);//005B27E0
    procedure Notification(AComponent:TComponent; Operation:TOperation);//005B2864
    function IsAccelChar(Menu:Windows.HMENU; State:Word; I:Integer; C:Char):Boolean;//005B28A8
    function IsInitialChar(Menu:Windows.HMENU; State:Word; I:Integer; C:Char):Boolean;//005B2904
    //procedure sub_005B2CF4(?:?; ?:?; ?:?);//005B2CF4
    //procedure sub_005B2D88(?:?);//005B2D88
    procedure sub_005B2DB4;//005B2DB4
    //procedure sub_005B2E10(?:?);//005B2E10
    procedure sub_005B3454;//005B3454
    procedure sub_005B3480(?:TPopupMenu);//005B3480
    //function sub_005B34CC(?:TPopupMenu):?;//005B34CC
    //procedure sub_005B35C8(?:TPopupMenu; ?:?);//005B35C8
    //procedure sub_005B3624(?:TMenuItem; ?:TControlCanvas; ?:?; ?:?);//005B3624
    //procedure sub_005B370C(?:string; ?:?);//005B370C
    function GetHotkey(const Text:UnicodeString):UnicodeString;//005B3810
    //function sub_005B3888(?:string; ?:?):?;//005B3888

implementation

//0058DC6C
procedure TCustomStyleEngine.RegisterStyleHook(ControlClass:TClass; StyleHookClass:TStyleHookClass);
begin
{*
 0058DC6C    push        ebp
 0058DC6D    mov         ebp,esp
 0058DC6F    add         esp,0FFFFFFD8
 0058DC72    push        ebx
 0058DC73    push        esi
 0058DC74    push        edi
 0058DC75    xor         ebx,ebx
 0058DC77    mov         dword ptr [ebp-24],ebx
 0058DC7A    mov         dword ptr [ebp-28],ebx
 0058DC7D    mov         edi,ecx
 0058DC7F    mov         esi,edx
 0058DC81    xor         eax,eax
 0058DC83    push        ebp
 0058DC84    push        58DD7C
 0058DC89    push        dword ptr fs:[eax]
 0058DC8C    mov         dword ptr fs:[eax],esp
 0058DC8F    cmp         dword ptr ds:[7CA728],0;gvar_007CA728:TDictionary<System.TClass,System.Generics.Collecti...
>0058DC96    jne         0058DCAB
 0058DC98    xor         ecx,ecx
 0058DC9A    mov         dl,1
 0058DC9C    mov         eax,[005794F8];TDictionary<System.TClass,System.Generics.Collections.TList<Vcl.Themes.TS...
 0058DCA1    call        0058FBF4
 0058DCA6    mov         [007CA728],eax;gvar_007CA728:TDictionary<System.TClass,System.Generics.Collections.TList...
 0058DCAB    mov         edx,esi
 0058DCAD    mov         eax,[007CA728];gvar_007CA728:TDictionary<System.TClass,System.Generics.Collections.TList...
 0058DCB2    call        TDictionary<System.TClass,System.Generics.Collections.TList<Vcl.Themes.TStyleHookClass>>.ContainsKey
 0058DCB7    test        al,al
>0058DCB9    jne         0058DCE7
 0058DCBB    mov         dl,1
 0058DCBD    mov         eax,[00576DF8];TList<Vcl.Themes.TStyleHookClass>
 0058DCC2    call        0058F480
 0058DCC7    mov         ebx,eax
 0058DCC9    mov         dword ptr [ebp-4],edi
 0058DCCC    lea         edx,[ebp-4]
 0058DCCF    lea         eax,[ebx+8];TList<Vcl.Themes.TStyleHookClass>.FCount:Integer
 0058DCD2    call        0043489C
 0058DCD7    mov         ecx,ebx
 0058DCD9    mov         edx,esi
 0058DCDB    mov         eax,[007CA728];gvar_007CA728:TDictionary<System.TClass,System.Generics.Collections.TList...
 0058DCE0    call        TDictionary<System.TClass,System.Generics.Collections.TList<Vcl.Themes.TStyleHookClass>>.Add
>0058DCE5    jmp         0058DD61
 0058DCE7    mov         edx,esi
 0058DCE9    mov         eax,[007CA728];gvar_007CA728:TDictionary<System.TClass,System.Generics.Collections.TList...
 0058DCEE    call        TDictionary<System.TClass,System.Generics.Collections.TList<Vcl.Themes.TStyleHookClass>>.GetItem
 0058DCF3    mov         ebx,eax
 0058DCF5    mov         dword ptr [ebp-8],edi
 0058DCF8    lea         eax,[ebx+8];TList<Vcl.Themes.TStyleHookClass>.FCount:Integer
 0058DCFB    mov         dword ptr [ebp-0C],eax
 0058DCFE    lea         edx,[ebp-8]
 0058DD01    mov         eax,dword ptr [ebp-0C]
 0058DD04    call        00434714
 0058DD09    inc         eax
>0058DD0A    jne         0058DD1C
 0058DD0C    mov         dword ptr [ebp-10],edi
 0058DD0F    lea         edx,[ebp-10]
 0058DD12    lea         eax,[ebx+8];TList<Vcl.Themes.TStyleHookClass>.FCount:Integer
 0058DD15    call        0043489C
>0058DD1A    jmp         0058DD61
 0058DD1C    lea         edx,[ebp-24]
 0058DD1F    mov         eax,edi
 0058DD21    call        TObject.ClassName
 0058DD26    mov         eax,dword ptr [ebp-24]
 0058DD29    mov         dword ptr [ebp-20],eax
 0058DD2C    mov         byte ptr [ebp-1C],11
 0058DD30    lea         edx,[ebp-28]
 0058DD33    mov         eax,esi
 0058DD35    call        TObject.ClassName
 0058DD3A    mov         eax,dword ptr [ebp-28]
 0058DD3D    mov         dword ptr [ebp-18],eax
 0058DD40    mov         byte ptr [ebp-14],11
 0058DD44    lea         eax,[ebp-20]
 0058DD47    push        eax
 0058DD48    push        1
 0058DD4A    mov         ecx,dword ptr ds:[7C4520];^SResString341:TResStringRec
 0058DD50    mov         dl,1
 0058DD52    mov         eax,[00585780];EStyleEngineException
 0058DD57    call        Exception.CreateResFmt;EStyleEngineException.Create
 0058DD5C    call        @RaiseExcept
 0058DD61    xor         eax,eax
 0058DD63    pop         edx
 0058DD64    pop         ecx
 0058DD65    pop         ecx
 0058DD66    mov         dword ptr fs:[eax],edx
 0058DD69    push        58DD83
 0058DD6E    lea         eax,[ebp-28]
 0058DD71    mov         edx,2
 0058DD76    call        @UStrArrayClr
 0058DD7B    ret
>0058DD7C    jmp         @HandleFinally
>0058DD81    jmp         0058DD6E
 0058DD83    pop         edi
 0058DD84    pop         esi
 0058DD85    pop         ebx
 0058DD86    mov         esp,ebp
 0058DD88    pop         ebp
 0058DD89    ret
*}
end;

//0058DD8C
procedure TCustomStyleEngine.UnRegisterStyleHook(ControlClass:TClass; StyleHookClass:TStyleHookClass);
begin
{*
 0058DD8C    push        ebp
 0058DD8D    mov         ebp,esp
 0058DD8F    add         esp,0FFFFFFC0
 0058DD92    push        ebx
 0058DD93    push        esi
 0058DD94    push        edi
 0058DD95    xor         ebx,ebx
 0058DD97    mov         dword ptr [ebp-3C],ebx
 0058DD9A    mov         dword ptr [ebp-40],ebx
 0058DD9D    mov         esi,ecx
 0058DD9F    mov         ebx,edx
 0058DDA1    xor         eax,eax
 0058DDA3    push        ebp
 0058DDA4    push        58DEE4
 0058DDA9    push        dword ptr fs:[eax]
 0058DDAC    mov         dword ptr fs:[eax],esp
 0058DDAF    test        ebx,ebx
>0058DDB1    jne         0058DDDC
 0058DDB3    mov         eax,58DF00;'ControlClass'
 0058DDB8    mov         dword ptr [ebp-28],eax
 0058DDBB    mov         byte ptr [ebp-24],11
 0058DDBF    lea         eax,[ebp-28]
 0058DDC2    push        eax
 0058DDC3    push        0
 0058DDC5    mov         ecx,dword ptr ds:[7C4E5C];^SResString343:TResStringRec
 0058DDCB    mov         dl,1
 0058DDCD    mov         eax,[00585780];EStyleEngineException
 0058DDD2    call        Exception.CreateResFmt;EStyleEngineException.Create
 0058DDD7    call        @RaiseExcept
 0058DDDC    test        esi,esi
>0058DDDE    jne         0058DE09
 0058DDE0    mov         eax,58DF28;'StyleHookClass'
 0058DDE5    mov         dword ptr [ebp-28],eax
 0058DDE8    mov         byte ptr [ebp-24],11
 0058DDEC    lea         eax,[ebp-28]
 0058DDEF    push        eax
 0058DDF0    push        0
 0058DDF2    mov         ecx,dword ptr ds:[7C4E5C];^SResString343:TResStringRec
 0058DDF8    mov         dl,1
 0058DDFA    mov         eax,[00585780];EStyleEngineException
 0058DDFF    call        Exception.CreateResFmt;EStyleEngineException.Create
 0058DE04    call        @RaiseExcept
 0058DE09    cmp         dword ptr ds:[7CA728],0;gvar_007CA728:TDictionary<System.TClass,System.Generics.Collecti...
>0058DE10    je          0058DEC9
 0058DE16    mov         edx,ebx
 0058DE18    mov         eax,[007CA728];gvar_007CA728:TDictionary<System.TClass,System.Generics.Collections.TList...
 0058DE1D    call        TDictionary<System.TClass,System.Generics.Collections.TList<Vcl.Themes.TStyleHookClass>>.ContainsKey
 0058DE22    test        al,al
>0058DE24    je          0058DEC9
 0058DE2A    mov         edx,ebx
 0058DE2C    mov         eax,[007CA728];gvar_007CA728:TDictionary<System.TClass,System.Generics.Collections.TList...
 0058DE31    call        TDictionary<System.TClass,System.Generics.Collections.TList<Vcl.Themes.TStyleHookClass>>.GetItem
 0058DE36    mov         edi,eax
 0058DE38    mov         dword ptr [ebp-0C],esi
 0058DE3B    lea         eax,[edi+8];TList<Vcl.Themes.TStyleHookClass>.FCount:Integer
 0058DE3E    mov         dword ptr [ebp-10],eax
 0058DE41    lea         edx,[ebp-0C]
 0058DE44    mov         eax,dword ptr [ebp-10]
 0058DE47    call        00434714
 0058DE4C    inc         eax
>0058DE4D    je          0058DE84
 0058DE4F    mov         dword ptr [ebp-14],esi
 0058DE52    lea         eax,[edi+8];TList<Vcl.Themes.TStyleHookClass>.FCount:Integer
 0058DE55    mov         dword ptr [ebp-18],eax
 0058DE58    lea         edx,[ebp-14]
 0058DE5B    mov         eax,dword ptr [ebp-18]
 0058DE5E    call        00434878
 0058DE63    lea         eax,[ebp-8]
 0058DE66    mov         ecx,esi
 0058DE68    mov         edx,ebx
 0058DE6A    call        005904AC
 0058DE6F    call        TStyleManager.GetEngine
 0058DE74    test        eax,eax
>0058DE76    je          0058DEC9
 0058DE78    lea         ecx,[ebp-8]
 0058DE7B    mov         eax,dword ptr [eax]
 0058DE7D    mov         dl,1
 0058DE7F    call        dword ptr [eax+4];@AbstractError
>0058DE82    jmp         0058DEC9
 0058DE84    lea         edx,[ebp-3C]
 0058DE87    mov         eax,esi
 0058DE89    call        TObject.ClassName
 0058DE8E    mov         eax,dword ptr [ebp-3C]
 0058DE91    mov         dword ptr [ebp-38],eax
 0058DE94    mov         byte ptr [ebp-34],11
 0058DE98    lea         edx,[ebp-40]
 0058DE9B    mov         eax,ebx
 0058DE9D    call        TObject.ClassName
 0058DEA2    mov         eax,dword ptr [ebp-40]
 0058DEA5    mov         dword ptr [ebp-30],eax
 0058DEA8    mov         byte ptr [ebp-2C],11
 0058DEAC    lea         eax,[ebp-38]
 0058DEAF    push        eax
 0058DEB0    push        1
 0058DEB2    mov         ecx,dword ptr ds:[7C4A50];^SResString342:TResStringRec
 0058DEB8    mov         dl,1
 0058DEBA    mov         eax,[00585780];EStyleEngineException
 0058DEBF    call        Exception.CreateResFmt;EStyleEngineException.Create
 0058DEC4    call        @RaiseExcept
 0058DEC9    xor         eax,eax
 0058DECB    pop         edx
 0058DECC    pop         ecx
 0058DECD    pop         ecx
 0058DECE    mov         dword ptr fs:[eax],edx
 0058DED1    push        58DEEB
 0058DED6    lea         eax,[ebp-40]
 0058DED9    mov         edx,2
 0058DEDE    call        @UStrArrayClr
 0058DEE3    ret
>0058DEE4    jmp         @HandleFinally
>0058DEE9    jmp         0058DED6
 0058DEEB    pop         edi
 0058DEEC    pop         esi
 0058DEED    pop         ebx
 0058DEEE    mov         esp,ebp
 0058DEF0    pop         ebp
 0058DEF1    ret
*}
end;

//0058DF48
constructor TSysControl.Create(AHandle:NativeUInt);
begin
{*
 0058DF48    push        ebx
 0058DF49    test        dl,dl
>0058DF4B    je          0058DF55
 0058DF4D    add         esp,0FFFFFFF0
 0058DF50    call        @ClassCreate
 0058DF55    xor         ebx,ebx
 0058DF57    mov         dword ptr [eax+4],ebx;TSysControl.FFont:TFont
 0058DF5A    xor         ebx,ebx
 0058DF5C    mov         dword ptr [eax+8],ebx;TSysControl.FParent:TSysControl
 0058DF5F    mov         dword ptr [eax+0C],ecx;TSysControl.FHandle:NativeUInt
 0058DF62    test        dl,dl
>0058DF64    je          0058DF75
 0058DF66    call        @AfterConstruction
 0058DF6B    pop         dword ptr fs:[0]
 0058DF72    add         esp,0C
 0058DF75    pop         ebx
 0058DF76    ret
*}
end;

//0058DF78
destructor TSysControl.Destroy();
begin
{*
 0058DF78    push        ebx
 0058DF79    push        esi
 0058DF7A    push        ecx
 0058DF7B    call        @BeforeDestruction
 0058DF80    mov         ebx,edx
 0058DF82    mov         esi,eax
 0058DF84    cmp         dword ptr [esi+8],0;TSysControl.FParent:TSysControl
>0058DF88    je          0058DFA1
 0058DF8A    lea         eax,[esi+8];TSysControl.FParent:TSysControl
 0058DF8D    mov         dword ptr [esp],eax
 0058DF90    mov         eax,dword ptr [esp]
 0058DF93    mov         eax,dword ptr [eax]
 0058DF95    mov         edx,dword ptr [esp]
 0058DF98    xor         ecx,ecx
 0058DF9A    mov         dword ptr [edx],ecx
 0058DF9C    call        TObject.Free
 0058DFA1    mov         eax,dword ptr [esi+4];TSysControl.FFont:TFont
 0058DFA4    test        eax,eax
>0058DFA6    je          0058DFAD
 0058DFA8    call        TObject.Free
 0058DFAD    mov         dl,0FC
 0058DFAF    and         dl,bl
 0058DFB1    mov         eax,esi
 0058DFB3    call        TObject.Destroy
 0058DFB8    test        bl,bl
>0058DFBA    jle         0058DFC3
 0058DFBC    mov         eax,esi
 0058DFBE    call        @ClassDestroy
 0058DFC3    pop         edx
 0058DFC4    pop         esi
 0058DFC5    pop         ebx
 0058DFC6    ret
*}
end;

//0058DFC8
procedure TSysControl.Focused;
begin
{*
 0058DFC8    push        ebx
 0058DFC9    mov         ebx,eax
 0058DFCB    cmp         dword ptr [ebx+0C],0;TSysControl.FHandle:NativeUInt
>0058DFCF    je          0058DFDB
 0058DFD1    call        user32.GetFocus
 0058DFD6    cmp         eax,dword ptr [ebx+0C];TSysControl.FHandle:NativeUInt
>0058DFD9    je          0058DFDF
 0058DFDB    xor         eax,eax
 0058DFDD    pop         ebx
 0058DFDE    ret
 0058DFDF    mov         al,1
 0058DFE1    pop         ebx
 0058DFE2    ret
*}
end;

//0058DFE4
{*function sub_0058DFE4(?:TSysControl):?;
begin
 0058DFE4    push        ebx
 0058DFE5    push        esi
 0058DFE6    mov         esi,eax
 0058DFE8    xor         ebx,ebx
 0058DFEA    mov         eax,esi
 0058DFEC    call        0058E1F0
 0058DFF1    test        eax,eax
>0058DFF3    je          0058E030
 0058DFF5    mov         eax,esi
 0058DFF7    call        0058E1FC
 0058DFFC    and         eax,1000
 0058E001    cmp         eax,1000
>0058E006    je          0058E02E
 0058E008    mov         eax,esi
 0058E00A    call        0058E1FC
 0058E00F    and         eax,2000
 0058E014    cmp         eax,2000
>0058E019    je          0058E02E
 0058E01B    mov         eax,esi
 0058E01D    call        0058E1FC
 0058E022    and         eax,400000
 0058E027    cmp         eax,400000
>0058E02C    jne         0058E030
 0058E02E    mov         bl,1
 0058E030    mov         eax,ebx
 0058E032    pop         esi
 0058E033    pop         ebx
 0058E034    ret
end;*}

//0058E100
{*procedure sub_0058E100(?:TSysControl; ?:?);
begin
 0058E100    push        ebx
 0058E101    push        esi
 0058E102    mov         esi,edx
 0058E104    mov         ebx,eax
 0058E106    push        0
 0058E108    push        esi
 0058E109    xor         ecx,ecx
 0058E10B    xor         edx,edx
 0058E10D    xor         eax,eax
 0058E10F    call        Rect
 0058E114    push        esi
 0058E115    mov         eax,dword ptr [ebx+0C]
 0058E118    push        eax
 0058E119    call        user32.GetClientRect
 0058E11E    pop         esi
 0058E11F    pop         ebx
 0058E120    ret
end;*}

//0058E160
procedure sub_0058E160(?:TSysControl);
begin
{*
 0058E160    push        ebx
 0058E161    add         esp,0FFFFFFF0
 0058E164    mov         ebx,eax
 0058E166    mov         edx,esp
 0058E168    mov         eax,ebx
 0058E16A    call        0058E3CC
 0058E16F    mov         eax,esp
 0058E171    call        RectHeight
 0058E176    add         esp,10
 0058E179    pop         ebx
 0058E17A    ret
*}
end;

//0058E194
{*function sub_0058E194(?:?):?;
begin
 0058E194    push        ebx
 0058E195    push        esi
 0058E196    push        ecx
 0058E197    mov         ebx,eax
 0058E199    xor         esi,esi
 0058E19B    cmp         dword ptr [ebx+8],0
>0058E19F    je          0058E1B8
 0058E1A1    lea         eax,[ebx+8]
 0058E1A4    mov         dword ptr [esp],eax
 0058E1A7    mov         eax,dword ptr [esp]
 0058E1AA    mov         eax,dword ptr [eax]
 0058E1AC    mov         edx,dword ptr [esp]
 0058E1AF    xor         ecx,ecx
 0058E1B1    mov         dword ptr [edx],ecx
 0058E1B3    call        TObject.Free
 0058E1B8    mov         eax,ebx
 0058E1BA    call        0058E1E4
 0058E1BF    test        eax,eax
>0058E1C1    je          0058E1DD
 0058E1C3    mov         eax,ebx
 0058E1C5    call        0058E1E4
 0058E1CA    mov         ecx,eax
 0058E1CC    mov         dl,1
 0058E1CE    mov         eax,[0057290C];TSysControl
 0058E1D3    call        TSysControl.Create;TSysControl.Create
 0058E1D8    mov         esi,eax
 0058E1DA    mov         dword ptr [ebx+8],esi
 0058E1DD    mov         eax,esi
 0058E1DF    pop         edx
 0058E1E0    pop         esi
 0058E1E1    pop         ebx
 0058E1E2    ret
end;*}

//0058E1E4
{*function sub_0058E1E4(?:?):?;
begin
 0058E1E4    mov         eax,dword ptr [eax+0C]
 0058E1E7    push        eax
 0058E1E8    call        user32.GetParent
 0058E1ED    ret
end;*}

//0058E1F0
{*function sub_0058E1F0(?:?):?;
begin
 0058E1F0    push        0F0
 0058E1F2    mov         eax,dword ptr [eax+0C]
 0058E1F5    push        eax
 0058E1F6    call        user32.GetWindowLongW
 0058E1FB    ret
end;*}

//0058E1FC
procedure sub_0058E1FC(?:TSysControl);
begin
{*
 0058E1FC    push        0EC
 0058E1FE    mov         eax,dword ptr [eax+0C]
 0058E201    push        eax
 0058E202    call        user32.GetWindowLongW
 0058E207    ret
*}
end;

//0058E3B0
{*function sub_0058E3B0(?:TSysControl):?;
begin
 0058E3B0    push        ebx
 0058E3B1    add         esp,0FFFFFFF0
 0058E3B4    mov         ebx,eax
 0058E3B6    mov         edx,esp
 0058E3B8    mov         eax,ebx
 0058E3BA    call        0058E3CC
 0058E3BF    mov         eax,esp
 0058E3C1    call        RectWidth
 0058E3C6    add         esp,10
 0058E3C9    pop         ebx
 0058E3CA    ret
end;*}

//0058E3CC
{*procedure sub_0058E3CC(?:?; ?:?);
begin
 0058E3CC    push        ebx
 0058E3CD    push        esi
 0058E3CE    mov         esi,edx
 0058E3D0    mov         ebx,eax
 0058E3D2    push        0
 0058E3D4    push        esi
 0058E3D5    xor         ecx,ecx
 0058E3D7    xor         edx,edx
 0058E3D9    xor         eax,eax
 0058E3DB    call        Rect
 0058E3E0    push        esi
 0058E3E1    mov         eax,dword ptr [ebx+0C]
 0058E3E4    push        eax
 0058E3E5    call        user32.GetWindowRect
 0058E3EA    pop         esi
 0058E3EB    pop         ebx
 0058E3EC    ret
end;*}

//0058E3F0
{*function sub_0058E3F0(?:TSysControl):?;
begin
 0058E3F0    push        0FC
 0058E3F2    mov         eax,dword ptr [eax+0C]
 0058E3F5    push        eax
 0058E3F6    call        user32.GetWindowLongW
 0058E3FB    ret
end;*}

//0058E3FC
procedure sub_0058E3FC(?:TSysControl);
begin
{*
 0058E3FC    push        edx
 0058E3FD    push        0EC
 0058E3FF    mov         eax,dword ptr [eax+0C]
 0058E402    push        eax
 0058E403    call        user32.SetWindowLongW
 0058E408    ret
*}
end;

//0058E41C
procedure sub_0058E41C(?:TSysControl; ?:Pointer);
begin
{*
 0058E41C    push        ebx
 0058E41D    push        esi
 0058E41E    mov         esi,edx
 0058E420    mov         ebx,eax
 0058E422    mov         eax,ebx
 0058E424    call        0058E3F0
 0058E429    cmp         esi,eax
>0058E42B    je          0058E439
 0058E42D    push        esi
 0058E42E    push        0FC
 0058E430    mov         eax,dword ptr [ebx+0C]
 0058E433    push        eax
 0058E434    call        user32.SetWindowLongW
 0058E439    pop         esi
 0058E43A    pop         ebx
 0058E43B    ret
*}
end;

//0058E43C
procedure TSysControl.UseRightToLeftAlignment;
begin
{*
 0058E43C    push        ebx
 0058E43D    mov         ebx,eax
 0058E43F    mov         eax,[007C4EF4];^gvar_007C7CB8:Cardinal
 0058E444    cmp         byte ptr [eax+0D],0
>0058E448    je          0058E455
 0058E44A    mov         eax,ebx
 0058E44C    call        0058DFE4
 0058E451    cmp         al,1
>0058E453    je          0058E459
 0058E455    xor         eax,eax
 0058E457    pop         ebx
 0058E458    ret
 0058E459    mov         al,1
 0058E45B    pop         ebx
 0058E45C    ret
*}
end;

//0058E460
{*function sub_0058E460(?:?):Boolean;
begin
 0058E460    push        ebx
 0058E461    mov         ebx,eax
 0058E463    xor         eax,eax
 0058E465    test        ebx,ebx
>0058E467    jbe         0058E47E
 0058E469    push        0
 0058E46B    push        0
 0058E46D    push        67C
 0058E472    push        ebx
 0058E473    call        user32.SendMessageW
 0058E478    cmp         eax,77
 0058E47B    sete        al
 0058E47E    pop         ebx
 0058E47F    ret
end;*}

//0058E480
constructor sub_0058E480(AHandle:NativeUInt);
begin
{*
 0058E480    push        ebp
 0058E481    mov         ebp,esp
 0058E483    push        ecx
 0058E484    push        ebx
 0058E485    push        esi
 0058E486    push        edi
 0058E487    test        dl,dl
>0058E489    je          0058E493
 0058E48B    add         esp,0FFFFFFF0
 0058E48E    call        @ClassCreate
 0058E493    mov         esi,ecx
 0058E495    mov         byte ptr [ebp-1],dl
 0058E498    mov         ebx,eax
 0058E49A    mov         byte ptr [ebx+24],0;TSysStyleHook.FHandled:Boolean
 0058E49E    mov         byte ptr [ebx+34],0;TSysStyleHook.FHookedDirectly:Boolean
 0058E4A2    xor         eax,eax
 0058E4A4    mov         dword ptr [ebx+0C],eax;TSysStyleHook.FSysControl:TSysControl
 0058E4A7    mov         dword ptr [ebx+4],esi;TSysStyleHook.FHandle:NativeUInt
 0058E4AA    xor         eax,eax
 0058E4AC    mov         dword ptr [ebx+10],eax;TSysStyleHook.FOrgWndProc:NativeInt
 0058E4AF    xor         eax,eax
 0058E4B1    mov         dword ptr [ebx+8],eax;TSysStyleHook.FProcInstance:Pointer
 0058E4B4    xor         eax,eax
 0058E4B6    mov         dword ptr [ebx+20],eax;TSysStyleHook.FBrush:TBrush
 0058E4B9    mov         dl,1
 0058E4BB    mov         eax,[004BDD74];TFont
 0058E4C0    call        TFont.Create;TFont.Create
 0058E4C5    mov         dword ptr [ebx+2C],eax;TSysStyleHook.FFont:TFont
 0058E4C8    movzx       edx,byte ptr ds:[58E570];0x0 gvar_0058E570
 0058E4CF    mov         eax,ebx
 0058E4D1    call        0058E8AC
 0058E4D6    mov         byte ptr [ebx+25],0;TSysStyleHook.FParentColor:Boolean
 0058E4DA    mov         byte ptr [ebx+18],0;TSysStyleHook.FDoubleBuffered:Boolean
 0058E4DE    mov         byte ptr [ebx+19],0;TSysStyleHook.FPaintOnEraseBkgnd:Boolean
 0058E4E2    xor         edx,edx
 0058E4E4    mov         eax,ebx
 0058E4E6    call        0058E890
 0058E4EB    mov         byte ptr [ebx+16],0;TSysStyleHook.FOverridePaintNC:Boolean
 0058E4EF    mov         byte ptr [ebx+14],0;TSysStyleHook.FOverrideEraseBkgnd:Boolean
 0058E4F3    mov         byte ptr [ebx+17],0;TSysStyleHook.FOverrideFont:Boolean
 0058E4F7    test        esi,esi
>0058E4F9    jbe         0058E54E
 0058E4FB    push        ebx
 0058E4FC    mov         eax,dword ptr [ebx]
 0058E4FE    mov         eax,dword ptr [eax+1C];TSysStyleHook.FFontColor:TColor
 0058E501    push        eax
 0058E502    call        MakeObjectInstance
 0058E507    mov         dword ptr [ebx+8],eax;TSysStyleHook.FProcInstance:Pointer
 0058E50A    mov         ecx,esi
 0058E50C    mov         dl,1
 0058E50E    mov         eax,[0057290C];TSysControl
 0058E513    call        TSysControl.Create;TSysControl.Create
 0058E518    mov         edi,eax
 0058E51A    mov         dword ptr [ebx+0C],edi;TSysStyleHook.FSysControl:TSysControl
 0058E51D    mov         eax,edi
 0058E51F    call        0058E3F0
 0058E524    mov         esi,eax
 0058E526    mov         dword ptr [ebx+10],esi;TSysStyleHook.FOrgWndProc:NativeInt
 0058E529    test        esi,esi
>0058E52B    jle         0058E54E
 0058E52D    mov         edx,dword ptr [ebx+8];TSysStyleHook.FProcInstance:Pointer
 0058E530    mov         eax,dword ptr [ebx+0C];TSysStyleHook.FSysControl:TSysControl
 0058E533    call        0058E41C
 0058E538    mov         dl,1
 0058E53A    mov         eax,[004BE308];TBrush
 0058E53F    call        TBrush.Create;TBrush.Create
 0058E544    mov         dword ptr [ebx+20],eax;TSysStyleHook.FBrush:TBrush
 0058E547    mov         eax,ebx
 0058E549    mov         edx,dword ptr [eax]
 0058E54B    call        dword ptr [edx+24];TSysStyleHook.sub_0058E92C
 0058E54E    mov         eax,ebx
 0058E550    cmp         byte ptr [ebp-1],0
>0058E554    je          0058E565
 0058E556    call        @AfterConstruction
 0058E55B    pop         dword ptr fs:[0]
 0058E562    add         esp,0C
 0058E565    mov         eax,ebx
 0058E567    pop         edi
 0058E568    pop         esi
 0058E569    pop         ebx
 0058E56A    pop         ecx
 0058E56B    pop         ebp
 0058E56C    ret
*}
end;

//0058E574
destructor TSysStyleHook.Destroy();
begin
{*
 0058E574    push        ebx
 0058E575    push        esi
 0058E576    add         esp,0FFFFFFF4
 0058E579    call        @BeforeDestruction
 0058E57E    mov         ebx,edx
 0058E580    mov         esi,eax
 0058E582    mov         eax,dword ptr [esi+8];TSysStyleHook.FProcInstance:Pointer
 0058E585    test        eax,eax
>0058E587    je          0058E58E
 0058E589    call        FreeObjectInstance
 0058E58E    mov         eax,dword ptr [esi+0C];TSysStyleHook.FSysControl:TSysControl
 0058E591    test        eax,eax
>0058E593    je          0058E5B4
 0058E595    mov         edx,dword ptr [esi+10];TSysStyleHook.FOrgWndProc:NativeInt
 0058E598    call        0058E41C
 0058E59D    lea         eax,[esi+0C];TSysStyleHook.FSysControl:TSysControl
 0058E5A0    mov         dword ptr [esp],eax
 0058E5A3    mov         eax,dword ptr [esp]
 0058E5A6    mov         eax,dword ptr [eax]
 0058E5A8    mov         edx,dword ptr [esp]
 0058E5AB    xor         ecx,ecx
 0058E5AD    mov         dword ptr [edx],ecx
 0058E5AF    call        TObject.Free
 0058E5B4    cmp         dword ptr [esi+20],0;TSysStyleHook.FBrush:TBrush
>0058E5B8    je          0058E5D4
 0058E5BA    lea         eax,[esi+20];TSysStyleHook.FBrush:TBrush
 0058E5BD    mov         dword ptr [esp+4],eax
 0058E5C1    mov         eax,dword ptr [esp+4]
 0058E5C5    mov         eax,dword ptr [eax]
 0058E5C7    mov         edx,dword ptr [esp+4]
 0058E5CB    xor         ecx,ecx
 0058E5CD    mov         dword ptr [edx],ecx
 0058E5CF    call        TObject.Free
 0058E5D4    cmp         dword ptr [esi+2C],0;TSysStyleHook.FFont:TFont
>0058E5D8    je          0058E5F4
 0058E5DA    lea         eax,[esi+2C];TSysStyleHook.FFont:TFont
 0058E5DD    mov         dword ptr [esp+8],eax
 0058E5E1    mov         eax,dword ptr [esp+8]
 0058E5E5    mov         eax,dword ptr [eax]
 0058E5E7    mov         edx,dword ptr [esp+8]
 0058E5EB    xor         ecx,ecx
 0058E5ED    mov         dword ptr [edx],ecx
 0058E5EF    call        TObject.Free
 0058E5F4    mov         dl,0FC
 0058E5F6    and         dl,bl
 0058E5F8    mov         eax,esi
 0058E5FA    call        TObject.Destroy
 0058E5FF    test        bl,bl
>0058E601    jle         0058E60A
 0058E603    mov         eax,esi
 0058E605    call        @ClassDestroy
 0058E60A    add         esp,0C
 0058E60D    pop         esi
 0058E60E    pop         ebx
 0058E60F    ret
*}
end;

//0058E610
{*function sub_0058E610(?:TSysStyleHook; ?:?):?;
begin
 0058E610    mov         ecx,dword ptr [edx+8]
 0058E613    push        ecx
 0058E614    mov         ecx,dword ptr [edx+4]
 0058E617    push        ecx
 0058E618    mov         edx,dword ptr [edx]
 0058E61A    push        edx
 0058E61B    mov         edx,dword ptr [eax+4]
 0058E61E    push        edx
 0058E61F    mov         eax,dword ptr [eax+10]
 0058E622    push        eax
 0058E623    call        user32.CallWindowProcW
 0058E628    ret
end;*}

//0058E62C
procedure sub_0058E62C;
begin
{*
 0058E62C    push        ebx
 0058E62D    add         esp,0FFFFFFF0
 0058E630    mov         ebx,eax
 0058E632    mov         edx,esp
 0058E634    mov         eax,ebx
 0058E636    mov         ecx,dword ptr [eax]
 0058E638    call        dword ptr [ecx];TSysStyleHook.sub_0058E7DC
 0058E63A    cmp         dword ptr [esp],0
>0058E63E    jle         0058E661
 0058E640    cmp         dword ptr [esp+8],0
>0058E645    jle         0058E661
 0058E647    cmp         dword ptr [esp+4],0
>0058E64C    jle         0058E661
 0058E64E    cmp         dword ptr [esp+0C],0
>0058E653    jle         0058E661
 0058E655    mov         cl,1
 0058E657    mov         edx,dword ptr [ebx+0C];TSysStyleHook.FSysControl:TSysControl
 0058E65A    mov         eax,ebx
 0058E65C    call        0058EA14
 0058E661    add         esp,10
 0058E664    pop         ebx
 0058E665    ret
*}
end;

//0058E668
{*procedure sub_0058E668(?:?; ?:?; ?:?);
begin
 0058E668    push        ebp
 0058E669    mov         ebp,esp
 0058E66B    add         esp,0FFFFFFE0
 0058E66E    push        ebx
 0058E66F    push        esi
 0058E670    push        edi
 0058E671    mov         esi,ecx
 0058E673    mov         dword ptr [ebp-4],edx
 0058E676    mov         ebx,eax
 0058E678    xor         eax,eax
 0058E67A    mov         dword ptr [ebp-18],eax
 0058E67D    xor         eax,eax
 0058E67F    mov         dword ptr [ebp-14],eax
 0058E682    mov         eax,dword ptr [ebp-18]
 0058E685    mov         dword ptr [ebp-10],eax
 0058E688    mov         eax,dword ptr [ebp-14]
 0058E68B    mov         dword ptr [ebp-0C],eax
 0058E68E    test        esi,esi
>0058E690    je          0058E6A9
 0058E692    mov         eax,dword ptr [esi]
 0058E694    mov         edx,dword ptr [esi+4]
 0058E697    mov         dword ptr [ebp-20],eax
 0058E69A    mov         dword ptr [ebp-1C],edx
 0058E69D    mov         eax,dword ptr [ebp-20]
 0058E6A0    mov         dword ptr [ebp-10],eax
 0058E6A3    mov         eax,dword ptr [ebp-1C]
 0058E6A6    mov         dword ptr [ebp-0C],eax
 0058E6A9    mov         dl,1
 0058E6AB    mov         eax,[004C1D10];TBitmap
 0058E6B0    call        TBitmap.Create;TBitmap.Create
 0058E6B5    mov         dword ptr [ebp-8],eax
 0058E6B8    xor         eax,eax
 0058E6BA    push        ebp
 0058E6BB    push        58E7BD
 0058E6C0    push        dword ptr fs:[eax]
 0058E6C3    mov         dword ptr fs:[eax],esp
 0058E6C6    mov         eax,dword ptr [ebx+0C]
 0058E6C9    call        0058E194
 0058E6CE    call        0058E160
 0058E6D3    push        eax
 0058E6D4    mov         eax,dword ptr [ebx+0C]
 0058E6D7    call        0058E194
 0058E6DC    call        0058E3B0
 0058E6E1    mov         edx,eax
 0058E6E3    mov         eax,dword ptr [ebp-8]
 0058E6E6    pop         ecx
 0058E6E7    mov         edi,dword ptr [eax]
 0058E6E9    call        dword ptr [edi+6C];TBitmap.SetSize
 0058E6EC    push        93
 0058E6F1    mov         eax,dword ptr [ebp-8]
 0058E6F4    call        TBitmap.GetCanvas
 0058E6F9    call        TCanvas.GetHandle
 0058E6FE    push        eax
 0058E6FF    push        14
 0058E701    mov         eax,ebx
 0058E703    call        0058E7F8
 0058E708    push        eax
 0058E709    call        user32.SendMessageW
 0058E70E    lea         eax,[ebp-10]
 0058E711    push        eax
 0058E712    mov         eax,dword ptr [ebx+4]
 0058E715    push        eax
 0058E716    call        user32.ClientToScreen
 0058E71B    lea         eax,[ebp-10]
 0058E71E    push        eax
 0058E71F    mov         eax,ebx
 0058E721    call        0058E7F8
 0058E726    push        eax
 0058E727    call        user32.ScreenToClient
 0058E72C    test        esi,esi
>0058E72E    je          0058E76D
 0058E730    push        0CC0020
 0058E735    mov         eax,dword ptr [ebp-0C]
 0058E738    push        eax
 0058E739    mov         eax,dword ptr [ebp-10]
 0058E73C    push        eax
 0058E73D    mov         eax,dword ptr [ebp-8]
 0058E740    call        TBitmap.GetCanvas
 0058E745    call        TCanvas.GetHandle
 0058E74A    push        eax
 0058E74B    mov         eax,esi
 0058E74D    call        RectHeight
 0058E752    push        eax
 0058E753    mov         eax,esi
 0058E755    call        RectWidth
 0058E75A    push        eax
 0058E75B    mov         eax,dword ptr [esi+4]
 0058E75E    push        eax
 0058E75F    mov         eax,dword ptr [esi]
 0058E761    push        eax
 0058E762    mov         eax,dword ptr [ebp-4]
 0058E765    push        eax
 0058E766    call        gdi32.BitBlt
>0058E76B    jmp         0058E7A7
 0058E76D    push        0CC0020
 0058E772    mov         eax,dword ptr [ebp-0C]
 0058E775    push        eax
 0058E776    mov         eax,dword ptr [ebp-10]
 0058E779    push        eax
 0058E77A    mov         eax,dword ptr [ebp-8]
 0058E77D    call        TBitmap.GetCanvas
 0058E782    call        TCanvas.GetHandle
 0058E787    push        eax
 0058E788    mov         eax,dword ptr [ebx+0C]
 0058E78B    call        0058E160
 0058E790    push        eax
 0058E791    mov         eax,dword ptr [ebx+0C]
 0058E794    call        0058E3B0
 0058E799    push        eax
 0058E79A    push        0
 0058E79C    push        0
 0058E79E    mov         eax,dword ptr [ebp-4]
 0058E7A1    push        eax
 0058E7A2    call        gdi32.BitBlt
 0058E7A7    xor         eax,eax
 0058E7A9    pop         edx
 0058E7AA    pop         ecx
 0058E7AB    pop         ecx
 0058E7AC    mov         dword ptr fs:[eax],edx
 0058E7AF    push        58E7C4
 0058E7B4    mov         eax,dword ptr [ebp-8]
 0058E7B7    call        TObject.Free
 0058E7BC    ret
>0058E7BD    jmp         @HandleFinally
>0058E7C2    jmp         0058E7B4
 0058E7C4    pop         edi
 0058E7C5    pop         esi
 0058E7C6    pop         ebx
 0058E7C7    mov         esp,ebp
 0058E7C9    pop         ebp
 0058E7CA    ret
end;*}

//0058E7DC
{*procedure sub_0058E7DC(?:?);
begin
 0058E7DC    push        ebx
 0058E7DD    mov         ebx,edx
 0058E7DF    push        0
 0058E7E1    push        ebx
 0058E7E2    xor         ecx,ecx
 0058E7E4    xor         edx,edx
 0058E7E6    xor         eax,eax
 0058E7E8    call        Rect
 0058E7ED    pop         ebx
 0058E7EE    ret
end;*}

//0058E7F0
{*function sub_0058E7F0(?:TSysStyleHook):?;
begin
 0058E7F0    mov         eax,dword ptr [eax+28]
 0058E7F3    ret
end;*}

//0058E7F4
{*function sub_0058E7F4(?:TSysStyleHook):?;
begin
 0058E7F4    mov         eax,dword ptr [eax+1C]
 0058E7F7    ret
end;*}

//0058E7F8
{*function sub_0058E7F8(?:TSysStyleHook):?;
begin
 0058E7F8    mov         eax,dword ptr [eax+4]
 0058E7FB    push        eax
 0058E7FC    call        user32.GetParent
 0058E801    ret
end;*}

//0058E848
{*function sub_0058E848:?;
begin
 0058E848    xor         eax,eax
 0058E84A    ret
end;*}

//0058E84C
procedure sub_0058E84C(?:TSysStyleHook; ?:TColor);
begin
{*
 0058E84C    cmp         edx,dword ptr [eax+28]
>0058E84F    je          0058E855
 0058E851    mov         cl,1
>0058E853    jmp         0058E869
 0058E855    mov         ecx,dword ptr [eax+20]
 0058E858    test        ecx,ecx
>0058E85A    je          0058E867
 0058E85C    mov         ecx,dword ptr [ecx+10]
 0058E85F    cmp         edx,dword ptr [ecx+18]
 0058E862    setne       cl
>0058E865    jmp         0058E869
 0058E867    xor         ecx,ecx
 0058E869    test        cl,cl
>0058E86B    je          0058E87E
 0058E86D    mov         dword ptr [eax+28],edx
 0058E870    mov         ecx,dword ptr [eax+20]
 0058E873    test        ecx,ecx
>0058E875    je          0058E87E
 0058E877    mov         eax,ecx
 0058E879    call        TBrush.SetColor
 0058E87E    ret
*}
end;

//0058E890
{*procedure sub_0058E890(?:TSysStyleHook; ?:?);
begin
 0058E890    test        dl,dl
>0058E892    je          0058E897
 0058E894    mov         byte ptr [eax+14],dl;TSysStyleHook.FOverrideEraseBkgnd:Boolean
 0058E897    mov         byte ptr [eax+15],dl;TSysStyleHook.FOverridePaint:Boolean
 0058E89A    ret
end;*}

//0058E89C
{*procedure sub_0058E89C(?:?; ?:?);
begin
 0058E89C    push        0
 0058E89E    movzx       eax,cl
 0058E8A1    push        eax
 0058E8A2    push        0B
 0058E8A4    push        edx
 0058E8A5    call        user32.SendMessageW
 0058E8AA    ret
end;*}

//0058E8AC
{*procedure sub_0058E8AC(?:TSysStyleHook; ?:?);
begin
 0058E8AC    push        ebx
 0058E8AD    push        ecx
 0058E8AE    mov         byte ptr [esp],dl
 0058E8B1    mov         ebx,eax
 0058E8B3    movzx       eax,byte ptr [ebx+26];TSysStyleHook.FStyleElements:TStyleElements
 0058E8B7    cmp         al,byte ptr [esp]
>0058E8BA    je          0058E8E5
 0058E8BC    movzx       eax,byte ptr [esp]
 0058E8C0    mov         byte ptr [ebx+26],al;TSysStyleHook.FStyleElements:TStyleElements
 0058E8C3    test        byte ptr [ebx+26],2;TSysStyleHook.FStyleElements:TStyleElements
 0058E8C7    setne       dl
 0058E8CA    mov         eax,ebx
 0058E8CC    call        0058E890
 0058E8D1    test        byte ptr [ebx+26],4;TSysStyleHook.FStyleElements:TStyleElements
 0058E8D5    setne       al
 0058E8D8    mov         byte ptr [ebx+16],al;TSysStyleHook.FOverridePaintNC:Boolean
 0058E8DB    test        byte ptr [ebx+26],1;TSysStyleHook.FStyleElements:TStyleElements
 0058E8DF    setne       al
 0058E8E2    mov         byte ptr [ebx+17],al;TSysStyleHook.FOverrideFont:Boolean
 0058E8E5    pop         edx
 0058E8E6    pop         ebx
 0058E8E7    ret
end;*}

//0058E8E8
{*function sub_0058E8E8(?:TSysStyleHook):?;
begin
 0058E8E8    push        ebx
 0058E8E9    push        esi
 0058E8EA    mov         esi,eax
 0058E8EC    call        TStyleManager.GetActiveStyle
 0058E8F1    mov         ebx,eax
 0058E8F3    mov         eax,ebx
 0058E8F5    mov         edx,dword ptr [eax]
 0058E8F7    call        dword ptr [edx+48];@AbstractError
 0058E8FA    test        al,al
>0058E8FC    je          0058E910
 0058E8FE    call        TStyleManager.GetActiveStyle
 0058E903    mov         ebx,eax
 0058E905    mov         eax,ebx
 0058E907    call        TCustomStyleServices.GetIsSystemStyle
 0058E90C    xor         al,1
>0058E90E    jmp         0058E912
 0058E910    xor         eax,eax
 0058E912    test        al,al
>0058E914    je          0058E926
 0058E916    mov         eax,dword ptr [esi+4]
 0058E919    call        FindControl
 0058E91E    test        eax,eax
 0058E920    sete        al
 0058E923    pop         esi
 0058E924    pop         ebx
 0058E925    ret
 0058E926    xor         eax,eax
 0058E928    pop         esi
 0058E929    pop         ebx
 0058E92A    ret
end;*}

//0058E92C
procedure sub_0058E92C;
begin
{*
 0058E92C    push        ebx
 0058E92D    push        esi
 0058E92E    mov         ebx,eax
 0058E930    cmp         byte ptr [ebx+14],0;TSysStyleHook.FOverrideEraseBkgnd:Boolean
>0058E934    jne         0058E93C
 0058E936    cmp         byte ptr [ebx+15],0;TSysStyleHook.FOverridePaint:Boolean
>0058E93A    je          0058E957
 0058E93C    call        TStyleManager.GetActiveStyle
 0058E941    mov         esi,eax
 0058E943    mov         dl,1D
 0058E945    mov         eax,esi
 0058E947    call        TCustomStyleServices.GetStyleColor
 0058E94C    mov         edx,eax
 0058E94E    mov         eax,ebx
 0058E950    call        0058E84C
>0058E955    jmp         0058E963
 0058E957    mov         edx,0FF00000F
 0058E95C    mov         eax,ebx
 0058E95E    call        0058E84C
 0058E963    cmp         byte ptr [ebx+17],0;TSysStyleHook.FOverrideFont:Boolean
>0058E967    je          0058E982
 0058E969    call        TStyleManager.GetActiveStyle
 0058E96E    mov         esi,eax
 0058E970    mov         edx,0FF000008
 0058E975    mov         eax,esi
 0058E977    call        TCustomStyleServices.GetSystemColor
 0058E97C    mov         dword ptr [ebx+1C],eax;TSysStyleHook.FFontColor:TColor
 0058E97F    pop         esi
 0058E980    pop         ebx
 0058E981    ret
 0058E982    xor         eax,eax
 0058E984    mov         dword ptr [ebx+1C],eax;TSysStyleHook.FFontColor:TColor
 0058E987    pop         esi
 0058E988    pop         ebx
 0058E989    ret
*}
end;

//0058E98C
function sub_0058E98C(?:TSysStyleHook):Boolean;
begin
{*
 0058E98C    push        ebx
 0058E98D    mov         ebx,eax
 0058E98F    mov         eax,dword ptr [ebx+0C]
 0058E992    call        0058E1FC
 0058E997    and         eax,4000
 0058E99C    cmp         eax,4000
 0058E9A1    sete        al
 0058E9A4    pop         ebx
 0058E9A5    ret
*}
end;

//0058E9A8
procedure TSysStyleHook.Invalidate;
begin
{*
 0058E9A8    push        ebx
 0058E9A9    mov         ebx,eax
 0058E9AB    cmp         byte ptr [ebx+16],0;TSysStyleHook.FOverridePaintNC:Boolean
>0058E9AF    je          0058E9B8
 0058E9B1    mov         eax,ebx
 0058E9B3    mov         edx,dword ptr [eax]
 0058E9B5    call        dword ptr [edx+30];TSysStyleHook.InvalidateNC
 0058E9B8    push        0
 0058E9BA    push        0
 0058E9BC    mov         eax,dword ptr [ebx+4];TSysStyleHook.FHandle:NativeUInt
 0058E9BF    push        eax
 0058E9C0    call        user32.InvalidateRect
 0058E9C5    pop         ebx
 0058E9C6    ret
*}
end;

//0058E9C8
procedure TSysStyleHook.InvalidateNC;
begin
{*
 0058E9C8    push        0
 0058E9CA    push        0
 0058E9CC    push        85
 0058E9D1    mov         eax,dword ptr [eax+4];TSysStyleHook.FHandle:NativeUInt
 0058E9D4    push        eax
 0058E9D5    call        user32.SendMessageW
 0058E9DA    ret
*}
end;

//0058E9DC
procedure sub_0058E9DC;
begin
{*
 0058E9DC    ret
*}
end;

//0058E9E0
{*procedure sub_0058E9E0(?:?);
begin
 0058E9E0    push        ebx
 0058E9E1    push        esi
 0058E9E2    add         esp,0FFFFFFF0
 0058E9E5    mov         esi,edx
 0058E9E7    mov         ebx,eax
 0058E9E9    mov         eax,ebx
 0058E9EB    call        0058E7F0
 0058E9F0    mov         edx,eax
 0058E9F2    mov         eax,dword ptr [esi+48]
 0058E9F5    call        TBrush.SetColor
 0058E9FA    mov         edx,esp
 0058E9FC    mov         eax,dword ptr [ebx+0C];TSysStyleHook.FSysControl:TSysControl
 0058E9FF    call        0058E100
 0058EA04    mov         edx,esp
 0058EA06    mov         eax,esi
 0058EA08    mov         ecx,dword ptr [eax]
 0058EA0A    call        dword ptr [ecx+54]
 0058EA0D    add         esp,10
 0058EA10    pop         esi
 0058EA11    pop         ebx
 0058EA12    ret
end;*}

//0058EA14
{*procedure sub_0058EA14(?:TSysStyleHook; ?:TSysControl; ?:?);
begin
 0058EA14    push        ebp
 0058EA15    mov         ebp,esp
 0058EA17    add         esp,0FFFFFFAC
 0058EA1A    push        ebx
 0058EA1B    push        esi
 0058EA1C    push        edi
 0058EA1D    mov         ebx,ecx
 0058EA1F    mov         dword ptr [ebp-4],edx
 0058EA22    mov         esi,eax
 0058EA24    lea         edx,[ebp-44]
 0058EA27    mov         eax,esi
 0058EA29    mov         ecx,dword ptr [eax]
 0058EA2B    call        dword ptr [ecx];TSysStyleHook.sub_0058E7DC
 0058EA2D    mov         eax,dword ptr [ebp-4]
 0058EA30    mov         eax,dword ptr [eax+0C];TSysControl.FHandle:NativeUInt
 0058EA33    push        0EC
 0058EA35    push        eax
 0058EA36    call        user32.GetWindowLongW
 0058EA3B    mov         edx,eax
 0058EA3D    mov         eax,dword ptr [ebp-4]
 0058EA40    call        0058E3FC
 0058EA45    mov         eax,dword ptr [ebp-4]
 0058EA48    call        0058E1FC
 0058EA4D    test        ah,2
>0058EA50    je          0058EBD3
 0058EA56    lea         eax,[ebp-28]
 0058EA59    push        eax
 0058EA5A    mov         eax,dword ptr [ebp-4]
 0058EA5D    mov         eax,dword ptr [eax+0C];TSysControl.FHandle:NativeUInt
 0058EA60    push        eax
 0058EA61    call        user32.GetWindowRect
 0058EA66    mov         ecx,dword ptr [ebp-24]
 0058EA69    neg         ecx
 0058EA6B    mov         edx,dword ptr [ebp-28]
 0058EA6E    neg         edx
 0058EA70    lea         eax,[ebp-28]
 0058EA73    call        OffsetRect
 0058EA78    mov         eax,dword ptr [ebp-4]
 0058EA7B    mov         eax,dword ptr [eax+0C];TSysControl.FHandle:NativeUInt
 0058EA7E    push        eax
 0058EA7F    call        user32.GetWindowDC
 0058EA84    mov         dword ptr [ebp-8],eax
 0058EA87    xor         edx,edx
 0058EA89    push        ebp
 0058EA8A    push        58EBCC
 0058EA8F    push        dword ptr fs:[edx]
 0058EA92    mov         dword ptr fs:[edx],esp
 0058EA95    push        esi
 0058EA96    lea         esi,[ebp-28]
 0058EA99    lea         edi,[ebp-18]
 0058EA9C    movs        dword ptr [edi],dword ptr [esi]
 0058EA9D    movs        dword ptr [edi],dword ptr [esi]
 0058EA9E    movs        dword ptr [edi],dword ptr [esi]
 0058EA9F    movs        dword ptr [edi],dword ptr [esi]
 0058EAA0    pop         esi
 0058EAA1    test        bl,bl
>0058EAA3    je          0058EB5D
 0058EAA9    mov         eax,dword ptr [ebp-4]
 0058EAAC    mov         eax,dword ptr [eax+0C];TSysControl.FHandle:NativeUInt
 0058EAAF    push        0F0
 0058EAB1    push        eax
 0058EAB2    call        user32.GetWindowLongW
 0058EAB7    test        eax,100000
>0058EABC    je          0058EB5D
 0058EAC2    test        eax,200000
>0058EAC7    je          0058EB5D
 0058EACD    push        2
 0058EACF    call        user32.GetSystemMetrics
 0058EAD4    mov         edi,eax
 0058EAD6    push        3
 0058EAD8    call        user32.GetSystemMetrics
 0058EADD    mov         ebx,eax
 0058EADF    lea         eax,[ebp-18]
 0058EAE2    mov         ecx,0FFFFFFFE
 0058EAE7    mov         edx,0FFFFFFFE
 0058EAEC    call        InflateRect
 0058EAF1    mov         eax,esi
 0058EAF3    call        0058E98C
 0058EAF8    test        al,al
>0058EAFA    jne         0058EB23
 0058EAFC    mov         eax,dword ptr [ebp-0C]
 0058EAFF    push        eax
 0058EB00    lea         eax,[ebp-54]
 0058EB03    push        eax
 0058EB04    mov         esi,dword ptr [ebp-18]
 0058EB07    mov         ecx,esi
 0058EB09    add         ecx,edi
 0058EB0B    mov         edx,dword ptr [ebp-0C]
 0058EB0E    sub         edx,ebx
 0058EB10    mov         eax,esi
 0058EB12    call        Rect
 0058EB17    lea         esi,[ebp-54]
 0058EB1A    lea         edi,[ebp-18]
 0058EB1D    movs        dword ptr [edi],dword ptr [esi]
 0058EB1E    movs        dword ptr [edi],dword ptr [esi]
 0058EB1F    movs        dword ptr [edi],dword ptr [esi]
 0058EB20    movs        dword ptr [edi],dword ptr [esi]
>0058EB21    jmp         0058EB48
 0058EB23    mov         eax,dword ptr [ebp-0C]
 0058EB26    push        eax
 0058EB27    lea         eax,[ebp-54]
 0058EB2A    push        eax
 0058EB2B    mov         edx,dword ptr [ebp-0C]
 0058EB2E    sub         edx,ebx
 0058EB30    mov         esi,dword ptr [ebp-10]
 0058EB33    mov         eax,esi
 0058EB35    sub         eax,edi
 0058EB37    mov         ecx,esi
 0058EB39    call        Rect
 0058EB3E    lea         esi,[ebp-54]
 0058EB41    lea         edi,[ebp-18]
 0058EB44    movs        dword ptr [edi],dword ptr [esi]
 0058EB45    movs        dword ptr [edi],dword ptr [esi]
 0058EB46    movs        dword ptr [edi],dword ptr [esi]
 0058EB47    movs        dword ptr [edi],dword ptr [esi]
 0058EB48    push        0F
 0058EB4A    call        user32.GetSysColorBrush
 0058EB4F    push        eax
 0058EB50    lea         eax,[ebp-18]
 0058EB53    push        eax
 0058EB54    mov         eax,dword ptr [ebp-8]
 0058EB57    push        eax
 0058EB58    call        user32.FillRect
 0058EB5D    mov         eax,dword ptr [ebp-1C]
 0058EB60    sub         eax,dword ptr [ebp-38]
 0058EB63    push        eax
 0058EB64    mov         eax,dword ptr [ebp-20]
 0058EB67    sub         eax,dword ptr [ebp-3C]
 0058EB6A    push        eax
 0058EB6B    mov         eax,dword ptr [ebp-24]
 0058EB6E    add         eax,dword ptr [ebp-40]
 0058EB71    push        eax
 0058EB72    mov         eax,dword ptr [ebp-28]
 0058EB75    add         eax,dword ptr [ebp-44]
 0058EB78    push        eax
 0058EB79    mov         eax,dword ptr [ebp-8]
 0058EB7C    push        eax
 0058EB7D    call        gdi32.ExcludeClipRect
 0058EB82    call        TStyleManager.GetActiveStyle
 0058EB87    mov         ebx,eax
 0058EB89    lea         ecx,[ebp-34]
 0058EB8C    mov         dl,2
 0058EB8E    mov         eax,ebx
 0058EB90    mov         ebx,dword ptr [eax]
 0058EB92    call        dword ptr [ebx+84];TCustomStyleServices.GetElementDetails
 0058EB98    call        TStyleManager.GetActiveStyle
 0058EB9D    lea         edx,[ebp-28]
 0058EBA0    push        edx
 0058EBA1    push        0
 0058EBA3    lea         ecx,[ebp-34]
 0058EBA6    mov         edx,dword ptr [ebp-8]
 0058EBA9    call        TCustomStyleServices.DrawElement
 0058EBAE    xor         eax,eax
 0058EBB0    pop         edx
 0058EBB1    pop         ecx
 0058EBB2    pop         ecx
 0058EBB3    mov         dword ptr fs:[eax],edx
 0058EBB6    push        58EBD3
 0058EBBB    mov         eax,dword ptr [ebp-8]
 0058EBBE    push        eax
 0058EBBF    mov         eax,dword ptr [ebp-4]
 0058EBC2    mov         eax,dword ptr [eax+0C];TSysControl.FHandle:NativeUInt
 0058EBC5    push        eax
 0058EBC6    call        user32.ReleaseDC
 0058EBCB    ret
>0058EBCC    jmp         @HandleFinally
>0058EBD1    jmp         0058EBBB
 0058EBD3    pop         edi
 0058EBD4    pop         esi
 0058EBD5    pop         ebx
 0058EBD6    mov         esp,ebp
 0058EBD8    pop         ebp
 0058EBD9    ret
end;*}

//0058EBDC
procedure sub_0058EBDC;
begin
{*
 0058EBDC    ret
*}
end;

//0058EBE0
procedure sub_0058EBE0;
begin
{*
 0058EBE0    xor         ecx,ecx
 0058EBE2    call        0058E668
 0058EBE7    ret
*}
end;

//0058EBE8
procedure TSysStyleHook.Refresh;
begin
{*
 0058EBE8    push        0
 0058EBEA    push        0
 0058EBEC    push        0F
 0058EBEE    mov         eax,dword ptr [eax+4];TSysStyleHook.FHandle:NativeUInt
 0058EBF1    push        eax
 0058EBF2    call        user32.SendMessageW
 0058EBF7    ret
*}
end;

//0058EBF8
{*procedure TSysStyleHook.WMEraseBkgnd(?:?);
begin
 0058EBF8    push        ebp
 0058EBF9    mov         ebp,esp
 0058EBFB    add         esp,0FFFFFFEC
 0058EBFE    mov         dword ptr [ebp-8],edx
 0058EC01    mov         dword ptr [ebp-4],eax
 0058EC04    mov         eax,dword ptr [ebp-4]
 0058EC07    mov         byte ptr [eax+24],0;TSysStyleHook.FHandled:Boolean
 0058EC0B    mov         eax,dword ptr [ebp-4]
 0058EC0E    call        0058E8E8
 0058EC13    test        al,al
>0058EC15    je          0058ED67
 0058EC1B    mov         eax,dword ptr [ebp-4]
 0058EC1E    mov         edx,dword ptr [eax]
 0058EC20    call        dword ptr [edx+24];TSysStyleHook.sub_0058E92C
 0058EC23    mov         eax,dword ptr [ebp-4]
 0058EC26    cmp         byte ptr [eax+14],0;TSysStyleHook.FOverrideEraseBkgnd:Boolean
>0058EC2A    je          0058ED67
 0058EC30    mov         eax,dword ptr [ebp-4]
 0058EC33    cmp         byte ptr [eax+18],0;TSysStyleHook.FDoubleBuffered:Boolean
>0058EC37    jne         0058ED56
 0058EC3D    mov         eax,dword ptr [ebp-8]
 0058EC40    mov         eax,dword ptr [eax+4]
 0058EC43    mov         dword ptr [ebp-0C],eax
 0058EC46    xor         eax,eax
 0058EC48    mov         dword ptr [ebp-14],eax
 0058EC4B    cmp         dword ptr [ebp-0C],0
>0058EC4F    jne         0058EC62
 0058EC51    mov         eax,dword ptr [ebp-4]
 0058EC54    mov         eax,dword ptr [eax+4];TSysStyleHook.FHandle:NativeUInt
 0058EC57    push        eax
 0058EC58    call        user32.GetDC
 0058EC5D    mov         dword ptr [ebp-0C],eax
>0058EC60    jmp         0058EC6E
 0058EC62    mov         eax,dword ptr [ebp-0C]
 0058EC65    push        eax
 0058EC66    call        gdi32.SaveDC
 0058EC6B    mov         dword ptr [ebp-14],eax
 0058EC6E    mov         dl,1
 0058EC70    mov         eax,[004BF670];TCanvas
 0058EC75    call        TCanvas.Create;TCanvas.Create
 0058EC7A    mov         dword ptr [ebp-10],eax
 0058EC7D    xor         edx,edx
 0058EC7F    push        ebp
 0058EC80    push        58ED4F
 0058EC85    push        dword ptr fs:[edx]
 0058EC88    mov         dword ptr fs:[edx],esp
 0058EC8B    mov         edx,dword ptr [ebp-0C]
 0058EC8E    mov         eax,dword ptr [ebp-10]
 0058EC91    call        TCanvas.SetHandle
 0058EC96    mov         eax,dword ptr [ebp-4]
 0058EC99    mov         eax,dword ptr [eax+2C];TSysStyleHook.FFont:TFont
 0058EC9C    test        eax,eax
>0058EC9E    je          0058ECAD
 0058ECA0    mov         edx,eax
 0058ECA2    mov         eax,dword ptr [ebp-10]
 0058ECA5    mov         eax,dword ptr [eax+40];TCanvas.FFont:TFont
 0058ECA8    mov         ecx,dword ptr [eax]
 0058ECAA    call        dword ptr [ecx+8];TFont.Assign
 0058ECAD    mov         eax,dword ptr [ebp-4]
 0058ECB0    cmp         byte ptr [eax+25],0;TSysStyleHook.FParentColor:Boolean
>0058ECB4    je          0058ECD6
 0058ECB6    mov         eax,dword ptr [ebp-4]
 0058ECB9    call        0058E7F8
 0058ECBE    test        eax,eax
>0058ECC0    jbe         0058ECD6
 0058ECC2    mov         eax,dword ptr [ebp-10]
 0058ECC5    call        TCanvas.GetHandle
 0058ECCA    mov         edx,eax
 0058ECCC    mov         eax,dword ptr [ebp-4]
 0058ECCF    call        0058EBE0
>0058ECD4    jmp         0058ECE1
 0058ECD6    mov         edx,dword ptr [ebp-10]
 0058ECD9    mov         eax,dword ptr [ebp-4]
 0058ECDC    mov         ecx,dword ptr [eax]
 0058ECDE    call        dword ptr [ecx+10];TSysStyleHook.sub_0058E9E0
 0058ECE1    mov         eax,dword ptr [ebp-4]
 0058ECE4    cmp         byte ptr [eax+19],0;TSysStyleHook.FPaintOnEraseBkgnd:Boolean
>0058ECE8    je          0058ED01
 0058ECEA    mov         eax,dword ptr [ebp-8]
 0058ECED    cmp         dword ptr [eax+8],93
>0058ECF4    je          0058ED01
 0058ECF6    mov         edx,dword ptr [ebp-10]
 0058ECF9    mov         eax,dword ptr [ebp-4]
 0058ECFC    mov         ecx,dword ptr [eax]
 0058ECFE    call        dword ptr [ecx+8];TSysStyleHook.sub_0058E9DC
 0058ED01    xor         eax,eax
 0058ED03    pop         edx
 0058ED04    pop         ecx
 0058ED05    pop         ecx
 0058ED06    mov         dword ptr fs:[eax],edx
 0058ED09    push        58ED56
 0058ED0E    xor         edx,edx
 0058ED10    mov         eax,dword ptr [ebp-10]
 0058ED13    call        TCanvas.SetHandle
 0058ED18    mov         eax,dword ptr [ebp-10]
 0058ED1B    call        TObject.Free
 0058ED20    mov         eax,dword ptr [ebp-8]
 0058ED23    cmp         dword ptr [eax+4],0
>0058ED27    jne         0058ED3B
 0058ED29    mov         eax,dword ptr [ebp-0C]
 0058ED2C    push        eax
 0058ED2D    mov         eax,dword ptr [ebp-4]
 0058ED30    mov         eax,dword ptr [eax+4];TSysStyleHook.FHandle:NativeUInt
 0058ED33    push        eax
 0058ED34    call        user32.ReleaseDC
>0058ED39    jmp         0058ED4E
 0058ED3B    cmp         dword ptr [ebp-14],0
>0058ED3F    je          0058ED4E
 0058ED41    mov         eax,dword ptr [ebp-14]
 0058ED44    push        eax
 0058ED45    mov         eax,dword ptr [ebp-0C]
 0058ED48    push        eax
 0058ED49    call        gdi32.RestoreDC
 0058ED4E    ret
>0058ED4F    jmp         @HandleFinally
>0058ED54    jmp         0058ED0E
 0058ED56    mov         eax,dword ptr [ebp-4]
 0058ED59    mov         byte ptr [eax+24],1;TSysStyleHook.FHandled:Boolean
 0058ED5D    mov         eax,dword ptr [ebp-8]
 0058ED60    mov         dword ptr [eax+0C],1
 0058ED67    mov         esp,ebp
 0058ED69    pop         ebp
 0058ED6A    ret
end;*}

//0058ED6C
{*function sub_0058ED6C:?;
begin
 0058ED6C    push        ebx
 0058ED6D    push        esi
 0058ED6E    push        ecx
 0058ED6F    mov         dword ptr [esp],93
 0058ED76    mov         esi,esp
 0058ED78    xor         ebx,ebx
 0058ED7A    mov         eax,dword ptr [eax+4];TSysStyleHook.FHandle:NativeUInt
 0058ED7D    push        eax
 0058ED7E    call        user32.GetParent
 0058ED83    test        eax,eax
>0058ED85    jbe         0058ED98
 0058ED87    push        esi
 0058ED88    push        0
 0058ED8A    push        14
 0058ED8C    push        eax
 0058ED8D    call        user32.SendMessageW
 0058ED92    cmp         dword ptr [esi],11
 0058ED95    sete        bl
 0058ED98    mov         eax,ebx
 0058ED9A    pop         edx
 0058ED9B    pop         esi
 0058ED9C    pop         ebx
 0058ED9D    ret
end;*}

//0058EDA0
procedure TSysStyleHook.WMNCPaint;
begin
{*
 0058EDA0    push        ebp
 0058EDA1    mov         ebp,esp
 0058EDA3    add         esp,0FFFFFFF8
 0058EDA6    mov         dword ptr [ebp-4],eax
 0058EDA9    mov         eax,dword ptr [ebp-4]
 0058EDAC    mov         byte ptr [eax+24],0;TSysStyleHook.FHandled:Boolean
 0058EDB0    mov         eax,dword ptr [ebp-4]
 0058EDB3    call        0058E8E8
 0058EDB8    test        al,al
>0058EDBA    je          0058EE73
 0058EDC0    mov         eax,dword ptr [ebp-4]
 0058EDC3    cmp         byte ptr [eax+16],0;TSysStyleHook.FOverridePaintNC:Boolean
>0058EDC7    je          0058EE73
 0058EDCD    mov         dl,1
 0058EDCF    mov         eax,[004BF670];TCanvas
 0058EDD4    call        TCanvas.Create;TCanvas.Create
 0058EDD9    mov         dword ptr [ebp-8],eax
 0058EDDC    xor         edx,edx
 0058EDDE    push        ebp
 0058EDDF    push        58EE65
 0058EDE4    push        dword ptr fs:[edx]
 0058EDE7    mov         dword ptr fs:[edx],esp
 0058EDEA    mov         eax,dword ptr [ebp-4]
 0058EDED    mov         eax,dword ptr [eax+0C];TSysStyleHook.FSysControl:TSysControl
 0058EDF0    mov         eax,dword ptr [eax+0C];TSysControl.FHandle:NativeUInt
 0058EDF3    push        eax
 0058EDF4    call        user32.GetWindowDC
 0058EDF9    mov         edx,eax
 0058EDFB    mov         eax,dword ptr [ebp-8]
 0058EDFE    call        TCanvas.SetHandle
 0058EE03    mov         eax,dword ptr [ebp-4]
 0058EE06    mov         eax,dword ptr [eax+2C];TSysStyleHook.FFont:TFont
 0058EE09    test        eax,eax
>0058EE0B    je          0058EE1A
 0058EE0D    mov         edx,eax
 0058EE0F    mov         eax,dword ptr [ebp-8]
 0058EE12    mov         eax,dword ptr [eax+40];TCanvas.FFont:TFont
 0058EE15    mov         ecx,dword ptr [eax]
 0058EE17    call        dword ptr [ecx+8];TFont.Assign
 0058EE1A    mov         edx,dword ptr [ebp-8]
 0058EE1D    mov         eax,dword ptr [ebp-4]
 0058EE20    mov         ecx,dword ptr [eax]
 0058EE22    call        dword ptr [ecx+0C];TSysStyleHook.sub_0058E62C
 0058EE25    mov         edx,dword ptr [ebp-8]
 0058EE28    mov         eax,dword ptr [ebp-4]
 0058EE2B    mov         ecx,dword ptr [eax]
 0058EE2D    call        dword ptr [ecx+14];TSysStyleHook.sub_0058EBDC
 0058EE30    xor         eax,eax
 0058EE32    pop         edx
 0058EE33    pop         ecx
 0058EE34    pop         ecx
 0058EE35    mov         dword ptr fs:[eax],edx
 0058EE38    push        58EE6C
 0058EE3D    mov         eax,dword ptr [ebp-8]
 0058EE40    call        TCanvas.GetHandle
 0058EE45    push        eax
 0058EE46    mov         eax,dword ptr [ebp-4]
 0058EE49    mov         eax,dword ptr [eax+4];TSysStyleHook.FHandle:NativeUInt
 0058EE4C    push        eax
 0058EE4D    call        user32.ReleaseDC
 0058EE52    xor         edx,edx
 0058EE54    mov         eax,dword ptr [ebp-8]
 0058EE57    call        TCanvas.SetHandle
 0058EE5C    mov         eax,dword ptr [ebp-8]
 0058EE5F    call        TObject.Free
 0058EE64    ret
>0058EE65    jmp         @HandleFinally
>0058EE6A    jmp         0058EE3D
 0058EE6C    mov         eax,dword ptr [ebp-4]
 0058EE6F    mov         byte ptr [eax+24],1;TSysStyleHook.FHandled:Boolean
 0058EE73    pop         ecx
 0058EE74    pop         ecx
 0058EE75    pop         ebp
 0058EE76    ret
*}
end;

//0058EE78
{*procedure TSysStyleHook.WMPaint(?:?);
begin
 0058EE78    push        ebp
 0058EE79    mov         ebp,esp
 0058EE7B    add         esp,0FFFFFFB0
 0058EE7E    push        ebx
 0058EE7F    mov         ebx,edx
 0058EE81    mov         dword ptr [ebp-4],eax
 0058EE84    mov         eax,dword ptr [ebp-4]
 0058EE87    mov         byte ptr [eax+24],0;TSysStyleHook.FHandled:Boolean
 0058EE8B    mov         eax,dword ptr [ebp-4]
 0058EE8E    call        0058E8E8
 0058EE93    test        al,al
>0058EE95    je          0058F048
 0058EE9B    mov         eax,dword ptr [ebp-4]
 0058EE9E    cmp         byte ptr [eax+15],0;TSysStyleHook.FOverridePaint:Boolean
>0058EEA2    je          0058F048
 0058EEA8    mov         eax,dword ptr [ebx+4]
 0058EEAB    mov         dword ptr [ebp-8],eax
 0058EEAE    mov         dl,1
 0058EEB0    mov         eax,[004BF670];TCanvas
 0058EEB5    call        TCanvas.Create;TCanvas.Create
 0058EEBA    mov         dword ptr [ebp-10],eax
 0058EEBD    xor         edx,edx
 0058EEBF    push        ebp
 0058EEC0    push        58F03A
 0058EEC5    push        dword ptr fs:[edx]
 0058EEC8    mov         dword ptr fs:[edx],esp
 0058EECB    cmp         dword ptr [ebp-8],0
>0058EECF    je          0058EEDE
 0058EED1    mov         edx,dword ptr [ebp-8]
 0058EED4    mov         eax,dword ptr [ebp-10]
 0058EED7    call        TCanvas.SetHandle
>0058EEDC    jmp         0058EF0B
 0058EEDE    mov         eax,dword ptr [ebp-4]
 0058EEE1    mov         eax,dword ptr [eax+4];TSysStyleHook.FHandle:NativeUInt
 0058EEE4    push        eax
 0058EEE5    call        user32.GetDC
 0058EEEA    mov         dword ptr [ebp-8],eax
 0058EEED    lea         eax,[ebp-50]
 0058EEF0    push        eax
 0058EEF1    mov         eax,dword ptr [ebp-4]
 0058EEF4    mov         eax,dword ptr [eax+0C];TSysStyleHook.FSysControl:TSysControl
 0058EEF7    mov         eax,dword ptr [eax+0C];TSysControl.FHandle:NativeUInt
 0058EEFA    push        eax
 0058EEFB    call        user32.BeginPaint
 0058EF00    mov         edx,dword ptr [ebp-8]
 0058EF03    mov         eax,dword ptr [ebp-10]
 0058EF06    call        TCanvas.SetHandle
 0058EF0B    mov         eax,dword ptr [ebp-4]
 0058EF0E    mov         eax,dword ptr [eax+2C];TSysStyleHook.FFont:TFont
 0058EF11    test        eax,eax
>0058EF13    je          0058EF22
 0058EF15    mov         edx,eax
 0058EF17    mov         eax,dword ptr [ebp-10]
 0058EF1A    mov         eax,dword ptr [eax+40];TCanvas.FFont:TFont
 0058EF1D    mov         ecx,dword ptr [eax]
 0058EF1F    call        dword ptr [ecx+8];TFont.Assign
 0058EF22    mov         eax,dword ptr [ebp-10]
 0058EF25    call        TCanvas.GetHandle
 0058EF2A    mov         edx,eax
 0058EF2C    mov         eax,dword ptr [ebp-4]
 0058EF2F    mov         ecx,dword ptr [eax]
 0058EF31    call        dword ptr [ecx+20];TSysStyleHook.sub_0058E848
 0058EF34    test        al,al
>0058EF36    jne         0058EFEE
 0058EF3C    mov         eax,dword ptr [ebp-4]
 0058EF3F    cmp         byte ptr [eax+18],0;TSysStyleHook.FDoubleBuffered:Boolean
>0058EF43    je          0058EFE3
 0058EF49    cmp         dword ptr [ebp-8],0
>0058EF4D    jne         0058EFE3
 0058EF53    mov         dl,1
 0058EF55    mov         eax,[004C1D10];TBitmap
 0058EF5A    call        TBitmap.Create;TBitmap.Create
 0058EF5F    mov         dword ptr [ebp-0C],eax
 0058EF62    xor         eax,eax
 0058EF64    push        ebp
 0058EF65    push        58EFDC
 0058EF6A    push        dword ptr fs:[eax]
 0058EF6D    mov         dword ptr fs:[eax],esp
 0058EF70    mov         eax,dword ptr [ebp-4]
 0058EF73    mov         eax,dword ptr [eax+0C];TSysStyleHook.FSysControl:TSysControl
 0058EF76    call        0058E160
 0058EF7B    push        eax
 0058EF7C    mov         eax,dword ptr [ebp-4]
 0058EF7F    mov         eax,dword ptr [eax+0C];TSysStyleHook.FSysControl:TSysControl
 0058EF82    call        0058E3B0
 0058EF87    mov         edx,eax
 0058EF89    mov         eax,dword ptr [ebp-0C]
 0058EF8C    pop         ecx
 0058EF8D    mov         ebx,dword ptr [eax]
 0058EF8F    call        dword ptr [ebx+6C];TBitmap.SetSize
 0058EF92    mov         eax,dword ptr [ebp-0C]
 0058EF95    call        TBitmap.GetCanvas
 0058EF9A    mov         edx,eax
 0058EF9C    mov         eax,dword ptr [ebp-4]
 0058EF9F    mov         ecx,dword ptr [eax]
 0058EFA1    call        dword ptr [ecx+10];TSysStyleHook.sub_0058E9E0
 0058EFA4    mov         eax,dword ptr [ebp-0C]
 0058EFA7    call        TBitmap.GetCanvas
 0058EFAC    mov         edx,eax
 0058EFAE    mov         eax,dword ptr [ebp-4]
 0058EFB1    mov         ecx,dword ptr [eax]
 0058EFB3    call        dword ptr [ecx+8];TSysStyleHook.sub_0058E9DC
 0058EFB6    mov         eax,dword ptr [ebp-0C]
 0058EFB9    push        eax
 0058EFBA    xor         ecx,ecx
 0058EFBC    xor         edx,edx
 0058EFBE    mov         eax,dword ptr [ebp-10]
 0058EFC1    mov         ebx,dword ptr [eax]
 0058EFC3    call        dword ptr [ebx+44];TCanvas.Draw
 0058EFC6    xor         eax,eax
 0058EFC8    pop         edx
 0058EFC9    pop         ecx
 0058EFCA    pop         ecx
 0058EFCB    mov         dword ptr fs:[eax],edx
 0058EFCE    push        58EFEE
 0058EFD3    mov         eax,dword ptr [ebp-0C]
 0058EFD6    call        TObject.Free
 0058EFDB    ret
>0058EFDC    jmp         @HandleFinally
>0058EFE1    jmp         0058EFD3
 0058EFE3    mov         edx,dword ptr [ebp-10]
 0058EFE6    mov         eax,dword ptr [ebp-4]
 0058EFE9    mov         ecx,dword ptr [eax]
 0058EFEB    call        dword ptr [ecx+8];TSysStyleHook.sub_0058E9DC
 0058EFEE    cmp         dword ptr [ebp-8],0
>0058EFF2    jne         0058F01A
 0058EFF4    mov         eax,dword ptr [ebp-8]
 0058EFF7    push        eax
 0058EFF8    mov         eax,dword ptr [ebp-4]
 0058EFFB    mov         eax,dword ptr [eax+0C];TSysStyleHook.FSysControl:TSysControl
 0058EFFE    mov         eax,dword ptr [eax+0C];TSysControl.FHandle:NativeUInt
 0058F001    push        eax
 0058F002    call        user32.ReleaseDC
 0058F007    lea         eax,[ebp-50]
 0058F00A    push        eax
 0058F00B    mov         eax,dword ptr [ebp-4]
 0058F00E    mov         eax,dword ptr [eax+0C];TSysStyleHook.FSysControl:TSysControl
 0058F011    mov         eax,dword ptr [eax+0C];TSysControl.FHandle:NativeUInt
 0058F014    push        eax
 0058F015    call        user32.EndPaint
 0058F01A    xor         eax,eax
 0058F01C    pop         edx
 0058F01D    pop         ecx
 0058F01E    pop         ecx
 0058F01F    mov         dword ptr fs:[eax],edx
 0058F022    push        58F041
 0058F027    xor         edx,edx
 0058F029    mov         eax,dword ptr [ebp-10]
 0058F02C    call        TCanvas.SetHandle
 0058F031    mov         eax,dword ptr [ebp-10]
 0058F034    call        TObject.Free
 0058F039    ret
>0058F03A    jmp         @HandleFinally
>0058F03F    jmp         0058F027
 0058F041    mov         eax,dword ptr [ebp-4]
 0058F044    mov         byte ptr [eax+24],1;TSysStyleHook.FHandled:Boolean
 0058F048    pop         ebx
 0058F049    mov         esp,ebp
 0058F04B    pop         ebp
 0058F04C    ret
end;*}

//0058F050
{*procedure sub_0058F050(?:?);
begin
 0058F050    push        ebp
 0058F051    mov         ebp,esp
 0058F053    add         esp,0FFFFFFEC
 0058F056    push        ebx
 0058F057    push        esi
 0058F058    push        edi
 0058F059    mov         esi,edx
 0058F05B    mov         ebx,eax
 0058F05D    mov         eax,dword ptr [esi]
 0058F05F    cmp         eax,210
>0058F064    jg          0058F09A
>0058F066    je          0058F1C2
 0058F06C    sub         eax,0B
>0058F06F    je          0058F229
 0058F075    sub         eax,9
>0058F078    je          0058F1D9
 0058F07E    sub         eax,113
>0058F083    je          0058F1C2
 0058F089    add         eax,0FFFFFFF5
 0058F08C    sub         eax,7
>0058F08F    jb          0058F243
>0058F095    jmp         0058F2DD
 0058F09A    add         eax,0FFFFF9BB
 0058F09F    sub         eax,7
>0058F0A2    jb          0058F2A2
 0058F0A8    add         eax,0FFFFFFD1
 0058F0AB    sub         eax,2
>0058F0AE    jb          0058F21D
>0058F0B4    je          0058F0C6
 0058F0B6    dec         eax
>0058F0B7    jne         0058F2DD
 0058F0BD    mov         byte ptr [ebx+34],1;TSysStyleHook.FHookedDirectly:Boolean
>0058F0C1    jmp         0058F2FE
 0058F0C6    xor         eax,eax
 0058F0C8    mov         dword ptr [esi+0C],eax
 0058F0CB    call        TStyleManager.GetEngine
 0058F0D0    test        eax,eax
>0058F0D2    je          0058F2FE
 0058F0D8    call        TStyleManager.GetEngine
 0058F0DD    mov         eax,[007CA738];gvar_007CA738:TObjectDictionary<Winapi.Windows.HWND,Vcl.Themes.TChildCont...
 0058F0E2    call        0059271C
 0058F0E7    call        TDictionary<Winapi.Windows.HWND,Vcl.Themes.TChildControlInfo>.TKeyCollection.GetEnumerator
 0058F0EC    mov         dword ptr [ebp-8],eax
 0058F0EF    xor         eax,eax
 0058F0F1    push        ebp
 0058F0F2    push        58F1BB
 0058F0F7    push        dword ptr fs:[eax]
 0058F0FA    mov         dword ptr fs:[eax],esp
>0058F0FD    jmp         0058F18D
 0058F102    mov         eax,dword ptr [ebp-8]
 0058F105    call        005927E0
 0058F10A    mov         edi,eax
 0058F10C    mov         eax,edi
 0058F10E    call        0058E460
 0058F113    test        al,al
>0058F115    jne         0058F18D
 0058F117    lea         ecx,[ebp-14]
 0058F11A    mov         edx,edi
 0058F11C    mov         eax,[007CA738];gvar_007CA738:TObjectDictionary<Winapi.Windows.HWND,Vcl.Themes.TChildCont...
 0058F121    call        TDictionary<Winapi.Windows.HWND,Vcl.Themes.TChildControlInfo>.GetItem
 0058F126    mov         eax,dword ptr [ebp-14]
 0058F129    cmp         eax,dword ptr [ebx+4];TSysStyleHook.FHandle:NativeUInt
>0058F12C    jne         0058F18D
 0058F12E    mov         edx,edi
 0058F130    mov         eax,[007CA734];gvar_007CA734:TObjectDictionary<Winapi.Windows.HWND,Vcl.Themes.TSysStyleH...
 0058F135    call        TDictionary<Winapi.Windows.HWND,Vcl.Themes.TSysStyleHook>.ContainsKey
 0058F13A    test        al,al
>0058F13C    jne         0058F18D
 0058F13E    lea         ecx,[ebp-14]
 0058F141    mov         edx,edi
 0058F143    mov         eax,[007CA738];gvar_007CA738:TObjectDictionary<Winapi.Windows.HWND,Vcl.Themes.TChildCont...
 0058F148    call        TDictionary<Winapi.Windows.HWND,Vcl.Themes.TChildControlInfo>.GetItem
 0058F14D    mov         eax,dword ptr [ebp-0C]
 0058F150    mov         ecx,edi
 0058F152    mov         dl,1
 0058F154    call        dword ptr [eax+28]
 0058F157    mov         ecx,eax
 0058F159    mov         edx,edi
 0058F15B    mov         eax,[007CA734];gvar_007CA734:TObjectDictionary<Winapi.Windows.HWND,Vcl.Themes.TSysStyleH...
 0058F160    call        TDictionary<Winapi.Windows.HWND,Vcl.Themes.TSysStyleHook>.Add
 0058F165    push        407
 0058F16A    push        0
 0058F16C    push        0
 0058F16E    push        edi
 0058F16F    call        user32.RedrawWindow
 0058F174    push        27
 0058F176    push        0
 0058F178    push        0
 0058F17A    push        0
 0058F17C    push        0
 0058F17E    push        0
 0058F180    push        edi
 0058F181    call        user32.SetWindowPos
 0058F186    mov         dword ptr [esi+0C],1
 0058F18D    mov         eax,dword ptr [ebp-8]
 0058F190    call        TDictionary<Winapi.Windows.HWND,Vcl.Themes.TChildControlInfo>.TKeyEnumerator.MoveNext
 0058F195    test        al,al
>0058F197    jne         0058F102
 0058F19D    xor         eax,eax
 0058F19F    pop         edx
 0058F1A0    pop         ecx
 0058F1A1    pop         ecx
 0058F1A2    mov         dword ptr fs:[eax],edx
 0058F1A5    push        58F2FE
 0058F1AA    cmp         dword ptr [ebp-8],0
>0058F1AE    je          0058F1BA
 0058F1B0    mov         dl,1
 0058F1B2    mov         eax,dword ptr [ebp-8]
 0058F1B5    mov         ecx,dword ptr [eax]
 0058F1B7    call        dword ptr [ecx-4]
 0058F1BA    ret
>0058F1BB    jmp         @HandleFinally
>0058F1C0    jmp         0058F1AA
 0058F1C2    push        0
 0058F1C4    push        0
 0058F1C6    push        67D
 0058F1CB    mov         eax,dword ptr [ebx+4];TSysStyleHook.FHandle:NativeUInt
 0058F1CE    push        eax
 0058F1CF    call        user32.SendMessageW
>0058F1D4    jmp         0058F2DD
 0058F1D9    cmp         dword ptr [esi+8],0
>0058F1DD    jle         0058F2DD
 0058F1E3    cmp         dword ptr [esi+4],0
>0058F1E7    jne         0058F2DD
 0058F1ED    cmp         byte ptr [ebx+14],0;TSysStyleHook.FOverrideEraseBkgnd:Boolean
>0058F1F1    jne         0058F203
 0058F1F3    cmp         byte ptr [ebx+15],0;TSysStyleHook.FOverridePaint:Boolean
>0058F1F7    jne         0058F203
 0058F1F9    cmp         byte ptr [ebx+19],0;TSysStyleHook.FPaintOnEraseBkgnd:Boolean
>0058F1FD    je          0058F2DD
 0058F203    mov         eax,dword ptr [esi+8]
 0058F206    cmp         dword ptr [eax],93
>0058F20C    jne         0058F2DD
 0058F212    mov         dword ptr [eax],11
>0058F218    jmp         0058F2FE
 0058F21D    mov         dword ptr [esi+0C],77
>0058F224    jmp         0058F2FE
 0058F229    mov         edx,esi
 0058F22B    mov         eax,ebx
 0058F22D    call        0058E610
 0058F232    mov         dword ptr [esi+0C],eax
 0058F235    mov         edx,esi
 0058F237    mov         eax,ebx
 0058F239    mov         ecx,dword ptr [eax]
 0058F23B    call        dword ptr [ecx-14];TObject.Dispatch
>0058F23E    jmp         0058F2FE
 0058F243    mov         eax,ebx
 0058F245    call        0058E8E8
 0058F24A    test        al,al
>0058F24C    jne         0058F25F
 0058F24E    mov         edx,esi
 0058F250    mov         eax,ebx
 0058F252    call        0058E610
 0058F257    mov         dword ptr [esi+0C],eax
>0058F25A    jmp         0058F2FE
 0058F25F    mov         eax,dword ptr [esi+8]
 0058F262    push        eax
 0058F263    mov         eax,dword ptr [esi+4]
 0058F266    push        eax
 0058F267    mov         eax,dword ptr [esi]
 0058F269    add         eax,513
 0058F26E    push        eax
 0058F26F    mov         eax,dword ptr [ebx+4];TSysStyleHook.FHandle:NativeUInt
 0058F272    push        eax
 0058F273    call        user32.SendMessageW
 0058F278    mov         dword ptr [ebp-4],eax
 0058F27B    mov         ebx,dword ptr [esi+8]
 0058F27E    push        ebx
 0058F27F    mov         eax,dword ptr [esi+4]
 0058F282    push        eax
 0058F283    mov         eax,dword ptr [esi]
 0058F285    add         eax,513
 0058F28A    push        eax
 0058F28B    push        ebx
 0058F28C    call        user32.SendMessageW
 0058F291    mov         edi,eax
 0058F293    mov         dword ptr [esi+0C],edi
 0058F296    test        edi,edi
>0058F298    jne         0058F2FE
 0058F29A    mov         eax,dword ptr [ebp-4]
 0058F29D    mov         dword ptr [esi+0C],eax
>0058F2A0    jmp         0058F2FE
 0058F2A2    mov         eax,ebx
 0058F2A4    call        0058E7F4
 0058F2A9    call        ColorToRGB
 0058F2AE    push        eax
 0058F2AF    mov         eax,dword ptr [esi+4]
 0058F2B2    push        eax
 0058F2B3    call        gdi32.SetTextColor
 0058F2B8    mov         edi,dword ptr [ebx+20];TSysStyleHook.FBrush:TBrush
 0058F2BB    mov         eax,dword ptr [edi+10];TBrush.FResource:PResource
 0058F2BE    mov         eax,dword ptr [eax+18]
 0058F2C1    call        ColorToRGB
 0058F2C6    push        eax
 0058F2C7    mov         eax,dword ptr [esi+4]
 0058F2CA    push        eax
 0058F2CB    call        gdi32.SetBkColor
 0058F2D0    mov         eax,dword ptr [ebx+20];TSysStyleHook.FBrush:TBrush
 0058F2D3    call        TBrush.GetHandle
 0058F2D8    mov         dword ptr [esi+0C],eax
>0058F2DB    jmp         0058F2FE
 0058F2DD    mov         edx,esi
 0058F2DF    mov         eax,ebx
 0058F2E1    mov         ecx,dword ptr [eax]
 0058F2E3    call        dword ptr [ecx-14];TObject.Dispatch
 0058F2E6    cmp         byte ptr [ebx+24],0;TSysStyleHook.FHandled:Boolean
>0058F2EA    jne         0058F2FA
 0058F2EC    mov         edx,esi
 0058F2EE    mov         eax,ebx
 0058F2F0    call        0058E610
 0058F2F5    mov         dword ptr [esi+0C],eax
>0058F2F8    jmp         0058F2FE
 0058F2FA    mov         byte ptr [ebx+24],0;TSysStyleHook.FHandled:Boolean
 0058F2FE    pop         edi
 0058F2FF    pop         esi
 0058F300    pop         ebx
 0058F301    mov         esp,ebp
 0058F303    pop         ebp
 0058F304    ret
end;*}

//0058F308
destructor TEnumerable<Vcl.Themes.TStyleHookClass>.Destroy();
begin
{*
 0058F308    push        ebx
 0058F309    push        esi
 0058F30A    call        @BeforeDestruction
 0058F30F    mov         ebx,edx
 0058F311    mov         esi,eax
 0058F313    mov         dl,0FC
 0058F315    and         dl,bl
 0058F317    mov         eax,esi
 0058F319    call        TObject.Destroy
 0058F31E    test        bl,bl
>0058F320    jle         0058F329
 0058F322    mov         eax,esi
 0058F324    call        @ClassDestroy
 0058F329    pop         esi
 0058F32A    pop         ebx
 0058F32B    ret
*}
end;

//0058F32C
function TEnumerable<Vcl.Themes.TStyleHookClass>.GetEnumerator:TEnumerator<Vcl.Themes.TStyleHookClass>;
begin
{*
 0058F32C    mov         edx,dword ptr [eax]
 0058F32E    call        dword ptr [edx]
 0058F330    ret
*}
end;

//0058F334
{*procedure TEnumerable<Vcl.Themes.TStyleHookClass>.ToArray(?:?);
begin
 0058F334    push        ebp
 0058F335    mov         ebp,esp
 0058F337    add         esp,0FFFFFFF4
 0058F33A    push        ebx
 0058F33B    mov         dword ptr [ebp-4],edx
 0058F33E    mov         ebx,eax
 0058F340    mov         dl,1
 0058F342    mov         eax,[00576DF8];TList<Vcl.Themes.TStyleHookClass>
 0058F347    call        0058F480
 0058F34C    mov         dword ptr [ebp-8],eax
 0058F34F    xor         eax,eax
 0058F351    push        ebp
 0058F352    push        58F3DC
 0058F357    push        dword ptr fs:[eax]
 0058F35A    mov         dword ptr fs:[eax],esp
 0058F35D    mov         eax,ebx
 0058F35F    call        TEnumerable<Vcl.Themes.TStyleHookClass>.GetEnumerator
 0058F364    mov         dword ptr [ebp-0C],eax
 0058F367    xor         eax,eax
 0058F369    push        ebp
 0058F36A    push        58F3B4
 0058F36F    push        dword ptr fs:[eax]
 0058F372    mov         dword ptr fs:[eax],esp
>0058F375    jmp         0058F38A
 0058F377    mov         eax,dword ptr [ebp-0C]
 0058F37A    mov         edx,dword ptr [eax]
 0058F37C    call        dword ptr [edx]
 0058F37E    mov         ebx,eax
 0058F380    mov         edx,ebx
 0058F382    mov         eax,dword ptr [ebp-8]
 0058F385    call        TList<Vcl.Themes.TStyleHookClass>.Add
 0058F38A    mov         eax,dword ptr [ebp-0C]
 0058F38D    call        TEnumerator<Vcl.Themes.TStyleHookClass>.MoveNext
 0058F392    test        al,al
>0058F394    jne         0058F377
 0058F396    xor         eax,eax
 0058F398    pop         edx
 0058F399    pop         ecx
 0058F39A    pop         ecx
 0058F39B    mov         dword ptr fs:[eax],edx
 0058F39E    push        58F3BB
 0058F3A3    cmp         dword ptr [ebp-0C],0
>0058F3A7    je          0058F3B3
 0058F3A9    mov         dl,1
 0058F3AB    mov         eax,dword ptr [ebp-0C]
 0058F3AE    mov         ecx,dword ptr [eax]
 0058F3B0    call        dword ptr [ecx-4]
 0058F3B3    ret
>0058F3B4    jmp         @HandleFinally
>0058F3B9    jmp         0058F3A3
 0058F3BB    mov         edx,dword ptr [ebp-4]
 0058F3BE    mov         eax,dword ptr [ebp-8]
 0058F3C1    call        TList<Vcl.Themes.TStyleHookClass>.ToArray
 0058F3C6    xor         eax,eax
 0058F3C8    pop         edx
 0058F3C9    pop         ecx
 0058F3CA    pop         ecx
 0058F3CB    mov         dword ptr fs:[eax],edx
 0058F3CE    push        58F3E3
 0058F3D3    mov         eax,dword ptr [ebp-8]
 0058F3D6    call        TObject.Free
 0058F3DB    ret
>0058F3DC    jmp         @HandleFinally
>0058F3E1    jmp         0058F3D3
 0058F3E3    pop         ebx
 0058F3E4    mov         esp,ebp
 0058F3E6    pop         ebp
 0058F3E7    ret
end;*}

//0058F3E8
function TEnumerator<Vcl.Themes.TStyleHookClass>.MoveNext:Boolean;
begin
{*
 0058F3E8    mov         edx,dword ptr [eax]
 0058F3EA    call        dword ptr [edx+4]
 0058F3ED    ret
*}
end;

//0058F438
procedure sub_0058F438(?:TList<Vcl.Themes.TStyleHookClass>);
begin
{*
 0058F438    add         eax,8
 0058F43B    call        004357A0
 0058F440    ret
*}
end;

//0058F444
{*procedure sub_0058F444(?:?; ?:?);
begin
 0058F444    push        ebx
 0058F445    mov         edx,dword ptr [edx]
 0058F447    mov         ebx,dword ptr [eax]
 0058F449    call        dword ptr [ebx+8]
 0058F44C    pop         ebx
 0058F44D    ret
end;*}

//0058F450
{*procedure sub_0058F450(?:?; ?:?; ?:?);
begin
 0058F450    push        ebx
 0058F451    mov         edx,dword ptr [edx]
 0058F453    mov         ecx,dword ptr [ecx]
 0058F455    mov         eax,dword ptr [eax+24]
 0058F458    mov         ebx,dword ptr [eax]
 0058F45A    call        dword ptr [ebx+0C]
 0058F45D    pop         ebx
 0058F45E    ret
end;*}

//0058F460
procedure sub_0058F460;
begin
{*
 0058F460    call        TList<Vcl.Themes.TStyleHookClass>.GetEnumerator
 0058F465    ret
*}
end;

//0058F468
{*procedure sub_0058F468(?:?);
begin
 0058F468    push        ebx
 0058F469    cmp         word ptr [eax+2A],0
>0058F46E    je          0058F47D
 0058F470    push        ecx
 0058F471    mov         ebx,eax
 0058F473    mov         ecx,edx
 0058F475    mov         edx,eax
 0058F477    mov         eax,dword ptr [ebx+2C]
 0058F47A    call        dword ptr [ebx+28]
 0058F47D    pop         ebx
 0058F47E    ret
end;*}

//0058F480
constructor sub_0058F480;
begin
{*
 0058F480    push        ebp
 0058F481    mov         ebp,esp
 0058F483    push        0
 0058F485    push        ebx
 0058F486    push        esi
 0058F487    test        dl,dl
>0058F489    je          0058F493
 0058F48B    add         esp,0FFFFFFF0
 0058F48E    call        @ClassCreate
 0058F493    mov         ebx,edx
 0058F495    mov         esi,eax
 0058F497    xor         eax,eax
 0058F499    push        ebp
 0058F49A    push        58F4D4
 0058F49F    push        dword ptr fs:[eax]
 0058F4A2    mov         dword ptr fs:[eax],esp
 0058F4A5    lea         edx,[ebp-4]
 0058F4A8    mov         eax,[00597254];TComparer<Vcl.Themes.TStyleHookClass>
 0058F4AD    call        TComparer<Vcl.Themes.TStyleHookClass>.Default
 0058F4B2    mov         ecx,dword ptr [ebp-4]
 0058F4B5    xor         edx,edx
 0058F4B7    mov         eax,esi
 0058F4B9    call        0058F4F8
 0058F4BE    xor         eax,eax
 0058F4C0    pop         edx
 0058F4C1    pop         ecx
 0058F4C2    pop         ecx
 0058F4C3    mov         dword ptr fs:[eax],edx
 0058F4C6    push        58F4DB
 0058F4CB    lea         eax,[ebp-4]
 0058F4CE    call        @IntfClear
 0058F4D3    ret
>0058F4D4    jmp         @HandleFinally
>0058F4D9    jmp         0058F4CB
 0058F4DB    mov         eax,esi
 0058F4DD    test        bl,bl
>0058F4DF    je          0058F4F0
 0058F4E1    call        @AfterConstruction
 0058F4E6    pop         dword ptr fs:[0]
 0058F4ED    add         esp,0C
 0058F4F0    mov         eax,esi
 0058F4F2    pop         esi
 0058F4F3    pop         ebx
 0058F4F4    pop         ecx
 0058F4F5    pop         ebp
 0058F4F6    ret
*}
end;

//0058F4F8
constructor sub_0058F4F8(AComparer:IComparer<Vcl.Themes.TStyleHookClass>);
begin
{*
 0058F4F8    push        ebp
 0058F4F9    mov         ebp,esp
 0058F4FB    push        0
 0058F4FD    push        ebx
 0058F4FE    push        esi
 0058F4FF    push        edi
 0058F500    test        dl,dl
>0058F502    je          0058F50C
 0058F504    add         esp,0FFFFFFF0
 0058F507    call        @ClassCreate
 0058F50C    mov         esi,ecx
 0058F50E    mov         ebx,edx
 0058F510    mov         edi,eax
 0058F512    xor         eax,eax
 0058F514    push        ebp
 0058F515    push        58F583
 0058F51A    push        dword ptr fs:[eax]
 0058F51D    mov         dword ptr fs:[eax],esp
 0058F520    xor         edx,edx
 0058F522    mov         eax,edi
 0058F524    call        TObject.Create
 0058F529    mov         dword ptr [edi+14],edi;TList<Vcl.Themes.TStyleHookClass>.FOnNotify:TCollectionNotifyEven...
 0058F52C    mov         dword ptr [edi+10],58F444;TList<Vcl.Themes.TStyleHookClass>.FOnNotify:TCollectionNotifyE...
 0058F533    mov         dword ptr [edi+1C],edi
 0058F536    mov         dword ptr [edi+18],58F450;sub_0058F450
 0058F53D    mov         eax,[005769FC];TList<Vcl.Themes.TStyleHookClass>.arrayofT
 0058F542    mov         dword ptr [edi+0C],eax;TList<Vcl.Themes.TStyleHookClass>.FComparer:IComparer<Vcl.Themes....
 0058F545    lea         eax,[edi+24]
 0058F548    mov         edx,esi
 0058F54A    call        @IntfCopy
 0058F54F    cmp         dword ptr [edi+24],0
>0058F553    jne         0058F56D
 0058F555    lea         edx,[ebp-4]
 0058F558    mov         eax,[00597254];TComparer<Vcl.Themes.TStyleHookClass>
 0058F55D    call        TComparer<Vcl.Themes.TStyleHookClass>.Default
 0058F562    mov         edx,dword ptr [ebp-4]
 0058F565    lea         eax,[edi+24]
 0058F568    call        @IntfCopy
 0058F56D    xor         eax,eax
 0058F56F    pop         edx
 0058F570    pop         ecx
 0058F571    pop         ecx
 0058F572    mov         dword ptr fs:[eax],edx
 0058F575    push        58F58A
 0058F57A    lea         eax,[ebp-4]
 0058F57D    call        @IntfClear
 0058F582    ret
>0058F583    jmp         @HandleFinally
>0058F588    jmp         0058F57A
 0058F58A    mov         eax,edi
 0058F58C    test        bl,bl
>0058F58E    je          0058F59F
 0058F590    call        @AfterConstruction
 0058F595    pop         dword ptr fs:[0]
 0058F59C    add         esp,0C
 0058F59F    mov         eax,edi
 0058F5A1    pop         edi
 0058F5A2    pop         esi
 0058F5A3    pop         ebx
 0058F5A4    pop         ecx
 0058F5A5    pop         ebp
 0058F5A6    ret
*}
end;

//0058F5A8
destructor TList<Vcl.Themes.TStyleHookClass>.Destroy();
begin
{*
 0058F5A8    push        ebx
 0058F5A9    push        esi
 0058F5AA    call        @BeforeDestruction
 0058F5AF    mov         ebx,edx
 0058F5B1    mov         esi,eax
 0058F5B3    cmp         dword ptr [esi+8],0;TList<Vcl.Themes.TStyleHookClass>.FCount:Integer
>0058F5B7    jle         0058F5C2
 0058F5B9    xor         edx,edx
 0058F5BB    mov         eax,esi
 0058F5BD    call        0058F438
 0058F5C2    push        0
 0058F5C4    lea         eax,[esi+20]
 0058F5C7    mov         ecx,1
 0058F5CC    mov         edx,dword ptr ds:[5769FC];TList<Vcl.Themes.TStyleHookClass>.arrayofT
 0058F5D2    call        @DynArraySetLength
 0058F5D7    add         esp,4
 0058F5DA    mov         dl,0FC
 0058F5DC    and         dl,bl
 0058F5DE    mov         eax,esi
 0058F5E0    call        TEnumerable<Vcl.Themes.TStyleHookClass>.Destroy
 0058F5E5    test        bl,bl
>0058F5E7    jle         0058F5F0
 0058F5E9    mov         eax,esi
 0058F5EB    call        @ClassDestroy
 0058F5F0    pop         esi
 0058F5F1    pop         ebx
 0058F5F2    ret
*}
end;

//0058F5F4
{*procedure TList<Vcl.Themes.TStyleHookClass>.Error(Msg:string; Data:NativeInt; ?:?);
begin
 0058F5F4    push        ebp
 0058F5F5    mov         ebp,esp
 0058F5F7    add         esp,0FFFFFFF0
 0058F5FA    mov         dword ptr [ebp-8],ecx
 0058F5FD    mov         dword ptr [ebp-4],edx
 0058F600    push        dword ptr [ebp+4]
 0058F603    mov         eax,dword ptr [ebp-8]
 0058F606    mov         dword ptr [ebp-10],eax
 0058F609    mov         byte ptr [ebp-0C],0
 0058F60D    lea         eax,[ebp-10]
 0058F610    push        eax
 0058F611    push        0
 0058F613    mov         ecx,dword ptr [ebp-4]
 0058F616    mov         dl,1
 0058F618    mov         eax,[004180BC];EListError
 0058F61D    call        Exception.CreateFmt;EListError.Create
>0058F622    jmp         @RaiseExcept
end;*}

//0058F62C
procedure TList<Vcl.Themes.TStyleHookClass>.Add(Value:TStyleHookClass);
begin
{*
 0058F62C    push        ecx
 0058F62D    mov         dword ptr [esp],edx
 0058F630    mov         edx,esp
 0058F632    add         eax,8
 0058F635    call        0043489C
 0058F63A    pop         edx
 0058F63B    ret
*}
end;

//0058F63C
{*procedure TList<Vcl.Themes.TStyleHookClass>.ToArray(?:?);
begin
 0058F63C    push        ecx
 0058F63D    mov         dword ptr [esp],edx
 0058F640    mov         edx,dword ptr [esp]
 0058F643    add         eax,8
 0058F646    call        00435980
 0058F64B    pop         edx
 0058F64C    ret
end;*}

//0058F650
function TList<Vcl.Themes.TStyleHookClass>.GetEnumerator:TList<Vcl.Themes.TStyleHookClass>.TEnumerator;
begin
{*
 0058F650    mov         ecx,eax
 0058F652    mov         dl,1
 0058F654    mov         eax,[00576C40];TList<Vcl.Themes.TStyleHookClass>.TEnumerator
 0058F659    call        TMenuItem.Create
 0058F65E    ret
*}
end;

//0058F660
{*function sub_0058F660(?:?):?;
begin
 0058F660    push        ebx
 0058F661    push        esi
 0058F662    mov         ebx,dword ptr [eax+4]
 0058F665    mov         esi,dword ptr [eax+8]
 0058F668    lea         eax,[ebx+8]
 0058F66B    mov         edx,esi
 0058F66D    call        00434534
 0058F672    mov         eax,dword ptr [ebx+20]
 0058F675    mov         eax,dword ptr [eax+esi*4]
 0058F678    pop         esi
 0058F679    pop         ebx
 0058F67A    ret
end;*}

//0058F67C
procedure sub_0058F67C;
begin
{*
 0058F67C    call        0058F660
 0058F681    ret
*}
end;

//0058F684
procedure sub_0058F684;
begin
{*
 0058F684    call        TList<Vcl.Themes.TStyleHookClass>.TEnumerator.MoveNext
 0058F689    ret
*}
end;

//0058F68C
constructor TMenuItem.Create;
begin
{*
 0058F68C    push        ebx
 0058F68D    push        esi
 0058F68E    push        edi
 0058F68F    test        dl,dl
>0058F691    je          0058F69B
 0058F693    add         esp,0FFFFFFF0
 0058F696    call        @ClassCreate
 0058F69B    mov         esi,ecx
 0058F69D    mov         ebx,edx
 0058F69F    mov         edi,eax
 0058F6A1    xor         edx,edx
 0058F6A3    mov         eax,edi
 0058F6A5    call        TObject.Create
 0058F6AA    mov         dword ptr [edi+4],esi
 0058F6AD    mov         dword ptr [edi+8],0FFFFFFFF
 0058F6B4    mov         eax,edi
 0058F6B6    test        bl,bl
>0058F6B8    je          0058F6C9
 0058F6BA    call        @AfterConstruction
 0058F6BF    pop         dword ptr fs:[0]
 0058F6C6    add         esp,0C
 0058F6C9    mov         eax,edi
 0058F6CB    pop         edi
 0058F6CC    pop         esi
 0058F6CD    pop         ebx
 0058F6CE    ret
*}
end;

//0058F6D0
function TList<Vcl.Themes.TStyleHookClass>.TEnumerator.MoveNext:Boolean;
begin
{*
 0058F6D0    mov         edx,dword ptr [eax+4]
 0058F6D3    mov         edx,dword ptr [edx+8]
 0058F6D6    cmp         edx,dword ptr [eax+8]
>0058F6D9    jg          0058F6DE
 0058F6DB    xor         eax,eax
 0058F6DD    ret
 0058F6DE    inc         dword ptr [eax+8]
 0058F6E1    mov         edx,dword ptr [eax+4]
 0058F6E4    mov         edx,dword ptr [edx+8]
 0058F6E7    cmp         edx,dword ptr [eax+8]
 0058F6EA    setg        al
 0058F6ED    ret
*}
end;

//0058F6F0
{*procedure sub_0058F6F0(?:TDictionary<System; ?:?; ?:?);
begin
 0058F6F0    push        ebp
 0058F6F1    mov         ebp,esp
 0058F6F3    add         esp,0FFFFFFF0
 0058F6F6    push        ebx
 0058F6F7    push        esi
 0058F6F8    push        edi
 0058F6F9    mov         dword ptr [ebp-4],ecx
 0058F6FC    mov         ebx,edx
 0058F6FE    mov         esi,eax
 0058F700    lea         edi,[ebp-0C]
 0058F703    push        ebx
 0058F704    mov         eax,dword ptr [ebp-4]
 0058F707    mov         ecx,1
 0058F70C    mov         edx,dword ptr ds:[577B78];TArray<Vcl.Themes.TPair<System.TClass,System.Generics.Collecti...
 0058F712    call        @DynArraySetLength
 0058F717    add         esp,4
 0058F71A    xor         ebx,ebx
 0058F71C    mov         eax,esi
 0058F71E    call        TEnumerable<Vcl.Themes.TPair<System.TClass,System.Generics.Collections.TList<Vcl.Themes.TStyleHookClass>>>.GetEnumerator
 0058F723    mov         dword ptr [ebp-10],eax
 0058F726    xor         eax,eax
 0058F728    push        ebp
 0058F729    push        58F77B
 0058F72E    push        dword ptr fs:[eax]
 0058F731    mov         dword ptr fs:[eax],esp
>0058F734    jmp         0058F751
 0058F736    mov         edx,edi
 0058F738    mov         eax,dword ptr [ebp-10]
 0058F73B    mov         ecx,dword ptr [eax]
 0058F73D    call        dword ptr [ecx]
 0058F73F    mov         eax,dword ptr [ebp-4]
 0058F742    mov         eax,dword ptr [eax]
 0058F744    mov         edx,dword ptr [edi]
 0058F746    mov         dword ptr [eax+ebx*8],edx
 0058F749    mov         edx,dword ptr [edi+4]
 0058F74C    mov         dword ptr [eax+ebx*8+4],edx
 0058F750    inc         ebx
 0058F751    mov         eax,dword ptr [ebp-10]
 0058F754    call        TEnumerator<Vcl.Themes.TPair<System.TClass,System.Generics.Collections.TList<Vcl.Themes.TStyleHookClass>>>.MoveNext
 0058F759    test        al,al
>0058F75B    jne         0058F736
 0058F75D    xor         eax,eax
 0058F75F    pop         edx
 0058F760    pop         ecx
 0058F761    pop         ecx
 0058F762    mov         dword ptr fs:[eax],edx
 0058F765    push        58F782
 0058F76A    cmp         dword ptr [ebp-10],0
>0058F76E    je          0058F77A
 0058F770    mov         dl,1
 0058F772    mov         eax,dword ptr [ebp-10]
 0058F775    mov         ecx,dword ptr [eax]
 0058F777    call        dword ptr [ecx-4]
 0058F77A    ret
>0058F77B    jmp         @HandleFinally
>0058F780    jmp         0058F76A
 0058F782    pop         edi
 0058F783    pop         esi
 0058F784    pop         ebx
 0058F785    mov         esp,ebp
 0058F787    pop         ebp
 0058F788    ret
end;*}

//0058F78C
destructor TEnumerable<Vcl.Themes.TPair<System.TClass,System.Generics.Collections.TList<Vcl.Themes.TStyleHookClass>>>.Destroy();
begin
{*
 0058F78C    push        ebx
 0058F78D    push        esi
 0058F78E    call        @BeforeDestruction
 0058F793    mov         ebx,edx
 0058F795    mov         esi,eax
 0058F797    mov         dl,0FC
 0058F799    and         dl,bl
 0058F79B    mov         eax,esi
 0058F79D    call        TObject.Destroy
 0058F7A2    test        bl,bl
>0058F7A4    jle         0058F7AD
 0058F7A6    mov         eax,esi
 0058F7A8    call        @ClassDestroy
 0058F7AD    pop         esi
 0058F7AE    pop         ebx
 0058F7AF    ret
*}
end;

//0058F7B0
function TEnumerable<Vcl.Themes.TPair<System.TClass,System.Generics.Collections.TList<Vcl.Themes.TStyleHookClass>>>.GetEnumerator:TEnumerator<Vcl.Themes.TPair<System.TClass,System.Generics.Collections.TList<Vcl.Themes.TStyleHookClass>>>;
begin
{*
 0058F7B0    mov         edx,dword ptr [eax]
 0058F7B2    call        dword ptr [edx]
 0058F7B4    ret
*}
end;

//0058F7B8
{*procedure TEnumerable<Vcl.Themes.TPair<System.TClass,System.Generics.Collections.TList<Vcl.Themes.TStyleHookClass>>>.ToArray(?:?);
begin
 0058F7B8    push        ebp
 0058F7B9    mov         ebp,esp
 0058F7BB    add         esp,0FFFFFFEC
 0058F7BE    push        ebx
 0058F7BF    push        esi
 0058F7C0    mov         dword ptr [ebp-4],edx
 0058F7C3    mov         ebx,eax
 0058F7C5    lea         esi,[ebp-10]
 0058F7C8    mov         dl,1
 0058F7CA    mov         eax,[00597A20];TList<Vcl.Themes.TPair<System.TClass,System.Generics.Collections.TList<Vc...
 0058F7CF    call        005949C8
 0058F7D4    mov         dword ptr [ebp-8],eax
 0058F7D7    xor         eax,eax
 0058F7D9    push        ebp
 0058F7DA    push        58F864
 0058F7DF    push        dword ptr fs:[eax]
 0058F7E2    mov         dword ptr fs:[eax],esp
 0058F7E5    mov         eax,ebx
 0058F7E7    call        TEnumerable<Vcl.Themes.TPair<System.TClass,System.Generics.Collections.TList<Vcl.Themes.TStyleHookClass>>>.GetEnumerator
 0058F7EC    mov         dword ptr [ebp-14],eax
 0058F7EF    xor         eax,eax
 0058F7F1    push        ebp
 0058F7F2    push        58F83C
 0058F7F7    push        dword ptr fs:[eax]
 0058F7FA    mov         dword ptr fs:[eax],esp
>0058F7FD    jmp         0058F812
 0058F7FF    mov         edx,esi
 0058F801    mov         eax,dword ptr [ebp-14]
 0058F804    mov         ecx,dword ptr [eax]
 0058F806    call        dword ptr [ecx]
 0058F808    mov         edx,esi
 0058F80A    mov         eax,dword ptr [ebp-8]
 0058F80D    call        TList<Vcl.Themes.TPair<System.TClass,System.Generics.Collections.TList<Vcl.Themes.TStyleHookClass>>>.Add
 0058F812    mov         eax,dword ptr [ebp-14]
 0058F815    call        TEnumerator<Vcl.Themes.TPair<System.TClass,System.Generics.Collections.TList<Vcl.Themes.TStyleHookClass>>>.MoveNext
 0058F81A    test        al,al
>0058F81C    jne         0058F7FF
 0058F81E    xor         eax,eax
 0058F820    pop         edx
 0058F821    pop         ecx
 0058F822    pop         ecx
 0058F823    mov         dword ptr fs:[eax],edx
 0058F826    push        58F843
 0058F82B    cmp         dword ptr [ebp-14],0
>0058F82F    je          0058F83B
 0058F831    mov         dl,1
 0058F833    mov         eax,dword ptr [ebp-14]
 0058F836    mov         ecx,dword ptr [eax]
 0058F838    call        dword ptr [ecx-4]
 0058F83B    ret
>0058F83C    jmp         @HandleFinally
>0058F841    jmp         0058F82B
 0058F843    mov         edx,dword ptr [ebp-4]
 0058F846    mov         eax,dword ptr [ebp-8]
 0058F849    call        TList<Vcl.Themes.TPair<System.TClass,System.Generics.Collections.TList<Vcl.Themes.TStyleHookClass>>>.ToArray
 0058F84E    xor         eax,eax
 0058F850    pop         edx
 0058F851    pop         ecx
 0058F852    pop         ecx
 0058F853    mov         dword ptr fs:[eax],edx
 0058F856    push        58F86B
 0058F85B    mov         eax,dword ptr [ebp-8]
 0058F85E    call        TObject.Free
 0058F863    ret
>0058F864    jmp         @HandleFinally
>0058F869    jmp         0058F85B
 0058F86B    pop         esi
 0058F86C    pop         ebx
 0058F86D    mov         esp,ebp
 0058F86F    pop         ebp
 0058F870    ret
end;*}

//0058F874
function TEnumerator<Vcl.Themes.TPair<System.TClass,System.Generics.Collections.TList<Vcl.Themes.TStyleHookClass>>>.MoveNext:Boolean;
begin
{*
 0058F874    mov         edx,dword ptr [eax]
 0058F876    call        dword ptr [edx+4]
 0058F879    ret
*}
end;

//0058F87C
procedure sub_0058F87C(?:TDictionary<System.TClass,System.Generics.Collections.TList<Vcl.Themes.TStyleHookClass>>; ?:Integer);
begin
{*
 0058F87C    cmp         edx,dword ptr [eax+8]
>0058F87F    jge         0058F898
 0058F881    mov         ecx,dword ptr ds:[7C4C2C];^SResString172:TResStringRec
 0058F887    mov         dl,1
 0058F889    mov         eax,[00417CF0];EArgumentOutOfRangeException
 0058F88E    call        Exception.CreateRes;EArgumentOutOfRangeException.Create
 0058F893    call        @RaiseExcept
 0058F898    test        edx,edx
>0058F89A    jne         0058F8A4
 0058F89C    xor         edx,edx
 0058F89E    call        0058F8BC
 0058F8A3    ret
 0058F8A4    mov         ecx,4
 0058F8A9    cmp         edx,ecx
>0058F8AB    jle         0058F8B3
 0058F8AD    add         ecx,ecx
 0058F8AF    cmp         edx,ecx
>0058F8B1    jg          0058F8AD
 0058F8B3    mov         edx,ecx
 0058F8B5    call        0058F8BC
 0058F8BA    ret
*}
end;

//0058F8BC
{*procedure sub_0058F8BC(?:?; ?:?);
begin
 0058F8BC    push        ebp
 0058F8BD    mov         ebp,esp
 0058F8BF    add         esp,0FFFFFFF0
 0058F8C2    push        ebx
 0058F8C3    push        esi
 0058F8C4    push        edi
 0058F8C5    xor         ecx,ecx
 0058F8C7    mov         dword ptr [ebp-4],ecx
 0058F8CA    mov         dword ptr [ebp-8],ecx
 0058F8CD    mov         edi,edx
 0058F8CF    mov         dword ptr [ebp-0C],eax
 0058F8D2    xor         eax,eax
 0058F8D4    push        ebp
 0058F8D5    push        58F9DD
 0058F8DA    push        dword ptr fs:[eax]
 0058F8DD    mov         dword ptr fs:[eax],esp
 0058F8E0    mov         eax,dword ptr [ebp-0C]
 0058F8E3    mov         eax,dword ptr [eax+4]
 0058F8E6    mov         dword ptr [ebp-10],eax
 0058F8E9    mov         eax,dword ptr [ebp-10]
 0058F8EC    test        eax,eax
>0058F8EE    je          0058F8F5
 0058F8F0    sub         eax,4
 0058F8F3    mov         eax,dword ptr [eax]
 0058F8F5    cmp         eax,edi
>0058F8F7    je          0058F9BC
 0058F8FD    test        edi,edi
>0058F8FF    jge         0058F906
 0058F901    call        00423F00
 0058F906    lea         eax,[ebp-4]
 0058F909    mov         edx,dword ptr [ebp-0C]
 0058F90C    mov         edx,dword ptr [edx+4]
 0058F90F    mov         ecx,dword ptr ds:[578088];TDictionary<System.TClass,System.Generics.Collections.TList<Vc...
 0058F915    call        @DynArrayAsg
 0058F91A    push        edi
 0058F91B    lea         eax,[ebp-8]
 0058F91E    mov         ecx,1
 0058F923    mov         edx,dword ptr ds:[578088];TDictionary<System.TClass,System.Generics.Collections.TList<Vc...
 0058F929    call        @DynArraySetLength
 0058F92E    add         esp,4
 0058F931    mov         eax,dword ptr [ebp-8]
 0058F934    test        eax,eax
>0058F936    je          0058F93D
 0058F938    sub         eax,4
 0058F93B    mov         eax,dword ptr [eax]
 0058F93D    mov         esi,eax
 0058F93F    dec         esi
 0058F940    test        esi,esi
>0058F942    jl          0058F958
 0058F944    inc         esi
 0058F945    xor         ebx,ebx
 0058F947    lea         eax,[ebx+ebx*2]
 0058F94A    mov         edx,dword ptr [ebp-8]
 0058F94D    mov         dword ptr [edx+eax*4],0FFFFFFFF
 0058F954    inc         ebx
 0058F955    dec         esi
>0058F956    jne         0058F947
 0058F958    mov         eax,dword ptr [ebp-0C]
 0058F95B    add         eax,4
 0058F95E    mov         edx,dword ptr [ebp-8]
 0058F961    mov         ecx,dword ptr ds:[578088];TDictionary<System.TClass,System.Generics.Collections.TList<Vc...
 0058F967    call        @DynArrayAsg
 0058F96C    mov         eax,edi
 0058F96E    shr         eax,1
 0058F970    shr         edi,2
 0058F973    add         eax,edi
 0058F975    mov         edx,dword ptr [ebp-0C]
 0058F978    mov         dword ptr [edx+10],eax
 0058F97B    mov         eax,dword ptr [ebp-4]
 0058F97E    test        eax,eax
>0058F980    je          0058F987
 0058F982    sub         eax,4
 0058F985    mov         eax,dword ptr [eax]
 0058F987    mov         esi,eax
 0058F989    dec         esi
 0058F98A    test        esi,esi
>0058F98C    jl          0058F9BC
 0058F98E    inc         esi
 0058F98F    xor         ebx,ebx
 0058F991    lea         eax,[ebx+ebx*2]
 0058F994    mov         edx,dword ptr [ebp-4]
 0058F997    mov         edx,dword ptr [edx+eax*4]
 0058F99A    cmp         edx,0FFFFFFFF
>0058F99D    je          0058F9B8
 0058F99F    mov         ecx,dword ptr [ebp-4]
 0058F9A2    mov         ecx,dword ptr [ecx+eax*4+8]
 0058F9A6    push        ecx
 0058F9A7    mov         ecx,dword ptr [ebp-4]
 0058F9AA    mov         ecx,dword ptr [ecx+eax*4+4]
 0058F9AE    push        ecx
 0058F9AF    mov         eax,dword ptr [ebp-0C]
 0058F9B2    pop         ecx
 0058F9B3    call        0058FB24
 0058F9B8    inc         ebx
 0058F9B9    dec         esi
>0058F9BA    jne         0058F991
 0058F9BC    xor         eax,eax
 0058F9BE    pop         edx
 0058F9BF    pop         ecx
 0058F9C0    pop         ecx
 0058F9C1    mov         dword ptr fs:[eax],edx
 0058F9C4    push        58F9E4
 0058F9C9    lea         eax,[ebp-8]
 0058F9CC    mov         edx,dword ptr ds:[578088];TDictionary<System.TClass,System.Generics.Collections.TList<Vc...
 0058F9D2    mov         ecx,2
 0058F9D7    call        @FinalizeArray
 0058F9DC    ret
>0058F9DD    jmp         @HandleFinally
>0058F9E2    jmp         0058F9C9
 0058F9E4    pop         edi
 0058F9E5    pop         esi
 0058F9E6    pop         ebx
 0058F9E7    mov         esp,ebp
 0058F9E9    pop         ebp
 0058F9EA    ret
end;*}

//0058F9EC
procedure sub_0058F9EC(?:TDictionary<System);
begin
{*
 0058F9EC    push        ecx
 0058F9ED    mov         edx,dword ptr [eax+4]
 0058F9F0    mov         dword ptr [esp],edx
 0058F9F3    mov         edx,dword ptr [esp]
 0058F9F6    test        edx,edx
>0058F9F8    je          0058F9FF
 0058F9FA    sub         edx,4
 0058F9FD    mov         edx,dword ptr [edx]
 0058F9FF    add         edx,edx
 0058FA01    test        edx,edx
>0058FA03    jne         0058FA0A
 0058FA05    mov         edx,4
 0058FA0A    call        0058F8BC
 0058FA0F    pop         edx
 0058FA10    ret
*}
end;

//0058FA14
{*function sub_0058FA14(?:TDictionary<System; ?:TClass; ?:?):?;
begin
 0058FA14    push        ebx
 0058FA15    push        esi
 0058FA16    push        edi
 0058FA17    add         esp,0FFFFFFE8
 0058FA1A    mov         dword ptr [esp+4],ecx
 0058FA1E    mov         dword ptr [esp],edx
 0058FA21    mov         esi,eax
 0058FA23    mov         eax,dword ptr [esi+4]
 0058FA26    mov         dword ptr [esp+0C],eax
 0058FA2A    mov         eax,dword ptr [esp+0C]
 0058FA2E    test        eax,eax
>0058FA30    je          0058FA37
 0058FA32    sub         eax,4
 0058FA35    mov         eax,dword ptr [eax]
 0058FA37    test        eax,eax
>0058FA39    jne         0058FA42
 0058FA3B    mov         ebx,80000000
>0058FA40    jmp         0058FAB5
 0058FA42    mov         eax,dword ptr [esi+4]
 0058FA45    mov         dword ptr [esp+10],eax
 0058FA49    mov         eax,dword ptr [esp+10]
 0058FA4D    test        eax,eax
>0058FA4F    je          0058FA56
 0058FA51    sub         eax,4
 0058FA54    mov         eax,dword ptr [eax]
 0058FA56    dec         eax
 0058FA57    and         eax,dword ptr [esp+4]
 0058FA5B    mov         ebx,eax
 0058FA5D    lea         eax,[ebx+ebx*2]
 0058FA60    mov         edx,dword ptr [esi+4]
 0058FA63    mov         eax,dword ptr [edx+eax*4]
 0058FA66    mov         dword ptr [esp+8],eax
 0058FA6A    cmp         dword ptr [esp+8],0FFFFFFFF
>0058FA6F    jne         0058FA75
 0058FA71    not         ebx
>0058FA73    jmp         0058FAB5
 0058FA75    mov         eax,dword ptr [esp+8]
 0058FA79    cmp         eax,dword ptr [esp+4]
>0058FA7D    jne         0058FA98
 0058FA7F    lea         eax,[ebx+ebx*2]
 0058FA82    mov         edx,dword ptr [esi+4]
 0058FA85    mov         edx,dword ptr [edx+eax*4+4]
 0058FA89    mov         ecx,dword ptr [esp]
 0058FA8C    mov         eax,dword ptr [esi+0C]
 0058FA8F    mov         edi,dword ptr [eax]
 0058FA91    call        dword ptr [edi+0C]
 0058FA94    test        al,al
>0058FA96    jne         0058FAB5
 0058FA98    inc         ebx
 0058FA99    mov         eax,dword ptr [esi+4]
 0058FA9C    mov         dword ptr [esp+14],eax
 0058FAA0    mov         edi,dword ptr [esp+14]
 0058FAA4    test        edi,edi
>0058FAA6    je          0058FAAD
 0058FAA8    sub         edi,4
 0058FAAB    mov         edi,dword ptr [edi]
 0058FAAD    cmp         edi,ebx
>0058FAAF    jg          0058FA5D
 0058FAB1    xor         ebx,ebx
>0058FAB3    jmp         0058FA5D
 0058FAB5    mov         eax,ebx
 0058FAB7    add         esp,18
 0058FABA    pop         edi
 0058FABB    pop         esi
 0058FABC    pop         ebx
 0058FABD    ret
end;*}

//0058FAC0
{*function sub_0058FAC0(?:TDictionary<System; ?:TClass):?;
begin
 0058FAC0    push        ebx
 0058FAC1    push        esi
 0058FAC2    mov         esi,edx
 0058FAC4    mov         ebx,eax
 0058FAC6    mov         edx,esi
 0058FAC8    mov         eax,dword ptr [ebx+0C]
 0058FACB    mov         ecx,dword ptr [eax]
 0058FACD    call        dword ptr [ecx+10]
 0058FAD0    and         eax,7FFFFFFF
 0058FAD5    inc         eax
 0058FAD6    and         eax,7FFFFFFF
 0058FADB    pop         esi
 0058FADC    pop         ebx
 0058FADD    ret
end;*}

//0058FAE0
function TDictionary<System.TClass,System.Generics.Collections.TList<Vcl.Themes.TStyleHookClass>>.GetItem(Key:TClass):TList<Vcl.Themes.TStyleHookClass>;
begin
{*
 0058FAE0    push        ebx
 0058FAE1    push        esi
 0058FAE2    mov         esi,edx
 0058FAE4    mov         ebx,eax
 0058FAE6    mov         edx,esi
 0058FAE8    mov         eax,ebx
 0058FAEA    call        0058FAC0
 0058FAEF    mov         ecx,eax
 0058FAF1    mov         edx,esi
 0058FAF3    mov         eax,ebx
 0058FAF5    call        0058FA14
 0058FAFA    test        eax,eax
>0058FAFC    jge         0058FB15
 0058FAFE    mov         ecx,dword ptr ds:[7C44C4];^SResString173:TResStringRec
 0058FB04    mov         dl,1
 0058FB06    mov         eax,[004180BC];EListError
 0058FB0B    call        Exception.CreateRes;EListError.Create
 0058FB10    call        @RaiseExcept
 0058FB15    lea         eax,[eax+eax*2]
 0058FB18    mov         edx,dword ptr [ebx+4]
 0058FB1B    mov         eax,dword ptr [edx+eax*4+8]
 0058FB1F    pop         esi
 0058FB20    pop         ebx
 0058FB21    ret
*}
end;

//0058FB24
{*procedure sub_0058FB24(?:?; ?:?; ?:?; ?:?);
begin
 0058FB24    push        ebp
 0058FB25    mov         ebp,esp
 0058FB27    add         esp,0FFFFFFF8
 0058FB2A    push        ebx
 0058FB2B    push        esi
 0058FB2C    mov         dword ptr [ebp-8],ecx
 0058FB2F    mov         dword ptr [ebp-4],edx
 0058FB32    mov         ebx,eax
 0058FB34    mov         ecx,dword ptr [ebp-4]
 0058FB37    mov         edx,dword ptr [ebp-8]
 0058FB3A    mov         eax,ebx
 0058FB3C    call        0058FA14
 0058FB41    not         eax
 0058FB43    lea         edx,[eax+eax*2]
 0058FB46    mov         ecx,dword ptr [ebx+4]
 0058FB49    mov         esi,dword ptr [ebp-4]
 0058FB4C    mov         dword ptr [ecx+edx*4],esi
 0058FB4F    mov         ecx,dword ptr [ebx+4]
 0058FB52    mov         esi,dword ptr [ebp-8]
 0058FB55    mov         dword ptr [ecx+edx*4+4],esi
 0058FB59    mov         eax,dword ptr [ebx+4]
 0058FB5C    mov         ecx,dword ptr [ebp+8]
 0058FB5F    mov         dword ptr [eax+edx*4+8],ecx
 0058FB63    pop         esi
 0058FB64    pop         ebx
 0058FB65    pop         ecx
 0058FB66    pop         ecx
 0058FB67    pop         ebp
 0058FB68    ret         4
end;*}

//0058FB6C
{*procedure sub_0058FB6C(?:TDictionary<System; ?:?; ?:?; ?:?; ?:?);
begin
 0058FB6C    push        ebp
 0058FB6D    mov         ebp,esp
 0058FB6F    push        ecx
 0058FB70    push        ebx
 0058FB71    push        esi
 0058FB72    push        edi
 0058FB73    mov         dword ptr [ebp-4],edx
 0058FB76    mov         ebx,eax
 0058FB78    mov         esi,dword ptr [ebp+0C]
 0058FB7B    lea         eax,[ecx+ecx*2]
 0058FB7E    mov         edx,dword ptr [ebx+4]
 0058FB81    mov         edi,dword ptr [ebp-4]
 0058FB84    mov         dword ptr [edx+eax*4],edi
 0058FB87    mov         edx,dword ptr [ebx+4]
 0058FB8A    mov         dword ptr [edx+eax*4+4],esi
 0058FB8E    mov         edx,dword ptr [ebx+4]
 0058FB91    mov         ecx,dword ptr [ebp+8]
 0058FB94    mov         dword ptr [edx+eax*4+8],ecx
 0058FB98    inc         dword ptr [ebx+8]
 0058FB9B    xor         ecx,ecx
 0058FB9D    mov         edx,esi
 0058FB9F    mov         eax,ebx
 0058FBA1    mov         esi,dword ptr [eax]
 0058FBA3    call        dword ptr [esi+8]
 0058FBA6    xor         ecx,ecx
 0058FBA8    mov         edx,dword ptr [ebp+8]
 0058FBAB    mov         eax,ebx
 0058FBAD    mov         ebx,dword ptr [eax]
 0058FBAF    call        dword ptr [ebx+0C]
 0058FBB2    pop         edi
 0058FBB3    pop         esi
 0058FBB4    pop         ebx
 0058FBB5    pop         ecx
 0058FBB6    pop         ebp
 0058FBB7    ret         8
end;*}

//0058FBBC
procedure sub_0058FBBC;
begin
{*
 0058FBBC    call        TDictionary<System.TClass,System.Generics.Collections.TList<Vcl.Themes.TStyleHookClass>>.GetEnumerator
 0058FBC1    ret
*}
end;

//0058FBC4
{*procedure sub_0058FBC4(?:?);
begin
 0058FBC4    push        ebx
 0058FBC5    cmp         word ptr [eax+1A],0;TDictionary<System.TClass,System.Generics.Collections.TList<Vcl.Them...
>0058FBCA    je          0058FBD9
 0058FBCC    push        ecx
 0058FBCD    mov         ebx,eax
 0058FBCF    mov         ecx,edx
 0058FBD1    mov         edx,eax
 0058FBD3    mov         eax,dword ptr [ebx+1C];TDictionary<System.TClass,System.Generics.Collections.TList<Vcl.T...
 0058FBD6    call        dword ptr [ebx+18];TDictionary<System.TClass,System.Generics.Collections.TList<Vcl.Themes.TStyleHookClass>>.FOnKeyNotify
 0058FBD9    pop         ebx
 0058FBDA    ret
end;*}

//0058FBDC
{*procedure sub_0058FBDC(?:?);
begin
 0058FBDC    push        ebx
 0058FBDD    cmp         word ptr [eax+22],0;TDictionary<System.TClass,System.Generics.Collections.TList<Vcl.Them...
>0058FBE2    je          0058FBF1
 0058FBE4    push        ecx
 0058FBE5    mov         ebx,eax
 0058FBE7    mov         ecx,edx
 0058FBE9    mov         edx,eax
 0058FBEB    mov         eax,dword ptr [ebx+24];TDictionary<System.TClass,System.Generics.Collections.TList<Vcl.T...
 0058FBEE    call        dword ptr [ebx+20];TDictionary<System.TClass,System.Generics.Collections.TList<Vcl.Themes.TStyleHookClass>>.FOnValueNotify
 0058FBF1    pop         ebx
 0058FBF2    ret
end;*}

//0058FBF4
constructor sub_0058FBF4(ACapacity:Integer);
begin
{*
 0058FBF4    push        ebx
 0058FBF5    push        esi
 0058FBF6    test        dl,dl
>0058FBF8    je          0058FC02
 0058FBFA    add         esp,0FFFFFFF0
 0058FBFD    call        @ClassCreate
 0058FC02    mov         ebx,edx
 0058FC04    mov         esi,eax
 0058FC06    push        0
 0058FC08    xor         edx,edx
 0058FC0A    mov         eax,esi
 0058FC0C    call        0058FC2C
 0058FC11    mov         eax,esi
 0058FC13    test        bl,bl
>0058FC15    je          0058FC26
 0058FC17    call        @AfterConstruction
 0058FC1C    pop         dword ptr fs:[0]
 0058FC23    add         esp,0C
 0058FC26    mov         eax,esi
 0058FC28    pop         esi
 0058FC29    pop         ebx
 0058FC2A    ret
*}
end;

//0058FC2C
constructor sub_0058FC2C(ACapacity:Integer; AComparer:IEqualityComparer<System.TClass>);
begin
{*
 0058FC2C    push        ebp
 0058FC2D    mov         ebp,esp
 0058FC2F    push        0
 0058FC31    push        ebx
 0058FC32    push        esi
 0058FC33    push        edi
 0058FC34    test        dl,dl
>0058FC36    je          0058FC40
 0058FC38    add         esp,0FFFFFFF0
 0058FC3B    call        @ClassCreate
 0058FC40    mov         esi,ecx
 0058FC42    mov         ebx,edx
 0058FC44    mov         edi,eax
 0058FC46    xor         eax,eax
 0058FC48    push        ebp
 0058FC49    push        58FCBB
 0058FC4E    push        dword ptr fs:[eax]
 0058FC51    mov         dword ptr fs:[eax],esp
 0058FC54    xor         edx,edx
 0058FC56    mov         eax,edi
 0058FC58    call        TObject.Create
 0058FC5D    test        esi,esi
>0058FC5F    jge         0058FC78
 0058FC61    mov         ecx,dword ptr ds:[7C4C2C];^SResString172:TResStringRec
 0058FC67    mov         dl,1
 0058FC69    mov         eax,[00417CF0];EArgumentOutOfRangeException
 0058FC6E    call        Exception.CreateRes;EArgumentOutOfRangeException.Create
 0058FC73    call        @RaiseExcept
 0058FC78    lea         eax,[edi+0C];TDictionary<System.TClass,System.Generics.Collections.TList<Vcl.Themes.TSty...
 0058FC7B    mov         edx,dword ptr [ebp+8]
 0058FC7E    call        @IntfCopy
 0058FC83    cmp         dword ptr [edi+0C],0;TDictionary<System.TClass,System.Generics.Collections.TList<Vcl.The...
>0058FC87    jne         0058FC9C
 0058FC89    lea         eax,[ebp-4]
 0058FC8C    call        00594C68
 0058FC91    mov         edx,dword ptr [ebp-4]
 0058FC94    lea         eax,[edi+0C];TDictionary<System.TClass,System.Generics.Collections.TList<Vcl.Themes.TSty...
 0058FC97    call        @IntfCopy
 0058FC9C    mov         edx,esi
 0058FC9E    mov         eax,edi
 0058FCA0    call        0058F87C
 0058FCA5    xor         eax,eax
 0058FCA7    pop         edx
 0058FCA8    pop         ecx
 0058FCA9    pop         ecx
 0058FCAA    mov         dword ptr fs:[eax],edx
 0058FCAD    push        58FCC2
 0058FCB2    lea         eax,[ebp-4]
 0058FCB5    call        @IntfClear
 0058FCBA    ret
>0058FCBB    jmp         @HandleFinally
>0058FCC0    jmp         0058FCB2
 0058FCC2    mov         eax,edi
 0058FCC4    test        bl,bl
>0058FCC6    je          0058FCD7
 0058FCC8    call        @AfterConstruction
 0058FCCD    pop         dword ptr fs:[0]
 0058FCD4    add         esp,0C
 0058FCD7    mov         eax,edi
 0058FCD9    pop         edi
 0058FCDA    pop         esi
 0058FCDB    pop         ebx
 0058FCDC    pop         ecx
 0058FCDD    pop         ebp
 0058FCDE    ret         4
*}
end;

//0058FCE4
destructor TDictionary<System.TClass,System.Generics.Collections.TList<Vcl.Themes.TStyleHookClass>>.Destroy();
begin
{*
 0058FCE4    push        ebx
 0058FCE5    push        esi
 0058FCE6    call        @BeforeDestruction
 0058FCEB    mov         ebx,edx
 0058FCED    mov         esi,eax
 0058FCEF    mov         eax,esi
 0058FCF1    call        TDictionary<System.TClass,System.Generics.Collections.TList<Vcl.Themes.TStyleHookClass>>.Clear
 0058FCF6    mov         eax,dword ptr [esi+28];TDictionary<System.TClass,System.Generics.Collections.TList<Vcl.T...
 0058FCF9    call        TObject.Free
 0058FCFE    mov         eax,dword ptr [esi+2C]
 0058FD01    call        TObject.Free
 0058FD06    mov         dl,0FC
 0058FD08    and         dl,bl
 0058FD0A    mov         eax,esi
 0058FD0C    call        TEnumerable<Vcl.Themes.TPair<System.TClass,System.Generics.Collections.TList<Vcl.Themes.TStyleHookClass>>>.Destroy
 0058FD11    test        bl,bl
>0058FD13    jle         0058FD1C
 0058FD15    mov         eax,esi
 0058FD17    call        @ClassDestroy
 0058FD1C    pop         esi
 0058FD1D    pop         ebx
 0058FD1E    ret
*}
end;

//0058FD20
procedure TDictionary<System.TClass,System.Generics.Collections.TList<Vcl.Themes.TStyleHookClass>>.Add(Key:TClass; Value:TList<Vcl.Themes.TStyleHookClass>);
begin
{*
 0058FD20    push        ebx
 0058FD21    push        esi
 0058FD22    push        edi
 0058FD23    push        ecx
 0058FD24    mov         dword ptr [esp],ecx
 0058FD27    mov         esi,edx
 0058FD29    mov         ebx,eax
 0058FD2B    mov         eax,dword ptr [ebx+8]
 0058FD2E    cmp         eax,dword ptr [ebx+10]
>0058FD31    jl          0058FD3A
 0058FD33    mov         eax,ebx
 0058FD35    call        0058F9EC
 0058FD3A    mov         edx,esi
 0058FD3C    mov         eax,ebx
 0058FD3E    call        0058FAC0
 0058FD43    mov         edi,eax
 0058FD45    mov         ecx,edi
 0058FD47    mov         edx,esi
 0058FD49    mov         eax,ebx
 0058FD4B    call        0058FA14
 0058FD50    test        eax,eax
>0058FD52    jl          0058FD6B
 0058FD54    mov         ecx,dword ptr ds:[7C423C];^SResString174:TResStringRec
 0058FD5A    mov         dl,1
 0058FD5C    mov         eax,[004180BC];EListError
 0058FD61    call        Exception.CreateRes;EListError.Create
 0058FD66    call        @RaiseExcept
 0058FD6B    push        esi
 0058FD6C    mov         edx,dword ptr [esp+4]
 0058FD70    push        edx
 0058FD71    mov         ecx,eax
 0058FD73    not         ecx
 0058FD75    mov         edx,edi
 0058FD77    mov         eax,ebx
 0058FD79    call        0058FB6C
 0058FD7E    pop         edx
 0058FD7F    pop         edi
 0058FD80    pop         esi
 0058FD81    pop         ebx
 0058FD82    ret
*}
end;

//0058FD84
procedure TDictionary<System.TClass,System.Generics.Collections.TList<Vcl.Themes.TStyleHookClass>>.Clear;
begin
{*
 0058FD84    push        ebp
 0058FD85    mov         ebp,esp
 0058FD87    add         esp,0FFFFFFF8
 0058FD8A    push        ebx
 0058FD8B    push        esi
 0058FD8C    push        edi
 0058FD8D    xor         edx,edx
 0058FD8F    mov         dword ptr [ebp-4],edx
 0058FD92    mov         esi,eax
 0058FD94    xor         eax,eax
 0058FD96    push        ebp
 0058FD97    push        58FE3F
 0058FD9C    push        dword ptr fs:[eax]
 0058FD9F    mov         dword ptr fs:[eax],esp
 0058FDA2    lea         eax,[ebp-4]
 0058FDA5    mov         edx,dword ptr [esi+4]
 0058FDA8    mov         ecx,dword ptr ds:[578088];TDictionary<System.TClass,System.Generics.Collections.TList<Vc...
 0058FDAE    call        @DynArrayAsg
 0058FDB3    xor         eax,eax
 0058FDB5    mov         dword ptr [esi+8],eax
 0058FDB8    lea         eax,[esi+4]
 0058FDBB    mov         edx,dword ptr ds:[578088];TDictionary<System.TClass,System.Generics.Collections.TList<Vc...
 0058FDC1    call        @DynArrayClear
 0058FDC6    xor         edx,edx
 0058FDC8    mov         eax,esi
 0058FDCA    call        0058F87C
 0058FDCF    xor         eax,eax
 0058FDD1    mov         dword ptr [esi+10],eax
 0058FDD4    mov         eax,dword ptr [ebp-4]
 0058FDD7    test        eax,eax
>0058FDD9    je          0058FDE0
 0058FDDB    sub         eax,4
 0058FDDE    mov         eax,dword ptr [eax]
 0058FDE0    dec         eax
 0058FDE1    test        eax,eax
>0058FDE3    jl          0058FE23
 0058FDE5    inc         eax
 0058FDE6    mov         dword ptr [ebp-8],eax
 0058FDE9    xor         ebx,ebx
 0058FDEB    lea         eax,[ebx+ebx*2]
 0058FDEE    mov         edx,dword ptr [ebp-4]
 0058FDF1    cmp         dword ptr [edx+eax*4],0FFFFFFFF
>0058FDF5    je          0058FE1D
 0058FDF7    lea         eax,[ebx+ebx*2]
 0058FDFA    mov         edx,dword ptr [ebp-4]
 0058FDFD    mov         edx,dword ptr [edx+eax*4+4]
 0058FE01    mov         cl,1
 0058FE03    mov         eax,esi
 0058FE05    mov         edi,dword ptr [eax]
 0058FE07    call        dword ptr [edi+8]
 0058FE0A    lea         eax,[ebx+ebx*2]
 0058FE0D    mov         edx,dword ptr [ebp-4]
 0058FE10    mov         edx,dword ptr [edx+eax*4+8]
 0058FE14    mov         cl,1
 0058FE16    mov         eax,esi
 0058FE18    mov         edi,dword ptr [eax]
 0058FE1A    call        dword ptr [edi+0C]
 0058FE1D    inc         ebx
 0058FE1E    dec         dword ptr [ebp-8]
>0058FE21    jne         0058FDEB
 0058FE23    xor         eax,eax
 0058FE25    pop         edx
 0058FE26    pop         ecx
 0058FE27    pop         ecx
 0058FE28    mov         dword ptr fs:[eax],edx
 0058FE2B    push        58FE46
 0058FE30    lea         eax,[ebp-4]
 0058FE33    mov         edx,dword ptr ds:[578088];TDictionary<System.TClass,System.Generics.Collections.TList<Vc...
 0058FE39    call        @DynArrayClear
 0058FE3E    ret
>0058FE3F    jmp         @HandleFinally
>0058FE44    jmp         0058FE30
 0058FE46    pop         edi
 0058FE47    pop         esi
 0058FE48    pop         ebx
 0058FE49    pop         ecx
 0058FE4A    pop         ecx
 0058FE4B    pop         ebp
 0058FE4C    ret
*}
end;

//0058FE50
function TDictionary<System.TClass,System.Generics.Collections.TList<Vcl.Themes.TStyleHookClass>>.ContainsKey(Key:TClass):Boolean;
begin
{*
 0058FE50    push        ebx
 0058FE51    push        esi
 0058FE52    mov         esi,edx
 0058FE54    mov         ebx,eax
 0058FE56    mov         edx,esi
 0058FE58    mov         eax,ebx
 0058FE5A    call        0058FAC0
 0058FE5F    mov         ecx,eax
 0058FE61    mov         edx,esi
 0058FE63    mov         eax,ebx
 0058FE65    call        0058FA14
 0058FE6A    test        eax,eax
 0058FE6C    setge       al
 0058FE6F    pop         esi
 0058FE70    pop         ebx
 0058FE71    ret
*}
end;

//0058FE74
{*procedure TDictionary<System.TClass,System.Generics.Collections.TList<Vcl.Themes.TStyleHookClass>>.ToArray(?:?);
begin
 0058FE74    push        ebx
 0058FE75    push        esi
 0058FE76    mov         esi,edx
 0058FE78    mov         ebx,eax
 0058FE7A    mov         ecx,esi
 0058FE7C    mov         edx,dword ptr [ebx+8]
 0058FE7F    mov         eax,ebx
 0058FE81    call        0058F6F0
 0058FE86    pop         esi
 0058FE87    pop         ebx
 0058FE88    ret
end;*}

//0058FECC
function TDictionary<System.TClass,System.Generics.Collections.TList<Vcl.Themes.TStyleHookClass>>.GetEnumerator:TDictionary<System.TClass,System.Generics.Collections.TList<Vcl.Themes.TStyleHookClass>>.TPairEnumerator;
begin
{*
 0058FECC    mov         ecx,eax
 0058FECE    mov         dl,1
 0058FED0    mov         eax,[005792BC];TDictionary<System.TClass,System.Generics.Collections.TList<Vcl.Themes.TS...
 0058FED5    call        TMenuItemEnumerator.Create
 0058FEDA    ret
*}
end;

//0058FEDC
{*procedure sub_0058FEDC(?:TDictionary<System; ?:?; ?:?);
begin
 0058FEDC    push        ebp
 0058FEDD    mov         ebp,esp
 0058FEDF    add         esp,0FFFFFFF8
 0058FEE2    push        ebx
 0058FEE3    push        esi
 0058FEE4    mov         dword ptr [ebp-4],ecx
 0058FEE7    mov         esi,edx
 0058FEE9    mov         ebx,eax
 0058FEEB    push        esi
 0058FEEC    mov         eax,dword ptr [ebp-4]
 0058FEEF    mov         ecx,1
 0058FEF4    mov         edx,dword ptr ds:[578324];TArray<System.TClass>
 0058FEFA    call        @DynArraySetLength
 0058FEFF    add         esp,4
 0058FF02    xor         esi,esi
 0058FF04    mov         eax,ebx
 0058FF06    call        TEnumerable<System.TClass>.GetEnumerator
 0058FF0B    mov         dword ptr [ebp-8],eax
 0058FF0E    xor         eax,eax
 0058FF10    push        ebp
 0058FF11    push        58FF5A
 0058FF16    push        dword ptr fs:[eax]
 0058FF19    mov         dword ptr fs:[eax],esp
>0058FF1C    jmp         0058FF30
 0058FF1E    mov         eax,dword ptr [ebp-8]
 0058FF21    mov         edx,dword ptr [eax]
 0058FF23    call        dword ptr [edx]
 0058FF25    mov         ebx,eax
 0058FF27    mov         eax,dword ptr [ebp-4]
 0058FF2A    mov         eax,dword ptr [eax]
 0058FF2C    mov         dword ptr [eax+esi*4],ebx
 0058FF2F    inc         esi
 0058FF30    mov         eax,dword ptr [ebp-8]
 0058FF33    call        TEnumerator<System.TClass>.MoveNext
 0058FF38    test        al,al
>0058FF3A    jne         0058FF1E
 0058FF3C    xor         eax,eax
 0058FF3E    pop         edx
 0058FF3F    pop         ecx
 0058FF40    pop         ecx
 0058FF41    mov         dword ptr fs:[eax],edx
 0058FF44    push        58FF61
 0058FF49    cmp         dword ptr [ebp-8],0
>0058FF4D    je          0058FF59
 0058FF4F    mov         dl,1
 0058FF51    mov         eax,dword ptr [ebp-8]
 0058FF54    mov         ecx,dword ptr [eax]
 0058FF56    call        dword ptr [ecx-4]
 0058FF59    ret
>0058FF5A    jmp         @HandleFinally
>0058FF5F    jmp         0058FF49
 0058FF61    pop         esi
 0058FF62    pop         ebx
 0058FF63    pop         ecx
 0058FF64    pop         ecx
 0058FF65    pop         ebp
 0058FF66    ret
end;*}

//0058FF68
destructor TEnumerable<System.TClass>.Destroy();
begin
{*
 0058FF68    push        ebx
 0058FF69    push        esi
 0058FF6A    call        @BeforeDestruction
 0058FF6F    mov         ebx,edx
 0058FF71    mov         esi,eax
 0058FF73    mov         dl,0FC
 0058FF75    and         dl,bl
 0058FF77    mov         eax,esi
 0058FF79    call        TObject.Destroy
 0058FF7E    test        bl,bl
>0058FF80    jle         0058FF89
 0058FF82    mov         eax,esi
 0058FF84    call        @ClassDestroy
 0058FF89    pop         esi
 0058FF8A    pop         ebx
 0058FF8B    ret
*}
end;

//0058FF8C
function TEnumerable<System.TClass>.GetEnumerator:TEnumerator<System.TClass>;
begin
{*
 0058FF8C    mov         edx,dword ptr [eax]
 0058FF8E    call        dword ptr [edx]
 0058FF90    ret
*}
end;

//0058FF94
{*procedure TEnumerable<System.TClass>.ToArray(?:?);
begin
 0058FF94    push        ebp
 0058FF95    mov         ebp,esp
 0058FF97    add         esp,0FFFFFFF4
 0058FF9A    push        ebx
 0058FF9B    mov         dword ptr [ebp-4],edx
 0058FF9E    mov         ebx,eax
 0058FFA0    mov         dl,1
 0058FFA2    mov         eax,[00598A90];TList<System.TClass>
 0058FFA7    call        00594D18
 0058FFAC    mov         dword ptr [ebp-8],eax
 0058FFAF    xor         eax,eax
 0058FFB1    push        ebp
 0058FFB2    push        59003C
 0058FFB7    push        dword ptr fs:[eax]
 0058FFBA    mov         dword ptr fs:[eax],esp
 0058FFBD    mov         eax,ebx
 0058FFBF    call        TEnumerable<System.TClass>.GetEnumerator
 0058FFC4    mov         dword ptr [ebp-0C],eax
 0058FFC7    xor         eax,eax
 0058FFC9    push        ebp
 0058FFCA    push        590014
 0058FFCF    push        dword ptr fs:[eax]
 0058FFD2    mov         dword ptr fs:[eax],esp
>0058FFD5    jmp         0058FFEA
 0058FFD7    mov         eax,dword ptr [ebp-0C]
 0058FFDA    mov         edx,dword ptr [eax]
 0058FFDC    call        dword ptr [edx]
 0058FFDE    mov         ebx,eax
 0058FFE0    mov         edx,ebx
 0058FFE2    mov         eax,dword ptr [ebp-8]
 0058FFE5    call        TList<System.TClass>.Add
 0058FFEA    mov         eax,dword ptr [ebp-0C]
 0058FFED    call        TEnumerator<System.TClass>.MoveNext
 0058FFF2    test        al,al
>0058FFF4    jne         0058FFD7
 0058FFF6    xor         eax,eax
 0058FFF8    pop         edx
 0058FFF9    pop         ecx
 0058FFFA    pop         ecx
 0058FFFB    mov         dword ptr fs:[eax],edx
 0058FFFE    push        59001B
 00590003    cmp         dword ptr [ebp-0C],0
>00590007    je          00590013
 00590009    mov         dl,1
 0059000B    mov         eax,dword ptr [ebp-0C]
 0059000E    mov         ecx,dword ptr [eax]
 00590010    call        dword ptr [ecx-4]
 00590013    ret
>00590014    jmp         @HandleFinally
>00590019    jmp         00590003
 0059001B    mov         edx,dword ptr [ebp-4]
 0059001E    mov         eax,dword ptr [ebp-8]
 00590021    call        TList<System.TClass>.ToArray
 00590026    xor         eax,eax
 00590028    pop         edx
 00590029    pop         ecx
 0059002A    pop         ecx
 0059002B    mov         dword ptr fs:[eax],edx
 0059002E    push        590043
 00590033    mov         eax,dword ptr [ebp-8]
 00590036    call        TObject.Free
 0059003B    ret
>0059003C    jmp         @HandleFinally
>00590041    jmp         00590033
 00590043    pop         ebx
 00590044    mov         esp,ebp
 00590046    pop         ebp
 00590047    ret
end;*}

//00590048
function TEnumerator<System.TClass>.MoveNext:Boolean;
begin
{*
 00590048    mov         edx,dword ptr [eax]
 0059004A    call        dword ptr [edx+4]
 0059004D    ret
*}
end;

//00590058
procedure sub_00590058;
begin
{*
 00590058    call        TDictionary<System.TClass,System.Generics.Collections.TList<Vcl.Themes.TStyleHookClass>>.TKeyCollection.GetEnumerator
 0059005D    ret
*}
end;

//00590060
constructor sub_00590060(ADictionary:TDictionary<System.TClass,System.Generics.Collections.TList<Vcl.Themes.TStyleHookClass>>);
begin
{*
 00590060    push        ebx
 00590061    push        esi
 00590062    push        edi
 00590063    test        dl,dl
>00590065    je          0059006F
 00590067    add         esp,0FFFFFFF0
 0059006A    call        @ClassCreate
 0059006F    mov         esi,ecx
 00590071    mov         ebx,edx
 00590073    mov         edi,eax
 00590075    xor         edx,edx
 00590077    mov         eax,edi
 00590079    call        TObject.Create
 0059007E    mov         dword ptr [edi+4],esi
 00590081    mov         eax,edi
 00590083    test        bl,bl
>00590085    je          00590096
 00590087    call        @AfterConstruction
 0059008C    pop         dword ptr fs:[0]
 00590093    add         esp,0C
 00590096    mov         eax,edi
 00590098    pop         edi
 00590099    pop         esi
 0059009A    pop         ebx
 0059009B    ret
*}
end;

//0059009C
procedure TDictionary<System.TClass,System.Generics.Collections.TList<Vcl.Themes.TStyleHookClass>>.TKeyCollection.GetEnumerator;
begin
{*
 0059009C    mov         ecx,dword ptr [eax+4]
 0059009F    mov         dl,1
 005900A1    mov         eax,[005785F8];TDictionary<System.TClass,System.Generics.Collections.TList<Vcl.Themes.TS...
 005900A6    call        005900E8
 005900AB    ret
*}
end;

//005900AC
{*procedure TDictionary<System.TClass,System.Generics.Collections.TList<Vcl.Themes.TStyleHookClass>>.TKeyCollection.ToArray(?:?);
begin
 005900AC    push        ebx
 005900AD    push        esi
 005900AE    mov         esi,edx
 005900B0    mov         ebx,eax
 005900B2    mov         ecx,esi
 005900B4    mov         eax,dword ptr [ebx+4]
 005900B7    mov         edx,dword ptr [eax+8]
 005900BA    mov         eax,ebx
 005900BC    call        0058FEDC
 005900C1    pop         esi
 005900C2    pop         ebx
 005900C3    ret
end;*}

//005900C4
{*function sub_005900C4(?:?):?;
begin
 005900C4    mov         edx,dword ptr [eax+8]
 005900C7    lea         edx,[edx+edx*2]
 005900CA    mov         eax,dword ptr [eax+4]
 005900CD    mov         eax,dword ptr [eax+4]
 005900D0    mov         eax,dword ptr [eax+edx*4+4]
 005900D4    ret
end;*}

//005900D8
procedure sub_005900D8;
begin
{*
 005900D8    call        005900C4
 005900DD    ret
*}
end;

//005900E0
procedure sub_005900E0;
begin
{*
 005900E0    call        TDictionary<System.TClass,System.Generics.Collections.TList<Vcl.Themes.TStyleHookClass>>.TKeyEnumerator.MoveNext
 005900E5    ret
*}
end;

//005900E8
constructor sub_005900E8(ADictionary:TDictionary<System.TClass,System.Generics.Collections.TList<Vcl.Themes.TStyleHookClass>>);
begin
{*
 005900E8    push        ebx
 005900E9    push        esi
 005900EA    push        edi
 005900EB    test        dl,dl
>005900ED    je          005900F7
 005900EF    add         esp,0FFFFFFF0
 005900F2    call        @ClassCreate
 005900F7    mov         esi,ecx
 005900F9    mov         ebx,edx
 005900FB    mov         edi,eax
 005900FD    xor         edx,edx
 005900FF    mov         eax,edi
 00590101    call        TObject.Create
 00590106    mov         dword ptr [edi+8],0FFFFFFFF
 0059010D    mov         dword ptr [edi+4],esi;TDictionary<System.TClass,System.Generics.Collections.TList<Vcl.Th...
 00590110    mov         eax,edi
 00590112    test        bl,bl
>00590114    je          00590125
 00590116    call        @AfterConstruction
 0059011B    pop         dword ptr fs:[0]
 00590122    add         esp,0C
 00590125    mov         eax,edi
 00590127    pop         edi
 00590128    pop         esi
 00590129    pop         ebx
 0059012A    ret
*}
end;

//0059012C
function TDictionary<System.TClass,System.Generics.Collections.TList<Vcl.Themes.TStyleHookClass>>.TKeyEnumerator.MoveNext:Boolean;
begin
{*
 0059012C    push        ebx
 0059012D    push        esi
 0059012E    mov         esi,eax
>00590130    jmp         0059014B
 00590132    inc         dword ptr [esi+8]
 00590135    mov         eax,dword ptr [esi+8]
 00590138    lea         eax,[eax+eax*2]
 0059013B    mov         edx,dword ptr [esi+4]
 0059013E    mov         edx,dword ptr [edx+4]
 00590141    cmp         dword ptr [edx+eax*4],0FFFFFFFF
>00590145    je          0059014B
 00590147    mov         bl,1
>00590149    jmp         0059015E
 0059014B    mov         eax,dword ptr [esi+4]
 0059014E    mov         eax,dword ptr [eax+4]
 00590151    call        0040ABA8
 00590156    dec         eax
 00590157    cmp         eax,dword ptr [esi+8]
>0059015A    jg          00590132
 0059015C    xor         ebx,ebx
 0059015E    mov         eax,ebx
 00590160    pop         esi
 00590161    pop         ebx
 00590162    ret
*}
end;

//00590164
{*procedure sub_00590164(?:TDictionary<System; ?:?; ?:?);
begin
 00590164    push        ebp
 00590165    mov         ebp,esp
 00590167    add         esp,0FFFFFFF8
 0059016A    push        ebx
 0059016B    push        esi
 0059016C    mov         dword ptr [ebp-4],ecx
 0059016F    mov         esi,edx
 00590171    mov         ebx,eax
 00590173    push        esi
 00590174    mov         eax,dword ptr [ebp-4]
 00590177    mov         ecx,1
 0059017C    mov         edx,dword ptr ds:[578AA0];TArray<Vcl.Themes.TList<Vcl.Themes.TStyleHookClass>>
 00590182    call        @DynArraySetLength
 00590187    add         esp,4
 0059018A    xor         esi,esi
 0059018C    mov         eax,ebx
 0059018E    call        TEnumerable<Vcl.Themes.TList<Vcl.Themes.TStyleHookClass>>.GetEnumerator
 00590193    mov         dword ptr [ebp-8],eax
 00590196    xor         eax,eax
 00590198    push        ebp
 00590199    push        5901E2
 0059019E    push        dword ptr fs:[eax]
 005901A1    mov         dword ptr fs:[eax],esp
>005901A4    jmp         005901B8
 005901A6    mov         eax,dword ptr [ebp-8]
 005901A9    mov         edx,dword ptr [eax]
 005901AB    call        dword ptr [edx]
 005901AD    mov         ebx,eax
 005901AF    mov         eax,dword ptr [ebp-4]
 005901B2    mov         eax,dword ptr [eax]
 005901B4    mov         dword ptr [eax+esi*4],ebx
 005901B7    inc         esi
 005901B8    mov         eax,dword ptr [ebp-8]
 005901BB    call        TEnumerator<Vcl.Themes.TList<Vcl.Themes.TStyleHookClass>>.MoveNext
 005901C0    test        al,al
>005901C2    jne         005901A6
 005901C4    xor         eax,eax
 005901C6    pop         edx
 005901C7    pop         ecx
 005901C8    pop         ecx
 005901C9    mov         dword ptr fs:[eax],edx
 005901CC    push        5901E9
 005901D1    cmp         dword ptr [ebp-8],0
>005901D5    je          005901E1
 005901D7    mov         dl,1
 005901D9    mov         eax,dword ptr [ebp-8]
 005901DC    mov         ecx,dword ptr [eax]
 005901DE    call        dword ptr [ecx-4]
 005901E1    ret
>005901E2    jmp         @HandleFinally
>005901E7    jmp         005901D1
 005901E9    pop         esi
 005901EA    pop         ebx
 005901EB    pop         ecx
 005901EC    pop         ecx
 005901ED    pop         ebp
 005901EE    ret
end;*}

//005901F0
destructor TEnumerable<Vcl.Themes.TList<Vcl.Themes.TStyleHookClass>>.Destroy();
begin
{*
 005901F0    push        ebx
 005901F1    push        esi
 005901F2    call        @BeforeDestruction
 005901F7    mov         ebx,edx
 005901F9    mov         esi,eax
 005901FB    mov         dl,0FC
 005901FD    and         dl,bl
 005901FF    mov         eax,esi
 00590201    call        TObject.Destroy
 00590206    test        bl,bl
>00590208    jle         00590211
 0059020A    mov         eax,esi
 0059020C    call        @ClassDestroy
 00590211    pop         esi
 00590212    pop         ebx
 00590213    ret
*}
end;

//00590214
function TEnumerable<Vcl.Themes.TList<Vcl.Themes.TStyleHookClass>>.GetEnumerator:TEnumerator<Vcl.Themes.TList<Vcl.Themes.TStyleHookClass>>;
begin
{*
 00590214    mov         edx,dword ptr [eax]
 00590216    call        dword ptr [edx]
 00590218    ret
*}
end;

//0059021C
{*procedure TEnumerable<Vcl.Themes.TList<Vcl.Themes.TStyleHookClass>>.ToArray(?:?);
begin
 0059021C    push        ebp
 0059021D    mov         ebp,esp
 0059021F    add         esp,0FFFFFFF4
 00590222    push        ebx
 00590223    mov         dword ptr [ebp-4],edx
 00590226    mov         ebx,eax
 00590228    mov         dl,1
 0059022A    mov         eax,[00599AE0];TList<Vcl.Themes.TList<Vcl.Themes.TStyleHookClass>>
 0059022F    call        00595018
 00590234    mov         dword ptr [ebp-8],eax
 00590237    xor         eax,eax
 00590239    push        ebp
 0059023A    push        5902C4
 0059023F    push        dword ptr fs:[eax]
 00590242    mov         dword ptr fs:[eax],esp
 00590245    mov         eax,ebx
 00590247    call        TEnumerable<Vcl.Themes.TList<Vcl.Themes.TStyleHookClass>>.GetEnumerator
 0059024C    mov         dword ptr [ebp-0C],eax
 0059024F    xor         eax,eax
 00590251    push        ebp
 00590252    push        59029C
 00590257    push        dword ptr fs:[eax]
 0059025A    mov         dword ptr fs:[eax],esp
>0059025D    jmp         00590272
 0059025F    mov         eax,dword ptr [ebp-0C]
 00590262    mov         edx,dword ptr [eax]
 00590264    call        dword ptr [edx]
 00590266    mov         ebx,eax
 00590268    mov         edx,ebx
 0059026A    mov         eax,dword ptr [ebp-8]
 0059026D    call        TList<Vcl.Themes.TList<Vcl.Themes.TStyleHookClass>>.Add
 00590272    mov         eax,dword ptr [ebp-0C]
 00590275    call        TEnumerator<Vcl.Themes.TList<Vcl.Themes.TStyleHookClass>>.MoveNext
 0059027A    test        al,al
>0059027C    jne         0059025F
 0059027E    xor         eax,eax
 00590280    pop         edx
 00590281    pop         ecx
 00590282    pop         ecx
 00590283    mov         dword ptr fs:[eax],edx
 00590286    push        5902A3
 0059028B    cmp         dword ptr [ebp-0C],0
>0059028F    je          0059029B
 00590291    mov         dl,1
 00590293    mov         eax,dword ptr [ebp-0C]
 00590296    mov         ecx,dword ptr [eax]
 00590298    call        dword ptr [ecx-4]
 0059029B    ret
>0059029C    jmp         @HandleFinally
>005902A1    jmp         0059028B
 005902A3    mov         edx,dword ptr [ebp-4]
 005902A6    mov         eax,dword ptr [ebp-8]
 005902A9    call        TList<Vcl.Themes.TList<Vcl.Themes.TStyleHookClass>>.ToArray
 005902AE    xor         eax,eax
 005902B0    pop         edx
 005902B1    pop         ecx
 005902B2    pop         ecx
 005902B3    mov         dword ptr fs:[eax],edx
 005902B6    push        5902CB
 005902BB    mov         eax,dword ptr [ebp-8]
 005902BE    call        TObject.Free
 005902C3    ret
>005902C4    jmp         @HandleFinally
>005902C9    jmp         005902BB
 005902CB    pop         ebx
 005902CC    mov         esp,ebp
 005902CE    pop         ebp
 005902CF    ret
end;*}

//005902D0
function TEnumerator<Vcl.Themes.TList<Vcl.Themes.TStyleHookClass>>.MoveNext:Boolean;
begin
{*
 005902D0    mov         edx,dword ptr [eax]
 005902D2    call        dword ptr [edx+4]
 005902D5    ret
*}
end;

//005902E0
procedure sub_005902E0;
begin
{*
 005902E0    call        TDictionary<System.TClass,System.Generics.Collections.TList<Vcl.Themes.TStyleHookClass>>.TValueCollection.GetEnumerator
 005902E5    ret
*}
end;

//005902E8
constructor sub_005902E8(ADictionary:TDictionary<System.TClass,System.Generics.Collections.TList<Vcl.Themes.TStyleHookClass>>);
begin
{*
 005902E8    push        ebx
 005902E9    push        esi
 005902EA    push        edi
 005902EB    test        dl,dl
>005902ED    je          005902F7
 005902EF    add         esp,0FFFFFFF0
 005902F2    call        @ClassCreate
 005902F7    mov         esi,ecx
 005902F9    mov         ebx,edx
 005902FB    mov         edi,eax
 005902FD    xor         edx,edx
 005902FF    mov         eax,edi
 00590301    call        TObject.Create
 00590306    mov         dword ptr [edi+4],esi
 00590309    mov         eax,edi
 0059030B    test        bl,bl
>0059030D    je          0059031E
 0059030F    call        @AfterConstruction
 00590314    pop         dword ptr fs:[0]
 0059031B    add         esp,0C
 0059031E    mov         eax,edi
 00590320    pop         edi
 00590321    pop         esi
 00590322    pop         ebx
 00590323    ret
*}
end;

//00590324
procedure TDictionary<System.TClass,System.Generics.Collections.TList<Vcl.Themes.TStyleHookClass>>.TValueCollection.GetEnumerator;
begin
{*
 00590324    mov         ecx,dword ptr [eax+4]
 00590327    mov         dl,1
 00590329    mov         eax,[00578E10];TDictionary<System.TClass,System.Generics.Collections.TList<Vcl.Themes.TS...
 0059032E    call        00590370
 00590333    ret
*}
end;

//00590334
{*procedure TDictionary<System.TClass,System.Generics.Collections.TList<Vcl.Themes.TStyleHookClass>>.TValueCollection.ToArray(?:?);
begin
 00590334    push        ebx
 00590335    push        esi
 00590336    mov         esi,edx
 00590338    mov         ebx,eax
 0059033A    mov         ecx,esi
 0059033C    mov         eax,dword ptr [ebx+4]
 0059033F    mov         edx,dword ptr [eax+8]
 00590342    mov         eax,ebx
 00590344    call        00590164
 00590349    pop         esi
 0059034A    pop         ebx
 0059034B    ret
end;*}

//0059034C
{*function sub_0059034C(?:?):?;
begin
 0059034C    mov         edx,dword ptr [eax+8]
 0059034F    lea         edx,[edx+edx*2]
 00590352    mov         eax,dword ptr [eax+4]
 00590355    mov         eax,dword ptr [eax+4]
 00590358    mov         eax,dword ptr [eax+edx*4+8]
 0059035C    ret
end;*}

//00590360
procedure sub_00590360;
begin
{*
 00590360    call        0059034C
 00590365    ret
*}
end;

//00590368
procedure sub_00590368;
begin
{*
 00590368    call        TDictionary<System.TClass,System.Generics.Collections.TList<Vcl.Themes.TStyleHookClass>>.TValueEnumerator.MoveNext
 0059036D    ret
*}
end;

//00590370
constructor sub_00590370(ADictionary:TDictionary<System.TClass,System.Generics.Collections.TList<Vcl.Themes.TStyleHookClass>>);
begin
{*
 00590370    push        ebx
 00590371    push        esi
 00590372    push        edi
 00590373    test        dl,dl
>00590375    je          0059037F
 00590377    add         esp,0FFFFFFF0
 0059037A    call        @ClassCreate
 0059037F    mov         esi,ecx
 00590381    mov         ebx,edx
 00590383    mov         edi,eax
 00590385    xor         edx,edx
 00590387    mov         eax,edi
 00590389    call        TObject.Create
 0059038E    mov         dword ptr [edi+8],0FFFFFFFF
 00590395    mov         dword ptr [edi+4],esi;TDictionary<System.TClass,System.Generics.Collections.TList<Vcl.Th...
 00590398    mov         eax,edi
 0059039A    test        bl,bl
>0059039C    je          005903AD
 0059039E    call        @AfterConstruction
 005903A3    pop         dword ptr fs:[0]
 005903AA    add         esp,0C
 005903AD    mov         eax,edi
 005903AF    pop         edi
 005903B0    pop         esi
 005903B1    pop         ebx
 005903B2    ret
*}
end;

//005903B4
function TDictionary<System.TClass,System.Generics.Collections.TList<Vcl.Themes.TStyleHookClass>>.TValueEnumerator.MoveNext:Boolean;
begin
{*
 005903B4    push        ebx
 005903B5    push        esi
 005903B6    mov         esi,eax
>005903B8    jmp         005903D3
 005903BA    inc         dword ptr [esi+8]
 005903BD    mov         eax,dword ptr [esi+8]
 005903C0    lea         eax,[eax+eax*2]
 005903C3    mov         edx,dword ptr [esi+4]
 005903C6    mov         edx,dword ptr [edx+4]
 005903C9    cmp         dword ptr [edx+eax*4],0FFFFFFFF
>005903CD    je          005903D3
 005903CF    mov         bl,1
>005903D1    jmp         005903E6
 005903D3    mov         eax,dword ptr [esi+4]
 005903D6    mov         eax,dword ptr [eax+4]
 005903D9    call        0040ABA8
 005903DE    dec         eax
 005903DF    cmp         eax,dword ptr [esi+8]
>005903E2    jg          005903BA
 005903E4    xor         ebx,ebx
 005903E6    mov         eax,ebx
 005903E8    pop         esi
 005903E9    pop         ebx
 005903EA    ret
*}
end;

//005903EC
{*procedure sub_005903EC(?:TDictionary<System.TClass,System.Generics.Collections.TList<Vcl.Themes.TStyleHookClass>>.TPairEnumerator; ?:?);
begin
 005903EC    push        ebx
 005903ED    mov         ecx,dword ptr [eax+8]
 005903F0    lea         ecx,[ecx+ecx*2]
 005903F3    mov         ebx,dword ptr [eax+4];TDictionary<System.TClass,System.Generics.Collections.TList<Vcl.Th...
 005903F6    mov         ebx,dword ptr [ebx+4];TDictionary<System.TClass,System.Generics.Collections.TList<Vcl.Th...
 005903F9    mov         ecx,dword ptr [ebx+ecx*4+4]
 005903FD    mov         dword ptr [edx],ecx
 005903FF    mov         ecx,dword ptr [eax+8]
 00590402    lea         ecx,[ecx+ecx*2]
 00590405    mov         eax,dword ptr [eax+4];TDictionary<System.TClass,System.Generics.Collections.TList<Vcl.Th...
 00590408    mov         eax,dword ptr [eax+4];TDictionary<System.TClass,System.Generics.Collections.TList<Vcl.Th...
 0059040B    mov         eax,dword ptr [eax+ecx*4+8]
 0059040F    mov         dword ptr [edx+4],eax
 00590412    pop         ebx
 00590413    ret
end;*}

//00590414
{*procedure sub_00590414(?:?);
begin
 00590414    push        ebx
 00590415    push        esi
 00590416    mov         esi,edx
 00590418    mov         ebx,eax
 0059041A    mov         edx,esi
 0059041C    mov         eax,ebx
 0059041E    call        005903EC
 00590423    pop         esi
 00590424    pop         ebx
 00590425    ret
end;*}

//00590428
procedure sub_00590428;
begin
{*
 00590428    call        TDictionary<System.TClass,System.Generics.Collections.TList<Vcl.Themes.TStyleHookClass>>.TPairEnumerator.MoveNext
 0059042D    ret
*}
end;

//00590430
constructor TMenuItemEnumerator.Create;
begin
{*
 00590430    push        ebx
 00590431    push        esi
 00590432    push        edi
 00590433    test        dl,dl
>00590435    je          0059043F
 00590437    add         esp,0FFFFFFF0
 0059043A    call        @ClassCreate
 0059043F    mov         esi,ecx
 00590441    mov         ebx,edx
 00590443    mov         edi,eax
 00590445    xor         edx,edx
 00590447    mov         eax,edi
 00590449    call        TObject.Create
 0059044E    mov         dword ptr [edi+8],0FFFFFFFF
 00590455    mov         dword ptr [edi+4],esi
 00590458    mov         eax,edi
 0059045A    test        bl,bl
>0059045C    je          0059046D
 0059045E    call        @AfterConstruction
 00590463    pop         dword ptr fs:[0]
 0059046A    add         esp,0C
 0059046D    mov         eax,edi
 0059046F    pop         edi
 00590470    pop         esi
 00590471    pop         ebx
 00590472    ret
*}
end;

//00590474
function TDictionary<System.TClass,System.Generics.Collections.TList<Vcl.Themes.TStyleHookClass>>.TPairEnumerator.MoveNext:Boolean;
begin
{*
 00590474    push        ebx
 00590475    push        esi
 00590476    mov         esi,eax
>00590478    jmp         00590493
 0059047A    inc         dword ptr [esi+8]
 0059047D    mov         eax,dword ptr [esi+8]
 00590480    lea         eax,[eax+eax*2]
 00590483    mov         edx,dword ptr [esi+4]
 00590486    mov         edx,dword ptr [edx+4]
 00590489    cmp         dword ptr [edx+eax*4],0FFFFFFFF
>0059048D    je          00590493
 0059048F    mov         bl,1
>00590491    jmp         005904A6
 00590493    mov         eax,dword ptr [esi+4]
 00590496    mov         eax,dword ptr [eax+4]
 00590499    call        0040ABA8
 0059049E    dec         eax
 0059049F    cmp         eax,dword ptr [esi+8]
>005904A2    jg          0059047A
 005904A4    xor         ebx,ebx
 005904A6    mov         eax,ebx
 005904A8    pop         esi
 005904A9    pop         ebx
 005904AA    ret
*}
end;

//005904AC
{*procedure sub_005904AC(?:?; ?:TClass; ?:TStyleHookClass);
begin
 005904AC    mov         dword ptr [eax],edx
 005904AE    mov         dword ptr [eax+4],ecx
 005904B1    ret
end;*}

//005904B4
{*procedure sub_005904B4(?:TDictionary<System; ?:?; ?:?);
begin
 005904B4    push        ebp
 005904B5    mov         ebp,esp
 005904B7    add         esp,0FFFFFFF0
 005904BA    push        ebx
 005904BB    push        esi
 005904BC    mov         dword ptr [ebp-0C],ecx
 005904BF    mov         ebx,edx
 005904C1    mov         esi,eax
 005904C3    lea         eax,[ebp-8]
 005904C6    mov         edx,dword ptr ds:[579CEC];TPair<System.string,Vcl.Themes.TSysStyleHookClass>
 005904CC    call        @AddRefRecord
 005904D1    xor         eax,eax
 005904D3    push        ebp
 005904D4    push        590580
 005904D9    push        dword ptr fs:[eax]
 005904DC    mov         dword ptr fs:[eax],esp
 005904DF    push        ebx
 005904E0    mov         eax,dword ptr [ebp-0C]
 005904E3    mov         ecx,1
 005904E8    mov         edx,dword ptr ds:[579D8C];TArray<Vcl.Themes.TPair<System.string,Vcl.Themes.TSysStyleHook...
 005904EE    call        @DynArraySetLength
 005904F3    add         esp,4
 005904F6    xor         ebx,ebx
 005904F8    mov         eax,esi
 005904FA    call        TEnumerable<Vcl.Themes.TPair<System.string,Vcl.Themes.TSysStyleHookClass>>.GetEnumerator
 005904FF    mov         dword ptr [ebp-10],eax
 00590502    xor         eax,eax
 00590504    push        ebp
 00590505    push        59055D
 0059050A    push        dword ptr fs:[eax]
 0059050D    mov         dword ptr fs:[eax],esp
>00590510    jmp         00590533
 00590512    lea         edx,[ebp-8]
 00590515    mov         eax,dword ptr [ebp-10]
 00590518    mov         ecx,dword ptr [eax]
 0059051A    call        dword ptr [ecx]
 0059051C    mov         eax,dword ptr [ebp-0C]
 0059051F    mov         eax,dword ptr [eax]
 00590521    lea         eax,[eax+ebx*8]
 00590524    lea         edx,[ebp-8]
 00590527    mov         ecx,dword ptr ds:[579CEC];TPair<System.string,Vcl.Themes.TSysStyleHookClass>
 0059052D    call        @CopyRecord
 00590532    inc         ebx
 00590533    mov         eax,dword ptr [ebp-10]
 00590536    call        TEnumerator<Vcl.Themes.TPair<System.string,Vcl.Themes.TSysStyleHookClass>>.MoveNext
 0059053B    test        al,al
>0059053D    jne         00590512
 0059053F    xor         eax,eax
 00590541    pop         edx
 00590542    pop         ecx
 00590543    pop         ecx
 00590544    mov         dword ptr fs:[eax],edx
 00590547    push        590564
 0059054C    cmp         dword ptr [ebp-10],0
>00590550    je          0059055C
 00590552    mov         dl,1
 00590554    mov         eax,dword ptr [ebp-10]
 00590557    mov         ecx,dword ptr [eax]
 00590559    call        dword ptr [ecx-4]
 0059055C    ret
>0059055D    jmp         @HandleFinally
>00590562    jmp         0059054C
 00590564    xor         eax,eax
 00590566    pop         edx
 00590567    pop         ecx
 00590568    pop         ecx
 00590569    mov         dword ptr fs:[eax],edx
 0059056C    push        590587
 00590571    lea         eax,[ebp-8]
 00590574    mov         edx,dword ptr ds:[579CEC];TPair<System.string,Vcl.Themes.TSysStyleHookClass>
 0059057A    call        @FinalizeRecord
 0059057F    ret
>00590580    jmp         @HandleFinally
>00590585    jmp         00590571
 00590587    pop         esi
 00590588    pop         ebx
 00590589    mov         esp,ebp
 0059058B    pop         ebp
 0059058C    ret
end;*}

//00590590
destructor TEnumerable<Vcl.Themes.TPair<System.string,Vcl.Themes.TSysStyleHookClass>>.Destroy();
begin
{*
 00590590    push        ebx
 00590591    push        esi
 00590592    call        @BeforeDestruction
 00590597    mov         ebx,edx
 00590599    mov         esi,eax
 0059059B    mov         dl,0FC
 0059059D    and         dl,bl
 0059059F    mov         eax,esi
 005905A1    call        TObject.Destroy
 005905A6    test        bl,bl
>005905A8    jle         005905B1
 005905AA    mov         eax,esi
 005905AC    call        @ClassDestroy
 005905B1    pop         esi
 005905B2    pop         ebx
 005905B3    ret
*}
end;

//005905B4
function TEnumerable<Vcl.Themes.TPair<System.string,Vcl.Themes.TSysStyleHookClass>>.GetEnumerator:TEnumerator<Vcl.Themes.TPair<System.string,Vcl.Themes.TSysStyleHookClass>>;
begin
{*
 005905B4    mov         edx,dword ptr [eax]
 005905B6    call        dword ptr [edx]
 005905B8    ret
*}
end;

//005905BC
{*procedure TEnumerable<Vcl.Themes.TPair<System.string,Vcl.Themes.TSysStyleHookClass>>.ToArray(?:?);
begin
 005905BC    push        ebp
 005905BD    mov         ebp,esp
 005905BF    add         esp,0FFFFFFEC
 005905C2    push        ebx
 005905C3    mov         dword ptr [ebp-0C],edx
 005905C6    mov         ebx,eax
 005905C8    lea         eax,[ebp-8]
 005905CB    mov         edx,dword ptr ds:[579CEC];TPair<System.string,Vcl.Themes.TSysStyleHookClass>
 005905D1    call        @AddRefRecord
 005905D6    xor         eax,eax
 005905D8    push        ebp
 005905D9    push        5906A5
 005905DE    push        dword ptr fs:[eax]
 005905E1    mov         dword ptr fs:[eax],esp
 005905E4    mov         dl,1
 005905E6    mov         eax,[0059ACE0];TList<Vcl.Themes.TPair<System.string,Vcl.Themes.TSysStyleHookClass>>
 005905EB    call        0059531C
 005905F0    mov         dword ptr [ebp-10],eax
 005905F3    xor         eax,eax
 005905F5    push        ebp
 005905F6    push        590682
 005905FB    push        dword ptr fs:[eax]
 005905FE    mov         dword ptr fs:[eax],esp
 00590601    mov         eax,ebx
 00590603    call        TEnumerable<Vcl.Themes.TPair<System.string,Vcl.Themes.TSysStyleHookClass>>.GetEnumerator
 00590608    mov         dword ptr [ebp-14],eax
 0059060B    xor         eax,eax
 0059060D    push        ebp
 0059060E    push        59065A
 00590613    push        dword ptr fs:[eax]
 00590616    mov         dword ptr fs:[eax],esp
>00590619    jmp         00590630
 0059061B    lea         edx,[ebp-8]
 0059061E    mov         eax,dword ptr [ebp-14]
 00590621    mov         ecx,dword ptr [eax]
 00590623    call        dword ptr [ecx]
 00590625    lea         edx,[ebp-8]
 00590628    mov         eax,dword ptr [ebp-10]
 0059062B    call        TList<Vcl.Themes.TPair<System.string,Vcl.Themes.TSysStyleHookClass>>.Add
 00590630    mov         eax,dword ptr [ebp-14]
 00590633    call        TEnumerator<Vcl.Themes.TPair<System.string,Vcl.Themes.TSysStyleHookClass>>.MoveNext
 00590638    test        al,al
>0059063A    jne         0059061B
 0059063C    xor         eax,eax
 0059063E    pop         edx
 0059063F    pop         ecx
 00590640    pop         ecx
 00590641    mov         dword ptr fs:[eax],edx
 00590644    push        590661
 00590649    cmp         dword ptr [ebp-14],0
>0059064D    je          00590659
 0059064F    mov         dl,1
 00590651    mov         eax,dword ptr [ebp-14]
 00590654    mov         ecx,dword ptr [eax]
 00590656    call        dword ptr [ecx-4]
 00590659    ret
>0059065A    jmp         @HandleFinally
>0059065F    jmp         00590649
 00590661    mov         edx,dword ptr [ebp-0C]
 00590664    mov         eax,dword ptr [ebp-10]
 00590667    call        TList<Vcl.Themes.TPair<System.string,Vcl.Themes.TSysStyleHookClass>>.ToArray
 0059066C    xor         eax,eax
 0059066E    pop         edx
 0059066F    pop         ecx
 00590670    pop         ecx
 00590671    mov         dword ptr fs:[eax],edx
 00590674    push        590689
 00590679    mov         eax,dword ptr [ebp-10]
 0059067C    call        TObject.Free
 00590681    ret
>00590682    jmp         @HandleFinally
>00590687    jmp         00590679
 00590689    xor         eax,eax
 0059068B    pop         edx
 0059068C    pop         ecx
 0059068D    pop         ecx
 0059068E    mov         dword ptr fs:[eax],edx
 00590691    push        5906AC
 00590696    lea         eax,[ebp-8]
 00590699    mov         edx,dword ptr ds:[579CEC];TPair<System.string,Vcl.Themes.TSysStyleHookClass>
 0059069F    call        @FinalizeRecord
 005906A4    ret
>005906A5    jmp         @HandleFinally
>005906AA    jmp         00590696
 005906AC    pop         ebx
 005906AD    mov         esp,ebp
 005906AF    pop         ebp
 005906B0    ret
end;*}

//005906B4
function TEnumerator<Vcl.Themes.TPair<System.string,Vcl.Themes.TSysStyleHookClass>>.MoveNext:Boolean;
begin
{*
 005906B4    mov         edx,dword ptr [eax]
 005906B6    call        dword ptr [edx+4]
 005906B9    ret
*}
end;

//005906BC
procedure sub_005906BC(?:TDictionary<System.string,Vcl.Themes.TSysStyleHookClass>; ?:Integer);
begin
{*
 005906BC    cmp         edx,dword ptr [eax+8]
>005906BF    jge         005906D8
 005906C1    mov         ecx,dword ptr ds:[7C4C2C];^SResString172:TResStringRec
 005906C7    mov         dl,1
 005906C9    mov         eax,[00417CF0];EArgumentOutOfRangeException
 005906CE    call        Exception.CreateRes;EArgumentOutOfRangeException.Create
 005906D3    call        @RaiseExcept
 005906D8    test        edx,edx
>005906DA    jne         005906E4
 005906DC    xor         edx,edx
 005906DE    call        005906FC
 005906E3    ret
 005906E4    mov         ecx,4
 005906E9    cmp         edx,ecx
>005906EB    jle         005906F3
 005906ED    add         ecx,ecx
 005906EF    cmp         edx,ecx
>005906F1    jg          005906ED
 005906F3    mov         edx,ecx
 005906F5    call        005906FC
 005906FA    ret
*}
end;

//005906FC
{*procedure sub_005906FC(?:?; ?:?);
begin
 005906FC    push        ebp
 005906FD    mov         ebp,esp
 005906FF    add         esp,0FFFFFFF0
 00590702    push        ebx
 00590703    push        esi
 00590704    push        edi
 00590705    xor         ecx,ecx
 00590707    mov         dword ptr [ebp-4],ecx
 0059070A    mov         dword ptr [ebp-8],ecx
 0059070D    mov         edi,edx
 0059070F    mov         dword ptr [ebp-0C],eax
 00590712    xor         eax,eax
 00590714    push        ebp
 00590715    push        59081D
 0059071A    push        dword ptr fs:[eax]
 0059071D    mov         dword ptr fs:[eax],esp
 00590720    mov         eax,dword ptr [ebp-0C]
 00590723    mov         eax,dword ptr [eax+4]
 00590726    mov         dword ptr [ebp-10],eax
 00590729    mov         eax,dword ptr [ebp-10]
 0059072C    test        eax,eax
>0059072E    je          00590735
 00590730    sub         eax,4
 00590733    mov         eax,dword ptr [eax]
 00590735    cmp         eax,edi
>00590737    je          005907FC
 0059073D    test        edi,edi
>0059073F    jge         00590746
 00590741    call        00423F00
 00590746    lea         eax,[ebp-4]
 00590749    mov         edx,dword ptr [ebp-0C]
 0059074C    mov         edx,dword ptr [edx+4]
 0059074F    mov         ecx,dword ptr ds:[57A1E4];TDictionary<System.string,Vcl.Themes.TSysStyleHookClass>.TItem...
 00590755    call        @DynArrayAsg
 0059075A    push        edi
 0059075B    lea         eax,[ebp-8]
 0059075E    mov         ecx,1
 00590763    mov         edx,dword ptr ds:[57A1E4];TDictionary<System.string,Vcl.Themes.TSysStyleHookClass>.TItem...
 00590769    call        @DynArraySetLength
 0059076E    add         esp,4
 00590771    mov         eax,dword ptr [ebp-8]
 00590774    test        eax,eax
>00590776    je          0059077D
 00590778    sub         eax,4
 0059077B    mov         eax,dword ptr [eax]
 0059077D    mov         esi,eax
 0059077F    dec         esi
 00590780    test        esi,esi
>00590782    jl          00590798
 00590784    inc         esi
 00590785    xor         ebx,ebx
 00590787    lea         eax,[ebx+ebx*2]
 0059078A    mov         edx,dword ptr [ebp-8]
 0059078D    mov         dword ptr [edx+eax*4],0FFFFFFFF
 00590794    inc         ebx
 00590795    dec         esi
>00590796    jne         00590787
 00590798    mov         eax,dword ptr [ebp-0C]
 0059079B    add         eax,4
 0059079E    mov         edx,dword ptr [ebp-8]
 005907A1    mov         ecx,dword ptr ds:[57A1E4];TDictionary<System.string,Vcl.Themes.TSysStyleHookClass>.TItem...
 005907A7    call        @DynArrayAsg
 005907AC    mov         eax,edi
 005907AE    shr         eax,1
 005907B0    shr         edi,2
 005907B3    add         eax,edi
 005907B5    mov         edx,dword ptr [ebp-0C]
 005907B8    mov         dword ptr [edx+10],eax
 005907BB    mov         eax,dword ptr [ebp-4]
 005907BE    test        eax,eax
>005907C0    je          005907C7
 005907C2    sub         eax,4
 005907C5    mov         eax,dword ptr [eax]
 005907C7    mov         esi,eax
 005907C9    dec         esi
 005907CA    test        esi,esi
>005907CC    jl          005907FC
 005907CE    inc         esi
 005907CF    xor         ebx,ebx
 005907D1    lea         eax,[ebx+ebx*2]
 005907D4    mov         edx,dword ptr [ebp-4]
 005907D7    mov         edx,dword ptr [edx+eax*4]
 005907DA    cmp         edx,0FFFFFFFF
>005907DD    je          005907F8
 005907DF    mov         ecx,dword ptr [ebp-4]
 005907E2    mov         ecx,dword ptr [ecx+eax*4+8]
 005907E6    push        ecx
 005907E7    mov         ecx,dword ptr [ebp-4]
 005907EA    mov         ecx,dword ptr [ecx+eax*4+4]
 005907EE    push        ecx
 005907EF    mov         eax,dword ptr [ebp-0C]
 005907F2    pop         ecx
 005907F3    call        005908D8
 005907F8    inc         ebx
 005907F9    dec         esi
>005907FA    jne         005907D1
 005907FC    xor         eax,eax
 005907FE    pop         edx
 005907FF    pop         ecx
 00590800    pop         ecx
 00590801    mov         dword ptr fs:[eax],edx
 00590804    push        590824
 00590809    lea         eax,[ebp-8]
 0059080C    mov         edx,dword ptr ds:[57A1E4];TDictionary<System.string,Vcl.Themes.TSysStyleHookClass>.TItem...
 00590812    mov         ecx,2
 00590817    call        @FinalizeArray
 0059081C    ret
>0059081D    jmp         @HandleFinally
>00590822    jmp         00590809
 00590824    pop         edi
 00590825    pop         esi
 00590826    pop         ebx
 00590827    mov         esp,ebp
 00590829    pop         ebp
 0059082A    ret
end;*}

//0059082C
{*function sub_0059082C(?:?; ?:?; ?:?):?;
begin
 0059082C    push        ebx
 0059082D    push        esi
 0059082E    push        edi
 0059082F    add         esp,0FFFFFFE8
 00590832    mov         dword ptr [esp+4],ecx
 00590836    mov         dword ptr [esp],edx
 00590839    mov         esi,eax
 0059083B    mov         eax,dword ptr [esi+4]
 0059083E    mov         dword ptr [esp+0C],eax
 00590842    mov         eax,dword ptr [esp+0C]
 00590846    test        eax,eax
>00590848    je          0059084F
 0059084A    sub         eax,4
 0059084D    mov         eax,dword ptr [eax]
 0059084F    test        eax,eax
>00590851    jne         0059085A
 00590853    mov         ebx,80000000
>00590858    jmp         005908CD
 0059085A    mov         eax,dword ptr [esi+4]
 0059085D    mov         dword ptr [esp+10],eax
 00590861    mov         eax,dword ptr [esp+10]
 00590865    test        eax,eax
>00590867    je          0059086E
 00590869    sub         eax,4
 0059086C    mov         eax,dword ptr [eax]
 0059086E    dec         eax
 0059086F    and         eax,dword ptr [esp+4]
 00590873    mov         ebx,eax
 00590875    lea         eax,[ebx+ebx*2]
 00590878    mov         edx,dword ptr [esi+4]
 0059087B    mov         eax,dword ptr [edx+eax*4]
 0059087E    mov         dword ptr [esp+8],eax
 00590882    cmp         dword ptr [esp+8],0FFFFFFFF
>00590887    jne         0059088D
 00590889    not         ebx
>0059088B    jmp         005908CD
 0059088D    mov         eax,dword ptr [esp+8]
 00590891    cmp         eax,dword ptr [esp+4]
>00590895    jne         005908B0
 00590897    lea         eax,[ebx+ebx*2]
 0059089A    mov         edx,dword ptr [esi+4]
 0059089D    mov         edx,dword ptr [edx+eax*4+4]
 005908A1    mov         ecx,dword ptr [esp]
 005908A4    mov         eax,dword ptr [esi+0C]
 005908A7    mov         edi,dword ptr [eax]
 005908A9    call        dword ptr [edi+0C]
 005908AC    test        al,al
>005908AE    jne         005908CD
 005908B0    inc         ebx
 005908B1    mov         eax,dword ptr [esi+4]
 005908B4    mov         dword ptr [esp+14],eax
 005908B8    mov         edi,dword ptr [esp+14]
 005908BC    test        edi,edi
>005908BE    je          005908C5
 005908C0    sub         edi,4
 005908C3    mov         edi,dword ptr [edi]
 005908C5    cmp         edi,ebx
>005908C7    jg          00590875
 005908C9    xor         ebx,ebx
>005908CB    jmp         00590875
 005908CD    mov         eax,ebx
 005908CF    add         esp,18
 005908D2    pop         edi
 005908D3    pop         esi
 005908D4    pop         ebx
 005908D5    ret
end;*}

//005908D8
{*procedure sub_005908D8(?:?; ?:?; ?:?; ?:?);
begin
 005908D8    push        ebp
 005908D9    mov         ebp,esp
 005908DB    add         esp,0FFFFFFF8
 005908DE    push        ebx
 005908DF    push        esi
 005908E0    push        edi
 005908E1    mov         dword ptr [ebp-8],ecx
 005908E4    mov         dword ptr [ebp-4],edx
 005908E7    mov         ebx,eax
 005908E9    mov         ecx,dword ptr [ebp-4]
 005908EC    mov         edx,dword ptr [ebp-8]
 005908EF    mov         eax,ebx
 005908F1    call        0059082C
 005908F6    mov         esi,eax
 005908F8    not         esi
 005908FA    lea         edi,[esi+esi*2]
 005908FD    mov         eax,dword ptr [ebx+4]
 00590900    mov         edx,dword ptr [ebp-4]
 00590903    mov         dword ptr [eax+edi*4],edx
 00590906    mov         eax,dword ptr [ebx+4]
 00590909    lea         eax,[eax+edi*4+4]
 0059090D    mov         edx,dword ptr [ebp-8]
 00590910    call        @UStrAsg
 00590915    mov         eax,dword ptr [ebx+4]
 00590918    mov         edx,dword ptr [ebp+8]
 0059091B    mov         dword ptr [eax+edi*4+8],edx
 0059091F    pop         edi
 00590920    pop         esi
 00590921    pop         ebx
 00590922    pop         ecx
 00590923    pop         ecx
 00590924    pop         ebp
 00590925    ret         4
end;*}

//00590928
procedure sub_00590928;
begin
{*
 00590928    call        TDictionary<System.string,Vcl.Themes.TSysStyleHookClass>.GetEnumerator
 0059092D    ret
*}
end;

//00590930
{*procedure sub_00590930(?:?);
begin
 00590930    push        ebx
 00590931    cmp         word ptr [eax+1A],0
>00590936    je          00590945
 00590938    push        ecx
 00590939    mov         ebx,eax
 0059093B    mov         ecx,edx
 0059093D    mov         edx,eax
 0059093F    mov         eax,dword ptr [ebx+1C]
 00590942    call        dword ptr [ebx+18]
 00590945    pop         ebx
 00590946    ret
end;*}

//00590948
{*procedure sub_00590948(?:?);
begin
 00590948    push        ebx
 00590949    cmp         word ptr [eax+22],0
>0059094E    je          0059095D
 00590950    push        ecx
 00590951    mov         ebx,eax
 00590953    mov         ecx,edx
 00590955    mov         edx,eax
 00590957    mov         eax,dword ptr [ebx+24]
 0059095A    call        dword ptr [ebx+20]
 0059095D    pop         ebx
 0059095E    ret
end;*}

//00590960
constructor sub_00590960(ACapacity:Integer);
begin
{*
 00590960    push        ebx
 00590961    push        esi
 00590962    test        dl,dl
>00590964    je          0059096E
 00590966    add         esp,0FFFFFFF0
 00590969    call        @ClassCreate
 0059096E    mov         ebx,edx
 00590970    mov         esi,eax
 00590972    push        0
 00590974    xor         edx,edx
 00590976    mov         eax,esi
 00590978    call        00590998
 0059097D    mov         eax,esi
 0059097F    test        bl,bl
>00590981    je          00590992
 00590983    call        @AfterConstruction
 00590988    pop         dword ptr fs:[0]
 0059098F    add         esp,0C
 00590992    mov         eax,esi
 00590994    pop         esi
 00590995    pop         ebx
 00590996    ret
*}
end;

//00590998
constructor sub_00590998(ACapacity:Integer; AComparer:IEqualityComparer<System.string>);
begin
{*
 00590998    push        ebp
 00590999    mov         ebp,esp
 0059099B    push        0
 0059099D    push        ebx
 0059099E    push        esi
 0059099F    push        edi
 005909A0    test        dl,dl
>005909A2    je          005909AC
 005909A4    add         esp,0FFFFFFF0
 005909A7    call        @ClassCreate
 005909AC    mov         esi,ecx
 005909AE    mov         ebx,edx
 005909B0    mov         edi,eax
 005909B2    xor         eax,eax
 005909B4    push        ebp
 005909B5    push        590A27
 005909BA    push        dword ptr fs:[eax]
 005909BD    mov         dword ptr fs:[eax],esp
 005909C0    xor         edx,edx
 005909C2    mov         eax,edi
 005909C4    call        TObject.Create
 005909C9    test        esi,esi
>005909CB    jge         005909E4
 005909CD    mov         ecx,dword ptr ds:[7C4C2C];^SResString172:TResStringRec
 005909D3    mov         dl,1
 005909D5    mov         eax,[00417CF0];EArgumentOutOfRangeException
 005909DA    call        Exception.CreateRes;EArgumentOutOfRangeException.Create
 005909DF    call        @RaiseExcept
 005909E4    lea         eax,[edi+0C]
 005909E7    mov         edx,dword ptr [ebp+8]
 005909EA    call        @IntfCopy
 005909EF    cmp         dword ptr [edi+0C],0
>005909F3    jne         00590A08
 005909F5    lea         eax,[ebp-4]
 005909F8    call        004577BC
 005909FD    mov         edx,dword ptr [ebp-4]
 00590A00    lea         eax,[edi+0C]
 00590A03    call        @IntfCopy
 00590A08    mov         edx,esi
 00590A0A    mov         eax,edi
 00590A0C    call        005906BC
 00590A11    xor         eax,eax
 00590A13    pop         edx
 00590A14    pop         ecx
 00590A15    pop         ecx
 00590A16    mov         dword ptr fs:[eax],edx
 00590A19    push        590A2E
 00590A1E    lea         eax,[ebp-4]
 00590A21    call        @IntfClear
 00590A26    ret
>00590A27    jmp         @HandleFinally
>00590A2C    jmp         00590A1E
 00590A2E    mov         eax,edi
 00590A30    test        bl,bl
>00590A32    je          00590A43
 00590A34    call        @AfterConstruction
 00590A39    pop         dword ptr fs:[0]
 00590A40    add         esp,0C
 00590A43    mov         eax,edi
 00590A45    pop         edi
 00590A46    pop         esi
 00590A47    pop         ebx
 00590A48    pop         ecx
 00590A49    pop         ebp
 00590A4A    ret         4
*}
end;

//00590A50
destructor TDictionary<System.string,Vcl.Themes.TSysStyleHookClass>.Destroy();
begin
{*
 00590A50    push        ebx
 00590A51    push        esi
 00590A52    call        @BeforeDestruction
 00590A57    mov         ebx,edx
 00590A59    mov         esi,eax
 00590A5B    mov         eax,esi
 00590A5D    call        TDictionary<System.string,Vcl.Themes.TSysStyleHookClass>.Clear
 00590A62    mov         eax,dword ptr [esi+28]
 00590A65    call        TObject.Free
 00590A6A    mov         eax,dword ptr [esi+2C]
 00590A6D    call        TObject.Free
 00590A72    mov         dl,0FC
 00590A74    and         dl,bl
 00590A76    mov         eax,esi
 00590A78    call        TEnumerable<Vcl.Themes.TPair<System.string,Vcl.Themes.TSysStyleHookClass>>.Destroy
 00590A7D    test        bl,bl
>00590A7F    jle         00590A88
 00590A81    mov         eax,esi
 00590A83    call        @ClassDestroy
 00590A88    pop         esi
 00590A89    pop         ebx
 00590A8A    ret
*}
end;

//00590A8C
procedure TDictionary<System.string,Vcl.Themes.TSysStyleHookClass>.Clear;
begin
{*
 00590A8C    push        ebp
 00590A8D    mov         ebp,esp
 00590A8F    add         esp,0FFFFFFF8
 00590A92    push        ebx
 00590A93    push        esi
 00590A94    push        edi
 00590A95    xor         edx,edx
 00590A97    mov         dword ptr [ebp-4],edx
 00590A9A    mov         esi,eax
 00590A9C    xor         eax,eax
 00590A9E    push        ebp
 00590A9F    push        590B47
 00590AA4    push        dword ptr fs:[eax]
 00590AA7    mov         dword ptr fs:[eax],esp
 00590AAA    lea         eax,[ebp-4]
 00590AAD    mov         edx,dword ptr [esi+4]
 00590AB0    mov         ecx,dword ptr ds:[57A1E4];TDictionary<System.string,Vcl.Themes.TSysStyleHookClass>.TItem...
 00590AB6    call        @DynArrayAsg
 00590ABB    xor         eax,eax
 00590ABD    mov         dword ptr [esi+8],eax
 00590AC0    lea         eax,[esi+4]
 00590AC3    mov         edx,dword ptr ds:[57A1E4];TDictionary<System.string,Vcl.Themes.TSysStyleHookClass>.TItem...
 00590AC9    call        @DynArrayClear
 00590ACE    xor         edx,edx
 00590AD0    mov         eax,esi
 00590AD2    call        005906BC
 00590AD7    xor         eax,eax
 00590AD9    mov         dword ptr [esi+10],eax
 00590ADC    mov         eax,dword ptr [ebp-4]
 00590ADF    test        eax,eax
>00590AE1    je          00590AE8
 00590AE3    sub         eax,4
 00590AE6    mov         eax,dword ptr [eax]
 00590AE8    dec         eax
 00590AE9    test        eax,eax
>00590AEB    jl          00590B2B
 00590AED    inc         eax
 00590AEE    mov         dword ptr [ebp-8],eax
 00590AF1    xor         ebx,ebx
 00590AF3    lea         eax,[ebx+ebx*2]
 00590AF6    mov         edx,dword ptr [ebp-4]
 00590AF9    cmp         dword ptr [edx+eax*4],0FFFFFFFF
>00590AFD    je          00590B25
 00590AFF    lea         eax,[ebx+ebx*2]
 00590B02    mov         edx,dword ptr [ebp-4]
 00590B05    mov         edx,dword ptr [edx+eax*4+4]
 00590B09    mov         cl,1
 00590B0B    mov         eax,esi
 00590B0D    mov         edi,dword ptr [eax]
 00590B0F    call        dword ptr [edi+8]
 00590B12    lea         eax,[ebx+ebx*2]
 00590B15    mov         edx,dword ptr [ebp-4]
 00590B18    mov         edx,dword ptr [edx+eax*4+8]
 00590B1C    mov         cl,1
 00590B1E    mov         eax,esi
 00590B20    mov         edi,dword ptr [eax]
 00590B22    call        dword ptr [edi+0C]
 00590B25    inc         ebx
 00590B26    dec         dword ptr [ebp-8]
>00590B29    jne         00590AF3
 00590B2B    xor         eax,eax
 00590B2D    pop         edx
 00590B2E    pop         ecx
 00590B2F    pop         ecx
 00590B30    mov         dword ptr fs:[eax],edx
 00590B33    push        590B4E
 00590B38    lea         eax,[ebp-4]
 00590B3B    mov         edx,dword ptr ds:[57A1E4];TDictionary<System.string,Vcl.Themes.TSysStyleHookClass>.TItem...
 00590B41    call        @DynArrayClear
 00590B46    ret
>00590B47    jmp         @HandleFinally
>00590B4C    jmp         00590B38
 00590B4E    pop         edi
 00590B4F    pop         esi
 00590B50    pop         ebx
 00590B51    pop         ecx
 00590B52    pop         ecx
 00590B53    pop         ebp
 00590B54    ret
*}
end;

//00590B58
{*procedure TDictionary<System.string,Vcl.Themes.TSysStyleHookClass>.ToArray(?:?);
begin
 00590B58    push        ebx
 00590B59    push        esi
 00590B5A    mov         esi,edx
 00590B5C    mov         ebx,eax
 00590B5E    mov         ecx,esi
 00590B60    mov         edx,dword ptr [ebx+8]
 00590B63    mov         eax,ebx
 00590B65    call        005904B4
 00590B6A    pop         esi
 00590B6B    pop         ebx
 00590B6C    ret
end;*}

//00590BB0
procedure TDictionary<System.string,Vcl.Themes.TSysStyleHookClass>.GetEnumerator;
begin
{*
 00590BB0    mov         ecx,eax
 00590BB2    mov         dl,1
 00590BB4    mov         eax,[0057B1E8];TDictionary<System.string,Vcl.Themes.TSysStyleHookClass>.TPairEnumerator
 00590BB9    call        005911A4
 00590BBE    ret
*}
end;

//00590BC0
{*procedure sub_00590BC0(?:TDictionary<System; ?:?; ?:?);
begin
 00590BC0    push        ebp
 00590BC1    mov         ebp,esp
 00590BC3    add         esp,0FFFFFFF4
 00590BC6    push        ebx
 00590BC7    push        esi
 00590BC8    xor         ebx,ebx
 00590BCA    mov         dword ptr [ebp-4],ebx
 00590BCD    mov         dword ptr [ebp-8],ecx
 00590BD0    mov         ebx,edx
 00590BD2    mov         esi,eax
 00590BD4    xor         eax,eax
 00590BD6    push        ebp
 00590BD7    push        590C77
 00590BDC    push        dword ptr fs:[eax]
 00590BDF    mov         dword ptr fs:[eax],esp
 00590BE2    push        ebx
 00590BE3    mov         eax,dword ptr [ebp-8]
 00590BE6    mov         ecx,1
 00590BEB    mov         edx,dword ptr ds:[41B770];TArray<System.string>
 00590BF1    call        @DynArraySetLength
 00590BF6    add         esp,4
 00590BF9    xor         ebx,ebx
 00590BFB    mov         eax,esi
 00590BFD    call        TEnumerable<System.string>.GetEnumerator
 00590C02    mov         dword ptr [ebp-0C],eax
 00590C05    xor         eax,eax
 00590C07    push        ebp
 00590C08    push        590C5A
 00590C0D    push        dword ptr fs:[eax]
 00590C10    mov         dword ptr fs:[eax],esp
>00590C13    jmp         00590C30
 00590C15    lea         edx,[ebp-4]
 00590C18    mov         eax,dword ptr [ebp-0C]
 00590C1B    mov         ecx,dword ptr [eax]
 00590C1D    call        dword ptr [ecx]
 00590C1F    mov         eax,dword ptr [ebp-8]
 00590C22    mov         eax,dword ptr [eax]
 00590C24    lea         eax,[eax+ebx*4]
 00590C27    mov         edx,dword ptr [ebp-4]
 00590C2A    call        @UStrAsg
 00590C2F    inc         ebx
 00590C30    mov         eax,dword ptr [ebp-0C]
 00590C33    call        TEnumerator<System.string>.MoveNext
 00590C38    test        al,al
>00590C3A    jne         00590C15
 00590C3C    xor         eax,eax
 00590C3E    pop         edx
 00590C3F    pop         ecx
 00590C40    pop         ecx
 00590C41    mov         dword ptr fs:[eax],edx
 00590C44    push        590C61
 00590C49    cmp         dword ptr [ebp-0C],0
>00590C4D    je          00590C59
 00590C4F    mov         dl,1
 00590C51    mov         eax,dword ptr [ebp-0C]
 00590C54    mov         ecx,dword ptr [eax]
 00590C56    call        dword ptr [ecx-4]
 00590C59    ret
>00590C5A    jmp         @HandleFinally
>00590C5F    jmp         00590C49
 00590C61    xor         eax,eax
 00590C63    pop         edx
 00590C64    pop         ecx
 00590C65    pop         ecx
 00590C66    mov         dword ptr fs:[eax],edx
 00590C69    push        590C7E
 00590C6E    lea         eax,[ebp-4]
 00590C71    call        @UStrClr
 00590C76    ret
>00590C77    jmp         @HandleFinally
>00590C7C    jmp         00590C6E
 00590C7E    pop         esi
 00590C7F    pop         ebx
 00590C80    mov         esp,ebp
 00590C82    pop         ebp
 00590C83    ret
end;*}

//00590C84
destructor TEnumerable<System.string>.Destroy();
begin
{*
 00590C84    push        ebx
 00590C85    push        esi
 00590C86    call        @BeforeDestruction
 00590C8B    mov         ebx,edx
 00590C8D    mov         esi,eax
 00590C8F    mov         dl,0FC
 00590C91    and         dl,bl
 00590C93    mov         eax,esi
 00590C95    call        TObject.Destroy
 00590C9A    test        bl,bl
>00590C9C    jle         00590CA5
 00590C9E    mov         eax,esi
 00590CA0    call        @ClassDestroy
 00590CA5    pop         esi
 00590CA6    pop         ebx
 00590CA7    ret
*}
end;

//00590CA8
function TEnumerable<System.string>.GetEnumerator:TEnumerator<System.string>;
begin
{*
 00590CA8    mov         edx,dword ptr [eax]
 00590CAA    call        dword ptr [edx]
 00590CAC    ret
*}
end;

//00590CB0
{*procedure TEnumerable<System.string>.ToArray(?:?);
begin
 00590CB0    push        ebp
 00590CB1    mov         ebp,esp
 00590CB3    add         esp,0FFFFFFF0
 00590CB6    push        ebx
 00590CB7    xor         ecx,ecx
 00590CB9    mov         dword ptr [ebp-4],ecx
 00590CBC    mov         dword ptr [ebp-8],edx
 00590CBF    mov         ebx,eax
 00590CC1    xor         eax,eax
 00590CC3    push        ebp
 00590CC4    push        590D8A
 00590CC9    push        dword ptr fs:[eax]
 00590CCC    mov         dword ptr fs:[eax],esp
 00590CCF    mov         dl,1
 00590CD1    mov         eax,[00462BD8];TList<System.string>
 00590CD6    call        0045C6FC
 00590CDB    mov         dword ptr [ebp-0C],eax
 00590CDE    xor         eax,eax
 00590CE0    push        ebp
 00590CE1    push        590D6D
 00590CE6    push        dword ptr fs:[eax]
 00590CE9    mov         dword ptr fs:[eax],esp
 00590CEC    mov         eax,ebx
 00590CEE    call        TEnumerable<System.string>.GetEnumerator
 00590CF3    mov         dword ptr [ebp-10],eax
 00590CF6    xor         eax,eax
 00590CF8    push        ebp
 00590CF9    push        590D45
 00590CFE    push        dword ptr fs:[eax]
 00590D01    mov         dword ptr fs:[eax],esp
>00590D04    jmp         00590D1B
 00590D06    lea         edx,[ebp-4]
 00590D09    mov         eax,dword ptr [ebp-10]
 00590D0C    mov         ecx,dword ptr [eax]
 00590D0E    call        dword ptr [ecx]
 00590D10    mov         edx,dword ptr [ebp-4]
 00590D13    mov         eax,dword ptr [ebp-0C]
 00590D16    call        TList<System.string>.Add
 00590D1B    mov         eax,dword ptr [ebp-10]
 00590D1E    call        TEnumerator<System.string>.MoveNext
 00590D23    test        al,al
>00590D25    jne         00590D06
 00590D27    xor         eax,eax
 00590D29    pop         edx
 00590D2A    pop         ecx
 00590D2B    pop         ecx
 00590D2C    mov         dword ptr fs:[eax],edx
 00590D2F    push        590D4C
 00590D34    cmp         dword ptr [ebp-10],0
>00590D38    je          00590D44
 00590D3A    mov         dl,1
 00590D3C    mov         eax,dword ptr [ebp-10]
 00590D3F    mov         ecx,dword ptr [eax]
 00590D41    call        dword ptr [ecx-4]
 00590D44    ret
>00590D45    jmp         @HandleFinally
>00590D4A    jmp         00590D34
 00590D4C    mov         edx,dword ptr [ebp-8]
 00590D4F    mov         eax,dword ptr [ebp-0C]
 00590D52    call        TList<System.string>.ToArray
 00590D57    xor         eax,eax
 00590D59    pop         edx
 00590D5A    pop         ecx
 00590D5B    pop         ecx
 00590D5C    mov         dword ptr fs:[eax],edx
 00590D5F    push        590D74
 00590D64    mov         eax,dword ptr [ebp-0C]
 00590D67    call        TObject.Free
 00590D6C    ret
>00590D6D    jmp         @HandleFinally
>00590D72    jmp         00590D64
 00590D74    xor         eax,eax
 00590D76    pop         edx
 00590D77    pop         ecx
 00590D78    pop         ecx
 00590D79    mov         dword ptr fs:[eax],edx
 00590D7C    push        590D91
 00590D81    lea         eax,[ebp-4]
 00590D84    call        @UStrClr
 00590D89    ret
>00590D8A    jmp         @HandleFinally
>00590D8F    jmp         00590D81
 00590D91    pop         ebx
 00590D92    mov         esp,ebp
 00590D94    pop         ebp
 00590D95    ret
end;*}

//00590D98
function TEnumerator<System.string>.MoveNext:Boolean;
begin
{*
 00590D98    mov         edx,dword ptr [eax]
 00590D9A    call        dword ptr [edx+4]
 00590D9D    ret
*}
end;

//00590DA8
procedure sub_00590DA8;
begin
{*
 00590DA8    call        TDictionary<System.string,Vcl.Themes.TSysStyleHookClass>.TKeyCollection.GetEnumerator
 00590DAD    ret
*}
end;

//00590DB0
constructor sub_00590DB0(ADictionary:TDictionary<System.string,Vcl.Themes.TSysStyleHookClass>);
begin
{*
 00590DB0    push        ebx
 00590DB1    push        esi
 00590DB2    push        edi
 00590DB3    test        dl,dl
>00590DB5    je          00590DBF
 00590DB7    add         esp,0FFFFFFF0
 00590DBA    call        @ClassCreate
 00590DBF    mov         esi,ecx
 00590DC1    mov         ebx,edx
 00590DC3    mov         edi,eax
 00590DC5    xor         edx,edx
 00590DC7    mov         eax,edi
 00590DC9    call        TObject.Create
 00590DCE    mov         dword ptr [edi+4],esi
 00590DD1    mov         eax,edi
 00590DD3    test        bl,bl
>00590DD5    je          00590DE6
 00590DD7    call        @AfterConstruction
 00590DDC    pop         dword ptr fs:[0]
 00590DE3    add         esp,0C
 00590DE6    mov         eax,edi
 00590DE8    pop         edi
 00590DE9    pop         esi
 00590DEA    pop         ebx
 00590DEB    ret
*}
end;

//00590DEC
procedure TDictionary<System.string,Vcl.Themes.TSysStyleHookClass>.TKeyCollection.GetEnumerator;
begin
{*
 00590DEC    mov         ecx,dword ptr [eax+4]
 00590DEF    mov         dl,1
 00590DF1    mov         eax,[0057A670];TDictionary<System.string,Vcl.Themes.TSysStyleHookClass>.TKeyEnumerator
 00590DF6    call        00590E50
 00590DFB    ret
*}
end;

//00590DFC
{*procedure TDictionary<System.string,Vcl.Themes.TSysStyleHookClass>.TKeyCollection.ToArray(?:?);
begin
 00590DFC    push        ebx
 00590DFD    push        esi
 00590DFE    mov         esi,edx
 00590E00    mov         ebx,eax
 00590E02    mov         ecx,esi
 00590E04    mov         eax,dword ptr [ebx+4]
 00590E07    mov         edx,dword ptr [eax+8]
 00590E0A    mov         eax,ebx
 00590E0C    call        00590BC0
 00590E11    pop         esi
 00590E12    pop         ebx
 00590E13    ret
end;*}

//00590E14
{*procedure sub_00590E14(?:TDictionary<System.string,Vcl.Themes.TSysStyleHookClass>.TKeyEnumerator; ?:?);
begin
 00590E14    push        ebx
 00590E15    push        esi
 00590E16    mov         esi,edx
 00590E18    mov         ebx,eax
 00590E1A    mov         eax,esi
 00590E1C    mov         edx,dword ptr [ebx+8]
 00590E1F    lea         edx,[edx+edx*2]
 00590E22    mov         ecx,dword ptr [ebx+4]
 00590E25    mov         ecx,dword ptr [ecx+4]
 00590E28    mov         edx,dword ptr [ecx+edx*4+4]
 00590E2C    call        @UStrAsg
 00590E31    pop         esi
 00590E32    pop         ebx
 00590E33    ret
end;*}

//00590E34
{*procedure sub_00590E34(?:?);
begin
 00590E34    push        ebx
 00590E35    push        esi
 00590E36    mov         esi,edx
 00590E38    mov         ebx,eax
 00590E3A    mov         edx,esi
 00590E3C    mov         eax,ebx
 00590E3E    call        00590E14
 00590E43    pop         esi
 00590E44    pop         ebx
 00590E45    ret
end;*}

//00590E48
procedure sub_00590E48;
begin
{*
 00590E48    call        TDictionary<System.string,Vcl.Themes.TSysStyleHookClass>.TKeyEnumerator.MoveNext
 00590E4D    ret
*}
end;

//00590E50
constructor sub_00590E50(ADictionary:TDictionary<System.string,Vcl.Themes.TSysStyleHookClass>);
begin
{*
 00590E50    push        ebx
 00590E51    push        esi
 00590E52    push        edi
 00590E53    test        dl,dl
>00590E55    je          00590E5F
 00590E57    add         esp,0FFFFFFF0
 00590E5A    call        @ClassCreate
 00590E5F    mov         esi,ecx
 00590E61    mov         ebx,edx
 00590E63    mov         edi,eax
 00590E65    xor         edx,edx
 00590E67    mov         eax,edi
 00590E69    call        TObject.Create
 00590E6E    mov         dword ptr [edi+8],0FFFFFFFF
 00590E75    mov         dword ptr [edi+4],esi
 00590E78    mov         eax,edi
 00590E7A    test        bl,bl
>00590E7C    je          00590E8D
 00590E7E    call        @AfterConstruction
 00590E83    pop         dword ptr fs:[0]
 00590E8A    add         esp,0C
 00590E8D    mov         eax,edi
 00590E8F    pop         edi
 00590E90    pop         esi
 00590E91    pop         ebx
 00590E92    ret
*}
end;

//00590E94
function TDictionary<System.string,Vcl.Themes.TSysStyleHookClass>.TKeyEnumerator.MoveNext:Boolean;
begin
{*
 00590E94    push        ebx
 00590E95    push        esi
 00590E96    mov         esi,eax
>00590E98    jmp         00590EB3
 00590E9A    inc         dword ptr [esi+8]
 00590E9D    mov         eax,dword ptr [esi+8]
 00590EA0    lea         eax,[eax+eax*2]
 00590EA3    mov         edx,dword ptr [esi+4]
 00590EA6    mov         edx,dword ptr [edx+4]
 00590EA9    cmp         dword ptr [edx+eax*4],0FFFFFFFF
>00590EAD    je          00590EB3
 00590EAF    mov         bl,1
>00590EB1    jmp         00590EC6
 00590EB3    mov         eax,dword ptr [esi+4]
 00590EB6    mov         eax,dword ptr [eax+4]
 00590EB9    call        0040ABA8
 00590EBE    dec         eax
 00590EBF    cmp         eax,dword ptr [esi+8]
>00590EC2    jg          00590E9A
 00590EC4    xor         ebx,ebx
 00590EC6    mov         eax,ebx
 00590EC8    pop         esi
 00590EC9    pop         ebx
 00590ECA    ret
*}
end;

//00590ECC
{*procedure sub_00590ECC(?:TDictionary<System; ?:?; ?:?);
begin
 00590ECC    push        ebp
 00590ECD    mov         ebp,esp
 00590ECF    add         esp,0FFFFFFF8
 00590ED2    push        ebx
 00590ED3    push        esi
 00590ED4    mov         dword ptr [ebp-4],ecx
 00590ED7    mov         esi,edx
 00590ED9    mov         ebx,eax
 00590EDB    push        esi
 00590EDC    mov         eax,dword ptr [ebp-4]
 00590EDF    mov         ecx,1
 00590EE4    mov         edx,dword ptr ds:[57AA98];TArray<Vcl.Themes.TSysStyleHookClass>
 00590EEA    call        @DynArraySetLength
 00590EEF    add         esp,4
 00590EF2    xor         esi,esi
 00590EF4    mov         eax,ebx
 00590EF6    call        TEnumerable<Vcl.Themes.TSysStyleHookClass>.GetEnumerator
 00590EFB    mov         dword ptr [ebp-8],eax
 00590EFE    xor         eax,eax
 00590F00    push        ebp
 00590F01    push        590F4A
 00590F06    push        dword ptr fs:[eax]
 00590F09    mov         dword ptr fs:[eax],esp
>00590F0C    jmp         00590F20
 00590F0E    mov         eax,dword ptr [ebp-8]
 00590F11    mov         edx,dword ptr [eax]
 00590F13    call        dword ptr [edx]
 00590F15    mov         ebx,eax
 00590F17    mov         eax,dword ptr [ebp-4]
 00590F1A    mov         eax,dword ptr [eax]
 00590F1C    mov         dword ptr [eax+esi*4],ebx
 00590F1F    inc         esi
 00590F20    mov         eax,dword ptr [ebp-8]
 00590F23    call        TEnumerator<Vcl.Themes.TSysStyleHookClass>.MoveNext
 00590F28    test        al,al
>00590F2A    jne         00590F0E
 00590F2C    xor         eax,eax
 00590F2E    pop         edx
 00590F2F    pop         ecx
 00590F30    pop         ecx
 00590F31    mov         dword ptr fs:[eax],edx
 00590F34    push        590F51
 00590F39    cmp         dword ptr [ebp-8],0
>00590F3D    je          00590F49
 00590F3F    mov         dl,1
 00590F41    mov         eax,dword ptr [ebp-8]
 00590F44    mov         ecx,dword ptr [eax]
 00590F46    call        dword ptr [ecx-4]
 00590F49    ret
>00590F4A    jmp         @HandleFinally
>00590F4F    jmp         00590F39
 00590F51    pop         esi
 00590F52    pop         ebx
 00590F53    pop         ecx
 00590F54    pop         ecx
 00590F55    pop         ebp
 00590F56    ret
end;*}

//00590F58
destructor TEnumerable<Vcl.Themes.TSysStyleHookClass>.Destroy();
begin
{*
 00590F58    push        ebx
 00590F59    push        esi
 00590F5A    call        @BeforeDestruction
 00590F5F    mov         ebx,edx
 00590F61    mov         esi,eax
 00590F63    mov         dl,0FC
 00590F65    and         dl,bl
 00590F67    mov         eax,esi
 00590F69    call        TObject.Destroy
 00590F6E    test        bl,bl
>00590F70    jle         00590F79
 00590F72    mov         eax,esi
 00590F74    call        @ClassDestroy
 00590F79    pop         esi
 00590F7A    pop         ebx
 00590F7B    ret
*}
end;

//00590F7C
function TEnumerable<Vcl.Themes.TSysStyleHookClass>.GetEnumerator:TEnumerator<Vcl.Themes.TSysStyleHookClass>;
begin
{*
 00590F7C    mov         edx,dword ptr [eax]
 00590F7E    call        dword ptr [edx]
 00590F80    ret
*}
end;

//00590F84
{*procedure TEnumerable<Vcl.Themes.TSysStyleHookClass>.ToArray(?:?);
begin
 00590F84    push        ebp
 00590F85    mov         ebp,esp
 00590F87    add         esp,0FFFFFFF4
 00590F8A    push        ebx
 00590F8B    mov         dword ptr [ebp-4],edx
 00590F8E    mov         ebx,eax
 00590F90    mov         dl,1
 00590F92    mov         eax,[0059BD70];TList<Vcl.Themes.TSysStyleHookClass>
 00590F97    call        00595698
 00590F9C    mov         dword ptr [ebp-8],eax
 00590F9F    xor         eax,eax
 00590FA1    push        ebp
 00590FA2    push        59102C
 00590FA7    push        dword ptr fs:[eax]
 00590FAA    mov         dword ptr fs:[eax],esp
 00590FAD    mov         eax,ebx
 00590FAF    call        TEnumerable<Vcl.Themes.TSysStyleHookClass>.GetEnumerator
 00590FB4    mov         dword ptr [ebp-0C],eax
 00590FB7    xor         eax,eax
 00590FB9    push        ebp
 00590FBA    push        591004
 00590FBF    push        dword ptr fs:[eax]
 00590FC2    mov         dword ptr fs:[eax],esp
>00590FC5    jmp         00590FDA
 00590FC7    mov         eax,dword ptr [ebp-0C]
 00590FCA    mov         edx,dword ptr [eax]
 00590FCC    call        dword ptr [edx]
 00590FCE    mov         ebx,eax
 00590FD0    mov         edx,ebx
 00590FD2    mov         eax,dword ptr [ebp-8]
 00590FD5    call        TList<Vcl.Themes.TSysStyleHookClass>.Add
 00590FDA    mov         eax,dword ptr [ebp-0C]
 00590FDD    call        TEnumerator<Vcl.Themes.TSysStyleHookClass>.MoveNext
 00590FE2    test        al,al
>00590FE4    jne         00590FC7
 00590FE6    xor         eax,eax
 00590FE8    pop         edx
 00590FE9    pop         ecx
 00590FEA    pop         ecx
 00590FEB    mov         dword ptr fs:[eax],edx
 00590FEE    push        59100B
 00590FF3    cmp         dword ptr [ebp-0C],0
>00590FF7    je          00591003
 00590FF9    mov         dl,1
 00590FFB    mov         eax,dword ptr [ebp-0C]
 00590FFE    mov         ecx,dword ptr [eax]
 00591000    call        dword ptr [ecx-4]
 00591003    ret
>00591004    jmp         @HandleFinally
>00591009    jmp         00590FF3
 0059100B    mov         edx,dword ptr [ebp-4]
 0059100E    mov         eax,dword ptr [ebp-8]
 00591011    call        TList<Vcl.Themes.TSysStyleHookClass>.ToArray
 00591016    xor         eax,eax
 00591018    pop         edx
 00591019    pop         ecx
 0059101A    pop         ecx
 0059101B    mov         dword ptr fs:[eax],edx
 0059101E    push        591033
 00591023    mov         eax,dword ptr [ebp-8]
 00591026    call        TObject.Free
 0059102B    ret
>0059102C    jmp         @HandleFinally
>00591031    jmp         00591023
 00591033    pop         ebx
 00591034    mov         esp,ebp
 00591036    pop         ebp
 00591037    ret
end;*}

//00591038
function TEnumerator<Vcl.Themes.TSysStyleHookClass>.MoveNext:Boolean;
begin
{*
 00591038    mov         edx,dword ptr [eax]
 0059103A    call        dword ptr [edx+4]
 0059103D    ret
*}
end;

//00591048
procedure sub_00591048;
begin
{*
 00591048    call        TDictionary<System.string,Vcl.Themes.TSysStyleHookClass>.TValueCollection.GetEnumerator
 0059104D    ret
*}
end;

//00591050
constructor sub_00591050(ADictionary:TDictionary<System.string,Vcl.Themes.TSysStyleHookClass>);
begin
{*
 00591050    push        ebx
 00591051    push        esi
 00591052    push        edi
 00591053    test        dl,dl
>00591055    je          0059105F
 00591057    add         esp,0FFFFFFF0
 0059105A    call        @ClassCreate
 0059105F    mov         esi,ecx
 00591061    mov         ebx,edx
 00591063    mov         edi,eax
 00591065    xor         edx,edx
 00591067    mov         eax,edi
 00591069    call        TObject.Create
 0059106E    mov         dword ptr [edi+4],esi
 00591071    mov         eax,edi
 00591073    test        bl,bl
>00591075    je          00591086
 00591077    call        @AfterConstruction
 0059107C    pop         dword ptr fs:[0]
 00591083    add         esp,0C
 00591086    mov         eax,edi
 00591088    pop         edi
 00591089    pop         esi
 0059108A    pop         ebx
 0059108B    ret
*}
end;

//0059108C
procedure TDictionary<System.string,Vcl.Themes.TSysStyleHookClass>.TValueCollection.GetEnumerator;
begin
{*
 0059108C    mov         ecx,dword ptr [eax+4]
 0059108F    mov         dl,1
 00591091    mov         eax,[0057ADBC];TDictionary<System.string,Vcl.Themes.TSysStyleHookClass>.TValueEnumerator
 00591096    call        005910D8
 0059109B    ret
*}
end;

//0059109C
{*procedure TDictionary<System.string,Vcl.Themes.TSysStyleHookClass>.TValueCollection.ToArray(?:?);
begin
 0059109C    push        ebx
 0059109D    push        esi
 0059109E    mov         esi,edx
 005910A0    mov         ebx,eax
 005910A2    mov         ecx,esi
 005910A4    mov         eax,dword ptr [ebx+4]
 005910A7    mov         edx,dword ptr [eax+8]
 005910AA    mov         eax,ebx
 005910AC    call        00590ECC
 005910B1    pop         esi
 005910B2    pop         ebx
 005910B3    ret
end;*}

//005910B4
{*function sub_005910B4(?:?):?;
begin
 005910B4    mov         edx,dword ptr [eax+8]
 005910B7    lea         edx,[edx+edx*2]
 005910BA    mov         eax,dword ptr [eax+4]
 005910BD    mov         eax,dword ptr [eax+4]
 005910C0    mov         eax,dword ptr [eax+edx*4+8]
 005910C4    ret
end;*}

//005910C8
procedure sub_005910C8;
begin
{*
 005910C8    call        005910B4
 005910CD    ret
*}
end;

//005910D0
procedure sub_005910D0;
begin
{*
 005910D0    call        TDictionary<System.string,Vcl.Themes.TSysStyleHookClass>.TValueEnumerator.MoveNext
 005910D5    ret
*}
end;

//005910D8
constructor sub_005910D8(ADictionary:TDictionary<System.string,Vcl.Themes.TSysStyleHookClass>);
begin
{*
 005910D8    push        ebx
 005910D9    push        esi
 005910DA    push        edi
 005910DB    test        dl,dl
>005910DD    je          005910E7
 005910DF    add         esp,0FFFFFFF0
 005910E2    call        @ClassCreate
 005910E7    mov         esi,ecx
 005910E9    mov         ebx,edx
 005910EB    mov         edi,eax
 005910ED    xor         edx,edx
 005910EF    mov         eax,edi
 005910F1    call        TObject.Create
 005910F6    mov         dword ptr [edi+8],0FFFFFFFF
 005910FD    mov         dword ptr [edi+4],esi
 00591100    mov         eax,edi
 00591102    test        bl,bl
>00591104    je          00591115
 00591106    call        @AfterConstruction
 0059110B    pop         dword ptr fs:[0]
 00591112    add         esp,0C
 00591115    mov         eax,edi
 00591117    pop         edi
 00591118    pop         esi
 00591119    pop         ebx
 0059111A    ret
*}
end;

//0059111C
function TDictionary<System.string,Vcl.Themes.TSysStyleHookClass>.TValueEnumerator.MoveNext:Boolean;
begin
{*
 0059111C    push        ebx
 0059111D    push        esi
 0059111E    mov         esi,eax
>00591120    jmp         0059113B
 00591122    inc         dword ptr [esi+8]
 00591125    mov         eax,dword ptr [esi+8]
 00591128    lea         eax,[eax+eax*2]
 0059112B    mov         edx,dword ptr [esi+4]
 0059112E    mov         edx,dword ptr [edx+4]
 00591131    cmp         dword ptr [edx+eax*4],0FFFFFFFF
>00591135    je          0059113B
 00591137    mov         bl,1
>00591139    jmp         0059114E
 0059113B    mov         eax,dword ptr [esi+4]
 0059113E    mov         eax,dword ptr [eax+4]
 00591141    call        0040ABA8
 00591146    dec         eax
 00591147    cmp         eax,dword ptr [esi+8]
>0059114A    jg          00591122
 0059114C    xor         ebx,ebx
 0059114E    mov         eax,ebx
 00591150    pop         esi
 00591151    pop         ebx
 00591152    ret
*}
end;

//00591154
{*procedure sub_00591154(?:TDictionary<System.string,Vcl.Themes.TSysStyleHookClass>.TPairEnumerator; ?:?);
begin
 00591154    push        ebx
 00591155    push        esi
 00591156    mov         esi,edx
 00591158    mov         ebx,eax
 0059115A    mov         eax,esi
 0059115C    mov         edx,dword ptr [ebx+8]
 0059115F    lea         edx,[edx+edx*2]
 00591162    mov         ecx,dword ptr [ebx+4]
 00591165    mov         ecx,dword ptr [ecx+4]
 00591168    mov         edx,dword ptr [ecx+edx*4+4]
 0059116C    call        @UStrAsg
 00591171    mov         eax,dword ptr [ebx+8]
 00591174    lea         eax,[eax+eax*2]
 00591177    mov         edx,dword ptr [ebx+4]
 0059117A    mov         edx,dword ptr [edx+4]
 0059117D    mov         eax,dword ptr [edx+eax*4+8]
 00591181    mov         dword ptr [esi+4],eax
 00591184    pop         esi
 00591185    pop         ebx
 00591186    ret
end;*}

//00591188
{*procedure sub_00591188(?:?);
begin
 00591188    push        ebx
 00591189    push        esi
 0059118A    mov         esi,edx
 0059118C    mov         ebx,eax
 0059118E    mov         edx,esi
 00591190    mov         eax,ebx
 00591192    call        00591154
 00591197    pop         esi
 00591198    pop         ebx
 00591199    ret
end;*}

//0059119C
procedure sub_0059119C;
begin
{*
 0059119C    call        TDictionary<System.string,Vcl.Themes.TSysStyleHookClass>.TPairEnumerator.MoveNext
 005911A1    ret
*}
end;

//005911A4
constructor sub_005911A4(ADictionary:TDictionary<System.string,Vcl.Themes.TSysStyleHookClass>);
begin
{*
 005911A4    push        ebx
 005911A5    push        esi
 005911A6    push        edi
 005911A7    test        dl,dl
>005911A9    je          005911B3
 005911AB    add         esp,0FFFFFFF0
 005911AE    call        @ClassCreate
 005911B3    mov         esi,ecx
 005911B5    mov         ebx,edx
 005911B7    mov         edi,eax
 005911B9    xor         edx,edx
 005911BB    mov         eax,edi
 005911BD    call        TObject.Create
 005911C2    mov         dword ptr [edi+8],0FFFFFFFF
 005911C9    mov         dword ptr [edi+4],esi
 005911CC    mov         eax,edi
 005911CE    test        bl,bl
>005911D0    je          005911E1
 005911D2    call        @AfterConstruction
 005911D7    pop         dword ptr fs:[0]
 005911DE    add         esp,0C
 005911E1    mov         eax,edi
 005911E3    pop         edi
 005911E4    pop         esi
 005911E5    pop         ebx
 005911E6    ret
*}
end;

//005911E8
function TDictionary<System.string,Vcl.Themes.TSysStyleHookClass>.TPairEnumerator.MoveNext:Boolean;
begin
{*
 005911E8    push        ebx
 005911E9    push        esi
 005911EA    mov         esi,eax
>005911EC    jmp         00591207
 005911EE    inc         dword ptr [esi+8]
 005911F1    mov         eax,dword ptr [esi+8]
 005911F4    lea         eax,[eax+eax*2]
 005911F7    mov         edx,dword ptr [esi+4]
 005911FA    mov         edx,dword ptr [edx+4]
 005911FD    cmp         dword ptr [edx+eax*4],0FFFFFFFF
>00591201    je          00591207
 00591203    mov         bl,1
>00591205    jmp         0059121A
 00591207    mov         eax,dword ptr [esi+4]
 0059120A    mov         eax,dword ptr [eax+4]
 0059120D    call        0040ABA8
 00591212    dec         eax
 00591213    cmp         eax,dword ptr [esi+8]
>00591216    jg          005911EE
 00591218    xor         ebx,ebx
 0059121A    mov         eax,ebx
 0059121C    pop         esi
 0059121D    pop         ebx
 0059121E    ret
*}
end;

//00591220
{*procedure sub_00591220(?:?; ?:?);
begin
 00591220    push        ebx
 00591221    push        esi
 00591222    push        ecx
 00591223    mov         ebx,ecx
 00591225    mov         dword ptr [esp],edx
 00591228    mov         esi,eax
 0059122A    mov         ecx,ebx
 0059122C    mov         edx,dword ptr [esp]
 0059122F    mov         eax,esi
 00591231    call        00590930
 00591236    cmp         bl,1
>00591239    jne         0059124A
 0059123B    test        byte ptr [esi+30],1
>0059123F    je          0059124A
 00591241    mov         eax,esp
 00591243    mov         eax,dword ptr [eax]
 00591245    call        TObject.Free
 0059124A    pop         edx
 0059124B    pop         esi
 0059124C    pop         ebx
 0059124D    ret
end;*}

//00591250
{*procedure sub_00591250(?:?; ?:?);
begin
 00591250    push        ebx
 00591251    push        esi
 00591252    push        ecx
 00591253    mov         ebx,ecx
 00591255    mov         dword ptr [esp],edx
 00591258    mov         esi,eax
 0059125A    mov         ecx,ebx
 0059125C    mov         edx,dword ptr [esp]
 0059125F    mov         eax,esi
 00591261    call        00590948
 00591266    cmp         bl,1
>00591269    jne         0059127A
 0059126B    test        byte ptr [esi+30],2
>0059126F    je          0059127A
 00591271    mov         eax,esp
 00591273    mov         eax,dword ptr [eax]
 00591275    call        TObject.Free
 0059127A    pop         edx
 0059127B    pop         esi
 0059127C    pop         ebx
 0059127D    ret
end;*}

//00591280
{*procedure sub_00591280(?:TDictionary<Winapi; ?:?; ?:?);
begin
 00591280    push        ebp
 00591281    mov         ebp,esp
 00591283    add         esp,0FFFFFFF0
 00591286    push        ebx
 00591287    push        esi
 00591288    push        edi
 00591289    mov         dword ptr [ebp-4],ecx
 0059128C    mov         ebx,edx
 0059128E    mov         esi,eax
 00591290    lea         edi,[ebp-0C]
 00591293    push        ebx
 00591294    mov         eax,dword ptr [ebp-4]
 00591297    mov         ecx,1
 0059129C    mov         edx,dword ptr ds:[57BE88];TArray<Vcl.Themes.TPair<Winapi.Windows.HWND,Vcl.Themes.TSysSty...
 005912A2    call        @DynArraySetLength
 005912A7    add         esp,4
 005912AA    xor         ebx,ebx
 005912AC    mov         eax,esi
 005912AE    call        TEnumerable<Vcl.Themes.TPair<Winapi.Windows.HWND,Vcl.Themes.TSysStyleHook>>.GetEnumerator
 005912B3    mov         dword ptr [ebp-10],eax
 005912B6    xor         eax,eax
 005912B8    push        ebp
 005912B9    push        59130B
 005912BE    push        dword ptr fs:[eax]
 005912C1    mov         dword ptr fs:[eax],esp
>005912C4    jmp         005912E1
 005912C6    mov         edx,edi
 005912C8    mov         eax,dword ptr [ebp-10]
 005912CB    mov         ecx,dword ptr [eax]
 005912CD    call        dword ptr [ecx]
 005912CF    mov         eax,dword ptr [ebp-4]
 005912D2    mov         eax,dword ptr [eax]
 005912D4    mov         edx,dword ptr [edi]
 005912D6    mov         dword ptr [eax+ebx*8],edx
 005912D9    mov         edx,dword ptr [edi+4]
 005912DC    mov         dword ptr [eax+ebx*8+4],edx
 005912E0    inc         ebx
 005912E1    mov         eax,dword ptr [ebp-10]
 005912E4    call        TEnumerator<Vcl.Themes.TPair<Winapi.Windows.HWND,Vcl.Themes.TSysStyleHook>>.MoveNext
 005912E9    test        al,al
>005912EB    jne         005912C6
 005912ED    xor         eax,eax
 005912EF    pop         edx
 005912F0    pop         ecx
 005912F1    pop         ecx
 005912F2    mov         dword ptr fs:[eax],edx
 005912F5    push        591312
 005912FA    cmp         dword ptr [ebp-10],0
>005912FE    je          0059130A
 00591300    mov         dl,1
 00591302    mov         eax,dword ptr [ebp-10]
 00591305    mov         ecx,dword ptr [eax]
 00591307    call        dword ptr [ecx-4]
 0059130A    ret
>0059130B    jmp         @HandleFinally
>00591310    jmp         005912FA
 00591312    pop         edi
 00591313    pop         esi
 00591314    pop         ebx
 00591315    mov         esp,ebp
 00591317    pop         ebp
 00591318    ret
end;*}

//0059131C
destructor TEnumerable<Vcl.Themes.TPair<Winapi.Windows.HWND,Vcl.Themes.TSysStyleHook>>.Destroy();
begin
{*
 0059131C    push        ebx
 0059131D    push        esi
 0059131E    call        @BeforeDestruction
 00591323    mov         ebx,edx
 00591325    mov         esi,eax
 00591327    mov         dl,0FC
 00591329    and         dl,bl
 0059132B    mov         eax,esi
 0059132D    call        TObject.Destroy
 00591332    test        bl,bl
>00591334    jle         0059133D
 00591336    mov         eax,esi
 00591338    call        @ClassDestroy
 0059133D    pop         esi
 0059133E    pop         ebx
 0059133F    ret
*}
end;

//00591340
function TEnumerable<Vcl.Themes.TPair<Winapi.Windows.HWND,Vcl.Themes.TSysStyleHook>>.GetEnumerator:TEnumerator<Vcl.Themes.TPair<Winapi.Windows.HWND,Vcl.Themes.TSysStyleHook>>;
begin
{*
 00591340    mov         edx,dword ptr [eax]
 00591342    call        dword ptr [edx]
 00591344    ret
*}
end;

//00591348
{*procedure TEnumerable<Vcl.Themes.TPair<Winapi.Windows.HWND,Vcl.Themes.TSysStyleHook>>.ToArray(?:?);
begin
 00591348    push        ebp
 00591349    mov         ebp,esp
 0059134B    add         esp,0FFFFFFEC
 0059134E    push        ebx
 0059134F    push        esi
 00591350    mov         dword ptr [ebp-4],edx
 00591353    mov         ebx,eax
 00591355    lea         esi,[ebp-10]
 00591358    mov         dl,1
 0059135A    mov         eax,[0059CF58];TList<Vcl.Themes.TPair<Winapi.Windows.HWND,Vcl.Themes.TSysStyleHook>>
 0059135F    call        0059599C
 00591364    mov         dword ptr [ebp-8],eax
 00591367    xor         eax,eax
 00591369    push        ebp
 0059136A    push        5913F4
 0059136F    push        dword ptr fs:[eax]
 00591372    mov         dword ptr fs:[eax],esp
 00591375    mov         eax,ebx
 00591377    call        TEnumerable<Vcl.Themes.TPair<Winapi.Windows.HWND,Vcl.Themes.TSysStyleHook>>.GetEnumerator
 0059137C    mov         dword ptr [ebp-14],eax
 0059137F    xor         eax,eax
 00591381    push        ebp
 00591382    push        5913CC
 00591387    push        dword ptr fs:[eax]
 0059138A    mov         dword ptr fs:[eax],esp
>0059138D    jmp         005913A2
 0059138F    mov         edx,esi
 00591391    mov         eax,dword ptr [ebp-14]
 00591394    mov         ecx,dword ptr [eax]
 00591396    call        dword ptr [ecx]
 00591398    mov         edx,esi
 0059139A    mov         eax,dword ptr [ebp-8]
 0059139D    call        TList<Vcl.Themes.TPair<Winapi.Windows.HWND,Vcl.Themes.TSysStyleHook>>.Add
 005913A2    mov         eax,dword ptr [ebp-14]
 005913A5    call        TEnumerator<Vcl.Themes.TPair<Winapi.Windows.HWND,Vcl.Themes.TSysStyleHook>>.MoveNext
 005913AA    test        al,al
>005913AC    jne         0059138F
 005913AE    xor         eax,eax
 005913B0    pop         edx
 005913B1    pop         ecx
 005913B2    pop         ecx
 005913B3    mov         dword ptr fs:[eax],edx
 005913B6    push        5913D3
 005913BB    cmp         dword ptr [ebp-14],0
>005913BF    je          005913CB
 005913C1    mov         dl,1
 005913C3    mov         eax,dword ptr [ebp-14]
 005913C6    mov         ecx,dword ptr [eax]
 005913C8    call        dword ptr [ecx-4]
 005913CB    ret
>005913CC    jmp         @HandleFinally
>005913D1    jmp         005913BB
 005913D3    mov         edx,dword ptr [ebp-4]
 005913D6    mov         eax,dword ptr [ebp-8]
 005913D9    call        TList<Vcl.Themes.TPair<Winapi.Windows.HWND,Vcl.Themes.TSysStyleHook>>.ToArray
 005913DE    xor         eax,eax
 005913E0    pop         edx
 005913E1    pop         ecx
 005913E2    pop         ecx
 005913E3    mov         dword ptr fs:[eax],edx
 005913E6    push        5913FB
 005913EB    mov         eax,dword ptr [ebp-8]
 005913EE    call        TObject.Free
 005913F3    ret
>005913F4    jmp         @HandleFinally
>005913F9    jmp         005913EB
 005913FB    pop         esi
 005913FC    pop         ebx
 005913FD    mov         esp,ebp
 005913FF    pop         ebp
 00591400    ret
end;*}

//00591404
function TEnumerator<Vcl.Themes.TPair<Winapi.Windows.HWND,Vcl.Themes.TSysStyleHook>>.MoveNext:Boolean;
begin
{*
 00591404    mov         edx,dword ptr [eax]
 00591406    call        dword ptr [edx+4]
 00591409    ret
*}
end;

//0059140C
procedure sub_0059140C(?:TDictionary<Winapi.Windows.HWND,Vcl.Themes.TSysStyleHook>; ?:Integer);
begin
{*
 0059140C    cmp         edx,dword ptr [eax+8]
>0059140F    jge         00591428
 00591411    mov         ecx,dword ptr ds:[7C4C2C];^SResString172:TResStringRec
 00591417    mov         dl,1
 00591419    mov         eax,[00417CF0];EArgumentOutOfRangeException
 0059141E    call        Exception.CreateRes;EArgumentOutOfRangeException.Create
 00591423    call        @RaiseExcept
 00591428    test        edx,edx
>0059142A    jne         00591434
 0059142C    xor         edx,edx
 0059142E    call        0059144C
 00591433    ret
 00591434    mov         ecx,4
 00591439    cmp         edx,ecx
>0059143B    jle         00591443
 0059143D    add         ecx,ecx
 0059143F    cmp         edx,ecx
>00591441    jg          0059143D
 00591443    mov         edx,ecx
 00591445    call        0059144C
 0059144A    ret
*}
end;

//0059144C
{*procedure sub_0059144C(?:?; ?:?);
begin
 0059144C    push        ebp
 0059144D    mov         ebp,esp
 0059144F    add         esp,0FFFFFFF0
 00591452    push        ebx
 00591453    push        esi
 00591454    push        edi
 00591455    xor         ecx,ecx
 00591457    mov         dword ptr [ebp-4],ecx
 0059145A    mov         dword ptr [ebp-8],ecx
 0059145D    mov         edi,edx
 0059145F    mov         dword ptr [ebp-0C],eax
 00591462    xor         eax,eax
 00591464    push        ebp
 00591465    push        59156D
 0059146A    push        dword ptr fs:[eax]
 0059146D    mov         dword ptr fs:[eax],esp
 00591470    mov         eax,dword ptr [ebp-0C]
 00591473    mov         eax,dword ptr [eax+4]
 00591476    mov         dword ptr [ebp-10],eax
 00591479    mov         eax,dword ptr [ebp-10]
 0059147C    test        eax,eax
>0059147E    je          00591485
 00591480    sub         eax,4
 00591483    mov         eax,dword ptr [eax]
 00591485    cmp         eax,edi
>00591487    je          0059154C
 0059148D    test        edi,edi
>0059148F    jge         00591496
 00591491    call        00423F00
 00591496    lea         eax,[ebp-4]
 00591499    mov         edx,dword ptr [ebp-0C]
 0059149C    mov         edx,dword ptr [edx+4]
 0059149F    mov         ecx,dword ptr ds:[57C2DC];TDictionary<Winapi.Windows.HWND,Vcl.Themes.TSysStyleHook>.TIte...
 005914A5    call        @DynArrayAsg
 005914AA    push        edi
 005914AB    lea         eax,[ebp-8]
 005914AE    mov         ecx,1
 005914B3    mov         edx,dword ptr ds:[57C2DC];TDictionary<Winapi.Windows.HWND,Vcl.Themes.TSysStyleHook>.TIte...
 005914B9    call        @DynArraySetLength
 005914BE    add         esp,4
 005914C1    mov         eax,dword ptr [ebp-8]
 005914C4    test        eax,eax
>005914C6    je          005914CD
 005914C8    sub         eax,4
 005914CB    mov         eax,dword ptr [eax]
 005914CD    mov         esi,eax
 005914CF    dec         esi
 005914D0    test        esi,esi
>005914D2    jl          005914E8
 005914D4    inc         esi
 005914D5    xor         ebx,ebx
 005914D7    lea         eax,[ebx+ebx*2]
 005914DA    mov         edx,dword ptr [ebp-8]
 005914DD    mov         dword ptr [edx+eax*4],0FFFFFFFF
 005914E4    inc         ebx
 005914E5    dec         esi
>005914E6    jne         005914D7
 005914E8    mov         eax,dword ptr [ebp-0C]
 005914EB    add         eax,4
 005914EE    mov         edx,dword ptr [ebp-8]
 005914F1    mov         ecx,dword ptr ds:[57C2DC];TDictionary<Winapi.Windows.HWND,Vcl.Themes.TSysStyleHook>.TIte...
 005914F7    call        @DynArrayAsg
 005914FC    mov         eax,edi
 005914FE    shr         eax,1
 00591500    shr         edi,2
 00591503    add         eax,edi
 00591505    mov         edx,dword ptr [ebp-0C]
 00591508    mov         dword ptr [edx+10],eax
 0059150B    mov         eax,dword ptr [ebp-4]
 0059150E    test        eax,eax
>00591510    je          00591517
 00591512    sub         eax,4
 00591515    mov         eax,dword ptr [eax]
 00591517    mov         esi,eax
 00591519    dec         esi
 0059151A    test        esi,esi
>0059151C    jl          0059154C
 0059151E    inc         esi
 0059151F    xor         ebx,ebx
 00591521    lea         eax,[ebx+ebx*2]
 00591524    mov         edx,dword ptr [ebp-4]
 00591527    mov         edx,dword ptr [edx+eax*4]
 0059152A    cmp         edx,0FFFFFFFF
>0059152D    je          00591548
 0059152F    mov         ecx,dword ptr [ebp-4]
 00591532    mov         ecx,dword ptr [ecx+eax*4+8]
 00591536    push        ecx
 00591537    mov         ecx,dword ptr [ebp-4]
 0059153A    mov         ecx,dword ptr [ecx+eax*4+4]
 0059153E    push        ecx
 0059153F    mov         eax,dword ptr [ebp-0C]
 00591542    pop         ecx
 00591543    call        00591670
 00591548    inc         ebx
 00591549    dec         esi
>0059154A    jne         00591521
 0059154C    xor         eax,eax
 0059154E    pop         edx
 0059154F    pop         ecx
 00591550    pop         ecx
 00591551    mov         dword ptr fs:[eax],edx
 00591554    push        591574
 00591559    lea         eax,[ebp-8]
 0059155C    mov         edx,dword ptr ds:[57C2DC];TDictionary<Winapi.Windows.HWND,Vcl.Themes.TSysStyleHook>.TIte...
 00591562    mov         ecx,2
 00591567    call        @FinalizeArray
 0059156C    ret
>0059156D    jmp         @HandleFinally
>00591572    jmp         00591559
 00591574    pop         edi
 00591575    pop         esi
 00591576    pop         ebx
 00591577    mov         esp,ebp
 00591579    pop         ebp
 0059157A    ret
end;*}

//0059157C
procedure sub_0059157C(?:TDictionary<Winapi);
begin
{*
 0059157C    push        ecx
 0059157D    mov         edx,dword ptr [eax+4]
 00591580    mov         dword ptr [esp],edx
 00591583    mov         edx,dword ptr [esp]
 00591586    test        edx,edx
>00591588    je          0059158F
 0059158A    sub         edx,4
 0059158D    mov         edx,dword ptr [edx]
 0059158F    add         edx,edx
 00591591    test        edx,edx
>00591593    jne         0059159A
 00591595    mov         edx,4
 0059159A    call        0059144C
 0059159F    pop         edx
 005915A0    ret
*}
end;

//005915A4
{*function sub_005915A4(?:TDictionary<Winapi; ?:HWND; ?:?):?;
begin
 005915A4    push        ebx
 005915A5    push        esi
 005915A6    push        edi
 005915A7    add         esp,0FFFFFFE8
 005915AA    mov         dword ptr [esp+4],ecx
 005915AE    mov         dword ptr [esp],edx
 005915B1    mov         esi,eax
 005915B3    mov         eax,dword ptr [esi+4]
 005915B6    mov         dword ptr [esp+0C],eax
 005915BA    mov         eax,dword ptr [esp+0C]
 005915BE    test        eax,eax
>005915C0    je          005915C7
 005915C2    sub         eax,4
 005915C5    mov         eax,dword ptr [eax]
 005915C7    test        eax,eax
>005915C9    jne         005915D2
 005915CB    mov         ebx,80000000
>005915D0    jmp         00591645
 005915D2    mov         eax,dword ptr [esi+4]
 005915D5    mov         dword ptr [esp+10],eax
 005915D9    mov         eax,dword ptr [esp+10]
 005915DD    test        eax,eax
>005915DF    je          005915E6
 005915E1    sub         eax,4
 005915E4    mov         eax,dword ptr [eax]
 005915E6    dec         eax
 005915E7    and         eax,dword ptr [esp+4]
 005915EB    mov         ebx,eax
 005915ED    lea         eax,[ebx+ebx*2]
 005915F0    mov         edx,dword ptr [esi+4]
 005915F3    mov         eax,dword ptr [edx+eax*4]
 005915F6    mov         dword ptr [esp+8],eax
 005915FA    cmp         dword ptr [esp+8],0FFFFFFFF
>005915FF    jne         00591605
 00591601    not         ebx
>00591603    jmp         00591645
 00591605    mov         eax,dword ptr [esp+8]
 00591609    cmp         eax,dword ptr [esp+4]
>0059160D    jne         00591628
 0059160F    lea         eax,[ebx+ebx*2]
 00591612    mov         edx,dword ptr [esi+4]
 00591615    mov         edx,dword ptr [edx+eax*4+4]
 00591619    mov         ecx,dword ptr [esp]
 0059161C    mov         eax,dword ptr [esi+0C]
 0059161F    mov         edi,dword ptr [eax]
 00591621    call        dword ptr [edi+0C]
 00591624    test        al,al
>00591626    jne         00591645
 00591628    inc         ebx
 00591629    mov         eax,dword ptr [esi+4]
 0059162C    mov         dword ptr [esp+14],eax
 00591630    mov         edi,dword ptr [esp+14]
 00591634    test        edi,edi
>00591636    je          0059163D
 00591638    sub         edi,4
 0059163B    mov         edi,dword ptr [edi]
 0059163D    cmp         edi,ebx
>0059163F    jg          005915ED
 00591641    xor         ebx,ebx
>00591643    jmp         005915ED
 00591645    mov         eax,ebx
 00591647    add         esp,18
 0059164A    pop         edi
 0059164B    pop         esi
 0059164C    pop         ebx
 0059164D    ret
end;*}

//00591650
{*function sub_00591650(?:TDictionary<Winapi; ?:HWND):?;
begin
 00591650    push        ebx
 00591651    push        esi
 00591652    mov         esi,edx
 00591654    mov         ebx,eax
 00591656    mov         edx,esi
 00591658    mov         eax,dword ptr [ebx+0C]
 0059165B    mov         ecx,dword ptr [eax]
 0059165D    call        dword ptr [ecx+10]
 00591660    and         eax,7FFFFFFF
 00591665    inc         eax
 00591666    and         eax,7FFFFFFF
 0059166B    pop         esi
 0059166C    pop         ebx
 0059166D    ret
end;*}

//00591670
{*procedure sub_00591670(?:?; ?:?; ?:?; ?:?);
begin
 00591670    push        ebp
 00591671    mov         ebp,esp
 00591673    add         esp,0FFFFFFF8
 00591676    push        ebx
 00591677    push        esi
 00591678    mov         dword ptr [ebp-8],ecx
 0059167B    mov         dword ptr [ebp-4],edx
 0059167E    mov         ebx,eax
 00591680    mov         ecx,dword ptr [ebp-4]
 00591683    mov         edx,dword ptr [ebp-8]
 00591686    mov         eax,ebx
 00591688    call        005915A4
 0059168D    not         eax
 0059168F    lea         edx,[eax+eax*2]
 00591692    mov         ecx,dword ptr [ebx+4]
 00591695    mov         esi,dword ptr [ebp-4]
 00591698    mov         dword ptr [ecx+edx*4],esi
 0059169B    mov         ecx,dword ptr [ebx+4]
 0059169E    mov         esi,dword ptr [ebp-8]
 005916A1    mov         dword ptr [ecx+edx*4+4],esi
 005916A5    mov         eax,dword ptr [ebx+4]
 005916A8    mov         ecx,dword ptr [ebp+8]
 005916AB    mov         dword ptr [eax+edx*4+8],ecx
 005916AF    pop         esi
 005916B0    pop         ebx
 005916B1    pop         ecx
 005916B2    pop         ecx
 005916B3    pop         ebp
 005916B4    ret         4
end;*}

//005916B8
{*procedure sub_005916B8(?:TDictionary<Winapi; ?:?; ?:?; ?:?; ?:?);
begin
 005916B8    push        ebp
 005916B9    mov         ebp,esp
 005916BB    push        ecx
 005916BC    push        ebx
 005916BD    push        esi
 005916BE    push        edi
 005916BF    mov         dword ptr [ebp-4],edx
 005916C2    mov         ebx,eax
 005916C4    mov         esi,dword ptr [ebp+0C]
 005916C7    lea         eax,[ecx+ecx*2]
 005916CA    mov         edx,dword ptr [ebx+4]
 005916CD    mov         edi,dword ptr [ebp-4]
 005916D0    mov         dword ptr [edx+eax*4],edi
 005916D3    mov         edx,dword ptr [ebx+4]
 005916D6    mov         dword ptr [edx+eax*4+4],esi
 005916DA    mov         edx,dword ptr [ebx+4]
 005916DD    mov         ecx,dword ptr [ebp+8]
 005916E0    mov         dword ptr [edx+eax*4+8],ecx
 005916E4    inc         dword ptr [ebx+8]
 005916E7    xor         ecx,ecx
 005916E9    mov         edx,esi
 005916EB    mov         eax,ebx
 005916ED    mov         esi,dword ptr [eax]
 005916EF    call        dword ptr [esi+8]
 005916F2    xor         ecx,ecx
 005916F4    mov         edx,dword ptr [ebp+8]
 005916F7    mov         eax,ebx
 005916F9    mov         ebx,dword ptr [eax]
 005916FB    call        dword ptr [ebx+0C]
 005916FE    pop         edi
 005916FF    pop         esi
 00591700    pop         ebx
 00591701    pop         ecx
 00591702    pop         ebp
 00591703    ret         8
end;*}

//00591708
procedure sub_00591708;
begin
{*
 00591708    call        TDictionary<Winapi.Windows.HWND,Vcl.Themes.TSysStyleHook>.GetEnumerator
 0059170D    ret
*}
end;

//00591710
{*procedure sub_00591710(?:?);
begin
 00591710    push        ebx
 00591711    cmp         word ptr [eax+1A],0
>00591716    je          00591725
 00591718    push        ecx
 00591719    mov         ebx,eax
 0059171B    mov         ecx,edx
 0059171D    mov         edx,eax
 0059171F    mov         eax,dword ptr [ebx+1C]
 00591722    call        dword ptr [ebx+18]
 00591725    pop         ebx
 00591726    ret
end;*}

//00591728
{*procedure sub_00591728(?:?);
begin
 00591728    push        ebx
 00591729    cmp         word ptr [eax+22],0
>0059172E    je          0059173D
 00591730    push        ecx
 00591731    mov         ebx,eax
 00591733    mov         ecx,edx
 00591735    mov         edx,eax
 00591737    mov         eax,dword ptr [ebx+24]
 0059173A    call        dword ptr [ebx+20]
 0059173D    pop         ebx
 0059173E    ret
end;*}

//00591740
constructor sub_00591740(ACapacity:Integer);
begin
{*
 00591740    push        ebx
 00591741    push        esi
 00591742    test        dl,dl
>00591744    je          0059174E
 00591746    add         esp,0FFFFFFF0
 00591749    call        @ClassCreate
 0059174E    mov         ebx,edx
 00591750    mov         esi,eax
 00591752    push        0
 00591754    xor         edx,edx
 00591756    mov         eax,esi
 00591758    call        00591778
 0059175D    mov         eax,esi
 0059175F    test        bl,bl
>00591761    je          00591772
 00591763    call        @AfterConstruction
 00591768    pop         dword ptr fs:[0]
 0059176F    add         esp,0C
 00591772    mov         eax,esi
 00591774    pop         esi
 00591775    pop         ebx
 00591776    ret
*}
end;

//00591778
constructor sub_00591778(ACapacity:Integer; AComparer:IEqualityComparer<Winapi.Windows.HWND>);
begin
{*
 00591778    push        ebp
 00591779    mov         ebp,esp
 0059177B    push        0
 0059177D    push        ebx
 0059177E    push        esi
 0059177F    push        edi
 00591780    test        dl,dl
>00591782    je          0059178C
 00591784    add         esp,0FFFFFFF0
 00591787    call        @ClassCreate
 0059178C    mov         esi,ecx
 0059178E    mov         ebx,edx
 00591790    mov         edi,eax
 00591792    xor         eax,eax
 00591794    push        ebp
 00591795    push        591807
 0059179A    push        dword ptr fs:[eax]
 0059179D    mov         dword ptr fs:[eax],esp
 005917A0    xor         edx,edx
 005917A2    mov         eax,edi
 005917A4    call        TObject.Create
 005917A9    test        esi,esi
>005917AB    jge         005917C4
 005917AD    mov         ecx,dword ptr ds:[7C4C2C];^SResString172:TResStringRec
 005917B3    mov         dl,1
 005917B5    mov         eax,[00417CF0];EArgumentOutOfRangeException
 005917BA    call        Exception.CreateRes;EArgumentOutOfRangeException.Create
 005917BF    call        @RaiseExcept
 005917C4    lea         eax,[edi+0C]
 005917C7    mov         edx,dword ptr [ebp+8]
 005917CA    call        @IntfCopy
 005917CF    cmp         dword ptr [edi+0C],0
>005917D3    jne         005917E8
 005917D5    lea         eax,[ebp-4]
 005917D8    call        00595C3C
 005917DD    mov         edx,dword ptr [ebp-4]
 005917E0    lea         eax,[edi+0C]
 005917E3    call        @IntfCopy
 005917E8    mov         edx,esi
 005917EA    mov         eax,edi
 005917EC    call        0059140C
 005917F1    xor         eax,eax
 005917F3    pop         edx
 005917F4    pop         ecx
 005917F5    pop         ecx
 005917F6    mov         dword ptr fs:[eax],edx
 005917F9    push        59180E
 005917FE    lea         eax,[ebp-4]
 00591801    call        @IntfClear
 00591806    ret
>00591807    jmp         @HandleFinally
>0059180C    jmp         005917FE
 0059180E    mov         eax,edi
 00591810    test        bl,bl
>00591812    je          00591823
 00591814    call        @AfterConstruction
 00591819    pop         dword ptr fs:[0]
 00591820    add         esp,0C
 00591823    mov         eax,edi
 00591825    pop         edi
 00591826    pop         esi
 00591827    pop         ebx
 00591828    pop         ecx
 00591829    pop         ebp
 0059182A    ret         4
*}
end;

//00591830
destructor TDictionary<Winapi.Windows.HWND,Vcl.Themes.TSysStyleHook>.Destroy();
begin
{*
 00591830    push        ebx
 00591831    push        esi
 00591832    call        @BeforeDestruction
 00591837    mov         ebx,edx
 00591839    mov         esi,eax
 0059183B    mov         eax,esi
 0059183D    call        TDictionary<Winapi.Windows.HWND,Vcl.Themes.TSysStyleHook>.Clear
 00591842    mov         eax,dword ptr [esi+28]
 00591845    call        TObject.Free
 0059184A    mov         eax,dword ptr [esi+2C]
 0059184D    call        TObject.Free
 00591852    mov         dl,0FC
 00591854    and         dl,bl
 00591856    mov         eax,esi
 00591858    call        TEnumerable<Vcl.Themes.TPair<Winapi.Windows.HWND,Vcl.Themes.TSysStyleHook>>.Destroy
 0059185D    test        bl,bl
>0059185F    jle         00591868
 00591861    mov         eax,esi
 00591863    call        @ClassDestroy
 00591868    pop         esi
 00591869    pop         ebx
 0059186A    ret
*}
end;

//0059186C
procedure TDictionary<Winapi.Windows.HWND,Vcl.Themes.TSysStyleHook>.Add(Key:HWND; Value:TSysStyleHook);
begin
{*
 0059186C    push        ebx
 0059186D    push        esi
 0059186E    push        edi
 0059186F    push        ecx
 00591870    mov         dword ptr [esp],ecx
 00591873    mov         esi,edx
 00591875    mov         ebx,eax
 00591877    mov         eax,dword ptr [ebx+8]
 0059187A    cmp         eax,dword ptr [ebx+10]
>0059187D    jl          00591886
 0059187F    mov         eax,ebx
 00591881    call        0059157C
 00591886    mov         edx,esi
 00591888    mov         eax,ebx
 0059188A    call        00591650
 0059188F    mov         edi,eax
 00591891    mov         ecx,edi
 00591893    mov         edx,esi
 00591895    mov         eax,ebx
 00591897    call        005915A4
 0059189C    test        eax,eax
>0059189E    jl          005918B7
 005918A0    mov         ecx,dword ptr ds:[7C423C];^SResString174:TResStringRec
 005918A6    mov         dl,1
 005918A8    mov         eax,[004180BC];EListError
 005918AD    call        Exception.CreateRes;EListError.Create
 005918B2    call        @RaiseExcept
 005918B7    push        esi
 005918B8    mov         edx,dword ptr [esp+4]
 005918BC    push        edx
 005918BD    mov         ecx,eax
 005918BF    not         ecx
 005918C1    mov         edx,edi
 005918C3    mov         eax,ebx
 005918C5    call        005916B8
 005918CA    pop         edx
 005918CB    pop         edi
 005918CC    pop         esi
 005918CD    pop         ebx
 005918CE    ret
*}
end;

//005918D0
procedure TDictionary<Winapi.Windows.HWND,Vcl.Themes.TSysStyleHook>.Clear;
begin
{*
 005918D0    push        ebp
 005918D1    mov         ebp,esp
 005918D3    add         esp,0FFFFFFF8
 005918D6    push        ebx
 005918D7    push        esi
 005918D8    push        edi
 005918D9    xor         edx,edx
 005918DB    mov         dword ptr [ebp-4],edx
 005918DE    mov         esi,eax
 005918E0    xor         eax,eax
 005918E2    push        ebp
 005918E3    push        59198B
 005918E8    push        dword ptr fs:[eax]
 005918EB    mov         dword ptr fs:[eax],esp
 005918EE    lea         eax,[ebp-4]
 005918F1    mov         edx,dword ptr [esi+4]
 005918F4    mov         ecx,dword ptr ds:[57C2DC];TDictionary<Winapi.Windows.HWND,Vcl.Themes.TSysStyleHook>.TIte...
 005918FA    call        @DynArrayAsg
 005918FF    xor         eax,eax
 00591901    mov         dword ptr [esi+8],eax
 00591904    lea         eax,[esi+4]
 00591907    mov         edx,dword ptr ds:[57C2DC];TDictionary<Winapi.Windows.HWND,Vcl.Themes.TSysStyleHook>.TIte...
 0059190D    call        @DynArrayClear
 00591912    xor         edx,edx
 00591914    mov         eax,esi
 00591916    call        0059140C
 0059191B    xor         eax,eax
 0059191D    mov         dword ptr [esi+10],eax
 00591920    mov         eax,dword ptr [ebp-4]
 00591923    test        eax,eax
>00591925    je          0059192C
 00591927    sub         eax,4
 0059192A    mov         eax,dword ptr [eax]
 0059192C    dec         eax
 0059192D    test        eax,eax
>0059192F    jl          0059196F
 00591931    inc         eax
 00591932    mov         dword ptr [ebp-8],eax
 00591935    xor         ebx,ebx
 00591937    lea         eax,[ebx+ebx*2]
 0059193A    mov         edx,dword ptr [ebp-4]
 0059193D    cmp         dword ptr [edx+eax*4],0FFFFFFFF
>00591941    je          00591969
 00591943    lea         eax,[ebx+ebx*2]
 00591946    mov         edx,dword ptr [ebp-4]
 00591949    mov         edx,dword ptr [edx+eax*4+4]
 0059194D    mov         cl,1
 0059194F    mov         eax,esi
 00591951    mov         edi,dword ptr [eax]
 00591953    call        dword ptr [edi+8]
 00591956    lea         eax,[ebx+ebx*2]
 00591959    mov         edx,dword ptr [ebp-4]
 0059195C    mov         edx,dword ptr [edx+eax*4+8]
 00591960    mov         cl,1
 00591962    mov         eax,esi
 00591964    mov         edi,dword ptr [eax]
 00591966    call        dword ptr [edi+0C]
 00591969    inc         ebx
 0059196A    dec         dword ptr [ebp-8]
>0059196D    jne         00591937
 0059196F    xor         eax,eax
 00591971    pop         edx
 00591972    pop         ecx
 00591973    pop         ecx
 00591974    mov         dword ptr fs:[eax],edx
 00591977    push        591992
 0059197C    lea         eax,[ebp-4]
 0059197F    mov         edx,dword ptr ds:[57C2DC];TDictionary<Winapi.Windows.HWND,Vcl.Themes.TSysStyleHook>.TIte...
 00591985    call        @DynArrayClear
 0059198A    ret
>0059198B    jmp         @HandleFinally
>00591990    jmp         0059197C
 00591992    pop         edi
 00591993    pop         esi
 00591994    pop         ebx
 00591995    pop         ecx
 00591996    pop         ecx
 00591997    pop         ebp
 00591998    ret
*}
end;

//0059199C
function TDictionary<Winapi.Windows.HWND,Vcl.Themes.TSysStyleHook>.ContainsKey(Key:HWND):Boolean;
begin
{*
 0059199C    push        ebx
 0059199D    push        esi
 0059199E    mov         esi,edx
 005919A0    mov         ebx,eax
 005919A2    mov         edx,esi
 005919A4    mov         eax,ebx
 005919A6    call        00591650
 005919AB    mov         ecx,eax
 005919AD    mov         edx,esi
 005919AF    mov         eax,ebx
 005919B1    call        005915A4
 005919B6    test        eax,eax
 005919B8    setge       al
 005919BB    pop         esi
 005919BC    pop         ebx
 005919BD    ret
*}
end;

//005919C0
{*procedure TDictionary<Winapi.Windows.HWND,Vcl.Themes.TSysStyleHook>.ToArray(?:?);
begin
 005919C0    push        ebx
 005919C1    push        esi
 005919C2    mov         esi,edx
 005919C4    mov         ebx,eax
 005919C6    mov         ecx,esi
 005919C8    mov         edx,dword ptr [ebx+8]
 005919CB    mov         eax,ebx
 005919CD    call        00591280
 005919D2    pop         esi
 005919D3    pop         ebx
 005919D4    ret
end;*}

//005919F8
{*function sub_005919F8(?:?):?;
begin
 005919F8    push        ebx
 005919F9    mov         ebx,eax
 005919FB    cmp         dword ptr [ebx+2C],0
>005919FF    jne         00591A12
 00591A01    mov         ecx,ebx
 00591A03    mov         dl,1
 00591A05    mov         eax,[0057D154];TDictionary<Winapi.Windows.HWND,Vcl.Themes.TSysStyleHook>.TValueCollectio...
 00591A0A    call        00591E34
 00591A0F    mov         dword ptr [ebx+2C],eax
 00591A12    mov         eax,dword ptr [ebx+2C]
 00591A15    pop         ebx
 00591A16    ret
end;*}

//00591A18
procedure TDictionary<Winapi.Windows.HWND,Vcl.Themes.TSysStyleHook>.GetEnumerator;
begin
{*
 00591A18    mov         ecx,eax
 00591A1A    mov         dl,1
 00591A1C    mov         eax,[0057D388];TDictionary<Winapi.Windows.HWND,Vcl.Themes.TSysStyleHook>.TPairEnumerator
 00591A21    call        00591F7C
 00591A26    ret
*}
end;

//00591A28
{*procedure sub_00591A28(?:TDictionary<Winapi; ?:?; ?:?);
begin
 00591A28    push        ebp
 00591A29    mov         ebp,esp
 00591A2B    add         esp,0FFFFFFF8
 00591A2E    push        ebx
 00591A2F    push        esi
 00591A30    mov         dword ptr [ebp-4],ecx
 00591A33    mov         esi,edx
 00591A35    mov         ebx,eax
 00591A37    push        esi
 00591A38    mov         eax,dword ptr [ebp-4]
 00591A3B    mov         ecx,1
 00591A40    mov         edx,dword ptr ds:[57C528];TArray<Winapi.Windows.HWND>
 00591A46    call        @DynArraySetLength
 00591A4B    add         esp,4
 00591A4E    xor         esi,esi
 00591A50    mov         eax,ebx
 00591A52    call        TEnumerable<Winapi.Windows.HWND>.GetEnumerator
 00591A57    mov         dword ptr [ebp-8],eax
 00591A5A    xor         eax,eax
 00591A5C    push        ebp
 00591A5D    push        591AA6
 00591A62    push        dword ptr fs:[eax]
 00591A65    mov         dword ptr fs:[eax],esp
>00591A68    jmp         00591A7C
 00591A6A    mov         eax,dword ptr [ebp-8]
 00591A6D    mov         edx,dword ptr [eax]
 00591A6F    call        dword ptr [edx]
 00591A71    mov         ebx,eax
 00591A73    mov         eax,dword ptr [ebp-4]
 00591A76    mov         eax,dword ptr [eax]
 00591A78    mov         dword ptr [eax+esi*4],ebx
 00591A7B    inc         esi
 00591A7C    mov         eax,dword ptr [ebp-8]
 00591A7F    call        TEnumerator<Winapi.Windows.HWND>.MoveNext
 00591A84    test        al,al
>00591A86    jne         00591A6A
 00591A88    xor         eax,eax
 00591A8A    pop         edx
 00591A8B    pop         ecx
 00591A8C    pop         ecx
 00591A8D    mov         dword ptr fs:[eax],edx
 00591A90    push        591AAD
 00591A95    cmp         dword ptr [ebp-8],0
>00591A99    je          00591AA5
 00591A9B    mov         dl,1
 00591A9D    mov         eax,dword ptr [ebp-8]
 00591AA0    mov         ecx,dword ptr [eax]
 00591AA2    call        dword ptr [ecx-4]
 00591AA5    ret
>00591AA6    jmp         @HandleFinally
>00591AAB    jmp         00591A95
 00591AAD    pop         esi
 00591AAE    pop         ebx
 00591AAF    pop         ecx
 00591AB0    pop         ecx
 00591AB1    pop         ebp
 00591AB2    ret
end;*}

//00591AB4
destructor TEnumerable<Winapi.Windows.HWND>.Destroy();
begin
{*
 00591AB4    push        ebx
 00591AB5    push        esi
 00591AB6    call        @BeforeDestruction
 00591ABB    mov         ebx,edx
 00591ABD    mov         esi,eax
 00591ABF    mov         dl,0FC
 00591AC1    and         dl,bl
 00591AC3    mov         eax,esi
 00591AC5    call        TObject.Destroy
 00591ACA    test        bl,bl
>00591ACC    jle         00591AD5
 00591ACE    mov         eax,esi
 00591AD0    call        @ClassDestroy
 00591AD5    pop         esi
 00591AD6    pop         ebx
 00591AD7    ret
*}
end;

//00591AD8
function TEnumerable<Winapi.Windows.HWND>.GetEnumerator:TEnumerator<Winapi.Windows.HWND>;
begin
{*
 00591AD8    mov         edx,dword ptr [eax]
 00591ADA    call        dword ptr [edx]
 00591ADC    ret
*}
end;

//00591AE0
{*procedure TEnumerable<Winapi.Windows.HWND>.ToArray(?:?);
begin
 00591AE0    push        ebp
 00591AE1    mov         ebp,esp
 00591AE3    add         esp,0FFFFFFF4
 00591AE6    push        ebx
 00591AE7    mov         dword ptr [ebp-4],edx
 00591AEA    mov         ebx,eax
 00591AEC    mov         dl,1
 00591AEE    mov         eax,[0059DFA8];TList<Winapi.Windows.HWND>
 00591AF3    call        00595CEC
 00591AF8    mov         dword ptr [ebp-8],eax
 00591AFB    xor         eax,eax
 00591AFD    push        ebp
 00591AFE    push        591B88
 00591B03    push        dword ptr fs:[eax]
 00591B06    mov         dword ptr fs:[eax],esp
 00591B09    mov         eax,ebx
 00591B0B    call        TEnumerable<Winapi.Windows.HWND>.GetEnumerator
 00591B10    mov         dword ptr [ebp-0C],eax
 00591B13    xor         eax,eax
 00591B15    push        ebp
 00591B16    push        591B60
 00591B1B    push        dword ptr fs:[eax]
 00591B1E    mov         dword ptr fs:[eax],esp
>00591B21    jmp         00591B36
 00591B23    mov         eax,dword ptr [ebp-0C]
 00591B26    mov         edx,dword ptr [eax]
 00591B28    call        dword ptr [edx]
 00591B2A    mov         ebx,eax
 00591B2C    mov         edx,ebx
 00591B2E    mov         eax,dword ptr [ebp-8]
 00591B31    call        TList<Winapi.Windows.HWND>.Add
 00591B36    mov         eax,dword ptr [ebp-0C]
 00591B39    call        TEnumerator<Winapi.Windows.HWND>.MoveNext
 00591B3E    test        al,al
>00591B40    jne         00591B23
 00591B42    xor         eax,eax
 00591B44    pop         edx
 00591B45    pop         ecx
 00591B46    pop         ecx
 00591B47    mov         dword ptr fs:[eax],edx
 00591B4A    push        591B67
 00591B4F    cmp         dword ptr [ebp-0C],0
>00591B53    je          00591B5F
 00591B55    mov         dl,1
 00591B57    mov         eax,dword ptr [ebp-0C]
 00591B5A    mov         ecx,dword ptr [eax]
 00591B5C    call        dword ptr [ecx-4]
 00591B5F    ret
>00591B60    jmp         @HandleFinally
>00591B65    jmp         00591B4F
 00591B67    mov         edx,dword ptr [ebp-4]
 00591B6A    mov         eax,dword ptr [ebp-8]
 00591B6D    call        TList<Winapi.Windows.HWND>.ToArray
 00591B72    xor         eax,eax
 00591B74    pop         edx
 00591B75    pop         ecx
 00591B76    pop         ecx
 00591B77    mov         dword ptr fs:[eax],edx
 00591B7A    push        591B8F
 00591B7F    mov         eax,dword ptr [ebp-8]
 00591B82    call        TObject.Free
 00591B87    ret
>00591B88    jmp         @HandleFinally
>00591B8D    jmp         00591B7F
 00591B8F    pop         ebx
 00591B90    mov         esp,ebp
 00591B92    pop         ebp
 00591B93    ret
end;*}

//00591B94
function TEnumerator<Winapi.Windows.HWND>.MoveNext:Boolean;
begin
{*
 00591B94    mov         edx,dword ptr [eax]
 00591B96    call        dword ptr [edx+4]
 00591B99    ret
*}
end;

//00591BA4
procedure sub_00591BA4;
begin
{*
 00591BA4    call        TDictionary<Winapi.Windows.HWND,Vcl.Themes.TSysStyleHook>.TKeyCollection.GetEnumerator
 00591BA9    ret
*}
end;

//00591BAC
constructor sub_00591BAC(ADictionary:TDictionary<Winapi.Windows.HWND,Vcl.Themes.TSysStyleHook>);
begin
{*
 00591BAC    push        ebx
 00591BAD    push        esi
 00591BAE    push        edi
 00591BAF    test        dl,dl
>00591BB1    je          00591BBB
 00591BB3    add         esp,0FFFFFFF0
 00591BB6    call        @ClassCreate
 00591BBB    mov         esi,ecx
 00591BBD    mov         ebx,edx
 00591BBF    mov         edi,eax
 00591BC1    xor         edx,edx
 00591BC3    mov         eax,edi
 00591BC5    call        TObject.Create
 00591BCA    mov         dword ptr [edi+4],esi
 00591BCD    mov         eax,edi
 00591BCF    test        bl,bl
>00591BD1    je          00591BE2
 00591BD3    call        @AfterConstruction
 00591BD8    pop         dword ptr fs:[0]
 00591BDF    add         esp,0C
 00591BE2    mov         eax,edi
 00591BE4    pop         edi
 00591BE5    pop         esi
 00591BE6    pop         ebx
 00591BE7    ret
*}
end;

//00591BE8
procedure TDictionary<Winapi.Windows.HWND,Vcl.Themes.TSysStyleHook>.TKeyCollection.GetEnumerator;
begin
{*
 00591BE8    mov         ecx,dword ptr [eax+4]
 00591BEB    mov         dl,1
 00591BED    mov         eax,[0057C81C];TDictionary<Winapi.Windows.HWND,Vcl.Themes.TSysStyleHook>.TKeyEnumerator
 00591BF2    call        00591C34
 00591BF7    ret
*}
end;

//00591BF8
{*procedure TDictionary<Winapi.Windows.HWND,Vcl.Themes.TSysStyleHook>.TKeyCollection.ToArray(?:?);
begin
 00591BF8    push        ebx
 00591BF9    push        esi
 00591BFA    mov         esi,edx
 00591BFC    mov         ebx,eax
 00591BFE    mov         ecx,esi
 00591C00    mov         eax,dword ptr [ebx+4]
 00591C03    mov         edx,dword ptr [eax+8]
 00591C06    mov         eax,ebx
 00591C08    call        00591A28
 00591C0D    pop         esi
 00591C0E    pop         ebx
 00591C0F    ret
end;*}

//00591C10
{*function sub_00591C10(?:?):?;
begin
 00591C10    mov         edx,dword ptr [eax+8]
 00591C13    lea         edx,[edx+edx*2]
 00591C16    mov         eax,dword ptr [eax+4]
 00591C19    mov         eax,dword ptr [eax+4]
 00591C1C    mov         eax,dword ptr [eax+edx*4+4]
 00591C20    ret
end;*}

//00591C24
procedure sub_00591C24;
begin
{*
 00591C24    call        00591C10
 00591C29    ret
*}
end;

//00591C2C
procedure sub_00591C2C;
begin
{*
 00591C2C    call        TDictionary<Winapi.Windows.HWND,Vcl.Themes.TSysStyleHook>.TKeyEnumerator.MoveNext
 00591C31    ret
*}
end;

//00591C34
constructor sub_00591C34(ADictionary:TDictionary<Winapi.Windows.HWND,Vcl.Themes.TSysStyleHook>);
begin
{*
 00591C34    push        ebx
 00591C35    push        esi
 00591C36    push        edi
 00591C37    test        dl,dl
>00591C39    je          00591C43
 00591C3B    add         esp,0FFFFFFF0
 00591C3E    call        @ClassCreate
 00591C43    mov         esi,ecx
 00591C45    mov         ebx,edx
 00591C47    mov         edi,eax
 00591C49    xor         edx,edx
 00591C4B    mov         eax,edi
 00591C4D    call        TObject.Create
 00591C52    mov         dword ptr [edi+8],0FFFFFFFF
 00591C59    mov         dword ptr [edi+4],esi
 00591C5C    mov         eax,edi
 00591C5E    test        bl,bl
>00591C60    je          00591C71
 00591C62    call        @AfterConstruction
 00591C67    pop         dword ptr fs:[0]
 00591C6E    add         esp,0C
 00591C71    mov         eax,edi
 00591C73    pop         edi
 00591C74    pop         esi
 00591C75    pop         ebx
 00591C76    ret
*}
end;

//00591C78
function TDictionary<Winapi.Windows.HWND,Vcl.Themes.TSysStyleHook>.TKeyEnumerator.MoveNext:Boolean;
begin
{*
 00591C78    push        ebx
 00591C79    push        esi
 00591C7A    mov         esi,eax
>00591C7C    jmp         00591C97
 00591C7E    inc         dword ptr [esi+8]
 00591C81    mov         eax,dword ptr [esi+8]
 00591C84    lea         eax,[eax+eax*2]
 00591C87    mov         edx,dword ptr [esi+4]
 00591C8A    mov         edx,dword ptr [edx+4]
 00591C8D    cmp         dword ptr [edx+eax*4],0FFFFFFFF
>00591C91    je          00591C97
 00591C93    mov         bl,1
>00591C95    jmp         00591CAA
 00591C97    mov         eax,dword ptr [esi+4]
 00591C9A    mov         eax,dword ptr [eax+4]
 00591C9D    call        0040ABA8
 00591CA2    dec         eax
 00591CA3    cmp         eax,dword ptr [esi+8]
>00591CA6    jg          00591C7E
 00591CA8    xor         ebx,ebx
 00591CAA    mov         eax,ebx
 00591CAC    pop         esi
 00591CAD    pop         ebx
 00591CAE    ret
*}
end;

//00591CB0
{*procedure sub_00591CB0(?:TDictionary<Winapi; ?:?; ?:?);
begin
 00591CB0    push        ebp
 00591CB1    mov         ebp,esp
 00591CB3    add         esp,0FFFFFFF8
 00591CB6    push        ebx
 00591CB7    push        esi
 00591CB8    mov         dword ptr [ebp-4],ecx
 00591CBB    mov         esi,edx
 00591CBD    mov         ebx,eax
 00591CBF    push        esi
 00591CC0    mov         eax,dword ptr [ebp-4]
 00591CC3    mov         ecx,1
 00591CC8    mov         edx,dword ptr ds:[57CC48];TArray<Vcl.Themes.TSysStyleHook>
 00591CCE    call        @DynArraySetLength
 00591CD3    add         esp,4
 00591CD6    xor         esi,esi
 00591CD8    mov         eax,ebx
 00591CDA    call        TEnumerable<Vcl.Themes.TSysStyleHook>.GetEnumerator
 00591CDF    mov         dword ptr [ebp-8],eax
 00591CE2    xor         eax,eax
 00591CE4    push        ebp
 00591CE5    push        591D2E
 00591CEA    push        dword ptr fs:[eax]
 00591CED    mov         dword ptr fs:[eax],esp
>00591CF0    jmp         00591D04
 00591CF2    mov         eax,dword ptr [ebp-8]
 00591CF5    mov         edx,dword ptr [eax]
 00591CF7    call        dword ptr [edx]
 00591CF9    mov         ebx,eax
 00591CFB    mov         eax,dword ptr [ebp-4]
 00591CFE    mov         eax,dword ptr [eax]
 00591D00    mov         dword ptr [eax+esi*4],ebx
 00591D03    inc         esi
 00591D04    mov         eax,dword ptr [ebp-8]
 00591D07    call        TEnumerator<Vcl.Themes.TSysStyleHook>.MoveNext
 00591D0C    test        al,al
>00591D0E    jne         00591CF2
 00591D10    xor         eax,eax
 00591D12    pop         edx
 00591D13    pop         ecx
 00591D14    pop         ecx
 00591D15    mov         dword ptr fs:[eax],edx
 00591D18    push        591D35
 00591D1D    cmp         dword ptr [ebp-8],0
>00591D21    je          00591D2D
 00591D23    mov         dl,1
 00591D25    mov         eax,dword ptr [ebp-8]
 00591D28    mov         ecx,dword ptr [eax]
 00591D2A    call        dword ptr [ecx-4]
 00591D2D    ret
>00591D2E    jmp         @HandleFinally
>00591D33    jmp         00591D1D
 00591D35    pop         esi
 00591D36    pop         ebx
 00591D37    pop         ecx
 00591D38    pop         ecx
 00591D39    pop         ebp
 00591D3A    ret
end;*}

//00591D3C
destructor TEnumerable<Vcl.Themes.TSysStyleHook>.Destroy();
begin
{*
 00591D3C    push        ebx
 00591D3D    push        esi
 00591D3E    call        @BeforeDestruction
 00591D43    mov         ebx,edx
 00591D45    mov         esi,eax
 00591D47    mov         dl,0FC
 00591D49    and         dl,bl
 00591D4B    mov         eax,esi
 00591D4D    call        TObject.Destroy
 00591D52    test        bl,bl
>00591D54    jle         00591D5D
 00591D56    mov         eax,esi
 00591D58    call        @ClassDestroy
 00591D5D    pop         esi
 00591D5E    pop         ebx
 00591D5F    ret
*}
end;

//00591D60
function TEnumerable<Vcl.Themes.TSysStyleHook>.GetEnumerator:TEnumerator<Vcl.Themes.TSysStyleHook>;
begin
{*
 00591D60    mov         edx,dword ptr [eax]
 00591D62    call        dword ptr [edx]
 00591D64    ret
*}
end;

//00591D68
{*procedure TEnumerable<Vcl.Themes.TSysStyleHook>.ToArray(?:?);
begin
 00591D68    push        ebp
 00591D69    mov         ebp,esp
 00591D6B    add         esp,0FFFFFFF4
 00591D6E    push        ebx
 00591D6F    mov         dword ptr [ebp-4],edx
 00591D72    mov         ebx,eax
 00591D74    mov         dl,1
 00591D76    mov         eax,[0059EF8C];TList<Vcl.Themes.TSysStyleHook>
 00591D7B    call        00595FEC
 00591D80    mov         dword ptr [ebp-8],eax
 00591D83    xor         eax,eax
 00591D85    push        ebp
 00591D86    push        591E10
 00591D8B    push        dword ptr fs:[eax]
 00591D8E    mov         dword ptr fs:[eax],esp
 00591D91    mov         eax,ebx
 00591D93    call        TEnumerable<Vcl.Themes.TSysStyleHook>.GetEnumerator
 00591D98    mov         dword ptr [ebp-0C],eax
 00591D9B    xor         eax,eax
 00591D9D    push        ebp
 00591D9E    push        591DE8
 00591DA3    push        dword ptr fs:[eax]
 00591DA6    mov         dword ptr fs:[eax],esp
>00591DA9    jmp         00591DBE
 00591DAB    mov         eax,dword ptr [ebp-0C]
 00591DAE    mov         edx,dword ptr [eax]
 00591DB0    call        dword ptr [edx]
 00591DB2    mov         ebx,eax
 00591DB4    mov         edx,ebx
 00591DB6    mov         eax,dword ptr [ebp-8]
 00591DB9    call        TList<Vcl.Themes.TSysStyleHook>.Add
 00591DBE    mov         eax,dword ptr [ebp-0C]
 00591DC1    call        TEnumerator<Vcl.Themes.TSysStyleHook>.MoveNext
 00591DC6    test        al,al
>00591DC8    jne         00591DAB
 00591DCA    xor         eax,eax
 00591DCC    pop         edx
 00591DCD    pop         ecx
 00591DCE    pop         ecx
 00591DCF    mov         dword ptr fs:[eax],edx
 00591DD2    push        591DEF
 00591DD7    cmp         dword ptr [ebp-0C],0
>00591DDB    je          00591DE7
 00591DDD    mov         dl,1
 00591DDF    mov         eax,dword ptr [ebp-0C]
 00591DE2    mov         ecx,dword ptr [eax]
 00591DE4    call        dword ptr [ecx-4]
 00591DE7    ret
>00591DE8    jmp         @HandleFinally
>00591DED    jmp         00591DD7
 00591DEF    mov         edx,dword ptr [ebp-4]
 00591DF2    mov         eax,dword ptr [ebp-8]
 00591DF5    call        TList<Vcl.Themes.TSysStyleHook>.ToArray
 00591DFA    xor         eax,eax
 00591DFC    pop         edx
 00591DFD    pop         ecx
 00591DFE    pop         ecx
 00591DFF    mov         dword ptr fs:[eax],edx
 00591E02    push        591E17
 00591E07    mov         eax,dword ptr [ebp-8]
 00591E0A    call        TObject.Free
 00591E0F    ret
>00591E10    jmp         @HandleFinally
>00591E15    jmp         00591E07
 00591E17    pop         ebx
 00591E18    mov         esp,ebp
 00591E1A    pop         ebp
 00591E1B    ret
end;*}

//00591E1C
function TEnumerator<Vcl.Themes.TSysStyleHook>.MoveNext:Boolean;
begin
{*
 00591E1C    mov         edx,dword ptr [eax]
 00591E1E    call        dword ptr [edx+4]
 00591E21    ret
*}
end;

//00591E2C
procedure sub_00591E2C;
begin
{*
 00591E2C    call        TDictionary<Winapi.Windows.HWND,Vcl.Themes.TSysStyleHook>.TValueCollection.GetEnumerator
 00591E31    ret
*}
end;

//00591E34
constructor sub_00591E34(ADictionary:TDictionary<Winapi.Windows.HWND,Vcl.Themes.TSysStyleHook>);
begin
{*
 00591E34    push        ebx
 00591E35    push        esi
 00591E36    push        edi
 00591E37    test        dl,dl
>00591E39    je          00591E43
 00591E3B    add         esp,0FFFFFFF0
 00591E3E    call        @ClassCreate
 00591E43    mov         esi,ecx
 00591E45    mov         ebx,edx
 00591E47    mov         edi,eax
 00591E49    xor         edx,edx
 00591E4B    mov         eax,edi
 00591E4D    call        TObject.Create
 00591E52    mov         dword ptr [edi+4],esi
 00591E55    mov         eax,edi
 00591E57    test        bl,bl
>00591E59    je          00591E6A
 00591E5B    call        @AfterConstruction
 00591E60    pop         dword ptr fs:[0]
 00591E67    add         esp,0C
 00591E6A    mov         eax,edi
 00591E6C    pop         edi
 00591E6D    pop         esi
 00591E6E    pop         ebx
 00591E6F    ret
*}
end;

//00591E70
function TDictionary<Winapi.Windows.HWND,Vcl.Themes.TSysStyleHook>.TValueCollection.GetEnumerator:TDictionary<Winapi.Windows.HWND,Vcl.Themes.TSysStyleHook>.TValueEnumerator;
begin
{*
 00591E70    mov         ecx,dword ptr [eax+4]
 00591E73    mov         dl,1
 00591E75    mov         eax,[0057CF54];TDictionary<Winapi.Windows.HWND,Vcl.Themes.TSysStyleHook>.TValueEnumerato...
 00591E7A    call        00591EBC
 00591E7F    ret
*}
end;

//00591E80
{*procedure TDictionary<Winapi.Windows.HWND,Vcl.Themes.TSysStyleHook>.TValueCollection.ToArray(?:?);
begin
 00591E80    push        ebx
 00591E81    push        esi
 00591E82    mov         esi,edx
 00591E84    mov         ebx,eax
 00591E86    mov         ecx,esi
 00591E88    mov         eax,dword ptr [ebx+4]
 00591E8B    mov         edx,dword ptr [eax+8]
 00591E8E    mov         eax,ebx
 00591E90    call        00591CB0
 00591E95    pop         esi
 00591E96    pop         ebx
 00591E97    ret
end;*}

//00591E98
{*function sub_00591E98(?:TDictionary<Winapi.Windows.HWND,Vcl.Themes.TSysStyleHook>.TValueEnumerator):?;
begin
 00591E98    mov         edx,dword ptr [eax+8]
 00591E9B    lea         edx,[edx+edx*2]
 00591E9E    mov         eax,dword ptr [eax+4]
 00591EA1    mov         eax,dword ptr [eax+4]
 00591EA4    mov         eax,dword ptr [eax+edx*4+8]
 00591EA8    ret
end;*}

//00591EAC
procedure sub_00591EAC;
begin
{*
 00591EAC    call        00591E98
 00591EB1    ret
*}
end;

//00591EB4
procedure sub_00591EB4;
begin
{*
 00591EB4    call        TDictionary<Winapi.Windows.HWND,Vcl.Themes.TSysStyleHook>.TValueEnumerator.MoveNext
 00591EB9    ret
*}
end;

//00591EBC
constructor sub_00591EBC(ADictionary:TDictionary<Winapi.Windows.HWND,Vcl.Themes.TSysStyleHook>);
begin
{*
 00591EBC    push        ebx
 00591EBD    push        esi
 00591EBE    push        edi
 00591EBF    test        dl,dl
>00591EC1    je          00591ECB
 00591EC3    add         esp,0FFFFFFF0
 00591EC6    call        @ClassCreate
 00591ECB    mov         esi,ecx
 00591ECD    mov         ebx,edx
 00591ECF    mov         edi,eax
 00591ED1    xor         edx,edx
 00591ED3    mov         eax,edi
 00591ED5    call        TObject.Create
 00591EDA    mov         dword ptr [edi+8],0FFFFFFFF
 00591EE1    mov         dword ptr [edi+4],esi
 00591EE4    mov         eax,edi
 00591EE6    test        bl,bl
>00591EE8    je          00591EF9
 00591EEA    call        @AfterConstruction
 00591EEF    pop         dword ptr fs:[0]
 00591EF6    add         esp,0C
 00591EF9    mov         eax,edi
 00591EFB    pop         edi
 00591EFC    pop         esi
 00591EFD    pop         ebx
 00591EFE    ret
*}
end;

//00591F00
function TDictionary<Winapi.Windows.HWND,Vcl.Themes.TSysStyleHook>.TValueEnumerator.MoveNext:Boolean;
begin
{*
 00591F00    push        ebx
 00591F01    push        esi
 00591F02    mov         esi,eax
>00591F04    jmp         00591F1F
 00591F06    inc         dword ptr [esi+8]
 00591F09    mov         eax,dword ptr [esi+8]
 00591F0C    lea         eax,[eax+eax*2]
 00591F0F    mov         edx,dword ptr [esi+4]
 00591F12    mov         edx,dword ptr [edx+4]
 00591F15    cmp         dword ptr [edx+eax*4],0FFFFFFFF
>00591F19    je          00591F1F
 00591F1B    mov         bl,1
>00591F1D    jmp         00591F32
 00591F1F    mov         eax,dword ptr [esi+4]
 00591F22    mov         eax,dword ptr [eax+4]
 00591F25    call        0040ABA8
 00591F2A    dec         eax
 00591F2B    cmp         eax,dword ptr [esi+8]
>00591F2E    jg          00591F06
 00591F30    xor         ebx,ebx
 00591F32    mov         eax,ebx
 00591F34    pop         esi
 00591F35    pop         ebx
 00591F36    ret
*}
end;

//00591F38
{*procedure sub_00591F38(?:TDictionary<Winapi.Windows.HWND,Vcl.Themes.TSysStyleHook>.TPairEnumerator; ?:?);
begin
 00591F38    push        ebx
 00591F39    mov         ecx,dword ptr [eax+8]
 00591F3C    lea         ecx,[ecx+ecx*2]
 00591F3F    mov         ebx,dword ptr [eax+4]
 00591F42    mov         ebx,dword ptr [ebx+4]
 00591F45    mov         ecx,dword ptr [ebx+ecx*4+4]
 00591F49    mov         dword ptr [edx],ecx
 00591F4B    mov         ecx,dword ptr [eax+8]
 00591F4E    lea         ecx,[ecx+ecx*2]
 00591F51    mov         eax,dword ptr [eax+4]
 00591F54    mov         eax,dword ptr [eax+4]
 00591F57    mov         eax,dword ptr [eax+ecx*4+8]
 00591F5B    mov         dword ptr [edx+4],eax
 00591F5E    pop         ebx
 00591F5F    ret
end;*}

//00591F60
{*procedure sub_00591F60(?:?);
begin
 00591F60    push        ebx
 00591F61    push        esi
 00591F62    mov         esi,edx
 00591F64    mov         ebx,eax
 00591F66    mov         edx,esi
 00591F68    mov         eax,ebx
 00591F6A    call        00591F38
 00591F6F    pop         esi
 00591F70    pop         ebx
 00591F71    ret
end;*}

//00591F74
procedure sub_00591F74;
begin
{*
 00591F74    call        TDictionary<Winapi.Windows.HWND,Vcl.Themes.TSysStyleHook>.TPairEnumerator.MoveNext
 00591F79    ret
*}
end;

//00591F7C
constructor sub_00591F7C(ADictionary:TDictionary<Winapi.Windows.HWND,Vcl.Themes.TSysStyleHook>);
begin
{*
 00591F7C    push        ebx
 00591F7D    push        esi
 00591F7E    push        edi
 00591F7F    test        dl,dl
>00591F81    je          00591F8B
 00591F83    add         esp,0FFFFFFF0
 00591F86    call        @ClassCreate
 00591F8B    mov         esi,ecx
 00591F8D    mov         ebx,edx
 00591F8F    mov         edi,eax
 00591F91    xor         edx,edx
 00591F93    mov         eax,edi
 00591F95    call        TObject.Create
 00591F9A    mov         dword ptr [edi+8],0FFFFFFFF
 00591FA1    mov         dword ptr [edi+4],esi
 00591FA4    mov         eax,edi
 00591FA6    test        bl,bl
>00591FA8    je          00591FB9
 00591FAA    call        @AfterConstruction
 00591FAF    pop         dword ptr fs:[0]
 00591FB6    add         esp,0C
 00591FB9    mov         eax,edi
 00591FBB    pop         edi
 00591FBC    pop         esi
 00591FBD    pop         ebx
 00591FBE    ret
*}
end;

//00591FC0
function TDictionary<Winapi.Windows.HWND,Vcl.Themes.TSysStyleHook>.TPairEnumerator.MoveNext:Boolean;
begin
{*
 00591FC0    push        ebx
 00591FC1    push        esi
 00591FC2    mov         esi,eax
>00591FC4    jmp         00591FDF
 00591FC6    inc         dword ptr [esi+8]
 00591FC9    mov         eax,dword ptr [esi+8]
 00591FCC    lea         eax,[eax+eax*2]
 00591FCF    mov         edx,dword ptr [esi+4]
 00591FD2    mov         edx,dword ptr [edx+4]
 00591FD5    cmp         dword ptr [edx+eax*4],0FFFFFFFF
>00591FD9    je          00591FDF
 00591FDB    mov         bl,1
>00591FDD    jmp         00591FF2
 00591FDF    mov         eax,dword ptr [esi+4]
 00591FE2    mov         eax,dword ptr [eax+4]
 00591FE5    call        0040ABA8
 00591FEA    dec         eax
 00591FEB    cmp         eax,dword ptr [esi+8]
>00591FEE    jg          00591FC6
 00591FF0    xor         ebx,ebx
 00591FF2    mov         eax,ebx
 00591FF4    pop         esi
 00591FF5    pop         ebx
 00591FF6    ret
*}
end;

//00591FF8
{*procedure sub_00591FF8(?:?; ?:?);
begin
 00591FF8    push        ebx
 00591FF9    push        esi
 00591FFA    push        ecx
 00591FFB    mov         ebx,ecx
 00591FFD    mov         dword ptr [esp],edx
 00592000    mov         esi,eax
 00592002    mov         ecx,ebx
 00592004    mov         edx,dword ptr [esp]
 00592007    mov         eax,esi
 00592009    call        00591710
 0059200E    cmp         bl,1
>00592011    jne         00592022
 00592013    test        byte ptr [esi+30],1
>00592017    je          00592022
 00592019    mov         eax,esp
 0059201B    mov         eax,dword ptr [eax]
 0059201D    call        TObject.Free
 00592022    pop         edx
 00592023    pop         esi
 00592024    pop         ebx
 00592025    ret
end;*}

//00592028
{*procedure sub_00592028(?:?; ?:?);
begin
 00592028    push        ebx
 00592029    push        esi
 0059202A    push        ecx
 0059202B    mov         ebx,ecx
 0059202D    mov         dword ptr [esp],edx
 00592030    mov         esi,eax
 00592032    mov         ecx,ebx
 00592034    mov         edx,dword ptr [esp]
 00592037    mov         eax,esi
 00592039    call        00591728
 0059203E    cmp         bl,1
>00592041    jne         00592052
 00592043    test        byte ptr [esi+30],2
>00592047    je          00592052
 00592049    mov         eax,esp
 0059204B    mov         eax,dword ptr [eax]
 0059204D    call        TObject.Free
 00592052    pop         edx
 00592053    pop         esi
 00592054    pop         ebx
 00592055    ret
end;*}

//00592058
{*procedure sub_00592058(?:TDictionary<Winapi; ?:?; ?:?);
begin
 00592058    push        ebp
 00592059    mov         ebp,esp
 0059205B    add         esp,0FFFFFFE8
 0059205E    push        ebx
 0059205F    push        esi
 00592060    push        edi
 00592061    mov         dword ptr [ebp-4],ecx
 00592064    mov         ebx,edx
 00592066    mov         esi,eax
 00592068    lea         edi,[ebp-18]
 0059206B    push        ebx
 0059206C    mov         eax,dword ptr [ebp-4]
 0059206F    mov         ecx,1
 00592074    mov         edx,dword ptr ds:[57E02C];TArray<Vcl.Themes.TPair<Winapi.Windows.HWND,Vcl.Themes.TChildC...
 0059207A    call        @DynArraySetLength
 0059207F    add         esp,4
 00592082    xor         ebx,ebx
 00592084    mov         eax,esi
 00592086    call        TEnumerable<Vcl.Themes.TPair<Winapi.Windows.HWND,Vcl.Themes.TChildControlInfo>>.GetEnumerator
 0059208B    mov         dword ptr [ebp-8],eax
 0059208E    xor         eax,eax
 00592090    push        ebp
 00592091    push        5920E6
 00592096    push        dword ptr fs:[eax]
 00592099    mov         dword ptr fs:[eax],esp
>0059209C    jmp         005920BC
 0059209E    mov         edx,edi
 005920A0    mov         eax,dword ptr [ebp-8]
 005920A3    mov         ecx,dword ptr [eax]
 005920A5    call        dword ptr [ecx]
 005920A7    mov         eax,ebx
 005920A9    add         eax,eax
 005920AB    mov         edx,dword ptr [ebp-4]
 005920AE    mov         edx,dword ptr [edx]
 005920B0    push        edi
 005920B1    mov         esi,edi
 005920B3    lea         edi,[edx+eax*8]
 005920B6    movs        dword ptr [edi],dword ptr [esi]
 005920B7    movs        dword ptr [edi],dword ptr [esi]
 005920B8    movs        dword ptr [edi],dword ptr [esi]
 005920B9    movs        dword ptr [edi],dword ptr [esi]
 005920BA    pop         edi
 005920BB    inc         ebx
 005920BC    mov         eax,dword ptr [ebp-8]
 005920BF    call        TEnumerator<Vcl.Themes.TPair<Winapi.Windows.HWND,Vcl.Themes.TChildControlInfo>>.MoveNext
 005920C4    test        al,al
>005920C6    jne         0059209E
 005920C8    xor         eax,eax
 005920CA    pop         edx
 005920CB    pop         ecx
 005920CC    pop         ecx
 005920CD    mov         dword ptr fs:[eax],edx
 005920D0    push        5920ED
 005920D5    cmp         dword ptr [ebp-8],0
>005920D9    je          005920E5
 005920DB    mov         dl,1
 005920DD    mov         eax,dword ptr [ebp-8]
 005920E0    mov         ecx,dword ptr [eax]
 005920E2    call        dword ptr [ecx-4]
 005920E5    ret
>005920E6    jmp         @HandleFinally
>005920EB    jmp         005920D5
 005920ED    pop         edi
 005920EE    pop         esi
 005920EF    pop         ebx
 005920F0    mov         esp,ebp
 005920F2    pop         ebp
 005920F3    ret
end;*}

//005920F4
destructor TEnumerable<Vcl.Themes.TPair<Winapi.Windows.HWND,Vcl.Themes.TChildControlInfo>>.Destroy();
begin
{*
 005920F4    push        ebx
 005920F5    push        esi
 005920F6    call        @BeforeDestruction
 005920FB    mov         ebx,edx
 005920FD    mov         esi,eax
 005920FF    mov         dl,0FC
 00592101    and         dl,bl
 00592103    mov         eax,esi
 00592105    call        TObject.Destroy
 0059210A    test        bl,bl
>0059210C    jle         00592115
 0059210E    mov         eax,esi
 00592110    call        @ClassDestroy
 00592115    pop         esi
 00592116    pop         ebx
 00592117    ret
*}
end;

//00592118
function TEnumerable<Vcl.Themes.TPair<Winapi.Windows.HWND,Vcl.Themes.TChildControlInfo>>.GetEnumerator:TEnumerator<Vcl.Themes.TPair<Winapi.Windows.HWND,Vcl.Themes.TChildControlInfo>>;
begin
{*
 00592118    mov         edx,dword ptr [eax]
 0059211A    call        dword ptr [edx]
 0059211C    ret
*}
end;

//00592120
{*procedure TEnumerable<Vcl.Themes.TPair<Winapi.Windows.HWND,Vcl.Themes.TChildControlInfo>>.ToArray(?:?);
begin
 00592120    push        ebp
 00592121    mov         ebp,esp
 00592123    add         esp,0FFFFFFE4
 00592126    push        ebx
 00592127    push        esi
 00592128    mov         dword ptr [ebp-4],edx
 0059212B    mov         ebx,eax
 0059212D    lea         esi,[ebp-1C]
 00592130    mov         dl,1
 00592132    mov         eax,[005A018C];TList<Vcl.Themes.TPair<Winapi.Windows.HWND,Vcl.Themes.TChildControlInfo>>
 00592137    call        005962F0
 0059213C    mov         dword ptr [ebp-8],eax
 0059213F    xor         eax,eax
 00592141    push        ebp
 00592142    push        5921CC
 00592147    push        dword ptr fs:[eax]
 0059214A    mov         dword ptr fs:[eax],esp
 0059214D    mov         eax,ebx
 0059214F    call        TEnumerable<Vcl.Themes.TPair<Winapi.Windows.HWND,Vcl.Themes.TChildControlInfo>>.GetEnumerator
 00592154    mov         dword ptr [ebp-0C],eax
 00592157    xor         eax,eax
 00592159    push        ebp
 0059215A    push        5921A4
 0059215F    push        dword ptr fs:[eax]
 00592162    mov         dword ptr fs:[eax],esp
>00592165    jmp         0059217A
 00592167    mov         edx,esi
 00592169    mov         eax,dword ptr [ebp-0C]
 0059216C    mov         ecx,dword ptr [eax]
 0059216E    call        dword ptr [ecx]
 00592170    mov         edx,esi
 00592172    mov         eax,dword ptr [ebp-8]
 00592175    call        TList<Vcl.Themes.TPair<Winapi.Windows.HWND,Vcl.Themes.TChildControlInfo>>.Add
 0059217A    mov         eax,dword ptr [ebp-0C]
 0059217D    call        TEnumerator<Vcl.Themes.TPair<Winapi.Windows.HWND,Vcl.Themes.TChildControlInfo>>.MoveNext
 00592182    test        al,al
>00592184    jne         00592167
 00592186    xor         eax,eax
 00592188    pop         edx
 00592189    pop         ecx
 0059218A    pop         ecx
 0059218B    mov         dword ptr fs:[eax],edx
 0059218E    push        5921AB
 00592193    cmp         dword ptr [ebp-0C],0
>00592197    je          005921A3
 00592199    mov         dl,1
 0059219B    mov         eax,dword ptr [ebp-0C]
 0059219E    mov         ecx,dword ptr [eax]
 005921A0    call        dword ptr [ecx-4]
 005921A3    ret
>005921A4    jmp         @HandleFinally
>005921A9    jmp         00592193
 005921AB    mov         edx,dword ptr [ebp-4]
 005921AE    mov         eax,dword ptr [ebp-8]
 005921B1    call        TList<Vcl.Themes.TPair<Winapi.Windows.HWND,Vcl.Themes.TChildControlInfo>>.ToArray
 005921B6    xor         eax,eax
 005921B8    pop         edx
 005921B9    pop         ecx
 005921BA    pop         ecx
 005921BB    mov         dword ptr fs:[eax],edx
 005921BE    push        5921D3
 005921C3    mov         eax,dword ptr [ebp-8]
 005921C6    call        TObject.Free
 005921CB    ret
>005921CC    jmp         @HandleFinally
>005921D1    jmp         005921C3
 005921D3    pop         esi
 005921D4    pop         ebx
 005921D5    mov         esp,ebp
 005921D7    pop         ebp
 005921D8    ret
end;*}

//005921DC
function TEnumerator<Vcl.Themes.TPair<Winapi.Windows.HWND,Vcl.Themes.TChildControlInfo>>.MoveNext:Boolean;
begin
{*
 005921DC    mov         edx,dword ptr [eax]
 005921DE    call        dword ptr [edx+4]
 005921E1    ret
*}
end;

//005921E4
procedure sub_005921E4(?:TDictionary<Winapi.Windows.HWND,Vcl.Themes.TChildControlInfo>; ?:Integer);
begin
{*
 005921E4    cmp         edx,dword ptr [eax+8]
>005921E7    jge         00592200
 005921E9    mov         ecx,dword ptr ds:[7C4C2C];^SResString172:TResStringRec
 005921EF    mov         dl,1
 005921F1    mov         eax,[00417CF0];EArgumentOutOfRangeException
 005921F6    call        Exception.CreateRes;EArgumentOutOfRangeException.Create
 005921FB    call        @RaiseExcept
 00592200    test        edx,edx
>00592202    jne         0059220C
 00592204    xor         edx,edx
 00592206    call        00592224
 0059220B    ret
 0059220C    mov         ecx,4
 00592211    cmp         edx,ecx
>00592213    jle         0059221B
 00592215    add         ecx,ecx
 00592217    cmp         edx,ecx
>00592219    jg          00592215
 0059221B    mov         edx,ecx
 0059221D    call        00592224
 00592222    ret
*}
end;

//00592224
{*procedure sub_00592224(?:?; ?:?);
begin
 00592224    push        ebp
 00592225    mov         ebp,esp
 00592227    add         esp,0FFFFFFF0
 0059222A    push        ebx
 0059222B    push        esi
 0059222C    push        edi
 0059222D    xor         ecx,ecx
 0059222F    mov         dword ptr [ebp-4],ecx
 00592232    mov         dword ptr [ebp-8],ecx
 00592235    mov         edi,edx
 00592237    mov         dword ptr [ebp-0C],eax
 0059223A    xor         eax,eax
 0059223C    push        ebp
 0059223D    push        592347
 00592242    push        dword ptr fs:[eax]
 00592245    mov         dword ptr fs:[eax],esp
 00592248    mov         eax,dword ptr [ebp-0C]
 0059224B    mov         eax,dword ptr [eax+4]
 0059224E    mov         dword ptr [ebp-10],eax
 00592251    mov         eax,dword ptr [ebp-10]
 00592254    test        eax,eax
>00592256    je          0059225D
 00592258    sub         eax,4
 0059225B    mov         eax,dword ptr [eax]
 0059225D    cmp         eax,edi
>0059225F    je          00592326
 00592265    test        edi,edi
>00592267    jge         0059226E
 00592269    call        00423F00
 0059226E    lea         eax,[ebp-4]
 00592271    mov         edx,dword ptr [ebp-0C]
 00592274    mov         edx,dword ptr [edx+4]
 00592277    mov         ecx,dword ptr ds:[57E498];TDictionary<Winapi.Windows.HWND,Vcl.Themes.TChildControlInfo>....
 0059227D    call        @DynArrayAsg
 00592282    push        edi
 00592283    lea         eax,[ebp-8]
 00592286    mov         ecx,1
 0059228B    mov         edx,dword ptr ds:[57E498];TDictionary<Winapi.Windows.HWND,Vcl.Themes.TChildControlInfo>....
 00592291    call        @DynArraySetLength
 00592296    add         esp,4
 00592299    mov         eax,dword ptr [ebp-8]
 0059229C    test        eax,eax
>0059229E    je          005922A5
 005922A0    sub         eax,4
 005922A3    mov         eax,dword ptr [eax]
 005922A5    mov         esi,eax
 005922A7    dec         esi
 005922A8    test        esi,esi
>005922AA    jl          005922C0
 005922AC    inc         esi
 005922AD    xor         ebx,ebx
 005922AF    lea         eax,[ebx+ebx*4]
 005922B2    mov         edx,dword ptr [ebp-8]
 005922B5    mov         dword ptr [edx+eax*4],0FFFFFFFF
 005922BC    inc         ebx
 005922BD    dec         esi
>005922BE    jne         005922AF
 005922C0    mov         eax,dword ptr [ebp-0C]
 005922C3    add         eax,4
 005922C6    mov         edx,dword ptr [ebp-8]
 005922C9    mov         ecx,dword ptr ds:[57E498];TDictionary<Winapi.Windows.HWND,Vcl.Themes.TChildControlInfo>....
 005922CF    call        @DynArrayAsg
 005922D4    mov         eax,edi
 005922D6    shr         eax,1
 005922D8    shr         edi,2
 005922DB    add         eax,edi
 005922DD    mov         edx,dword ptr [ebp-0C]
 005922E0    mov         dword ptr [edx+10],eax
 005922E3    mov         eax,dword ptr [ebp-4]
 005922E6    test        eax,eax
>005922E8    je          005922EF
 005922EA    sub         eax,4
 005922ED    mov         eax,dword ptr [eax]
 005922EF    mov         esi,eax
 005922F1    dec         esi
 005922F2    test        esi,esi
>005922F4    jl          00592326
 005922F6    inc         esi
 005922F7    xor         ebx,ebx
 005922F9    lea         eax,[ebx+ebx*4]
 005922FC    mov         edx,dword ptr [ebp-4]
 005922FF    mov         edi,dword ptr [edx+eax*4]
 00592302    cmp         edi,0FFFFFFFF
>00592305    je          00592322
 00592307    mov         edx,dword ptr [ebp-4]
 0059230A    lea         edx,[edx+eax*4+8]
 0059230E    push        edx
 0059230F    mov         edx,dword ptr [ebp-4]
 00592312    mov         edx,dword ptr [edx+eax*4+4]
 00592316    push        edx
 00592317    mov         edx,edi
 00592319    mov         eax,dword ptr [ebp-0C]
 0059231C    pop         ecx
 0059231D    call        0059247C
 00592322    inc         ebx
 00592323    dec         esi
>00592324    jne         005922F9
 00592326    xor         eax,eax
 00592328    pop         edx
 00592329    pop         ecx
 0059232A    pop         ecx
 0059232B    mov         dword ptr fs:[eax],edx
 0059232E    push        59234E
 00592333    lea         eax,[ebp-8]
 00592336    mov         edx,dword ptr ds:[57E498];TDictionary<Winapi.Windows.HWND,Vcl.Themes.TChildControlInfo>....
 0059233C    mov         ecx,2
 00592341    call        @FinalizeArray
 00592346    ret
>00592347    jmp         @HandleFinally
>0059234C    jmp         00592333
 0059234E    pop         edi
 0059234F    pop         esi
 00592350    pop         ebx
 00592351    mov         esp,ebp
 00592353    pop         ebp
 00592354    ret
end;*}

//00592358
{*function sub_00592358(?:TDictionary<Winapi; ?:HWND; ?:?):?;
begin
 00592358    push        ebx
 00592359    push        esi
 0059235A    push        edi
 0059235B    add         esp,0FFFFFFE8
 0059235E    mov         dword ptr [esp+4],ecx
 00592362    mov         dword ptr [esp],edx
 00592365    mov         esi,eax
 00592367    mov         eax,dword ptr [esi+4]
 0059236A    mov         dword ptr [esp+0C],eax
 0059236E    mov         eax,dword ptr [esp+0C]
 00592372    test        eax,eax
>00592374    je          0059237B
 00592376    sub         eax,4
 00592379    mov         eax,dword ptr [eax]
 0059237B    test        eax,eax
>0059237D    jne         00592386
 0059237F    mov         ebx,80000000
>00592384    jmp         005923F9
 00592386    mov         eax,dword ptr [esi+4]
 00592389    mov         dword ptr [esp+10],eax
 0059238D    mov         eax,dword ptr [esp+10]
 00592391    test        eax,eax
>00592393    je          0059239A
 00592395    sub         eax,4
 00592398    mov         eax,dword ptr [eax]
 0059239A    dec         eax
 0059239B    and         eax,dword ptr [esp+4]
 0059239F    mov         ebx,eax
 005923A1    lea         eax,[ebx+ebx*4]
 005923A4    mov         edx,dword ptr [esi+4]
 005923A7    mov         eax,dword ptr [edx+eax*4]
 005923AA    mov         dword ptr [esp+8],eax
 005923AE    cmp         dword ptr [esp+8],0FFFFFFFF
>005923B3    jne         005923B9
 005923B5    not         ebx
>005923B7    jmp         005923F9
 005923B9    mov         eax,dword ptr [esp+8]
 005923BD    cmp         eax,dword ptr [esp+4]
>005923C1    jne         005923DC
 005923C3    lea         eax,[ebx+ebx*4]
 005923C6    mov         edx,dword ptr [esi+4]
 005923C9    mov         edx,dword ptr [edx+eax*4+4]
 005923CD    mov         ecx,dword ptr [esp]
 005923D0    mov         eax,dword ptr [esi+0C]
 005923D3    mov         edi,dword ptr [eax]
 005923D5    call        dword ptr [edi+0C]
 005923D8    test        al,al
>005923DA    jne         005923F9
 005923DC    inc         ebx
 005923DD    mov         eax,dword ptr [esi+4]
 005923E0    mov         dword ptr [esp+14],eax
 005923E4    mov         edi,dword ptr [esp+14]
 005923E8    test        edi,edi
>005923EA    je          005923F1
 005923EC    sub         edi,4
 005923EF    mov         edi,dword ptr [edi]
 005923F1    cmp         edi,ebx
>005923F3    jg          005923A1
 005923F5    xor         ebx,ebx
>005923F7    jmp         005923A1
 005923F9    mov         eax,ebx
 005923FB    add         esp,18
 005923FE    pop         edi
 005923FF    pop         esi
 00592400    pop         ebx
 00592401    ret
end;*}

//00592404
{*function sub_00592404(?:TDictionary<Winapi; ?:HWND):?;
begin
 00592404    push        ebx
 00592405    push        esi
 00592406    mov         esi,edx
 00592408    mov         ebx,eax
 0059240A    mov         edx,esi
 0059240C    mov         eax,dword ptr [ebx+0C]
 0059240F    mov         ecx,dword ptr [eax]
 00592411    call        dword ptr [ecx+10]
 00592414    and         eax,7FFFFFFF
 00592419    inc         eax
 0059241A    and         eax,7FFFFFFF
 0059241F    pop         esi
 00592420    pop         ebx
 00592421    ret
end;*}

//00592424
{*procedure TDictionary<Winapi.Windows.HWND,Vcl.Themes.TChildControlInfo>.GetItem(Key:HWND; ?:?);
begin
 00592424    push        ebx
 00592425    push        esi
 00592426    push        edi
 00592427    mov         edi,ecx
 00592429    mov         esi,edx
 0059242B    mov         ebx,eax
 0059242D    mov         edx,esi
 0059242F    mov         eax,ebx
 00592431    call        00592404
 00592436    mov         ecx,eax
 00592438    mov         edx,esi
 0059243A    mov         eax,ebx
 0059243C    call        00592358
 00592441    test        eax,eax
>00592443    jge         0059245C
 00592445    mov         ecx,dword ptr ds:[7C44C4];^SResString173:TResStringRec
 0059244B    mov         dl,1
 0059244D    mov         eax,[004180BC];EListError
 00592452    call        Exception.CreateRes;EListError.Create
 00592457    call        @RaiseExcept
 0059245C    lea         eax,[eax+eax*4]
 0059245F    mov         edx,dword ptr [ebx+4]
 00592462    mov         ecx,dword ptr [edx+eax*4+8]
 00592466    mov         dword ptr [edi],ecx
 00592468    mov         ecx,dword ptr [edx+eax*4+0C]
 0059246C    mov         dword ptr [edi+4],ecx
 0059246F    mov         ecx,dword ptr [edx+eax*4+10]
 00592473    mov         dword ptr [edi+8],ecx
 00592476    pop         edi
 00592477    pop         esi
 00592478    pop         ebx
 00592479    ret
end;*}

//0059247C
{*procedure sub_0059247C(?:?; ?:?; ?:?; ?:?);
begin
 0059247C    push        ebp
 0059247D    mov         ebp,esp
 0059247F    add         esp,0FFFFFFF8
 00592482    push        ebx
 00592483    push        esi
 00592484    mov         dword ptr [ebp-8],ecx
 00592487    mov         dword ptr [ebp-4],edx
 0059248A    mov         ebx,eax
 0059248C    mov         ecx,dword ptr [ebp-4]
 0059248F    mov         edx,dword ptr [ebp-8]
 00592492    mov         eax,ebx
 00592494    call        00592358
 00592499    not         eax
 0059249B    lea         edx,[eax+eax*4]
 0059249E    mov         ecx,dword ptr [ebx+4]
 005924A1    mov         esi,dword ptr [ebp-4]
 005924A4    mov         dword ptr [ecx+edx*4],esi
 005924A7    mov         ecx,dword ptr [ebx+4]
 005924AA    mov         esi,dword ptr [ebp-8]
 005924AD    mov         dword ptr [ecx+edx*4+4],esi
 005924B1    mov         eax,dword ptr [ebx+4]
 005924B4    mov         ecx,dword ptr [ebp+8]
 005924B7    mov         ebx,dword ptr [ecx]
 005924B9    mov         dword ptr [eax+edx*4+8],ebx
 005924BD    mov         ebx,dword ptr [ecx+4]
 005924C0    mov         dword ptr [eax+edx*4+0C],ebx
 005924C4    mov         ebx,dword ptr [ecx+8]
 005924C7    mov         dword ptr [eax+edx*4+10],ebx
 005924CB    pop         esi
 005924CC    pop         ebx
 005924CD    pop         ecx
 005924CE    pop         ecx
 005924CF    pop         ebp
 005924D0    ret         4
end;*}

//005924D4
procedure sub_005924D4;
begin
{*
 005924D4    call        TDictionary<Winapi.Windows.HWND,Vcl.Themes.TChildControlInfo>.GetEnumerator
 005924D9    ret
*}
end;

//005924DC
{*procedure sub_005924DC(?:?);
begin
 005924DC    push        ebx
 005924DD    cmp         word ptr [eax+1A],0
>005924E2    je          005924F1
 005924E4    push        ecx
 005924E5    mov         ebx,eax
 005924E7    mov         ecx,edx
 005924E9    mov         edx,eax
 005924EB    mov         eax,dword ptr [ebx+1C]
 005924EE    call        dword ptr [ebx+18]
 005924F1    pop         ebx
 005924F2    ret
end;*}

//005924F4
{*procedure sub_005924F4(?:?);
begin
 005924F4    push        esi
 005924F5    mov         esi,eax
 005924F7    cmp         word ptr [esi+22],0
>005924FC    je          00592509
 005924FE    push        ecx
 005924FF    mov         ecx,edx
 00592501    mov         edx,esi
 00592503    mov         eax,dword ptr [esi+24]
 00592506    call        dword ptr [esi+20]
 00592509    pop         esi
 0059250A    ret
end;*}

//0059250C
constructor sub_0059250C(ACapacity:Integer);
begin
{*
 0059250C    push        ebx
 0059250D    push        esi
 0059250E    test        dl,dl
>00592510    je          0059251A
 00592512    add         esp,0FFFFFFF0
 00592515    call        @ClassCreate
 0059251A    mov         ebx,edx
 0059251C    mov         esi,eax
 0059251E    push        0
 00592520    xor         edx,edx
 00592522    mov         eax,esi
 00592524    call        00592544
 00592529    mov         eax,esi
 0059252B    test        bl,bl
>0059252D    je          0059253E
 0059252F    call        @AfterConstruction
 00592534    pop         dword ptr fs:[0]
 0059253B    add         esp,0C
 0059253E    mov         eax,esi
 00592540    pop         esi
 00592541    pop         ebx
 00592542    ret
*}
end;

//00592544
constructor sub_00592544(ACapacity:Integer; AComparer:IEqualityComparer<Winapi.Windows.HWND>);
begin
{*
 00592544    push        ebp
 00592545    mov         ebp,esp
 00592547    push        0
 00592549    push        ebx
 0059254A    push        esi
 0059254B    push        edi
 0059254C    test        dl,dl
>0059254E    je          00592558
 00592550    add         esp,0FFFFFFF0
 00592553    call        @ClassCreate
 00592558    mov         esi,ecx
 0059255A    mov         ebx,edx
 0059255C    mov         edi,eax
 0059255E    xor         eax,eax
 00592560    push        ebp
 00592561    push        5925D3
 00592566    push        dword ptr fs:[eax]
 00592569    mov         dword ptr fs:[eax],esp
 0059256C    xor         edx,edx
 0059256E    mov         eax,edi
 00592570    call        TObject.Create
 00592575    test        esi,esi
>00592577    jge         00592590
 00592579    mov         ecx,dword ptr ds:[7C4C2C];^SResString172:TResStringRec
 0059257F    mov         dl,1
 00592581    mov         eax,[00417CF0];EArgumentOutOfRangeException
 00592586    call        Exception.CreateRes;EArgumentOutOfRangeException.Create
 0059258B    call        @RaiseExcept
 00592590    lea         eax,[edi+0C]
 00592593    mov         edx,dword ptr [ebp+8]
 00592596    call        @IntfCopy
 0059259B    cmp         dword ptr [edi+0C],0
>0059259F    jne         005925B4
 005925A1    lea         eax,[ebp-4]
 005925A4    call        00595C3C
 005925A9    mov         edx,dword ptr [ebp-4]
 005925AC    lea         eax,[edi+0C]
 005925AF    call        @IntfCopy
 005925B4    mov         edx,esi
 005925B6    mov         eax,edi
 005925B8    call        005921E4
 005925BD    xor         eax,eax
 005925BF    pop         edx
 005925C0    pop         ecx
 005925C1    pop         ecx
 005925C2    mov         dword ptr fs:[eax],edx
 005925C5    push        5925DA
 005925CA    lea         eax,[ebp-4]
 005925CD    call        @IntfClear
 005925D2    ret
>005925D3    jmp         @HandleFinally
>005925D8    jmp         005925CA
 005925DA    mov         eax,edi
 005925DC    test        bl,bl
>005925DE    je          005925EF
 005925E0    call        @AfterConstruction
 005925E5    pop         dword ptr fs:[0]
 005925EC    add         esp,0C
 005925EF    mov         eax,edi
 005925F1    pop         edi
 005925F2    pop         esi
 005925F3    pop         ebx
 005925F4    pop         ecx
 005925F5    pop         ebp
 005925F6    ret         4
*}
end;

//005925FC
destructor TDictionary<Winapi.Windows.HWND,Vcl.Themes.TChildControlInfo>.Destroy();
begin
{*
 005925FC    push        ebx
 005925FD    push        esi
 005925FE    call        @BeforeDestruction
 00592603    mov         ebx,edx
 00592605    mov         esi,eax
 00592607    mov         eax,esi
 00592609    call        TDictionary<Winapi.Windows.HWND,Vcl.Themes.TChildControlInfo>.Clear
 0059260E    mov         eax,dword ptr [esi+28]
 00592611    call        TObject.Free
 00592616    mov         eax,dword ptr [esi+2C]
 00592619    call        TObject.Free
 0059261E    mov         dl,0FC
 00592620    and         dl,bl
 00592622    mov         eax,esi
 00592624    call        TEnumerable<Vcl.Themes.TPair<Winapi.Windows.HWND,Vcl.Themes.TChildControlInfo>>.Destroy
 00592629    test        bl,bl
>0059262B    jle         00592634
 0059262D    mov         eax,esi
 0059262F    call        @ClassDestroy
 00592634    pop         esi
 00592635    pop         ebx
 00592636    ret
*}
end;

//00592638
procedure TDictionary<Winapi.Windows.HWND,Vcl.Themes.TChildControlInfo>.Clear;
begin
{*
 00592638    push        ebp
 00592639    mov         ebp,esp
 0059263B    add         esp,0FFFFFFF8
 0059263E    push        ebx
 0059263F    push        esi
 00592640    push        edi
 00592641    xor         edx,edx
 00592643    mov         dword ptr [ebp-4],edx
 00592646    mov         esi,eax
 00592648    xor         eax,eax
 0059264A    push        ebp
 0059264B    push        5926F3
 00592650    push        dword ptr fs:[eax]
 00592653    mov         dword ptr fs:[eax],esp
 00592656    lea         eax,[ebp-4]
 00592659    mov         edx,dword ptr [esi+4]
 0059265C    mov         ecx,dword ptr ds:[57E498];TDictionary<Winapi.Windows.HWND,Vcl.Themes.TChildControlInfo>....
 00592662    call        @DynArrayAsg
 00592667    xor         eax,eax
 00592669    mov         dword ptr [esi+8],eax
 0059266C    lea         eax,[esi+4]
 0059266F    mov         edx,dword ptr ds:[57E498];TDictionary<Winapi.Windows.HWND,Vcl.Themes.TChildControlInfo>....
 00592675    call        @DynArrayClear
 0059267A    xor         edx,edx
 0059267C    mov         eax,esi
 0059267E    call        005921E4
 00592683    xor         eax,eax
 00592685    mov         dword ptr [esi+10],eax
 00592688    mov         eax,dword ptr [ebp-4]
 0059268B    test        eax,eax
>0059268D    je          00592694
 0059268F    sub         eax,4
 00592692    mov         eax,dword ptr [eax]
 00592694    dec         eax
 00592695    test        eax,eax
>00592697    jl          005926D7
 00592699    inc         eax
 0059269A    mov         dword ptr [ebp-8],eax
 0059269D    xor         ebx,ebx
 0059269F    lea         eax,[ebx+ebx*4]
 005926A2    mov         edx,dword ptr [ebp-4]
 005926A5    cmp         dword ptr [edx+eax*4],0FFFFFFFF
>005926A9    je          005926D1
 005926AB    lea         eax,[ebx+ebx*4]
 005926AE    mov         edx,dword ptr [ebp-4]
 005926B1    mov         edx,dword ptr [edx+eax*4+4]
 005926B5    mov         cl,1
 005926B7    mov         eax,esi
 005926B9    mov         edi,dword ptr [eax]
 005926BB    call        dword ptr [edi+8]
 005926BE    lea         eax,[ebx+ebx*4]
 005926C1    mov         edx,dword ptr [ebp-4]
 005926C4    lea         edx,[edx+eax*4+8]
 005926C8    mov         cl,1
 005926CA    mov         eax,esi
 005926CC    mov         edi,dword ptr [eax]
 005926CE    call        dword ptr [edi+0C]
 005926D1    inc         ebx
 005926D2    dec         dword ptr [ebp-8]
>005926D5    jne         0059269F
 005926D7    xor         eax,eax
 005926D9    pop         edx
 005926DA    pop         ecx
 005926DB    pop         ecx
 005926DC    mov         dword ptr fs:[eax],edx
 005926DF    push        5926FA
 005926E4    lea         eax,[ebp-4]
 005926E7    mov         edx,dword ptr ds:[57E498];TDictionary<Winapi.Windows.HWND,Vcl.Themes.TChildControlInfo>....
 005926ED    call        @DynArrayClear
 005926F2    ret
>005926F3    jmp         @HandleFinally
>005926F8    jmp         005926E4
 005926FA    pop         edi
 005926FB    pop         esi
 005926FC    pop         ebx
 005926FD    pop         ecx
 005926FE    pop         ecx
 005926FF    pop         ebp
 00592700    ret
*}
end;

//00592704
{*procedure TDictionary<Winapi.Windows.HWND,Vcl.Themes.TChildControlInfo>.ToArray(?:?);
begin
 00592704    push        ebx
 00592705    push        esi
 00592706    mov         esi,edx
 00592708    mov         ebx,eax
 0059270A    mov         ecx,esi
 0059270C    mov         edx,dword ptr [ebx+8]
 0059270F    mov         eax,ebx
 00592711    call        00592058
 00592716    pop         esi
 00592717    pop         ebx
 00592718    ret
end;*}

//0059271C
{*function sub_0059271C(?:?):?;
begin
 0059271C    push        ebx
 0059271D    mov         ebx,eax
 0059271F    cmp         dword ptr [ebx+28],0
>00592723    jne         00592736
 00592725    mov         ecx,ebx
 00592727    mov         dl,1
 00592729    mov         eax,[0057E7E4];TDictionary<Winapi.Windows.HWND,Vcl.Themes.TChildControlInfo>.TKeyCollect...
 0059272E    call        0059277C
 00592733    mov         dword ptr [ebx+28],eax
 00592736    mov         eax,dword ptr [ebx+28]
 00592739    pop         ebx
 0059273A    ret
end;*}

//0059275C
procedure TDictionary<Winapi.Windows.HWND,Vcl.Themes.TChildControlInfo>.GetEnumerator;
begin
{*
 0059275C    mov         ecx,eax
 0059275E    mov         dl,1
 00592760    mov         eax,[0057F180];TDictionary<Winapi.Windows.HWND,Vcl.Themes.TChildControlInfo>.TPairEnumer...
 00592765    call        00592B98
 0059276A    ret
*}
end;

//00592774
procedure sub_00592774;
begin
{*
 00592774    call        TDictionary<Winapi.Windows.HWND,Vcl.Themes.TChildControlInfo>.TKeyCollection.GetEnumerator
 00592779    ret
*}
end;

//0059277C
constructor sub_0059277C(ADictionary:TDictionary<Winapi.Windows.HWND,Vcl.Themes.TChildControlInfo>);
begin
{*
 0059277C    push        ebx
 0059277D    push        esi
 0059277E    push        edi
 0059277F    test        dl,dl
>00592781    je          0059278B
 00592783    add         esp,0FFFFFFF0
 00592786    call        @ClassCreate
 0059278B    mov         esi,ecx
 0059278D    mov         ebx,edx
 0059278F    mov         edi,eax
 00592791    xor         edx,edx
 00592793    mov         eax,edi
 00592795    call        TObject.Create
 0059279A    mov         dword ptr [edi+4],esi
 0059279D    mov         eax,edi
 0059279F    test        bl,bl
>005927A1    je          005927B2
 005927A3    call        @AfterConstruction
 005927A8    pop         dword ptr fs:[0]
 005927AF    add         esp,0C
 005927B2    mov         eax,edi
 005927B4    pop         edi
 005927B5    pop         esi
 005927B6    pop         ebx
 005927B7    ret
*}
end;

//005927B8
function TDictionary<Winapi.Windows.HWND,Vcl.Themes.TChildControlInfo>.TKeyCollection.GetEnumerator:TDictionary<Winapi.Windows.HWND,Vcl.Themes.TChildControlInfo>.TKeyEnumerator;
begin
{*
 005927B8    mov         ecx,dword ptr [eax+4]
 005927BB    mov         dl,1
 005927BD    mov         eax,[0057E5E0];TDictionary<Winapi.Windows.HWND,Vcl.Themes.TChildControlInfo>.TKeyEnumera...
 005927C2    call        00592804
 005927C7    ret
*}
end;

//005927C8
{*procedure TDictionary<Winapi.Windows.HWND,Vcl.Themes.TChildControlInfo>.TKeyCollection.ToArray(?:?);
begin
 005927C8    push        ebx
 005927C9    push        esi
 005927CA    mov         esi,edx
 005927CC    mov         ebx,eax
 005927CE    mov         ecx,esi
 005927D0    mov         eax,dword ptr [ebx+4]
 005927D3    mov         edx,dword ptr [eax+8]
 005927D6    mov         eax,ebx
 005927D8    call        00591A28
 005927DD    pop         esi
 005927DE    pop         ebx
 005927DF    ret
end;*}

//005927E0
{*function sub_005927E0(?:TDictionary<Winapi.Windows.HWND,Vcl.Themes.TChildControlInfo>.TKeyEnumerator):?;
begin
 005927E0    mov         edx,dword ptr [eax+8]
 005927E3    lea         edx,[edx+edx*4]
 005927E6    mov         eax,dword ptr [eax+4]
 005927E9    mov         eax,dword ptr [eax+4]
 005927EC    mov         eax,dword ptr [eax+edx*4+4]
 005927F0    ret
end;*}

//005927F4
procedure sub_005927F4;
begin
{*
 005927F4    call        005927E0
 005927F9    ret
*}
end;

//005927FC
procedure sub_005927FC;
begin
{*
 005927FC    call        TDictionary<Winapi.Windows.HWND,Vcl.Themes.TChildControlInfo>.TKeyEnumerator.MoveNext
 00592801    ret
*}
end;

//00592804
constructor sub_00592804(ADictionary:TDictionary<Winapi.Windows.HWND,Vcl.Themes.TChildControlInfo>);
begin
{*
 00592804    push        ebx
 00592805    push        esi
 00592806    push        edi
 00592807    test        dl,dl
>00592809    je          00592813
 0059280B    add         esp,0FFFFFFF0
 0059280E    call        @ClassCreate
 00592813    mov         esi,ecx
 00592815    mov         ebx,edx
 00592817    mov         edi,eax
 00592819    xor         edx,edx
 0059281B    mov         eax,edi
 0059281D    call        TObject.Create
 00592822    mov         dword ptr [edi+8],0FFFFFFFF
 00592829    mov         dword ptr [edi+4],esi
 0059282C    mov         eax,edi
 0059282E    test        bl,bl
>00592830    je          00592841
 00592832    call        @AfterConstruction
 00592837    pop         dword ptr fs:[0]
 0059283E    add         esp,0C
 00592841    mov         eax,edi
 00592843    pop         edi
 00592844    pop         esi
 00592845    pop         ebx
 00592846    ret
*}
end;

//00592848
function TDictionary<Winapi.Windows.HWND,Vcl.Themes.TChildControlInfo>.TKeyEnumerator.MoveNext:Boolean;
begin
{*
 00592848    push        ebx
 00592849    push        esi
 0059284A    mov         esi,eax
>0059284C    jmp         00592867
 0059284E    inc         dword ptr [esi+8]
 00592851    mov         eax,dword ptr [esi+8]
 00592854    lea         eax,[eax+eax*4]
 00592857    mov         edx,dword ptr [esi+4]
 0059285A    mov         edx,dword ptr [edx+4]
 0059285D    cmp         dword ptr [edx+eax*4],0FFFFFFFF
>00592861    je          00592867
 00592863    mov         bl,1
>00592865    jmp         0059287A
 00592867    mov         eax,dword ptr [esi+4]
 0059286A    mov         eax,dword ptr [eax+4]
 0059286D    call        0040ABA8
 00592872    dec         eax
 00592873    cmp         eax,dword ptr [esi+8]
>00592876    jg          0059284E
 00592878    xor         ebx,ebx
 0059287A    mov         eax,ebx
 0059287C    pop         esi
 0059287D    pop         ebx
 0059287E    ret
*}
end;

//00592880
{*procedure sub_00592880(?:TDictionary<Winapi; ?:?; ?:?);
begin
 00592880    push        ebp
 00592881    mov         ebp,esp
 00592883    add         esp,0FFFFFFEC
 00592886    push        ebx
 00592887    push        esi
 00592888    push        edi
 00592889    mov         dword ptr [ebp-4],ecx
 0059288C    mov         ebx,edx
 0059288E    mov         esi,eax
 00592890    lea         edi,[ebp-14]
 00592893    push        ebx
 00592894    mov         eax,dword ptr [ebp-4]
 00592897    mov         ecx,1
 0059289C    mov         edx,dword ptr ds:[57EA1C];TArray<Vcl.Themes.TChildControlInfo>
 005928A2    call        @DynArraySetLength
 005928A7    add         esp,4
 005928AA    xor         ebx,ebx
 005928AC    mov         eax,esi
 005928AE    call        TEnumerable<Vcl.Themes.TChildControlInfo>.GetEnumerator
 005928B3    mov         dword ptr [ebp-8],eax
 005928B6    xor         eax,eax
 005928B8    push        ebp
 005928B9    push        592915
 005928BE    push        dword ptr fs:[eax]
 005928C1    mov         dword ptr fs:[eax],esp
>005928C4    jmp         005928EB
 005928C6    mov         edx,edi
 005928C8    mov         eax,dword ptr [ebp-8]
 005928CB    mov         ecx,dword ptr [eax]
 005928CD    call        dword ptr [ecx]
 005928CF    lea         eax,[ebx+ebx*2]
 005928D2    mov         edx,dword ptr [ebp-4]
 005928D5    mov         edx,dword ptr [edx]
 005928D7    mov         ecx,dword ptr [edi]
 005928D9    mov         dword ptr [edx+eax*4],ecx
 005928DC    mov         ecx,dword ptr [edi+4]
 005928DF    mov         dword ptr [edx+eax*4+4],ecx
 005928E3    mov         ecx,dword ptr [edi+8]
 005928E6    mov         dword ptr [edx+eax*4+8],ecx
 005928EA    inc         ebx
 005928EB    mov         eax,dword ptr [ebp-8]
 005928EE    call        TEnumerator<Vcl.Themes.TChildControlInfo>.MoveNext
 005928F3    test        al,al
>005928F5    jne         005928C6
 005928F7    xor         eax,eax
 005928F9    pop         edx
 005928FA    pop         ecx
 005928FB    pop         ecx
 005928FC    mov         dword ptr fs:[eax],edx
 005928FF    push        59291C
 00592904    cmp         dword ptr [ebp-8],0
>00592908    je          00592914
 0059290A    mov         dl,1
 0059290C    mov         eax,dword ptr [ebp-8]
 0059290F    mov         ecx,dword ptr [eax]
 00592911    call        dword ptr [ecx-4]
 00592914    ret
>00592915    jmp         @HandleFinally
>0059291A    jmp         00592904
 0059291C    pop         edi
 0059291D    pop         esi
 0059291E    pop         ebx
 0059291F    mov         esp,ebp
 00592921    pop         ebp
 00592922    ret
end;*}

//00592924
destructor TEnumerable<Vcl.Themes.TChildControlInfo>.Destroy();
begin
{*
 00592924    push        ebx
 00592925    push        esi
 00592926    call        @BeforeDestruction
 0059292B    mov         ebx,edx
 0059292D    mov         esi,eax
 0059292F    mov         dl,0FC
 00592931    and         dl,bl
 00592933    mov         eax,esi
 00592935    call        TObject.Destroy
 0059293A    test        bl,bl
>0059293C    jle         00592945
 0059293E    mov         eax,esi
 00592940    call        @ClassDestroy
 00592945    pop         esi
 00592946    pop         ebx
 00592947    ret
*}
end;

//00592948
function TEnumerable<Vcl.Themes.TChildControlInfo>.GetEnumerator:TEnumerator<Vcl.Themes.TChildControlInfo>;
begin
{*
 00592948    mov         edx,dword ptr [eax]
 0059294A    call        dword ptr [edx]
 0059294C    ret
*}
end;

//00592950
{*procedure TEnumerable<Vcl.Themes.TChildControlInfo>.ToArray(?:?);
begin
 00592950    push        ebp
 00592951    mov         ebp,esp
 00592953    add         esp,0FFFFFFE8
 00592956    push        ebx
 00592957    push        esi
 00592958    mov         dword ptr [ebp-4],edx
 0059295B    mov         ebx,eax
 0059295D    lea         esi,[ebp-18]
 00592960    mov         dl,1
 00592962    mov         eax,[005A121C];TList<Vcl.Themes.TChildControlInfo>
 00592967    call        00596624
 0059296C    mov         dword ptr [ebp-8],eax
 0059296F    xor         eax,eax
 00592971    push        ebp
 00592972    push        5929FC
 00592977    push        dword ptr fs:[eax]
 0059297A    mov         dword ptr fs:[eax],esp
 0059297D    mov         eax,ebx
 0059297F    call        TEnumerable<Vcl.Themes.TChildControlInfo>.GetEnumerator
 00592984    mov         dword ptr [ebp-0C],eax
 00592987    xor         eax,eax
 00592989    push        ebp
 0059298A    push        5929D4
 0059298F    push        dword ptr fs:[eax]
 00592992    mov         dword ptr fs:[eax],esp
>00592995    jmp         005929AA
 00592997    mov         edx,esi
 00592999    mov         eax,dword ptr [ebp-0C]
 0059299C    mov         ecx,dword ptr [eax]
 0059299E    call        dword ptr [ecx]
 005929A0    mov         edx,esi
 005929A2    mov         eax,dword ptr [ebp-8]
 005929A5    call        TList<Vcl.Themes.TChildControlInfo>.Add
 005929AA    mov         eax,dword ptr [ebp-0C]
 005929AD    call        TEnumerator<Vcl.Themes.TChildControlInfo>.MoveNext
 005929B2    test        al,al
>005929B4    jne         00592997
 005929B6    xor         eax,eax
 005929B8    pop         edx
 005929B9    pop         ecx
 005929BA    pop         ecx
 005929BB    mov         dword ptr fs:[eax],edx
 005929BE    push        5929DB
 005929C3    cmp         dword ptr [ebp-0C],0
>005929C7    je          005929D3
 005929C9    mov         dl,1
 005929CB    mov         eax,dword ptr [ebp-0C]
 005929CE    mov         ecx,dword ptr [eax]
 005929D0    call        dword ptr [ecx-4]
 005929D3    ret
>005929D4    jmp         @HandleFinally
>005929D9    jmp         005929C3
 005929DB    mov         edx,dword ptr [ebp-4]
 005929DE    mov         eax,dword ptr [ebp-8]
 005929E1    call        TList<Vcl.Themes.TChildControlInfo>.ToArray
 005929E6    xor         eax,eax
 005929E8    pop         edx
 005929E9    pop         ecx
 005929EA    pop         ecx
 005929EB    mov         dword ptr fs:[eax],edx
 005929EE    push        592A03
 005929F3    mov         eax,dword ptr [ebp-8]
 005929F6    call        TObject.Free
 005929FB    ret
>005929FC    jmp         @HandleFinally
>00592A01    jmp         005929F3
 00592A03    pop         esi
 00592A04    pop         ebx
 00592A05    mov         esp,ebp
 00592A07    pop         ebp
 00592A08    ret
end;*}

//00592A0C
function TEnumerator<Vcl.Themes.TChildControlInfo>.MoveNext:Boolean;
begin
{*
 00592A0C    mov         edx,dword ptr [eax]
 00592A0E    call        dword ptr [edx+4]
 00592A11    ret
*}
end;

//00592A1C
procedure sub_00592A1C;
begin
{*
 00592A1C    call        TDictionary<Winapi.Windows.HWND,Vcl.Themes.TChildControlInfo>.TValueCollection.GetEnumerator
 00592A21    ret
*}
end;

//00592A24
constructor sub_00592A24(ADictionary:TDictionary<Winapi.Windows.HWND,Vcl.Themes.TChildControlInfo>);
begin
{*
 00592A24    push        ebx
 00592A25    push        esi
 00592A26    push        edi
 00592A27    test        dl,dl
>00592A29    je          00592A33
 00592A2B    add         esp,0FFFFFFF0
 00592A2E    call        @ClassCreate
 00592A33    mov         esi,ecx
 00592A35    mov         ebx,edx
 00592A37    mov         edi,eax
 00592A39    xor         edx,edx
 00592A3B    mov         eax,edi
 00592A3D    call        TObject.Create
 00592A42    mov         dword ptr [edi+4],esi
 00592A45    mov         eax,edi
 00592A47    test        bl,bl
>00592A49    je          00592A5A
 00592A4B    call        @AfterConstruction
 00592A50    pop         dword ptr fs:[0]
 00592A57    add         esp,0C
 00592A5A    mov         eax,edi
 00592A5C    pop         edi
 00592A5D    pop         esi
 00592A5E    pop         ebx
 00592A5F    ret
*}
end;

//00592A60
procedure TDictionary<Winapi.Windows.HWND,Vcl.Themes.TChildControlInfo>.TValueCollection.GetEnumerator;
begin
{*
 00592A60    mov         ecx,dword ptr [eax+4]
 00592A63    mov         dl,1
 00592A65    mov         eax,[0057ED3C];TDictionary<Winapi.Windows.HWND,Vcl.Themes.TChildControlInfo>.TValueEnume...
 00592A6A    call        00592AC8
 00592A6F    ret
*}
end;

//00592A70
{*procedure TDictionary<Winapi.Windows.HWND,Vcl.Themes.TChildControlInfo>.TValueCollection.ToArray(?:?);
begin
 00592A70    push        ebx
 00592A71    push        esi
 00592A72    mov         esi,edx
 00592A74    mov         ebx,eax
 00592A76    mov         ecx,esi
 00592A78    mov         eax,dword ptr [ebx+4]
 00592A7B    mov         edx,dword ptr [eax+8]
 00592A7E    mov         eax,ebx
 00592A80    call        00592880
 00592A85    pop         esi
 00592A86    pop         ebx
 00592A87    ret
end;*}

//00592A88
{*procedure sub_00592A88(?:TDictionary<Winapi.Windows.HWND,Vcl.Themes.TChildControlInfo>.TValueEnumerator; ?:?);
begin
 00592A88    push        ebx
 00592A89    mov         ecx,dword ptr [eax+8]
 00592A8C    lea         ecx,[ecx+ecx*4]
 00592A8F    mov         eax,dword ptr [eax+4]
 00592A92    mov         eax,dword ptr [eax+4]
 00592A95    mov         ebx,dword ptr [eax+ecx*4+8]
 00592A99    mov         dword ptr [edx],ebx
 00592A9B    mov         ebx,dword ptr [eax+ecx*4+0C]
 00592A9F    mov         dword ptr [edx+4],ebx
 00592AA2    mov         ebx,dword ptr [eax+ecx*4+10]
 00592AA6    mov         dword ptr [edx+8],ebx
 00592AA9    pop         ebx
 00592AAA    ret
end;*}

//00592AAC
{*procedure sub_00592AAC(?:?);
begin
 00592AAC    push        ebx
 00592AAD    push        esi
 00592AAE    mov         esi,edx
 00592AB0    mov         ebx,eax
 00592AB2    mov         edx,esi
 00592AB4    mov         eax,ebx
 00592AB6    call        00592A88
 00592ABB    pop         esi
 00592ABC    pop         ebx
 00592ABD    ret
end;*}

//00592AC0
procedure sub_00592AC0;
begin
{*
 00592AC0    call        TDictionary<Winapi.Windows.HWND,Vcl.Themes.TChildControlInfo>.TValueEnumerator.MoveNext
 00592AC5    ret
*}
end;

//00592AC8
constructor sub_00592AC8(ADictionary:TDictionary<Winapi.Windows.HWND,Vcl.Themes.TChildControlInfo>);
begin
{*
 00592AC8    push        ebx
 00592AC9    push        esi
 00592ACA    push        edi
 00592ACB    test        dl,dl
>00592ACD    je          00592AD7
 00592ACF    add         esp,0FFFFFFF0
 00592AD2    call        @ClassCreate
 00592AD7    mov         esi,ecx
 00592AD9    mov         ebx,edx
 00592ADB    mov         edi,eax
 00592ADD    xor         edx,edx
 00592ADF    mov         eax,edi
 00592AE1    call        TObject.Create
 00592AE6    mov         dword ptr [edi+8],0FFFFFFFF
 00592AED    mov         dword ptr [edi+4],esi
 00592AF0    mov         eax,edi
 00592AF2    test        bl,bl
>00592AF4    je          00592B05
 00592AF6    call        @AfterConstruction
 00592AFB    pop         dword ptr fs:[0]
 00592B02    add         esp,0C
 00592B05    mov         eax,edi
 00592B07    pop         edi
 00592B08    pop         esi
 00592B09    pop         ebx
 00592B0A    ret
*}
end;

//00592B0C
function TDictionary<Winapi.Windows.HWND,Vcl.Themes.TChildControlInfo>.TValueEnumerator.MoveNext:Boolean;
begin
{*
 00592B0C    push        ebx
 00592B0D    push        esi
 00592B0E    mov         esi,eax
>00592B10    jmp         00592B2B
 00592B12    inc         dword ptr [esi+8]
 00592B15    mov         eax,dword ptr [esi+8]
 00592B18    lea         eax,[eax+eax*4]
 00592B1B    mov         edx,dword ptr [esi+4]
 00592B1E    mov         edx,dword ptr [edx+4]
 00592B21    cmp         dword ptr [edx+eax*4],0FFFFFFFF
>00592B25    je          00592B2B
 00592B27    mov         bl,1
>00592B29    jmp         00592B3E
 00592B2B    mov         eax,dword ptr [esi+4]
 00592B2E    mov         eax,dword ptr [eax+4]
 00592B31    call        0040ABA8
 00592B36    dec         eax
 00592B37    cmp         eax,dword ptr [esi+8]
>00592B3A    jg          00592B12
 00592B3C    xor         ebx,ebx
 00592B3E    mov         eax,ebx
 00592B40    pop         esi
 00592B41    pop         ebx
 00592B42    ret
*}
end;

//00592B44
{*procedure sub_00592B44(?:TDictionary<Winapi.Windows.HWND,Vcl.Themes.TChildControlInfo>.TPairEnumerator; ?:?);
begin
 00592B44    push        ebx
 00592B45    mov         ecx,dword ptr [eax+8]
 00592B48    lea         ecx,[ecx+ecx*4]
 00592B4B    mov         ebx,dword ptr [eax+4]
 00592B4E    mov         ebx,dword ptr [ebx+4]
 00592B51    mov         ecx,dword ptr [ebx+ecx*4+4]
 00592B55    mov         dword ptr [edx],ecx
 00592B57    mov         ecx,dword ptr [eax+8]
 00592B5A    lea         ecx,[ecx+ecx*4]
 00592B5D    mov         eax,dword ptr [eax+4]
 00592B60    mov         eax,dword ptr [eax+4]
 00592B63    mov         ebx,dword ptr [eax+ecx*4+8]
 00592B67    mov         dword ptr [edx+4],ebx
 00592B6A    mov         ebx,dword ptr [eax+ecx*4+0C]
 00592B6E    mov         dword ptr [edx+8],ebx
 00592B71    mov         ebx,dword ptr [eax+ecx*4+10]
 00592B75    mov         dword ptr [edx+0C],ebx
 00592B78    pop         ebx
 00592B79    ret
end;*}

//00592B7C
{*procedure sub_00592B7C(?:?);
begin
 00592B7C    push        ebx
 00592B7D    push        esi
 00592B7E    mov         esi,edx
 00592B80    mov         ebx,eax
 00592B82    mov         edx,esi
 00592B84    mov         eax,ebx
 00592B86    call        00592B44
 00592B8B    pop         esi
 00592B8C    pop         ebx
 00592B8D    ret
end;*}

//00592B90
procedure sub_00592B90;
begin
{*
 00592B90    call        TDictionary<Winapi.Windows.HWND,Vcl.Themes.TChildControlInfo>.TPairEnumerator.MoveNext
 00592B95    ret
*}
end;

//00592B98
constructor sub_00592B98(ADictionary:TDictionary<Winapi.Windows.HWND,Vcl.Themes.TChildControlInfo>);
begin
{*
 00592B98    push        ebx
 00592B99    push        esi
 00592B9A    push        edi
 00592B9B    test        dl,dl
>00592B9D    je          00592BA7
 00592B9F    add         esp,0FFFFFFF0
 00592BA2    call        @ClassCreate
 00592BA7    mov         esi,ecx
 00592BA9    mov         ebx,edx
 00592BAB    mov         edi,eax
 00592BAD    xor         edx,edx
 00592BAF    mov         eax,edi
 00592BB1    call        TObject.Create
 00592BB6    mov         dword ptr [edi+8],0FFFFFFFF
 00592BBD    mov         dword ptr [edi+4],esi
 00592BC0    mov         eax,edi
 00592BC2    test        bl,bl
>00592BC4    je          00592BD5
 00592BC6    call        @AfterConstruction
 00592BCB    pop         dword ptr fs:[0]
 00592BD2    add         esp,0C
 00592BD5    mov         eax,edi
 00592BD7    pop         edi
 00592BD8    pop         esi
 00592BD9    pop         ebx
 00592BDA    ret
*}
end;

//00592BDC
function TDictionary<Winapi.Windows.HWND,Vcl.Themes.TChildControlInfo>.TPairEnumerator.MoveNext:Boolean;
begin
{*
 00592BDC    push        ebx
 00592BDD    push        esi
 00592BDE    mov         esi,eax
>00592BE0    jmp         00592BFB
 00592BE2    inc         dword ptr [esi+8]
 00592BE5    mov         eax,dword ptr [esi+8]
 00592BE8    lea         eax,[eax+eax*4]
 00592BEB    mov         edx,dword ptr [esi+4]
 00592BEE    mov         edx,dword ptr [edx+4]
 00592BF1    cmp         dword ptr [edx+eax*4],0FFFFFFFF
>00592BF5    je          00592BFB
 00592BF7    mov         bl,1
>00592BF9    jmp         00592C0E
 00592BFB    mov         eax,dword ptr [esi+4]
 00592BFE    mov         eax,dword ptr [eax+4]
 00592C01    call        0040ABA8
 00592C06    dec         eax
 00592C07    cmp         eax,dword ptr [esi+8]
>00592C0A    jg          00592BE2
 00592C0C    xor         ebx,ebx
 00592C0E    mov         eax,ebx
 00592C10    pop         esi
 00592C11    pop         ebx
 00592C12    ret
*}
end;

//00592C14
{*procedure sub_00592C14(?:?; ?:?);
begin
 00592C14    push        ebx
 00592C15    push        esi
 00592C16    push        ecx
 00592C17    mov         ebx,ecx
 00592C19    mov         dword ptr [esp],edx
 00592C1C    mov         esi,eax
 00592C1E    mov         ecx,ebx
 00592C20    mov         edx,dword ptr [esp]
 00592C23    mov         eax,esi
 00592C25    call        005924DC
 00592C2A    cmp         bl,1
>00592C2D    jne         00592C3E
 00592C2F    test        byte ptr [esi+30],1
>00592C33    je          00592C3E
 00592C35    mov         eax,esp
 00592C37    mov         eax,dword ptr [eax]
 00592C39    call        TObject.Free
 00592C3E    pop         edx
 00592C3F    pop         esi
 00592C40    pop         ebx
 00592C41    ret
end;*}

//00592C44
{*procedure sub_00592C44(?:?; ?:?);
begin
 00592C44    push        ebx
 00592C45    push        esi
 00592C46    push        ecx
 00592C47    mov         ebx,ecx
 00592C49    mov         dword ptr [esp],edx
 00592C4C    mov         esi,eax
 00592C4E    mov         edx,dword ptr [esp]
 00592C51    mov         ecx,ebx
 00592C53    mov         eax,esi
 00592C55    call        005924F4
 00592C5A    cmp         bl,1
>00592C5D    jne         00592C6F
 00592C5F    test        byte ptr [esi+30],2
>00592C63    je          00592C6F
 00592C65    mov         eax,dword ptr [esp]
 00592C68    mov         eax,dword ptr [eax]
 00592C6A    call        TObject.Free
 00592C6F    pop         edx
 00592C70    pop         esi
 00592C71    pop         ebx
 00592C72    ret
end;*}

//00592C74
{*procedure sub_00592C74(?:TDictionary<System; ?:?; ?:?);
begin
 00592C74    push        ebp
 00592C75    mov         ebp,esp
 00592C77    add         esp,0FFFFFFEC
 00592C7A    push        ebx
 00592C7B    push        esi
 00592C7C    mov         dword ptr [ebp-10],ecx
 00592C7F    mov         ebx,edx
 00592C81    mov         esi,eax
 00592C83    lea         eax,[ebp-0C]
 00592C86    mov         edx,dword ptr ds:[57FDA8];TPair<System.string,Vcl.Themes.TStyleManager.TSourceInfo>
 00592C8C    call        @AddRefRecord
 00592C91    xor         eax,eax
 00592C93    push        ebp
 00592C94    push        592D43
 00592C99    push        dword ptr fs:[eax]
 00592C9C    mov         dword ptr fs:[eax],esp
 00592C9F    push        ebx
 00592CA0    mov         eax,dword ptr [ebp-10]
 00592CA3    mov         ecx,1
 00592CA8    mov         edx,dword ptr ds:[57FE50];TArray<Vcl.Themes.TPair<System.string,Vcl.Themes.TStyleManager...
 00592CAE    call        @DynArraySetLength
 00592CB3    add         esp,4
 00592CB6    xor         ebx,ebx
 00592CB8    mov         eax,esi
 00592CBA    call        TEnumerable<Vcl.Themes.TPair<System.string,Vcl.Themes.TStyleManager.TSourceInfo>>.GetEnumerator
 00592CBF    mov         dword ptr [ebp-14],eax
 00592CC2    xor         eax,eax
 00592CC4    push        ebp
 00592CC5    push        592D20
 00592CCA    push        dword ptr fs:[eax]
 00592CCD    mov         dword ptr fs:[eax],esp
>00592CD0    jmp         00592CF6
 00592CD2    lea         edx,[ebp-0C]
 00592CD5    mov         eax,dword ptr [ebp-14]
 00592CD8    mov         ecx,dword ptr [eax]
 00592CDA    call        dword ptr [ecx]
 00592CDC    lea         eax,[ebx+ebx*2]
 00592CDF    mov         edx,dword ptr [ebp-10]
 00592CE2    mov         edx,dword ptr [edx]
 00592CE4    lea         eax,[edx+eax*4]
 00592CE7    lea         edx,[ebp-0C]
 00592CEA    mov         ecx,dword ptr ds:[57FDA8];TPair<System.string,Vcl.Themes.TStyleManager.TSourceInfo>
 00592CF0    call        @CopyRecord
 00592CF5    inc         ebx
 00592CF6    mov         eax,dword ptr [ebp-14]
 00592CF9    call        TEnumerator<Vcl.Themes.TPair<System.string,Vcl.Themes.TStyleManager.TSourceInfo>>.MoveNext
 00592CFE    test        al,al
>00592D00    jne         00592CD2
 00592D02    xor         eax,eax
 00592D04    pop         edx
 00592D05    pop         ecx
 00592D06    pop         ecx
 00592D07    mov         dword ptr fs:[eax],edx
 00592D0A    push        592D27
 00592D0F    cmp         dword ptr [ebp-14],0
>00592D13    je          00592D1F
 00592D15    mov         dl,1
 00592D17    mov         eax,dword ptr [ebp-14]
 00592D1A    mov         ecx,dword ptr [eax]
 00592D1C    call        dword ptr [ecx-4]
 00592D1F    ret
>00592D20    jmp         @HandleFinally
>00592D25    jmp         00592D0F
 00592D27    xor         eax,eax
 00592D29    pop         edx
 00592D2A    pop         ecx
 00592D2B    pop         ecx
 00592D2C    mov         dword ptr fs:[eax],edx
 00592D2F    push        592D4A
 00592D34    lea         eax,[ebp-0C]
 00592D37    mov         edx,dword ptr ds:[57FDA8];TPair<System.string,Vcl.Themes.TStyleManager.TSourceInfo>
 00592D3D    call        @FinalizeRecord
 00592D42    ret
>00592D43    jmp         @HandleFinally
>00592D48    jmp         00592D34
 00592D4A    pop         esi
 00592D4B    pop         ebx
 00592D4C    mov         esp,ebp
 00592D4E    pop         ebp
 00592D4F    ret
end;*}

//00592D50
destructor TEnumerable<Vcl.Themes.TPair<System.string,Vcl.Themes.TStyleManager.TSourceInfo>>.Destroy();
begin
{*
 00592D50    push        ebx
 00592D51    push        esi
 00592D52    call        @BeforeDestruction
 00592D57    mov         ebx,edx
 00592D59    mov         esi,eax
 00592D5B    mov         dl,0FC
 00592D5D    and         dl,bl
 00592D5F    mov         eax,esi
 00592D61    call        TObject.Destroy
 00592D66    test        bl,bl
>00592D68    jle         00592D71
 00592D6A    mov         eax,esi
 00592D6C    call        @ClassDestroy
 00592D71    pop         esi
 00592D72    pop         ebx
 00592D73    ret
*}
end;

//00592D74
function TEnumerable<Vcl.Themes.TPair<System.string,Vcl.Themes.TStyleManager.TSourceInfo>>.GetEnumerator:TEnumerator<Vcl.Themes.TPair<System.string,Vcl.Themes.TStyleManager.TSourceInfo>>;
begin
{*
 00592D74    mov         edx,dword ptr [eax]
 00592D76    call        dword ptr [edx]
 00592D78    ret
*}
end;

//00592D7C
{*procedure TEnumerable<Vcl.Themes.TPair<System.string,Vcl.Themes.TStyleManager.TSourceInfo>>.ToArray(?:?);
begin
 00592D7C    push        ebp
 00592D7D    mov         ebp,esp
 00592D7F    add         esp,0FFFFFFE8
 00592D82    push        ebx
 00592D83    mov         dword ptr [ebp-10],edx
 00592D86    mov         ebx,eax
 00592D88    lea         eax,[ebp-0C]
 00592D8B    mov         edx,dword ptr ds:[57FDA8];TPair<System.string,Vcl.Themes.TStyleManager.TSourceInfo>
 00592D91    call        @AddRefRecord
 00592D96    xor         eax,eax
 00592D98    push        ebp
 00592D99    push        592E65
 00592D9E    push        dword ptr fs:[eax]
 00592DA1    mov         dword ptr fs:[eax],esp
 00592DA4    mov         dl,1
 00592DA6    mov         eax,[005A246C];TList<Vcl.Themes.TPair<System.string,Vcl.Themes.TStyleManager.TSourceInfo...
 00592DAB    call        0059696C
 00592DB0    mov         dword ptr [ebp-14],eax
 00592DB3    xor         eax,eax
 00592DB5    push        ebp
 00592DB6    push        592E42
 00592DBB    push        dword ptr fs:[eax]
 00592DBE    mov         dword ptr fs:[eax],esp
 00592DC1    mov         eax,ebx
 00592DC3    call        TEnumerable<Vcl.Themes.TPair<System.string,Vcl.Themes.TStyleManager.TSourceInfo>>.GetEnumerator
 00592DC8    mov         dword ptr [ebp-18],eax
 00592DCB    xor         eax,eax
 00592DCD    push        ebp
 00592DCE    push        592E1A
 00592DD3    push        dword ptr fs:[eax]
 00592DD6    mov         dword ptr fs:[eax],esp
>00592DD9    jmp         00592DF0
 00592DDB    lea         edx,[ebp-0C]
 00592DDE    mov         eax,dword ptr [ebp-18]
 00592DE1    mov         ecx,dword ptr [eax]
 00592DE3    call        dword ptr [ecx]
 00592DE5    lea         edx,[ebp-0C]
 00592DE8    mov         eax,dword ptr [ebp-14]
 00592DEB    call        TList<Vcl.Themes.TPair<System.string,Vcl.Themes.TStyleManager.TSourceInfo>>.Add
 00592DF0    mov         eax,dword ptr [ebp-18]
 00592DF3    call        TEnumerator<Vcl.Themes.TPair<System.string,Vcl.Themes.TStyleManager.TSourceInfo>>.MoveNext
 00592DF8    test        al,al
>00592DFA    jne         00592DDB
 00592DFC    xor         eax,eax
 00592DFE    pop         edx
 00592DFF    pop         ecx
 00592E00    pop         ecx
 00592E01    mov         dword ptr fs:[eax],edx
 00592E04    push        592E21
 00592E09    cmp         dword ptr [ebp-18],0
>00592E0D    je          00592E19
 00592E0F    mov         dl,1
 00592E11    mov         eax,dword ptr [ebp-18]
 00592E14    mov         ecx,dword ptr [eax]
 00592E16    call        dword ptr [ecx-4]
 00592E19    ret
>00592E1A    jmp         @HandleFinally
>00592E1F    jmp         00592E09
 00592E21    mov         edx,dword ptr [ebp-10]
 00592E24    mov         eax,dword ptr [ebp-14]
 00592E27    call        TList<Vcl.Themes.TPair<System.string,Vcl.Themes.TStyleManager.TSourceInfo>>.ToArray
 00592E2C    xor         eax,eax
 00592E2E    pop         edx
 00592E2F    pop         ecx
 00592E30    pop         ecx
 00592E31    mov         dword ptr fs:[eax],edx
 00592E34    push        592E49
 00592E39    mov         eax,dword ptr [ebp-14]
 00592E3C    call        TObject.Free
 00592E41    ret
>00592E42    jmp         @HandleFinally
>00592E47    jmp         00592E39
 00592E49    xor         eax,eax
 00592E4B    pop         edx
 00592E4C    pop         ecx
 00592E4D    pop         ecx
 00592E4E    mov         dword ptr fs:[eax],edx
 00592E51    push        592E6C
 00592E56    lea         eax,[ebp-0C]
 00592E59    mov         edx,dword ptr ds:[57FDA8];TPair<System.string,Vcl.Themes.TStyleManager.TSourceInfo>
 00592E5F    call        @FinalizeRecord
 00592E64    ret
>00592E65    jmp         @HandleFinally
>00592E6A    jmp         00592E56
 00592E6C    pop         ebx
 00592E6D    mov         esp,ebp
 00592E6F    pop         ebp
 00592E70    ret
end;*}

//00592E74
function TEnumerator<Vcl.Themes.TPair<System.string,Vcl.Themes.TStyleManager.TSourceInfo>>.MoveNext:Boolean;
begin
{*
 00592E74    mov         edx,dword ptr [eax]
 00592E76    call        dword ptr [edx+4]
 00592E79    ret
*}
end;

//00592E7C
procedure sub_00592E7C(?:TDictionary<System.string,Vcl.Themes.TStyleManager.TSourceInfo>; ?:Integer);
begin
{*
 00592E7C    cmp         edx,dword ptr [eax+8]
>00592E7F    jge         00592E98
 00592E81    mov         ecx,dword ptr ds:[7C4C2C];^SResString172:TResStringRec
 00592E87    mov         dl,1
 00592E89    mov         eax,[00417CF0];EArgumentOutOfRangeException
 00592E8E    call        Exception.CreateRes;EArgumentOutOfRangeException.Create
 00592E93    call        @RaiseExcept
 00592E98    test        edx,edx
>00592E9A    jne         00592EA4
 00592E9C    xor         edx,edx
 00592E9E    call        00592EBC
 00592EA3    ret
 00592EA4    mov         ecx,4
 00592EA9    cmp         edx,ecx
>00592EAB    jle         00592EB3
 00592EAD    add         ecx,ecx
 00592EAF    cmp         edx,ecx
>00592EB1    jg          00592EAD
 00592EB3    mov         edx,ecx
 00592EB5    call        00592EBC
 00592EBA    ret
*}
end;

//00592EBC
{*procedure sub_00592EBC(?:?; ?:?);
begin
 00592EBC    push        ebp
 00592EBD    mov         ebp,esp
 00592EBF    add         esp,0FFFFFFF0
 00592EC2    push        ebx
 00592EC3    push        esi
 00592EC4    push        edi
 00592EC5    xor         ecx,ecx
 00592EC7    mov         dword ptr [ebp-4],ecx
 00592ECA    mov         dword ptr [ebp-8],ecx
 00592ECD    mov         edi,edx
 00592ECF    mov         dword ptr [ebp-0C],eax
 00592ED2    xor         eax,eax
 00592ED4    push        ebp
 00592ED5    push        592FE1
 00592EDA    push        dword ptr fs:[eax]
 00592EDD    mov         dword ptr fs:[eax],esp
 00592EE0    mov         eax,dword ptr [ebp-0C]
 00592EE3    mov         eax,dword ptr [eax+4]
 00592EE6    mov         dword ptr [ebp-10],eax
 00592EE9    mov         eax,dword ptr [ebp-10]
 00592EEC    test        eax,eax
>00592EEE    je          00592EF5
 00592EF0    sub         eax,4
 00592EF3    mov         eax,dword ptr [eax]
 00592EF5    cmp         eax,edi
>00592EF7    je          00592FC0
 00592EFD    test        edi,edi
>00592EFF    jge         00592F06
 00592F01    call        00423F00
 00592F06    lea         eax,[ebp-4]
 00592F09    mov         edx,dword ptr [ebp-0C]
 00592F0C    mov         edx,dword ptr [edx+4]
 00592F0F    mov         ecx,dword ptr ds:[5802D0];TDictionary<System.string,Vcl.Themes.TStyleManager.TSourceInfo...
 00592F15    call        @DynArrayAsg
 00592F1A    push        edi
 00592F1B    lea         eax,[ebp-8]
 00592F1E    mov         ecx,1
 00592F23    mov         edx,dword ptr ds:[5802D0];TDictionary<System.string,Vcl.Themes.TStyleManager.TSourceInfo...
 00592F29    call        @DynArraySetLength
 00592F2E    add         esp,4
 00592F31    mov         eax,dword ptr [ebp-8]
 00592F34    test        eax,eax
>00592F36    je          00592F3D
 00592F38    sub         eax,4
 00592F3B    mov         eax,dword ptr [eax]
 00592F3D    mov         esi,eax
 00592F3F    dec         esi
 00592F40    test        esi,esi
>00592F42    jl          00592F59
 00592F44    inc         esi
 00592F45    xor         ebx,ebx
 00592F47    mov         eax,ebx
 00592F49    add         eax,eax
 00592F4B    mov         edx,dword ptr [ebp-8]
 00592F4E    mov         dword ptr [edx+eax*8],0FFFFFFFF
 00592F55    inc         ebx
 00592F56    dec         esi
>00592F57    jne         00592F47
 00592F59    mov         eax,dword ptr [ebp-0C]
 00592F5C    add         eax,4
 00592F5F    mov         edx,dword ptr [ebp-8]
 00592F62    mov         ecx,dword ptr ds:[5802D0];TDictionary<System.string,Vcl.Themes.TStyleManager.TSourceInfo...
 00592F68    call        @DynArrayAsg
 00592F6D    mov         eax,edi
 00592F6F    shr         eax,1
 00592F71    shr         edi,2
 00592F74    add         eax,edi
 00592F76    mov         edx,dword ptr [ebp-0C]
 00592F79    mov         dword ptr [edx+10],eax
 00592F7C    mov         eax,dword ptr [ebp-4]
 00592F7F    test        eax,eax
>00592F81    je          00592F88
 00592F83    sub         eax,4
 00592F86    mov         eax,dword ptr [eax]
 00592F88    mov         esi,eax
 00592F8A    dec         esi
 00592F8B    test        esi,esi
>00592F8D    jl          00592FC0
 00592F8F    inc         esi
 00592F90    xor         ebx,ebx
 00592F92    mov         eax,ebx
 00592F94    add         eax,eax
 00592F96    mov         edx,dword ptr [ebp-4]
 00592F99    mov         edi,dword ptr [edx+eax*8]
 00592F9C    cmp         edi,0FFFFFFFF
>00592F9F    je          00592FBC
 00592FA1    mov         edx,dword ptr [ebp-4]
 00592FA4    lea         edx,[edx+eax*8+8]
 00592FA8    push        edx
 00592FA9    mov         edx,dword ptr [ebp-4]
 00592FAC    mov         edx,dword ptr [edx+eax*8+4]
 00592FB0    push        edx
 00592FB1    mov         edx,edi
 00592FB3    mov         eax,dword ptr [ebp-0C]
 00592FB6    pop         ecx
 00592FB7    call        0059309C
 00592FBC    inc         ebx
 00592FBD    dec         esi
>00592FBE    jne         00592F92
 00592FC0    xor         eax,eax
 00592FC2    pop         edx
 00592FC3    pop         ecx
 00592FC4    pop         ecx
 00592FC5    mov         dword ptr fs:[eax],edx
 00592FC8    push        592FE8
 00592FCD    lea         eax,[ebp-8]
 00592FD0    mov         edx,dword ptr ds:[5802D0];TDictionary<System.string,Vcl.Themes.TStyleManager.TSourceInfo...
 00592FD6    mov         ecx,2
 00592FDB    call        @FinalizeArray
 00592FE0    ret
>00592FE1    jmp         @HandleFinally
>00592FE6    jmp         00592FCD
 00592FE8    pop         edi
 00592FE9    pop         esi
 00592FEA    pop         ebx
 00592FEB    mov         esp,ebp
 00592FED    pop         ebp
 00592FEE    ret
end;*}

//00592FF0
{*function sub_00592FF0(?:?; ?:?; ?:?):?;
begin
 00592FF0    push        ebx
 00592FF1    push        esi
 00592FF2    push        edi
 00592FF3    add         esp,0FFFFFFE8
 00592FF6    mov         dword ptr [esp+4],ecx
 00592FFA    mov         dword ptr [esp],edx
 00592FFD    mov         esi,eax
 00592FFF    mov         eax,dword ptr [esi+4]
 00593002    mov         dword ptr [esp+0C],eax
 00593006    mov         eax,dword ptr [esp+0C]
 0059300A    test        eax,eax
>0059300C    je          00593013
 0059300E    sub         eax,4
 00593011    mov         eax,dword ptr [eax]
 00593013    test        eax,eax
>00593015    jne         0059301E
 00593017    mov         ebx,80000000
>0059301C    jmp         00593093
 0059301E    mov         eax,dword ptr [esi+4]
 00593021    mov         dword ptr [esp+10],eax
 00593025    mov         eax,dword ptr [esp+10]
 00593029    test        eax,eax
>0059302B    je          00593032
 0059302D    sub         eax,4
 00593030    mov         eax,dword ptr [eax]
 00593032    dec         eax
 00593033    and         eax,dword ptr [esp+4]
 00593037    mov         ebx,eax
 00593039    mov         eax,ebx
 0059303B    add         eax,eax
 0059303D    mov         edx,dword ptr [esi+4]
 00593040    mov         eax,dword ptr [edx+eax*8]
 00593043    mov         dword ptr [esp+8],eax
 00593047    cmp         dword ptr [esp+8],0FFFFFFFF
>0059304C    jne         00593052
 0059304E    not         ebx
>00593050    jmp         00593093
 00593052    mov         eax,dword ptr [esp+8]
 00593056    cmp         eax,dword ptr [esp+4]
>0059305A    jne         00593076
 0059305C    mov         eax,ebx
 0059305E    add         eax,eax
 00593060    mov         edx,dword ptr [esi+4]
 00593063    mov         edx,dword ptr [edx+eax*8+4]
 00593067    mov         ecx,dword ptr [esp]
 0059306A    mov         eax,dword ptr [esi+0C]
 0059306D    mov         edi,dword ptr [eax]
 0059306F    call        dword ptr [edi+0C]
 00593072    test        al,al
>00593074    jne         00593093
 00593076    inc         ebx
 00593077    mov         eax,dword ptr [esi+4]
 0059307A    mov         dword ptr [esp+14],eax
 0059307E    mov         edi,dword ptr [esp+14]
 00593082    test        edi,edi
>00593084    je          0059308B
 00593086    sub         edi,4
 00593089    mov         edi,dword ptr [edi]
 0059308B    cmp         edi,ebx
>0059308D    jg          00593039
 0059308F    xor         ebx,ebx
>00593091    jmp         00593039
 00593093    mov         eax,ebx
 00593095    add         esp,18
 00593098    pop         edi
 00593099    pop         esi
 0059309A    pop         ebx
 0059309B    ret
end;*}

//0059309C
{*procedure sub_0059309C(?:?; ?:?; ?:?; ?:?);
begin
 0059309C    push        ebp
 0059309D    mov         ebp,esp
 0059309F    add         esp,0FFFFFFF8
 005930A2    push        ebx
 005930A3    push        esi
 005930A4    push        edi
 005930A5    mov         dword ptr [ebp-8],ecx
 005930A8    mov         dword ptr [ebp-4],edx
 005930AB    mov         ebx,eax
 005930AD    mov         ecx,dword ptr [ebp-4]
 005930B0    mov         edx,dword ptr [ebp-8]
 005930B3    mov         eax,ebx
 005930B5    call        00592FF0
 005930BA    mov         esi,eax
 005930BC    not         esi
 005930BE    mov         edi,esi
 005930C0    add         edi,edi
 005930C2    mov         eax,dword ptr [ebx+4]
 005930C5    mov         edx,dword ptr [ebp-4]
 005930C8    mov         dword ptr [eax+edi*8],edx
 005930CB    mov         eax,dword ptr [ebx+4]
 005930CE    lea         eax,[eax+edi*8+4]
 005930D2    mov         edx,dword ptr [ebp-8]
 005930D5    call        @UStrAsg
 005930DA    mov         eax,dword ptr [ebx+4]
 005930DD    mov         edx,dword ptr [ebp+8]
 005930E0    mov         ecx,dword ptr [edx]
 005930E2    mov         dword ptr [eax+edi*8+8],ecx
 005930E6    mov         ecx,dword ptr [edx+4]
 005930E9    mov         dword ptr [eax+edi*8+0C],ecx
 005930ED    pop         edi
 005930EE    pop         esi
 005930EF    pop         ebx
 005930F0    pop         ecx
 005930F1    pop         ecx
 005930F2    pop         ebp
 005930F3    ret         4
end;*}

//005930F8
procedure sub_005930F8;
begin
{*
 005930F8    call        TDictionary<System.string,Vcl.Themes.TStyleManager.TSourceInfo>.GetEnumerator
 005930FD    ret
*}
end;

//00593100
{*procedure sub_00593100(?:?);
begin
 00593100    push        ebx
 00593101    cmp         word ptr [eax+1A],0;TDictionary<System.string,Vcl.Themes.TStyleManager.TSourceInfo>.FOnK...
>00593106    je          00593115
 00593108    push        ecx
 00593109    mov         ebx,eax
 0059310B    mov         ecx,edx
 0059310D    mov         edx,eax
 0059310F    mov         eax,dword ptr [ebx+1C];TDictionary<System.string,Vcl.Themes.TStyleManager.TSourceInfo>.F...
 00593112    call        dword ptr [ebx+18];TDictionary<System.string,Vcl.Themes.TStyleManager.TSourceInfo>.FOnKeyNotify
 00593115    pop         ebx
 00593116    ret
end;*}

//00593118
{*procedure sub_00593118(?:?);
begin
 00593118    push        esi
 00593119    mov         esi,eax
 0059311B    cmp         word ptr [esi+22],0;TDictionary<System.string,Vcl.Themes.TStyleManager.TSourceInfo>.FOnV...
>00593120    je          0059312D
 00593122    push        ecx
 00593123    mov         ecx,edx
 00593125    mov         edx,esi
 00593127    mov         eax,dword ptr [esi+24];TDictionary<System.string,Vcl.Themes.TStyleManager.TSourceInfo>.F...
 0059312A    call        dword ptr [esi+20];TDictionary<System.string,Vcl.Themes.TStyleManager.TSourceInfo>.FOnValueNotify
 0059312D    pop         esi
 0059312E    ret
end;*}

//00593130
constructor TDictionary<System.string,Vcl.Themes.TStyleManager.TSourceInfo>.Create;
begin
{*
 00593130    push        ebx
 00593131    push        esi
 00593132    test        dl,dl
>00593134    je          0059313E
 00593136    add         esp,0FFFFFFF0
 00593139    call        @ClassCreate
 0059313E    mov         ebx,edx
 00593140    mov         esi,eax
 00593142    push        0
 00593144    xor         edx,edx
 00593146    mov         eax,esi
 00593148    call        00593168
 0059314D    mov         eax,esi
 0059314F    test        bl,bl
>00593151    je          00593162
 00593153    call        @AfterConstruction
 00593158    pop         dword ptr fs:[0]
 0059315F    add         esp,0C
 00593162    mov         eax,esi
 00593164    pop         esi
 00593165    pop         ebx
 00593166    ret
*}
end;

//00593168
constructor sub_00593168(ACapacity:Integer; AComparer:IEqualityComparer<System.string>);
begin
{*
 00593168    push        ebp
 00593169    mov         ebp,esp
 0059316B    push        0
 0059316D    push        ebx
 0059316E    push        esi
 0059316F    push        edi
 00593170    test        dl,dl
>00593172    je          0059317C
 00593174    add         esp,0FFFFFFF0
 00593177    call        @ClassCreate
 0059317C    mov         esi,ecx
 0059317E    mov         ebx,edx
 00593180    mov         edi,eax
 00593182    xor         eax,eax
 00593184    push        ebp
 00593185    push        5931F7
 0059318A    push        dword ptr fs:[eax]
 0059318D    mov         dword ptr fs:[eax],esp
 00593190    xor         edx,edx
 00593192    mov         eax,edi
 00593194    call        TObject.Create
 00593199    test        esi,esi
>0059319B    jge         005931B4
 0059319D    mov         ecx,dword ptr ds:[7C4C2C];^SResString172:TResStringRec
 005931A3    mov         dl,1
 005931A5    mov         eax,[00417CF0];EArgumentOutOfRangeException
 005931AA    call        Exception.CreateRes;EArgumentOutOfRangeException.Create
 005931AF    call        @RaiseExcept
 005931B4    lea         eax,[edi+0C];TDictionary<System.string,Vcl.Themes.TStyleManager.TSourceInfo>.FComparer:I...
 005931B7    mov         edx,dword ptr [ebp+8]
 005931BA    call        @IntfCopy
 005931BF    cmp         dword ptr [edi+0C],0;TDictionary<System.string,Vcl.Themes.TStyleManager.TSourceInfo>.FCo...
>005931C3    jne         005931D8
 005931C5    lea         eax,[ebp-4]
 005931C8    call        004577BC
 005931CD    mov         edx,dword ptr [ebp-4]
 005931D0    lea         eax,[edi+0C];TDictionary<System.string,Vcl.Themes.TStyleManager.TSourceInfo>.FComparer:I...
 005931D3    call        @IntfCopy
 005931D8    mov         edx,esi
 005931DA    mov         eax,edi
 005931DC    call        00592E7C
 005931E1    xor         eax,eax
 005931E3    pop         edx
 005931E4    pop         ecx
 005931E5    pop         ecx
 005931E6    mov         dword ptr fs:[eax],edx
 005931E9    push        5931FE
 005931EE    lea         eax,[ebp-4]
 005931F1    call        @IntfClear
 005931F6    ret
>005931F7    jmp         @HandleFinally
>005931FC    jmp         005931EE
 005931FE    mov         eax,edi
 00593200    test        bl,bl
>00593202    je          00593213
 00593204    call        @AfterConstruction
 00593209    pop         dword ptr fs:[0]
 00593210    add         esp,0C
 00593213    mov         eax,edi
 00593215    pop         edi
 00593216    pop         esi
 00593217    pop         ebx
 00593218    pop         ecx
 00593219    pop         ebp
 0059321A    ret         4
*}
end;

//00593220
destructor TDictionary<System.string,Vcl.Themes.TStyleManager.TSourceInfo>.Destroy();
begin
{*
 00593220    push        ebx
 00593221    push        esi
 00593222    call        @BeforeDestruction
 00593227    mov         ebx,edx
 00593229    mov         esi,eax
 0059322B    mov         eax,esi
 0059322D    call        TDictionary<System.string,Vcl.Themes.TStyleManager.TSourceInfo>.Clear
 00593232    mov         eax,dword ptr [esi+28];TDictionary<System.string,Vcl.Themes.TStyleManager.TSourceInfo>.F...
 00593235    call        TObject.Free
 0059323A    mov         eax,dword ptr [esi+2C]
 0059323D    call        TObject.Free
 00593242    mov         dl,0FC
 00593244    and         dl,bl
 00593246    mov         eax,esi
 00593248    call        TEnumerable<Vcl.Themes.TPair<System.string,Vcl.Themes.TStyleManager.TSourceInfo>>.Destroy
 0059324D    test        bl,bl
>0059324F    jle         00593258
 00593251    mov         eax,esi
 00593253    call        @ClassDestroy
 00593258    pop         esi
 00593259    pop         ebx
 0059325A    ret
*}
end;

//0059325C
procedure TDictionary<System.string,Vcl.Themes.TStyleManager.TSourceInfo>.Clear;
begin
{*
 0059325C    push        ebp
 0059325D    mov         ebp,esp
 0059325F    add         esp,0FFFFFFF8
 00593262    push        ebx
 00593263    push        esi
 00593264    push        edi
 00593265    xor         edx,edx
 00593267    mov         dword ptr [ebp-4],edx
 0059326A    mov         esi,eax
 0059326C    xor         eax,eax
 0059326E    push        ebp
 0059326F    push        59331A
 00593274    push        dword ptr fs:[eax]
 00593277    mov         dword ptr fs:[eax],esp
 0059327A    lea         eax,[ebp-4]
 0059327D    mov         edx,dword ptr [esi+4]
 00593280    mov         ecx,dword ptr ds:[5802D0];TDictionary<System.string,Vcl.Themes.TStyleManager.TSourceInfo...
 00593286    call        @DynArrayAsg
 0059328B    xor         eax,eax
 0059328D    mov         dword ptr [esi+8],eax
 00593290    lea         eax,[esi+4]
 00593293    mov         edx,dword ptr ds:[5802D0];TDictionary<System.string,Vcl.Themes.TStyleManager.TSourceInfo...
 00593299    call        @DynArrayClear
 0059329E    xor         edx,edx
 005932A0    mov         eax,esi
 005932A2    call        00592E7C
 005932A7    xor         eax,eax
 005932A9    mov         dword ptr [esi+10],eax
 005932AC    mov         eax,dword ptr [ebp-4]
 005932AF    test        eax,eax
>005932B1    je          005932B8
 005932B3    sub         eax,4
 005932B6    mov         eax,dword ptr [eax]
 005932B8    dec         eax
 005932B9    test        eax,eax
>005932BB    jl          005932FE
 005932BD    inc         eax
 005932BE    mov         dword ptr [ebp-8],eax
 005932C1    xor         ebx,ebx
 005932C3    mov         eax,ebx
 005932C5    add         eax,eax
 005932C7    mov         edx,dword ptr [ebp-4]
 005932CA    cmp         dword ptr [edx+eax*8],0FFFFFFFF
>005932CE    je          005932F8
 005932D0    mov         eax,ebx
 005932D2    add         eax,eax
 005932D4    mov         edx,dword ptr [ebp-4]
 005932D7    mov         edx,dword ptr [edx+eax*8+4]
 005932DB    mov         cl,1
 005932DD    mov         eax,esi
 005932DF    mov         edi,dword ptr [eax]
 005932E1    call        dword ptr [edi+8]
 005932E4    mov         eax,ebx
 005932E6    add         eax,eax
 005932E8    mov         edx,dword ptr [ebp-4]
 005932EB    lea         edx,[edx+eax*8+8]
 005932EF    mov         cl,1
 005932F1    mov         eax,esi
 005932F3    mov         edi,dword ptr [eax]
 005932F5    call        dword ptr [edi+0C]
 005932F8    inc         ebx
 005932F9    dec         dword ptr [ebp-8]
>005932FC    jne         005932C3
 005932FE    xor         eax,eax
 00593300    pop         edx
 00593301    pop         ecx
 00593302    pop         ecx
 00593303    mov         dword ptr fs:[eax],edx
 00593306    push        593321
 0059330B    lea         eax,[ebp-4]
 0059330E    mov         edx,dword ptr ds:[5802D0];TDictionary<System.string,Vcl.Themes.TStyleManager.TSourceInfo...
 00593314    call        @DynArrayClear
 00593319    ret
>0059331A    jmp         @HandleFinally
>0059331F    jmp         0059330B
 00593321    pop         edi
 00593322    pop         esi
 00593323    pop         ebx
 00593324    pop         ecx
 00593325    pop         ecx
 00593326    pop         ebp
 00593327    ret
*}
end;

//00593328
{*procedure TDictionary<System.string,Vcl.Themes.TStyleManager.TSourceInfo>.ToArray(?:?);
begin
 00593328    push        ebx
 00593329    push        esi
 0059332A    mov         esi,edx
 0059332C    mov         ebx,eax
 0059332E    mov         ecx,esi
 00593330    mov         edx,dword ptr [ebx+8]
 00593333    mov         eax,ebx
 00593335    call        00592C74
 0059333A    pop         esi
 0059333B    pop         ebx
 0059333C    ret
end;*}

//00593380
function TDictionary<System.string,Vcl.Themes.TStyleManager.TSourceInfo>.GetEnumerator:TDictionary<System.string,Vcl.Themes.TStyleManager.TSourceInfo>.TPairEnumerator;
begin
{*
 00593380    mov         ecx,eax
 00593382    mov         dl,1
 00593384    mov         eax,[00581004];TDictionary<System.string,Vcl.Themes.TStyleManager.TSourceInfo>.TPairEnum...
 00593389    call        005937C4
 0059338E    ret
*}
end;

//00593398
procedure sub_00593398;
begin
{*
 00593398    call        TDictionary<System.string,Vcl.Themes.TStyleManager.TSourceInfo>.TKeyCollection.GetEnumerator
 0059339D    ret
*}
end;

//005933A0
constructor sub_005933A0(ADictionary:TDictionary<System.string,Vcl.Themes.TStyleManager.TSourceInfo>);
begin
{*
 005933A0    push        ebx
 005933A1    push        esi
 005933A2    push        edi
 005933A3    test        dl,dl
>005933A5    je          005933AF
 005933A7    add         esp,0FFFFFFF0
 005933AA    call        @ClassCreate
 005933AF    mov         esi,ecx
 005933B1    mov         ebx,edx
 005933B3    mov         edi,eax
 005933B5    xor         edx,edx
 005933B7    mov         eax,edi
 005933B9    call        TObject.Create
 005933BE    mov         dword ptr [edi+4],esi
 005933C1    mov         eax,edi
 005933C3    test        bl,bl
>005933C5    je          005933D6
 005933C7    call        @AfterConstruction
 005933CC    pop         dword ptr fs:[0]
 005933D3    add         esp,0C
 005933D6    mov         eax,edi
 005933D8    pop         edi
 005933D9    pop         esi
 005933DA    pop         ebx
 005933DB    ret
*}
end;

//005933DC
procedure TDictionary<System.string,Vcl.Themes.TStyleManager.TSourceInfo>.TKeyCollection.GetEnumerator;
begin
{*
 005933DC    mov         ecx,dword ptr [eax+4]
 005933DF    mov         dl,1
 005933E1    mov         eax,[0058042C];TDictionary<System.string,Vcl.Themes.TStyleManager.TSourceInfo>.TKeyEnume...
 005933E6    call        00593440
 005933EB    ret
*}
end;

//005933EC
{*procedure TDictionary<System.string,Vcl.Themes.TStyleManager.TSourceInfo>.TKeyCollection.ToArray(?:?);
begin
 005933EC    push        ebx
 005933ED    push        esi
 005933EE    mov         esi,edx
 005933F0    mov         ebx,eax
 005933F2    mov         ecx,esi
 005933F4    mov         eax,dword ptr [ebx+4]
 005933F7    mov         edx,dword ptr [eax+8]
 005933FA    mov         eax,ebx
 005933FC    call        00590BC0
 00593401    pop         esi
 00593402    pop         ebx
 00593403    ret
end;*}

//00593404
{*procedure sub_00593404(?:TDictionary<System.string,Vcl.Themes.TStyleManager.TSourceInfo>.TKeyEnumerator; ?:?);
begin
 00593404    push        ebx
 00593405    push        esi
 00593406    mov         esi,edx
 00593408    mov         ebx,eax
 0059340A    mov         eax,esi
 0059340C    mov         edx,dword ptr [ebx+8]
 0059340F    add         edx,edx
 00593411    mov         ecx,dword ptr [ebx+4]
 00593414    mov         ecx,dword ptr [ecx+4]
 00593417    mov         edx,dword ptr [ecx+edx*8+4]
 0059341B    call        @UStrAsg
 00593420    pop         esi
 00593421    pop         ebx
 00593422    ret
end;*}

//00593424
{*procedure sub_00593424(?:?);
begin
 00593424    push        ebx
 00593425    push        esi
 00593426    mov         esi,edx
 00593428    mov         ebx,eax
 0059342A    mov         edx,esi
 0059342C    mov         eax,ebx
 0059342E    call        00593404
 00593433    pop         esi
 00593434    pop         ebx
 00593435    ret
end;*}

//00593438
procedure sub_00593438;
begin
{*
 00593438    call        TDictionary<System.string,Vcl.Themes.TStyleManager.TSourceInfo>.TKeyEnumerator.MoveNext
 0059343D    ret
*}
end;

//00593440
constructor sub_00593440(ADictionary:TDictionary<System.string,Vcl.Themes.TStyleManager.TSourceInfo>);
begin
{*
 00593440    push        ebx
 00593441    push        esi
 00593442    push        edi
 00593443    test        dl,dl
>00593445    je          0059344F
 00593447    add         esp,0FFFFFFF0
 0059344A    call        @ClassCreate
 0059344F    mov         esi,ecx
 00593451    mov         ebx,edx
 00593453    mov         edi,eax
 00593455    xor         edx,edx
 00593457    mov         eax,edi
 00593459    call        TObject.Create
 0059345E    mov         dword ptr [edi+8],0FFFFFFFF
 00593465    mov         dword ptr [edi+4],esi;TDictionary<System.string,Vcl.Themes.TStyleManager.TSourceInfo>.TK...
 00593468    mov         eax,edi
 0059346A    test        bl,bl
>0059346C    je          0059347D
 0059346E    call        @AfterConstruction
 00593473    pop         dword ptr fs:[0]
 0059347A    add         esp,0C
 0059347D    mov         eax,edi
 0059347F    pop         edi
 00593480    pop         esi
 00593481    pop         ebx
 00593482    ret
*}
end;

//00593484
function TDictionary<System.string,Vcl.Themes.TStyleManager.TSourceInfo>.TKeyEnumerator.MoveNext:Boolean;
begin
{*
 00593484    push        ebx
 00593485    push        esi
 00593486    mov         esi,eax
>00593488    jmp         005934A2
 0059348A    inc         dword ptr [esi+8]
 0059348D    mov         eax,dword ptr [esi+8]
 00593490    add         eax,eax
 00593492    mov         edx,dword ptr [esi+4]
 00593495    mov         edx,dword ptr [edx+4]
 00593498    cmp         dword ptr [edx+eax*8],0FFFFFFFF
>0059349C    je          005934A2
 0059349E    mov         bl,1
>005934A0    jmp         005934B5
 005934A2    mov         eax,dword ptr [esi+4]
 005934A5    mov         eax,dword ptr [eax+4]
 005934A8    call        0040ABA8
 005934AD    dec         eax
 005934AE    cmp         eax,dword ptr [esi+8]
>005934B1    jg          0059348A
 005934B3    xor         ebx,ebx
 005934B5    mov         eax,ebx
 005934B7    pop         esi
 005934B8    pop         ebx
 005934B9    ret
*}
end;

//005934BC
{*procedure sub_005934BC(?:TDictionary<System; ?:?; ?:?);
begin
 005934BC    push        ebp
 005934BD    mov         ebp,esp
 005934BF    add         esp,0FFFFFFF0
 005934C2    push        ebx
 005934C3    push        esi
 005934C4    push        edi
 005934C5    mov         dword ptr [ebp-4],ecx
 005934C8    mov         ebx,edx
 005934CA    mov         esi,eax
 005934CC    lea         edi,[ebp-0C]
 005934CF    push        ebx
 005934D0    mov         eax,dword ptr [ebp-4]
 005934D3    mov         ecx,1
 005934D8    mov         edx,dword ptr ds:[580870];TArray<Vcl.Themes.TStyleManager.TSourceInfo>
 005934DE    call        @DynArraySetLength
 005934E3    add         esp,4
 005934E6    xor         ebx,ebx
 005934E8    mov         eax,esi
 005934EA    call        TEnumerable<Vcl.Themes.TStyleManager.TSourceInfo>.GetEnumerator
 005934EF    mov         dword ptr [ebp-10],eax
 005934F2    xor         eax,eax
 005934F4    push        ebp
 005934F5    push        593547
 005934FA    push        dword ptr fs:[eax]
 005934FD    mov         dword ptr fs:[eax],esp
>00593500    jmp         0059351D
 00593502    mov         edx,edi
 00593504    mov         eax,dword ptr [ebp-10]
 00593507    mov         ecx,dword ptr [eax]
 00593509    call        dword ptr [ecx]
 0059350B    mov         eax,dword ptr [ebp-4]
 0059350E    mov         eax,dword ptr [eax]
 00593510    mov         edx,dword ptr [edi]
 00593512    mov         dword ptr [eax+ebx*8],edx
 00593515    mov         edx,dword ptr [edi+4]
 00593518    mov         dword ptr [eax+ebx*8+4],edx
 0059351C    inc         ebx
 0059351D    mov         eax,dword ptr [ebp-10]
 00593520    call        TEnumerator<Vcl.Themes.TStyleManager.TSourceInfo>.MoveNext
 00593525    test        al,al
>00593527    jne         00593502
 00593529    xor         eax,eax
 0059352B    pop         edx
 0059352C    pop         ecx
 0059352D    pop         ecx
 0059352E    mov         dword ptr fs:[eax],edx
 00593531    push        59354E
 00593536    cmp         dword ptr [ebp-10],0
>0059353A    je          00593546
 0059353C    mov         dl,1
 0059353E    mov         eax,dword ptr [ebp-10]
 00593541    mov         ecx,dword ptr [eax]
 00593543    call        dword ptr [ecx-4]
 00593546    ret
>00593547    jmp         @HandleFinally
>0059354C    jmp         00593536
 0059354E    pop         edi
 0059354F    pop         esi
 00593550    pop         ebx
 00593551    mov         esp,ebp
 00593553    pop         ebp
 00593554    ret
end;*}

//00593558
destructor TEnumerable<Vcl.Themes.TStyleManager.TSourceInfo>.Destroy();
begin
{*
 00593558    push        ebx
 00593559    push        esi
 0059355A    call        @BeforeDestruction
 0059355F    mov         ebx,edx
 00593561    mov         esi,eax
 00593563    mov         dl,0FC
 00593565    and         dl,bl
 00593567    mov         eax,esi
 00593569    call        TObject.Destroy
 0059356E    test        bl,bl
>00593570    jle         00593579
 00593572    mov         eax,esi
 00593574    call        @ClassDestroy
 00593579    pop         esi
 0059357A    pop         ebx
 0059357B    ret
*}
end;

//0059357C
function TEnumerable<Vcl.Themes.TStyleManager.TSourceInfo>.GetEnumerator:TEnumerator<Vcl.Themes.TStyleManager.TSourceInfo>;
begin
{*
 0059357C    mov         edx,dword ptr [eax]
 0059357E    call        dword ptr [edx]
 00593580    ret
*}
end;

//00593584
{*procedure TEnumerable<Vcl.Themes.TStyleManager.TSourceInfo>.ToArray(?:?);
begin
 00593584    push        ebp
 00593585    mov         ebp,esp
 00593587    add         esp,0FFFFFFEC
 0059358A    push        ebx
 0059358B    push        esi
 0059358C    mov         dword ptr [ebp-4],edx
 0059358F    mov         ebx,eax
 00593591    lea         esi,[ebp-10]
 00593594    mov         dl,1
 00593596    mov         eax,[005A3534];TList<Vcl.Themes.TStyleManager.TSourceInfo>
 0059359B    call        00596CF0
 005935A0    mov         dword ptr [ebp-8],eax
 005935A3    xor         eax,eax
 005935A5    push        ebp
 005935A6    push        593630
 005935AB    push        dword ptr fs:[eax]
 005935AE    mov         dword ptr fs:[eax],esp
 005935B1    mov         eax,ebx
 005935B3    call        TEnumerable<Vcl.Themes.TStyleManager.TSourceInfo>.GetEnumerator
 005935B8    mov         dword ptr [ebp-14],eax
 005935BB    xor         eax,eax
 005935BD    push        ebp
 005935BE    push        593608
 005935C3    push        dword ptr fs:[eax]
 005935C6    mov         dword ptr fs:[eax],esp
>005935C9    jmp         005935DE
 005935CB    mov         edx,esi
 005935CD    mov         eax,dword ptr [ebp-14]
 005935D0    mov         ecx,dword ptr [eax]
 005935D2    call        dword ptr [ecx]
 005935D4    mov         edx,esi
 005935D6    mov         eax,dword ptr [ebp-8]
 005935D9    call        TList<Vcl.Themes.TStyleManager.TSourceInfo>.Add
 005935DE    mov         eax,dword ptr [ebp-14]
 005935E1    call        TEnumerator<Vcl.Themes.TStyleManager.TSourceInfo>.MoveNext
 005935E6    test        al,al
>005935E8    jne         005935CB
 005935EA    xor         eax,eax
 005935EC    pop         edx
 005935ED    pop         ecx
 005935EE    pop         ecx
 005935EF    mov         dword ptr fs:[eax],edx
 005935F2    push        59360F
 005935F7    cmp         dword ptr [ebp-14],0
>005935FB    je          00593607
 005935FD    mov         dl,1
 005935FF    mov         eax,dword ptr [ebp-14]
 00593602    mov         ecx,dword ptr [eax]
 00593604    call        dword ptr [ecx-4]
 00593607    ret
>00593608    jmp         @HandleFinally
>0059360D    jmp         005935F7
 0059360F    mov         edx,dword ptr [ebp-4]
 00593612    mov         eax,dword ptr [ebp-8]
 00593615    call        TList<Vcl.Themes.TStyleManager.TSourceInfo>.ToArray
 0059361A    xor         eax,eax
 0059361C    pop         edx
 0059361D    pop         ecx
 0059361E    pop         ecx
 0059361F    mov         dword ptr fs:[eax],edx
 00593622    push        593637
 00593627    mov         eax,dword ptr [ebp-8]
 0059362A    call        TObject.Free
 0059362F    ret
>00593630    jmp         @HandleFinally
>00593635    jmp         00593627
 00593637    pop         esi
 00593638    pop         ebx
 00593639    mov         esp,ebp
 0059363B    pop         ebp
 0059363C    ret
end;*}

//00593640
function TEnumerator<Vcl.Themes.TStyleManager.TSourceInfo>.MoveNext:Boolean;
begin
{*
 00593640    mov         edx,dword ptr [eax]
 00593642    call        dword ptr [edx+4]
 00593645    ret
*}
end;

//00593650
procedure sub_00593650;
begin
{*
 00593650    call        TDictionary<System.string,Vcl.Themes.TStyleManager.TSourceInfo>.TValueCollection.GetEnumerator
 00593655    ret
*}
end;

//00593658
constructor sub_00593658(ADictionary:TDictionary<System.string,Vcl.Themes.TStyleManager.TSourceInfo>);
begin
{*
 00593658    push        ebx
 00593659    push        esi
 0059365A    push        edi
 0059365B    test        dl,dl
>0059365D    je          00593667
 0059365F    add         esp,0FFFFFFF0
 00593662    call        @ClassCreate
 00593667    mov         esi,ecx
 00593669    mov         ebx,edx
 0059366B    mov         edi,eax
 0059366D    xor         edx,edx
 0059366F    mov         eax,edi
 00593671    call        TObject.Create
 00593676    mov         dword ptr [edi+4],esi
 00593679    mov         eax,edi
 0059367B    test        bl,bl
>0059367D    je          0059368E
 0059367F    call        @AfterConstruction
 00593684    pop         dword ptr fs:[0]
 0059368B    add         esp,0C
 0059368E    mov         eax,edi
 00593690    pop         edi
 00593691    pop         esi
 00593692    pop         ebx
 00593693    ret
*}
end;

//00593694
procedure TDictionary<System.string,Vcl.Themes.TStyleManager.TSourceInfo>.TValueCollection.GetEnumerator;
begin
{*
 00593694    mov         ecx,dword ptr [eax+4]
 00593697    mov         dl,1
 00593699    mov         eax,[00580BB8];TDictionary<System.string,Vcl.Themes.TStyleManager.TSourceInfo>.TValueEnu...
 0059369E    call        005936F4
 005936A3    ret
*}
end;

//005936A4
{*procedure TDictionary<System.string,Vcl.Themes.TStyleManager.TSourceInfo>.TValueCollection.ToArray(?:?);
begin
 005936A4    push        ebx
 005936A5    push        esi
 005936A6    mov         esi,edx
 005936A8    mov         ebx,eax
 005936AA    mov         ecx,esi
 005936AC    mov         eax,dword ptr [ebx+4]
 005936AF    mov         edx,dword ptr [eax+8]
 005936B2    mov         eax,ebx
 005936B4    call        005934BC
 005936B9    pop         esi
 005936BA    pop         ebx
 005936BB    ret
end;*}

//005936BC
{*procedure sub_005936BC(?:TDictionary<System.string,Vcl.Themes.TStyleManager.TSourceInfo>.TValueEnumerator; ?:?);
begin
 005936BC    push        ebx
 005936BD    mov         ecx,dword ptr [eax+8]
 005936C0    add         ecx,ecx
 005936C2    mov         eax,dword ptr [eax+4]
 005936C5    mov         eax,dword ptr [eax+4]
 005936C8    mov         ebx,dword ptr [eax+ecx*8+8]
 005936CC    mov         dword ptr [edx],ebx
 005936CE    mov         ebx,dword ptr [eax+ecx*8+0C]
 005936D2    mov         dword ptr [edx+4],ebx
 005936D5    pop         ebx
 005936D6    ret
end;*}

//005936D8
{*procedure sub_005936D8(?:?);
begin
 005936D8    push        ebx
 005936D9    push        esi
 005936DA    mov         esi,edx
 005936DC    mov         ebx,eax
 005936DE    mov         edx,esi
 005936E0    mov         eax,ebx
 005936E2    call        005936BC
 005936E7    pop         esi
 005936E8    pop         ebx
 005936E9    ret
end;*}

//005936EC
procedure sub_005936EC;
begin
{*
 005936EC    call        TDictionary<System.string,Vcl.Themes.TStyleManager.TSourceInfo>.TValueEnumerator.MoveNext
 005936F1    ret
*}
end;

//005936F4
constructor sub_005936F4(ADictionary:TDictionary<System.string,Vcl.Themes.TStyleManager.TSourceInfo>);
begin
{*
 005936F4    push        ebx
 005936F5    push        esi
 005936F6    push        edi
 005936F7    test        dl,dl
>005936F9    je          00593703
 005936FB    add         esp,0FFFFFFF0
 005936FE    call        @ClassCreate
 00593703    mov         esi,ecx
 00593705    mov         ebx,edx
 00593707    mov         edi,eax
 00593709    xor         edx,edx
 0059370B    mov         eax,edi
 0059370D    call        TObject.Create
 00593712    mov         dword ptr [edi+8],0FFFFFFFF
 00593719    mov         dword ptr [edi+4],esi;TDictionary<System.string,Vcl.Themes.TStyleManager.TSourceInfo>.TV...
 0059371C    mov         eax,edi
 0059371E    test        bl,bl
>00593720    je          00593731
 00593722    call        @AfterConstruction
 00593727    pop         dword ptr fs:[0]
 0059372E    add         esp,0C
 00593731    mov         eax,edi
 00593733    pop         edi
 00593734    pop         esi
 00593735    pop         ebx
 00593736    ret
*}
end;

//00593738
function TDictionary<System.string,Vcl.Themes.TStyleManager.TSourceInfo>.TValueEnumerator.MoveNext:Boolean;
begin
{*
 00593738    push        ebx
 00593739    push        esi
 0059373A    mov         esi,eax
>0059373C    jmp         00593756
 0059373E    inc         dword ptr [esi+8]
 00593741    mov         eax,dword ptr [esi+8]
 00593744    add         eax,eax
 00593746    mov         edx,dword ptr [esi+4]
 00593749    mov         edx,dword ptr [edx+4]
 0059374C    cmp         dword ptr [edx+eax*8],0FFFFFFFF
>00593750    je          00593756
 00593752    mov         bl,1
>00593754    jmp         00593769
 00593756    mov         eax,dword ptr [esi+4]
 00593759    mov         eax,dword ptr [eax+4]
 0059375C    call        0040ABA8
 00593761    dec         eax
 00593762    cmp         eax,dword ptr [esi+8]
>00593765    jg          0059373E
 00593767    xor         ebx,ebx
 00593769    mov         eax,ebx
 0059376B    pop         esi
 0059376C    pop         ebx
 0059376D    ret
*}
end;

//00593770
{*procedure sub_00593770(?:TDictionary<System.string,Vcl.Themes.TStyleManager.TSourceInfo>.TPairEnumerator; ?:?);
begin
 00593770    push        ebx
 00593771    push        esi
 00593772    mov         esi,edx
 00593774    mov         ebx,eax
 00593776    mov         eax,esi
 00593778    mov         edx,dword ptr [ebx+8]
 0059377B    add         edx,edx
 0059377D    mov         ecx,dword ptr [ebx+4]
 00593780    mov         ecx,dword ptr [ecx+4]
 00593783    mov         edx,dword ptr [ecx+edx*8+4]
 00593787    call        @UStrAsg
 0059378C    mov         eax,dword ptr [ebx+8]
 0059378F    add         eax,eax
 00593791    mov         edx,dword ptr [ebx+4]
 00593794    mov         edx,dword ptr [edx+4]
 00593797    mov         ecx,dword ptr [edx+eax*8+8]
 0059379B    mov         dword ptr [esi+4],ecx
 0059379E    mov         ecx,dword ptr [edx+eax*8+0C]
 005937A2    mov         dword ptr [esi+8],ecx
 005937A5    pop         esi
 005937A6    pop         ebx
 005937A7    ret
end;*}

//005937A8
{*procedure sub_005937A8(?:?);
begin
 005937A8    push        ebx
 005937A9    push        esi
 005937AA    mov         esi,edx
 005937AC    mov         ebx,eax
 005937AE    mov         edx,esi
 005937B0    mov         eax,ebx
 005937B2    call        00593770
 005937B7    pop         esi
 005937B8    pop         ebx
 005937B9    ret
end;*}

//005937BC
procedure sub_005937BC;
begin
{*
 005937BC    call        TDictionary<System.string,Vcl.Themes.TStyleManager.TSourceInfo>.TPairEnumerator.MoveNext
 005937C1    ret
*}
end;

//005937C4
constructor sub_005937C4(ADictionary:TDictionary<System.string,Vcl.Themes.TStyleManager.TSourceInfo>);
begin
{*
 005937C4    push        ebx
 005937C5    push        esi
 005937C6    push        edi
 005937C7    test        dl,dl
>005937C9    je          005937D3
 005937CB    add         esp,0FFFFFFF0
 005937CE    call        @ClassCreate
 005937D3    mov         esi,ecx
 005937D5    mov         ebx,edx
 005937D7    mov         edi,eax
 005937D9    xor         edx,edx
 005937DB    mov         eax,edi
 005937DD    call        TObject.Create
 005937E2    mov         dword ptr [edi+8],0FFFFFFFF
 005937E9    mov         dword ptr [edi+4],esi;TDictionary<System.string,Vcl.Themes.TStyleManager.TSourceInfo>.TP...
 005937EC    mov         eax,edi
 005937EE    test        bl,bl
>005937F0    je          00593801
 005937F2    call        @AfterConstruction
 005937F7    pop         dword ptr fs:[0]
 005937FE    add         esp,0C
 00593801    mov         eax,edi
 00593803    pop         edi
 00593804    pop         esi
 00593805    pop         ebx
 00593806    ret
*}
end;

//00593808
function TDictionary<System.string,Vcl.Themes.TStyleManager.TSourceInfo>.TPairEnumerator.MoveNext:Boolean;
begin
{*
 00593808    push        ebx
 00593809    push        esi
 0059380A    mov         esi,eax
>0059380C    jmp         00593826
 0059380E    inc         dword ptr [esi+8]
 00593811    mov         eax,dword ptr [esi+8]
 00593814    add         eax,eax
 00593816    mov         edx,dword ptr [esi+4]
 00593819    mov         edx,dword ptr [edx+4]
 0059381C    cmp         dword ptr [edx+eax*8],0FFFFFFFF
>00593820    je          00593826
 00593822    mov         bl,1
>00593824    jmp         00593839
 00593826    mov         eax,dword ptr [esi+4]
 00593829    mov         eax,dword ptr [eax+4]
 0059382C    call        0040ABA8
 00593831    dec         eax
 00593832    cmp         eax,dword ptr [esi+8]
>00593835    jg          0059380E
 00593837    xor         ebx,ebx
 00593839    mov         eax,ebx
 0059383B    pop         esi
 0059383C    pop         ebx
 0059383D    ret
*}
end;

//00593840
destructor TEnumerable<Vcl.Themes.TStyleManager.TStyleClassDescriptor>.Destroy();
begin
{*
 00593840    push        ebx
 00593841    push        esi
 00593842    call        @BeforeDestruction
 00593847    mov         ebx,edx
 00593849    mov         esi,eax
 0059384B    mov         dl,0FC
 0059384D    and         dl,bl
 0059384F    mov         eax,esi
 00593851    call        TObject.Destroy
 00593856    test        bl,bl
>00593858    jle         00593861
 0059385A    mov         eax,esi
 0059385C    call        @ClassDestroy
 00593861    pop         esi
 00593862    pop         ebx
 00593863    ret
*}
end;

//00593864
function TEnumerable<Vcl.Themes.TStyleManager.TStyleClassDescriptor>.GetEnumerator:TEnumerator<Vcl.Themes.TStyleManager.TStyleClassDescriptor>;
begin
{*
 00593864    mov         edx,dword ptr [eax]
 00593866    call        dword ptr [edx]
 00593868    ret
*}
end;

//0059386C
{*procedure TEnumerable<Vcl.Themes.TStyleManager.TStyleClassDescriptor>.ToArray(?:?);
begin
 0059386C    push        ebp
 0059386D    mov         ebp,esp
 0059386F    add         esp,0FFFFFFE4
 00593872    push        ebx
 00593873    mov         dword ptr [ebp-14],edx
 00593876    mov         ebx,eax
 00593878    lea         eax,[ebp-10]
 0059387B    mov         edx,dword ptr ds:[573C30];TStyleManager.TStyleClassDescriptor
 00593881    call        @AddRefRecord
 00593886    xor         eax,eax
 00593888    push        ebp
 00593889    push        593955
 0059388E    push        dword ptr fs:[eax]
 00593891    mov         dword ptr fs:[eax],esp
 00593894    mov         dl,1
 00593896    mov         eax,[005821EC];TList<Vcl.Themes.TStyleManager.TStyleClassDescriptor>
 0059389B    call        TList<Vcl.Themes.TStyleManager.TStyleClassDescriptor>.Create
 005938A0    mov         dword ptr [ebp-18],eax
 005938A3    xor         eax,eax
 005938A5    push        ebp
 005938A6    push        593932
 005938AB    push        dword ptr fs:[eax]
 005938AE    mov         dword ptr fs:[eax],esp
 005938B1    mov         eax,ebx
 005938B3    call        TEnumerable<Vcl.Themes.TStyleManager.TStyleClassDescriptor>.GetEnumerator
 005938B8    mov         dword ptr [ebp-1C],eax
 005938BB    xor         eax,eax
 005938BD    push        ebp
 005938BE    push        59390A
 005938C3    push        dword ptr fs:[eax]
 005938C6    mov         dword ptr fs:[eax],esp
>005938C9    jmp         005938E0
 005938CB    lea         edx,[ebp-10]
 005938CE    mov         eax,dword ptr [ebp-1C]
 005938D1    mov         ecx,dword ptr [eax]
 005938D3    call        dword ptr [ecx]
 005938D5    lea         edx,[ebp-10]
 005938D8    mov         eax,dword ptr [ebp-18]
 005938DB    call        TList<Vcl.Themes.TStyleManager.TStyleClassDescriptor>.Add
 005938E0    mov         eax,dword ptr [ebp-1C]
 005938E3    call        TEnumerator<Vcl.Themes.TStyleManager.TStyleClassDescriptor>.MoveNext
 005938E8    test        al,al
>005938EA    jne         005938CB
 005938EC    xor         eax,eax
 005938EE    pop         edx
 005938EF    pop         ecx
 005938F0    pop         ecx
 005938F1    mov         dword ptr fs:[eax],edx
 005938F4    push        593911
 005938F9    cmp         dword ptr [ebp-1C],0
>005938FD    je          00593909
 005938FF    mov         dl,1
 00593901    mov         eax,dword ptr [ebp-1C]
 00593904    mov         ecx,dword ptr [eax]
 00593906    call        dword ptr [ecx-4]
 00593909    ret
>0059390A    jmp         @HandleFinally
>0059390F    jmp         005938F9
 00593911    mov         edx,dword ptr [ebp-14]
 00593914    mov         eax,dword ptr [ebp-18]
 00593917    call        TList<Vcl.Themes.TStyleManager.TStyleClassDescriptor>.ToArray
 0059391C    xor         eax,eax
 0059391E    pop         edx
 0059391F    pop         ecx
 00593920    pop         ecx
 00593921    mov         dword ptr fs:[eax],edx
 00593924    push        593939
 00593929    mov         eax,dword ptr [ebp-18]
 0059392C    call        TObject.Free
 00593931    ret
>00593932    jmp         @HandleFinally
>00593937    jmp         00593929
 00593939    xor         eax,eax
 0059393B    pop         edx
 0059393C    pop         ecx
 0059393D    pop         ecx
 0059393E    mov         dword ptr fs:[eax],edx
 00593941    push        59395C
 00593946    lea         eax,[ebp-10]
 00593949    mov         edx,dword ptr ds:[573C30];TStyleManager.TStyleClassDescriptor
 0059394F    call        @FinalizeRecord
 00593954    ret
>00593955    jmp         @HandleFinally
>0059395A    jmp         00593946
 0059395C    pop         ebx
 0059395D    mov         esp,ebp
 0059395F    pop         ebp
 00593960    ret
end;*}

//00593964
function TEnumerator<Vcl.Themes.TStyleManager.TStyleClassDescriptor>.MoveNext:Boolean;
begin
{*
 00593964    mov         edx,dword ptr [eax]
 00593966    call        dword ptr [edx+4]
 00593969    ret
*}
end;

//005939B4
procedure sub_005939B4(?:TList<Vcl.Themes.TStyleManager.TStyleClassDescriptor>);
begin
{*
 005939B4    add         eax,8
 005939B7    call        00435860
 005939BC    ret
*}
end;

//005939C0
{*procedure sub_005939C0(?:?);
begin
 005939C0    push        ebx
 005939C1    push        esi
 005939C2    mov         esi,eax
 005939C4    mov         eax,esi
 005939C6    mov         ebx,dword ptr [eax]
 005939C8    call        dword ptr [ebx+8]
 005939CB    pop         esi
 005939CC    pop         ebx
 005939CD    ret
end;*}

//005939D0
{*procedure sub_005939D0(?:?);
begin
 005939D0    push        ebx
 005939D1    push        esi
 005939D2    mov         esi,eax
 005939D4    mov         eax,dword ptr [esi+24]
 005939D7    mov         ebx,dword ptr [eax]
 005939D9    call        dword ptr [ebx+0C]
 005939DC    pop         esi
 005939DD    pop         ebx
 005939DE    ret
end;*}

//005939E0
procedure sub_005939E0;
begin
{*
 005939E0    call        TList<Vcl.Themes.TStyleManager.TStyleClassDescriptor>.GetEnumerator
 005939E5    ret
*}
end;

//005939E8
{*procedure sub_005939E8(?:?);
begin
 005939E8    push        esi
 005939E9    mov         esi,eax
 005939EB    cmp         word ptr [esi+2A],0
>005939F0    je          005939FD
 005939F2    push        ecx
 005939F3    mov         ecx,edx
 005939F5    mov         edx,esi
 005939F7    mov         eax,dword ptr [esi+2C]
 005939FA    call        dword ptr [esi+28]
 005939FD    pop         esi
 005939FE    ret
end;*}

//00593A00
constructor TList<Vcl.Themes.TStyleManager.TStyleClassDescriptor>.Create();
begin
{*
 00593A00    push        ebp
 00593A01    mov         ebp,esp
 00593A03    push        0
 00593A05    push        ebx
 00593A06    push        esi
 00593A07    test        dl,dl
>00593A09    je          00593A13
 00593A0B    add         esp,0FFFFFFF0
 00593A0E    call        @ClassCreate
 00593A13    mov         ebx,edx
 00593A15    mov         esi,eax
 00593A17    xor         eax,eax
 00593A19    push        ebp
 00593A1A    push        593A54
 00593A1F    push        dword ptr fs:[eax]
 00593A22    mov         dword ptr fs:[eax],esp
 00593A25    lea         edx,[ebp-4]
 00593A28    mov         eax,[005A4320];TComparer<Vcl.Themes.TStyleManager.TStyleClassDescriptor>
 00593A2D    call        TComparer<Vcl.Themes.TStyleManager.TStyleClassDescriptor>.Default
 00593A32    mov         ecx,dword ptr [ebp-4]
 00593A35    xor         edx,edx
 00593A37    mov         eax,esi
 00593A39    call        00593A78
 00593A3E    xor         eax,eax
 00593A40    pop         edx
 00593A41    pop         ecx
 00593A42    pop         ecx
 00593A43    mov         dword ptr fs:[eax],edx
 00593A46    push        593A5B
 00593A4B    lea         eax,[ebp-4]
 00593A4E    call        @IntfClear
 00593A53    ret
>00593A54    jmp         @HandleFinally
>00593A59    jmp         00593A4B
 00593A5B    mov         eax,esi
 00593A5D    test        bl,bl
>00593A5F    je          00593A70
 00593A61    call        @AfterConstruction
 00593A66    pop         dword ptr fs:[0]
 00593A6D    add         esp,0C
 00593A70    mov         eax,esi
 00593A72    pop         esi
 00593A73    pop         ebx
 00593A74    pop         ecx
 00593A75    pop         ebp
 00593A76    ret
*}
end;

//00593A78
constructor sub_00593A78(AComparer:IComparer<Vcl.Themes.TStyleManager.TStyleClassDescriptor>);
begin
{*
 00593A78    push        ebp
 00593A79    mov         ebp,esp
 00593A7B    push        0
 00593A7D    push        ebx
 00593A7E    push        esi
 00593A7F    push        edi
 00593A80    test        dl,dl
>00593A82    je          00593A8C
 00593A84    add         esp,0FFFFFFF0
 00593A87    call        @ClassCreate
 00593A8C    mov         esi,ecx
 00593A8E    mov         ebx,edx
 00593A90    mov         edi,eax
 00593A92    xor         eax,eax
 00593A94    push        ebp
 00593A95    push        593B03
 00593A9A    push        dword ptr fs:[eax]
 00593A9D    mov         dword ptr fs:[eax],esp
 00593AA0    xor         edx,edx
 00593AA2    mov         eax,edi
 00593AA4    call        TObject.Create
 00593AA9    mov         dword ptr [edi+14],edi;TList<Vcl.Themes.TStyleManager.TStyleClassDescriptor>.FOnNotify:T...
 00593AAC    mov         dword ptr [edi+10],5939C0;TList<Vcl.Themes.TStyleManager.TStyleClassDescriptor>.FOnNotif...
 00593AB3    mov         dword ptr [edi+1C],edi
 00593AB6    mov         dword ptr [edi+18],5939D0;sub_005939D0
 00593ABD    mov         eax,[00581D50];TList<Vcl.Themes.TStyleManager.TStyleClassDescriptor>.arrayofT
 00593AC2    mov         dword ptr [edi+0C],eax;TList<Vcl.Themes.TStyleManager.TStyleClassDescriptor>.FComparer:I...
 00593AC5    lea         eax,[edi+24]
 00593AC8    mov         edx,esi
 00593ACA    call        @IntfCopy
 00593ACF    cmp         dword ptr [edi+24],0
>00593AD3    jne         00593AED
 00593AD5    lea         edx,[ebp-4]
 00593AD8    mov         eax,[005A4320];TComparer<Vcl.Themes.TStyleManager.TStyleClassDescriptor>
 00593ADD    call        TComparer<Vcl.Themes.TStyleManager.TStyleClassDescriptor>.Default
 00593AE2    mov         edx,dword ptr [ebp-4]
 00593AE5    lea         eax,[edi+24]
 00593AE8    call        @IntfCopy
 00593AED    xor         eax,eax
 00593AEF    pop         edx
 00593AF0    pop         ecx
 00593AF1    pop         ecx
 00593AF2    mov         dword ptr fs:[eax],edx
 00593AF5    push        593B0A
 00593AFA    lea         eax,[ebp-4]
 00593AFD    call        @IntfClear
 00593B02    ret
>00593B03    jmp         @HandleFinally
>00593B08    jmp         00593AFA
 00593B0A    mov         eax,edi
 00593B0C    test        bl,bl
>00593B0E    je          00593B1F
 00593B10    call        @AfterConstruction
 00593B15    pop         dword ptr fs:[0]
 00593B1C    add         esp,0C
 00593B1F    mov         eax,edi
 00593B21    pop         edi
 00593B22    pop         esi
 00593B23    pop         ebx
 00593B24    pop         ecx
 00593B25    pop         ebp
 00593B26    ret
*}
end;

//00593B28
destructor TList<Vcl.Themes.TStyleManager.TStyleClassDescriptor>.Destroy();
begin
{*
 00593B28    push        ebx
 00593B29    push        esi
 00593B2A    call        @BeforeDestruction
 00593B2F    mov         ebx,edx
 00593B31    mov         esi,eax
 00593B33    cmp         dword ptr [esi+8],0;TList<Vcl.Themes.TStyleManager.TStyleClassDescriptor>.FCount:Integer
>00593B37    jle         00593B42
 00593B39    xor         edx,edx
 00593B3B    mov         eax,esi
 00593B3D    call        005939B4
 00593B42    push        0
 00593B44    lea         eax,[esi+20]
 00593B47    mov         ecx,1
 00593B4C    mov         edx,dword ptr ds:[581D50];TList<Vcl.Themes.TStyleManager.TStyleClassDescriptor>.arrayofT
 00593B52    call        @DynArraySetLength
 00593B57    add         esp,4
 00593B5A    mov         dl,0FC
 00593B5C    and         dl,bl
 00593B5E    mov         eax,esi
 00593B60    call        TEnumerable<Vcl.Themes.TStyleManager.TStyleClassDescriptor>.Destroy
 00593B65    test        bl,bl
>00593B67    jle         00593B70
 00593B69    mov         eax,esi
 00593B6B    call        @ClassDestroy
 00593B70    pop         esi
 00593B71    pop         ebx
 00593B72    ret
*}
end;

//00593B74
{*procedure TList<Vcl.Themes.TStyleManager.TStyleClassDescriptor>.Error(Msg:string; Data:NativeInt; ?:?);
begin
 00593B74    push        ebp
 00593B75    mov         ebp,esp
 00593B77    add         esp,0FFFFFFF0
 00593B7A    mov         dword ptr [ebp-8],ecx
 00593B7D    mov         dword ptr [ebp-4],edx
 00593B80    push        dword ptr [ebp+4]
 00593B83    mov         eax,dword ptr [ebp-8]
 00593B86    mov         dword ptr [ebp-10],eax
 00593B89    mov         byte ptr [ebp-0C],0
 00593B8D    lea         eax,[ebp-10]
 00593B90    push        eax
 00593B91    push        0
 00593B93    mov         ecx,dword ptr [ebp-4]
 00593B96    mov         dl,1
 00593B98    mov         eax,[004180BC];EListError
 00593B9D    call        Exception.CreateFmt;EListError.Create
>00593BA2    jmp         @RaiseExcept
end;*}

//00593BAC
procedure TList<Vcl.Themes.TStyleManager.TStyleClassDescriptor>.Add(Value:TStyleManager.TStyleClassDescriptor);
begin
{*
 00593BAC    push        ecx
 00593BAD    mov         dword ptr [esp],edx
 00593BB0    mov         edx,dword ptr [esp]
 00593BB3    add         eax,8
 00593BB6    call        0043492C
 00593BBB    pop         edx
 00593BBC    ret
*}
end;

//00593BC0
{*procedure TList<Vcl.Themes.TStyleManager.TStyleClassDescriptor>.ToArray(?:?);
begin
 00593BC0    push        ecx
 00593BC1    mov         dword ptr [esp],edx
 00593BC4    mov         edx,dword ptr [esp]
 00593BC7    add         eax,8
 00593BCA    call        004359D4
 00593BCF    pop         edx
 00593BD0    ret
end;*}

//00593BD4
procedure TList<Vcl.Themes.TStyleManager.TStyleClassDescriptor>.GetEnumerator;
begin
{*
 00593BD4    mov         ecx,eax
 00593BD6    mov         dl,1
 00593BD8    mov         eax,[0058200C];TList<Vcl.Themes.TStyleManager.TStyleClassDescriptor>.TEnumerator
 00593BDD    call        00593C8C
 00593BE2    ret
*}
end;

//00593BE4
{*procedure sub_00593BE4(?:TList<Vcl.Themes.TStyleManager.TStyleClassDescriptor>.TEnumerator; ?:?);
begin
 00593BE4    push        ebp
 00593BE5    mov         ebp,esp
 00593BE7    add         esp,0FFFFFFF0
 00593BEA    push        ebx
 00593BEB    push        esi
 00593BEC    push        edi
 00593BED    mov         edi,edx
 00593BEF    mov         ebx,eax
 00593BF1    lea         eax,[ebp-10]
 00593BF4    mov         edx,dword ptr ds:[573C30];TStyleManager.TStyleClassDescriptor
 00593BFA    call        @AddRefRecord
 00593BFF    xor         eax,eax
 00593C01    push        ebp
 00593C02    push        593C61
 00593C07    push        dword ptr fs:[eax]
 00593C0A    mov         dword ptr fs:[eax],esp
 00593C0D    mov         esi,dword ptr [ebx+4]
 00593C10    mov         ebx,dword ptr [ebx+8]
 00593C13    lea         eax,[esi+8]
 00593C16    mov         edx,ebx
 00593C18    call        00434534
 00593C1D    lea         eax,[ebp-10]
 00593C20    mov         edx,ebx
 00593C22    add         edx,edx
 00593C24    mov         ecx,dword ptr [esi+20]
 00593C27    lea         edx,[ecx+edx*8]
 00593C2A    mov         ecx,dword ptr ds:[573C30];TStyleManager.TStyleClassDescriptor
 00593C30    call        @CopyRecord
 00593C35    mov         eax,edi
 00593C37    lea         edx,[ebp-10]
 00593C3A    mov         ecx,dword ptr ds:[573C30];TStyleManager.TStyleClassDescriptor
 00593C40    call        @CopyRecord
 00593C45    xor         eax,eax
 00593C47    pop         edx
 00593C48    pop         ecx
 00593C49    pop         ecx
 00593C4A    mov         dword ptr fs:[eax],edx
 00593C4D    push        593C68
 00593C52    lea         eax,[ebp-10]
 00593C55    mov         edx,dword ptr ds:[573C30];TStyleManager.TStyleClassDescriptor
 00593C5B    call        @FinalizeRecord
 00593C60    ret
>00593C61    jmp         @HandleFinally
>00593C66    jmp         00593C52
 00593C68    pop         edi
 00593C69    pop         esi
 00593C6A    pop         ebx
 00593C6B    mov         esp,ebp
 00593C6D    pop         ebp
 00593C6E    ret
end;*}

//00593C70
{*procedure sub_00593C70(?:?);
begin
 00593C70    push        ebx
 00593C71    push        esi
 00593C72    mov         esi,edx
 00593C74    mov         ebx,eax
 00593C76    mov         edx,esi
 00593C78    mov         eax,ebx
 00593C7A    call        00593BE4
 00593C7F    pop         esi
 00593C80    pop         ebx
 00593C81    ret
end;*}

//00593C84
procedure sub_00593C84;
begin
{*
 00593C84    call        TList<Vcl.Themes.TStyleManager.TStyleClassDescriptor>.TEnumerator.MoveNext
 00593C89    ret
*}
end;

//00593C8C
constructor sub_00593C8C(AList:TList<Vcl.Themes.TStyleManager.TStyleClassDescriptor>);
begin
{*
 00593C8C    push        ebx
 00593C8D    push        esi
 00593C8E    push        edi
 00593C8F    test        dl,dl
>00593C91    je          00593C9B
 00593C93    add         esp,0FFFFFFF0
 00593C96    call        @ClassCreate
 00593C9B    mov         esi,ecx
 00593C9D    mov         ebx,edx
 00593C9F    mov         edi,eax
 00593CA1    xor         edx,edx
 00593CA3    mov         eax,edi
 00593CA5    call        TObject.Create
 00593CAA    mov         dword ptr [edi+4],esi;TList<Vcl.Themes.TStyleManager.TStyleClassDescriptor>.TEnumerator....
 00593CAD    mov         dword ptr [edi+8],0FFFFFFFF
 00593CB4    mov         eax,edi
 00593CB6    test        bl,bl
>00593CB8    je          00593CC9
 00593CBA    call        @AfterConstruction
 00593CBF    pop         dword ptr fs:[0]
 00593CC6    add         esp,0C
 00593CC9    mov         eax,edi
 00593CCB    pop         edi
 00593CCC    pop         esi
 00593CCD    pop         ebx
 00593CCE    ret
*}
end;

//00593CD0
function TList<Vcl.Themes.TStyleManager.TStyleClassDescriptor>.TEnumerator.MoveNext:Boolean;
begin
{*
 00593CD0    mov         edx,dword ptr [eax+4]
 00593CD3    mov         edx,dword ptr [edx+8]
 00593CD6    cmp         edx,dword ptr [eax+8]
>00593CD9    jg          00593CDE
 00593CDB    xor         eax,eax
 00593CDD    ret
 00593CDE    inc         dword ptr [eax+8]
 00593CE1    mov         edx,dword ptr [eax+4]
 00593CE4    mov         edx,dword ptr [edx+8]
 00593CE7    cmp         edx,dword ptr [eax+8]
 00593CEA    setg        al
 00593CED    ret
*}
end;

//00593CF0
destructor TEnumerable<Vcl.Themes.TCustomStyleEngineClass>.Destroy();
begin
{*
 00593CF0    push        ebx
 00593CF1    push        esi
 00593CF2    call        @BeforeDestruction
 00593CF7    mov         ebx,edx
 00593CF9    mov         esi,eax
 00593CFB    mov         dl,0FC
 00593CFD    and         dl,bl
 00593CFF    mov         eax,esi
 00593D01    call        TObject.Destroy
 00593D06    test        bl,bl
>00593D08    jle         00593D11
 00593D0A    mov         eax,esi
 00593D0C    call        @ClassDestroy
 00593D11    pop         esi
 00593D12    pop         ebx
 00593D13    ret
*}
end;

//00593D14
function TEnumerable<Vcl.Themes.TCustomStyleEngineClass>.GetEnumerator:TEnumerator<Vcl.Themes.TCustomStyleEngineClass>;
begin
{*
 00593D14    mov         edx,dword ptr [eax]
 00593D16    call        dword ptr [edx]
 00593D18    ret
*}
end;

//00593D1C
{*procedure TEnumerable<Vcl.Themes.TCustomStyleEngineClass>.ToArray(?:?);
begin
 00593D1C    push        ebp
 00593D1D    mov         ebp,esp
 00593D1F    add         esp,0FFFFFFF4
 00593D22    push        ebx
 00593D23    mov         dword ptr [ebp-4],edx
 00593D26    mov         ebx,eax
 00593D28    mov         dl,1
 00593D2A    mov         eax,[00583688];TList<Vcl.Themes.TCustomStyleEngineClass>
 00593D2F    call        TList<Vcl.Themes.TCustomStyleEngineClass>.Create
 00593D34    mov         dword ptr [ebp-8],eax
 00593D37    xor         eax,eax
 00593D39    push        ebp
 00593D3A    push        593DC4
 00593D3F    push        dword ptr fs:[eax]
 00593D42    mov         dword ptr fs:[eax],esp
 00593D45    mov         eax,ebx
 00593D47    call        TEnumerable<Vcl.Themes.TCustomStyleEngineClass>.GetEnumerator
 00593D4C    mov         dword ptr [ebp-0C],eax
 00593D4F    xor         eax,eax
 00593D51    push        ebp
 00593D52    push        593D9C
 00593D57    push        dword ptr fs:[eax]
 00593D5A    mov         dword ptr fs:[eax],esp
>00593D5D    jmp         00593D72
 00593D5F    mov         eax,dword ptr [ebp-0C]
 00593D62    mov         edx,dword ptr [eax]
 00593D64    call        dword ptr [edx]
 00593D66    mov         ebx,eax
 00593D68    mov         edx,ebx
 00593D6A    mov         eax,dword ptr [ebp-8]
 00593D6D    call        TList<Vcl.Themes.TCustomStyleEngineClass>.Add
 00593D72    mov         eax,dword ptr [ebp-0C]
 00593D75    call        TEnumerator<Vcl.Themes.TCustomStyleEngineClass>.MoveNext
 00593D7A    test        al,al
>00593D7C    jne         00593D5F
 00593D7E    xor         eax,eax
 00593D80    pop         edx
 00593D81    pop         ecx
 00593D82    pop         ecx
 00593D83    mov         dword ptr fs:[eax],edx
 00593D86    push        593DA3
 00593D8B    cmp         dword ptr [ebp-0C],0
>00593D8F    je          00593D9B
 00593D91    mov         dl,1
 00593D93    mov         eax,dword ptr [ebp-0C]
 00593D96    mov         ecx,dword ptr [eax]
 00593D98    call        dword ptr [ecx-4]
 00593D9B    ret
>00593D9C    jmp         @HandleFinally
>00593DA1    jmp         00593D8B
 00593DA3    mov         edx,dword ptr [ebp-4]
 00593DA6    mov         eax,dword ptr [ebp-8]
 00593DA9    call        TList<Vcl.Themes.TCustomStyleEngineClass>.ToArray
 00593DAE    xor         eax,eax
 00593DB0    pop         edx
 00593DB1    pop         ecx
 00593DB2    pop         ecx
 00593DB3    mov         dword ptr fs:[eax],edx
 00593DB6    push        593DCB
 00593DBB    mov         eax,dword ptr [ebp-8]
 00593DBE    call        TObject.Free
 00593DC3    ret
>00593DC4    jmp         @HandleFinally
>00593DC9    jmp         00593DBB
 00593DCB    pop         ebx
 00593DCC    mov         esp,ebp
 00593DCE    pop         ebp
 00593DCF    ret
end;*}

//00593DD0
function TEnumerator<Vcl.Themes.TCustomStyleEngineClass>.MoveNext:Boolean;
begin
{*
 00593DD0    mov         edx,dword ptr [eax]
 00593DD2    call        dword ptr [edx+4]
 00593DD5    ret
*}
end;

//00593E20
procedure sub_00593E20(?:TList<Vcl.Themes.TCustomStyleEngineClass>);
begin
{*
 00593E20    add         eax,8
 00593E23    call        004357A0
 00593E28    ret
*}
end;

//00593E2C
{*procedure sub_00593E2C(?:?; ?:?);
begin
 00593E2C    push        ebx
 00593E2D    mov         edx,dword ptr [edx]
 00593E2F    mov         ebx,dword ptr [eax]
 00593E31    call        dword ptr [ebx+8]
 00593E34    pop         ebx
 00593E35    ret
end;*}

//00593E38
{*procedure sub_00593E38(?:?; ?:?; ?:?);
begin
 00593E38    push        ebx
 00593E39    mov         edx,dword ptr [edx]
 00593E3B    mov         ecx,dword ptr [ecx]
 00593E3D    mov         eax,dword ptr [eax+24]
 00593E40    mov         ebx,dword ptr [eax]
 00593E42    call        dword ptr [ebx+0C]
 00593E45    pop         ebx
 00593E46    ret
end;*}

//00593E48
procedure sub_00593E48;
begin
{*
 00593E48    call        TList<Vcl.Themes.TCustomStyleEngineClass>.GetEnumerator
 00593E4D    ret
*}
end;

//00593E50
{*procedure sub_00593E50(?:?);
begin
 00593E50    push        ebx
 00593E51    cmp         word ptr [eax+2A],0
>00593E56    je          00593E65
 00593E58    push        ecx
 00593E59    mov         ebx,eax
 00593E5B    mov         ecx,edx
 00593E5D    mov         edx,eax
 00593E5F    mov         eax,dword ptr [ebx+2C]
 00593E62    call        dword ptr [ebx+28]
 00593E65    pop         ebx
 00593E66    ret
end;*}

//00593E68
constructor TList<Vcl.Themes.TCustomStyleEngineClass>.Create();
begin
{*
 00593E68    push        ebp
 00593E69    mov         ebp,esp
 00593E6B    push        0
 00593E6D    push        ebx
 00593E6E    push        esi
 00593E6F    test        dl,dl
>00593E71    je          00593E7B
 00593E73    add         esp,0FFFFFFF0
 00593E76    call        @ClassCreate
 00593E7B    mov         ebx,edx
 00593E7D    mov         esi,eax
 00593E7F    xor         eax,eax
 00593E81    push        ebp
 00593E82    push        593EBC
 00593E87    push        dword ptr fs:[eax]
 00593E8A    mov         dword ptr fs:[eax],esp
 00593E8D    lea         edx,[ebp-4]
 00593E90    mov         eax,[005A45CC];TComparer<Vcl.Themes.TCustomStyleEngineClass>
 00593E95    call        TComparer<Vcl.Themes.TCustomStyleEngineClass>.Default
 00593E9A    mov         ecx,dword ptr [ebp-4]
 00593E9D    xor         edx,edx
 00593E9F    mov         eax,esi
 00593EA1    call        00593EE0
 00593EA6    xor         eax,eax
 00593EA8    pop         edx
 00593EA9    pop         ecx
 00593EAA    pop         ecx
 00593EAB    mov         dword ptr fs:[eax],edx
 00593EAE    push        593EC3
 00593EB3    lea         eax,[ebp-4]
 00593EB6    call        @IntfClear
 00593EBB    ret
>00593EBC    jmp         @HandleFinally
>00593EC1    jmp         00593EB3
 00593EC3    mov         eax,esi
 00593EC5    test        bl,bl
>00593EC7    je          00593ED8
 00593EC9    call        @AfterConstruction
 00593ECE    pop         dword ptr fs:[0]
 00593ED5    add         esp,0C
 00593ED8    mov         eax,esi
 00593EDA    pop         esi
 00593EDB    pop         ebx
 00593EDC    pop         ecx
 00593EDD    pop         ebp
 00593EDE    ret
*}
end;

//00593EE0
constructor sub_00593EE0(AComparer:IComparer<Vcl.Themes.TCustomStyleEngineClass>);
begin
{*
 00593EE0    push        ebp
 00593EE1    mov         ebp,esp
 00593EE3    push        0
 00593EE5    push        ebx
 00593EE6    push        esi
 00593EE7    push        edi
 00593EE8    test        dl,dl
>00593EEA    je          00593EF4
 00593EEC    add         esp,0FFFFFFF0
 00593EEF    call        @ClassCreate
 00593EF4    mov         esi,ecx
 00593EF6    mov         ebx,edx
 00593EF8    mov         edi,eax
 00593EFA    xor         eax,eax
 00593EFC    push        ebp
 00593EFD    push        593F6B
 00593F02    push        dword ptr fs:[eax]
 00593F05    mov         dword ptr fs:[eax],esp
 00593F08    xor         edx,edx
 00593F0A    mov         eax,edi
 00593F0C    call        TObject.Create
 00593F11    mov         dword ptr [edi+14],edi;TList<Vcl.Themes.TCustomStyleEngineClass>.FOnNotify:TCollectionNo...
 00593F14    mov         dword ptr [edi+10],593E2C;TList<Vcl.Themes.TCustomStyleEngineClass>.FOnNotify:TCollectio...
 00593F1B    mov         dword ptr [edi+1C],edi
 00593F1E    mov         dword ptr [edi+18],593E38;sub_00593E38
 00593F25    mov         eax,[0058324C];TList<Vcl.Themes.TCustomStyleEngineClass>.arrayofT
 00593F2A    mov         dword ptr [edi+0C],eax;TList<Vcl.Themes.TCustomStyleEngineClass>.FComparer:IComparer<Vcl...
 00593F2D    lea         eax,[edi+24]
 00593F30    mov         edx,esi
 00593F32    call        @IntfCopy
 00593F37    cmp         dword ptr [edi+24],0
>00593F3B    jne         00593F55
 00593F3D    lea         edx,[ebp-4]
 00593F40    mov         eax,[005A45CC];TComparer<Vcl.Themes.TCustomStyleEngineClass>
 00593F45    call        TComparer<Vcl.Themes.TCustomStyleEngineClass>.Default
 00593F4A    mov         edx,dword ptr [ebp-4]
 00593F4D    lea         eax,[edi+24]
 00593F50    call        @IntfCopy
 00593F55    xor         eax,eax
 00593F57    pop         edx
 00593F58    pop         ecx
 00593F59    pop         ecx
 00593F5A    mov         dword ptr fs:[eax],edx
 00593F5D    push        593F72
 00593F62    lea         eax,[ebp-4]
 00593F65    call        @IntfClear
 00593F6A    ret
>00593F6B    jmp         @HandleFinally
>00593F70    jmp         00593F62
 00593F72    mov         eax,edi
 00593F74    test        bl,bl
>00593F76    je          00593F87
 00593F78    call        @AfterConstruction
 00593F7D    pop         dword ptr fs:[0]
 00593F84    add         esp,0C
 00593F87    mov         eax,edi
 00593F89    pop         edi
 00593F8A    pop         esi
 00593F8B    pop         ebx
 00593F8C    pop         ecx
 00593F8D    pop         ebp
 00593F8E    ret
*}
end;

//00593F90
destructor TList<Vcl.Themes.TCustomStyleEngineClass>.Destroy();
begin
{*
 00593F90    push        ebx
 00593F91    push        esi
 00593F92    call        @BeforeDestruction
 00593F97    mov         ebx,edx
 00593F99    mov         esi,eax
 00593F9B    cmp         dword ptr [esi+8],0;TList<Vcl.Themes.TCustomStyleEngineClass>.FCount:Integer
>00593F9F    jle         00593FAA
 00593FA1    xor         edx,edx
 00593FA3    mov         eax,esi
 00593FA5    call        00593E20
 00593FAA    push        0
 00593FAC    lea         eax,[esi+20]
 00593FAF    mov         ecx,1
 00593FB4    mov         edx,dword ptr ds:[58324C];TList<Vcl.Themes.TCustomStyleEngineClass>.arrayofT
 00593FBA    call        @DynArraySetLength
 00593FBF    add         esp,4
 00593FC2    mov         dl,0FC
 00593FC4    and         dl,bl
 00593FC6    mov         eax,esi
 00593FC8    call        TEnumerable<Vcl.Themes.TCustomStyleEngineClass>.Destroy
 00593FCD    test        bl,bl
>00593FCF    jle         00593FD8
 00593FD1    mov         eax,esi
 00593FD3    call        @ClassDestroy
 00593FD8    pop         esi
 00593FD9    pop         ebx
 00593FDA    ret
*}
end;

//00593FDC
{*procedure TList<Vcl.Themes.TCustomStyleEngineClass>.Error(Msg:string; Data:NativeInt; ?:?);
begin
 00593FDC    push        ebp
 00593FDD    mov         ebp,esp
 00593FDF    add         esp,0FFFFFFF0
 00593FE2    mov         dword ptr [ebp-8],ecx
 00593FE5    mov         dword ptr [ebp-4],edx
 00593FE8    push        dword ptr [ebp+4]
 00593FEB    mov         eax,dword ptr [ebp-8]
 00593FEE    mov         dword ptr [ebp-10],eax
 00593FF1    mov         byte ptr [ebp-0C],0
 00593FF5    lea         eax,[ebp-10]
 00593FF8    push        eax
 00593FF9    push        0
 00593FFB    mov         ecx,dword ptr [ebp-4]
 00593FFE    mov         dl,1
 00594000    mov         eax,[004180BC];EListError
 00594005    call        Exception.CreateFmt;EListError.Create
>0059400A    jmp         @RaiseExcept
end;*}

//00594014
procedure TList<Vcl.Themes.TCustomStyleEngineClass>.Add(Value:TCustomStyleEngineClass);
begin
{*
 00594014    push        ecx
 00594015    mov         dword ptr [esp],edx
 00594018    mov         edx,esp
 0059401A    add         eax,8
 0059401D    call        0043489C
 00594022    pop         edx
 00594023    ret
*}
end;

//00594024
{*procedure TList<Vcl.Themes.TCustomStyleEngineClass>.ToArray(?:?);
begin
 00594024    push        ecx
 00594025    mov         dword ptr [esp],edx
 00594028    mov         edx,dword ptr [esp]
 0059402B    add         eax,8
 0059402E    call        00435980
 00594033    pop         edx
 00594034    ret
end;*}

//00594038
procedure TList<Vcl.Themes.TCustomStyleEngineClass>.GetEnumerator;
begin
{*
 00594038    mov         ecx,eax
 0059403A    mov         dl,1
 0059403C    mov         eax,[005834C0];TList<Vcl.Themes.TCustomStyleEngineClass>.TEnumerator
 00594041    call        00594074
 00594046    ret
*}
end;

//00594048
{*function sub_00594048(?:?):?;
begin
 00594048    push        ebx
 00594049    push        esi
 0059404A    mov         ebx,dword ptr [eax+4]
 0059404D    mov         esi,dword ptr [eax+8]
 00594050    lea         eax,[ebx+8]
 00594053    mov         edx,esi
 00594055    call        00434534
 0059405A    mov         eax,dword ptr [ebx+20]
 0059405D    mov         eax,dword ptr [eax+esi*4]
 00594060    pop         esi
 00594061    pop         ebx
 00594062    ret
end;*}

//00594064
procedure sub_00594064;
begin
{*
 00594064    call        00594048
 00594069    ret
*}
end;

//0059406C
procedure sub_0059406C;
begin
{*
 0059406C    call        TList<Vcl.Themes.TCustomStyleEngineClass>.TEnumerator.MoveNext
 00594071    ret
*}
end;

//00594074
constructor sub_00594074(AList:TList<Vcl.Themes.TCustomStyleEngineClass>);
begin
{*
 00594074    push        ebx
 00594075    push        esi
 00594076    push        edi
 00594077    test        dl,dl
>00594079    je          00594083
 0059407B    add         esp,0FFFFFFF0
 0059407E    call        @ClassCreate
 00594083    mov         esi,ecx
 00594085    mov         ebx,edx
 00594087    mov         edi,eax
 00594089    xor         edx,edx
 0059408B    mov         eax,edi
 0059408D    call        TObject.Create
 00594092    mov         dword ptr [edi+4],esi;TList<Vcl.Themes.TCustomStyleEngineClass>.TEnumerator.FList:TList<...
 00594095    mov         dword ptr [edi+8],0FFFFFFFF
 0059409C    mov         eax,edi
 0059409E    test        bl,bl
>005940A0    je          005940B1
 005940A2    call        @AfterConstruction
 005940A7    pop         dword ptr fs:[0]
 005940AE    add         esp,0C
 005940B1    mov         eax,edi
 005940B3    pop         edi
 005940B4    pop         esi
 005940B5    pop         ebx
 005940B6    ret
*}
end;

//005940B8
function TList<Vcl.Themes.TCustomStyleEngineClass>.TEnumerator.MoveNext:Boolean;
begin
{*
 005940B8    mov         edx,dword ptr [eax+4]
 005940BB    mov         edx,dword ptr [edx+8]
 005940BE    cmp         edx,dword ptr [eax+8]
>005940C1    jg          005940C6
 005940C3    xor         eax,eax
 005940C5    ret
 005940C6    inc         dword ptr [eax+8]
 005940C9    mov         edx,dword ptr [eax+4]
 005940CC    mov         edx,dword ptr [edx+8]
 005940CF    cmp         edx,dword ptr [eax+8]
 005940D2    setg        al
 005940D5    ret
*}
end;

//005940D8
destructor TEnumerable<Vcl.Themes.TCustomStyleServices>.Destroy();
begin
{*
 005940D8    push        ebx
 005940D9    push        esi
 005940DA    call        @BeforeDestruction
 005940DF    mov         ebx,edx
 005940E1    mov         esi,eax
 005940E3    mov         dl,0FC
 005940E5    and         dl,bl
 005940E7    mov         eax,esi
 005940E9    call        TObject.Destroy
 005940EE    test        bl,bl
>005940F0    jle         005940F9
 005940F2    mov         eax,esi
 005940F4    call        @ClassDestroy
 005940F9    pop         esi
 005940FA    pop         ebx
 005940FB    ret
*}
end;

//005940FC
function TEnumerable<Vcl.Themes.TCustomStyleServices>.GetEnumerator:TEnumerator<Vcl.Themes.TCustomStyleServices>;
begin
{*
 005940FC    mov         edx,dword ptr [eax]
 005940FE    call        dword ptr [edx]
 00594100    ret
*}
end;

//00594104
{*procedure TEnumerable<Vcl.Themes.TCustomStyleServices>.ToArray(?:?);
begin
 00594104    push        ebp
 00594105    mov         ebp,esp
 00594107    add         esp,0FFFFFFF4
 0059410A    push        ebx
 0059410B    mov         dword ptr [ebp-4],edx
 0059410E    mov         ebx,eax
 00594110    mov         dl,1
 00594112    mov         eax,[00584AB0];TList<Vcl.Themes.TCustomStyleServices>
 00594117    call        TList<Vcl.Themes.TCustomStyleServices>.Create
 0059411C    mov         dword ptr [ebp-8],eax
 0059411F    xor         eax,eax
 00594121    push        ebp
 00594122    push        5941AC
 00594127    push        dword ptr fs:[eax]
 0059412A    mov         dword ptr fs:[eax],esp
 0059412D    mov         eax,ebx
 0059412F    call        TEnumerable<Vcl.Themes.TCustomStyleServices>.GetEnumerator
 00594134    mov         dword ptr [ebp-0C],eax
 00594137    xor         eax,eax
 00594139    push        ebp
 0059413A    push        594184
 0059413F    push        dword ptr fs:[eax]
 00594142    mov         dword ptr fs:[eax],esp
>00594145    jmp         0059415A
 00594147    mov         eax,dword ptr [ebp-0C]
 0059414A    mov         edx,dword ptr [eax]
 0059414C    call        dword ptr [edx]
 0059414E    mov         ebx,eax
 00594150    mov         edx,ebx
 00594152    mov         eax,dword ptr [ebp-8]
 00594155    call        TList<Vcl.Themes.TCustomStyleServices>.Add
 0059415A    mov         eax,dword ptr [ebp-0C]
 0059415D    call        TEnumerator<Vcl.Themes.TCustomStyleServices>.MoveNext
 00594162    test        al,al
>00594164    jne         00594147
 00594166    xor         eax,eax
 00594168    pop         edx
 00594169    pop         ecx
 0059416A    pop         ecx
 0059416B    mov         dword ptr fs:[eax],edx
 0059416E    push        59418B
 00594173    cmp         dword ptr [ebp-0C],0
>00594177    je          00594183
 00594179    mov         dl,1
 0059417B    mov         eax,dword ptr [ebp-0C]
 0059417E    mov         ecx,dword ptr [eax]
 00594180    call        dword ptr [ecx-4]
 00594183    ret
>00594184    jmp         @HandleFinally
>00594189    jmp         00594173
 0059418B    mov         edx,dword ptr [ebp-4]
 0059418E    mov         eax,dword ptr [ebp-8]
 00594191    call        TList<Vcl.Themes.TCustomStyleServices>.ToArray
 00594196    xor         eax,eax
 00594198    pop         edx
 00594199    pop         ecx
 0059419A    pop         ecx
 0059419B    mov         dword ptr fs:[eax],edx
 0059419E    push        5941B3
 005941A3    mov         eax,dword ptr [ebp-8]
 005941A6    call        TObject.Free
 005941AB    ret
>005941AC    jmp         @HandleFinally
>005941B1    jmp         005941A3
 005941B3    pop         ebx
 005941B4    mov         esp,ebp
 005941B6    pop         ebp
 005941B7    ret
end;*}

//005941B8
function TEnumerator<Vcl.Themes.TCustomStyleServices>.MoveNext:Boolean;
begin
{*
 005941B8    mov         edx,dword ptr [eax]
 005941BA    call        dword ptr [edx+4]
 005941BD    ret
*}
end;

//00594208
procedure sub_00594208(?:TList<Vcl.Themes.TCustomStyleServices>);
begin
{*
 00594208    add         eax,8
 0059420B    call        004357A0
 00594210    ret
*}
end;

//00594214
{*procedure sub_00594214(?:?; ?:?);
begin
 00594214    push        ebx
 00594215    mov         edx,dword ptr [edx]
 00594217    mov         ebx,dword ptr [eax]
 00594219    call        dword ptr [ebx+8]
 0059421C    pop         ebx
 0059421D    ret
end;*}

//00594220
{*procedure sub_00594220(?:?; ?:?; ?:?);
begin
 00594220    push        ebx
 00594221    mov         edx,dword ptr [edx]
 00594223    mov         ecx,dword ptr [ecx]
 00594225    mov         eax,dword ptr [eax+24]
 00594228    mov         ebx,dword ptr [eax]
 0059422A    call        dword ptr [ebx+0C]
 0059422D    pop         ebx
 0059422E    ret
end;*}

//00594230
procedure sub_00594230;
begin
{*
 00594230    call        TList<Vcl.Themes.TCustomStyleServices>.GetEnumerator
 00594235    ret
*}
end;

//00594238
{*procedure sub_00594238(?:?);
begin
 00594238    push        ebx
 00594239    cmp         word ptr [eax+2A],0
>0059423E    je          0059424D
 00594240    push        ecx
 00594241    mov         ebx,eax
 00594243    mov         ecx,edx
 00594245    mov         edx,eax
 00594247    mov         eax,dword ptr [ebx+2C]
 0059424A    call        dword ptr [ebx+28]
 0059424D    pop         ebx
 0059424E    ret
end;*}

//00594250
constructor TList<Vcl.Themes.TCustomStyleServices>.Create();
begin
{*
 00594250    push        ebp
 00594251    mov         ebp,esp
 00594253    push        0
 00594255    push        ebx
 00594256    push        esi
 00594257    test        dl,dl
>00594259    je          00594263
 0059425B    add         esp,0FFFFFFF0
 0059425E    call        @ClassCreate
 00594263    mov         ebx,edx
 00594265    mov         esi,eax
 00594267    xor         eax,eax
 00594269    push        ebp
 0059426A    push        5942A4
 0059426F    push        dword ptr fs:[eax]
 00594272    mov         dword ptr fs:[eax],esp
 00594275    lea         edx,[ebp-4]
 00594278    mov         eax,[005A485C];TComparer<Vcl.Themes.TCustomStyleServices>
 0059427D    call        TComparer<Vcl.Themes.TCustomStyleServices>.Default
 00594282    mov         ecx,dword ptr [ebp-4]
 00594285    xor         edx,edx
 00594287    mov         eax,esi
 00594289    call        005942C8
 0059428E    xor         eax,eax
 00594290    pop         edx
 00594291    pop         ecx
 00594292    pop         ecx
 00594293    mov         dword ptr fs:[eax],edx
 00594296    push        5942AB
 0059429B    lea         eax,[ebp-4]
 0059429E    call        @IntfClear
 005942A3    ret
>005942A4    jmp         @HandleFinally
>005942A9    jmp         0059429B
 005942AB    mov         eax,esi
 005942AD    test        bl,bl
>005942AF    je          005942C0
 005942B1    call        @AfterConstruction
 005942B6    pop         dword ptr fs:[0]
 005942BD    add         esp,0C
 005942C0    mov         eax,esi
 005942C2    pop         esi
 005942C3    pop         ebx
 005942C4    pop         ecx
 005942C5    pop         ebp
 005942C6    ret
*}
end;

//005942C8
constructor sub_005942C8(AComparer:IComparer<Vcl.Themes.TCustomStyleServices>);
begin
{*
 005942C8    push        ebp
 005942C9    mov         ebp,esp
 005942CB    push        0
 005942CD    push        ebx
 005942CE    push        esi
 005942CF    push        edi
 005942D0    test        dl,dl
>005942D2    je          005942DC
 005942D4    add         esp,0FFFFFFF0
 005942D7    call        @ClassCreate
 005942DC    mov         esi,ecx
 005942DE    mov         ebx,edx
 005942E0    mov         edi,eax
 005942E2    xor         eax,eax
 005942E4    push        ebp
 005942E5    push        594353
 005942EA    push        dword ptr fs:[eax]
 005942ED    mov         dword ptr fs:[eax],esp
 005942F0    xor         edx,edx
 005942F2    mov         eax,edi
 005942F4    call        TObject.Create
 005942F9    mov         dword ptr [edi+14],edi;TList<Vcl.Themes.TCustomStyleServices>.FOnNotify:TCollectionNotif...
 005942FC    mov         dword ptr [edi+10],594214;TList<Vcl.Themes.TCustomStyleServices>.FOnNotify:TCollectionNo...
 00594303    mov         dword ptr [edi+1C],edi
 00594306    mov         dword ptr [edi+18],594220;sub_00594220
 0059430D    mov         eax,[00584690];TList<Vcl.Themes.TCustomStyleServices>.arrayofT
 00594312    mov         dword ptr [edi+0C],eax;TList<Vcl.Themes.TCustomStyleServices>.FComparer:IComparer<Vcl.Th...
 00594315    lea         eax,[edi+24]
 00594318    mov         edx,esi
 0059431A    call        @IntfCopy
 0059431F    cmp         dword ptr [edi+24],0
>00594323    jne         0059433D
 00594325    lea         edx,[ebp-4]
 00594328    mov         eax,[005A485C];TComparer<Vcl.Themes.TCustomStyleServices>
 0059432D    call        TComparer<Vcl.Themes.TCustomStyleServices>.Default
 00594332    mov         edx,dword ptr [ebp-4]
 00594335    lea         eax,[edi+24]
 00594338    call        @IntfCopy
 0059433D    xor         eax,eax
 0059433F    pop         edx
 00594340    pop         ecx
 00594341    pop         ecx
 00594342    mov         dword ptr fs:[eax],edx
 00594345    push        59435A
 0059434A    lea         eax,[ebp-4]
 0059434D    call        @IntfClear
 00594352    ret
>00594353    jmp         @HandleFinally
>00594358    jmp         0059434A
 0059435A    mov         eax,edi
 0059435C    test        bl,bl
>0059435E    je          0059436F
 00594360    call        @AfterConstruction
 00594365    pop         dword ptr fs:[0]
 0059436C    add         esp,0C
 0059436F    mov         eax,edi
 00594371    pop         edi
 00594372    pop         esi
 00594373    pop         ebx
 00594374    pop         ecx
 00594375    pop         ebp
 00594376    ret
*}
end;

//00594378
destructor TList<Vcl.Themes.TCustomStyleServices>.Destroy();
begin
{*
 00594378    push        ebx
 00594379    push        esi
 0059437A    call        @BeforeDestruction
 0059437F    mov         ebx,edx
 00594381    mov         esi,eax
 00594383    cmp         dword ptr [esi+8],0;TList<Vcl.Themes.TCustomStyleServices>.FCount:Integer
>00594387    jle         00594392
 00594389    xor         edx,edx
 0059438B    mov         eax,esi
 0059438D    call        00594208
 00594392    push        0
 00594394    lea         eax,[esi+20]
 00594397    mov         ecx,1
 0059439C    mov         edx,dword ptr ds:[584690];TList<Vcl.Themes.TCustomStyleServices>.arrayofT
 005943A2    call        @DynArraySetLength
 005943A7    add         esp,4
 005943AA    mov         dl,0FC
 005943AC    and         dl,bl
 005943AE    mov         eax,esi
 005943B0    call        TEnumerable<Vcl.Themes.TCustomStyleServices>.Destroy
 005943B5    test        bl,bl
>005943B7    jle         005943C0
 005943B9    mov         eax,esi
 005943BB    call        @ClassDestroy
 005943C0    pop         esi
 005943C1    pop         ebx
 005943C2    ret
*}
end;

//005943C4
{*procedure TList<Vcl.Themes.TCustomStyleServices>.Error(Msg:string; Data:NativeInt; ?:?);
begin
 005943C4    push        ebp
 005943C5    mov         ebp,esp
 005943C7    add         esp,0FFFFFFF0
 005943CA    mov         dword ptr [ebp-8],ecx
 005943CD    mov         dword ptr [ebp-4],edx
 005943D0    push        dword ptr [ebp+4]
 005943D3    mov         eax,dword ptr [ebp-8]
 005943D6    mov         dword ptr [ebp-10],eax
 005943D9    mov         byte ptr [ebp-0C],0
 005943DD    lea         eax,[ebp-10]
 005943E0    push        eax
 005943E1    push        0
 005943E3    mov         ecx,dword ptr [ebp-4]
 005943E6    mov         dl,1
 005943E8    mov         eax,[004180BC];EListError
 005943ED    call        Exception.CreateFmt;EListError.Create
>005943F2    jmp         @RaiseExcept
end;*}

//005943FC
procedure TList<Vcl.Themes.TCustomStyleServices>.Add(Value:TCustomStyleServices);
begin
{*
 005943FC    push        ecx
 005943FD    mov         dword ptr [esp],edx
 00594400    mov         edx,esp
 00594402    add         eax,8
 00594405    call        0043489C
 0059440A    pop         edx
 0059440B    ret
*}
end;

//0059440C
{*procedure TList<Vcl.Themes.TCustomStyleServices>.ToArray(?:?);
begin
 0059440C    push        ecx
 0059440D    mov         dword ptr [esp],edx
 00594410    mov         edx,dword ptr [esp]
 00594413    add         eax,8
 00594416    call        00435980
 0059441B    pop         edx
 0059441C    ret
end;*}

//00594420
procedure TList<Vcl.Themes.TCustomStyleServices>.GetEnumerator;
begin
{*
 00594420    mov         ecx,eax
 00594422    mov         dl,1
 00594424    mov         eax,[005848EC];TList<Vcl.Themes.TCustomStyleServices>.TEnumerator
 00594429    call        0059445C
 0059442E    ret
*}
end;

//00594430
{*function sub_00594430(?:?):?;
begin
 00594430    push        ebx
 00594431    push        esi
 00594432    mov         ebx,dword ptr [eax+4]
 00594435    mov         esi,dword ptr [eax+8]
 00594438    lea         eax,[ebx+8]
 0059443B    mov         edx,esi
 0059443D    call        00434534
 00594442    mov         eax,dword ptr [ebx+20]
 00594445    mov         eax,dword ptr [eax+esi*4]
 00594448    pop         esi
 00594449    pop         ebx
 0059444A    ret
end;*}

//0059444C
procedure sub_0059444C;
begin
{*
 0059444C    call        00594430
 00594451    ret
*}
end;

//00594454
procedure sub_00594454;
begin
{*
 00594454    call        TList<Vcl.Themes.TCustomStyleServices>.TEnumerator.MoveNext
 00594459    ret
*}
end;

//0059445C
constructor sub_0059445C(AList:TList<Vcl.Themes.TCustomStyleServices>);
begin
{*
 0059445C    push        ebx
 0059445D    push        esi
 0059445E    push        edi
 0059445F    test        dl,dl
>00594461    je          0059446B
 00594463    add         esp,0FFFFFFF0
 00594466    call        @ClassCreate
 0059446B    mov         esi,ecx
 0059446D    mov         ebx,edx
 0059446F    mov         edi,eax
 00594471    xor         edx,edx
 00594473    mov         eax,edi
 00594475    call        TObject.Create
 0059447A    mov         dword ptr [edi+4],esi;TList<Vcl.Themes.TCustomStyleServices>.TEnumerator.FList:TList<Vcl...
 0059447D    mov         dword ptr [edi+8],0FFFFFFFF
 00594484    mov         eax,edi
 00594486    test        bl,bl
>00594488    je          00594499
 0059448A    call        @AfterConstruction
 0059448F    pop         dword ptr fs:[0]
 00594496    add         esp,0C
 00594499    mov         eax,edi
 0059449B    pop         edi
 0059449C    pop         esi
 0059449D    pop         ebx
 0059449E    ret
*}
end;

//005944A0
function TList<Vcl.Themes.TCustomStyleServices>.TEnumerator.MoveNext:Boolean;
begin
{*
 005944A0    mov         edx,dword ptr [eax+4]
 005944A3    mov         edx,dword ptr [edx+8]
 005944A6    cmp         edx,dword ptr [eax+8]
>005944A9    jg          005944AE
 005944AB    xor         eax,eax
 005944AD    ret
 005944AE    inc         dword ptr [eax+8]
 005944B1    mov         edx,dword ptr [eax+4]
 005944B4    mov         edx,dword ptr [edx+8]
 005944B7    cmp         edx,dword ptr [eax+8]
 005944BA    setg        al
 005944BD    ret
*}
end;

//005944C0
destructor TEnumerable<System.Types.TPoint>.Destroy();
begin
{*
 005944C0    push        ebx
 005944C1    push        esi
 005944C2    call        @BeforeDestruction
 005944C7    mov         ebx,edx
 005944C9    mov         esi,eax
 005944CB    mov         dl,0FC
 005944CD    and         dl,bl
 005944CF    mov         eax,esi
 005944D1    call        TObject.Destroy
 005944D6    test        bl,bl
>005944D8    jle         005944E1
 005944DA    mov         eax,esi
 005944DC    call        @ClassDestroy
 005944E1    pop         esi
 005944E2    pop         ebx
 005944E3    ret
*}
end;

//005944E4
function TEnumerable<System.Types.TPoint>.GetEnumerator:TEnumerator<System.Types.TPoint>;
begin
{*
 005944E4    mov         edx,dword ptr [eax]
 005944E6    call        dword ptr [edx]
 005944E8    ret
*}
end;

//005944EC
{*procedure TEnumerable<System.Types.TPoint>.ToArray(?:?);
begin
 005944EC    push        ebp
 005944ED    mov         ebp,esp
 005944EF    add         esp,0FFFFFFEC
 005944F2    push        ebx
 005944F3    push        esi
 005944F4    mov         dword ptr [ebp-4],edx
 005944F7    mov         ebx,eax
 005944F9    lea         esi,[ebp-10]
 005944FC    mov         dl,1
 005944FE    mov         eax,[0058A6F0];TList<System.Types.TPoint>
 00594503    call        00594644
 00594508    mov         dword ptr [ebp-8],eax
 0059450B    xor         eax,eax
 0059450D    push        ebp
 0059450E    push        594598
 00594513    push        dword ptr fs:[eax]
 00594516    mov         dword ptr fs:[eax],esp
 00594519    mov         eax,ebx
 0059451B    call        TEnumerable<System.Types.TPoint>.GetEnumerator
 00594520    mov         dword ptr [ebp-14],eax
 00594523    xor         eax,eax
 00594525    push        ebp
 00594526    push        594570
 0059452B    push        dword ptr fs:[eax]
 0059452E    mov         dword ptr fs:[eax],esp
>00594531    jmp         00594546
 00594533    mov         edx,esi
 00594535    mov         eax,dword ptr [ebp-14]
 00594538    mov         ecx,dword ptr [eax]
 0059453A    call        dword ptr [ecx]
 0059453C    mov         edx,esi
 0059453E    mov         eax,dword ptr [ebp-8]
 00594541    call        TList<System.Types.TPoint>.Add
 00594546    mov         eax,dword ptr [ebp-14]
 00594549    call        TEnumerator<System.Types.TPoint>.MoveNext
 0059454E    test        al,al
>00594550    jne         00594533
 00594552    xor         eax,eax
 00594554    pop         edx
 00594555    pop         ecx
 00594556    pop         ecx
 00594557    mov         dword ptr fs:[eax],edx
 0059455A    push        594577
 0059455F    cmp         dword ptr [ebp-14],0
>00594563    je          0059456F
 00594565    mov         dl,1
 00594567    mov         eax,dword ptr [ebp-14]
 0059456A    mov         ecx,dword ptr [eax]
 0059456C    call        dword ptr [ecx-4]
 0059456F    ret
>00594570    jmp         @HandleFinally
>00594575    jmp         0059455F
 00594577    mov         edx,dword ptr [ebp-4]
 0059457A    mov         eax,dword ptr [ebp-8]
 0059457D    call        TList<System.Types.TPoint>.ToArray
 00594582    xor         eax,eax
 00594584    pop         edx
 00594585    pop         ecx
 00594586    pop         ecx
 00594587    mov         dword ptr fs:[eax],edx
 0059458A    push        59459F
 0059458F    mov         eax,dword ptr [ebp-8]
 00594592    call        TObject.Free
 00594597    ret
>00594598    jmp         @HandleFinally
>0059459D    jmp         0059458F
 0059459F    pop         esi
 005945A0    pop         ebx
 005945A1    mov         esp,ebp
 005945A3    pop         ebp
 005945A4    ret
end;*}

//005945A8
function TEnumerator<System.Types.TPoint>.MoveNext:Boolean;
begin
{*
 005945A8    mov         edx,dword ptr [eax]
 005945AA    call        dword ptr [edx+4]
 005945AD    ret
*}
end;

//005945F8
procedure sub_005945F8(?:TList<System.Types.TPoint>);
begin
{*
 005945F8    add         eax,8
 005945FB    call        00435800
 00594600    ret
*}
end;

//00594604
{*procedure sub_00594604(?:?);
begin
 00594604    push        ebx
 00594605    push        esi
 00594606    mov         esi,eax
 00594608    mov         eax,esi
 0059460A    mov         ebx,dword ptr [eax]
 0059460C    call        dword ptr [ebx+8]
 0059460F    pop         esi
 00594610    pop         ebx
 00594611    ret
end;*}

//00594614
{*procedure sub_00594614(?:?);
begin
 00594614    push        ebx
 00594615    push        esi
 00594616    mov         esi,eax
 00594618    mov         eax,dword ptr [esi+24]
 0059461B    mov         ebx,dword ptr [eax]
 0059461D    call        dword ptr [ebx+0C]
 00594620    pop         esi
 00594621    pop         ebx
 00594622    ret
end;*}

//00594624
procedure sub_00594624;
begin
{*
 00594624    call        TList<System.Types.TPoint>.GetEnumerator
 00594629    ret
*}
end;

//0059462C
{*procedure sub_0059462C(?:?);
begin
 0059462C    push        esi
 0059462D    mov         esi,eax
 0059462F    cmp         word ptr [esi+2A],0
>00594634    je          00594641
 00594636    push        ecx
 00594637    mov         ecx,edx
 00594639    mov         edx,esi
 0059463B    mov         eax,dword ptr [esi+2C]
 0059463E    call        dword ptr [esi+28]
 00594641    pop         esi
 00594642    ret
end;*}

//00594644
constructor sub_00594644;
begin
{*
 00594644    push        ebp
 00594645    mov         ebp,esp
 00594647    push        0
 00594649    push        ebx
 0059464A    push        esi
 0059464B    test        dl,dl
>0059464D    je          00594657
 0059464F    add         esp,0FFFFFFF0
 00594652    call        @ClassCreate
 00594657    mov         ebx,edx
 00594659    mov         esi,eax
 0059465B    xor         eax,eax
 0059465D    push        ebp
 0059465E    push        594698
 00594663    push        dword ptr fs:[eax]
 00594666    mov         dword ptr fs:[eax],esp
 00594669    lea         edx,[ebp-4]
 0059466C    mov         eax,[005A4AD8];TComparer<System.Types.TPoint>
 00594671    call        TComparer<System.Types.TPoint>.Default
 00594676    mov         ecx,dword ptr [ebp-4]
 00594679    xor         edx,edx
 0059467B    mov         eax,esi
 0059467D    call        005946BC
 00594682    xor         eax,eax
 00594684    pop         edx
 00594685    pop         ecx
 00594686    pop         ecx
 00594687    mov         dword ptr fs:[eax],edx
 0059468A    push        59469F
 0059468F    lea         eax,[ebp-4]
 00594692    call        @IntfClear
 00594697    ret
>00594698    jmp         @HandleFinally
>0059469D    jmp         0059468F
 0059469F    mov         eax,esi
 005946A1    test        bl,bl
>005946A3    je          005946B4
 005946A5    call        @AfterConstruction
 005946AA    pop         dword ptr fs:[0]
 005946B1    add         esp,0C
 005946B4    mov         eax,esi
 005946B6    pop         esi
 005946B7    pop         ebx
 005946B8    pop         ecx
 005946B9    pop         ebp
 005946BA    ret
*}
end;

//005946BC
constructor sub_005946BC(AComparer:IComparer<System.Types.TPoint>);
begin
{*
 005946BC    push        ebp
 005946BD    mov         ebp,esp
 005946BF    push        0
 005946C1    push        ebx
 005946C2    push        esi
 005946C3    push        edi
 005946C4    test        dl,dl
>005946C6    je          005946D0
 005946C8    add         esp,0FFFFFFF0
 005946CB    call        @ClassCreate
 005946D0    mov         esi,ecx
 005946D2    mov         ebx,edx
 005946D4    mov         edi,eax
 005946D6    xor         eax,eax
 005946D8    push        ebp
 005946D9    push        594747
 005946DE    push        dword ptr fs:[eax]
 005946E1    mov         dword ptr fs:[eax],esp
 005946E4    xor         edx,edx
 005946E6    mov         eax,edi
 005946E8    call        TObject.Create
 005946ED    mov         dword ptr [edi+14],edi;TList<System.Types.TPoint>.FOnNotify:TCollectionNotifyEvent<Syste...
 005946F0    mov         dword ptr [edi+10],594604;TList<System.Types.TPoint>.FOnNotify:TCollectionNotifyEvent<Sy...
 005946F7    mov         dword ptr [edi+1C],edi
 005946FA    mov         dword ptr [edi+18],594614;sub_00594614
 00594701    mov         eax,[0058A330];TList<System.Types.TPoint>.arrayofT
 00594706    mov         dword ptr [edi+0C],eax;TList<System.Types.TPoint>.FComparer:IComparer<System.Types.TPoin...
 00594709    lea         eax,[edi+24]
 0059470C    mov         edx,esi
 0059470E    call        @IntfCopy
 00594713    cmp         dword ptr [edi+24],0
>00594717    jne         00594731
 00594719    lea         edx,[ebp-4]
 0059471C    mov         eax,[005A4AD8];TComparer<System.Types.TPoint>
 00594721    call        TComparer<System.Types.TPoint>.Default
 00594726    mov         edx,dword ptr [ebp-4]
 00594729    lea         eax,[edi+24]
 0059472C    call        @IntfCopy
 00594731    xor         eax,eax
 00594733    pop         edx
 00594734    pop         ecx
 00594735    pop         ecx
 00594736    mov         dword ptr fs:[eax],edx
 00594739    push        59474E
 0059473E    lea         eax,[ebp-4]
 00594741    call        @IntfClear
 00594746    ret
>00594747    jmp         @HandleFinally
>0059474C    jmp         0059473E
 0059474E    mov         eax,edi
 00594750    test        bl,bl
>00594752    je          00594763
 00594754    call        @AfterConstruction
 00594759    pop         dword ptr fs:[0]
 00594760    add         esp,0C
 00594763    mov         eax,edi
 00594765    pop         edi
 00594766    pop         esi
 00594767    pop         ebx
 00594768    pop         ecx
 00594769    pop         ebp
 0059476A    ret
*}
end;

//0059476C
destructor TList<System.Types.TPoint>.Destroy();
begin
{*
 0059476C    push        ebx
 0059476D    push        esi
 0059476E    call        @BeforeDestruction
 00594773    mov         ebx,edx
 00594775    mov         esi,eax
 00594777    cmp         dword ptr [esi+8],0;TList<System.Types.TPoint>.FCount:Integer
>0059477B    jle         00594786
 0059477D    xor         edx,edx
 0059477F    mov         eax,esi
 00594781    call        005945F8
 00594786    push        0
 00594788    lea         eax,[esi+20]
 0059478B    mov         ecx,1
 00594790    mov         edx,dword ptr ds:[58A330];TList<System.Types.TPoint>.arrayofT
 00594796    call        @DynArraySetLength
 0059479B    add         esp,4
 0059479E    mov         dl,0FC
 005947A0    and         dl,bl
 005947A2    mov         eax,esi
 005947A4    call        TEnumerable<System.Types.TPoint>.Destroy
 005947A9    test        bl,bl
>005947AB    jle         005947B4
 005947AD    mov         eax,esi
 005947AF    call        @ClassDestroy
 005947B4    pop         esi
 005947B5    pop         ebx
 005947B6    ret
*}
end;

//005947B8
{*procedure TList<System.Types.TPoint>.Error(Msg:string; Data:NativeInt; ?:?);
begin
 005947B8    push        ebp
 005947B9    mov         ebp,esp
 005947BB    add         esp,0FFFFFFF0
 005947BE    mov         dword ptr [ebp-8],ecx
 005947C1    mov         dword ptr [ebp-4],edx
 005947C4    push        dword ptr [ebp+4]
 005947C7    mov         eax,dword ptr [ebp-8]
 005947CA    mov         dword ptr [ebp-10],eax
 005947CD    mov         byte ptr [ebp-0C],0
 005947D1    lea         eax,[ebp-10]
 005947D4    push        eax
 005947D5    push        0
 005947D7    mov         ecx,dword ptr [ebp-4]
 005947DA    mov         dl,1
 005947DC    mov         eax,[004180BC];EListError
 005947E1    call        Exception.CreateFmt;EListError.Create
>005947E6    jmp         @RaiseExcept
end;*}

//005947F0
procedure TList<System.Types.TPoint>.Add(Value:TPoint);
begin
{*
 005947F0    push        ecx
 005947F1    mov         dword ptr [esp],edx
 005947F4    mov         edx,dword ptr [esp]
 005947F7    add         eax,8
 005947FA    call        004348E0
 005947FF    pop         edx
 00594800    ret
*}
end;

//00594804
procedure TList<System.Types.TPoint>.AddRange(Values:TPoint);
begin
{*
 00594804    push        ecx
 00594805    mov         dword ptr [esp],edx
 00594808    push        ecx
 00594809    mov         ecx,dword ptr [esp+4]
 0059480D    mov         edx,dword ptr [eax+8]
 00594810    call        TList<System.Types.TPoint>.InsertRange
 00594815    pop         edx
 00594816    ret
*}
end;

//00594818
{*procedure TList<System.Types.TPoint>.InsertRange(Index:Integer; Values:TPoint; ?:?);
begin
 00594818    push        ebp
 00594819    mov         ebp,esp
 0059481B    push        ecx
 0059481C    mov         dword ptr [ebp-4],ecx
 0059481F    mov         ecx,dword ptr [ebp+8]
 00594822    inc         ecx
 00594823    push        ecx
 00594824    mov         ecx,dword ptr [ebp-4]
 00594827    add         eax,8
 0059482A    call        00435528
 0059482F    pop         ecx
 00594830    pop         ebp
 00594831    ret         4
end;*}

//00594834
{*procedure TList<System.Types.TPoint>.ToArray(?:?);
begin
 00594834    push        ecx
 00594835    mov         dword ptr [esp],edx
 00594838    mov         edx,dword ptr [esp]
 0059483B    add         eax,8
 0059483E    call        00435980
 00594843    pop         edx
 00594844    ret
end;*}

//00594848
procedure TList<System.Types.TPoint>.GetEnumerator;
begin
{*
 00594848    mov         ecx,eax
 0059484A    mov         dl,1
 0059484C    mov         eax,[0058A544];TList<System.Types.TPoint>.TEnumerator
 00594851    call        005948B0
 00594856    ret
*}
end;

//00594858
{*procedure sub_00594858(?:TList<System.Types.TPoint>.TEnumerator; ?:?);
begin
 00594858    push        ebx
 00594859    push        esi
 0059485A    push        edi
 0059485B    add         esp,0FFFFFFF8
 0059485E    mov         edi,edx
 00594860    mov         ebx,dword ptr [eax+4]
 00594863    mov         esi,dword ptr [eax+8]
 00594866    lea         eax,[ebx+8]
 00594869    mov         edx,esi
 0059486B    call        00434534
 00594870    mov         eax,dword ptr [ebx+20]
 00594873    mov         edx,dword ptr [eax+esi*8]
 00594876    mov         dword ptr [esp],edx
 00594879    mov         edx,dword ptr [eax+esi*8+4]
 0059487D    mov         dword ptr [esp+4],edx
 00594881    mov         eax,dword ptr [esp]
 00594884    mov         dword ptr [edi],eax
 00594886    mov         eax,dword ptr [esp+4]
 0059488A    mov         dword ptr [edi+4],eax
 0059488D    pop         ecx
 0059488E    pop         edx
 0059488F    pop         edi
 00594890    pop         esi
 00594891    pop         ebx
 00594892    ret
end;*}

//00594894
{*procedure sub_00594894(?:?);
begin
 00594894    push        ebx
 00594895    push        esi
 00594896    mov         esi,edx
 00594898    mov         ebx,eax
 0059489A    mov         edx,esi
 0059489C    mov         eax,ebx
 0059489E    call        00594858
 005948A3    pop         esi
 005948A4    pop         ebx
 005948A5    ret
end;*}

//005948A8
procedure sub_005948A8;
begin
{*
 005948A8    call        TList<System.Types.TPoint>.TEnumerator.MoveNext
 005948AD    ret
*}
end;

//005948B0
constructor sub_005948B0(AList:TList<System.Types.TPoint>);
begin
{*
 005948B0    push        ebx
 005948B1    push        esi
 005948B2    push        edi
 005948B3    test        dl,dl
>005948B5    je          005948BF
 005948B7    add         esp,0FFFFFFF0
 005948BA    call        @ClassCreate
 005948BF    mov         esi,ecx
 005948C1    mov         ebx,edx
 005948C3    mov         edi,eax
 005948C5    xor         edx,edx
 005948C7    mov         eax,edi
 005948C9    call        TObject.Create
 005948CE    mov         dword ptr [edi+4],esi;TList<System.Types.TPoint>.TEnumerator.FList:TList<System.Types.TP...
 005948D1    mov         dword ptr [edi+8],0FFFFFFFF
 005948D8    mov         eax,edi
 005948DA    test        bl,bl
>005948DC    je          005948ED
 005948DE    call        @AfterConstruction
 005948E3    pop         dword ptr fs:[0]
 005948EA    add         esp,0C
 005948ED    mov         eax,edi
 005948EF    pop         edi
 005948F0    pop         esi
 005948F1    pop         ebx
 005948F2    ret
*}
end;

//005948F4
function TList<System.Types.TPoint>.TEnumerator.MoveNext:Boolean;
begin
{*
 005948F4    mov         edx,dword ptr [eax+4]
 005948F7    mov         edx,dword ptr [edx+8]
 005948FA    cmp         edx,dword ptr [eax+8]
>005948FD    jg          00594902
 005948FF    xor         eax,eax
 00594901    ret
 00594902    inc         dword ptr [eax+8]
 00594905    mov         edx,dword ptr [eax+4]
 00594908    mov         edx,dword ptr [edx+8]
 0059490B    cmp         edx,dword ptr [eax+8]
 0059490E    setg        al
 00594911    ret
*}
end;

//00594914
{*procedure TComparer<Vcl.Themes.TStyleHookClass>.Default(?:?);
begin
 00594914    push        ebx
 00594915    mov         ebx,edx
 00594917    mov         ecx,4
 0059491C    mov         edx,dword ptr ds:[57289C];TStyleHookClass
 00594922    xor         eax,eax
 00594924    call        _LookupVtableInfo
 00594929    mov         edx,eax
 0059492B    mov         eax,ebx
 0059492D    call        @IntfCopy
 00594932    pop         ebx
 00594933    ret
end;*}

//0059497C
procedure sub_0059497C(?:TList<Vcl.Themes.TPair<System.TClass,System.Generics.Collections.TList<Vcl.Themes.TStyleHookClass>>>);
begin
{*
 0059497C    add         eax,8
 0059497F    call        00435800
 00594984    ret
*}
end;

//00594988
{*procedure sub_00594988(?:?);
begin
 00594988    push        ebx
 00594989    push        esi
 0059498A    mov         esi,eax
 0059498C    mov         eax,esi
 0059498E    mov         ebx,dword ptr [eax]
 00594990    call        dword ptr [ebx+8]
 00594993    pop         esi
 00594994    pop         ebx
 00594995    ret
end;*}

//00594998
{*procedure sub_00594998(?:?);
begin
 00594998    push        ebx
 00594999    push        esi
 0059499A    mov         esi,eax
 0059499C    mov         eax,dword ptr [esi+24]
 0059499F    mov         ebx,dword ptr [eax]
 005949A1    call        dword ptr [ebx+0C]
 005949A4    pop         esi
 005949A5    pop         ebx
 005949A6    ret
end;*}

//005949A8
procedure sub_005949A8;
begin
{*
 005949A8    call        TList<Vcl.Themes.TPair<System.TClass,System.Generics.Collections.TList<Vcl.Themes.TStyleHookClass>>>.GetEnumerator
 005949AD    ret
*}
end;

//005949B0
{*procedure sub_005949B0(?:?);
begin
 005949B0    push        esi
 005949B1    mov         esi,eax
 005949B3    cmp         word ptr [esi+2A],0
>005949B8    je          005949C5
 005949BA    push        ecx
 005949BB    mov         ecx,edx
 005949BD    mov         edx,esi
 005949BF    mov         eax,dword ptr [esi+2C]
 005949C2    call        dword ptr [esi+28]
 005949C5    pop         esi
 005949C6    ret
end;*}

//005949C8
constructor sub_005949C8;
begin
{*
 005949C8    push        ebp
 005949C9    mov         ebp,esp
 005949CB    push        0
 005949CD    push        ebx
 005949CE    push        esi
 005949CF    test        dl,dl
>005949D1    je          005949DB
 005949D3    add         esp,0FFFFFFF0
 005949D6    call        @ClassCreate
 005949DB    mov         ebx,edx
 005949DD    mov         esi,eax
 005949DF    xor         eax,eax
 005949E1    push        ebp
 005949E2    push        594A1C
 005949E7    push        dword ptr fs:[eax]
 005949EA    mov         dword ptr fs:[eax],esp
 005949ED    lea         edx,[ebp-4]
 005949F0    mov         eax,[005A4D84];TComparer<Vcl.Themes.TPair<System.TClass,System.Generics.Collections.TLis...
 005949F5    call        TComparer<Vcl.Themes.TPair<System.TClass,System.Generics.Collections.TList<Vcl.Themes.TStyleHookClass>>>.Default
 005949FA    mov         ecx,dword ptr [ebp-4]
 005949FD    xor         edx,edx
 005949FF    mov         eax,esi
 00594A01    call        00594A40
 00594A06    xor         eax,eax
 00594A08    pop         edx
 00594A09    pop         ecx
 00594A0A    pop         ecx
 00594A0B    mov         dword ptr fs:[eax],edx
 00594A0E    push        594A23
 00594A13    lea         eax,[ebp-4]
 00594A16    call        @IntfClear
 00594A1B    ret
>00594A1C    jmp         @HandleFinally
>00594A21    jmp         00594A13
 00594A23    mov         eax,esi
 00594A25    test        bl,bl
>00594A27    je          00594A38
 00594A29    call        @AfterConstruction
 00594A2E    pop         dword ptr fs:[0]
 00594A35    add         esp,0C
 00594A38    mov         eax,esi
 00594A3A    pop         esi
 00594A3B    pop         ebx
 00594A3C    pop         ecx
 00594A3D    pop         ebp
 00594A3E    ret
*}
end;

//00594A40
constructor sub_00594A40(AComparer:IComparer<Vcl.Themes.TPair<System.TClass,System.Generics.Collections.TList<Vcl.Themes.TStyleHookClass>>>);
begin
{*
 00594A40    push        ebp
 00594A41    mov         ebp,esp
 00594A43    push        0
 00594A45    push        ebx
 00594A46    push        esi
 00594A47    push        edi
 00594A48    test        dl,dl
>00594A4A    je          00594A54
 00594A4C    add         esp,0FFFFFFF0
 00594A4F    call        @ClassCreate
 00594A54    mov         esi,ecx
 00594A56    mov         ebx,edx
 00594A58    mov         edi,eax
 00594A5A    xor         eax,eax
 00594A5C    push        ebp
 00594A5D    push        594ACB
 00594A62    push        dword ptr fs:[eax]
 00594A65    mov         dword ptr fs:[eax],esp
 00594A68    xor         edx,edx
 00594A6A    mov         eax,edi
 00594A6C    call        TObject.Create
 00594A71    mov         dword ptr [edi+14],edi;TList<Vcl.Themes.TPair<System.TClass,System.Generics.Collections....
 00594A74    mov         dword ptr [edi+10],594988;TList<Vcl.Themes.TPair<System.TClass,System.Generics.Collectio...
 00594A7B    mov         dword ptr [edi+1C],edi
 00594A7E    mov         dword ptr [edi+18],594998;sub_00594998
 00594A85    mov         eax,[0059740C];TList<Vcl.Themes.TPair<System.TClass,System.Generics.Collections.TList<Vc...
 00594A8A    mov         dword ptr [edi+0C],eax;TList<Vcl.Themes.TPair<System.TClass,System.Generics.Collections....
 00594A8D    lea         eax,[edi+24]
 00594A90    mov         edx,esi
 00594A92    call        @IntfCopy
 00594A97    cmp         dword ptr [edi+24],0
>00594A9B    jne         00594AB5
 00594A9D    lea         edx,[ebp-4]
 00594AA0    mov         eax,[005A4D84];TComparer<Vcl.Themes.TPair<System.TClass,System.Generics.Collections.TLis...
 00594AA5    call        TComparer<Vcl.Themes.TPair<System.TClass,System.Generics.Collections.TList<Vcl.Themes.TStyleHookClass>>>.Default
 00594AAA    mov         edx,dword ptr [ebp-4]
 00594AAD    lea         eax,[edi+24]
 00594AB0    call        @IntfCopy
 00594AB5    xor         eax,eax
 00594AB7    pop         edx
 00594AB8    pop         ecx
 00594AB9    pop         ecx
 00594ABA    mov         dword ptr fs:[eax],edx
 00594ABD    push        594AD2
 00594AC2    lea         eax,[ebp-4]
 00594AC5    call        @IntfClear
 00594ACA    ret
>00594ACB    jmp         @HandleFinally
>00594AD0    jmp         00594AC2
 00594AD2    mov         eax,edi
 00594AD4    test        bl,bl
>00594AD6    je          00594AE7
 00594AD8    call        @AfterConstruction
 00594ADD    pop         dword ptr fs:[0]
 00594AE4    add         esp,0C
 00594AE7    mov         eax,edi
 00594AE9    pop         edi
 00594AEA    pop         esi
 00594AEB    pop         ebx
 00594AEC    pop         ecx
 00594AED    pop         ebp
 00594AEE    ret
*}
end;

//00594AF0
destructor TList<Vcl.Themes.TPair<System.TClass,System.Generics.Collections.TList<Vcl.Themes.TStyleHookClass>>>.Destroy();
begin
{*
 00594AF0    push        ebx
 00594AF1    push        esi
 00594AF2    call        @BeforeDestruction
 00594AF7    mov         ebx,edx
 00594AF9    mov         esi,eax
 00594AFB    cmp         dword ptr [esi+8],0;TList<Vcl.Themes.TPair<System.TClass,System.Generics.Collections.TLi...
>00594AFF    jle         00594B0A
 00594B01    xor         edx,edx
 00594B03    mov         eax,esi
 00594B05    call        0059497C
 00594B0A    push        0
 00594B0C    lea         eax,[esi+20]
 00594B0F    mov         ecx,1
 00594B14    mov         edx,dword ptr ds:[59740C];TList<Vcl.Themes.TPair<System.TClass,System.Generics.Collectio...
 00594B1A    call        @DynArraySetLength
 00594B1F    add         esp,4
 00594B22    mov         dl,0FC
 00594B24    and         dl,bl
 00594B26    mov         eax,esi
 00594B28    call        TEnumerable<Vcl.Themes.TPair<System.TClass,System.Generics.Collections.TList<Vcl.Themes.TStyleHookClass>>>.Destroy
 00594B2D    test        bl,bl
>00594B2F    jle         00594B38
 00594B31    mov         eax,esi
 00594B33    call        @ClassDestroy
 00594B38    pop         esi
 00594B39    pop         ebx
 00594B3A    ret
*}
end;

//00594B3C
{*procedure TList<Vcl.Themes.TPair<System.TClass,System.Generics.Collections.TList<Vcl.Themes.TStyleHookClass>>>.Error(Msg:string; Data:NativeInt; ?:?);
begin
 00594B3C    push        ebp
 00594B3D    mov         ebp,esp
 00594B3F    add         esp,0FFFFFFF0
 00594B42    mov         dword ptr [ebp-8],ecx
 00594B45    mov         dword ptr [ebp-4],edx
 00594B48    push        dword ptr [ebp+4]
 00594B4B    mov         eax,dword ptr [ebp-8]
 00594B4E    mov         dword ptr [ebp-10],eax
 00594B51    mov         byte ptr [ebp-0C],0
 00594B55    lea         eax,[ebp-10]
 00594B58    push        eax
 00594B59    push        0
 00594B5B    mov         ecx,dword ptr [ebp-4]
 00594B5E    mov         dl,1
 00594B60    mov         eax,[004180BC];EListError
 00594B65    call        Exception.CreateFmt;EListError.Create
>00594B6A    jmp         @RaiseExcept
end;*}

//00594B74
procedure TList<Vcl.Themes.TPair<System.TClass,System.Generics.Collections.TList<Vcl.Themes.TStyleHookClass>>>.Add(Value:TPair<System.TClass,System.Generics.Collections.TList<Vcl.Themes.TStyleHookClass>>);
begin
{*
 00594B74    push        ecx
 00594B75    mov         dword ptr [esp],edx
 00594B78    mov         edx,dword ptr [esp]
 00594B7B    add         eax,8
 00594B7E    call        004348E0
 00594B83    pop         edx
 00594B84    ret
*}
end;

//00594B88
{*procedure TList<Vcl.Themes.TPair<System.TClass,System.Generics.Collections.TList<Vcl.Themes.TStyleHookClass>>>.ToArray(?:?);
begin
 00594B88    push        ecx
 00594B89    mov         dword ptr [esp],edx
 00594B8C    mov         edx,dword ptr [esp]
 00594B8F    add         eax,8
 00594B92    call        00435980
 00594B97    pop         edx
 00594B98    ret
end;*}

//00594B9C
procedure TList<Vcl.Themes.TPair<System.TClass,System.Generics.Collections.TList<Vcl.Themes.TStyleHookClass>>>.GetEnumerator;
begin
{*
 00594B9C    mov         ecx,eax
 00594B9E    mov         dl,1
 00594BA0    mov         eax,[005977E0];TList<Vcl.Themes.TPair<System.TClass,System.Generics.Collections.TList<Vc...
 00594BA5    call        00594C04
 00594BAA    ret
*}
end;

//00594BAC
{*procedure sub_00594BAC(?:TList<Vcl.Themes.TPair<System.TClass,System.Generics.Collections.TList<Vcl.Themes.TStyleHookClass>>>.TEnumerator; ?:?);
begin
 00594BAC    push        ebx
 00594BAD    push        esi
 00594BAE    push        edi
 00594BAF    add         esp,0FFFFFFF8
 00594BB2    mov         edi,edx
 00594BB4    mov         ebx,dword ptr [eax+4]
 00594BB7    mov         esi,dword ptr [eax+8]
 00594BBA    lea         eax,[ebx+8]
 00594BBD    mov         edx,esi
 00594BBF    call        00434534
 00594BC4    mov         eax,dword ptr [ebx+20]
 00594BC7    mov         edx,dword ptr [eax+esi*8]
 00594BCA    mov         dword ptr [esp],edx
 00594BCD    mov         edx,dword ptr [eax+esi*8+4]
 00594BD1    mov         dword ptr [esp+4],edx
 00594BD5    mov         eax,dword ptr [esp]
 00594BD8    mov         dword ptr [edi],eax
 00594BDA    mov         eax,dword ptr [esp+4]
 00594BDE    mov         dword ptr [edi+4],eax
 00594BE1    pop         ecx
 00594BE2    pop         edx
 00594BE3    pop         edi
 00594BE4    pop         esi
 00594BE5    pop         ebx
 00594BE6    ret
end;*}

//00594BE8
{*procedure sub_00594BE8(?:?);
begin
 00594BE8    push        ebx
 00594BE9    push        esi
 00594BEA    mov         esi,edx
 00594BEC    mov         ebx,eax
 00594BEE    mov         edx,esi
 00594BF0    mov         eax,ebx
 00594BF2    call        00594BAC
 00594BF7    pop         esi
 00594BF8    pop         ebx
 00594BF9    ret
end;*}

//00594BFC
procedure sub_00594BFC;
begin
{*
 00594BFC    call        TList<Vcl.Themes.TPair<System.TClass,System.Generics.Collections.TList<Vcl.Themes.TStyleHookClass>>>.TEnumerator.MoveNext
 00594C01    ret
*}
end;

//00594C04
constructor sub_00594C04(AList:TList<Vcl.Themes.TPair<System.TClass,System.Generics.Collections.TList<Vcl.Themes.TStyleHookClass>>>);
begin
{*
 00594C04    push        ebx
 00594C05    push        esi
 00594C06    push        edi
 00594C07    test        dl,dl
>00594C09    je          00594C13
 00594C0B    add         esp,0FFFFFFF0
 00594C0E    call        @ClassCreate
 00594C13    mov         esi,ecx
 00594C15    mov         ebx,edx
 00594C17    mov         edi,eax
 00594C19    xor         edx,edx
 00594C1B    mov         eax,edi
 00594C1D    call        TObject.Create
 00594C22    mov         dword ptr [edi+4],esi;TList<Vcl.Themes.TPair<System.TClass,System.Generics.Collections.T...
 00594C25    mov         dword ptr [edi+8],0FFFFFFFF
 00594C2C    mov         eax,edi
 00594C2E    test        bl,bl
>00594C30    je          00594C41
 00594C32    call        @AfterConstruction
 00594C37    pop         dword ptr fs:[0]
 00594C3E    add         esp,0C
 00594C41    mov         eax,edi
 00594C43    pop         edi
 00594C44    pop         esi
 00594C45    pop         ebx
 00594C46    ret
*}
end;

//00594C48
function TList<Vcl.Themes.TPair<System.TClass,System.Generics.Collections.TList<Vcl.Themes.TStyleHookClass>>>.TEnumerator.MoveNext:Boolean;
begin
{*
 00594C48    mov         edx,dword ptr [eax+4]
 00594C4B    mov         edx,dword ptr [edx+8]
 00594C4E    cmp         edx,dword ptr [eax+8]
>00594C51    jg          00594C56
 00594C53    xor         eax,eax
 00594C55    ret
 00594C56    inc         dword ptr [eax+8]
 00594C59    mov         edx,dword ptr [eax+4]
 00594C5C    mov         edx,dword ptr [edx+8]
 00594C5F    cmp         edx,dword ptr [eax+8]
 00594C62    setg        al
 00594C65    ret
*}
end;

//00594C68
{*procedure sub_00594C68(?:?);
begin
 00594C68    push        ebx
 00594C69    mov         ebx,eax
 00594C6B    mov         ecx,4
 00594C70    mov         edx,dword ptr ds:[40132C];TClass
 00594C76    mov         al,1
 00594C78    call        _LookupVtableInfo
 00594C7D    mov         edx,eax
 00594C7F    mov         eax,ebx
 00594C81    call        @IntfCopy
 00594C86    pop         ebx
 00594C87    ret
end;*}

//00594CD0
procedure sub_00594CD0(?:TList<System.TClass>);
begin
{*
 00594CD0    add         eax,8
 00594CD3    call        004357A0
 00594CD8    ret
*}
end;

//00594CDC
{*procedure sub_00594CDC(?:?; ?:?);
begin
 00594CDC    push        ebx
 00594CDD    mov         edx,dword ptr [edx]
 00594CDF    mov         ebx,dword ptr [eax]
 00594CE1    call        dword ptr [ebx+8]
 00594CE4    pop         ebx
 00594CE5    ret
end;*}

//00594CE8
{*procedure sub_00594CE8(?:?; ?:?; ?:?);
begin
 00594CE8    push        ebx
 00594CE9    mov         edx,dword ptr [edx]
 00594CEB    mov         ecx,dword ptr [ecx]
 00594CED    mov         eax,dword ptr [eax+24]
 00594CF0    mov         ebx,dword ptr [eax]
 00594CF2    call        dword ptr [ebx+0C]
 00594CF5    pop         ebx
 00594CF6    ret
end;*}

//00594CF8
procedure sub_00594CF8;
begin
{*
 00594CF8    call        TList<System.TClass>.GetEnumerator
 00594CFD    ret
*}
end;

//00594D00
{*procedure sub_00594D00(?:?);
begin
 00594D00    push        ebx
 00594D01    cmp         word ptr [eax+2A],0
>00594D06    je          00594D15
 00594D08    push        ecx
 00594D09    mov         ebx,eax
 00594D0B    mov         ecx,edx
 00594D0D    mov         edx,eax
 00594D0F    mov         eax,dword ptr [ebx+2C]
 00594D12    call        dword ptr [ebx+28]
 00594D15    pop         ebx
 00594D16    ret
end;*}

//00594D18
constructor sub_00594D18;
begin
{*
 00594D18    push        ebp
 00594D19    mov         ebp,esp
 00594D1B    push        0
 00594D1D    push        ebx
 00594D1E    push        esi
 00594D1F    test        dl,dl
>00594D21    je          00594D2B
 00594D23    add         esp,0FFFFFFF0
 00594D26    call        @ClassCreate
 00594D2B    mov         ebx,edx
 00594D2D    mov         esi,eax
 00594D2F    xor         eax,eax
 00594D31    push        ebp
 00594D32    push        594D6C
 00594D37    push        dword ptr fs:[eax]
 00594D3A    mov         dword ptr fs:[eax],esp
 00594D3D    lea         edx,[ebp-4]
 00594D40    mov         eax,[005A5078];TComparer<System.TClass>
 00594D45    call        TComparer<System.TClass>.Default
 00594D4A    mov         ecx,dword ptr [ebp-4]
 00594D4D    xor         edx,edx
 00594D4F    mov         eax,esi
 00594D51    call        00594D90
 00594D56    xor         eax,eax
 00594D58    pop         edx
 00594D59    pop         ecx
 00594D5A    pop         ecx
 00594D5B    mov         dword ptr fs:[eax],edx
 00594D5E    push        594D73
 00594D63    lea         eax,[ebp-4]
 00594D66    call        @IntfClear
 00594D6B    ret
>00594D6C    jmp         @HandleFinally
>00594D71    jmp         00594D63
 00594D73    mov         eax,esi
 00594D75    test        bl,bl
>00594D77    je          00594D88
 00594D79    call        @AfterConstruction
 00594D7E    pop         dword ptr fs:[0]
 00594D85    add         esp,0C
 00594D88    mov         eax,esi
 00594D8A    pop         esi
 00594D8B    pop         ebx
 00594D8C    pop         ecx
 00594D8D    pop         ebp
 00594D8E    ret
*}
end;

//00594D90
constructor sub_00594D90(AComparer:IComparer<System.TClass>);
begin
{*
 00594D90    push        ebp
 00594D91    mov         ebp,esp
 00594D93    push        0
 00594D95    push        ebx
 00594D96    push        esi
 00594D97    push        edi
 00594D98    test        dl,dl
>00594D9A    je          00594DA4
 00594D9C    add         esp,0FFFFFFF0
 00594D9F    call        @ClassCreate
 00594DA4    mov         esi,ecx
 00594DA6    mov         ebx,edx
 00594DA8    mov         edi,eax
 00594DAA    xor         eax,eax
 00594DAC    push        ebp
 00594DAD    push        594E1B
 00594DB2    push        dword ptr fs:[eax]
 00594DB5    mov         dword ptr fs:[eax],esp
 00594DB8    xor         edx,edx
 00594DBA    mov         eax,edi
 00594DBC    call        TObject.Create
 00594DC1    mov         dword ptr [edi+14],edi;TList<System.TClass>.FOnNotify:TCollectionNotifyEvent<System.TCla...
 00594DC4    mov         dword ptr [edi+10],594CDC;TList<System.TClass>.FOnNotify:TCollectionNotifyEvent<System.T...
 00594DCB    mov         dword ptr [edi+1C],edi
 00594DCE    mov         dword ptr [edi+18],594CE8;sub_00594CE8
 00594DD5    mov         eax,[005987A4];TList<System.TClass>.arrayofT
 00594DDA    mov         dword ptr [edi+0C],eax;TList<System.TClass>.FComparer:IComparer<System.TClass>
 00594DDD    lea         eax,[edi+24]
 00594DE0    mov         edx,esi
 00594DE2    call        @IntfCopy
 00594DE7    cmp         dword ptr [edi+24],0
>00594DEB    jne         00594E05
 00594DED    lea         edx,[ebp-4]
 00594DF0    mov         eax,[005A5078];TComparer<System.TClass>
 00594DF5    call        TComparer<System.TClass>.Default
 00594DFA    mov         edx,dword ptr [ebp-4]
 00594DFD    lea         eax,[edi+24]
 00594E00    call        @IntfCopy
 00594E05    xor         eax,eax
 00594E07    pop         edx
 00594E08    pop         ecx
 00594E09    pop         ecx
 00594E0A    mov         dword ptr fs:[eax],edx
 00594E0D    push        594E22
 00594E12    lea         eax,[ebp-4]
 00594E15    call        @IntfClear
 00594E1A    ret
>00594E1B    jmp         @HandleFinally
>00594E20    jmp         00594E12
 00594E22    mov         eax,edi
 00594E24    test        bl,bl
>00594E26    je          00594E37
 00594E28    call        @AfterConstruction
 00594E2D    pop         dword ptr fs:[0]
 00594E34    add         esp,0C
 00594E37    mov         eax,edi
 00594E39    pop         edi
 00594E3A    pop         esi
 00594E3B    pop         ebx
 00594E3C    pop         ecx
 00594E3D    pop         ebp
 00594E3E    ret
*}
end;

//00594E40
destructor TList<System.TClass>.Destroy();
begin
{*
 00594E40    push        ebx
 00594E41    push        esi
 00594E42    call        @BeforeDestruction
 00594E47    mov         ebx,edx
 00594E49    mov         esi,eax
 00594E4B    cmp         dword ptr [esi+8],0;TList<System.TClass>.FCount:Integer
>00594E4F    jle         00594E5A
 00594E51    xor         edx,edx
 00594E53    mov         eax,esi
 00594E55    call        00594CD0
 00594E5A    push        0
 00594E5C    lea         eax,[esi+20]
 00594E5F    mov         ecx,1
 00594E64    mov         edx,dword ptr ds:[5987A4];TList<System.TClass>.arrayofT
 00594E6A    call        @DynArraySetLength
 00594E6F    add         esp,4
 00594E72    mov         dl,0FC
 00594E74    and         dl,bl
 00594E76    mov         eax,esi
 00594E78    call        TEnumerable<System.TClass>.Destroy
 00594E7D    test        bl,bl
>00594E7F    jle         00594E88
 00594E81    mov         eax,esi
 00594E83    call        @ClassDestroy
 00594E88    pop         esi
 00594E89    pop         ebx
 00594E8A    ret
*}
end;

//00594E8C
{*procedure TList<System.TClass>.Error(Msg:string; Data:NativeInt; ?:?);
begin
 00594E8C    push        ebp
 00594E8D    mov         ebp,esp
 00594E8F    add         esp,0FFFFFFF0
 00594E92    mov         dword ptr [ebp-8],ecx
 00594E95    mov         dword ptr [ebp-4],edx
 00594E98    push        dword ptr [ebp+4]
 00594E9B    mov         eax,dword ptr [ebp-8]
 00594E9E    mov         dword ptr [ebp-10],eax
 00594EA1    mov         byte ptr [ebp-0C],0
 00594EA5    lea         eax,[ebp-10]
 00594EA8    push        eax
 00594EA9    push        0
 00594EAB    mov         ecx,dword ptr [ebp-4]
 00594EAE    mov         dl,1
 00594EB0    mov         eax,[004180BC];EListError
 00594EB5    call        Exception.CreateFmt;EListError.Create
>00594EBA    jmp         @RaiseExcept
end;*}

//00594EC4
procedure TList<System.TClass>.Add(Value:TClass);
begin
{*
 00594EC4    push        ecx
 00594EC5    mov         dword ptr [esp],edx
 00594EC8    mov         edx,esp
 00594ECA    add         eax,8
 00594ECD    call        0043489C
 00594ED2    pop         edx
 00594ED3    ret
*}
end;

//00594ED4
{*procedure TList<System.TClass>.ToArray(?:?);
begin
 00594ED4    push        ecx
 00594ED5    mov         dword ptr [esp],edx
 00594ED8    mov         edx,dword ptr [esp]
 00594EDB    add         eax,8
 00594EDE    call        00435980
 00594EE3    pop         edx
 00594EE4    ret
end;*}

//00594EE8
procedure TList<System.TClass>.GetEnumerator;
begin
{*
 00594EE8    mov         ecx,eax
 00594EEA    mov         dl,1
 00594EEC    mov         eax,[005988F0];TList<System.TClass>.TEnumerator
 00594EF1    call        00594F24
 00594EF6    ret
*}
end;

//00594EF8
{*function sub_00594EF8(?:?):?;
begin
 00594EF8    push        ebx
 00594EF9    push        esi
 00594EFA    mov         ebx,dword ptr [eax+4]
 00594EFD    mov         esi,dword ptr [eax+8]
 00594F00    lea         eax,[ebx+8]
 00594F03    mov         edx,esi
 00594F05    call        00434534
 00594F0A    mov         eax,dword ptr [ebx+20]
 00594F0D    mov         eax,dword ptr [eax+esi*4]
 00594F10    pop         esi
 00594F11    pop         ebx
 00594F12    ret
end;*}

//00594F14
procedure sub_00594F14;
begin
{*
 00594F14    call        00594EF8
 00594F19    ret
*}
end;

//00594F1C
procedure sub_00594F1C;
begin
{*
 00594F1C    call        TList<System.TClass>.TEnumerator.MoveNext
 00594F21    ret
*}
end;

//00594F24
constructor sub_00594F24(AList:TList<System.TClass>);
begin
{*
 00594F24    push        ebx
 00594F25    push        esi
 00594F26    push        edi
 00594F27    test        dl,dl
>00594F29    je          00594F33
 00594F2B    add         esp,0FFFFFFF0
 00594F2E    call        @ClassCreate
 00594F33    mov         esi,ecx
 00594F35    mov         ebx,edx
 00594F37    mov         edi,eax
 00594F39    xor         edx,edx
 00594F3B    mov         eax,edi
 00594F3D    call        TObject.Create
 00594F42    mov         dword ptr [edi+4],esi;TList<System.TClass>.TEnumerator.FList:TList<System.TClass>
 00594F45    mov         dword ptr [edi+8],0FFFFFFFF
 00594F4C    mov         eax,edi
 00594F4E    test        bl,bl
>00594F50    je          00594F61
 00594F52    call        @AfterConstruction
 00594F57    pop         dword ptr fs:[0]
 00594F5E    add         esp,0C
 00594F61    mov         eax,edi
 00594F63    pop         edi
 00594F64    pop         esi
 00594F65    pop         ebx
 00594F66    ret
*}
end;

//00594F68
function TList<System.TClass>.TEnumerator.MoveNext:Boolean;
begin
{*
 00594F68    mov         edx,dword ptr [eax+4]
 00594F6B    mov         edx,dword ptr [edx+8]
 00594F6E    cmp         edx,dword ptr [eax+8]
>00594F71    jg          00594F76
 00594F73    xor         eax,eax
 00594F75    ret
 00594F76    inc         dword ptr [eax+8]
 00594F79    mov         edx,dword ptr [eax+4]
 00594F7C    mov         edx,dword ptr [edx+8]
 00594F7F    cmp         edx,dword ptr [eax+8]
 00594F82    setg        al
 00594F85    ret
*}
end;

//00594FD0
procedure sub_00594FD0(?:TList<Vcl.Themes.TList<Vcl.Themes.TStyleHookClass>>);
begin
{*
 00594FD0    add         eax,8
 00594FD3    call        004357A0
 00594FD8    ret
*}
end;

//00594FDC
{*procedure sub_00594FDC(?:?; ?:?);
begin
 00594FDC    push        ebx
 00594FDD    mov         edx,dword ptr [edx]
 00594FDF    mov         ebx,dword ptr [eax]
 00594FE1    call        dword ptr [ebx+8]
 00594FE4    pop         ebx
 00594FE5    ret
end;*}

//00594FE8
{*procedure sub_00594FE8(?:?; ?:?; ?:?);
begin
 00594FE8    push        ebx
 00594FE9    mov         edx,dword ptr [edx]
 00594FEB    mov         ecx,dword ptr [ecx]
 00594FED    mov         eax,dword ptr [eax+24]
 00594FF0    mov         ebx,dword ptr [eax]
 00594FF2    call        dword ptr [ebx+0C]
 00594FF5    pop         ebx
 00594FF6    ret
end;*}

//00594FF8
procedure sub_00594FF8;
begin
{*
 00594FF8    call        TList<Vcl.Themes.TList<Vcl.Themes.TStyleHookClass>>.GetEnumerator
 00594FFD    ret
*}
end;

//00595000
{*procedure sub_00595000(?:?);
begin
 00595000    push        ebx
 00595001    cmp         word ptr [eax+2A],0
>00595006    je          00595015
 00595008    push        ecx
 00595009    mov         ebx,eax
 0059500B    mov         ecx,edx
 0059500D    mov         edx,eax
 0059500F    mov         eax,dword ptr [ebx+2C]
 00595012    call        dword ptr [ebx+28]
 00595015    pop         ebx
 00595016    ret
end;*}

//00595018
constructor sub_00595018;
begin
{*
 00595018    push        ebp
 00595019    mov         ebp,esp
 0059501B    push        0
 0059501D    push        ebx
 0059501E    push        esi
 0059501F    test        dl,dl
>00595021    je          0059502B
 00595023    add         esp,0FFFFFFF0
 00595026    call        @ClassCreate
 0059502B    mov         ebx,edx
 0059502D    mov         esi,eax
 0059502F    xor         eax,eax
 00595031    push        ebp
 00595032    push        59506C
 00595037    push        dword ptr fs:[eax]
 0059503A    mov         dword ptr fs:[eax],esp
 0059503D    lea         edx,[ebp-4]
 00595040    mov         eax,[005A52EC];TComparer<Vcl.Themes.TList<Vcl.Themes.TStyleHookClass>>
 00595045    call        TComparer<Vcl.Themes.TList<Vcl.Themes.TStyleHookClass>>.Default
 0059504A    mov         ecx,dword ptr [ebp-4]
 0059504D    xor         edx,edx
 0059504F    mov         eax,esi
 00595051    call        00595090
 00595056    xor         eax,eax
 00595058    pop         edx
 00595059    pop         ecx
 0059505A    pop         ecx
 0059505B    mov         dword ptr fs:[eax],edx
 0059505E    push        595073
 00595063    lea         eax,[ebp-4]
 00595066    call        @IntfClear
 0059506B    ret
>0059506C    jmp         @HandleFinally
>00595071    jmp         00595063
 00595073    mov         eax,esi
 00595075    test        bl,bl
>00595077    je          00595088
 00595079    call        @AfterConstruction
 0059507E    pop         dword ptr fs:[0]
 00595085    add         esp,0C
 00595088    mov         eax,esi
 0059508A    pop         esi
 0059508B    pop         ebx
 0059508C    pop         ecx
 0059508D    pop         ebp
 0059508E    ret
*}
end;

//00595090
constructor sub_00595090(AComparer:IComparer<Vcl.Themes.TList<Vcl.Themes.TStyleHookClass>>);
begin
{*
 00595090    push        ebp
 00595091    mov         ebp,esp
 00595093    push        0
 00595095    push        ebx
 00595096    push        esi
 00595097    push        edi
 00595098    test        dl,dl
>0059509A    je          005950A4
 0059509C    add         esp,0FFFFFFF0
 0059509F    call        @ClassCreate
 005950A4    mov         esi,ecx
 005950A6    mov         ebx,edx
 005950A8    mov         edi,eax
 005950AA    xor         eax,eax
 005950AC    push        ebp
 005950AD    push        59511B
 005950B2    push        dword ptr fs:[eax]
 005950B5    mov         dword ptr fs:[eax],esp
 005950B8    xor         edx,edx
 005950BA    mov         eax,edi
 005950BC    call        TObject.Create
 005950C1    mov         dword ptr [edi+14],edi;TList<Vcl.Themes.TList<Vcl.Themes.TStyleHookClass>>.FOnNotify:TCo...
 005950C4    mov         dword ptr [edi+10],594FDC;TList<Vcl.Themes.TList<Vcl.Themes.TStyleHookClass>>.FOnNotify:...
 005950CB    mov         dword ptr [edi+1C],edi
 005950CE    mov         dword ptr [edi+18],594FE8;sub_00594FE8
 005950D5    mov         eax,[0059973C];TList<Vcl.Themes.TList<Vcl.Themes.TStyleHookClass>>.arrayofT
 005950DA    mov         dword ptr [edi+0C],eax;TList<Vcl.Themes.TList<Vcl.Themes.TStyleHookClass>>.FComparer:ICo...
 005950DD    lea         eax,[edi+24]
 005950E0    mov         edx,esi
 005950E2    call        @IntfCopy
 005950E7    cmp         dword ptr [edi+24],0
>005950EB    jne         00595105
 005950ED    lea         edx,[ebp-4]
 005950F0    mov         eax,[005A52EC];TComparer<Vcl.Themes.TList<Vcl.Themes.TStyleHookClass>>
 005950F5    call        TComparer<Vcl.Themes.TList<Vcl.Themes.TStyleHookClass>>.Default
 005950FA    mov         edx,dword ptr [ebp-4]
 005950FD    lea         eax,[edi+24]
 00595100    call        @IntfCopy
 00595105    xor         eax,eax
 00595107    pop         edx
 00595108    pop         ecx
 00595109    pop         ecx
 0059510A    mov         dword ptr fs:[eax],edx
 0059510D    push        595122
 00595112    lea         eax,[ebp-4]
 00595115    call        @IntfClear
 0059511A    ret
>0059511B    jmp         @HandleFinally
>00595120    jmp         00595112
 00595122    mov         eax,edi
 00595124    test        bl,bl
>00595126    je          00595137
 00595128    call        @AfterConstruction
 0059512D    pop         dword ptr fs:[0]
 00595134    add         esp,0C
 00595137    mov         eax,edi
 00595139    pop         edi
 0059513A    pop         esi
 0059513B    pop         ebx
 0059513C    pop         ecx
 0059513D    pop         ebp
 0059513E    ret
*}
end;

//00595140
destructor TList<Vcl.Themes.TList<Vcl.Themes.TStyleHookClass>>.Destroy();
begin
{*
 00595140    push        ebx
 00595141    push        esi
 00595142    call        @BeforeDestruction
 00595147    mov         ebx,edx
 00595149    mov         esi,eax
 0059514B    cmp         dword ptr [esi+8],0;TList<Vcl.Themes.TList<Vcl.Themes.TStyleHookClass>>.FCount:Integer
>0059514F    jle         0059515A
 00595151    xor         edx,edx
 00595153    mov         eax,esi
 00595155    call        00594FD0
 0059515A    push        0
 0059515C    lea         eax,[esi+20]
 0059515F    mov         ecx,1
 00595164    mov         edx,dword ptr ds:[59973C];TList<Vcl.Themes.TList<Vcl.Themes.TStyleHookClass>>.arrayofT
 0059516A    call        @DynArraySetLength
 0059516F    add         esp,4
 00595172    mov         dl,0FC
 00595174    and         dl,bl
 00595176    mov         eax,esi
 00595178    call        TEnumerable<Vcl.Themes.TList<Vcl.Themes.TStyleHookClass>>.Destroy
 0059517D    test        bl,bl
>0059517F    jle         00595188
 00595181    mov         eax,esi
 00595183    call        @ClassDestroy
 00595188    pop         esi
 00595189    pop         ebx
 0059518A    ret
*}
end;

//0059518C
{*procedure TList<Vcl.Themes.TList<Vcl.Themes.TStyleHookClass>>.Error(Msg:string; Data:NativeInt; ?:?);
begin
 0059518C    push        ebp
 0059518D    mov         ebp,esp
 0059518F    add         esp,0FFFFFFF0
 00595192    mov         dword ptr [ebp-8],ecx
 00595195    mov         dword ptr [ebp-4],edx
 00595198    push        dword ptr [ebp+4]
 0059519B    mov         eax,dword ptr [ebp-8]
 0059519E    mov         dword ptr [ebp-10],eax
 005951A1    mov         byte ptr [ebp-0C],0
 005951A5    lea         eax,[ebp-10]
 005951A8    push        eax
 005951A9    push        0
 005951AB    mov         ecx,dword ptr [ebp-4]
 005951AE    mov         dl,1
 005951B0    mov         eax,[004180BC];EListError
 005951B5    call        Exception.CreateFmt;EListError.Create
>005951BA    jmp         @RaiseExcept
end;*}

//005951C4
procedure TList<Vcl.Themes.TList<Vcl.Themes.TStyleHookClass>>.Add(Value:TList<Vcl.Themes.TStyleHookClass>);
begin
{*
 005951C4    push        ecx
 005951C5    mov         dword ptr [esp],edx
 005951C8    mov         edx,esp
 005951CA    add         eax,8
 005951CD    call        0043489C
 005951D2    pop         edx
 005951D3    ret
*}
end;

//005951D4
{*procedure TList<Vcl.Themes.TList<Vcl.Themes.TStyleHookClass>>.ToArray(?:?);
begin
 005951D4    push        ecx
 005951D5    mov         dword ptr [esp],edx
 005951D8    mov         edx,dword ptr [esp]
 005951DB    add         eax,8
 005951DE    call        00435980
 005951E3    pop         edx
 005951E4    ret
end;*}

//005951E8
procedure TList<Vcl.Themes.TList<Vcl.Themes.TStyleHookClass>>.GetEnumerator;
begin
{*
 005951E8    mov         ecx,eax
 005951EA    mov         dl,1
 005951EC    mov         eax,[00599904];TList<Vcl.Themes.TList<Vcl.Themes.TStyleHookClass>>.TEnumerator
 005951F1    call        00595224
 005951F6    ret
*}
end;

//005951F8
{*function sub_005951F8(?:?):?;
begin
 005951F8    push        ebx
 005951F9    push        esi
 005951FA    mov         ebx,dword ptr [eax+4]
 005951FD    mov         esi,dword ptr [eax+8]
 00595200    lea         eax,[ebx+8]
 00595203    mov         edx,esi
 00595205    call        00434534
 0059520A    mov         eax,dword ptr [ebx+20]
 0059520D    mov         eax,dword ptr [eax+esi*4]
 00595210    pop         esi
 00595211    pop         ebx
 00595212    ret
end;*}

//00595214
procedure sub_00595214;
begin
{*
 00595214    call        005951F8
 00595219    ret
*}
end;

//0059521C
procedure sub_0059521C;
begin
{*
 0059521C    call        TList<Vcl.Themes.TList<Vcl.Themes.TStyleHookClass>>.TEnumerator.MoveNext
 00595221    ret
*}
end;

//00595224
constructor sub_00595224(AList:TList<Vcl.Themes.TList<Vcl.Themes.TStyleHookClass>>);
begin
{*
 00595224    push        ebx
 00595225    push        esi
 00595226    push        edi
 00595227    test        dl,dl
>00595229    je          00595233
 0059522B    add         esp,0FFFFFFF0
 0059522E    call        @ClassCreate
 00595233    mov         esi,ecx
 00595235    mov         ebx,edx
 00595237    mov         edi,eax
 00595239    xor         edx,edx
 0059523B    mov         eax,edi
 0059523D    call        TObject.Create
 00595242    mov         dword ptr [edi+4],esi;TList<Vcl.Themes.TList<Vcl.Themes.TStyleHookClass>>.TEnumerator.FL...
 00595245    mov         dword ptr [edi+8],0FFFFFFFF
 0059524C    mov         eax,edi
 0059524E    test        bl,bl
>00595250    je          00595261
 00595252    call        @AfterConstruction
 00595257    pop         dword ptr fs:[0]
 0059525E    add         esp,0C
 00595261    mov         eax,edi
 00595263    pop         edi
 00595264    pop         esi
 00595265    pop         ebx
 00595266    ret
*}
end;

//00595268
function TList<Vcl.Themes.TList<Vcl.Themes.TStyleHookClass>>.TEnumerator.MoveNext:Boolean;
begin
{*
 00595268    mov         edx,dword ptr [eax+4]
 0059526B    mov         edx,dword ptr [edx+8]
 0059526E    cmp         edx,dword ptr [eax+8]
>00595271    jg          00595276
 00595273    xor         eax,eax
 00595275    ret
 00595276    inc         dword ptr [eax+8]
 00595279    mov         edx,dword ptr [eax+4]
 0059527C    mov         edx,dword ptr [edx+8]
 0059527F    cmp         edx,dword ptr [eax+8]
 00595282    setg        al
 00595285    ret
*}
end;

//005952D0
procedure sub_005952D0(?:TList<Vcl.Themes.TPair<System.string,Vcl.Themes.TSysStyleHookClass>>);
begin
{*
 005952D0    add         eax,8
 005952D3    call        00435860
 005952D8    ret
*}
end;

//005952DC
{*procedure sub_005952DC(?:?);
begin
 005952DC    push        ebx
 005952DD    push        esi
 005952DE    mov         esi,eax
 005952E0    mov         eax,esi
 005952E2    mov         ebx,dword ptr [eax]
 005952E4    call        dword ptr [ebx+8]
 005952E7    pop         esi
 005952E8    pop         ebx
 005952E9    ret
end;*}

//005952EC
{*procedure sub_005952EC(?:?);
begin
 005952EC    push        ebx
 005952ED    push        esi
 005952EE    mov         esi,eax
 005952F0    mov         eax,dword ptr [esi+24]
 005952F3    mov         ebx,dword ptr [eax]
 005952F5    call        dword ptr [ebx+0C]
 005952F8    pop         esi
 005952F9    pop         ebx
 005952FA    ret
end;*}

//005952FC
procedure sub_005952FC;
begin
{*
 005952FC    call        TList<Vcl.Themes.TPair<System.string,Vcl.Themes.TSysStyleHookClass>>.GetEnumerator
 00595301    ret
*}
end;

//00595304
{*procedure sub_00595304(?:?);
begin
 00595304    push        esi
 00595305    mov         esi,eax
 00595307    cmp         word ptr [esi+2A],0
>0059530C    je          00595319
 0059530E    push        ecx
 0059530F    mov         ecx,edx
 00595311    mov         edx,esi
 00595313    mov         eax,dword ptr [esi+2C]
 00595316    call        dword ptr [esi+28]
 00595319    pop         esi
 0059531A    ret
end;*}

//0059531C
constructor sub_0059531C;
begin
{*
 0059531C    push        ebp
 0059531D    mov         ebp,esp
 0059531F    push        0
 00595321    push        ebx
 00595322    push        esi
 00595323    test        dl,dl
>00595325    je          0059532F
 00595327    add         esp,0FFFFFFF0
 0059532A    call        @ClassCreate
 0059532F    mov         ebx,edx
 00595331    mov         esi,eax
 00595333    xor         eax,eax
 00595335    push        ebp
 00595336    push        595370
 0059533B    push        dword ptr fs:[eax]
 0059533E    mov         dword ptr fs:[eax],esp
 00595341    lea         edx,[ebp-4]
 00595344    mov         eax,[005A55A8];TComparer<Vcl.Themes.TPair<System.string,Vcl.Themes.TSysStyleHookClass>>
 00595349    call        TComparer<Vcl.Themes.TPair<System.string,Vcl.Themes.TSysStyleHookClass>>.Default
 0059534E    mov         ecx,dword ptr [ebp-4]
 00595351    xor         edx,edx
 00595353    mov         eax,esi
 00595355    call        00595394
 0059535A    xor         eax,eax
 0059535C    pop         edx
 0059535D    pop         ecx
 0059535E    pop         ecx
 0059535F    mov         dword ptr fs:[eax],edx
 00595362    push        595377
 00595367    lea         eax,[ebp-4]
 0059536A    call        @IntfClear
 0059536F    ret
>00595370    jmp         @HandleFinally
>00595375    jmp         00595367
 00595377    mov         eax,esi
 00595379    test        bl,bl
>0059537B    je          0059538C
 0059537D    call        @AfterConstruction
 00595382    pop         dword ptr fs:[0]
 00595389    add         esp,0C
 0059538C    mov         eax,esi
 0059538E    pop         esi
 0059538F    pop         ebx
 00595390    pop         ecx
 00595391    pop         ebp
 00595392    ret
*}
end;

//00595394
constructor sub_00595394(AComparer:IComparer<Vcl.Themes.TPair<System.string,Vcl.Themes.TSysStyleHookClass>>);
begin
{*
 00595394    push        ebp
 00595395    mov         ebp,esp
 00595397    push        0
 00595399    push        ebx
 0059539A    push        esi
 0059539B    push        edi
 0059539C    test        dl,dl
>0059539E    je          005953A8
 005953A0    add         esp,0FFFFFFF0
 005953A3    call        @ClassCreate
 005953A8    mov         esi,ecx
 005953AA    mov         ebx,edx
 005953AC    mov         edi,eax
 005953AE    xor         eax,eax
 005953B0    push        ebp
 005953B1    push        59541F
 005953B6    push        dword ptr fs:[eax]
 005953B9    mov         dword ptr fs:[eax],esp
 005953BC    xor         edx,edx
 005953BE    mov         eax,edi
 005953C0    call        TObject.Create
 005953C5    mov         dword ptr [edi+14],edi
 005953C8    mov         dword ptr [edi+10],5952DC;sub_005952DC
 005953CF    mov         dword ptr [edi+1C],edi
 005953D2    mov         dword ptr [edi+18],5952EC;sub_005952EC
 005953D9    mov         eax,[0059A7CC];TList<Vcl.Themes.TPair<System.string,Vcl.Themes.TSysStyleHookClass>>.arra...
 005953DE    mov         dword ptr [edi+0C],eax
 005953E1    lea         eax,[edi+24]
 005953E4    mov         edx,esi
 005953E6    call        @IntfCopy
 005953EB    cmp         dword ptr [edi+24],0
>005953EF    jne         00595409
 005953F1    lea         edx,[ebp-4]
 005953F4    mov         eax,[005A55A8];TComparer<Vcl.Themes.TPair<System.string,Vcl.Themes.TSysStyleHookClass>>
 005953F9    call        TComparer<Vcl.Themes.TPair<System.string,Vcl.Themes.TSysStyleHookClass>>.Default
 005953FE    mov         edx,dword ptr [ebp-4]
 00595401    lea         eax,[edi+24]
 00595404    call        @IntfCopy
 00595409    xor         eax,eax
 0059540B    pop         edx
 0059540C    pop         ecx
 0059540D    pop         ecx
 0059540E    mov         dword ptr fs:[eax],edx
 00595411    push        595426
 00595416    lea         eax,[ebp-4]
 00595419    call        @IntfClear
 0059541E    ret
>0059541F    jmp         @HandleFinally
>00595424    jmp         00595416
 00595426    mov         eax,edi
 00595428    test        bl,bl
>0059542A    je          0059543B
 0059542C    call        @AfterConstruction
 00595431    pop         dword ptr fs:[0]
 00595438    add         esp,0C
 0059543B    mov         eax,edi
 0059543D    pop         edi
 0059543E    pop         esi
 0059543F    pop         ebx
 00595440    pop         ecx
 00595441    pop         ebp
 00595442    ret
*}
end;

//00595444
destructor TList<Vcl.Themes.TPair<System.string,Vcl.Themes.TSysStyleHookClass>>.Destroy();
begin
{*
 00595444    push        ebx
 00595445    push        esi
 00595446    call        @BeforeDestruction
 0059544B    mov         ebx,edx
 0059544D    mov         esi,eax
 0059544F    cmp         dword ptr [esi+8],0
>00595453    jle         0059545E
 00595455    xor         edx,edx
 00595457    mov         eax,esi
 00595459    call        005952D0
 0059545E    push        0
 00595460    lea         eax,[esi+20]
 00595463    mov         ecx,1
 00595468    mov         edx,dword ptr ds:[59A7CC];TList<Vcl.Themes.TPair<System.string,Vcl.Themes.TSysStyleHookC...
 0059546E    call        @DynArraySetLength
 00595473    add         esp,4
 00595476    mov         dl,0FC
 00595478    and         dl,bl
 0059547A    mov         eax,esi
 0059547C    call        TEnumerable<Vcl.Themes.TPair<System.string,Vcl.Themes.TSysStyleHookClass>>.Destroy
 00595481    test        bl,bl
>00595483    jle         0059548C
 00595485    mov         eax,esi
 00595487    call        @ClassDestroy
 0059548C    pop         esi
 0059548D    pop         ebx
 0059548E    ret
*}
end;

//00595490
{*procedure TList<Vcl.Themes.TPair<System.string,Vcl.Themes.TSysStyleHookClass>>.Error(Msg:string; Data:NativeInt; ?:?);
begin
 00595490    push        ebp
 00595491    mov         ebp,esp
 00595493    add         esp,0FFFFFFF0
 00595496    mov         dword ptr [ebp-8],ecx
 00595499    mov         dword ptr [ebp-4],edx
 0059549C    push        dword ptr [ebp+4]
 0059549F    mov         eax,dword ptr [ebp-8]
 005954A2    mov         dword ptr [ebp-10],eax
 005954A5    mov         byte ptr [ebp-0C],0
 005954A9    lea         eax,[ebp-10]
 005954AC    push        eax
 005954AD    push        0
 005954AF    mov         ecx,dword ptr [ebp-4]
 005954B2    mov         dl,1
 005954B4    mov         eax,[004180BC];EListError
 005954B9    call        Exception.CreateFmt;EListError.Create
>005954BE    jmp         @RaiseExcept
end;*}

//005954C8
procedure TList<Vcl.Themes.TPair<System.string,Vcl.Themes.TSysStyleHookClass>>.Add(Value:TPair<System.string,Vcl.Themes.TSysStyleHookClass>);
begin
{*
 005954C8    push        ecx
 005954C9    mov         dword ptr [esp],edx
 005954CC    mov         edx,dword ptr [esp]
 005954CF    add         eax,8
 005954D2    call        0043492C
 005954D7    pop         edx
 005954D8    ret
*}
end;

//005954DC
{*procedure TList<Vcl.Themes.TPair<System.string,Vcl.Themes.TSysStyleHookClass>>.ToArray(?:?);
begin
 005954DC    push        ecx
 005954DD    mov         dword ptr [esp],edx
 005954E0    mov         edx,dword ptr [esp]
 005954E3    add         eax,8
 005954E6    call        004359D4
 005954EB    pop         edx
 005954EC    ret
end;*}

//005954F0
procedure TList<Vcl.Themes.TPair<System.string,Vcl.Themes.TSysStyleHookClass>>.GetEnumerator;
begin
{*
 005954F0    mov         ecx,eax
 005954F2    mov         dl,1
 005954F4    mov         eax,[0059AAE0];TList<Vcl.Themes.TPair<System.string,Vcl.Themes.TSysStyleHookClass>>.TEnu...
 005954F9    call        005955A4
 005954FE    ret
*}
end;

//00595500
{*procedure sub_00595500(?:TList<Vcl.Themes.TPair<System.string,Vcl.Themes.TSysStyleHookClass>>.TEnumerator; ?:?);
begin
 00595500    push        ebp
 00595501    mov         ebp,esp
 00595503    add         esp,0FFFFFFF8
 00595506    push        ebx
 00595507    push        esi
 00595508    push        edi
 00595509    mov         edi,edx
 0059550B    mov         ebx,eax
 0059550D    lea         eax,[ebp-8]
 00595510    mov         edx,dword ptr ds:[579CEC];TPair<System.string,Vcl.Themes.TSysStyleHookClass>
 00595516    call        @AddRefRecord
 0059551B    xor         eax,eax
 0059551D    push        ebp
 0059551E    push        595579
 00595523    push        dword ptr fs:[eax]
 00595526    mov         dword ptr fs:[eax],esp
 00595529    mov         esi,dword ptr [ebx+4]
 0059552C    mov         ebx,dword ptr [ebx+8]
 0059552F    lea         eax,[esi+8]
 00595532    mov         edx,ebx
 00595534    call        00434534
 00595539    lea         eax,[ebp-8]
 0059553C    mov         edx,dword ptr [esi+20]
 0059553F    lea         edx,[edx+ebx*8]
 00595542    mov         ecx,dword ptr ds:[579CEC];TPair<System.string,Vcl.Themes.TSysStyleHookClass>
 00595548    call        @CopyRecord
 0059554D    mov         eax,edi
 0059554F    lea         edx,[ebp-8]
 00595552    mov         ecx,dword ptr ds:[579CEC];TPair<System.string,Vcl.Themes.TSysStyleHookClass>
 00595558    call        @CopyRecord
 0059555D    xor         eax,eax
 0059555F    pop         edx
 00595560    pop         ecx
 00595561    pop         ecx
 00595562    mov         dword ptr fs:[eax],edx
 00595565    push        595580
 0059556A    lea         eax,[ebp-8]
 0059556D    mov         edx,dword ptr ds:[579CEC];TPair<System.string,Vcl.Themes.TSysStyleHookClass>
 00595573    call        @FinalizeRecord
 00595578    ret
>00595579    jmp         @HandleFinally
>0059557E    jmp         0059556A
 00595580    pop         edi
 00595581    pop         esi
 00595582    pop         ebx
 00595583    pop         ecx
 00595584    pop         ecx
 00595585    pop         ebp
 00595586    ret
end;*}

//00595588
{*procedure sub_00595588(?:?);
begin
 00595588    push        ebx
 00595589    push        esi
 0059558A    mov         esi,edx
 0059558C    mov         ebx,eax
 0059558E    mov         edx,esi
 00595590    mov         eax,ebx
 00595592    call        00595500
 00595597    pop         esi
 00595598    pop         ebx
 00595599    ret
end;*}

//0059559C
procedure sub_0059559C;
begin
{*
 0059559C    call        TList<Vcl.Themes.TPair<System.string,Vcl.Themes.TSysStyleHookClass>>.TEnumerator.MoveNext
 005955A1    ret
*}
end;

//005955A4
constructor sub_005955A4(AList:TList<Vcl.Themes.TPair<System.string,Vcl.Themes.TSysStyleHookClass>>);
begin
{*
 005955A4    push        ebx
 005955A5    push        esi
 005955A6    push        edi
 005955A7    test        dl,dl
>005955A9    je          005955B3
 005955AB    add         esp,0FFFFFFF0
 005955AE    call        @ClassCreate
 005955B3    mov         esi,ecx
 005955B5    mov         ebx,edx
 005955B7    mov         edi,eax
 005955B9    xor         edx,edx
 005955BB    mov         eax,edi
 005955BD    call        TObject.Create
 005955C2    mov         dword ptr [edi+4],esi
 005955C5    mov         dword ptr [edi+8],0FFFFFFFF
 005955CC    mov         eax,edi
 005955CE    test        bl,bl
>005955D0    je          005955E1
 005955D2    call        @AfterConstruction
 005955D7    pop         dword ptr fs:[0]
 005955DE    add         esp,0C
 005955E1    mov         eax,edi
 005955E3    pop         edi
 005955E4    pop         esi
 005955E5    pop         ebx
 005955E6    ret
*}
end;

//005955E8
function TList<Vcl.Themes.TPair<System.string,Vcl.Themes.TSysStyleHookClass>>.TEnumerator.MoveNext:Boolean;
begin
{*
 005955E8    mov         edx,dword ptr [eax+4]
 005955EB    mov         edx,dword ptr [edx+8]
 005955EE    cmp         edx,dword ptr [eax+8]
>005955F1    jg          005955F6
 005955F3    xor         eax,eax
 005955F5    ret
 005955F6    inc         dword ptr [eax+8]
 005955F9    mov         edx,dword ptr [eax+4]
 005955FC    mov         edx,dword ptr [edx+8]
 005955FF    cmp         edx,dword ptr [eax+8]
 00595602    setg        al
 00595605    ret
*}
end;

//00595650
procedure sub_00595650(?:TList<Vcl.Themes.TSysStyleHookClass>);
begin
{*
 00595650    add         eax,8
 00595653    call        004357A0
 00595658    ret
*}
end;

//0059565C
{*procedure sub_0059565C(?:?; ?:?);
begin
 0059565C    push        ebx
 0059565D    mov         edx,dword ptr [edx]
 0059565F    mov         ebx,dword ptr [eax]
 00595661    call        dword ptr [ebx+8]
 00595664    pop         ebx
 00595665    ret
end;*}

//00595668
{*procedure sub_00595668(?:?; ?:?; ?:?);
begin
 00595668    push        ebx
 00595669    mov         edx,dword ptr [edx]
 0059566B    mov         ecx,dword ptr [ecx]
 0059566D    mov         eax,dword ptr [eax+24]
 00595670    mov         ebx,dword ptr [eax]
 00595672    call        dword ptr [ebx+0C]
 00595675    pop         ebx
 00595676    ret
end;*}

//00595678
procedure sub_00595678;
begin
{*
 00595678    call        TList<Vcl.Themes.TSysStyleHookClass>.GetEnumerator
 0059567D    ret
*}
end;

//00595680
{*procedure sub_00595680(?:?);
begin
 00595680    push        ebx
 00595681    cmp         word ptr [eax+2A],0
>00595686    je          00595695
 00595688    push        ecx
 00595689    mov         ebx,eax
 0059568B    mov         ecx,edx
 0059568D    mov         edx,eax
 0059568F    mov         eax,dword ptr [ebx+2C]
 00595692    call        dword ptr [ebx+28]
 00595695    pop         ebx
 00595696    ret
end;*}

//00595698
constructor sub_00595698;
begin
{*
 00595698    push        ebp
 00595699    mov         ebp,esp
 0059569B    push        0
 0059569D    push        ebx
 0059569E    push        esi
 0059569F    test        dl,dl
>005956A1    je          005956AB
 005956A3    add         esp,0FFFFFFF0
 005956A6    call        @ClassCreate
 005956AB    mov         ebx,edx
 005956AD    mov         esi,eax
 005956AF    xor         eax,eax
 005956B1    push        ebp
 005956B2    push        5956EC
 005956B7    push        dword ptr fs:[eax]
 005956BA    mov         dword ptr fs:[eax],esp
 005956BD    lea         edx,[ebp-4]
 005956C0    mov         eax,[005A586C];TComparer<Vcl.Themes.TSysStyleHookClass>
 005956C5    call        TComparer<Vcl.Themes.TSysStyleHookClass>.Default
 005956CA    mov         ecx,dword ptr [ebp-4]
 005956CD    xor         edx,edx
 005956CF    mov         eax,esi
 005956D1    call        00595710
 005956D6    xor         eax,eax
 005956D8    pop         edx
 005956D9    pop         ecx
 005956DA    pop         ecx
 005956DB    mov         dword ptr fs:[eax],edx
 005956DE    push        5956F3
 005956E3    lea         eax,[ebp-4]
 005956E6    call        @IntfClear
 005956EB    ret
>005956EC    jmp         @HandleFinally
>005956F1    jmp         005956E3
 005956F3    mov         eax,esi
 005956F5    test        bl,bl
>005956F7    je          00595708
 005956F9    call        @AfterConstruction
 005956FE    pop         dword ptr fs:[0]
 00595705    add         esp,0C
 00595708    mov         eax,esi
 0059570A    pop         esi
 0059570B    pop         ebx
 0059570C    pop         ecx
 0059570D    pop         ebp
 0059570E    ret
*}
end;

//00595710
constructor sub_00595710(AComparer:IComparer<Vcl.Themes.TSysStyleHookClass>);
begin
{*
 00595710    push        ebp
 00595711    mov         ebp,esp
 00595713    push        0
 00595715    push        ebx
 00595716    push        esi
 00595717    push        edi
 00595718    test        dl,dl
>0059571A    je          00595724
 0059571C    add         esp,0FFFFFFF0
 0059571F    call        @ClassCreate
 00595724    mov         esi,ecx
 00595726    mov         ebx,edx
 00595728    mov         edi,eax
 0059572A    xor         eax,eax
 0059572C    push        ebp
 0059572D    push        59579B
 00595732    push        dword ptr fs:[eax]
 00595735    mov         dword ptr fs:[eax],esp
 00595738    xor         edx,edx
 0059573A    mov         eax,edi
 0059573C    call        TObject.Create
 00595741    mov         dword ptr [edi+14],edi
 00595744    mov         dword ptr [edi+10],59565C;sub_0059565C
 0059574B    mov         dword ptr [edi+1C],edi
 0059574E    mov         dword ptr [edi+18],595668;sub_00595668
 00595755    mov         eax,[0059BA24];TList<Vcl.Themes.TSysStyleHookClass>.arrayofT
 0059575A    mov         dword ptr [edi+0C],eax
 0059575D    lea         eax,[edi+24]
 00595760    mov         edx,esi
 00595762    call        @IntfCopy
 00595767    cmp         dword ptr [edi+24],0
>0059576B    jne         00595785
 0059576D    lea         edx,[ebp-4]
 00595770    mov         eax,[005A586C];TComparer<Vcl.Themes.TSysStyleHookClass>
 00595775    call        TComparer<Vcl.Themes.TSysStyleHookClass>.Default
 0059577A    mov         edx,dword ptr [ebp-4]
 0059577D    lea         eax,[edi+24]
 00595780    call        @IntfCopy
 00595785    xor         eax,eax
 00595787    pop         edx
 00595788    pop         ecx
 00595789    pop         ecx
 0059578A    mov         dword ptr fs:[eax],edx
 0059578D    push        5957A2
 00595792    lea         eax,[ebp-4]
 00595795    call        @IntfClear
 0059579A    ret
>0059579B    jmp         @HandleFinally
>005957A0    jmp         00595792
 005957A2    mov         eax,edi
 005957A4    test        bl,bl
>005957A6    je          005957B7
 005957A8    call        @AfterConstruction
 005957AD    pop         dword ptr fs:[0]
 005957B4    add         esp,0C
 005957B7    mov         eax,edi
 005957B9    pop         edi
 005957BA    pop         esi
 005957BB    pop         ebx
 005957BC    pop         ecx
 005957BD    pop         ebp
 005957BE    ret
*}
end;

//005957C0
destructor TList<Vcl.Themes.TSysStyleHookClass>.Destroy();
begin
{*
 005957C0    push        ebx
 005957C1    push        esi
 005957C2    call        @BeforeDestruction
 005957C7    mov         ebx,edx
 005957C9    mov         esi,eax
 005957CB    cmp         dword ptr [esi+8],0
>005957CF    jle         005957DA
 005957D1    xor         edx,edx
 005957D3    mov         eax,esi
 005957D5    call        00595650
 005957DA    push        0
 005957DC    lea         eax,[esi+20]
 005957DF    mov         ecx,1
 005957E4    mov         edx,dword ptr ds:[59BA24];TList<Vcl.Themes.TSysStyleHookClass>.arrayofT
 005957EA    call        @DynArraySetLength
 005957EF    add         esp,4
 005957F2    mov         dl,0FC
 005957F4    and         dl,bl
 005957F6    mov         eax,esi
 005957F8    call        TEnumerable<Vcl.Themes.TSysStyleHookClass>.Destroy
 005957FD    test        bl,bl
>005957FF    jle         00595808
 00595801    mov         eax,esi
 00595803    call        @ClassDestroy
 00595808    pop         esi
 00595809    pop         ebx
 0059580A    ret
*}
end;

//0059580C
{*procedure TList<Vcl.Themes.TSysStyleHookClass>.Error(Msg:string; Data:NativeInt; ?:?);
begin
 0059580C    push        ebp
 0059580D    mov         ebp,esp
 0059580F    add         esp,0FFFFFFF0
 00595812    mov         dword ptr [ebp-8],ecx
 00595815    mov         dword ptr [ebp-4],edx
 00595818    push        dword ptr [ebp+4]
 0059581B    mov         eax,dword ptr [ebp-8]
 0059581E    mov         dword ptr [ebp-10],eax
 00595821    mov         byte ptr [ebp-0C],0
 00595825    lea         eax,[ebp-10]
 00595828    push        eax
 00595829    push        0
 0059582B    mov         ecx,dword ptr [ebp-4]
 0059582E    mov         dl,1
 00595830    mov         eax,[004180BC];EListError
 00595835    call        Exception.CreateFmt;EListError.Create
>0059583A    jmp         @RaiseExcept
end;*}

//00595844
procedure TList<Vcl.Themes.TSysStyleHookClass>.Add(Value:TSysStyleHookClass);
begin
{*
 00595844    push        ecx
 00595845    mov         dword ptr [esp],edx
 00595848    mov         edx,esp
 0059584A    add         eax,8
 0059584D    call        0043489C
 00595852    pop         edx
 00595853    ret
*}
end;

//00595854
{*procedure TList<Vcl.Themes.TSysStyleHookClass>.ToArray(?:?);
begin
 00595854    push        ecx
 00595855    mov         dword ptr [esp],edx
 00595858    mov         edx,dword ptr [esp]
 0059585B    add         eax,8
 0059585E    call        00435980
 00595863    pop         edx
 00595864    ret
end;*}

//00595868
procedure TList<Vcl.Themes.TSysStyleHookClass>.GetEnumerator;
begin
{*
 00595868    mov         ecx,eax
 0059586A    mov         dl,1
 0059586C    mov         eax,[0059BBB0];TList<Vcl.Themes.TSysStyleHookClass>.TEnumerator
 00595871    call        005958A4
 00595876    ret
*}
end;

//00595878
{*function sub_00595878(?:?):?;
begin
 00595878    push        ebx
 00595879    push        esi
 0059587A    mov         ebx,dword ptr [eax+4]
 0059587D    mov         esi,dword ptr [eax+8]
 00595880    lea         eax,[ebx+8]
 00595883    mov         edx,esi
 00595885    call        00434534
 0059588A    mov         eax,dword ptr [ebx+20]
 0059588D    mov         eax,dword ptr [eax+esi*4]
 00595890    pop         esi
 00595891    pop         ebx
 00595892    ret
end;*}

//00595894
procedure sub_00595894;
begin
{*
 00595894    call        00595878
 00595899    ret
*}
end;

//0059589C
procedure sub_0059589C;
begin
{*
 0059589C    call        TList<Vcl.Themes.TSysStyleHookClass>.TEnumerator.MoveNext
 005958A1    ret
*}
end;

//005958A4
constructor sub_005958A4(AList:TList<Vcl.Themes.TSysStyleHookClass>);
begin
{*
 005958A4    push        ebx
 005958A5    push        esi
 005958A6    push        edi
 005958A7    test        dl,dl
>005958A9    je          005958B3
 005958AB    add         esp,0FFFFFFF0
 005958AE    call        @ClassCreate
 005958B3    mov         esi,ecx
 005958B5    mov         ebx,edx
 005958B7    mov         edi,eax
 005958B9    xor         edx,edx
 005958BB    mov         eax,edi
 005958BD    call        TObject.Create
 005958C2    mov         dword ptr [edi+4],esi
 005958C5    mov         dword ptr [edi+8],0FFFFFFFF
 005958CC    mov         eax,edi
 005958CE    test        bl,bl
>005958D0    je          005958E1
 005958D2    call        @AfterConstruction
 005958D7    pop         dword ptr fs:[0]
 005958DE    add         esp,0C
 005958E1    mov         eax,edi
 005958E3    pop         edi
 005958E4    pop         esi
 005958E5    pop         ebx
 005958E6    ret
*}
end;

//005958E8
function TList<Vcl.Themes.TSysStyleHookClass>.TEnumerator.MoveNext:Boolean;
begin
{*
 005958E8    mov         edx,dword ptr [eax+4]
 005958EB    mov         edx,dword ptr [edx+8]
 005958EE    cmp         edx,dword ptr [eax+8]
>005958F1    jg          005958F6
 005958F3    xor         eax,eax
 005958F5    ret
 005958F6    inc         dword ptr [eax+8]
 005958F9    mov         edx,dword ptr [eax+4]
 005958FC    mov         edx,dword ptr [edx+8]
 005958FF    cmp         edx,dword ptr [eax+8]
 00595902    setg        al
 00595905    ret
*}
end;

//00595950
procedure sub_00595950(?:TList<Vcl.Themes.TPair<Winapi.Windows.HWND,Vcl.Themes.TSysStyleHook>>);
begin
{*
 00595950    add         eax,8
 00595953    call        00435800
 00595958    ret
*}
end;

//0059595C
{*procedure sub_0059595C(?:?);
begin
 0059595C    push        ebx
 0059595D    push        esi
 0059595E    mov         esi,eax
 00595960    mov         eax,esi
 00595962    mov         ebx,dword ptr [eax]
 00595964    call        dword ptr [ebx+8]
 00595967    pop         esi
 00595968    pop         ebx
 00595969    ret
end;*}

//0059596C
{*procedure sub_0059596C(?:?);
begin
 0059596C    push        ebx
 0059596D    push        esi
 0059596E    mov         esi,eax
 00595970    mov         eax,dword ptr [esi+24]
 00595973    mov         ebx,dword ptr [eax]
 00595975    call        dword ptr [ebx+0C]
 00595978    pop         esi
 00595979    pop         ebx
 0059597A    ret
end;*}

//0059597C
procedure sub_0059597C;
begin
{*
 0059597C    call        TList<Vcl.Themes.TPair<Winapi.Windows.HWND,Vcl.Themes.TSysStyleHook>>.GetEnumerator
 00595981    ret
*}
end;

//00595984
{*procedure sub_00595984(?:?);
begin
 00595984    push        esi
 00595985    mov         esi,eax
 00595987    cmp         word ptr [esi+2A],0
>0059598C    je          00595999
 0059598E    push        ecx
 0059598F    mov         ecx,edx
 00595991    mov         edx,esi
 00595993    mov         eax,dword ptr [esi+2C]
 00595996    call        dword ptr [esi+28]
 00595999    pop         esi
 0059599A    ret
end;*}

//0059599C
constructor sub_0059599C;
begin
{*
 0059599C    push        ebp
 0059599D    mov         ebp,esp
 0059599F    push        0
 005959A1    push        ebx
 005959A2    push        esi
 005959A3    test        dl,dl
>005959A5    je          005959AF
 005959A7    add         esp,0FFFFFFF0
 005959AA    call        @ClassCreate
 005959AF    mov         ebx,edx
 005959B1    mov         esi,eax
 005959B3    xor         eax,eax
 005959B5    push        ebp
 005959B6    push        5959F0
 005959BB    push        dword ptr fs:[eax]
 005959BE    mov         dword ptr fs:[eax],esp
 005959C1    lea         edx,[ebp-4]
 005959C4    mov         eax,[005A5B14];TComparer<Vcl.Themes.TPair<Winapi.Windows.HWND,Vcl.Themes.TSysStyleHook>>
 005959C9    call        TComparer<Vcl.Themes.TPair<Winapi.Windows.HWND,Vcl.Themes.TSysStyleHook>>.Default
 005959CE    mov         ecx,dword ptr [ebp-4]
 005959D1    xor         edx,edx
 005959D3    mov         eax,esi
 005959D5    call        00595A14
 005959DA    xor         eax,eax
 005959DC    pop         edx
 005959DD    pop         ecx
 005959DE    pop         ecx
 005959DF    mov         dword ptr fs:[eax],edx
 005959E2    push        5959F7
 005959E7    lea         eax,[ebp-4]
 005959EA    call        @IntfClear
 005959EF    ret
>005959F0    jmp         @HandleFinally
>005959F5    jmp         005959E7
 005959F7    mov         eax,esi
 005959F9    test        bl,bl
>005959FB    je          00595A0C
 005959FD    call        @AfterConstruction
 00595A02    pop         dword ptr fs:[0]
 00595A09    add         esp,0C
 00595A0C    mov         eax,esi
 00595A0E    pop         esi
 00595A0F    pop         ebx
 00595A10    pop         ecx
 00595A11    pop         ebp
 00595A12    ret
*}
end;

//00595A14
constructor sub_00595A14(AComparer:IComparer<Vcl.Themes.TPair<Winapi.Windows.HWND,Vcl.Themes.TSysStyleHook>>);
begin
{*
 00595A14    push        ebp
 00595A15    mov         ebp,esp
 00595A17    push        0
 00595A19    push        ebx
 00595A1A    push        esi
 00595A1B    push        edi
 00595A1C    test        dl,dl
>00595A1E    je          00595A28
 00595A20    add         esp,0FFFFFFF0
 00595A23    call        @ClassCreate
 00595A28    mov         esi,ecx
 00595A2A    mov         ebx,edx
 00595A2C    mov         edi,eax
 00595A2E    xor         eax,eax
 00595A30    push        ebp
 00595A31    push        595A9F
 00595A36    push        dword ptr fs:[eax]
 00595A39    mov         dword ptr fs:[eax],esp
 00595A3C    xor         edx,edx
 00595A3E    mov         eax,edi
 00595A40    call        TObject.Create
 00595A45    mov         dword ptr [edi+14],edi
 00595A48    mov         dword ptr [edi+10],59595C;sub_0059595C
 00595A4F    mov         dword ptr [edi+1C],edi
 00595A52    mov         dword ptr [edi+18],59596C;sub_0059596C
 00595A59    mov         eax,[0059CA3C];TList<Vcl.Themes.TPair<Winapi.Windows.HWND,Vcl.Themes.TSysStyleHook>>.arr...
 00595A5E    mov         dword ptr [edi+0C],eax
 00595A61    lea         eax,[edi+24]
 00595A64    mov         edx,esi
 00595A66    call        @IntfCopy
 00595A6B    cmp         dword ptr [edi+24],0
>00595A6F    jne         00595A89
 00595A71    lea         edx,[ebp-4]
 00595A74    mov         eax,[005A5B14];TComparer<Vcl.Themes.TPair<Winapi.Windows.HWND,Vcl.Themes.TSysStyleHook>>
 00595A79    call        TComparer<Vcl.Themes.TPair<Winapi.Windows.HWND,Vcl.Themes.TSysStyleHook>>.Default
 00595A7E    mov         edx,dword ptr [ebp-4]
 00595A81    lea         eax,[edi+24]
 00595A84    call        @IntfCopy
 00595A89    xor         eax,eax
 00595A8B    pop         edx
 00595A8C    pop         ecx
 00595A8D    pop         ecx
 00595A8E    mov         dword ptr fs:[eax],edx
 00595A91    push        595AA6
 00595A96    lea         eax,[ebp-4]
 00595A99    call        @IntfClear
 00595A9E    ret
>00595A9F    jmp         @HandleFinally
>00595AA4    jmp         00595A96
 00595AA6    mov         eax,edi
 00595AA8    test        bl,bl
>00595AAA    je          00595ABB
 00595AAC    call        @AfterConstruction
 00595AB1    pop         dword ptr fs:[0]
 00595AB8    add         esp,0C
 00595ABB    mov         eax,edi
 00595ABD    pop         edi
 00595ABE    pop         esi
 00595ABF    pop         ebx
 00595AC0    pop         ecx
 00595AC1    pop         ebp
 00595AC2    ret
*}
end;

//00595AC4
destructor TList<Vcl.Themes.TPair<Winapi.Windows.HWND,Vcl.Themes.TSysStyleHook>>.Destroy();
begin
{*
 00595AC4    push        ebx
 00595AC5    push        esi
 00595AC6    call        @BeforeDestruction
 00595ACB    mov         ebx,edx
 00595ACD    mov         esi,eax
 00595ACF    cmp         dword ptr [esi+8],0
>00595AD3    jle         00595ADE
 00595AD5    xor         edx,edx
 00595AD7    mov         eax,esi
 00595AD9    call        00595950
 00595ADE    push        0
 00595AE0    lea         eax,[esi+20]
 00595AE3    mov         ecx,1
 00595AE8    mov         edx,dword ptr ds:[59CA3C];TList<Vcl.Themes.TPair<Winapi.Windows.HWND,Vcl.Themes.TSysStyl...
 00595AEE    call        @DynArraySetLength
 00595AF3    add         esp,4
 00595AF6    mov         dl,0FC
 00595AF8    and         dl,bl
 00595AFA    mov         eax,esi
 00595AFC    call        TEnumerable<Vcl.Themes.TPair<Winapi.Windows.HWND,Vcl.Themes.TSysStyleHook>>.Destroy
 00595B01    test        bl,bl
>00595B03    jle         00595B0C
 00595B05    mov         eax,esi
 00595B07    call        @ClassDestroy
 00595B0C    pop         esi
 00595B0D    pop         ebx
 00595B0E    ret
*}
end;

//00595B10
{*procedure TList<Vcl.Themes.TPair<Winapi.Windows.HWND,Vcl.Themes.TSysStyleHook>>.Error(Msg:string; Data:NativeInt; ?:?);
begin
 00595B10    push        ebp
 00595B11    mov         ebp,esp
 00595B13    add         esp,0FFFFFFF0
 00595B16    mov         dword ptr [ebp-8],ecx
 00595B19    mov         dword ptr [ebp-4],edx
 00595B1C    push        dword ptr [ebp+4]
 00595B1F    mov         eax,dword ptr [ebp-8]
 00595B22    mov         dword ptr [ebp-10],eax
 00595B25    mov         byte ptr [ebp-0C],0
 00595B29    lea         eax,[ebp-10]
 00595B2C    push        eax
 00595B2D    push        0
 00595B2F    mov         ecx,dword ptr [ebp-4]
 00595B32    mov         dl,1
 00595B34    mov         eax,[004180BC];EListError
 00595B39    call        Exception.CreateFmt;EListError.Create
>00595B3E    jmp         @RaiseExcept
end;*}

//00595B48
procedure TList<Vcl.Themes.TPair<Winapi.Windows.HWND,Vcl.Themes.TSysStyleHook>>.Add(Value:TPair<Winapi.Windows.HWND,Vcl.Themes.TSysStyleHook>);
begin
{*
 00595B48    push        ecx
 00595B49    mov         dword ptr [esp],edx
 00595B4C    mov         edx,dword ptr [esp]
 00595B4F    add         eax,8
 00595B52    call        004348E0
 00595B57    pop         edx
 00595B58    ret
*}
end;

//00595B5C
{*procedure TList<Vcl.Themes.TPair<Winapi.Windows.HWND,Vcl.Themes.TSysStyleHook>>.ToArray(?:?);
begin
 00595B5C    push        ecx
 00595B5D    mov         dword ptr [esp],edx
 00595B60    mov         edx,dword ptr [esp]
 00595B63    add         eax,8
 00595B66    call        00435980
 00595B6B    pop         edx
 00595B6C    ret
end;*}

//00595B70
procedure TList<Vcl.Themes.TPair<Winapi.Windows.HWND,Vcl.Themes.TSysStyleHook>>.GetEnumerator;
begin
{*
 00595B70    mov         ecx,eax
 00595B72    mov         dl,1
 00595B74    mov         eax,[0059CD58];TList<Vcl.Themes.TPair<Winapi.Windows.HWND,Vcl.Themes.TSysStyleHook>>.TEn...
 00595B79    call        00595BD8
 00595B7E    ret
*}
end;

//00595B80
{*procedure sub_00595B80(?:TList<Vcl.Themes.TPair<Winapi.Windows.HWND,Vcl.Themes.TSysStyleHook>>.TEnumerator; ?:?);
begin
 00595B80    push        ebx
 00595B81    push        esi
 00595B82    push        edi
 00595B83    add         esp,0FFFFFFF8
 00595B86    mov         edi,edx
 00595B88    mov         ebx,dword ptr [eax+4]
 00595B8B    mov         esi,dword ptr [eax+8]
 00595B8E    lea         eax,[ebx+8]
 00595B91    mov         edx,esi
 00595B93    call        00434534
 00595B98    mov         eax,dword ptr [ebx+20]
 00595B9B    mov         edx,dword ptr [eax+esi*8]
 00595B9E    mov         dword ptr [esp],edx
 00595BA1    mov         edx,dword ptr [eax+esi*8+4]
 00595BA5    mov         dword ptr [esp+4],edx
 00595BA9    mov         eax,dword ptr [esp]
 00595BAC    mov         dword ptr [edi],eax
 00595BAE    mov         eax,dword ptr [esp+4]
 00595BB2    mov         dword ptr [edi+4],eax
 00595BB5    pop         ecx
 00595BB6    pop         edx
 00595BB7    pop         edi
 00595BB8    pop         esi
 00595BB9    pop         ebx
 00595BBA    ret
end;*}

//00595BBC
{*procedure sub_00595BBC(?:?);
begin
 00595BBC    push        ebx
 00595BBD    push        esi
 00595BBE    mov         esi,edx
 00595BC0    mov         ebx,eax
 00595BC2    mov         edx,esi
 00595BC4    mov         eax,ebx
 00595BC6    call        00595B80
 00595BCB    pop         esi
 00595BCC    pop         ebx
 00595BCD    ret
end;*}

//00595BD0
procedure sub_00595BD0;
begin
{*
 00595BD0    call        TList<Vcl.Themes.TPair<Winapi.Windows.HWND,Vcl.Themes.TSysStyleHook>>.TEnumerator.MoveNext
 00595BD5    ret
*}
end;

//00595BD8
constructor sub_00595BD8(AList:TList<Vcl.Themes.TPair<Winapi.Windows.HWND,Vcl.Themes.TSysStyleHook>>);
begin
{*
 00595BD8    push        ebx
 00595BD9    push        esi
 00595BDA    push        edi
 00595BDB    test        dl,dl
>00595BDD    je          00595BE7
 00595BDF    add         esp,0FFFFFFF0
 00595BE2    call        @ClassCreate
 00595BE7    mov         esi,ecx
 00595BE9    mov         ebx,edx
 00595BEB    mov         edi,eax
 00595BED    xor         edx,edx
 00595BEF    mov         eax,edi
 00595BF1    call        TObject.Create
 00595BF6    mov         dword ptr [edi+4],esi
 00595BF9    mov         dword ptr [edi+8],0FFFFFFFF
 00595C00    mov         eax,edi
 00595C02    test        bl,bl
>00595C04    je          00595C15
 00595C06    call        @AfterConstruction
 00595C0B    pop         dword ptr fs:[0]
 00595C12    add         esp,0C
 00595C15    mov         eax,edi
 00595C17    pop         edi
 00595C18    pop         esi
 00595C19    pop         ebx
 00595C1A    ret
*}
end;

//00595C1C
function TList<Vcl.Themes.TPair<Winapi.Windows.HWND,Vcl.Themes.TSysStyleHook>>.TEnumerator.MoveNext:Boolean;
begin
{*
 00595C1C    mov         edx,dword ptr [eax+4]
 00595C1F    mov         edx,dword ptr [edx+8]
 00595C22    cmp         edx,dword ptr [eax+8]
>00595C25    jg          00595C2A
 00595C27    xor         eax,eax
 00595C29    ret
 00595C2A    inc         dword ptr [eax+8]
 00595C2D    mov         edx,dword ptr [eax+4]
 00595C30    mov         edx,dword ptr [edx+8]
 00595C33    cmp         edx,dword ptr [eax+8]
 00595C36    setg        al
 00595C39    ret
*}
end;

//00595C3C
{*procedure sub_00595C3C(?:?);
begin
 00595C3C    push        ebx
 00595C3D    mov         ebx,eax
 00595C3F    mov         ecx,4
 00595C44    mov         edx,dword ptr ds:[40FA04];HWND
 00595C4A    mov         al,1
 00595C4C    call        _LookupVtableInfo
 00595C51    mov         edx,eax
 00595C53    mov         eax,ebx
 00595C55    call        @IntfCopy
 00595C5A    pop         ebx
 00595C5B    ret
end;*}

//00595CA4
procedure sub_00595CA4(?:TList<Winapi.Windows.HWND>);
begin
{*
 00595CA4    add         eax,8
 00595CA7    call        004357A0
 00595CAC    ret
*}
end;

//00595CB0
{*procedure sub_00595CB0(?:?; ?:?);
begin
 00595CB0    push        ebx
 00595CB1    mov         edx,dword ptr [edx]
 00595CB3    mov         ebx,dword ptr [eax]
 00595CB5    call        dword ptr [ebx+8]
 00595CB8    pop         ebx
 00595CB9    ret
end;*}

//00595CBC
{*procedure sub_00595CBC(?:?; ?:?; ?:?);
begin
 00595CBC    push        ebx
 00595CBD    mov         edx,dword ptr [edx]
 00595CBF    mov         ecx,dword ptr [ecx]
 00595CC1    mov         eax,dword ptr [eax+24]
 00595CC4    mov         ebx,dword ptr [eax]
 00595CC6    call        dword ptr [ebx+0C]
 00595CC9    pop         ebx
 00595CCA    ret
end;*}

//00595CCC
procedure sub_00595CCC;
begin
{*
 00595CCC    call        TList<Winapi.Windows.HWND>.GetEnumerator
 00595CD1    ret
*}
end;

//00595CD4
{*procedure sub_00595CD4(?:?);
begin
 00595CD4    push        ebx
 00595CD5    cmp         word ptr [eax+2A],0
>00595CDA    je          00595CE9
 00595CDC    push        ecx
 00595CDD    mov         ebx,eax
 00595CDF    mov         ecx,edx
 00595CE1    mov         edx,eax
 00595CE3    mov         eax,dword ptr [ebx+2C]
 00595CE6    call        dword ptr [ebx+28]
 00595CE9    pop         ebx
 00595CEA    ret
end;*}

//00595CEC
constructor sub_00595CEC;
begin
{*
 00595CEC    push        ebp
 00595CED    mov         ebp,esp
 00595CEF    push        0
 00595CF1    push        ebx
 00595CF2    push        esi
 00595CF3    test        dl,dl
>00595CF5    je          00595CFF
 00595CF7    add         esp,0FFFFFFF0
 00595CFA    call        @ClassCreate
 00595CFF    mov         ebx,edx
 00595D01    mov         esi,eax
 00595D03    xor         eax,eax
 00595D05    push        ebp
 00595D06    push        595D40
 00595D0B    push        dword ptr fs:[eax]
 00595D0E    mov         dword ptr fs:[eax],esp
 00595D11    lea         edx,[ebp-4]
 00595D14    mov         eax,[005A5DD0];TComparer<Winapi.Windows.HWND>
 00595D19    call        TComparer<Winapi.Windows.HWND>.Default
 00595D1E    mov         ecx,dword ptr [ebp-4]
 00595D21    xor         edx,edx
 00595D23    mov         eax,esi
 00595D25    call        00595D64
 00595D2A    xor         eax,eax
 00595D2C    pop         edx
 00595D2D    pop         ecx
 00595D2E    pop         ecx
 00595D2F    mov         dword ptr fs:[eax],edx
 00595D32    push        595D47
 00595D37    lea         eax,[ebp-4]
 00595D3A    call        @IntfClear
 00595D3F    ret
>00595D40    jmp         @HandleFinally
>00595D45    jmp         00595D37
 00595D47    mov         eax,esi
 00595D49    test        bl,bl
>00595D4B    je          00595D5C
 00595D4D    call        @AfterConstruction
 00595D52    pop         dword ptr fs:[0]
 00595D59    add         esp,0C
 00595D5C    mov         eax,esi
 00595D5E    pop         esi
 00595D5F    pop         ebx
 00595D60    pop         ecx
 00595D61    pop         ebp
 00595D62    ret
*}
end;

//00595D64
constructor sub_00595D64(AComparer:IComparer<Winapi.Windows.HWND>);
begin
{*
 00595D64    push        ebp
 00595D65    mov         ebp,esp
 00595D67    push        0
 00595D69    push        ebx
 00595D6A    push        esi
 00595D6B    push        edi
 00595D6C    test        dl,dl
>00595D6E    je          00595D78
 00595D70    add         esp,0FFFFFFF0
 00595D73    call        @ClassCreate
 00595D78    mov         esi,ecx
 00595D7A    mov         ebx,edx
 00595D7C    mov         edi,eax
 00595D7E    xor         eax,eax
 00595D80    push        ebp
 00595D81    push        595DEF
 00595D86    push        dword ptr fs:[eax]
 00595D89    mov         dword ptr fs:[eax],esp
 00595D8C    xor         edx,edx
 00595D8E    mov         eax,edi
 00595D90    call        TObject.Create
 00595D95    mov         dword ptr [edi+14],edi
 00595D98    mov         dword ptr [edi+10],595CB0;sub_00595CB0
 00595D9F    mov         dword ptr [edi+1C],edi
 00595DA2    mov         dword ptr [edi+18],595CBC;sub_00595CBC
 00595DA9    mov         eax,[0059DC9C];TList<Winapi.Windows.HWND>.arrayofT
 00595DAE    mov         dword ptr [edi+0C],eax
 00595DB1    lea         eax,[edi+24]
 00595DB4    mov         edx,esi
 00595DB6    call        @IntfCopy
 00595DBB    cmp         dword ptr [edi+24],0
>00595DBF    jne         00595DD9
 00595DC1    lea         edx,[ebp-4]
 00595DC4    mov         eax,[005A5DD0];TComparer<Winapi.Windows.HWND>
 00595DC9    call        TComparer<Winapi.Windows.HWND>.Default
 00595DCE    mov         edx,dword ptr [ebp-4]
 00595DD1    lea         eax,[edi+24]
 00595DD4    call        @IntfCopy
 00595DD9    xor         eax,eax
 00595DDB    pop         edx
 00595DDC    pop         ecx
 00595DDD    pop         ecx
 00595DDE    mov         dword ptr fs:[eax],edx
 00595DE1    push        595DF6
 00595DE6    lea         eax,[ebp-4]
 00595DE9    call        @IntfClear
 00595DEE    ret
>00595DEF    jmp         @HandleFinally
>00595DF4    jmp         00595DE6
 00595DF6    mov         eax,edi
 00595DF8    test        bl,bl
>00595DFA    je          00595E0B
 00595DFC    call        @AfterConstruction
 00595E01    pop         dword ptr fs:[0]
 00595E08    add         esp,0C
 00595E0B    mov         eax,edi
 00595E0D    pop         edi
 00595E0E    pop         esi
 00595E0F    pop         ebx
 00595E10    pop         ecx
 00595E11    pop         ebp
 00595E12    ret
*}
end;

//00595E14
destructor TList<Winapi.Windows.HWND>.Destroy();
begin
{*
 00595E14    push        ebx
 00595E15    push        esi
 00595E16    call        @BeforeDestruction
 00595E1B    mov         ebx,edx
 00595E1D    mov         esi,eax
 00595E1F    cmp         dword ptr [esi+8],0
>00595E23    jle         00595E2E
 00595E25    xor         edx,edx
 00595E27    mov         eax,esi
 00595E29    call        00595CA4
 00595E2E    push        0
 00595E30    lea         eax,[esi+20]
 00595E33    mov         ecx,1
 00595E38    mov         edx,dword ptr ds:[59DC9C];TList<Winapi.Windows.HWND>.arrayofT
 00595E3E    call        @DynArraySetLength
 00595E43    add         esp,4
 00595E46    mov         dl,0FC
 00595E48    and         dl,bl
 00595E4A    mov         eax,esi
 00595E4C    call        TEnumerable<Winapi.Windows.HWND>.Destroy
 00595E51    test        bl,bl
>00595E53    jle         00595E5C
 00595E55    mov         eax,esi
 00595E57    call        @ClassDestroy
 00595E5C    pop         esi
 00595E5D    pop         ebx
 00595E5E    ret
*}
end;

//00595E60
{*procedure TList<Winapi.Windows.HWND>.Error(Msg:string; Data:NativeInt; ?:?);
begin
 00595E60    push        ebp
 00595E61    mov         ebp,esp
 00595E63    add         esp,0FFFFFFF0
 00595E66    mov         dword ptr [ebp-8],ecx
 00595E69    mov         dword ptr [ebp-4],edx
 00595E6C    push        dword ptr [ebp+4]
 00595E6F    mov         eax,dword ptr [ebp-8]
 00595E72    mov         dword ptr [ebp-10],eax
 00595E75    mov         byte ptr [ebp-0C],0
 00595E79    lea         eax,[ebp-10]
 00595E7C    push        eax
 00595E7D    push        0
 00595E7F    mov         ecx,dword ptr [ebp-4]
 00595E82    mov         dl,1
 00595E84    mov         eax,[004180BC];EListError
 00595E89    call        Exception.CreateFmt;EListError.Create
>00595E8E    jmp         @RaiseExcept
end;*}

//00595E98
procedure TList<Winapi.Windows.HWND>.Add(Value:HWND);
begin
{*
 00595E98    push        ecx
 00595E99    mov         dword ptr [esp],edx
 00595E9C    mov         edx,esp
 00595E9E    add         eax,8
 00595EA1    call        0043489C
 00595EA6    pop         edx
 00595EA7    ret
*}
end;

//00595EA8
{*procedure TList<Winapi.Windows.HWND>.ToArray(?:?);
begin
 00595EA8    push        ecx
 00595EA9    mov         dword ptr [esp],edx
 00595EAC    mov         edx,dword ptr [esp]
 00595EAF    add         eax,8
 00595EB2    call        00435980
 00595EB7    pop         edx
 00595EB8    ret
end;*}

//00595EBC
procedure TList<Winapi.Windows.HWND>.GetEnumerator;
begin
{*
 00595EBC    mov         ecx,eax
 00595EBE    mov         dl,1
 00595EC0    mov         eax,[0059DDFC];TList<Winapi.Windows.HWND>.TEnumerator
 00595EC5    call        00595EF8
 00595ECA    ret
*}
end;

//00595ECC
{*function sub_00595ECC(?:?):?;
begin
 00595ECC    push        ebx
 00595ECD    push        esi
 00595ECE    mov         ebx,dword ptr [eax+4]
 00595ED1    mov         esi,dword ptr [eax+8]
 00595ED4    lea         eax,[ebx+8]
 00595ED7    mov         edx,esi
 00595ED9    call        00434534
 00595EDE    mov         eax,dword ptr [ebx+20]
 00595EE1    mov         eax,dword ptr [eax+esi*4]
 00595EE4    pop         esi
 00595EE5    pop         ebx
 00595EE6    ret
end;*}

//00595EE8
procedure sub_00595EE8;
begin
{*
 00595EE8    call        00595ECC
 00595EED    ret
*}
end;

//00595EF0
procedure sub_00595EF0;
begin
{*
 00595EF0    call        TList<Winapi.Windows.HWND>.TEnumerator.MoveNext
 00595EF5    ret
*}
end;

//00595EF8
constructor sub_00595EF8(AList:TList<Winapi.Windows.HWND>);
begin
{*
 00595EF8    push        ebx
 00595EF9    push        esi
 00595EFA    push        edi
 00595EFB    test        dl,dl
>00595EFD    je          00595F07
 00595EFF    add         esp,0FFFFFFF0
 00595F02    call        @ClassCreate
 00595F07    mov         esi,ecx
 00595F09    mov         ebx,edx
 00595F0B    mov         edi,eax
 00595F0D    xor         edx,edx
 00595F0F    mov         eax,edi
 00595F11    call        TObject.Create
 00595F16    mov         dword ptr [edi+4],esi
 00595F19    mov         dword ptr [edi+8],0FFFFFFFF
 00595F20    mov         eax,edi
 00595F22    test        bl,bl
>00595F24    je          00595F35
 00595F26    call        @AfterConstruction
 00595F2B    pop         dword ptr fs:[0]
 00595F32    add         esp,0C
 00595F35    mov         eax,edi
 00595F37    pop         edi
 00595F38    pop         esi
 00595F39    pop         ebx
 00595F3A    ret
*}
end;

//00595F3C
function TList<Winapi.Windows.HWND>.TEnumerator.MoveNext:Boolean;
begin
{*
 00595F3C    mov         edx,dword ptr [eax+4]
 00595F3F    mov         edx,dword ptr [edx+8]
 00595F42    cmp         edx,dword ptr [eax+8]
>00595F45    jg          00595F4A
 00595F47    xor         eax,eax
 00595F49    ret
 00595F4A    inc         dword ptr [eax+8]
 00595F4D    mov         edx,dword ptr [eax+4]
 00595F50    mov         edx,dword ptr [edx+8]
 00595F53    cmp         edx,dword ptr [eax+8]
 00595F56    setg        al
 00595F59    ret
*}
end;

//00595FA4
procedure sub_00595FA4(?:TList<Vcl.Themes.TSysStyleHook>);
begin
{*
 00595FA4    add         eax,8
 00595FA7    call        004357A0
 00595FAC    ret
*}
end;

//00595FB0
{*procedure sub_00595FB0(?:?; ?:?);
begin
 00595FB0    push        ebx
 00595FB1    mov         edx,dword ptr [edx]
 00595FB3    mov         ebx,dword ptr [eax]
 00595FB5    call        dword ptr [ebx+8]
 00595FB8    pop         ebx
 00595FB9    ret
end;*}

//00595FBC
{*procedure sub_00595FBC(?:?; ?:?; ?:?);
begin
 00595FBC    push        ebx
 00595FBD    mov         edx,dword ptr [edx]
 00595FBF    mov         ecx,dword ptr [ecx]
 00595FC1    mov         eax,dword ptr [eax+24]
 00595FC4    mov         ebx,dword ptr [eax]
 00595FC6    call        dword ptr [ebx+0C]
 00595FC9    pop         ebx
 00595FCA    ret
end;*}

//00595FCC
procedure sub_00595FCC;
begin
{*
 00595FCC    call        TList<Vcl.Themes.TSysStyleHook>.GetEnumerator
 00595FD1    ret
*}
end;

//00595FD4
{*procedure sub_00595FD4(?:?);
begin
 00595FD4    push        ebx
 00595FD5    cmp         word ptr [eax+2A],0
>00595FDA    je          00595FE9
 00595FDC    push        ecx
 00595FDD    mov         ebx,eax
 00595FDF    mov         ecx,edx
 00595FE1    mov         edx,eax
 00595FE3    mov         eax,dword ptr [ebx+2C]
 00595FE6    call        dword ptr [ebx+28]
 00595FE9    pop         ebx
 00595FEA    ret
end;*}

//00595FEC
constructor sub_00595FEC;
begin
{*
 00595FEC    push        ebp
 00595FED    mov         ebp,esp
 00595FEF    push        0
 00595FF1    push        ebx
 00595FF2    push        esi
 00595FF3    test        dl,dl
>00595FF5    je          00595FFF
 00595FF7    add         esp,0FFFFFFF0
 00595FFA    call        @ClassCreate
 00595FFF    mov         ebx,edx
 00596001    mov         esi,eax
 00596003    xor         eax,eax
 00596005    push        ebp
 00596006    push        596040
 0059600B    push        dword ptr fs:[eax]
 0059600E    mov         dword ptr fs:[eax],esp
 00596011    lea         edx,[ebp-4]
 00596014    mov         eax,[005A6038];TComparer<Vcl.Themes.TSysStyleHook>
 00596019    call        TComparer<Vcl.Themes.TSysStyleHook>.Default
 0059601E    mov         ecx,dword ptr [ebp-4]
 00596021    xor         edx,edx
 00596023    mov         eax,esi
 00596025    call        00596064
 0059602A    xor         eax,eax
 0059602C    pop         edx
 0059602D    pop         ecx
 0059602E    pop         ecx
 0059602F    mov         dword ptr fs:[eax],edx
 00596032    push        596047
 00596037    lea         eax,[ebp-4]
 0059603A    call        @IntfClear
 0059603F    ret
>00596040    jmp         @HandleFinally
>00596045    jmp         00596037
 00596047    mov         eax,esi
 00596049    test        bl,bl
>0059604B    je          0059605C
 0059604D    call        @AfterConstruction
 00596052    pop         dword ptr fs:[0]
 00596059    add         esp,0C
 0059605C    mov         eax,esi
 0059605E    pop         esi
 0059605F    pop         ebx
 00596060    pop         ecx
 00596061    pop         ebp
 00596062    ret
*}
end;

//00596064
constructor sub_00596064(AComparer:IComparer<Vcl.Themes.TSysStyleHook>);
begin
{*
 00596064    push        ebp
 00596065    mov         ebp,esp
 00596067    push        0
 00596069    push        ebx
 0059606A    push        esi
 0059606B    push        edi
 0059606C    test        dl,dl
>0059606E    je          00596078
 00596070    add         esp,0FFFFFFF0
 00596073    call        @ClassCreate
 00596078    mov         esi,ecx
 0059607A    mov         ebx,edx
 0059607C    mov         edi,eax
 0059607E    xor         eax,eax
 00596080    push        ebp
 00596081    push        5960EF
 00596086    push        dword ptr fs:[eax]
 00596089    mov         dword ptr fs:[eax],esp
 0059608C    xor         edx,edx
 0059608E    mov         eax,edi
 00596090    call        TObject.Create
 00596095    mov         dword ptr [edi+14],edi
 00596098    mov         dword ptr [edi+10],595FB0;sub_00595FB0
 0059609F    mov         dword ptr [edi+1C],edi
 005960A2    mov         dword ptr [edi+18],595FBC;sub_00595FBC
 005960A9    mov         eax,[0059EC60];TList<Vcl.Themes.TSysStyleHook>.arrayofT
 005960AE    mov         dword ptr [edi+0C],eax
 005960B1    lea         eax,[edi+24]
 005960B4    mov         edx,esi
 005960B6    call        @IntfCopy
 005960BB    cmp         dword ptr [edi+24],0
>005960BF    jne         005960D9
 005960C1    lea         edx,[ebp-4]
 005960C4    mov         eax,[005A6038];TComparer<Vcl.Themes.TSysStyleHook>
 005960C9    call        TComparer<Vcl.Themes.TSysStyleHook>.Default
 005960CE    mov         edx,dword ptr [ebp-4]
 005960D1    lea         eax,[edi+24]
 005960D4    call        @IntfCopy
 005960D9    xor         eax,eax
 005960DB    pop         edx
 005960DC    pop         ecx
 005960DD    pop         ecx
 005960DE    mov         dword ptr fs:[eax],edx
 005960E1    push        5960F6
 005960E6    lea         eax,[ebp-4]
 005960E9    call        @IntfClear
 005960EE    ret
>005960EF    jmp         @HandleFinally
>005960F4    jmp         005960E6
 005960F6    mov         eax,edi
 005960F8    test        bl,bl
>005960FA    je          0059610B
 005960FC    call        @AfterConstruction
 00596101    pop         dword ptr fs:[0]
 00596108    add         esp,0C
 0059610B    mov         eax,edi
 0059610D    pop         edi
 0059610E    pop         esi
 0059610F    pop         ebx
 00596110    pop         ecx
 00596111    pop         ebp
 00596112    ret
*}
end;

//00596114
destructor TList<Vcl.Themes.TSysStyleHook>.Destroy();
begin
{*
 00596114    push        ebx
 00596115    push        esi
 00596116    call        @BeforeDestruction
 0059611B    mov         ebx,edx
 0059611D    mov         esi,eax
 0059611F    cmp         dword ptr [esi+8],0
>00596123    jle         0059612E
 00596125    xor         edx,edx
 00596127    mov         eax,esi
 00596129    call        00595FA4
 0059612E    push        0
 00596130    lea         eax,[esi+20]
 00596133    mov         ecx,1
 00596138    mov         edx,dword ptr ds:[59EC60];TList<Vcl.Themes.TSysStyleHook>.arrayofT
 0059613E    call        @DynArraySetLength
 00596143    add         esp,4
 00596146    mov         dl,0FC
 00596148    and         dl,bl
 0059614A    mov         eax,esi
 0059614C    call        TEnumerable<Vcl.Themes.TSysStyleHook>.Destroy
 00596151    test        bl,bl
>00596153    jle         0059615C
 00596155    mov         eax,esi
 00596157    call        @ClassDestroy
 0059615C    pop         esi
 0059615D    pop         ebx
 0059615E    ret
*}
end;

//00596160
{*procedure TList<Vcl.Themes.TSysStyleHook>.Error(Msg:string; Data:NativeInt; ?:?);
begin
 00596160    push        ebp
 00596161    mov         ebp,esp
 00596163    add         esp,0FFFFFFF0
 00596166    mov         dword ptr [ebp-8],ecx
 00596169    mov         dword ptr [ebp-4],edx
 0059616C    push        dword ptr [ebp+4]
 0059616F    mov         eax,dword ptr [ebp-8]
 00596172    mov         dword ptr [ebp-10],eax
 00596175    mov         byte ptr [ebp-0C],0
 00596179    lea         eax,[ebp-10]
 0059617C    push        eax
 0059617D    push        0
 0059617F    mov         ecx,dword ptr [ebp-4]
 00596182    mov         dl,1
 00596184    mov         eax,[004180BC];EListError
 00596189    call        Exception.CreateFmt;EListError.Create
>0059618E    jmp         @RaiseExcept
end;*}

//00596198
procedure TList<Vcl.Themes.TSysStyleHook>.Add(Value:TSysStyleHook);
begin
{*
 00596198    push        ecx
 00596199    mov         dword ptr [esp],edx
 0059619C    mov         edx,esp
 0059619E    add         eax,8
 005961A1    call        0043489C
 005961A6    pop         edx
 005961A7    ret
*}
end;

//005961A8
{*procedure TList<Vcl.Themes.TSysStyleHook>.ToArray(?:?);
begin
 005961A8    push        ecx
 005961A9    mov         dword ptr [esp],edx
 005961AC    mov         edx,dword ptr [esp]
 005961AF    add         eax,8
 005961B2    call        00435980
 005961B7    pop         edx
 005961B8    ret
end;*}

//005961BC
procedure TList<Vcl.Themes.TSysStyleHook>.GetEnumerator;
begin
{*
 005961BC    mov         ecx,eax
 005961BE    mov         dl,1
 005961C0    mov         eax,[0059EDD8];TList<Vcl.Themes.TSysStyleHook>.TEnumerator
 005961C5    call        005961F8
 005961CA    ret
*}
end;

//005961CC
{*function sub_005961CC(?:?):?;
begin
 005961CC    push        ebx
 005961CD    push        esi
 005961CE    mov         ebx,dword ptr [eax+4]
 005961D1    mov         esi,dword ptr [eax+8]
 005961D4    lea         eax,[ebx+8]
 005961D7    mov         edx,esi
 005961D9    call        00434534
 005961DE    mov         eax,dword ptr [ebx+20]
 005961E1    mov         eax,dword ptr [eax+esi*4]
 005961E4    pop         esi
 005961E5    pop         ebx
 005961E6    ret
end;*}

//005961E8
procedure sub_005961E8;
begin
{*
 005961E8    call        005961CC
 005961ED    ret
*}
end;

//005961F0
procedure sub_005961F0;
begin
{*
 005961F0    call        TList<Vcl.Themes.TSysStyleHook>.TEnumerator.MoveNext
 005961F5    ret
*}
end;

//005961F8
constructor sub_005961F8(AList:TList<Vcl.Themes.TSysStyleHook>);
begin
{*
 005961F8    push        ebx
 005961F9    push        esi
 005961FA    push        edi
 005961FB    test        dl,dl
>005961FD    je          00596207
 005961FF    add         esp,0FFFFFFF0
 00596202    call        @ClassCreate
 00596207    mov         esi,ecx
 00596209    mov         ebx,edx
 0059620B    mov         edi,eax
 0059620D    xor         edx,edx
 0059620F    mov         eax,edi
 00596211    call        TObject.Create
 00596216    mov         dword ptr [edi+4],esi
 00596219    mov         dword ptr [edi+8],0FFFFFFFF
 00596220    mov         eax,edi
 00596222    test        bl,bl
>00596224    je          00596235
 00596226    call        @AfterConstruction
 0059622B    pop         dword ptr fs:[0]
 00596232    add         esp,0C
 00596235    mov         eax,edi
 00596237    pop         edi
 00596238    pop         esi
 00596239    pop         ebx
 0059623A    ret
*}
end;

//0059623C
function TList<Vcl.Themes.TSysStyleHook>.TEnumerator.MoveNext:Boolean;
begin
{*
 0059623C    mov         edx,dword ptr [eax+4]
 0059623F    mov         edx,dword ptr [edx+8]
 00596242    cmp         edx,dword ptr [eax+8]
>00596245    jg          0059624A
 00596247    xor         eax,eax
 00596249    ret
 0059624A    inc         dword ptr [eax+8]
 0059624D    mov         edx,dword ptr [eax+4]
 00596250    mov         edx,dword ptr [edx+8]
 00596253    cmp         edx,dword ptr [eax+8]
 00596256    setg        al
 00596259    ret
*}
end;

//005962A4
procedure sub_005962A4(?:TList<Vcl.Themes.TPair<Winapi.Windows.HWND,Vcl.Themes.TChildControlInfo>>);
begin
{*
 005962A4    add         eax,8
 005962A7    call        00435920
 005962AC    ret
*}
end;

//005962B0
{*procedure sub_005962B0(?:?);
begin
 005962B0    push        ebx
 005962B1    push        esi
 005962B2    mov         esi,eax
 005962B4    mov         eax,esi
 005962B6    mov         ebx,dword ptr [eax]
 005962B8    call        dword ptr [ebx+8]
 005962BB    pop         esi
 005962BC    pop         ebx
 005962BD    ret
end;*}

//005962C0
{*procedure sub_005962C0(?:?);
begin
 005962C0    push        ebx
 005962C1    push        esi
 005962C2    mov         esi,eax
 005962C4    mov         eax,dword ptr [esi+24]
 005962C7    mov         ebx,dword ptr [eax]
 005962C9    call        dword ptr [ebx+0C]
 005962CC    pop         esi
 005962CD    pop         ebx
 005962CE    ret
end;*}

//005962D0
procedure sub_005962D0;
begin
{*
 005962D0    call        TList<Vcl.Themes.TPair<Winapi.Windows.HWND,Vcl.Themes.TChildControlInfo>>.GetEnumerator
 005962D5    ret
*}
end;

//005962D8
{*procedure sub_005962D8(?:?);
begin
 005962D8    push        esi
 005962D9    mov         esi,eax
 005962DB    cmp         word ptr [esi+2A],0
>005962E0    je          005962ED
 005962E2    push        ecx
 005962E3    mov         ecx,edx
 005962E5    mov         edx,esi
 005962E7    mov         eax,dword ptr [esi+2C]
 005962EA    call        dword ptr [esi+28]
 005962ED    pop         esi
 005962EE    ret
end;*}

//005962F0
constructor sub_005962F0;
begin
{*
 005962F0    push        ebp
 005962F1    mov         ebp,esp
 005962F3    push        0
 005962F5    push        ebx
 005962F6    push        esi
 005962F7    test        dl,dl
>005962F9    je          00596303
 005962FB    add         esp,0FFFFFFF0
 005962FE    call        @ClassCreate
 00596303    mov         ebx,edx
 00596305    mov         esi,eax
 00596307    xor         eax,eax
 00596309    push        ebp
 0059630A    push        596344
 0059630F    push        dword ptr fs:[eax]
 00596312    mov         dword ptr fs:[eax],esp
 00596315    lea         edx,[ebp-4]
 00596318    mov         eax,[005A62D4];TComparer<Vcl.Themes.TPair<Winapi.Windows.HWND,Vcl.Themes.TChildControlIn...
 0059631D    call        TComparer<Vcl.Themes.TPair<Winapi.Windows.HWND,Vcl.Themes.TChildControlInfo>>.Default
 00596322    mov         ecx,dword ptr [ebp-4]
 00596325    xor         edx,edx
 00596327    mov         eax,esi
 00596329    call        00596368
 0059632E    xor         eax,eax
 00596330    pop         edx
 00596331    pop         ecx
 00596332    pop         ecx
 00596333    mov         dword ptr fs:[eax],edx
 00596336    push        59634B
 0059633B    lea         eax,[ebp-4]
 0059633E    call        @IntfClear
 00596343    ret
>00596344    jmp         @HandleFinally
>00596349    jmp         0059633B
 0059634B    mov         eax,esi
 0059634D    test        bl,bl
>0059634F    je          00596360
 00596351    call        @AfterConstruction
 00596356    pop         dword ptr fs:[0]
 0059635D    add         esp,0C
 00596360    mov         eax,esi
 00596362    pop         esi
 00596363    pop         ebx
 00596364    pop         ecx
 00596365    pop         ebp
 00596366    ret
*}
end;

//00596368
constructor sub_00596368(AComparer:IComparer<Vcl.Themes.TPair<Winapi.Windows.HWND,Vcl.Themes.TChildControlInfo>>);
begin
{*
 00596368    push        ebp
 00596369    mov         ebp,esp
 0059636B    push        0
 0059636D    push        ebx
 0059636E    push        esi
 0059636F    push        edi
 00596370    test        dl,dl
>00596372    je          0059637C
 00596374    add         esp,0FFFFFFF0
 00596377    call        @ClassCreate
 0059637C    mov         esi,ecx
 0059637E    mov         ebx,edx
 00596380    mov         edi,eax
 00596382    xor         eax,eax
 00596384    push        ebp
 00596385    push        5963F3
 0059638A    push        dword ptr fs:[eax]
 0059638D    mov         dword ptr fs:[eax],esp
 00596390    xor         edx,edx
 00596392    mov         eax,edi
 00596394    call        TObject.Create
 00596399    mov         dword ptr [edi+14],edi
 0059639C    mov         dword ptr [edi+10],5962B0;sub_005962B0
 005963A3    mov         dword ptr [edi+1C],edi
 005963A6    mov         dword ptr [edi+18],5962C0;sub_005962C0
 005963AD    mov         eax,[0059FC50];TList<Vcl.Themes.TPair<Winapi.Windows.HWND,Vcl.Themes.TChildControlInfo>>...
 005963B2    mov         dword ptr [edi+0C],eax
 005963B5    lea         eax,[edi+24]
 005963B8    mov         edx,esi
 005963BA    call        @IntfCopy
 005963BF    cmp         dword ptr [edi+24],0
>005963C3    jne         005963DD
 005963C5    lea         edx,[ebp-4]
 005963C8    mov         eax,[005A62D4];TComparer<Vcl.Themes.TPair<Winapi.Windows.HWND,Vcl.Themes.TChildControlIn...
 005963CD    call        TComparer<Vcl.Themes.TPair<Winapi.Windows.HWND,Vcl.Themes.TChildControlInfo>>.Default
 005963D2    mov         edx,dword ptr [ebp-4]
 005963D5    lea         eax,[edi+24]
 005963D8    call        @IntfCopy
 005963DD    xor         eax,eax
 005963DF    pop         edx
 005963E0    pop         ecx
 005963E1    pop         ecx
 005963E2    mov         dword ptr fs:[eax],edx
 005963E5    push        5963FA
 005963EA    lea         eax,[ebp-4]
 005963ED    call        @IntfClear
 005963F2    ret
>005963F3    jmp         @HandleFinally
>005963F8    jmp         005963EA
 005963FA    mov         eax,edi
 005963FC    test        bl,bl
>005963FE    je          0059640F
 00596400    call        @AfterConstruction
 00596405    pop         dword ptr fs:[0]
 0059640C    add         esp,0C
 0059640F    mov         eax,edi
 00596411    pop         edi
 00596412    pop         esi
 00596413    pop         ebx
 00596414    pop         ecx
 00596415    pop         ebp
 00596416    ret
*}
end;

//00596418
destructor TList<Vcl.Themes.TPair<Winapi.Windows.HWND,Vcl.Themes.TChildControlInfo>>.Destroy();
begin
{*
 00596418    push        ebx
 00596419    push        esi
 0059641A    call        @BeforeDestruction
 0059641F    mov         ebx,edx
 00596421    mov         esi,eax
 00596423    cmp         dword ptr [esi+8],0
>00596427    jle         00596432
 00596429    xor         edx,edx
 0059642B    mov         eax,esi
 0059642D    call        005962A4
 00596432    push        0
 00596434    lea         eax,[esi+20]
 00596437    mov         ecx,1
 0059643C    mov         edx,dword ptr ds:[59FC50];TList<Vcl.Themes.TPair<Winapi.Windows.HWND,Vcl.Themes.TChildCo...
 00596442    call        @DynArraySetLength
 00596447    add         esp,4
 0059644A    mov         dl,0FC
 0059644C    and         dl,bl
 0059644E    mov         eax,esi
 00596450    call        TEnumerable<Vcl.Themes.TPair<Winapi.Windows.HWND,Vcl.Themes.TChildControlInfo>>.Destroy
 00596455    test        bl,bl
>00596457    jle         00596460
 00596459    mov         eax,esi
 0059645B    call        @ClassDestroy
 00596460    pop         esi
 00596461    pop         ebx
 00596462    ret
*}
end;

//00596464
{*procedure TList<Vcl.Themes.TPair<Winapi.Windows.HWND,Vcl.Themes.TChildControlInfo>>.Error(Msg:string; Data:NativeInt; ?:?);
begin
 00596464    push        ebp
 00596465    mov         ebp,esp
 00596467    add         esp,0FFFFFFF0
 0059646A    mov         dword ptr [ebp-8],ecx
 0059646D    mov         dword ptr [ebp-4],edx
 00596470    push        dword ptr [ebp+4]
 00596473    mov         eax,dword ptr [ebp-8]
 00596476    mov         dword ptr [ebp-10],eax
 00596479    mov         byte ptr [ebp-0C],0
 0059647D    lea         eax,[ebp-10]
 00596480    push        eax
 00596481    push        0
 00596483    mov         ecx,dword ptr [ebp-4]
 00596486    mov         dl,1
 00596488    mov         eax,[004180BC];EListError
 0059648D    call        Exception.CreateFmt;EListError.Create
>00596492    jmp         @RaiseExcept
end;*}

//0059649C
procedure TList<Vcl.Themes.TPair<Winapi.Windows.HWND,Vcl.Themes.TChildControlInfo>>.Add(Value:TPair<Winapi.Windows.HWND,Vcl.Themes.TChildControlInfo>);
begin
{*
 0059649C    push        ecx
 0059649D    mov         dword ptr [esp],edx
 005964A0    mov         edx,dword ptr [esp]
 005964A3    add         eax,8
 005964A6    call        004349D0
 005964AB    pop         edx
 005964AC    ret
*}
end;

//005964B0
{*procedure TList<Vcl.Themes.TPair<Winapi.Windows.HWND,Vcl.Themes.TChildControlInfo>>.ToArray(?:?);
begin
 005964B0    push        ecx
 005964B1    mov         dword ptr [esp],edx
 005964B4    mov         edx,dword ptr [esp]
 005964B7    add         eax,8
 005964BA    call        00435980
 005964BF    pop         edx
 005964C0    ret
end;*}

//005964C4
procedure TList<Vcl.Themes.TPair<Winapi.Windows.HWND,Vcl.Themes.TChildControlInfo>>.GetEnumerator;
begin
{*
 005964C4    mov         ecx,eax
 005964C6    mov         dl,1
 005964C8    mov         eax,[0059FF84];TList<Vcl.Themes.TPair<Winapi.Windows.HWND,Vcl.Themes.TChildControlInfo>>...
 005964CD    call        0059652C
 005964D2    ret
*}
end;

//005964D4
{*procedure sub_005964D4(?:TList<Vcl.Themes.TPair<Winapi.Windows.HWND,Vcl.Themes.TChildControlInfo>>.TEnumerator; ?:?);
begin
 005964D4    push        ebx
 005964D5    push        esi
 005964D6    push        edi
 005964D7    add         esp,0FFFFFFF0
 005964DA    mov         edi,edx
 005964DC    mov         ebx,dword ptr [eax+4]
 005964DF    mov         esi,dword ptr [eax+8]
 005964E2    lea         eax,[ebx+8]
 005964E5    mov         edx,esi
 005964E7    call        00434534
 005964EC    mov         eax,esi
 005964EE    add         eax,eax
 005964F0    mov         edx,dword ptr [ebx+20]
 005964F3    push        edi
 005964F4    lea         esi,[edx+eax*8]
 005964F7    lea         edi,[esp+4]
 005964FB    movs        dword ptr [edi],dword ptr [esi]
 005964FC    movs        dword ptr [edi],dword ptr [esi]
 005964FD    movs        dword ptr [edi],dword ptr [esi]
 005964FE    movs        dword ptr [edi],dword ptr [esi]
 005964FF    pop         edi
 00596500    mov         esi,esp
 00596502    movs        dword ptr [edi],dword ptr [esi]
 00596503    movs        dword ptr [edi],dword ptr [esi]
 00596504    movs        dword ptr [edi],dword ptr [esi]
 00596505    movs        dword ptr [edi],dword ptr [esi]
 00596506    add         esp,10
 00596509    pop         edi
 0059650A    pop         esi
 0059650B    pop         ebx
 0059650C    ret
end;*}

//00596510
{*procedure sub_00596510(?:?);
begin
 00596510    push        ebx
 00596511    push        esi
 00596512    mov         esi,edx
 00596514    mov         ebx,eax
 00596516    mov         edx,esi
 00596518    mov         eax,ebx
 0059651A    call        005964D4
 0059651F    pop         esi
 00596520    pop         ebx
 00596521    ret
end;*}

//00596524
procedure sub_00596524;
begin
{*
 00596524    call        TList<Vcl.Themes.TPair<Winapi.Windows.HWND,Vcl.Themes.TChildControlInfo>>.TEnumerator.MoveNext
 00596529    ret
*}
end;

//0059652C
constructor sub_0059652C(AList:TList<Vcl.Themes.TPair<Winapi.Windows.HWND,Vcl.Themes.TChildControlInfo>>);
begin
{*
 0059652C    push        ebx
 0059652D    push        esi
 0059652E    push        edi
 0059652F    test        dl,dl
>00596531    je          0059653B
 00596533    add         esp,0FFFFFFF0
 00596536    call        @ClassCreate
 0059653B    mov         esi,ecx
 0059653D    mov         ebx,edx
 0059653F    mov         edi,eax
 00596541    xor         edx,edx
 00596543    mov         eax,edi
 00596545    call        TObject.Create
 0059654A    mov         dword ptr [edi+4],esi
 0059654D    mov         dword ptr [edi+8],0FFFFFFFF
 00596554    mov         eax,edi
 00596556    test        bl,bl
>00596558    je          00596569
 0059655A    call        @AfterConstruction
 0059655F    pop         dword ptr fs:[0]
 00596566    add         esp,0C
 00596569    mov         eax,edi
 0059656B    pop         edi
 0059656C    pop         esi
 0059656D    pop         ebx
 0059656E    ret
*}
end;

//00596570
function TList<Vcl.Themes.TPair<Winapi.Windows.HWND,Vcl.Themes.TChildControlInfo>>.TEnumerator.MoveNext:Boolean;
begin
{*
 00596570    mov         edx,dword ptr [eax+4]
 00596573    mov         edx,dword ptr [edx+8]
 00596576    cmp         edx,dword ptr [eax+8]
>00596579    jg          0059657E
 0059657B    xor         eax,eax
 0059657D    ret
 0059657E    inc         dword ptr [eax+8]
 00596581    mov         edx,dword ptr [eax+4]
 00596584    mov         edx,dword ptr [edx+8]
 00596587    cmp         edx,dword ptr [eax+8]
 0059658A    setg        al
 0059658D    ret
*}
end;

//005965D8
procedure sub_005965D8(?:TList<Vcl.Themes.TChildControlInfo>);
begin
{*
 005965D8    add         eax,8
 005965DB    call        00435920
 005965E0    ret
*}
end;

//005965E4
{*procedure sub_005965E4(?:?);
begin
 005965E4    push        ebx
 005965E5    push        esi
 005965E6    mov         esi,eax
 005965E8    mov         eax,esi
 005965EA    mov         ebx,dword ptr [eax]
 005965EC    call        dword ptr [ebx+8]
 005965EF    pop         esi
 005965F0    pop         ebx
 005965F1    ret
end;*}

//005965F4
{*procedure sub_005965F4(?:?);
begin
 005965F4    push        ebx
 005965F5    push        esi
 005965F6    mov         esi,eax
 005965F8    mov         eax,dword ptr [esi+24]
 005965FB    mov         ebx,dword ptr [eax]
 005965FD    call        dword ptr [ebx+0C]
 00596600    pop         esi
 00596601    pop         ebx
 00596602    ret
end;*}

//00596604
procedure sub_00596604;
begin
{*
 00596604    call        TList<Vcl.Themes.TChildControlInfo>.GetEnumerator
 00596609    ret
*}
end;

//0059660C
{*procedure sub_0059660C(?:?);
begin
 0059660C    push        esi
 0059660D    mov         esi,eax
 0059660F    cmp         word ptr [esi+2A],0
>00596614    je          00596621
 00596616    push        ecx
 00596617    mov         ecx,edx
 00596619    mov         edx,esi
 0059661B    mov         eax,dword ptr [esi+2C]
 0059661E    call        dword ptr [esi+28]
 00596621    pop         esi
 00596622    ret
end;*}

//00596624
constructor sub_00596624;
begin
{*
 00596624    push        ebp
 00596625    mov         ebp,esp
 00596627    push        0
 00596629    push        ebx
 0059662A    push        esi
 0059662B    test        dl,dl
>0059662D    je          00596637
 0059662F    add         esp,0FFFFFFF0
 00596632    call        @ClassCreate
 00596637    mov         ebx,edx
 00596639    mov         esi,eax
 0059663B    xor         eax,eax
 0059663D    push        ebp
 0059663E    push        596678
 00596643    push        dword ptr fs:[eax]
 00596646    mov         dword ptr fs:[eax],esp
 00596649    lea         edx,[ebp-4]
 0059664C    mov         eax,[005A65A0];TComparer<Vcl.Themes.TChildControlInfo>
 00596651    call        TComparer<Vcl.Themes.TChildControlInfo>.Default
 00596656    mov         ecx,dword ptr [ebp-4]
 00596659    xor         edx,edx
 0059665B    mov         eax,esi
 0059665D    call        0059669C
 00596662    xor         eax,eax
 00596664    pop         edx
 00596665    pop         ecx
 00596666    pop         ecx
 00596667    mov         dword ptr fs:[eax],edx
 0059666A    push        59667F
 0059666F    lea         eax,[ebp-4]
 00596672    call        @IntfClear
 00596677    ret
>00596678    jmp         @HandleFinally
>0059667D    jmp         0059666F
 0059667F    mov         eax,esi
 00596681    test        bl,bl
>00596683    je          00596694
 00596685    call        @AfterConstruction
 0059668A    pop         dword ptr fs:[0]
 00596691    add         esp,0C
 00596694    mov         eax,esi
 00596696    pop         esi
 00596697    pop         ebx
 00596698    pop         ecx
 00596699    pop         ebp
 0059669A    ret
*}
end;

//0059669C
constructor sub_0059669C(AComparer:IComparer<Vcl.Themes.TChildControlInfo>);
begin
{*
 0059669C    push        ebp
 0059669D    mov         ebp,esp
 0059669F    push        0
 005966A1    push        ebx
 005966A2    push        esi
 005966A3    push        edi
 005966A4    test        dl,dl
>005966A6    je          005966B0
 005966A8    add         esp,0FFFFFFF0
 005966AB    call        @ClassCreate
 005966B0    mov         esi,ecx
 005966B2    mov         ebx,edx
 005966B4    mov         edi,eax
 005966B6    xor         eax,eax
 005966B8    push        ebp
 005966B9    push        596727
 005966BE    push        dword ptr fs:[eax]
 005966C1    mov         dword ptr fs:[eax],esp
 005966C4    xor         edx,edx
 005966C6    mov         eax,edi
 005966C8    call        TObject.Create
 005966CD    mov         dword ptr [edi+14],edi
 005966D0    mov         dword ptr [edi+10],5965E4;sub_005965E4
 005966D7    mov         dword ptr [edi+1C],edi
 005966DA    mov         dword ptr [edi+18],5965F4;sub_005965F4
 005966E1    mov         eax,[005A0ED8];TList<Vcl.Themes.TChildControlInfo>.arrayofT
 005966E6    mov         dword ptr [edi+0C],eax
 005966E9    lea         eax,[edi+24]
 005966EC    mov         edx,esi
 005966EE    call        @IntfCopy
 005966F3    cmp         dword ptr [edi+24],0
>005966F7    jne         00596711
 005966F9    lea         edx,[ebp-4]
 005966FC    mov         eax,[005A65A0];TComparer<Vcl.Themes.TChildControlInfo>
 00596701    call        TComparer<Vcl.Themes.TChildControlInfo>.Default
 00596706    mov         edx,dword ptr [ebp-4]
 00596709    lea         eax,[edi+24]
 0059670C    call        @IntfCopy
 00596711    xor         eax,eax
 00596713    pop         edx
 00596714    pop         ecx
 00596715    pop         ecx
 00596716    mov         dword ptr fs:[eax],edx
 00596719    push        59672E
 0059671E    lea         eax,[ebp-4]
 00596721    call        @IntfClear
 00596726    ret
>00596727    jmp         @HandleFinally
>0059672C    jmp         0059671E
 0059672E    mov         eax,edi
 00596730    test        bl,bl
>00596732    je          00596743
 00596734    call        @AfterConstruction
 00596739    pop         dword ptr fs:[0]
 00596740    add         esp,0C
 00596743    mov         eax,edi
 00596745    pop         edi
 00596746    pop         esi
 00596747    pop         ebx
 00596748    pop         ecx
 00596749    pop         ebp
 0059674A    ret
*}
end;

//0059674C
destructor TList<Vcl.Themes.TChildControlInfo>.Destroy();
begin
{*
 0059674C    push        ebx
 0059674D    push        esi
 0059674E    call        @BeforeDestruction
 00596753    mov         ebx,edx
 00596755    mov         esi,eax
 00596757    cmp         dword ptr [esi+8],0
>0059675B    jle         00596766
 0059675D    xor         edx,edx
 0059675F    mov         eax,esi
 00596761    call        005965D8
 00596766    push        0
 00596768    lea         eax,[esi+20]
 0059676B    mov         ecx,1
 00596770    mov         edx,dword ptr ds:[5A0ED8];TList<Vcl.Themes.TChildControlInfo>.arrayofT
 00596776    call        @DynArraySetLength
 0059677B    add         esp,4
 0059677E    mov         dl,0FC
 00596780    and         dl,bl
 00596782    mov         eax,esi
 00596784    call        TEnumerable<Vcl.Themes.TChildControlInfo>.Destroy
 00596789    test        bl,bl
>0059678B    jle         00596794
 0059678D    mov         eax,esi
 0059678F    call        @ClassDestroy
 00596794    pop         esi
 00596795    pop         ebx
 00596796    ret
*}
end;

//00596798
{*procedure TList<Vcl.Themes.TChildControlInfo>.Error(Msg:string; Data:NativeInt; ?:?);
begin
 00596798    push        ebp
 00596799    mov         ebp,esp
 0059679B    add         esp,0FFFFFFF0
 0059679E    mov         dword ptr [ebp-8],ecx
 005967A1    mov         dword ptr [ebp-4],edx
 005967A4    push        dword ptr [ebp+4]
 005967A7    mov         eax,dword ptr [ebp-8]
 005967AA    mov         dword ptr [ebp-10],eax
 005967AD    mov         byte ptr [ebp-0C],0
 005967B1    lea         eax,[ebp-10]
 005967B4    push        eax
 005967B5    push        0
 005967B7    mov         ecx,dword ptr [ebp-4]
 005967BA    mov         dl,1
 005967BC    mov         eax,[004180BC];EListError
 005967C1    call        Exception.CreateFmt;EListError.Create
>005967C6    jmp         @RaiseExcept
end;*}

//005967D0
procedure TList<Vcl.Themes.TChildControlInfo>.Add(Value:TChildControlInfo);
begin
{*
 005967D0    push        ecx
 005967D1    mov         dword ptr [esp],edx
 005967D4    mov         edx,dword ptr [esp]
 005967D7    add         eax,8
 005967DA    call        004349D0
 005967DF    pop         edx
 005967E0    ret
*}
end;

//005967E4
{*procedure TList<Vcl.Themes.TChildControlInfo>.ToArray(?:?);
begin
 005967E4    push        ecx
 005967E5    mov         dword ptr [esp],edx
 005967E8    mov         edx,dword ptr [esp]
 005967EB    add         eax,8
 005967EE    call        00435980
 005967F3    pop         edx
 005967F4    ret
end;*}

//005967F8
procedure TList<Vcl.Themes.TChildControlInfo>.GetEnumerator;
begin
{*
 005967F8    mov         ecx,eax
 005967FA    mov         dl,1
 005967FC    mov         eax,[005A1060];TList<Vcl.Themes.TChildControlInfo>.TEnumerator
 00596801    call        00596874
 00596806    ret
*}
end;

//00596808
{*procedure sub_00596808(?:TList<Vcl.Themes.TChildControlInfo>.TEnumerator; ?:?);
begin
 00596808    push        ebx
 00596809    push        esi
 0059680A    push        edi
 0059680B    add         esp,0FFFFFFF4
 0059680E    mov         edi,edx
 00596810    mov         ebx,dword ptr [eax+4]
 00596813    mov         esi,dword ptr [eax+8]
 00596816    lea         eax,[ebx+8]
 00596819    mov         edx,esi
 0059681B    call        00434534
 00596820    lea         eax,[esi+esi*2]
 00596823    mov         edx,dword ptr [ebx+20]
 00596826    mov         ecx,dword ptr [edx+eax*4]
 00596829    mov         dword ptr [esp],ecx
 0059682C    mov         ecx,dword ptr [edx+eax*4+4]
 00596830    mov         dword ptr [esp+4],ecx
 00596834    mov         ecx,dword ptr [edx+eax*4+8]
 00596838    mov         dword ptr [esp+8],ecx
 0059683C    mov         eax,dword ptr [esp]
 0059683F    mov         dword ptr [edi],eax
 00596841    mov         eax,dword ptr [esp+4]
 00596845    mov         dword ptr [edi+4],eax
 00596848    mov         eax,dword ptr [esp+8]
 0059684C    mov         dword ptr [edi+8],eax
 0059684F    add         esp,0C
 00596852    pop         edi
 00596853    pop         esi
 00596854    pop         ebx
 00596855    ret
end;*}

//00596858
{*procedure sub_00596858(?:?);
begin
 00596858    push        ebx
 00596859    push        esi
 0059685A    mov         esi,edx
 0059685C    mov         ebx,eax
 0059685E    mov         edx,esi
 00596860    mov         eax,ebx
 00596862    call        00596808
 00596867    pop         esi
 00596868    pop         ebx
 00596869    ret
end;*}

//0059686C
procedure sub_0059686C;
begin
{*
 0059686C    call        TList<Vcl.Themes.TChildControlInfo>.TEnumerator.MoveNext
 00596871    ret
*}
end;

//00596874
constructor sub_00596874(AList:TList<Vcl.Themes.TChildControlInfo>);
begin
{*
 00596874    push        ebx
 00596875    push        esi
 00596876    push        edi
 00596877    test        dl,dl
>00596879    je          00596883
 0059687B    add         esp,0FFFFFFF0
 0059687E    call        @ClassCreate
 00596883    mov         esi,ecx
 00596885    mov         ebx,edx
 00596887    mov         edi,eax
 00596889    xor         edx,edx
 0059688B    mov         eax,edi
 0059688D    call        TObject.Create
 00596892    mov         dword ptr [edi+4],esi
 00596895    mov         dword ptr [edi+8],0FFFFFFFF
 0059689C    mov         eax,edi
 0059689E    test        bl,bl
>005968A0    je          005968B1
 005968A2    call        @AfterConstruction
 005968A7    pop         dword ptr fs:[0]
 005968AE    add         esp,0C
 005968B1    mov         eax,edi
 005968B3    pop         edi
 005968B4    pop         esi
 005968B5    pop         ebx
 005968B6    ret
*}
end;

//005968B8
function TList<Vcl.Themes.TChildControlInfo>.TEnumerator.MoveNext:Boolean;
begin
{*
 005968B8    mov         edx,dword ptr [eax+4]
 005968BB    mov         edx,dword ptr [edx+8]
 005968BE    cmp         edx,dword ptr [eax+8]
>005968C1    jg          005968C6
 005968C3    xor         eax,eax
 005968C5    ret
 005968C6    inc         dword ptr [eax+8]
 005968C9    mov         edx,dword ptr [eax+4]
 005968CC    mov         edx,dword ptr [edx+8]
 005968CF    cmp         edx,dword ptr [eax+8]
 005968D2    setg        al
 005968D5    ret
*}
end;

//00596920
procedure sub_00596920(?:TList<Vcl.Themes.TPair<System.string,Vcl.Themes.TStyleManager.TSourceInfo>>);
begin
{*
 00596920    add         eax,8
 00596923    call        00435860
 00596928    ret
*}
end;

//0059692C
{*procedure sub_0059692C(?:?);
begin
 0059692C    push        ebx
 0059692D    push        esi
 0059692E    mov         esi,eax
 00596930    mov         eax,esi
 00596932    mov         ebx,dword ptr [eax]
 00596934    call        dword ptr [ebx+8]
 00596937    pop         esi
 00596938    pop         ebx
 00596939    ret
end;*}

//0059693C
{*procedure sub_0059693C(?:?);
begin
 0059693C    push        ebx
 0059693D    push        esi
 0059693E    mov         esi,eax
 00596940    mov         eax,dword ptr [esi+24]
 00596943    mov         ebx,dword ptr [eax]
 00596945    call        dword ptr [ebx+0C]
 00596948    pop         esi
 00596949    pop         ebx
 0059694A    ret
end;*}

//0059694C
procedure sub_0059694C;
begin
{*
 0059694C    call        TList<Vcl.Themes.TPair<System.string,Vcl.Themes.TStyleManager.TSourceInfo>>.GetEnumerator
 00596951    ret
*}
end;

//00596954
{*procedure sub_00596954(?:?);
begin
 00596954    push        esi
 00596955    mov         esi,eax
 00596957    cmp         word ptr [esi+2A],0
>0059695C    je          00596969
 0059695E    push        ecx
 0059695F    mov         ecx,edx
 00596961    mov         edx,esi
 00596963    mov         eax,dword ptr [esi+2C]
 00596966    call        dword ptr [esi+28]
 00596969    pop         esi
 0059696A    ret
end;*}

//0059696C
constructor sub_0059696C;
begin
{*
 0059696C    push        ebp
 0059696D    mov         ebp,esp
 0059696F    push        0
 00596971    push        ebx
 00596972    push        esi
 00596973    test        dl,dl
>00596975    je          0059697F
 00596977    add         esp,0FFFFFFF0
 0059697A    call        @ClassCreate
 0059697F    mov         ebx,edx
 00596981    mov         esi,eax
 00596983    xor         eax,eax
 00596985    push        ebp
 00596986    push        5969C0
 0059698B    push        dword ptr fs:[eax]
 0059698E    mov         dword ptr fs:[eax],esp
 00596991    lea         edx,[ebp-4]
 00596994    mov         eax,[005A6844];TComparer<Vcl.Themes.TPair<System.string,Vcl.Themes.TStyleManager.TSource...
 00596999    call        TComparer<Vcl.Themes.TPair<System.string,Vcl.Themes.TStyleManager.TSourceInfo>>.Default
 0059699E    mov         ecx,dword ptr [ebp-4]
 005969A1    xor         edx,edx
 005969A3    mov         eax,esi
 005969A5    call        005969E4
 005969AA    xor         eax,eax
 005969AC    pop         edx
 005969AD    pop         ecx
 005969AE    pop         ecx
 005969AF    mov         dword ptr fs:[eax],edx
 005969B2    push        5969C7
 005969B7    lea         eax,[ebp-4]
 005969BA    call        @IntfClear
 005969BF    ret
>005969C0    jmp         @HandleFinally
>005969C5    jmp         005969B7
 005969C7    mov         eax,esi
 005969C9    test        bl,bl
>005969CB    je          005969DC
 005969CD    call        @AfterConstruction
 005969D2    pop         dword ptr fs:[0]
 005969D9    add         esp,0C
 005969DC    mov         eax,esi
 005969DE    pop         esi
 005969DF    pop         ebx
 005969E0    pop         ecx
 005969E1    pop         ebp
 005969E2    ret
*}
end;

//005969E4
constructor sub_005969E4(AComparer:IComparer<Vcl.Themes.TPair<System.string,Vcl.Themes.TStyleManager.TSourceInfo>>);
begin
{*
 005969E4    push        ebp
 005969E5    mov         ebp,esp
 005969E7    push        0
 005969E9    push        ebx
 005969EA    push        esi
 005969EB    push        edi
 005969EC    test        dl,dl
>005969EE    je          005969F8
 005969F0    add         esp,0FFFFFFF0
 005969F3    call        @ClassCreate
 005969F8    mov         esi,ecx
 005969FA    mov         ebx,edx
 005969FC    mov         edi,eax
 005969FE    xor         eax,eax
 00596A00    push        ebp
 00596A01    push        596A6F
 00596A06    push        dword ptr fs:[eax]
 00596A09    mov         dword ptr fs:[eax],esp
 00596A0C    xor         edx,edx
 00596A0E    mov         eax,edi
 00596A10    call        TObject.Create
 00596A15    mov         dword ptr [edi+14],edi;TList<Vcl.Themes.TPair<System.string,Vcl.Themes.TStyleManager.TSo...
 00596A18    mov         dword ptr [edi+10],59692C;TList<Vcl.Themes.TPair<System.string,Vcl.Themes.TStyleManager....
 00596A1F    mov         dword ptr [edi+1C],edi
 00596A22    mov         dword ptr [edi+18],59693C;sub_0059693C
 00596A29    mov         eax,[005A1F20];TList<Vcl.Themes.TPair<System.string,Vcl.Themes.TStyleManager.TSourceInfo...
 00596A2E    mov         dword ptr [edi+0C],eax;TList<Vcl.Themes.TPair<System.string,Vcl.Themes.TStyleManager.TSo...
 00596A31    lea         eax,[edi+24]
 00596A34    mov         edx,esi
 00596A36    call        @IntfCopy
 00596A3B    cmp         dword ptr [edi+24],0
>00596A3F    jne         00596A59
 00596A41    lea         edx,[ebp-4]
 00596A44    mov         eax,[005A6844];TComparer<Vcl.Themes.TPair<System.string,Vcl.Themes.TStyleManager.TSource...
 00596A49    call        TComparer<Vcl.Themes.TPair<System.string,Vcl.Themes.TStyleManager.TSourceInfo>>.Default
 00596A4E    mov         edx,dword ptr [ebp-4]
 00596A51    lea         eax,[edi+24]
 00596A54    call        @IntfCopy
 00596A59    xor         eax,eax
 00596A5B    pop         edx
 00596A5C    pop         ecx
 00596A5D    pop         ecx
 00596A5E    mov         dword ptr fs:[eax],edx
 00596A61    push        596A76
 00596A66    lea         eax,[ebp-4]
 00596A69    call        @IntfClear
 00596A6E    ret
>00596A6F    jmp         @HandleFinally
>00596A74    jmp         00596A66
 00596A76    mov         eax,edi
 00596A78    test        bl,bl
>00596A7A    je          00596A8B
 00596A7C    call        @AfterConstruction
 00596A81    pop         dword ptr fs:[0]
 00596A88    add         esp,0C
 00596A8B    mov         eax,edi
 00596A8D    pop         edi
 00596A8E    pop         esi
 00596A8F    pop         ebx
 00596A90    pop         ecx
 00596A91    pop         ebp
 00596A92    ret
*}
end;

//00596A94
destructor TList<Vcl.Themes.TPair<System.string,Vcl.Themes.TStyleManager.TSourceInfo>>.Destroy();
begin
{*
 00596A94    push        ebx
 00596A95    push        esi
 00596A96    call        @BeforeDestruction
 00596A9B    mov         ebx,edx
 00596A9D    mov         esi,eax
 00596A9F    cmp         dword ptr [esi+8],0;TList<Vcl.Themes.TPair<System.string,Vcl.Themes.TStyleManager.TSourc...
>00596AA3    jle         00596AAE
 00596AA5    xor         edx,edx
 00596AA7    mov         eax,esi
 00596AA9    call        00596920
 00596AAE    push        0
 00596AB0    lea         eax,[esi+20]
 00596AB3    mov         ecx,1
 00596AB8    mov         edx,dword ptr ds:[5A1F20];TList<Vcl.Themes.TPair<System.string,Vcl.Themes.TStyleManager....
 00596ABE    call        @DynArraySetLength
 00596AC3    add         esp,4
 00596AC6    mov         dl,0FC
 00596AC8    and         dl,bl
 00596ACA    mov         eax,esi
 00596ACC    call        TEnumerable<Vcl.Themes.TPair<System.string,Vcl.Themes.TStyleManager.TSourceInfo>>.Destroy
 00596AD1    test        bl,bl
>00596AD3    jle         00596ADC
 00596AD5    mov         eax,esi
 00596AD7    call        @ClassDestroy
 00596ADC    pop         esi
 00596ADD    pop         ebx
 00596ADE    ret
*}
end;

//00596AE0
{*procedure TList<Vcl.Themes.TPair<System.string,Vcl.Themes.TStyleManager.TSourceInfo>>.Error(Msg:string; Data:NativeInt; ?:?);
begin
 00596AE0    push        ebp
 00596AE1    mov         ebp,esp
 00596AE3    add         esp,0FFFFFFF0
 00596AE6    mov         dword ptr [ebp-8],ecx
 00596AE9    mov         dword ptr [ebp-4],edx
 00596AEC    push        dword ptr [ebp+4]
 00596AEF    mov         eax,dword ptr [ebp-8]
 00596AF2    mov         dword ptr [ebp-10],eax
 00596AF5    mov         byte ptr [ebp-0C],0
 00596AF9    lea         eax,[ebp-10]
 00596AFC    push        eax
 00596AFD    push        0
 00596AFF    mov         ecx,dword ptr [ebp-4]
 00596B02    mov         dl,1
 00596B04    mov         eax,[004180BC];EListError
 00596B09    call        Exception.CreateFmt;EListError.Create
>00596B0E    jmp         @RaiseExcept
end;*}

//00596B18
procedure TList<Vcl.Themes.TPair<System.string,Vcl.Themes.TStyleManager.TSourceInfo>>.Add(Value:TPair<System.string,Vcl.Themes.TStyleManager.TSourceInfo>);
begin
{*
 00596B18    push        ecx
 00596B19    mov         dword ptr [esp],edx
 00596B1C    mov         edx,dword ptr [esp]
 00596B1F    add         eax,8
 00596B22    call        0043492C
 00596B27    pop         edx
 00596B28    ret
*}
end;

//00596B2C
{*procedure TList<Vcl.Themes.TPair<System.string,Vcl.Themes.TStyleManager.TSourceInfo>>.ToArray(?:?);
begin
 00596B2C    push        ecx
 00596B2D    mov         dword ptr [esp],edx
 00596B30    mov         edx,dword ptr [esp]
 00596B33    add         eax,8
 00596B36    call        004359D4
 00596B3B    pop         edx
 00596B3C    ret
end;*}

//00596B40
procedure TList<Vcl.Themes.TPair<System.string,Vcl.Themes.TStyleManager.TSourceInfo>>.GetEnumerator;
begin
{*
 00596B40    mov         ecx,eax
 00596B42    mov         dl,1
 00596B44    mov         eax,[005A2260];TList<Vcl.Themes.TPair<System.string,Vcl.Themes.TStyleManager.TSourceInfo...
 00596B49    call        00596BF8
 00596B4E    ret
*}
end;

//00596B50
{*procedure sub_00596B50(?:TList<Vcl.Themes.TPair<System.string,Vcl.Themes.TStyleManager.TSourceInfo>>.TEnumerator; ?:?);
begin
 00596B50    push        ebp
 00596B51    mov         ebp,esp
 00596B53    add         esp,0FFFFFFF4
 00596B56    push        ebx
 00596B57    push        esi
 00596B58    push        edi
 00596B59    mov         edi,edx
 00596B5B    mov         ebx,eax
 00596B5D    lea         eax,[ebp-0C]
 00596B60    mov         edx,dword ptr ds:[57FDA8];TPair<System.string,Vcl.Themes.TStyleManager.TSourceInfo>
 00596B66    call        @AddRefRecord
 00596B6B    xor         eax,eax
 00596B6D    push        ebp
 00596B6E    push        596BCC
 00596B73    push        dword ptr fs:[eax]
 00596B76    mov         dword ptr fs:[eax],esp
 00596B79    mov         esi,dword ptr [ebx+4]
 00596B7C    mov         ebx,dword ptr [ebx+8]
 00596B7F    lea         eax,[esi+8]
 00596B82    mov         edx,ebx
 00596B84    call        00434534
 00596B89    lea         eax,[ebp-0C]
 00596B8C    lea         edx,[ebx+ebx*2]
 00596B8F    mov         ecx,dword ptr [esi+20]
 00596B92    lea         edx,[ecx+edx*4]
 00596B95    mov         ecx,dword ptr ds:[57FDA8];TPair<System.string,Vcl.Themes.TStyleManager.TSourceInfo>
 00596B9B    call        @CopyRecord
 00596BA0    mov         eax,edi
 00596BA2    lea         edx,[ebp-0C]
 00596BA5    mov         ecx,dword ptr ds:[57FDA8];TPair<System.string,Vcl.Themes.TStyleManager.TSourceInfo>
 00596BAB    call        @CopyRecord
 00596BB0    xor         eax,eax
 00596BB2    pop         edx
 00596BB3    pop         ecx
 00596BB4    pop         ecx
 00596BB5    mov         dword ptr fs:[eax],edx
 00596BB8    push        596BD3
 00596BBD    lea         eax,[ebp-0C]
 00596BC0    mov         edx,dword ptr ds:[57FDA8];TPair<System.string,Vcl.Themes.TStyleManager.TSourceInfo>
 00596BC6    call        @FinalizeRecord
 00596BCB    ret
>00596BCC    jmp         @HandleFinally
>00596BD1    jmp         00596BBD
 00596BD3    pop         edi
 00596BD4    pop         esi
 00596BD5    pop         ebx
 00596BD6    mov         esp,ebp
 00596BD8    pop         ebp
 00596BD9    ret
end;*}

//00596BDC
{*procedure sub_00596BDC(?:?);
begin
 00596BDC    push        ebx
 00596BDD    push        esi
 00596BDE    mov         esi,edx
 00596BE0    mov         ebx,eax
 00596BE2    mov         edx,esi
 00596BE4    mov         eax,ebx
 00596BE6    call        00596B50
 00596BEB    pop         esi
 00596BEC    pop         ebx
 00596BED    ret
end;*}

//00596BF0
procedure sub_00596BF0;
begin
{*
 00596BF0    call        TList<Vcl.Themes.TPair<System.string,Vcl.Themes.TStyleManager.TSourceInfo>>.TEnumerator.MoveNext
 00596BF5    ret
*}
end;

//00596BF8
constructor sub_00596BF8(AList:TList<Vcl.Themes.TPair<System.string,Vcl.Themes.TStyleManager.TSourceInfo>>);
begin
{*
 00596BF8    push        ebx
 00596BF9    push        esi
 00596BFA    push        edi
 00596BFB    test        dl,dl
>00596BFD    je          00596C07
 00596BFF    add         esp,0FFFFFFF0
 00596C02    call        @ClassCreate
 00596C07    mov         esi,ecx
 00596C09    mov         ebx,edx
 00596C0B    mov         edi,eax
 00596C0D    xor         edx,edx
 00596C0F    mov         eax,edi
 00596C11    call        TObject.Create
 00596C16    mov         dword ptr [edi+4],esi;TList<Vcl.Themes.TPair<System.string,Vcl.Themes.TStyleManager.TSou...
 00596C19    mov         dword ptr [edi+8],0FFFFFFFF
 00596C20    mov         eax,edi
 00596C22    test        bl,bl
>00596C24    je          00596C35
 00596C26    call        @AfterConstruction
 00596C2B    pop         dword ptr fs:[0]
 00596C32    add         esp,0C
 00596C35    mov         eax,edi
 00596C37    pop         edi
 00596C38    pop         esi
 00596C39    pop         ebx
 00596C3A    ret
*}
end;

//00596C3C
function TList<Vcl.Themes.TPair<System.string,Vcl.Themes.TStyleManager.TSourceInfo>>.TEnumerator.MoveNext:Boolean;
begin
{*
 00596C3C    mov         edx,dword ptr [eax+4]
 00596C3F    mov         edx,dword ptr [edx+8]
 00596C42    cmp         edx,dword ptr [eax+8]
>00596C45    jg          00596C4A
 00596C47    xor         eax,eax
 00596C49    ret
 00596C4A    inc         dword ptr [eax+8]
 00596C4D    mov         edx,dword ptr [eax+4]
 00596C50    mov         edx,dword ptr [edx+8]
 00596C53    cmp         edx,dword ptr [eax+8]
 00596C56    setg        al
 00596C59    ret
*}
end;

//00596CA4
procedure sub_00596CA4(?:TList<Vcl.Themes.TStyleManager.TSourceInfo>);
begin
{*
 00596CA4    add         eax,8
 00596CA7    call        00435800
 00596CAC    ret
*}
end;

//00596CB0
{*procedure sub_00596CB0(?:?);
begin
 00596CB0    push        ebx
 00596CB1    push        esi
 00596CB2    mov         esi,eax
 00596CB4    mov         eax,esi
 00596CB6    mov         ebx,dword ptr [eax]
 00596CB8    call        dword ptr [ebx+8]
 00596CBB    pop         esi
 00596CBC    pop         ebx
 00596CBD    ret
end;*}

//00596CC0
{*procedure sub_00596CC0(?:?);
begin
 00596CC0    push        ebx
 00596CC1    push        esi
 00596CC2    mov         esi,eax
 00596CC4    mov         eax,dword ptr [esi+24]
 00596CC7    mov         ebx,dword ptr [eax]
 00596CC9    call        dword ptr [ebx+0C]
 00596CCC    pop         esi
 00596CCD    pop         ebx
 00596CCE    ret
end;*}

//00596CD0
procedure sub_00596CD0;
begin
{*
 00596CD0    call        TList<Vcl.Themes.TStyleManager.TSourceInfo>.GetEnumerator
 00596CD5    ret
*}
end;

//00596CD8
{*procedure sub_00596CD8(?:?);
begin
 00596CD8    push        esi
 00596CD9    mov         esi,eax
 00596CDB    cmp         word ptr [esi+2A],0
>00596CE0    je          00596CED
 00596CE2    push        ecx
 00596CE3    mov         ecx,edx
 00596CE5    mov         edx,esi
 00596CE7    mov         eax,dword ptr [esi+2C]
 00596CEA    call        dword ptr [esi+28]
 00596CED    pop         esi
 00596CEE    ret
end;*}

//00596CF0
constructor sub_00596CF0;
begin
{*
 00596CF0    push        ebp
 00596CF1    mov         ebp,esp
 00596CF3    push        0
 00596CF5    push        ebx
 00596CF6    push        esi
 00596CF7    test        dl,dl
>00596CF9    je          00596D03
 00596CFB    add         esp,0FFFFFFF0
 00596CFE    call        @ClassCreate
 00596D03    mov         ebx,edx
 00596D05    mov         esi,eax
 00596D07    xor         eax,eax
 00596D09    push        ebp
 00596D0A    push        596D44
 00596D0F    push        dword ptr fs:[eax]
 00596D12    mov         dword ptr fs:[eax],esp
 00596D15    lea         edx,[ebp-4]
 00596D18    mov         eax,[005A6B18];TComparer<Vcl.Themes.TStyleManager.TSourceInfo>
 00596D1D    call        TComparer<Vcl.Themes.TStyleManager.TSourceInfo>.Default
 00596D22    mov         ecx,dword ptr [ebp-4]
 00596D25    xor         edx,edx
 00596D27    mov         eax,esi
 00596D29    call        00596D68
 00596D2E    xor         eax,eax
 00596D30    pop         edx
 00596D31    pop         ecx
 00596D32    pop         ecx
 00596D33    mov         dword ptr fs:[eax],edx
 00596D36    push        596D4B
 00596D3B    lea         eax,[ebp-4]
 00596D3E    call        @IntfClear
 00596D43    ret
>00596D44    jmp         @HandleFinally
>00596D49    jmp         00596D3B
 00596D4B    mov         eax,esi
 00596D4D    test        bl,bl
>00596D4F    je          00596D60
 00596D51    call        @AfterConstruction
 00596D56    pop         dword ptr fs:[0]
 00596D5D    add         esp,0C
 00596D60    mov         eax,esi
 00596D62    pop         esi
 00596D63    pop         ebx
 00596D64    pop         ecx
 00596D65    pop         ebp
 00596D66    ret
*}
end;

//00596D68
constructor sub_00596D68(AComparer:IComparer<Vcl.Themes.TStyleManager.TSourceInfo>);
begin
{*
 00596D68    push        ebp
 00596D69    mov         ebp,esp
 00596D6B    push        0
 00596D6D    push        ebx
 00596D6E    push        esi
 00596D6F    push        edi
 00596D70    test        dl,dl
>00596D72    je          00596D7C
 00596D74    add         esp,0FFFFFFF0
 00596D77    call        @ClassCreate
 00596D7C    mov         esi,ecx
 00596D7E    mov         ebx,edx
 00596D80    mov         edi,eax
 00596D82    xor         eax,eax
 00596D84    push        ebp
 00596D85    push        596DF3
 00596D8A    push        dword ptr fs:[eax]
 00596D8D    mov         dword ptr fs:[eax],esp
 00596D90    xor         edx,edx
 00596D92    mov         eax,edi
 00596D94    call        TObject.Create
 00596D99    mov         dword ptr [edi+14],edi;TList<Vcl.Themes.TStyleManager.TSourceInfo>.FOnNotify:TCollection...
 00596D9C    mov         dword ptr [edi+10],596CB0;TList<Vcl.Themes.TStyleManager.TSourceInfo>.FOnNotify:TCollect...
 00596DA3    mov         dword ptr [edi+1C],edi
 00596DA6    mov         dword ptr [edi+18],596CC0;sub_00596CC0
 00596DAD    mov         eax,[005A31C0];TList<Vcl.Themes.TStyleManager.TSourceInfo>.arrayofT
 00596DB2    mov         dword ptr [edi+0C],eax;TList<Vcl.Themes.TStyleManager.TSourceInfo>.FComparer:IComparer<V...
 00596DB5    lea         eax,[edi+24]
 00596DB8    mov         edx,esi
 00596DBA    call        @IntfCopy
 00596DBF    cmp         dword ptr [edi+24],0
>00596DC3    jne         00596DDD
 00596DC5    lea         edx,[ebp-4]
 00596DC8    mov         eax,[005A6B18];TComparer<Vcl.Themes.TStyleManager.TSourceInfo>
 00596DCD    call        TComparer<Vcl.Themes.TStyleManager.TSourceInfo>.Default
 00596DD2    mov         edx,dword ptr [ebp-4]
 00596DD5    lea         eax,[edi+24]
 00596DD8    call        @IntfCopy
 00596DDD    xor         eax,eax
 00596DDF    pop         edx
 00596DE0    pop         ecx
 00596DE1    pop         ecx
 00596DE2    mov         dword ptr fs:[eax],edx
 00596DE5    push        596DFA
 00596DEA    lea         eax,[ebp-4]
 00596DED    call        @IntfClear
 00596DF2    ret
>00596DF3    jmp         @HandleFinally
>00596DF8    jmp         00596DEA
 00596DFA    mov         eax,edi
 00596DFC    test        bl,bl
>00596DFE    je          00596E0F
 00596E00    call        @AfterConstruction
 00596E05    pop         dword ptr fs:[0]
 00596E0C    add         esp,0C
 00596E0F    mov         eax,edi
 00596E11    pop         edi
 00596E12    pop         esi
 00596E13    pop         ebx
 00596E14    pop         ecx
 00596E15    pop         ebp
 00596E16    ret
*}
end;

//00596E18
destructor TList<Vcl.Themes.TStyleManager.TSourceInfo>.Destroy();
begin
{*
 00596E18    push        ebx
 00596E19    push        esi
 00596E1A    call        @BeforeDestruction
 00596E1F    mov         ebx,edx
 00596E21    mov         esi,eax
 00596E23    cmp         dword ptr [esi+8],0;TList<Vcl.Themes.TStyleManager.TSourceInfo>.FCount:Integer
>00596E27    jle         00596E32
 00596E29    xor         edx,edx
 00596E2B    mov         eax,esi
 00596E2D    call        00596CA4
 00596E32    push        0
 00596E34    lea         eax,[esi+20]
 00596E37    mov         ecx,1
 00596E3C    mov         edx,dword ptr ds:[5A31C0];TList<Vcl.Themes.TStyleManager.TSourceInfo>.arrayofT
 00596E42    call        @DynArraySetLength
 00596E47    add         esp,4
 00596E4A    mov         dl,0FC
 00596E4C    and         dl,bl
 00596E4E    mov         eax,esi
 00596E50    call        TEnumerable<Vcl.Themes.TStyleManager.TSourceInfo>.Destroy
 00596E55    test        bl,bl
>00596E57    jle         00596E60
 00596E59    mov         eax,esi
 00596E5B    call        @ClassDestroy
 00596E60    pop         esi
 00596E61    pop         ebx
 00596E62    ret
*}
end;

//00596E64
{*procedure TList<Vcl.Themes.TStyleManager.TSourceInfo>.Error(Msg:string; Data:NativeInt; ?:?);
begin
 00596E64    push        ebp
 00596E65    mov         ebp,esp
 00596E67    add         esp,0FFFFFFF0
 00596E6A    mov         dword ptr [ebp-8],ecx
 00596E6D    mov         dword ptr [ebp-4],edx
 00596E70    push        dword ptr [ebp+4]
 00596E73    mov         eax,dword ptr [ebp-8]
 00596E76    mov         dword ptr [ebp-10],eax
 00596E79    mov         byte ptr [ebp-0C],0
 00596E7D    lea         eax,[ebp-10]
 00596E80    push        eax
 00596E81    push        0
 00596E83    mov         ecx,dword ptr [ebp-4]
 00596E86    mov         dl,1
 00596E88    mov         eax,[004180BC];EListError
 00596E8D    call        Exception.CreateFmt;EListError.Create
>00596E92    jmp         @RaiseExcept
end;*}

//00596E9C
procedure TList<Vcl.Themes.TStyleManager.TSourceInfo>.Add(Value:TStyleManager.TSourceInfo);
begin
{*
 00596E9C    push        ecx
 00596E9D    mov         dword ptr [esp],edx
 00596EA0    mov         edx,dword ptr [esp]
 00596EA3    add         eax,8
 00596EA6    call        004348E0
 00596EAB    pop         edx
 00596EAC    ret
*}
end;

//00596EB0
{*procedure TList<Vcl.Themes.TStyleManager.TSourceInfo>.ToArray(?:?);
begin
 00596EB0    push        ecx
 00596EB1    mov         dword ptr [esp],edx
 00596EB4    mov         edx,dword ptr [esp]
 00596EB7    add         eax,8
 00596EBA    call        00435980
 00596EBF    pop         edx
 00596EC0    ret
end;*}

//00596EC4
procedure TList<Vcl.Themes.TStyleManager.TSourceInfo>.GetEnumerator;
begin
{*
 00596EC4    mov         ecx,eax
 00596EC6    mov         dl,1
 00596EC8    mov         eax,[005A3368];TList<Vcl.Themes.TStyleManager.TSourceInfo>.TEnumerator
 00596ECD    call        00596F2C
 00596ED2    ret
*}
end;

//00596ED4
{*procedure sub_00596ED4(?:TList<Vcl.Themes.TStyleManager.TSourceInfo>.TEnumerator; ?:?);
begin
 00596ED4    push        ebx
 00596ED5    push        esi
 00596ED6    push        edi
 00596ED7    add         esp,0FFFFFFF8
 00596EDA    mov         edi,edx
 00596EDC    mov         ebx,dword ptr [eax+4]
 00596EDF    mov         esi,dword ptr [eax+8]
 00596EE2    lea         eax,[ebx+8]
 00596EE5    mov         edx,esi
 00596EE7    call        00434534
 00596EEC    mov         eax,dword ptr [ebx+20]
 00596EEF    mov         edx,dword ptr [eax+esi*8]
 00596EF2    mov         dword ptr [esp],edx
 00596EF5    mov         edx,dword ptr [eax+esi*8+4]
 00596EF9    mov         dword ptr [esp+4],edx
 00596EFD    mov         eax,dword ptr [esp]
 00596F00    mov         dword ptr [edi],eax
 00596F02    mov         eax,dword ptr [esp+4]
 00596F06    mov         dword ptr [edi+4],eax
 00596F09    pop         ecx
 00596F0A    pop         edx
 00596F0B    pop         edi
 00596F0C    pop         esi
 00596F0D    pop         ebx
 00596F0E    ret
end;*}

//00596F10
{*procedure sub_00596F10(?:?);
begin
 00596F10    push        ebx
 00596F11    push        esi
 00596F12    mov         esi,edx
 00596F14    mov         ebx,eax
 00596F16    mov         edx,esi
 00596F18    mov         eax,ebx
 00596F1A    call        00596ED4
 00596F1F    pop         esi
 00596F20    pop         ebx
 00596F21    ret
end;*}

//00596F24
procedure sub_00596F24;
begin
{*
 00596F24    call        TList<Vcl.Themes.TStyleManager.TSourceInfo>.TEnumerator.MoveNext
 00596F29    ret
*}
end;

//00596F2C
constructor sub_00596F2C(AList:TList<Vcl.Themes.TStyleManager.TSourceInfo>);
begin
{*
 00596F2C    push        ebx
 00596F2D    push        esi
 00596F2E    push        edi
 00596F2F    test        dl,dl
>00596F31    je          00596F3B
 00596F33    add         esp,0FFFFFFF0
 00596F36    call        @ClassCreate
 00596F3B    mov         esi,ecx
 00596F3D    mov         ebx,edx
 00596F3F    mov         edi,eax
 00596F41    xor         edx,edx
 00596F43    mov         eax,edi
 00596F45    call        TObject.Create
 00596F4A    mov         dword ptr [edi+4],esi;TList<Vcl.Themes.TStyleManager.TSourceInfo>.TEnumerator.FList:TLis...
 00596F4D    mov         dword ptr [edi+8],0FFFFFFFF
 00596F54    mov         eax,edi
 00596F56    test        bl,bl
>00596F58    je          00596F69
 00596F5A    call        @AfterConstruction
 00596F5F    pop         dword ptr fs:[0]
 00596F66    add         esp,0C
 00596F69    mov         eax,edi
 00596F6B    pop         edi
 00596F6C    pop         esi
 00596F6D    pop         ebx
 00596F6E    ret
*}
end;

//00596F70
function TList<Vcl.Themes.TStyleManager.TSourceInfo>.TEnumerator.MoveNext:Boolean;
begin
{*
 00596F70    mov         edx,dword ptr [eax+4]
 00596F73    mov         edx,dword ptr [edx+8]
 00596F76    cmp         edx,dword ptr [eax+8]
>00596F79    jg          00596F7E
 00596F7B    xor         eax,eax
 00596F7D    ret
 00596F7E    inc         dword ptr [eax+8]
 00596F81    mov         edx,dword ptr [eax+4]
 00596F84    mov         edx,dword ptr [edx+8]
 00596F87    cmp         edx,dword ptr [eax+8]
 00596F8A    setg        al
 00596F8D    ret
*}
end;

//00596F90
function TComparer<Vcl.Themes.TStyleManager.TStyleClassDescriptor>.Default:IComparer<Vcl.Themes.TStyleManager.TStyleClassDescriptor>;
begin
{*
 00596F90    push        ebx
 00596F91    mov         ebx,edx
 00596F93    mov         ecx,10
 00596F98    mov         edx,dword ptr ds:[573C30];TStyleManager.TStyleClassDescriptor
 00596F9E    xor         eax,eax
 00596FA0    call        _LookupVtableInfo
 00596FA5    mov         edx,eax
 00596FA7    mov         eax,ebx
 00596FA9    call        @IntfCopy
 00596FAE    pop         ebx
 00596FAF    ret
*}
end;

//00596FB0
function TComparer<Vcl.Themes.TCustomStyleEngineClass>.Default:IComparer<Vcl.Themes.TCustomStyleEngineClass>;
begin
{*
 00596FB0    push        ebx
 00596FB1    mov         ebx,edx
 00596FB3    mov         ecx,4
 00596FB8    mov         edx,dword ptr ds:[573C0C];TCustomStyleEngineClass
 00596FBE    xor         eax,eax
 00596FC0    call        _LookupVtableInfo
 00596FC5    mov         edx,eax
 00596FC7    mov         eax,ebx
 00596FC9    call        @IntfCopy
 00596FCE    pop         ebx
 00596FCF    ret
*}
end;

//00596FD0
function TComparer<Vcl.Themes.TCustomStyleServices>.Default:IComparer<Vcl.Themes.TCustomStyleServices>;
begin
{*
 00596FD0    push        ebx
 00596FD1    mov         ebx,edx
 00596FD3    mov         ecx,4
 00596FD8    mov         edx,dword ptr ds:[571504];TCustomStyleServices
 00596FDE    xor         eax,eax
 00596FE0    call        _LookupVtableInfo
 00596FE5    mov         edx,eax
 00596FE7    mov         eax,ebx
 00596FE9    call        @IntfCopy
 00596FEE    pop         ebx
 00596FEF    ret
*}
end;

//00596FF0
{*procedure TComparer<System.Types.TPoint>.Default(?:?);
begin
 00596FF0    push        ebx
 00596FF1    mov         ebx,edx
 00596FF3    mov         ecx,8
 00596FF8    mov         edx,dword ptr ds:[40D89C];TPoint
 00596FFE    xor         eax,eax
 00597000    call        _LookupVtableInfo
 00597005    mov         edx,eax
 00597007    mov         eax,ebx
 00597009    call        @IntfCopy
 0059700E    pop         ebx
 0059700F    ret
end;*}

//00597010
{*procedure TComparer<Vcl.Themes.TPair<System.TClass,System.Generics.Collections.TList<Vcl.Themes.TStyleHookClass>>>.Default(?:?);
begin
 00597010    push        ebx
 00597011    mov         ebx,edx
 00597013    mov         ecx,8
 00597018    mov         edx,dword ptr ds:[577AC0];TPair<System.TClass,System.Generics.Collections.TList<Vcl.Them...
 0059701E    xor         eax,eax
 00597020    call        _LookupVtableInfo
 00597025    mov         edx,eax
 00597027    mov         eax,ebx
 00597029    call        @IntfCopy
 0059702E    pop         ebx
 0059702F    ret
end;*}

//00597030
{*procedure TComparer<System.TClass>.Default(?:?);
begin
 00597030    push        ebx
 00597031    mov         ebx,edx
 00597033    mov         ecx,4
 00597038    mov         edx,dword ptr ds:[40132C];TClass
 0059703E    xor         eax,eax
 00597040    call        _LookupVtableInfo
 00597045    mov         edx,eax
 00597047    mov         eax,ebx
 00597049    call        @IntfCopy
 0059704E    pop         ebx
 0059704F    ret
end;*}

//00597050
{*procedure TComparer<Vcl.Themes.TList<Vcl.Themes.TStyleHookClass>>.Default(?:?);
begin
 00597050    push        ebx
 00597051    mov         ebx,edx
 00597053    mov         ecx,4
 00597058    mov         edx,dword ptr ds:[5779BC];TList<Vcl.Themes.TStyleHookClass>
 0059705E    xor         eax,eax
 00597060    call        _LookupVtableInfo
 00597065    mov         edx,eax
 00597067    mov         eax,ebx
 00597069    call        @IntfCopy
 0059706E    pop         ebx
 0059706F    ret
end;*}

//00597070
{*procedure TComparer<Vcl.Themes.TPair<System.string,Vcl.Themes.TSysStyleHookClass>>.Default(?:?);
begin
 00597070    push        ebx
 00597071    mov         ebx,edx
 00597073    mov         ecx,8
 00597078    mov         edx,dword ptr ds:[579CEC];TPair<System.string,Vcl.Themes.TSysStyleHookClass>
 0059707E    xor         eax,eax
 00597080    call        _LookupVtableInfo
 00597085    mov         edx,eax
 00597087    mov         eax,ebx
 00597089    call        @IntfCopy
 0059708E    pop         ebx
 0059708F    ret
end;*}

//00597090
{*procedure TComparer<Vcl.Themes.TSysStyleHookClass>.Default(?:?);
begin
 00597090    push        ebx
 00597091    mov         ebx,edx
 00597093    mov         ecx,4
 00597098    mov         edx,dword ptr ds:[5737DC];TSysStyleHookClass
 0059709E    xor         eax,eax
 005970A0    call        _LookupVtableInfo
 005970A5    mov         edx,eax
 005970A7    mov         eax,ebx
 005970A9    call        @IntfCopy
 005970AE    pop         ebx
 005970AF    ret
end;*}

//005970B0
{*procedure TComparer<Vcl.Themes.TPair<Winapi.Windows.HWND,Vcl.Themes.TSysStyleHook>>.Default(?:?);
begin
 005970B0    push        ebx
 005970B1    mov         ebx,edx
 005970B3    mov         ecx,8
 005970B8    mov         edx,dword ptr ds:[57BDEC];TPair<Winapi.Windows.HWND,Vcl.Themes.TSysStyleHook>
 005970BE    xor         eax,eax
 005970C0    call        _LookupVtableInfo
 005970C5    mov         edx,eax
 005970C7    mov         eax,ebx
 005970C9    call        @IntfCopy
 005970CE    pop         ebx
 005970CF    ret
end;*}

//005970D0
{*procedure TComparer<Winapi.Windows.HWND>.Default(?:?);
begin
 005970D0    push        ebx
 005970D1    mov         ebx,edx
 005970D3    mov         ecx,4
 005970D8    mov         edx,dword ptr ds:[40FA04];HWND
 005970DE    xor         eax,eax
 005970E0    call        _LookupVtableInfo
 005970E5    mov         edx,eax
 005970E7    mov         eax,ebx
 005970E9    call        @IntfCopy
 005970EE    pop         ebx
 005970EF    ret
end;*}

//005970F0
{*procedure TComparer<Vcl.Themes.TSysStyleHook>.Default(?:?);
begin
 005970F0    push        ebx
 005970F1    mov         ebx,edx
 005970F3    mov         ecx,4
 005970F8    mov         edx,dword ptr ds:[573490];TSysStyleHook
 005970FE    xor         eax,eax
 00597100    call        _LookupVtableInfo
 00597105    mov         edx,eax
 00597107    mov         eax,ebx
 00597109    call        @IntfCopy
 0059710E    pop         ebx
 0059710F    ret
end;*}

//00597110
{*procedure TComparer<Vcl.Themes.TPair<Winapi.Windows.HWND,Vcl.Themes.TChildControlInfo>>.Default(?:?);
begin
 00597110    push        ebx
 00597111    mov         ebx,edx
 00597113    mov         ecx,10
 00597118    mov         edx,dword ptr ds:[57DF8C];TPair<Winapi.Windows.HWND,Vcl.Themes.TChildControlInfo>
 0059711E    xor         eax,eax
 00597120    call        _LookupVtableInfo
 00597125    mov         edx,eax
 00597127    mov         eax,ebx
 00597129    call        @IntfCopy
 0059712E    pop         ebx
 0059712F    ret
end;*}

//00597130
{*procedure TComparer<Vcl.Themes.TChildControlInfo>.Default(?:?);
begin
 00597130    push        ebx
 00597131    mov         ebx,edx
 00597133    mov         ecx,0C
 00597138    mov         edx,dword ptr ds:[5737FC];TChildControlInfo
 0059713E    xor         eax,eax
 00597140    call        _LookupVtableInfo
 00597145    mov         edx,eax
 00597147    mov         eax,ebx
 00597149    call        @IntfCopy
 0059714E    pop         ebx
 0059714F    ret
end;*}

//00597150
{*procedure TComparer<Vcl.Themes.TPair<System.string,Vcl.Themes.TStyleManager.TSourceInfo>>.Default(?:?);
begin
 00597150    push        ebx
 00597151    mov         ebx,edx
 00597153    mov         ecx,0C
 00597158    mov         edx,dword ptr ds:[57FDA8];TPair<System.string,Vcl.Themes.TStyleManager.TSourceInfo>
 0059715E    xor         eax,eax
 00597160    call        _LookupVtableInfo
 00597165    mov         edx,eax
 00597167    mov         eax,ebx
 00597169    call        @IntfCopy
 0059716E    pop         ebx
 0059716F    ret
end;*}

//00597170
{*procedure TComparer<Vcl.Themes.TStyleManager.TSourceInfo>.Default(?:?);
begin
 00597170    push        ebx
 00597171    mov         ebx,edx
 00597173    mov         ecx,8
 00597178    mov         edx,dword ptr ds:[573D0C];TStyleManager.TSourceInfo
 0059717E    xor         eax,eax
 00597180    call        _LookupVtableInfo
 00597185    mov         edx,eax
 00597187    mov         eax,ebx
 00597189    call        @IntfCopy
 0059718E    pop         ebx
 0059718F    ret
end;*}

//005A82BC
function GetRGBColor(Value:UITypes.TColor):DWORD;
begin
{*
 005A82BC    call        ColorToRGB
 005A82C1    mov         edx,eax
 005A82C3    sub         edx,1FFFFFFF
>005A82C9    je          005A82D0
 005A82CB    dec         edx
>005A82CC    je          005A82D4
>005A82CE    jmp         005A82D9
 005A82D0    or          eax,0FFFFFFFF
 005A82D3    ret
 005A82D4    mov         eax,0FF000000
 005A82D9    ret
*}
end;

//005A82DC
function GetColor(Value:Types.DWORD):TColor;
begin
{*
 005A82DC    mov         edx,eax
 005A82DE    sub         edx,0FF000000
>005A82E4    je          005A82F4
 005A82E6    sub         edx,0FFFFFF
>005A82EC    jne         005A82F9
 005A82EE    mov         eax,1FFFFFFF
 005A82F3    ret
 005A82F4    mov         eax,20000000
 005A82F9    ret
*}
end;

//005A82FC
constructor TCustomImageList.Create(AOwner:TComponent);
begin
{*
 005A82FC    push        ebx
 005A82FD    push        esi
 005A82FE    test        dl,dl
>005A8300    je          005A830A
 005A8302    add         esp,0FFFFFFF0
 005A8305    call        @ClassCreate
 005A830A    mov         ebx,edx
 005A830C    mov         esi,eax
 005A830E    xor         edx,edx
 005A8310    mov         eax,esi
 005A8312    call        TComponent.Create
 005A8317    mov         dword ptr [esi+54],10;TCustomImageList.FWidth:Integer
 005A831E    mov         dword ptr [esi+50],10;TCustomImageList.FHeight:Integer
 005A8325    mov         eax,esi
 005A8327    mov         edx,dword ptr [eax]
 005A8329    call        dword ptr [edx+54];TCustomImageList.Initialize
 005A832C    mov         eax,esi
 005A832E    test        bl,bl
>005A8330    je          005A8341
 005A8332    call        @AfterConstruction
 005A8337    pop         dword ptr fs:[0]
 005A833E    add         esp,0C
 005A8341    mov         eax,esi
 005A8343    pop         esi
 005A8344    pop         ebx
 005A8345    ret
*}
end;

//005A8348
constructor TDragImageList.Create(AWidth:Integer; AHeight:Integer);
begin
{*
 005A8348    push        ebp
 005A8349    mov         ebp,esp
 005A834B    push        ebx
 005A834C    push        esi
 005A834D    push        edi
 005A834E    test        dl,dl
>005A8350    je          005A835A
 005A8352    add         esp,0FFFFFFF0
 005A8355    call        @ClassCreate
 005A835A    mov         esi,ecx
 005A835C    mov         ebx,edx
 005A835E    mov         edi,eax
 005A8360    xor         ecx,ecx
 005A8362    xor         edx,edx
 005A8364    mov         eax,edi
 005A8366    call        TComponent.Create
 005A836B    mov         dword ptr [edi+54],esi;TCustomImageList.FWidth:Integer
 005A836E    mov         eax,dword ptr [ebp+8]
 005A8371    mov         dword ptr [edi+50],eax;TCustomImageList.FHeight:Integer
 005A8374    mov         eax,edi
 005A8376    mov         edx,dword ptr [eax]
 005A8378    call        dword ptr [edx+54];TCustomImageList.Initialize
 005A837B    mov         eax,edi
 005A837D    test        bl,bl
>005A837F    je          005A8390
 005A8381    call        @AfterConstruction
 005A8386    pop         dword ptr fs:[0]
 005A838D    add         esp,0C
 005A8390    mov         eax,edi
 005A8392    pop         edi
 005A8393    pop         esi
 005A8394    pop         ebx
 005A8395    pop         ebp
 005A8396    ret         4
*}
end;

//005A839C
destructor TCustomImageList.Destroy();
begin
{*
 005A839C    push        ebx
 005A839D    push        esi
 005A839E    call        @BeforeDestruction
 005A83A3    mov         ebx,edx
 005A83A5    mov         esi,eax
 005A83A7    xor         eax,eax
 005A83A9    mov         dword ptr [esi+88],eax;TCustomImageList.FOnChange:TNotifyEvent
 005A83AF    mov         dword ptr [esi+8C],eax;TCustomImageList.?f8C:dword
 005A83B5    mov         eax,dword ptr [esi+70];TCustomImageList.FBitmap:TBitmap
 005A83B8    call        TObject.Free
 005A83BD    mov         eax,esi
 005A83BF    call        005A8734
 005A83C4    mov         eax,dword ptr [esi+74];TCustomImageList.FMonoBitmap:TBitmap
 005A83C7    call        TObject.Free
 005A83CC    mov         eax,dword ptr [esi+78];TCustomImageList.FGrayscaleBitmap:TBitmap
 005A83CF    call        TObject.Free
 005A83D4    mov         dl,0FC
 005A83D6    and         dl,bl
 005A83D8    mov         eax,esi
 005A83DA    call        TComponent.Destroy
 005A83DF    test        bl,bl
>005A83E1    jle         005A83EA
 005A83E3    mov         eax,esi
 005A83E5    call        @ClassDestroy
 005A83EA    pop         esi
 005A83EB    pop         ebx
 005A83EC    ret
*}
end;

//005A83F0
procedure TCustomImageList.Initialize;
begin
{*
 005A83F0    push        ebp
 005A83F1    mov         ebp,esp
 005A83F3    push        0
 005A83F5    push        ebx
 005A83F6    mov         ebx,eax
 005A83F8    xor         eax,eax
 005A83FA    push        ebp
 005A83FB    push        5A8499
 005A8400    push        dword ptr fs:[eax]
 005A8403    mov         dword ptr fs:[eax],esp
 005A8406    mov         eax,dword ptr [ebx+50]
 005A8409    cmp         eax,1
>005A840C    jl          005A841B
 005A840E    cmp         eax,8000
>005A8413    jg          005A841B
 005A8415    cmp         dword ptr [ebx+54],1
>005A8419    jge         005A843C
 005A841B    lea         edx,[ebp-4]
 005A841E    mov         eax,[007C44FC];^SResString222:TResStringRec
 005A8423    call        LoadResString
 005A8428    mov         ecx,dword ptr [ebp-4]
 005A842B    mov         dl,1
 005A842D    mov         eax,[0046BE9C];EInvalidOperation
 005A8432    call        Exception.Create
 005A8437    call        @RaiseExcept
 005A843C    mov         dword ptr [ebx+58],4
 005A8443    mov         byte ptr [ebx+61],1
 005A8447    mov         dl,2
 005A8449    mov         eax,ebx
 005A844B    call        TImageList.SetDrawingStyle
 005A8450    mov         byte ptr [ebx+63],0
 005A8454    mov         dword ptr [ebx+64],1FFFFFFF
 005A845B    mov         dword ptr [ebx+68],1FFFFFFF
 005A8462    mov         byte ptr [ebx+6C],0
 005A8466    mov         byte ptr [ebx+90],1
 005A846D    mov         dl,1
 005A846F    mov         eax,[004C1D10];TBitmap
 005A8474    call        TBitmap.Create
 005A8479    mov         dword ptr [ebx+70],eax
 005A847C    mov         eax,ebx
 005A847E    call        005A84B8
 005A8483    xor         eax,eax
 005A8485    pop         edx
 005A8486    pop         ecx
 005A8487    pop         ecx
 005A8488    mov         dword ptr fs:[eax],edx
 005A848B    push        5A84A0
 005A8490    lea         eax,[ebp-4]
 005A8493    call        @UStrClr
 005A8498    ret
>005A8499    jmp         @HandleFinally
>005A849E    jmp         005A8490
 005A84A0    pop         ebx
 005A84A1    pop         ecx
 005A84A2    pop         ebp
 005A84A3    ret
*}
end;

//005A84A4
function TCustomImageList.HandleAllocated:Boolean;
begin
{*
 005A84A4    cmp         dword ptr [eax+5C],0
 005A84A8    setne       al
 005A84AB    ret
*}
end;

//005A84AC
procedure sub_005A84AC(?:TCustomImageList);
begin
{*
 005A84AC    cmp         dword ptr [eax+5C],0
>005A84B0    jne         005A84B7
 005A84B2    call        005A8764
 005A84B7    ret
*}
end;

//005A84B8
procedure sub_005A84B8(?:TCustomImageList);
begin
{*
 005A84B8    push        ebp
 005A84B9    mov         ebp,esp
 005A84BB    add         esp,0FFFFFFE0
 005A84BE    push        ebx
 005A84BF    mov         dword ptr [ebp-4],eax
 005A84C2    push        0
 005A84C4    call        user32.GetDC
 005A84C9    mov         dword ptr [ebp-8],eax
 005A84CC    xor         eax,eax
 005A84CE    push        ebp
 005A84CF    push        5A8559
 005A84D4    push        dword ptr fs:[eax]
 005A84D7    mov         dword ptr fs:[eax],esp
 005A84DA    mov         eax,dword ptr [ebp-4]
 005A84DD    mov         ebx,dword ptr [eax+70]
 005A84E0    mov         eax,dword ptr [ebp-4]
 005A84E3    mov         eax,dword ptr [eax+50]
 005A84E6    push        eax
 005A84E7    mov         eax,dword ptr [ebp-4]
 005A84EA    mov         eax,dword ptr [eax+54]
 005A84ED    push        eax
 005A84EE    mov         eax,dword ptr [ebp-8]
 005A84F1    push        eax
 005A84F2    call        gdi32.CreateCompatibleBitmap
 005A84F7    mov         edx,eax
 005A84F9    mov         eax,ebx
 005A84FB    call        TBitmap.SetHandle
 005A8500    mov         eax,ebx
 005A8502    call        TBitmap.GetCanvas
 005A8507    mov         eax,dword ptr [eax+48];TCanvas.FBrush:TBrush
 005A850A    xor         edx,edx
 005A850C    call        TBrush.SetColor
 005A8511    mov         eax,ebx
 005A8513    mov         edx,dword ptr [eax]
 005A8515    call        dword ptr [edx+24]
 005A8518    push        eax
 005A8519    lea         eax,[ebp-20]
 005A851C    push        eax
 005A851D    mov         eax,ebx
 005A851F    mov         edx,dword ptr [eax]
 005A8521    call        dword ptr [edx+30]
 005A8524    mov         ecx,eax
 005A8526    xor         edx,edx
 005A8528    xor         eax,eax
 005A852A    call        Rect
 005A852F    lea         eax,[ebp-20]
 005A8532    push        eax
 005A8533    mov         eax,ebx
 005A8535    call        TBitmap.GetCanvas
 005A853A    pop         edx
 005A853B    mov         ecx,dword ptr [eax]
 005A853D    call        dword ptr [ecx+54];TCanvas.FillRect
 005A8540    xor         eax,eax
 005A8542    pop         edx
 005A8543    pop         ecx
 005A8544    pop         ecx
 005A8545    mov         dword ptr fs:[eax],edx
 005A8548    push        5A8560
 005A854D    mov         eax,dword ptr [ebp-8]
 005A8550    push        eax
 005A8551    push        0
 005A8553    call        user32.ReleaseDC
 005A8558    ret
>005A8559    jmp         @HandleFinally
>005A855E    jmp         005A854D
 005A8560    mov         eax,dword ptr [ebp-4]
 005A8563    add         eax,74
 005A8566    mov         dword ptr [ebp-0C],eax
 005A8569    mov         eax,dword ptr [ebp-0C]
 005A856C    mov         eax,dword ptr [eax]
 005A856E    mov         edx,dword ptr [ebp-0C]
 005A8571    xor         ecx,ecx
 005A8573    mov         dword ptr [edx],ecx
 005A8575    call        TObject.Free
 005A857A    mov         eax,dword ptr [ebp-4]
 005A857D    add         eax,78
 005A8580    mov         dword ptr [ebp-10],eax
 005A8583    mov         eax,dword ptr [ebp-10]
 005A8586    mov         eax,dword ptr [eax]
 005A8588    mov         edx,dword ptr [ebp-10]
 005A858B    xor         ecx,ecx
 005A858D    mov         dword ptr [edx],ecx
 005A858F    call        TObject.Free
 005A8594    pop         ebx
 005A8595    mov         esp,ebp
 005A8597    pop         ebp
 005A8598    ret
*}
end;

//005A859C
procedure sub_005A859C(?:TDragImageList);
begin
{*
 005A859C    push        ebx
 005A859D    add         esp,0FFFFFFF8
 005A85A0    mov         ebx,eax
 005A85A2    mov         eax,dword ptr [ebx+54]
 005A85A5    mov         dword ptr [esp+4],eax
 005A85A9    mov         eax,dword ptr [ebx+50]
 005A85AC    mov         dword ptr [esp],eax
 005A85AF    push        esp
 005A85B0    lea         eax,[esp+8]
 005A85B4    push        eax
 005A85B5    push        edx
 005A85B6    call        comctl32.ImageList_GetIconSize
 005A85BB    mov         eax,dword ptr [esp+4]
 005A85BF    mov         dword ptr [ebx+54],eax
 005A85C2    mov         eax,dword ptr [esp]
 005A85C5    mov         dword ptr [ebx+50],eax
 005A85C8    mov         eax,ebx
 005A85CA    call        005A84B8
 005A85CF    pop         ecx
 005A85D0    pop         edx
 005A85D1    pop         ebx
 005A85D2    ret
*}
end;

//005A85D4
procedure TImageList.SetShareImages(Value:Boolean);
begin
{*
 005A85D4    cmp         dl,byte ptr [eax+62];TImageList.FShareImages:Boolean
>005A85D7    je          005A85DC
 005A85D9    mov         byte ptr [eax+62],dl;TImageList.FShareImages:Boolean
 005A85DC    ret
*}
end;

//005A85E0
procedure TImageList.SetWidth(Value:Integer);
begin
{*
 005A85E0    push        ebx
 005A85E1    push        esi
 005A85E2    mov         ebx,eax
 005A85E4    cmp         edx,dword ptr [ebx+54];TImageList.FWidth:Integer
>005A85E7    je          005A861A
 005A85E9    mov         esi,edx
 005A85EB    mov         dword ptr [ebx+54],esi;TImageList.FWidth:Integer
 005A85EE    mov         eax,dword ptr [ebx+5C];TImageList.FHandle:NativeUInt
 005A85F1    test        eax,eax
 005A85F3    setne       dl
 005A85F6    test        dl,dl
>005A85F8    je          005A8605
 005A85FA    mov         edx,dword ptr [ebx+50];TImageList.FHeight:Integer
 005A85FD    push        edx
 005A85FE    push        esi
 005A85FF    push        eax
 005A8600    call        comctl32.ImageList_SetIconSize
 005A8605    mov         eax,ebx
 005A8607    call        TCustomImageList.Clear
 005A860C    mov         eax,ebx
 005A860E    call        005A84B8
 005A8613    mov         eax,ebx
 005A8615    mov         edx,dword ptr [eax]
 005A8617    call        dword ptr [edx+4C];TBaseImageList.Change
 005A861A    pop         esi
 005A861B    pop         ebx
 005A861C    ret
*}
end;

//005A8620
procedure TImageList.SetHeight(Value:Integer);
begin
{*
 005A8620    push        ebx
 005A8621    push        esi
 005A8622    mov         ebx,eax
 005A8624    cmp         edx,dword ptr [ebx+50];TImageList.FHeight:Integer
>005A8627    je          005A865A
 005A8629    mov         esi,edx
 005A862B    mov         dword ptr [ebx+50],esi;TImageList.FHeight:Integer
 005A862E    mov         eax,dword ptr [ebx+5C];TImageList.FHandle:NativeUInt
 005A8631    test        eax,eax
 005A8633    setne       dl
 005A8636    test        dl,dl
>005A8638    je          005A8645
 005A863A    push        esi
 005A863B    mov         edx,dword ptr [ebx+54];TImageList.FWidth:Integer
 005A863E    push        edx
 005A863F    push        eax
 005A8640    call        comctl32.ImageList_SetIconSize
 005A8645    mov         eax,ebx
 005A8647    call        TCustomImageList.Clear
 005A864C    mov         eax,ebx
 005A864E    call        005A84B8
 005A8653    mov         eax,ebx
 005A8655    mov         edx,dword ptr [eax]
 005A8657    call        dword ptr [edx+4C];TBaseImageList.Change
 005A865A    pop         esi
 005A865B    pop         ebx
 005A865C    ret
*}
end;

//005A8660
procedure sub_005A8660(?:TDragImageList; ?:IntPtr);
begin
{*
 005A8660    push        ebx
 005A8661    push        esi
 005A8662    mov         esi,edx
 005A8664    mov         ebx,eax
 005A8666    mov         eax,ebx
 005A8668    call        005A8734
 005A866D    test        esi,esi
>005A866F    je          005A8684
 005A8671    mov         edx,esi
 005A8673    mov         eax,ebx
 005A8675    call        005A859C
 005A867A    mov         dword ptr [ebx+5C],esi;TDragImageList.FHandle:NativeUInt
 005A867D    mov         eax,ebx
 005A867F    mov         edx,dword ptr [eax]
 005A8681    call        dword ptr [edx+4C];TBaseImageList.Change
 005A8684    pop         esi
 005A8685    pop         ebx
 005A8686    ret
*}
end;

//005A8688
procedure sub_005A8688(?:TCustomImageList; ?:HBITMAP);
begin
{*
 005A8688    test        edx,edx
>005A868A    je          005A868F
 005A868C    mov         eax,edx
 005A868E    ret
 005A868F    mov         eax,dword ptr [eax+70]
 005A8692    mov         edx,dword ptr [eax]
 005A8694    call        dword ptr [edx+70]
 005A8697    ret
*}
end;

//005A8698
function TCustomImageList.GetHandle:HIMAGELIST;
begin
{*
 005A8698    push        ebx
 005A8699    mov         ebx,eax
 005A869B    mov         eax,ebx
 005A869D    call        005A84AC
 005A86A2    mov         eax,dword ptr [ebx+5C]
 005A86A5    pop         ebx
 005A86A6    ret
*}
end;

//005A86A8
procedure sub_005A86A8(?:TCustomImageList; ?:TBitmap; ?:TBitmap);
begin
{*
 005A86A8    push        ebx
 005A86A9    push        esi
 005A86AA    push        edi
 005A86AB    push        ebp
 005A86AC    mov         edi,ecx
 005A86AE    mov         ebx,edx
 005A86B0    mov         esi,eax
 005A86B2    mov         edx,ebx
 005A86B4    mov         eax,esi
 005A86B6    call        005A9598
 005A86BB    test        ebx,ebx
>005A86BD    je          005A8726
 005A86BF    mov         eax,ebx
 005A86C1    call        TBitmap.GetPixelFormat
 005A86C6    movzx       edx,byte ptr [esi+90]
 005A86CD    cmp         al,byte ptr [edx+7A1B80]
>005A86D3    jne         005A86DE
 005A86D5    mov         eax,ebx
 005A86D7    mov         edx,dword ptr [eax]
 005A86D9    call        dword ptr [edx+70]
>005A86DC    jmp         005A872E
 005A86DE    mov         eax,ebx
 005A86E0    mov         edx,dword ptr [eax]
 005A86E2    call        dword ptr [edx+24]
 005A86E5    push        eax
 005A86E6    mov         eax,ebx
 005A86E8    mov         edx,dword ptr [eax]
 005A86EA    call        dword ptr [edx+30]
 005A86ED    mov         edx,eax
 005A86EF    mov         eax,edi
 005A86F1    pop         ecx
 005A86F2    mov         ebp,dword ptr [eax]
 005A86F4    call        dword ptr [ebp+6C]
 005A86F7    movzx       eax,byte ptr [esi+90]
 005A86FE    movzx       edx,byte ptr [eax+7A1B80]
 005A8705    mov         eax,edi
 005A8707    call        TBitmap.SetPixelFormat
 005A870C    push        ebx
 005A870D    mov         eax,edi
 005A870F    call        TBitmap.GetCanvas
 005A8714    xor         ecx,ecx
 005A8716    xor         edx,edx
 005A8718    mov         ebx,dword ptr [eax]
 005A871A    call        dword ptr [ebx+44];TCanvas.Draw
 005A871D    mov         eax,edi
 005A871F    mov         edx,dword ptr [eax]
 005A8721    call        dword ptr [edx+70]
>005A8724    jmp         005A872E
 005A8726    mov         eax,dword ptr [esi+70]
 005A8729    mov         edx,dword ptr [eax]
 005A872B    call        dword ptr [edx+70]
 005A872E    pop         ebp
 005A872F    pop         edi
 005A8730    pop         esi
 005A8731    pop         ebx
 005A8732    ret
*}
end;

//005A8734
procedure sub_005A8734(?:TCustomImageList);
begin
{*
 005A8734    push        ebx
 005A8735    mov         ebx,eax
 005A8737    cmp         dword ptr [ebx+5C],0;TCustomImageList.FHandle:NativeUInt
 005A873B    setne       al
 005A873E    test        al,al
>005A8740    je          005A8755
 005A8742    cmp         byte ptr [ebx+62],0;TCustomImageList.FShareImages:Boolean
>005A8746    jne         005A8755
 005A8748    mov         eax,ebx
 005A874A    call        TCustomImageList.GetHandle
 005A874F    push        eax
 005A8750    call        comctl32.ImageList_Destroy
 005A8755    xor         eax,eax
 005A8757    mov         dword ptr [ebx+5C],eax;TCustomImageList.FHandle:NativeUInt
 005A875A    mov         eax,ebx
 005A875C    mov         edx,dword ptr [eax]
 005A875E    call        dword ptr [edx+4C];TBaseImageList.Change
 005A8761    pop         ebx
 005A8762    ret
*}
end;

//005A8764
procedure sub_005A8764(?:TImageList);
begin
{*
 005A8764    push        ebp
 005A8765    mov         ebp,esp
 005A8767    push        0
 005A8769    push        ebx
 005A876A    push        esi
 005A876B    push        edi
 005A876C    mov         ebx,eax
 005A876E    xor         eax,eax
 005A8770    push        ebp
 005A8771    push        5A8800
 005A8776    push        dword ptr fs:[eax]
 005A8779    mov         dword ptr fs:[eax],esp
 005A877C    mov         esi,dword ptr [ebx+58]
 005A877F    push        esi
 005A8780    push        esi
 005A8781    movzx       eax,byte ptr [ebx+90]
 005A8788    mov         eax,dword ptr [eax*4+7A1B64]
 005A878F    movzx       edx,byte ptr [ebx+61]
 005A8793    or          eax,dword ptr [edx*4+7A1B88]
 005A879A    push        eax
 005A879B    mov         eax,dword ptr [ebx+50]
 005A879E    push        eax
 005A879F    mov         eax,dword ptr [ebx+54]
 005A87A2    push        eax
 005A87A3    call        comctl32.ImageList_Create
 005A87A8    mov         edi,eax
 005A87AA    mov         dword ptr [ebx+5C],edi
 005A87AD    test        edi,edi
 005A87AF    setne       al
 005A87B2    test        al,al
>005A87B4    jne         005A87D7
 005A87B6    lea         edx,[ebp-4]
 005A87B9    mov         eax,[007C4A5C];^SResString223:TResStringRec
 005A87BE    call        LoadResString
 005A87C3    mov         ecx,dword ptr [ebp-4]
 005A87C6    mov         dl,1
 005A87C8    mov         eax,[0046BE9C];EInvalidOperation
 005A87CD    call        Exception.Create;EInvalidOperation.Create
 005A87D2    call        @RaiseExcept
 005A87D7    mov         eax,dword ptr [ebx+64]
 005A87DA    cmp         eax,1FFFFFFF
>005A87DF    je          005A87EA
 005A87E1    mov         edx,eax
 005A87E3    mov         eax,ebx
 005A87E5    call        TImageList.SetBkColor
 005A87EA    xor         eax,eax
 005A87EC    pop         edx
 005A87ED    pop         ecx
 005A87EE    pop         ecx
 005A87EF    mov         dword ptr fs:[eax],edx
 005A87F2    push        5A8807
 005A87F7    lea         eax,[ebp-4]
 005A87FA    call        @UStrClr
 005A87FF    ret
>005A8800    jmp         @HandleFinally
>005A8805    jmp         005A87F7
 005A8807    pop         edi
 005A8808    pop         esi
 005A8809    pop         ebx
 005A880A    pop         ecx
 005A880B    pop         ebp
 005A880C    ret
*}
end;

//005A8810
function TCustomImageList.Add(Image:TBitmap; Mask:TBitmap):Integer;
begin
{*
 005A8810    push        ebp
 005A8811    mov         ebp,esp
 005A8813    add         esp,0FFFFFFF0
 005A8816    push        ebx
 005A8817    push        esi
 005A8818    mov         esi,ecx
 005A881A    mov         ebx,edx
 005A881C    mov         dword ptr [ebp-4],eax
 005A881F    mov         dl,1
 005A8821    mov         eax,[004C1D10];TBitmap
 005A8826    call        TBitmap.Create;TBitmap.Create
 005A882B    mov         dword ptr [ebp-0C],eax
 005A882E    xor         eax,eax
 005A8830    push        ebp
 005A8831    push        5A88BF
 005A8836    push        dword ptr fs:[eax]
 005A8839    mov         dword ptr fs:[eax],esp
 005A883C    mov         dl,1
 005A883E    mov         eax,[004C1D10];TBitmap
 005A8843    call        TBitmap.Create;TBitmap.Create
 005A8848    mov         dword ptr [ebp-10],eax
 005A884B    xor         eax,eax
 005A884D    push        ebp
 005A884E    push        5A88A2
 005A8853    push        dword ptr fs:[eax]
 005A8856    mov         dword ptr fs:[eax],esp
 005A8859    mov         eax,dword ptr [ebp-4]
 005A885C    call        005A84AC
 005A8861    mov         ecx,dword ptr [ebp-10]
 005A8864    mov         edx,esi
 005A8866    mov         eax,dword ptr [ebp-4]
 005A8869    call        005A86A8
 005A886E    push        eax
 005A886F    mov         ecx,dword ptr [ebp-0C]
 005A8872    mov         edx,ebx
 005A8874    mov         eax,dword ptr [ebp-4]
 005A8877    call        005A86A8
 005A887C    push        eax
 005A887D    mov         eax,dword ptr [ebp-4]
 005A8880    mov         eax,dword ptr [eax+5C];TCustomImageList.FHandle:NativeUInt
 005A8883    push        eax
 005A8884    call        comctl32.ImageList_Add
 005A8889    mov         dword ptr [ebp-8],eax
 005A888C    xor         eax,eax
 005A888E    pop         edx
 005A888F    pop         ecx
 005A8890    pop         ecx
 005A8891    mov         dword ptr fs:[eax],edx
 005A8894    push        5A88A9
 005A8899    mov         eax,dword ptr [ebp-10]
 005A889C    call        TObject.Free
 005A88A1    ret
>005A88A2    jmp         @HandleFinally
>005A88A7    jmp         005A8899
 005A88A9    xor         eax,eax
 005A88AB    pop         edx
 005A88AC    pop         ecx
 005A88AD    pop         ecx
 005A88AE    mov         dword ptr fs:[eax],edx
 005A88B1    push        5A88C6
 005A88B6    mov         eax,dword ptr [ebp-0C]
 005A88B9    call        TObject.Free
 005A88BE    ret
>005A88BF    jmp         @HandleFinally
>005A88C4    jmp         005A88B6
 005A88C6    mov         eax,dword ptr [ebp-4]
 005A88C9    mov         edx,dword ptr [eax]
 005A88CB    call        dword ptr [edx+4C];TBaseImageList.Change
 005A88CE    mov         eax,dword ptr [ebp-8]
 005A88D1    pop         esi
 005A88D2    pop         ebx
 005A88D3    mov         esp,ebp
 005A88D5    pop         ebp
 005A88D6    ret
*}
end;

//005A88D8
function TCustomImageList.AddMasked(Image:TBitmap; MaskColor:TColor):Integer;
begin
{*
 005A88D8    push        ebp
 005A88D9    mov         ebp,esp
 005A88DB    add         esp,0FFFFFFF0
 005A88DE    push        ebx
 005A88DF    push        esi
 005A88E0    mov         esi,ecx
 005A88E2    mov         ebx,edx
 005A88E4    mov         dword ptr [ebp-4],eax
 005A88E7    mov         dl,1
 005A88E9    mov         eax,[004C1D10];TBitmap
 005A88EE    call        TBitmap.Create;TBitmap.Create
 005A88F3    mov         dword ptr [ebp-0C],eax
 005A88F6    xor         eax,eax
 005A88F8    push        ebp
 005A88F9    push        5A89D7
 005A88FE    push        dword ptr fs:[eax]
 005A8901    mov         dword ptr fs:[eax],esp
 005A8904    mov         eax,dword ptr [ebp-4]
 005A8907    cmp         byte ptr [eax+61],0;TCustomImageList.FMasked:Boolean
>005A890B    je          005A89A0
 005A8911    cmp         esi,0FFFFFFFF
>005A8914    je          005A89A0
 005A891A    mov         dl,1
 005A891C    mov         eax,[004C1D10];TBitmap
 005A8921    call        TBitmap.Create;TBitmap.Create
 005A8926    mov         dword ptr [ebp-10],eax
 005A8929    xor         eax,eax
 005A892B    push        ebp
 005A892C    push        5A8999
 005A8931    push        dword ptr fs:[eax]
 005A8934    mov         dword ptr fs:[eax],esp
 005A8937    mov         edx,ebx
 005A8939    mov         eax,dword ptr [ebp-10]
 005A893C    mov         ecx,dword ptr [eax]
 005A893E    call        dword ptr [ecx+8];TBitmap.Assign
 005A8941    mov         edx,esi
 005A8943    mov         eax,dword ptr [ebp-10]
 005A8946    call        TBitmap.SetTransparentColor
 005A894B    mov         eax,dword ptr [ebp-4]
 005A894E    call        005A84AC
 005A8953    mov         eax,dword ptr [ebp-10]
 005A8956    mov         edx,dword ptr [eax]
 005A8958    call        dword ptr [edx+74];TBitmap.GetMaskHandle
 005A895B    mov         edx,eax
 005A895D    mov         eax,dword ptr [ebp-4]
 005A8960    call        005A8688
 005A8965    push        eax
 005A8966    mov         ecx,dword ptr [ebp-0C]
 005A8969    mov         edx,ebx
 005A896B    mov         eax,dword ptr [ebp-4]
 005A896E    call        005A86A8
 005A8973    push        eax
 005A8974    mov         eax,dword ptr [ebp-4]
 005A8977    mov         eax,dword ptr [eax+5C];TCustomImageList.FHandle:NativeUInt
 005A897A    push        eax
 005A897B    call        comctl32.ImageList_Add
 005A8980    mov         dword ptr [ebp-8],eax
 005A8983    xor         eax,eax
 005A8985    pop         edx
 005A8986    pop         ecx
 005A8987    pop         ecx
 005A8988    mov         dword ptr fs:[eax],edx
 005A898B    push        5A89C1
 005A8990    mov         eax,dword ptr [ebp-10]
 005A8993    call        TObject.Free
 005A8998    ret
>005A8999    jmp         @HandleFinally
>005A899E    jmp         005A8990
 005A89A0    push        0
 005A89A2    mov         ecx,dword ptr [ebp-0C]
 005A89A5    mov         edx,ebx
 005A89A7    mov         eax,dword ptr [ebp-4]
 005A89AA    call        005A86A8
 005A89AF    push        eax
 005A89B0    mov         eax,dword ptr [ebp-4]
 005A89B3    call        TCustomImageList.GetHandle
 005A89B8    push        eax
 005A89B9    call        comctl32.ImageList_Add
 005A89BE    mov         dword ptr [ebp-8],eax
 005A89C1    xor         eax,eax
 005A89C3    pop         edx
 005A89C4    pop         ecx
 005A89C5    pop         ecx
 005A89C6    mov         dword ptr fs:[eax],edx
 005A89C9    push        5A89DE
 005A89CE    mov         eax,dword ptr [ebp-0C]
 005A89D1    call        TObject.Free
 005A89D6    ret
>005A89D7    jmp         @HandleFinally
>005A89DC    jmp         005A89CE
 005A89DE    mov         eax,dword ptr [ebp-4]
 005A89E1    mov         edx,dword ptr [eax]
 005A89E3    call        dword ptr [edx+4C];TBaseImageList.Change
 005A89E6    mov         eax,dword ptr [ebp-8]
 005A89E9    pop         esi
 005A89EA    pop         ebx
 005A89EB    mov         esp,ebp
 005A89ED    pop         ebp
 005A89EE    ret
*}
end;

//005A89F0
procedure TCustomImageList.GetIcon(Index:Integer; Image:TIcon);
begin
{*
 005A89F0    push        ebx
 005A89F1    movzx       ebx,byte ptr [eax+60];TCustomImageList.FDrawingStyle:TDrawingStyle
 005A89F5    push        ebx
 005A89F6    movzx       ebx,byte ptr [eax+63];TCustomImageList.FImageType:TImageType
 005A89FA    push        ebx
 005A89FB    call        TCustomImageList.GetIcon
 005A8A00    pop         ebx
 005A8A01    ret
*}
end;

//005A8A04
procedure TCustomImageList.GetIcon(Index:Integer; Image:TIcon; AImageType:TImageType; ADrawingStyle:TDrawingStyle);
begin
{*
 005A8A04    push        ebp
 005A8A05    mov         ebp,esp
 005A8A07    push        ebx
 005A8A08    push        esi
 005A8A09    push        edi
 005A8A0A    mov         esi,ecx
 005A8A0C    mov         edi,edx
 005A8A0E    mov         ebx,eax
 005A8A10    test        esi,esi
>005A8A12    je          005A8A4D
 005A8A14    cmp         dword ptr [ebx+5C],0;TCustomImageList.FHandle:NativeUInt
 005A8A18    setne       al
 005A8A1B    test        al,al
>005A8A1D    je          005A8A4D
 005A8A1F    movzx       eax,byte ptr [ebp+0C]
 005A8A23    mov         eax,dword ptr [eax*4+7A1B4C]
 005A8A2A    movzx       edx,byte ptr [ebp+8]
 005A8A2E    or          eax,dword ptr [edx*4+7A1B5C]
 005A8A35    push        eax
 005A8A36    push        edi
 005A8A37    mov         eax,ebx
 005A8A39    call        TCustomImageList.GetHandle
 005A8A3E    push        eax
 005A8A3F    call        comctl32.ImageList_GetIcon
 005A8A44    mov         edx,eax
 005A8A46    mov         eax,esi
 005A8A48    call        TIcon.SetHandle
 005A8A4D    pop         edi
 005A8A4E    pop         esi
 005A8A4F    pop         ebx
 005A8A50    pop         ebp
 005A8A51    ret         8
*}
end;

//005A8A54
{*function sub_005A8A54:?;
begin
 005A8A54    push        ebx
 005A8A55    mov         ebx,eax
 005A8A57    cmp         dword ptr [ebx+5C],0;TCustomImageList.FHandle:NativeUInt
 005A8A5B    setne       al
 005A8A5E    test        al,al
>005A8A60    je          005A8A71
 005A8A62    mov         eax,ebx
 005A8A64    call        TCustomImageList.GetHandle
 005A8A69    push        eax
 005A8A6A    call        comctl32.ImageList_GetImageCount
 005A8A6F    pop         ebx
 005A8A70    ret
 005A8A71    xor         eax,eax
 005A8A73    pop         ebx
 005A8A74    ret
end;*}

//005A8A78
procedure TCustomImageList.ReplaceMasked(Index:Integer; NewImage:TBitmap; MaskColor:TColor);
begin
{*
 005A8A78    push        ebp
 005A8A79    mov         ebp,esp
 005A8A7B    add         esp,0FFFFFFE8
 005A8A7E    push        ebx
 005A8A7F    push        esi
 005A8A80    xor         ebx,ebx
 005A8A82    mov         dword ptr [ebp-18],ebx
 005A8A85    mov         dword ptr [ebp-14],ebx
 005A8A88    mov         esi,ecx
 005A8A8A    mov         ebx,edx
 005A8A8C    mov         dword ptr [ebp-4],eax
 005A8A8F    xor         eax,eax
 005A8A91    push        ebp
 005A8A92    push        5A8C8D
 005A8A97    push        dword ptr fs:[eax]
 005A8A9A    mov         dword ptr fs:[eax],esp
 005A8A9D    mov         eax,dword ptr [ebp-4]
 005A8AA0    cmp         dword ptr [eax+5C],0;TCustomImageList.FHandle:NativeUInt
 005A8AA4    setne       al
 005A8AA7    test        al,al
>005A8AA9    je          005A8C6A
 005A8AAF    mov         edx,esi
 005A8AB1    mov         eax,dword ptr [ebp-4]
 005A8AB4    call        005A9598
 005A8AB9    mov         ecx,dword ptr [ebp+8]
 005A8ABC    mov         edx,esi
 005A8ABE    mov         eax,dword ptr [ebp-4]
 005A8AC1    call        TCustomImageList.AddMasked
 005A8AC6    mov         dword ptr [ebp-8],eax
 005A8AC9    cmp         dword ptr [ebp-8],0FFFFFFFF
>005A8ACD    je          005A8C49
 005A8AD3    xor         eax,eax
 005A8AD5    push        ebp
 005A8AD6    push        5A8C42
 005A8ADB    push        dword ptr fs:[eax]
 005A8ADE    mov         dword ptr fs:[eax],esp
 005A8AE1    mov         dl,1
 005A8AE3    mov         eax,[004C1D10];TBitmap
 005A8AE8    call        TBitmap.Create;TBitmap.Create
 005A8AED    mov         dword ptr [ebp-0C],eax
 005A8AF0    xor         eax,eax
 005A8AF2    push        ebp
 005A8AF3    push        5A8C22
 005A8AF8    push        dword ptr fs:[eax]
 005A8AFB    mov         dword ptr fs:[eax],esp
 005A8AFE    mov         eax,dword ptr [ebp-4]
 005A8B01    mov         edx,dword ptr [eax+50];TCustomImageList.FHeight:Integer
 005A8B04    mov         eax,dword ptr [ebp-0C]
 005A8B07    mov         ecx,dword ptr [eax]
 005A8B09    call        dword ptr [ecx+38];TBitmap.SetHeight
 005A8B0C    mov         eax,dword ptr [ebp-4]
 005A8B0F    mov         edx,dword ptr [eax+54];TCustomImageList.FWidth:Integer
 005A8B12    mov         eax,dword ptr [ebp-0C]
 005A8B15    mov         ecx,dword ptr [eax]
 005A8B17    call        dword ptr [ecx+44];TBitmap.SetWidth
 005A8B1A    mov         dl,1
 005A8B1C    mov         eax,[004C1D10];TBitmap
 005A8B21    call        TBitmap.Create;TBitmap.Create
 005A8B26    mov         dword ptr [ebp-10],eax
 005A8B29    xor         eax,eax
 005A8B2B    push        ebp
 005A8B2C    push        5A8C05
 005A8B31    push        dword ptr fs:[eax]
 005A8B34    mov         dword ptr fs:[eax],esp
 005A8B37    mov         dl,1
 005A8B39    mov         eax,dword ptr [ebp-10]
 005A8B3C    call        TBitmap.SetMonochrome
 005A8B41    mov         eax,dword ptr [ebp-4]
 005A8B44    mov         edx,dword ptr [eax+50];TCustomImageList.FHeight:Integer
 005A8B47    mov         eax,dword ptr [ebp-10]
 005A8B4A    mov         ecx,dword ptr [eax]
 005A8B4C    call        dword ptr [ecx+38];TBitmap.SetHeight
 005A8B4F    mov         eax,dword ptr [ebp-4]
 005A8B52    mov         edx,dword ptr [eax+54];TCustomImageList.FWidth:Integer
 005A8B55    mov         eax,dword ptr [ebp-10]
 005A8B58    mov         ecx,dword ptr [eax]
 005A8B5A    call        dword ptr [ecx+44];TBitmap.SetWidth
 005A8B5D    push        0
 005A8B5F    push        0
 005A8B61    push        0
 005A8B63    mov         eax,dword ptr [ebp-0C]
 005A8B66    call        TBitmap.GetCanvas
 005A8B6B    call        TCanvas.GetHandle
 005A8B70    push        eax
 005A8B71    mov         eax,dword ptr [ebp-8]
 005A8B74    push        eax
 005A8B75    mov         eax,dword ptr [ebp-4]
 005A8B78    call        TCustomImageList.GetHandle
 005A8B7D    push        eax
 005A8B7E    call        comctl32.ImageList_Draw
 005A8B83    push        10
 005A8B85    push        0
 005A8B87    push        0
 005A8B89    mov         eax,dword ptr [ebp-10]
 005A8B8C    call        TBitmap.GetCanvas
 005A8B91    call        TCanvas.GetHandle
 005A8B96    push        eax
 005A8B97    mov         eax,dword ptr [ebp-8]
 005A8B9A    push        eax
 005A8B9B    mov         eax,dword ptr [ebp-4]
 005A8B9E    call        TCustomImageList.GetHandle
 005A8BA3    push        eax
 005A8BA4    call        comctl32.ImageList_Draw
 005A8BA9    mov         eax,dword ptr [ebp-10]
 005A8BAC    mov         edx,dword ptr [eax]
 005A8BAE    call        dword ptr [edx+70];TBitmap.GetHandle
 005A8BB1    push        eax
 005A8BB2    mov         eax,dword ptr [ebp-0C]
 005A8BB5    mov         edx,dword ptr [eax]
 005A8BB7    call        dword ptr [edx+70];TBitmap.GetHandle
 005A8BBA    push        eax
 005A8BBB    push        ebx
 005A8BBC    mov         eax,dword ptr [ebp-4]
 005A8BBF    call        TCustomImageList.GetHandle
 005A8BC4    push        eax
 005A8BC5    call        comctl32.ImageList_Replace
 005A8BCA    test        eax,eax
>005A8BCC    jne         005A8BEF
 005A8BCE    lea         edx,[ebp-14]
 005A8BD1    mov         eax,[007C4418];^SResString224:TResStringRec
 005A8BD6    call        LoadResString
 005A8BDB    mov         ecx,dword ptr [ebp-14]
 005A8BDE    mov         dl,1
 005A8BE0    mov         eax,[0046BE9C];EInvalidOperation
 005A8BE5    call        Exception.Create;EInvalidOperation.Create
 005A8BEA    call        @RaiseExcept
 005A8BEF    xor         eax,eax
 005A8BF1    pop         edx
 005A8BF2    pop         ecx
 005A8BF3    pop         ecx
 005A8BF4    mov         dword ptr fs:[eax],edx
 005A8BF7    push        5A8C0C
 005A8BFC    mov         eax,dword ptr [ebp-10]
 005A8BFF    call        TObject.Free
 005A8C04    ret
>005A8C05    jmp         @HandleFinally
>005A8C0A    jmp         005A8BFC
 005A8C0C    xor         eax,eax
 005A8C0E    pop         edx
 005A8C0F    pop         ecx
 005A8C10    pop         ecx
 005A8C11    mov         dword ptr fs:[eax],edx
 005A8C14    push        5A8C29
 005A8C19    mov         eax,dword ptr [ebp-0C]
 005A8C1C    call        TObject.Free
 005A8C21    ret
>005A8C22    jmp         @HandleFinally
>005A8C27    jmp         005A8C19
 005A8C29    xor         eax,eax
 005A8C2B    pop         edx
 005A8C2C    pop         ecx
 005A8C2D    pop         ecx
 005A8C2E    mov         dword ptr fs:[eax],edx
 005A8C31    push        5A8C6A
 005A8C36    mov         edx,dword ptr [ebp-8]
 005A8C39    mov         eax,dword ptr [ebp-4]
 005A8C3C    call        TCustomImageList.Delete
 005A8C41    ret
>005A8C42    jmp         @HandleFinally
>005A8C47    jmp         005A8C36
 005A8C49    lea         edx,[ebp-18]
 005A8C4C    mov         eax,[007C4418];^SResString224:TResStringRec
 005A8C51    call        LoadResString
 005A8C56    mov         ecx,dword ptr [ebp-18]
 005A8C59    mov         dl,1
 005A8C5B    mov         eax,[0046BE9C];EInvalidOperation
 005A8C60    call        Exception.Create;EInvalidOperation.Create
 005A8C65    call        @RaiseExcept
 005A8C6A    mov         eax,dword ptr [ebp-4]
 005A8C6D    mov         edx,dword ptr [eax]
 005A8C6F    call        dword ptr [edx+4C];TBaseImageList.Change
 005A8C72    xor         eax,eax
 005A8C74    pop         edx
 005A8C75    pop         ecx
 005A8C76    pop         ecx
 005A8C77    mov         dword ptr fs:[eax],edx
 005A8C7A    push        5A8C94
 005A8C7F    lea         eax,[ebp-18]
 005A8C82    mov         edx,2
 005A8C87    call        @UStrArrayClr
 005A8C8C    ret
>005A8C8D    jmp         @HandleFinally
>005A8C92    jmp         005A8C7F
 005A8C94    pop         esi
 005A8C95    pop         ebx
 005A8C96    mov         esp,ebp
 005A8C98    pop         ebp
 005A8C99    ret         4
*}
end;

//005A8C9C
procedure TCustomImageList.Delete(Index:Integer);
begin
{*
 005A8C9C    push        ebp
 005A8C9D    mov         ebp,esp
 005A8C9F    push        0
 005A8CA1    push        ebx
 005A8CA2    push        esi
 005A8CA3    mov         esi,edx
 005A8CA5    mov         ebx,eax
 005A8CA7    xor         eax,eax
 005A8CA9    push        ebp
 005A8CAA    push        5A8D17
 005A8CAF    push        dword ptr fs:[eax]
 005A8CB2    mov         dword ptr fs:[eax],esp
 005A8CB5    mov         eax,ebx
 005A8CB7    mov         edx,dword ptr [eax]
 005A8CB9    call        dword ptr [edx+48]
 005A8CBC    cmp         esi,eax
>005A8CBE    jl          005A8CE1
 005A8CC0    lea         edx,[ebp-4]
 005A8CC3    mov         eax,[007C450C];^SResString225:TResStringRec
 005A8CC8    call        LoadResString
 005A8CCD    mov         ecx,dword ptr [ebp-4]
 005A8CD0    mov         dl,1
 005A8CD2    mov         eax,[0046BE9C];EInvalidOperation
 005A8CD7    call        Exception.Create
 005A8CDC    call        @RaiseExcept
 005A8CE1    cmp         dword ptr [ebx+5C],0
 005A8CE5    setne       al
 005A8CE8    test        al,al
>005A8CEA    je          005A8CFA
 005A8CEC    push        esi
 005A8CED    mov         eax,ebx
 005A8CEF    call        TCustomImageList.GetHandle
 005A8CF4    push        eax
 005A8CF5    call        comctl32.ImageList_Remove
 005A8CFA    mov         eax,ebx
 005A8CFC    mov         edx,dword ptr [eax]
 005A8CFE    call        dword ptr [edx+4C]
 005A8D01    xor         eax,eax
 005A8D03    pop         edx
 005A8D04    pop         ecx
 005A8D05    pop         ecx
 005A8D06    mov         dword ptr fs:[eax],edx
 005A8D09    push        5A8D1E
 005A8D0E    lea         eax,[ebp-4]
 005A8D11    call        @UStrClr
 005A8D16    ret
>005A8D17    jmp         @HandleFinally
>005A8D1C    jmp         005A8D0E
 005A8D1E    pop         esi
 005A8D1F    pop         ebx
 005A8D20    pop         ecx
 005A8D21    pop         ebp
 005A8D22    ret
*}
end;

//005A8D24
procedure TCustomImageList.Clear;
begin
{*
 005A8D24    or          edx,0FFFFFFFF
 005A8D27    call        TCustomImageList.Delete
 005A8D2C    ret
*}
end;

//005A8D30
procedure TImageList.SetBkColor(Value:TColor);
begin
{*
 005A8D30    push        ebx
 005A8D31    push        esi
 005A8D32    push        edi
 005A8D33    mov         esi,edx
 005A8D35    mov         ebx,eax
 005A8D37    mov         edi,dword ptr [ebx+5C];TImageList.FHandle:NativeUInt
 005A8D3A    test        edi,edi
 005A8D3C    setne       al
 005A8D3F    test        al,al
>005A8D41    je          005A8D53
 005A8D43    mov         eax,esi
 005A8D45    call        GetRGBColor
 005A8D4A    push        eax
 005A8D4B    push        edi
 005A8D4C    call        comctl32.ImageList_SetBkColor
>005A8D51    jmp         005A8D56
 005A8D53    mov         dword ptr [ebx+64],esi;TImageList.FBkColor:TColor
 005A8D56    mov         eax,ebx
 005A8D58    mov         edx,dword ptr [eax]
 005A8D5A    call        dword ptr [edx+4C];TBaseImageList.Change
 005A8D5D    pop         edi
 005A8D5E    pop         esi
 005A8D5F    pop         ebx
 005A8D60    ret
*}
end;

//005A8D64
procedure TImageList.SetColorDepth(Value:TColorDepth);
begin
{*
 005A8D64    push        ebp
 005A8D65    mov         ebp,esp
 005A8D67    push        ecx
 005A8D68    push        ebx
 005A8D69    mov         ebx,edx
 005A8D6B    mov         dword ptr [ebp-4],eax
 005A8D6E    mov         eax,dword ptr [ebp-4]
 005A8D71    cmp         bl,byte ptr [eax+90];TImageList.FColorDepth:TColorDepth
>005A8D77    je          005A8DC5
 005A8D79    mov         eax,dword ptr [ebp-4]
 005A8D7C    call        TCustomImageList.BeginUpdate
 005A8D81    xor         eax,eax
 005A8D83    push        ebp
 005A8D84    push        5A8DBE
 005A8D89    push        dword ptr fs:[eax]
 005A8D8C    mov         dword ptr fs:[eax],esp
 005A8D8F    mov         eax,dword ptr [ebp-4]
 005A8D92    call        005A8734
 005A8D97    mov         eax,dword ptr [ebp-4]
 005A8D9A    mov         byte ptr [eax+90],bl;TImageList.FColorDepth:TColorDepth
 005A8DA0    mov         eax,dword ptr [ebp-4]
 005A8DA3    call        005A8764
 005A8DA8    xor         eax,eax
 005A8DAA    pop         edx
 005A8DAB    pop         ecx
 005A8DAC    pop         ecx
 005A8DAD    mov         dword ptr fs:[eax],edx
 005A8DB0    push        5A8DC5
 005A8DB5    mov         eax,dword ptr [ebp-4]
 005A8DB8    call        TCustomImageList.EndUpdate
 005A8DBD    ret
>005A8DBE    jmp         @HandleFinally
>005A8DC3    jmp         005A8DB5
 005A8DC5    pop         ebx
 005A8DC6    pop         ecx
 005A8DC7    pop         ebp
 005A8DC8    ret
*}
end;

//005A8DCC
procedure TCustomImageList.SetSize(AWidth:Integer; AHeight:Integer);
begin
{*
 005A8DCC    push        ebx
 005A8DCD    push        esi
 005A8DCE    mov         ebx,eax
 005A8DD0    cmp         ecx,dword ptr [ebx+50];TCustomImageList.FHeight:Integer
>005A8DD3    jne         005A8DDA
 005A8DD5    cmp         edx,dword ptr [ebx+54];TCustomImageList.FWidth:Integer
>005A8DD8    je          005A8E0E
 005A8DDA    mov         dword ptr [ebx+50],ecx;TCustomImageList.FHeight:Integer
 005A8DDD    mov         esi,edx
 005A8DDF    mov         dword ptr [ebx+54],esi;TCustomImageList.FWidth:Integer
 005A8DE2    mov         eax,dword ptr [ebx+5C];TCustomImageList.FHandle:NativeUInt
 005A8DE5    test        eax,eax
 005A8DE7    setne       dl
 005A8DEA    test        dl,dl
>005A8DEC    je          005A8DF9
 005A8DEE    mov         edx,dword ptr [ebx+50];TCustomImageList.FHeight:Integer
 005A8DF1    push        edx
 005A8DF2    push        esi
 005A8DF3    push        eax
 005A8DF4    call        comctl32.ImageList_SetIconSize
 005A8DF9    mov         eax,ebx
 005A8DFB    call        TCustomImageList.Clear
 005A8E00    mov         eax,ebx
 005A8E02    call        005A84B8
 005A8E07    mov         eax,ebx
 005A8E09    mov         edx,dword ptr [eax]
 005A8E0B    call        dword ptr [edx+4C];TBaseImageList.Change
 005A8E0E    pop         esi
 005A8E0F    pop         ebx
 005A8E10    ret
*}
end;

//005A8E14
{*function TImageList.GetBkColor:?;
begin
 005A8E14    push        ebx
 005A8E15    mov         ebx,eax
 005A8E17    cmp         dword ptr [ebx+5C],0;TImageList.FHandle:NativeUInt
 005A8E1B    setne       al
 005A8E1E    test        al,al
>005A8E20    je          005A8E36
 005A8E22    mov         eax,ebx
 005A8E24    call        TCustomImageList.GetHandle
 005A8E29    push        eax
 005A8E2A    call        comctl32.ImageList_GetBkColor
 005A8E2F    call        GetColor
 005A8E34    pop         ebx
 005A8E35    ret
 005A8E36    mov         eax,dword ptr [ebx+64];TImageList.FBkColor:TColor
 005A8E39    pop         ebx
 005A8E3A    ret
end;*}

//005A8E3C
{*procedure sub_005A8E3C(?:TBitmap; ?:?);
begin
 005A8E3C    push        ebp
 005A8E3D    mov         ebp,esp
 005A8E3F    add         esp,0FFFFFFF4
 005A8E42    push        ebx
 005A8E43    push        esi
 005A8E44    push        edi
 005A8E45    mov         dword ptr [ebp-4],eax
 005A8E48    mov         eax,dword ptr [ebp-4]
 005A8E4B    mov         edx,dword ptr [eax]
 005A8E4D    call        dword ptr [edx+24]
 005A8E50    mov         edi,eax
 005A8E52    dec         edi
 005A8E53    test        edi,edi
>005A8E55    jl          005A8EEE
 005A8E5B    inc         edi
 005A8E5C    mov         dword ptr [ebp-8],0
 005A8E63    mov         edx,dword ptr [ebp-8]
 005A8E66    mov         eax,dword ptr [ebp-4]
 005A8E69    call        TBitmap.GetScanline
 005A8E6E    mov         ebx,eax
 005A8E70    mov         eax,dword ptr [ebp-4]
 005A8E73    mov         edx,dword ptr [eax]
 005A8E75    call        dword ptr [edx+30]
 005A8E78    mov         esi,eax
 005A8E7A    dec         esi
 005A8E7B    test        esi,esi
>005A8E7D    jl          005A8EE4
 005A8E7F    inc         esi
 005A8E80    movzx       eax,byte ptr [ebx+2]
 005A8E84    mov         dword ptr [ebp-0C],eax
 005A8E87    fild        dword ptr [ebp-0C]
 005A8E8A    fld         tbyte ptr ds:[5A8EF8];0,299:Extended
 005A8E90    fmulp       st(1),st
 005A8E92    movzx       eax,byte ptr [ebx+1]
 005A8E96    mov         dword ptr [ebp-0C],eax
 005A8E99    fild        dword ptr [ebp-0C]
 005A8E9C    fld         tbyte ptr ds:[5A8F04];0,587:Extended
 005A8EA2    fmulp       st(1),st
 005A8EA4    faddp       st(1),st
 005A8EA6    movzx       eax,byte ptr [ebx]
 005A8EA9    mov         dword ptr [ebp-0C],eax
 005A8EAC    fild        dword ptr [ebp-0C]
 005A8EAF    fld         tbyte ptr ds:[5A8F10];0,114:Extended
 005A8EB5    fmulp       st(1),st
 005A8EB7    faddp       st(1),st
 005A8EB9    mov         eax,dword ptr [ebp+8]
 005A8EBC    mov         eax,dword ptr [eax-4]
 005A8EBF    movzx       eax,byte ptr [eax+6C]
 005A8EC3    mov         dword ptr [ebp-0C],eax
 005A8EC6    fild        dword ptr [ebp-0C]
 005A8EC9    fdiv        dword ptr ds:[5A8F1C];255:Single
 005A8ECF    fmulp       st(1),st
 005A8ED1    call        @ROUND
 005A8ED6    mov         byte ptr [ebx+2],al
 005A8ED9    mov         byte ptr [ebx+1],al
 005A8EDC    mov         byte ptr [ebx],al
 005A8EDE    add         ebx,4
 005A8EE1    dec         esi
>005A8EE2    jne         005A8E80
 005A8EE4    inc         dword ptr [ebp-8]
 005A8EE7    dec         edi
>005A8EE8    jne         005A8E63
 005A8EEE    pop         edi
 005A8EEF    pop         esi
 005A8EF0    pop         ebx
 005A8EF1    mov         esp,ebp
 005A8EF3    pop         ebp
 005A8EF4    ret
end;*}

//005A8F20
{*procedure sub_005A8F20(?:?; ?:?; ?:?; ?:?; ?:?; ?:?);
begin
 005A8F20    push        ebp
 005A8F21    mov         ebp,esp
 005A8F23    add         esp,0FFFFFFDC
 005A8F26    push        ebx
 005A8F27    push        esi
 005A8F28    push        edi
 005A8F29    mov         esi,ecx
 005A8F2B    mov         ebx,edx
 005A8F2D    mov         dword ptr [ebp-4],eax
 005A8F30    mov         eax,dword ptr [ebp-4]
 005A8F33    cmp         dword ptr [eax+5C],0;TCustomImageList.FHandle:NativeUInt
 005A8F37    setne       al
 005A8F3A    test        al,al
>005A8F3C    je          005A921A
 005A8F42    cmp         byte ptr [ebp+8],0
>005A8F46    je          005A8F8E
 005A8F48    mov         eax,dword ptr [ebp+0C]
 005A8F4B    push        eax
 005A8F4C    mov         eax,dword ptr [ebp-4]
 005A8F4F    mov         eax,dword ptr [eax+68];TCustomImageList.FBlendColor:TColor
 005A8F52    call        GetRGBColor
 005A8F57    push        eax
 005A8F58    mov         eax,dword ptr [ebp-4]
 005A8F5B    call        TImageList.GetBkColor
 005A8F60    call        GetRGBColor
 005A8F65    push        eax
 005A8F66    push        0
 005A8F68    push        0
 005A8F6A    mov         eax,dword ptr [ebp+10]
 005A8F6D    push        eax
 005A8F6E    mov         eax,dword ptr [ebp+14]
 005A8F71    push        eax
 005A8F72    mov         eax,esi
 005A8F74    call        TCanvas.GetHandle
 005A8F79    push        eax
 005A8F7A    push        ebx
 005A8F7B    mov         eax,dword ptr [ebp-4]
 005A8F7E    call        TCustomImageList.GetHandle
 005A8F83    push        eax
 005A8F84    call        comctl32.ImageList_DrawEx
>005A8F89    jmp         005A921A
 005A8F8E    mov         eax,dword ptr [ebp-4]
 005A8F91    cmp         byte ptr [eax+6C],0;TCustomImageList.FGrayscaleFactor:Byte
>005A8F95    je          005A9091
 005A8F9B    mov         eax,dword ptr [ebp-4]
 005A8F9E    cmp         dword ptr [eax+78],0;TCustomImageList.FGrayscaleBitmap:TBitmap
>005A8FA2    jne         005A8FF1
 005A8FA4    mov         dl,1
 005A8FA6    mov         eax,[004C1D10];TBitmap
 005A8FAB    call        TBitmap.Create;TBitmap.Create
 005A8FB0    mov         edi,eax
 005A8FB2    mov         eax,dword ptr [ebp-4]
 005A8FB5    mov         dword ptr [eax+78],edi;TCustomImageList.FGrayscaleBitmap:TBitmap
 005A8FB8    mov         dl,7
 005A8FBA    mov         eax,edi
 005A8FBC    call        TBitmap.SetPixelFormat
 005A8FC1    mov         eax,dword ptr [ebp-4]
 005A8FC4    mov         edx,dword ptr [eax+54];TCustomImageList.FWidth:Integer
 005A8FC7    mov         eax,edi
 005A8FC9    mov         ecx,dword ptr [eax]
 005A8FCB    call        dword ptr [ecx+44];TBitmap.SetWidth
 005A8FCE    mov         eax,dword ptr [ebp-4]
 005A8FD1    mov         edx,dword ptr [eax+50];TCustomImageList.FHeight:Integer
 005A8FD4    mov         eax,edi
 005A8FD6    mov         ecx,dword ptr [eax]
 005A8FD8    call        dword ptr [ecx+38];TBitmap.SetHeight
 005A8FDB    xor         edx,edx
 005A8FDD    mov         eax,edi
 005A8FDF    mov         ecx,dword ptr [eax]
 005A8FE1    call        dword ptr [ecx+78];TBitmap.SetHandleType
 005A8FE4    mov         byte ptr [edi+30],1;TBitmap.FIgnorePalette:Boolean
 005A8FE8    mov         dl,2
 005A8FEA    mov         eax,edi
 005A8FEC    call        TBitmap.SetAlphaFormat
 005A8FF1    mov         eax,dword ptr [ebp-4]
 005A8FF4    mov         edi,dword ptr [eax+78];TCustomImageList.FGrayscaleBitmap:TBitmap
 005A8FF7    mov         eax,edi
 005A8FF9    mov         edx,dword ptr [eax]
 005A8FFB    call        dword ptr [edx+24];TBitmap.GetHeight
 005A8FFE    mov         edx,eax
 005A9000    dec         edx
 005A9001    mov         eax,edi
 005A9003    call        TBitmap.GetScanline
 005A9008    mov         edi,eax
 005A900A    mov         eax,dword ptr [ebp-4]
 005A900D    mov         eax,dword ptr [eax+78];TCustomImageList.FGrayscaleBitmap:TBitmap
 005A9010    mov         edx,dword ptr [eax]
 005A9012    call        dword ptr [edx+30];TBitmap.GetWidth
 005A9015    mov         ecx,20
 005A901A    mov         edx,20
 005A901F    call        BytesPerScanline
 005A9024    push        eax
 005A9025    mov         eax,dword ptr [ebp-4]
 005A9028    mov         eax,dword ptr [eax+78];TCustomImageList.FGrayscaleBitmap:TBitmap
 005A902B    mov         edx,dword ptr [eax]
 005A902D    call        dword ptr [edx+24];TBitmap.GetHeight
 005A9030    pop         edx
 005A9031    imul        edx,eax
 005A9034    mov         eax,edi
 005A9036    xor         ecx,ecx
 005A9038    call        @FillChar
 005A903D    push        1
 005A903F    push        0FF
 005A9041    push        0FF
 005A9043    push        0
 005A9045    push        0
 005A9047    push        0
 005A9049    push        0
 005A904B    mov         eax,dword ptr [ebp-4]
 005A904E    mov         eax,dword ptr [eax+78];TCustomImageList.FGrayscaleBitmap:TBitmap
 005A9051    call        TBitmap.GetCanvas
 005A9056    call        TCanvas.GetHandle
 005A905B    push        eax
 005A905C    push        ebx
 005A905D    mov         eax,dword ptr [ebp-4]
 005A9060    call        TCustomImageList.GetHandle
 005A9065    push        eax
 005A9066    call        comctl32.ImageList_DrawEx
 005A906B    push        ebp
 005A906C    mov         eax,dword ptr [ebp-4]
 005A906F    mov         eax,dword ptr [eax+78];TCustomImageList.FGrayscaleBitmap:TBitmap
 005A9072    call        005A8E3C
 005A9077    pop         ecx
 005A9078    mov         eax,dword ptr [ebp-4]
 005A907B    mov         eax,dword ptr [eax+78];TCustomImageList.FGrayscaleBitmap:TBitmap
 005A907E    push        eax
 005A907F    mov         ecx,dword ptr [ebp+10]
 005A9082    mov         edx,dword ptr [ebp+14]
 005A9085    mov         eax,esi
 005A9087    mov         ebx,dword ptr [eax]
 005A9089    call        dword ptr [ebx+44]
>005A908C    jmp         005A921A
 005A9091    mov         eax,dword ptr [ebp-4]
 005A9094    cmp         dword ptr [eax+74],0;TCustomImageList.FMonoBitmap:TBitmap
>005A9098    jne         005A90D1
 005A909A    mov         dl,1
 005A909C    mov         eax,[004C1D10];TBitmap
 005A90A1    call        TBitmap.Create;TBitmap.Create
 005A90A6    mov         edi,eax
 005A90A8    mov         eax,dword ptr [ebp-4]
 005A90AB    mov         dword ptr [eax+74],edi;TCustomImageList.FMonoBitmap:TBitmap
 005A90AE    mov         dl,1
 005A90B0    mov         eax,edi
 005A90B2    call        TBitmap.SetMonochrome
 005A90B7    mov         eax,dword ptr [ebp-4]
 005A90BA    mov         edx,dword ptr [eax+54];TCustomImageList.FWidth:Integer
 005A90BD    mov         eax,edi
 005A90BF    mov         ecx,dword ptr [eax]
 005A90C1    call        dword ptr [ecx+44];TBitmap.SetWidth
 005A90C4    mov         eax,dword ptr [ebp-4]
 005A90C7    mov         edx,dword ptr [eax+50];TCustomImageList.FHeight:Integer
 005A90CA    mov         eax,edi
 005A90CC    mov         ecx,dword ptr [eax]
 005A90CE    call        dword ptr [ecx+38];TBitmap.SetHeight
 005A90D1    mov         eax,dword ptr [ebp-4]
 005A90D4    mov         eax,dword ptr [eax+74];TCustomImageList.FMonoBitmap:TBitmap
 005A90D7    call        TBitmap.GetCanvas
 005A90DC    mov         eax,dword ptr [eax+48];TCanvas.FBrush:TBrush
 005A90DF    mov         edx,0FFFFFF
 005A90E4    call        TBrush.SetColor
 005A90E9    mov         eax,dword ptr [ebp-4]
 005A90EC    mov         eax,dword ptr [eax+50];TCustomImageList.FHeight:Integer
 005A90EF    push        eax
 005A90F0    lea         eax,[ebp-24]
 005A90F3    push        eax
 005A90F4    mov         eax,dword ptr [ebp-4]
 005A90F7    mov         ecx,dword ptr [eax+54];TCustomImageList.FWidth:Integer
 005A90FA    xor         edx,edx
 005A90FC    xor         eax,eax
 005A90FE    call        Rect
 005A9103    lea         eax,[ebp-24]
 005A9106    push        eax
 005A9107    mov         eax,dword ptr [ebp-4]
 005A910A    mov         eax,dword ptr [eax+74];TCustomImageList.FMonoBitmap:TBitmap
 005A910D    call        TBitmap.GetCanvas
 005A9112    pop         edx
 005A9113    mov         ecx,dword ptr [eax]
 005A9115    call        dword ptr [ecx+54];TCanvas.FillRect
 005A9118    push        0
 005A911A    push        0
 005A911C    push        0FF
 005A911E    push        0
 005A9120    push        0
 005A9122    push        0
 005A9124    push        0
 005A9126    mov         eax,dword ptr [ebp-4]
 005A9129    mov         eax,dword ptr [eax+74];TCustomImageList.FMonoBitmap:TBitmap
 005A912C    call        TBitmap.GetCanvas
 005A9131    call        TCanvas.GetHandle
 005A9136    push        eax
 005A9137    push        ebx
 005A9138    mov         eax,dword ptr [ebp-4]
 005A913B    call        TCustomImageList.GetHandle
 005A9140    push        eax
 005A9141    call        comctl32.ImageList_DrawEx
 005A9146    mov         eax,dword ptr [ebp-4]
 005A9149    mov         eax,dword ptr [eax+50];TCustomImageList.FHeight:Integer
 005A914C    add         eax,dword ptr [ebp+10]
 005A914F    push        eax
 005A9150    lea         eax,[ebp-14]
 005A9153    push        eax
 005A9154    mov         eax,dword ptr [ebp-4]
 005A9157    mov         ecx,dword ptr [eax+54];TCustomImageList.FWidth:Integer
 005A915A    add         ecx,dword ptr [ebp+14]
 005A915D    mov         edx,dword ptr [ebp+10]
 005A9160    mov         eax,dword ptr [ebp+14]
 005A9163    call        Rect
 005A9168    mov         eax,dword ptr [ebp-4]
 005A916B    mov         eax,dword ptr [eax+74];TCustomImageList.FMonoBitmap:TBitmap
 005A916E    call        TBitmap.GetCanvas
 005A9173    call        TCanvas.GetHandle
 005A9178    mov         edi,eax
 005A917A    mov         edx,0FF000014
 005A917F    mov         eax,dword ptr [esi+48]
 005A9182    call        TBrush.SetColor
 005A9187    mov         eax,esi
 005A9189    call        TCanvas.GetHandle
 005A918E    mov         ebx,eax
 005A9190    push        0FFFFFF
 005A9195    push        ebx
 005A9196    call        gdi32.SetTextColor
 005A919B    push        0
 005A919D    push        ebx
 005A919E    call        gdi32.SetBkColor
 005A91A3    push        0E20746
 005A91A8    push        0
 005A91AA    push        0
 005A91AC    push        edi
 005A91AD    mov         eax,dword ptr [ebp-4]
 005A91B0    mov         eax,dword ptr [eax+50];TCustomImageList.FHeight:Integer
 005A91B3    push        eax
 005A91B4    mov         eax,dword ptr [ebp-4]
 005A91B7    mov         eax,dword ptr [eax+54];TCustomImageList.FWidth:Integer
 005A91BA    push        eax
 005A91BB    mov         eax,dword ptr [ebp+10]
 005A91BE    inc         eax
 005A91BF    push        eax
 005A91C0    mov         eax,dword ptr [ebp+14]
 005A91C3    inc         eax
 005A91C4    push        eax
 005A91C5    push        ebx
 005A91C6    call        gdi32.BitBlt
 005A91CB    mov         edx,0FF000010
 005A91D0    mov         eax,dword ptr [esi+48]
 005A91D3    call        TBrush.SetColor
 005A91D8    mov         eax,esi
 005A91DA    call        TCanvas.GetHandle
 005A91DF    mov         ebx,eax
 005A91E1    push        0FFFFFF
 005A91E6    push        ebx
 005A91E7    call        gdi32.SetTextColor
 005A91EC    push        0
 005A91EE    push        ebx
 005A91EF    call        gdi32.SetBkColor
 005A91F4    push        0E20746
 005A91F9    push        0
 005A91FB    push        0
 005A91FD    push        edi
 005A91FE    mov         eax,dword ptr [ebp-4]
 005A9201    mov         eax,dword ptr [eax+50];TCustomImageList.FHeight:Integer
 005A9204    push        eax
 005A9205    mov         eax,dword ptr [ebp-4]
 005A9208    mov         eax,dword ptr [eax+54];TCustomImageList.FWidth:Integer
 005A920B    push        eax
 005A920C    mov         eax,dword ptr [ebp+10]
 005A920F    push        eax
 005A9210    mov         eax,dword ptr [ebp+14]
 005A9213    push        eax
 005A9214    push        ebx
 005A9215    call        gdi32.BitBlt
 005A921A    pop         edi
 005A921B    pop         esi
 005A921C    pop         ebx
 005A921D    mov         esp,ebp
 005A921F    pop         ebp
 005A9220    ret         10
end;*}

//005A9224
procedure TCustomImageList.Draw(Canvas:TCanvas; X:Integer; Enabled:Boolean; Index:Integer; Y:Integer);
begin
{*
 005A9224    push        ebp
 005A9225    mov         ebp,esp
 005A9227    push        ebx
 005A9228    mov         ebx,dword ptr [ebp+10]
 005A922B    push        ebx
 005A922C    mov         ebx,dword ptr [ebp+0C]
 005A922F    push        ebx
 005A9230    movzx       ebx,byte ptr [eax+60];TCustomImageList.FDrawingStyle:TDrawingStyle
 005A9234    push        ebx
 005A9235    movzx       ebx,byte ptr [eax+63];TCustomImageList.FImageType:TImageType
 005A9239    push        ebx
 005A923A    movzx       ebx,byte ptr [ebp+8]
 005A923E    push        ebx
 005A923F    call        TCustomImageList.Draw
 005A9244    pop         ebx
 005A9245    pop         ebp
 005A9246    ret         0C
*}
end;

//005A924C
procedure TCustomImageList.Draw(Canvas:TCanvas; X:Integer; Enabled:Boolean; AImageType:TImageType; ADrawingStyle:TDrawingStyle; Index:Integer; Y:Integer);
begin
{*
 005A924C    push        ebp
 005A924D    mov         ebp,esp
 005A924F    push        ebx
 005A9250    push        esi
 005A9251    mov         esi,eax
 005A9253    cmp         dword ptr [esi+5C],0;TCustomImageList.FHandle:NativeUInt
 005A9257    setne       al
 005A925A    test        al,al
>005A925C    je          005A928B
 005A925E    push        ecx
 005A925F    mov         eax,dword ptr [ebp+18]
 005A9262    push        eax
 005A9263    movzx       eax,byte ptr [ebp+10]
 005A9267    mov         eax,dword ptr [eax*4+7A1B4C]
 005A926E    movzx       ecx,byte ptr [ebp+0C]
 005A9272    or          eax,dword ptr [ecx*4+7A1B5C]
 005A9279    push        eax
 005A927A    movzx       eax,byte ptr [ebp+8]
 005A927E    push        eax
 005A927F    mov         eax,esi
 005A9281    mov         ecx,dword ptr [ebp+14]
 005A9284    xchg        ecx,edx
 005A9286    mov         ebx,dword ptr [eax]
 005A9288    call        dword ptr [ebx+50];TCustomImageList.sub_005A8F20
 005A928B    pop         esi
 005A928C    pop         ebx
 005A928D    pop         ebp
 005A928E    ret         14
*}
end;

//005A9294
procedure sub_005A9294(?:TCustomImageList; ?:HIMAGELIST; ?:Integer);
begin
{*
 005A9294    push        ebp
 005A9295    mov         ebp,esp
 005A9297    add         esp,0FFFFFFDC
 005A929A    push        ebx
 005A929B    push        esi
 005A929C    push        edi
 005A929D    mov         dword ptr [ebp-0C],ecx
 005A92A0    mov         dword ptr [ebp-8],edx
 005A92A3    mov         dword ptr [ebp-4],eax
 005A92A6    mov         eax,dword ptr [ebp-4]
 005A92A9    mov         eax,dword ptr [eax+50]
 005A92AC    push        eax
 005A92AD    lea         eax,[ebp-24]
 005A92B0    push        eax
 005A92B1    mov         eax,dword ptr [ebp-4]
 005A92B4    mov         ecx,dword ptr [eax+54]
 005A92B7    xor         edx,edx
 005A92B9    xor         eax,eax
 005A92BB    call        Rect
 005A92C0    mov         eax,dword ptr [ebp-4]
 005A92C3    call        TCustomImageList.BeginUpdate
 005A92C8    xor         eax,eax
 005A92CA    push        ebp
 005A92CB    push        5A943B
 005A92D0    push        dword ptr fs:[eax]
 005A92D3    mov         dword ptr fs:[eax],esp
 005A92D6    mov         dl,1
 005A92D8    mov         eax,[004C1D10];TBitmap
 005A92DD    call        TBitmap.Create;TBitmap.Create
 005A92E2    mov         dword ptr [ebp-10],eax
 005A92E5    xor         eax,eax
 005A92E7    push        ebp
 005A92E8    push        5A941E
 005A92ED    push        dword ptr fs:[eax]
 005A92F0    mov         dword ptr fs:[eax],esp
 005A92F3    mov         eax,dword ptr [ebp-4]
 005A92F6    movzx       eax,byte ptr [eax+90]
 005A92FD    movzx       edx,byte ptr [eax+7A1B80]
 005A9304    mov         eax,dword ptr [ebp-10]
 005A9307    call        TBitmap.SetPixelFormat
 005A930C    mov         eax,dword ptr [ebp-4]
 005A930F    mov         ecx,dword ptr [eax+50]
 005A9312    mov         eax,dword ptr [ebp-4]
 005A9315    mov         edx,dword ptr [eax+54]
 005A9318    mov         eax,dword ptr [ebp-10]
 005A931B    mov         ebx,dword ptr [eax]
 005A931D    call        dword ptr [ebx+6C];TBitmap.SetSize
 005A9320    mov         dl,1
 005A9322    mov         eax,[004C1D10];TBitmap
 005A9327    call        TBitmap.Create;TBitmap.Create
 005A932C    mov         dword ptr [ebp-14],eax
 005A932F    xor         eax,eax
 005A9331    push        ebp
 005A9332    push        5A9401
 005A9337    push        dword ptr fs:[eax]
 005A933A    mov         dword ptr fs:[eax],esp
 005A933D    mov         dl,1
 005A933F    mov         eax,dword ptr [ebp-14]
 005A9342    call        TBitmap.SetMonochrome
 005A9347    mov         eax,dword ptr [ebp-4]
 005A934A    mov         edx,dword ptr [eax+50]
 005A934D    mov         eax,dword ptr [ebp-14]
 005A9350    mov         ecx,dword ptr [eax]
 005A9352    call        dword ptr [ecx+38];TBitmap.SetHeight
 005A9355    mov         eax,dword ptr [ebp-4]
 005A9358    mov         edx,dword ptr [eax+54]
 005A935B    mov         eax,dword ptr [ebp-14]
 005A935E    mov         ecx,dword ptr [eax]
 005A9360    call        dword ptr [ecx+44];TBitmap.SetWidth
 005A9363    mov         eax,dword ptr [ebp-8]
 005A9366    push        eax
 005A9367    call        comctl32.ImageList_GetImageCount
 005A936C    mov         esi,eax
 005A936E    dec         esi
 005A936F    test        esi,esi
>005A9371    jl          005A93EB
 005A9373    inc         esi
 005A9374    xor         ebx,ebx
 005A9376    cmp         dword ptr [ebp-0C],0FFFFFFFF
>005A937A    je          005A9381
 005A937C    cmp         ebx,dword ptr [ebp-0C]
>005A937F    jne         005A93E7
 005A9381    mov         eax,dword ptr [ebp-10]
 005A9384    call        TBitmap.GetCanvas
 005A9389    mov         edi,eax
 005A938B    lea         edx,[ebp-24]
 005A938E    mov         eax,edi
 005A9390    mov         ecx,dword ptr [eax]
 005A9392    call        dword ptr [ecx+54];TCanvas.FillRect
 005A9395    push        0
 005A9397    push        0
 005A9399    push        0
 005A939B    mov         eax,edi
 005A939D    call        TCanvas.GetHandle
 005A93A2    push        eax
 005A93A3    push        ebx
 005A93A4    mov         eax,dword ptr [ebp-8]
 005A93A7    push        eax
 005A93A8    call        comctl32.ImageList_Draw
 005A93AD    mov         eax,dword ptr [ebp-14]
 005A93B0    call        TBitmap.GetCanvas
 005A93B5    mov         edi,eax
 005A93B7    lea         edx,[ebp-24]
 005A93BA    mov         eax,edi
 005A93BC    mov         ecx,dword ptr [eax]
 005A93BE    call        dword ptr [ecx+54];TCanvas.FillRect
 005A93C1    push        10
 005A93C3    push        0
 005A93C5    push        0
 005A93C7    mov         eax,edi
 005A93C9    call        TCanvas.GetHandle
 005A93CE    push        eax
 005A93CF    push        ebx
 005A93D0    mov         eax,dword ptr [ebp-8]
 005A93D3    push        eax
 005A93D4    call        comctl32.ImageList_Draw
 005A93D9    mov         ecx,dword ptr [ebp-14]
 005A93DC    mov         edx,dword ptr [ebp-10]
 005A93DF    mov         eax,dword ptr [ebp-4]
 005A93E2    call        TCustomImageList.Add
 005A93E7    inc         ebx
 005A93E8    dec         esi
>005A93E9    jne         005A9376
 005A93EB    xor         eax,eax
 005A93ED    pop         edx
 005A93EE    pop         ecx
 005A93EF    pop         ecx
 005A93F0    mov         dword ptr fs:[eax],edx
 005A93F3    push        5A9408
 005A93F8    mov         eax,dword ptr [ebp-14]
 005A93FB    call        TObject.Free
 005A9400    ret
>005A9401    jmp         @HandleFinally
>005A9406    jmp         005A93F8
 005A9408    xor         eax,eax
 005A940A    pop         edx
 005A940B    pop         ecx
 005A940C    pop         ecx
 005A940D    mov         dword ptr fs:[eax],edx
 005A9410    push        5A9425
 005A9415    mov         eax,dword ptr [ebp-10]
 005A9418    call        TObject.Free
 005A941D    ret
>005A941E    jmp         @HandleFinally
>005A9423    jmp         005A9415
 005A9425    xor         eax,eax
 005A9427    pop         edx
 005A9428    pop         ecx
 005A9429    pop         ecx
 005A942A    mov         dword ptr fs:[eax],edx
 005A942D    push        5A9442
 005A9432    mov         eax,dword ptr [ebp-4]
 005A9435    call        TCustomImageList.EndUpdate
 005A943A    ret
>005A943B    jmp         @HandleFinally
>005A9440    jmp         005A9432
 005A9442    pop         edi
 005A9443    pop         esi
 005A9444    pop         ebx
 005A9445    mov         esp,ebp
 005A9447    pop         ebp
 005A9448    ret
*}
end;

//005A944C
function TCustomImageList.AddImage(Value:TCustomImageList; Index:Integer):Integer;
begin
{*
 005A944C    push        ebx
 005A944D    push        esi
 005A944E    push        edi
 005A944F    push        ebp
 005A9450    mov         ebp,ecx
 005A9452    mov         esi,edx
 005A9454    mov         ebx,eax
 005A9456    test        esi,esi
>005A9458    je          005A9477
 005A945A    mov         eax,ebx
 005A945C    mov         edx,dword ptr [eax]
 005A945E    call        dword ptr [edx+48];TCustomImageList.sub_005A8A54
 005A9461    mov         edi,eax
 005A9463    mov         eax,esi
 005A9465    call        TCustomImageList.GetHandle
 005A946A    mov         edx,eax
 005A946C    mov         ecx,ebp
 005A946E    mov         eax,ebx
 005A9470    call        005A9294
>005A9475    jmp         005A947A
 005A9477    or          edi,0FFFFFFFF
 005A947A    mov         eax,edi
 005A947C    pop         ebp
 005A947D    pop         edi
 005A947E    pop         esi
 005A947F    pop         ebx
 005A9480    ret
*}
end;

//005A9484
procedure TCustomImageList.Assign(Source:TPersistent);
begin
{*
 005A9484    push        ebp
 005A9485    mov         ebp,esp
 005A9487    push        ecx
 005A9488    push        ebx
 005A9489    push        esi
 005A948A    mov         esi,edx
 005A948C    mov         ebx,eax
 005A948E    test        esi,esi
>005A9490    jne         005A949B
 005A9492    mov         eax,ebx
 005A9494    call        005A8734
>005A9499    jmp         005A950F
 005A949B    mov         eax,esi
 005A949D    mov         edx,dword ptr ds:[5A6FD8];TCustomImageList
 005A94A3    call        @IsClass
 005A94A8    test        al,al
>005A94AA    je          005A9506
 005A94AC    mov         dl,1
 005A94AE    mov         eax,[00472CE4];TMemoryStream
 005A94B3    call        TObject.Create;TMemoryStream.Create
 005A94B8    mov         dword ptr [ebp-4],eax
 005A94BB    xor         eax,eax
 005A94BD    push        ebp
 005A94BE    push        5A94FF
 005A94C3    push        dword ptr fs:[eax]
 005A94C6    mov         dword ptr fs:[eax],esp
 005A94C9    mov         edx,dword ptr [ebp-4]
 005A94CC    mov         eax,esi
 005A94CE    mov         ecx,dword ptr [eax]
 005A94D0    call        dword ptr [ecx+5C]
 005A94D3    push        0
 005A94D5    push        0
 005A94D7    mov         eax,dword ptr [ebp-4]
 005A94DA    call        TStream.SetPosition
 005A94DF    mov         edx,dword ptr [ebp-4]
 005A94E2    mov         eax,ebx
 005A94E4    mov         ecx,dword ptr [eax]
 005A94E6    call        dword ptr [ecx+58];TCustomImageList.sub_005A9CCC
 005A94E9    xor         eax,eax
 005A94EB    pop         edx
 005A94EC    pop         ecx
 005A94ED    pop         ecx
 005A94EE    mov         dword ptr fs:[eax],edx
 005A94F1    push        5A950F
 005A94F6    mov         eax,dword ptr [ebp-4]
 005A94F9    call        TObject.Free
 005A94FE    ret
>005A94FF    jmp         @HandleFinally
>005A9504    jmp         005A94F6
 005A9506    mov         edx,esi
 005A9508    mov         eax,ebx
 005A950A    call        TPersistent.Assign
 005A950F    pop         esi
 005A9510    pop         ebx
 005A9511    pop         ecx
 005A9512    pop         ebp
 005A9513    ret
*}
end;

//005A9514
procedure TCustomImageList.AssignTo(Dest:TPersistent);
begin
{*
 005A9514    push        ebp
 005A9515    mov         ebp,esp
 005A9517    push        ecx
 005A9518    push        ebx
 005A9519    push        esi
 005A951A    mov         esi,edx
 005A951C    mov         ebx,eax
 005A951E    mov         eax,esi
 005A9520    mov         edx,dword ptr ds:[5A6FD8];TCustomImageList
 005A9526    call        @IsClass
 005A952B    test        al,al
>005A952D    je          005A9589
 005A952F    mov         dl,1
 005A9531    mov         eax,[00472CE4];TMemoryStream
 005A9536    call        TObject.Create;TMemoryStream.Create
 005A953B    mov         dword ptr [ebp-4],eax
 005A953E    xor         eax,eax
 005A9540    push        ebp
 005A9541    push        5A9582
 005A9546    push        dword ptr fs:[eax]
 005A9549    mov         dword ptr fs:[eax],esp
 005A954C    mov         edx,dword ptr [ebp-4]
 005A954F    mov         eax,ebx
 005A9551    mov         ecx,dword ptr [eax]
 005A9553    call        dword ptr [ecx+5C];TCustomImageList.WriteData
 005A9556    push        0
 005A9558    push        0
 005A955A    mov         eax,dword ptr [ebp-4]
 005A955D    call        TStream.SetPosition
 005A9562    mov         edx,dword ptr [ebp-4]
 005A9565    mov         eax,esi
 005A9567    mov         ecx,dword ptr [eax]
 005A9569    call        dword ptr [ecx+58]
 005A956C    xor         eax,eax
 005A956E    pop         edx
 005A956F    pop         ecx
 005A9570    pop         ecx
 005A9571    mov         dword ptr fs:[eax],edx
 005A9574    push        5A9592
 005A9579    mov         eax,dword ptr [ebp-4]
 005A957C    call        TObject.Free
 005A9581    ret
>005A9582    jmp         @HandleFinally
>005A9587    jmp         005A9579
 005A9589    mov         edx,esi
 005A958B    mov         eax,ebx
 005A958D    call        TPersistent.AssignTo
 005A9592    pop         esi
 005A9593    pop         ebx
 005A9594    pop         ecx
 005A9595    pop         ebp
 005A9596    ret
*}
end;

//005A9598
procedure sub_005A9598(?:TCustomImageList; ?:TBitmap);
begin
{*
 005A9598    push        ebp
 005A9599    mov         ebp,esp
 005A959B    push        0
 005A959D    push        ebx
 005A959E    push        esi
 005A959F    mov         esi,edx
 005A95A1    mov         ebx,eax
 005A95A3    xor         eax,eax
 005A95A5    push        ebp
 005A95A6    push        5A9604
 005A95AB    push        dword ptr fs:[eax]
 005A95AE    mov         dword ptr fs:[eax],esp
 005A95B1    test        esi,esi
>005A95B3    je          005A95EE
 005A95B5    mov         eax,esi
 005A95B7    mov         edx,dword ptr [eax]
 005A95B9    call        dword ptr [edx+24];TBitmap.GetHeight
 005A95BC    cmp         eax,dword ptr [ebx+50];TCustomImageList.FHeight:Integer
>005A95BF    jl          005A95CD
 005A95C1    mov         eax,esi
 005A95C3    mov         edx,dword ptr [eax]
 005A95C5    call        dword ptr [edx+30];TBitmap.GetWidth
 005A95C8    cmp         eax,dword ptr [ebx+54];TCustomImageList.FWidth:Integer
>005A95CB    jge         005A95EE
 005A95CD    lea         edx,[ebp-4]
 005A95D0    mov         eax,[007C44FC];^SResString222:TResStringRec
 005A95D5    call        LoadResString
 005A95DA    mov         ecx,dword ptr [ebp-4]
 005A95DD    mov         dl,1
 005A95DF    mov         eax,[0046BE9C];EInvalidOperation
 005A95E4    call        Exception.Create;EInvalidOperation.Create
 005A95E9    call        @RaiseExcept
 005A95EE    xor         eax,eax
 005A95F0    pop         edx
 005A95F1    pop         ecx
 005A95F2    pop         ecx
 005A95F3    mov         dword ptr fs:[eax],edx
 005A95F6    push        5A960B
 005A95FB    lea         eax,[ebp-4]
 005A95FE    call        @UStrClr
 005A9603    ret
>005A9604    jmp         @HandleFinally
>005A9609    jmp         005A95FB
 005A960B    pop         esi
 005A960C    pop         ebx
 005A960D    pop         ecx
 005A960E    pop         ebp
 005A960F    ret
*}
end;

//005A9610
procedure TImageList.SetDrawingStyle(Value:TDrawingStyle);
begin
{*
 005A9610    cmp         dl,byte ptr [eax+60];TImageList.FDrawingStyle:TDrawingStyle
>005A9613    je          005A961D
 005A9615    mov         byte ptr [eax+60],dl;TImageList.FDrawingStyle:TDrawingStyle
 005A9618    mov         edx,dword ptr [eax]
 005A961A    call        dword ptr [edx+4C];TBaseImageList.Change
 005A961D    ret
*}
end;

//005A9620
function TCustomImageList.GetHotSpot:TPoint;
begin
{*
 005A9620    add         esp,0FFFFFFF8
 005A9623    xor         eax,eax
 005A9625    mov         dword ptr [esp],eax
 005A9628    xor         eax,eax
 005A962A    mov         dword ptr [esp+4],eax
 005A962E    mov         eax,dword ptr [esp]
 005A9631    mov         dword ptr [edx],eax
 005A9633    mov         eax,dword ptr [esp+4]
 005A9637    mov         dword ptr [edx+4],eax
 005A963A    pop         ecx
 005A963B    pop         edx
 005A963C    ret
*}
end;

//005A9640
procedure sub_005A9640;
begin
{*
 005A9640    push        ebx
 005A9641    push        esi
 005A9642    push        edi
 005A9643    mov         edi,eax
 005A9645    mov         eax,edi
 005A9647    call        004D19E4
 005A964C    mov         ebx,eax
 005A964E    dec         ebx
 005A964F    test        ebx,ebx
>005A9651    jl          005A9668
 005A9653    inc         ebx
 005A9654    xor         esi,esi
 005A9656    mov         edx,esi
 005A9658    mov         eax,edi
 005A965A    call        004D19F4
 005A965F    mov         edx,dword ptr [eax]
 005A9661    call        dword ptr [edx+4]
 005A9664    inc         esi
 005A9665    dec         ebx
>005A9666    jne         005A9656
 005A9668    pop         edi
 005A9669    pop         esi
 005A966A    pop         ebx
 005A966B    ret
*}
end;

//005A966C
procedure TCustomImageList.UnRegisterChanges(Value:TChangeLink);
begin
{*
 005A966C    call        004D199C
 005A9671    ret
*}
end;

//005A9674
procedure TCustomImageList.RegisterChanges(Value:TChangeLink);
begin
{*
 005A9674    call        004D1938
 005A9679    ret
*}
end;

//005A967C
function StreamsEqual(S1:TMemoryStream; S2:TMemoryStream):Boolean;
begin
{*
 005A967C    push        ebx
 005A967D    push        esi
 005A967E    mov         esi,edx
 005A9680    mov         ebx,eax
 005A9682    mov         eax,ebx
 005A9684    mov         edx,dword ptr [eax]
 005A9686    call        dword ptr [edx]
 005A9688    push        edx
 005A9689    push        eax
 005A968A    mov         eax,esi
 005A968C    mov         edx,dword ptr [eax]
 005A968E    call        dword ptr [edx]
 005A9690    cmp         edx,dword ptr [esp+4]
>005A9694    jne         005A9699
 005A9696    cmp         eax,dword ptr [esp]
 005A9699    pop         edx
 005A969A    pop         eax
>005A969B    jne         005A96B4
 005A969D    mov         eax,ebx
 005A969F    mov         edx,dword ptr [eax]
 005A96A1    call        dword ptr [edx]
 005A96A3    mov         ecx,eax
 005A96A5    mov         edx,dword ptr [esi+4]
 005A96A8    mov         eax,dword ptr [ebx+4]
 005A96AB    call        CompareMem
 005A96B0    test        al,al
>005A96B2    jne         005A96B9
 005A96B4    xor         eax,eax
 005A96B6    pop         esi
 005A96B7    pop         ebx
 005A96B8    ret
 005A96B9    mov         al,1
 005A96BB    pop         esi
 005A96BC    pop         ebx
 005A96BD    ret
*}
end;

//005A96C0
{*function sub_005A96C0(?:?; ?:?):?;
begin
 005A96C0    push        ebp
 005A96C1    mov         ebp,esp
 005A96C3    add         esp,0FFFFFFF4
 005A96C6    push        ebx
 005A96C7    push        esi
 005A96C8    push        edi
 005A96C9    mov         esi,edx
 005A96CB    mov         ebx,eax
 005A96CD    test        esi,esi
>005A96CF    je          005A96E5
 005A96D1    mov         eax,ebx
 005A96D3    mov         edx,dword ptr [eax]
 005A96D5    call        dword ptr [edx+48]
 005A96D8    mov         edi,eax
 005A96DA    mov         eax,esi
 005A96DC    mov         edx,dword ptr [eax]
 005A96DE    call        dword ptr [edx+48]
 005A96E1    cmp         edi,eax
>005A96E3    je          005A96EE
 005A96E5    mov         byte ptr [ebp-1],0
>005A96E9    jmp         005A97A3
 005A96EE    mov         eax,ebx
 005A96F0    mov         edx,dword ptr [eax]
 005A96F2    call        dword ptr [edx+48]
 005A96F5    test        eax,eax
>005A96F7    jne         005A970D
 005A96F9    mov         eax,esi
 005A96FB    mov         edx,dword ptr [eax]
 005A96FD    call        dword ptr [edx+48]
 005A9700    test        eax,eax
>005A9702    jne         005A970D
 005A9704    mov         byte ptr [ebp-1],1
>005A9708    jmp         005A97A3
 005A970D    mov         dl,1
 005A970F    mov         eax,[00472CE4];TMemoryStream
 005A9714    call        TObject.Create;TMemoryStream.Create
 005A9719    mov         dword ptr [ebp-8],eax
 005A971C    xor         eax,eax
 005A971E    push        ebp
 005A971F    push        5A979C
 005A9724    push        dword ptr fs:[eax]
 005A9727    mov         dword ptr fs:[eax],esp
 005A972A    mov         edx,dword ptr [ebp-8]
 005A972D    mov         eax,ebx
 005A972F    mov         ecx,dword ptr [eax]
 005A9731    call        dword ptr [ecx+5C]
 005A9734    mov         dl,1
 005A9736    mov         eax,[00472CE4];TMemoryStream
 005A973B    call        TObject.Create;TMemoryStream.Create
 005A9740    mov         dword ptr [ebp-0C],eax
 005A9743    xor         eax,eax
 005A9745    push        ebp
 005A9746    push        5A977F
 005A974B    push        dword ptr fs:[eax]
 005A974E    mov         dword ptr fs:[eax],esp
 005A9751    mov         edx,dword ptr [ebp-0C]
 005A9754    mov         eax,esi
 005A9756    mov         ecx,dword ptr [eax]
 005A9758    call        dword ptr [ecx+5C]
 005A975B    mov         edx,dword ptr [ebp-0C]
 005A975E    mov         eax,dword ptr [ebp-8]
 005A9761    call        StreamsEqual
 005A9766    mov         byte ptr [ebp-1],al
 005A9769    xor         eax,eax
 005A976B    pop         edx
 005A976C    pop         ecx
 005A976D    pop         ecx
 005A976E    mov         dword ptr fs:[eax],edx
 005A9771    push        5A9786
 005A9776    mov         eax,dword ptr [ebp-0C]
 005A9779    call        TObject.Free
 005A977E    ret
>005A977F    jmp         @HandleFinally
>005A9784    jmp         005A9776
 005A9786    xor         eax,eax
 005A9788    pop         edx
 005A9789    pop         ecx
 005A978A    pop         ecx
 005A978B    mov         dword ptr fs:[eax],edx
 005A978E    push        5A97A3
 005A9793    mov         eax,dword ptr [ebp-8]
 005A9796    call        TObject.Free
 005A979B    ret
>005A979C    jmp         @HandleFinally
>005A97A1    jmp         005A9793
 005A97A3    movzx       eax,byte ptr [ebp-1]
 005A97A7    pop         edi
 005A97A8    pop         esi
 005A97A9    pop         ebx
 005A97AA    mov         esp,ebp
 005A97AC    pop         ebp
 005A97AD    ret
end;*}

//005A97B0
{*function sub_005A97B0(?:?):Boolean;
begin
 005A97B0    push        ebp
 005A97B1    mov         ebp,esp
 005A97B3    push        ebx
 005A97B4    mov         eax,dword ptr [ebp+8]
 005A97B7    mov         eax,dword ptr [eax-4]
 005A97BA    cmp         dword ptr [eax+20],0
>005A97BE    je          005A97F4
 005A97C0    mov         eax,dword ptr [ebp+8]
 005A97C3    mov         eax,dword ptr [eax-4]
 005A97C6    mov         ebx,dword ptr [eax+20]
 005A97C9    mov         eax,ebx
 005A97CB    mov         edx,dword ptr ds:[5A6FD8];TCustomImageList
 005A97D1    call        @IsClass
 005A97D6    test        al,al
>005A97D8    je          005A97EF
 005A97DA    mov         edx,ebx
 005A97DC    mov         eax,dword ptr [ebp+8]
 005A97DF    mov         eax,dword ptr [eax-8]
 005A97E2    call        005A96C0
 005A97E7    test        al,al
>005A97E9    je          005A97EF
 005A97EB    xor         eax,eax
>005A97ED    jmp         005A9804
 005A97EF    mov         al,1
 005A97F1    pop         ebx
 005A97F2    pop         ebp
 005A97F3    ret
 005A97F4    mov         eax,dword ptr [ebp+8]
 005A97F7    mov         eax,dword ptr [eax-8]
 005A97FA    mov         edx,dword ptr [eax]
 005A97FC    call        dword ptr [edx+48]
 005A97FF    test        eax,eax
 005A9801    setg        al
 005A9804    pop         ebx
 005A9805    pop         ebp
 005A9806    ret
end;*}

//005A9808
procedure TCustomImageList.DefineProperties(Filer:TFiler);
begin
{*
 005A9808    push        ebp
 005A9809    mov         ebp,esp
 005A980B    add         esp,0FFFFFFF8
 005A980E    push        ebx
 005A980F    mov         dword ptr [ebp-4],edx
 005A9812    mov         dword ptr [ebp-8],eax
 005A9815    mov         edx,dword ptr [ebp-4]
 005A9818    mov         eax,dword ptr [ebp-8]
 005A981B    call        TComponent.DefineProperties
 005A9820    mov         eax,dword ptr [ebp-8]
 005A9823    push        eax
 005A9824    mov         eax,dword ptr [eax]
 005A9826    mov         eax,dword ptr [eax+58];TCustomImageList.FAllocBy:Integer
 005A9829    push        eax
 005A982A    mov         eax,dword ptr [ebp-8]
 005A982D    push        eax
 005A982E    mov         eax,dword ptr [eax]
 005A9830    mov         eax,dword ptr [eax+5C];TCustomImageList.FHandle:NativeUInt
 005A9833    push        eax
 005A9834    push        ebp
 005A9835    call        005A97B0
 005A983A    pop         ecx
 005A983B    mov         ecx,eax
 005A983D    mov         edx,5A985C;'Bitmap'
 005A9842    mov         eax,dword ptr [ebp-4]
 005A9845    mov         ebx,dword ptr [eax]
 005A9847    call        dword ptr [ebx+8];TFiler.DefineBinaryProperty
 005A984A    pop         ebx
 005A984B    pop         ecx
 005A984C    pop         ecx
 005A984D    pop         ebp
 005A984E    ret
*}
end;

//005A986C
{*procedure sub_005A986C(?:TCustomImageList; ?:?);
begin
 005A986C    push        ebp
 005A986D    mov         ebp,esp
 005A986F    add         esp,0FFFFFFC0
 005A9872    push        ebx
 005A9873    push        esi
 005A9874    push        edi
 005A9875    mov         ebx,edx
 005A9877    mov         dword ptr [ebp-4],eax
 005A987A    lea         edx,[ebp-18]
 005A987D    mov         ecx,4
 005A9882    mov         eax,ebx
 005A9884    call        TStream.ReadBuffer
 005A9889    lea         edx,[ebp-1C]
 005A988C    mov         ecx,4
 005A9891    mov         eax,ebx
 005A9893    call        TStream.ReadBuffer
 005A9898    mov         dl,1
 005A989A    mov         eax,[004C1D10];TBitmap
 005A989F    call        TBitmap.Create;TBitmap.Create
 005A98A4    mov         dword ptr [ebp-8],eax
 005A98A7    xor         eax,eax
 005A98A9    push        ebp
 005A98AA    push        5A9AF0
 005A98AF    push        dword ptr fs:[eax]
 005A98B2    mov         dword ptr fs:[eax],esp
 005A98B5    mov         eax,ebx
 005A98B7    call        TStream.GetPosition
 005A98BC    mov         esi,eax
 005A98BE    mov         edx,ebx
 005A98C0    mov         eax,dword ptr [ebp-8]
 005A98C3    mov         ecx,dword ptr [eax]
 005A98C5    call        dword ptr [ecx+5C];TBitmap.LoadFromStream
 005A98C8    mov         eax,esi
 005A98CA    add         eax,dword ptr [ebp-18]
 005A98CD    cdq
 005A98CE    push        edx
 005A98CF    push        eax
 005A98D0    mov         eax,ebx
 005A98D2    call        TStream.SetPosition
 005A98D7    mov         dl,1
 005A98D9    mov         eax,[004C1D10];TBitmap
 005A98DE    call        TBitmap.Create;TBitmap.Create
 005A98E3    mov         dword ptr [ebp-10],eax
 005A98E6    xor         eax,eax
 005A98E8    push        ebp
 005A98E9    push        5A9AD3
 005A98EE    push        dword ptr fs:[eax]
 005A98F1    mov         dword ptr fs:[eax],esp
 005A98F4    mov         edx,ebx
 005A98F6    mov         eax,dword ptr [ebp-10]
 005A98F9    mov         ecx,dword ptr [eax]
 005A98FB    call        dword ptr [ecx+5C];TBitmap.LoadFromStream
 005A98FE    mov         dl,1
 005A9900    mov         eax,[004C1D10];TBitmap
 005A9905    call        TBitmap.Create;TBitmap.Create
 005A990A    mov         dword ptr [ebp-0C],eax
 005A990D    mov         eax,dword ptr [ebp-4]
 005A9910    mov         edx,dword ptr [eax+54]
 005A9913    mov         eax,dword ptr [ebp-0C]
 005A9916    mov         ecx,dword ptr [eax]
 005A9918    call        dword ptr [ecx+44];TBitmap.SetWidth
 005A991B    mov         eax,dword ptr [ebp-4]
 005A991E    mov         edx,dword ptr [eax+50]
 005A9921    mov         eax,dword ptr [ebp-0C]
 005A9924    mov         ecx,dword ptr [eax]
 005A9926    call        dword ptr [ecx+38];TBitmap.SetHeight
 005A9929    mov         dl,1
 005A992B    mov         eax,[004C1D10];TBitmap
 005A9930    call        TBitmap.Create;TBitmap.Create
 005A9935    mov         dword ptr [ebp-14],eax
 005A9938    mov         dl,1
 005A993A    mov         eax,dword ptr [ebp-14]
 005A993D    call        TBitmap.SetMonochrome
 005A9942    mov         eax,dword ptr [ebp-4]
 005A9945    mov         edx,dword ptr [eax+54]
 005A9948    mov         eax,dword ptr [ebp-14]
 005A994B    mov         ecx,dword ptr [eax]
 005A994D    call        dword ptr [ecx+44];TBitmap.SetWidth
 005A9950    mov         eax,dword ptr [ebp-4]
 005A9953    mov         edx,dword ptr [eax+50]
 005A9956    mov         eax,dword ptr [ebp-14]
 005A9959    mov         ecx,dword ptr [eax]
 005A995B    call        dword ptr [ecx+38];TBitmap.SetHeight
 005A995E    mov         eax,dword ptr [ebp-4]
 005A9961    mov         eax,dword ptr [eax+50]
 005A9964    push        eax
 005A9965    lea         eax,[ebp-30]
 005A9968    push        eax
 005A9969    mov         eax,dword ptr [ebp-4]
 005A996C    mov         ecx,dword ptr [eax+54]
 005A996F    xor         edx,edx
 005A9971    xor         eax,eax
 005A9973    call        Rect
 005A9978    mov         eax,dword ptr [ebp-4]
 005A997B    call        TCustomImageList.BeginUpdate
 005A9980    xor         eax,eax
 005A9982    push        ebp
 005A9983    push        5A9AB6
 005A9988    push        dword ptr fs:[eax]
 005A998B    mov         dword ptr fs:[eax],esp
 005A998E    mov         eax,dword ptr [ebp-8]
 005A9991    mov         edx,dword ptr [eax]
 005A9993    call        dword ptr [edx+24];TBitmap.GetHeight
 005A9996    mov         edx,dword ptr [ebp-4]
 005A9999    mov         ecx,dword ptr [edx+50]
 005A999C    cdq
 005A999D    idiv        eax,ecx
 005A999F    dec         eax
 005A99A0    test        eax,eax
>005A99A2    jl          005A9A90
 005A99A8    inc         eax
 005A99A9    mov         dword ptr [ebp-20],eax
 005A99AC    xor         edi,edi
 005A99AE    cmp         dword ptr [ebp-1C],0
>005A99B2    je          005A9A90
 005A99B8    mov         eax,dword ptr [ebp-8]
 005A99BB    mov         edx,dword ptr [eax]
 005A99BD    call        dword ptr [edx+30];TBitmap.GetWidth
 005A99C0    mov         edx,dword ptr [ebp-4]
 005A99C3    mov         ecx,dword ptr [edx+54]
 005A99C6    cdq
 005A99C7    idiv        eax,ecx
 005A99C9    mov         esi,eax
 005A99CB    dec         esi
 005A99CC    test        esi,esi
>005A99CE    jl          005A9A86
 005A99D4    inc         esi
 005A99D5    xor         ebx,ebx
 005A99D7    cmp         dword ptr [ebp-1C],0
>005A99DB    je          005A9A86
 005A99E1    mov         eax,dword ptr [ebp-4]
 005A99E4    mov         eax,dword ptr [eax+50]
 005A99E7    push        eax
 005A99E8    lea         eax,[ebp-40]
 005A99EB    push        eax
 005A99EC    mov         eax,dword ptr [ebp-4]
 005A99EF    mov         ecx,dword ptr [eax+54]
 005A99F2    mov         eax,dword ptr [ebp-4]
 005A99F5    mov         edx,dword ptr [eax+50]
 005A99F8    imul        edx,edi
 005A99FB    mov         eax,dword ptr [ebp-4]
 005A99FE    mov         eax,dword ptr [eax+54]
 005A9A01    imul        eax,ebx
 005A9A04    call        Bounds
 005A9A09    lea         eax,[ebp-40]
 005A9A0C    push        eax
 005A9A0D    mov         eax,dword ptr [ebp-8]
 005A9A10    call        TBitmap.GetCanvas
 005A9A15    push        eax
 005A9A16    mov         eax,dword ptr [ebp-0C]
 005A9A19    call        TBitmap.GetCanvas
 005A9A1E    lea         edx,[ebp-30]
 005A9A21    pop         ecx
 005A9A22    call        TCanvas.CopyRect
 005A9A27    mov         eax,dword ptr [ebp-4]
 005A9A2A    mov         eax,dword ptr [eax+50]
 005A9A2D    push        eax
 005A9A2E    lea         eax,[ebp-40]
 005A9A31    push        eax
 005A9A32    mov         eax,dword ptr [ebp-4]
 005A9A35    mov         ecx,dword ptr [eax+54]
 005A9A38    mov         eax,dword ptr [ebp-4]
 005A9A3B    mov         edx,dword ptr [eax+50]
 005A9A3E    imul        edx,edi
 005A9A41    mov         eax,dword ptr [ebp-4]
 005A9A44    mov         eax,dword ptr [eax+54]
 005A9A47    imul        eax,ebx
 005A9A4A    call        Bounds
 005A9A4F    lea         eax,[ebp-40]
 005A9A52    push        eax
 005A9A53    mov         eax,dword ptr [ebp-10]
 005A9A56    call        TBitmap.GetCanvas
 005A9A5B    push        eax
 005A9A5C    mov         eax,dword ptr [ebp-14]
 005A9A5F    call        TBitmap.GetCanvas
 005A9A64    lea         edx,[ebp-30]
 005A9A67    pop         ecx
 005A9A68    call        TCanvas.CopyRect
 005A9A6D    mov         ecx,dword ptr [ebp-14]
 005A9A70    mov         edx,dword ptr [ebp-0C]
 005A9A73    mov         eax,dword ptr [ebp-4]
 005A9A76    call        TCustomImageList.Add
 005A9A7B    dec         dword ptr [ebp-1C]
 005A9A7E    inc         ebx
 005A9A7F    dec         esi
>005A9A80    jne         005A99D7
 005A9A86    inc         edi
 005A9A87    dec         dword ptr [ebp-20]
>005A9A8A    jne         005A99AE
 005A9A90    xor         eax,eax
 005A9A92    pop         edx
 005A9A93    pop         ecx
 005A9A94    pop         ecx
 005A9A95    mov         dword ptr fs:[eax],edx
 005A9A98    push        5A9ABD
 005A9A9D    mov         eax,dword ptr [ebp-0C]
 005A9AA0    call        TObject.Free
 005A9AA5    mov         eax,dword ptr [ebp-14]
 005A9AA8    call        TObject.Free
 005A9AAD    mov         eax,dword ptr [ebp-4]
 005A9AB0    call        TCustomImageList.EndUpdate
 005A9AB5    ret
>005A9AB6    jmp         @HandleFinally
>005A9ABB    jmp         005A9A9D
 005A9ABD    xor         eax,eax
 005A9ABF    pop         edx
 005A9AC0    pop         ecx
 005A9AC1    pop         ecx
 005A9AC2    mov         dword ptr fs:[eax],edx
 005A9AC5    push        5A9ADA
 005A9ACA    mov         eax,dword ptr [ebp-10]
 005A9ACD    call        TObject.Free
 005A9AD2    ret
>005A9AD3    jmp         @HandleFinally
>005A9AD8    jmp         005A9ACA
 005A9ADA    xor         eax,eax
 005A9ADC    pop         edx
 005A9ADD    pop         ecx
 005A9ADE    pop         ecx
 005A9ADF    mov         dword ptr fs:[eax],edx
 005A9AE2    push        5A9AF7
 005A9AE7    mov         eax,dword ptr [ebp-8]
 005A9AEA    call        TObject.Free
 005A9AEF    ret
>005A9AF0    jmp         @HandleFinally
>005A9AF5    jmp         005A9AE7
 005A9AF7    pop         edi
 005A9AF8    pop         esi
 005A9AF9    pop         ebx
 005A9AFA    mov         esp,ebp
 005A9AFC    pop         ebp
 005A9AFD    ret
end;*}

//005A9B00
{*procedure sub_005A9B00(?:TCustomImageList; ?:?);
begin
 005A9B00    push        ebp
 005A9B01    mov         ebp,esp
 005A9B03    add         esp,0FFFFFFEC
 005A9B06    push        ebx
 005A9B07    push        esi
 005A9B08    mov         dword ptr [ebp-8],edx
 005A9B0B    mov         dword ptr [ebp-4],eax
 005A9B0E    push        0
 005A9B10    mov         ecx,dword ptr [ebp-8]
 005A9B13    mov         dl,1
 005A9B15    mov         eax,[004738F8];TStreamAdapter
 005A9B1A    call        TStreamAdapter.Create;TStreamAdapter.Create
 005A9B1F    mov         dword ptr [ebp-0C],eax
 005A9B22    xor         eax,eax
 005A9B24    push        ebp
 005A9B25    push        5A9B60
 005A9B2A    push        dword ptr fs:[eax]
 005A9B2D    mov         dword ptr fs:[eax],esp
 005A9B30    mov         eax,dword ptr [ebp-0C]
 005A9B33    test        eax,eax
>005A9B35    je          005A9B3A
 005A9B37    sub         eax,0FFFFFFEC
 005A9B3A    push        eax
 005A9B3B    call        comctl32.ImageList_Read
 005A9B40    mov         edx,eax
 005A9B42    mov         eax,dword ptr [ebp-4]
 005A9B45    call        005A8660
 005A9B4A    xor         eax,eax
 005A9B4C    pop         edx
 005A9B4D    pop         ecx
 005A9B4E    pop         ecx
 005A9B4F    mov         dword ptr fs:[eax],edx
 005A9B52    push        5A9B67
 005A9B57    mov         eax,dword ptr [ebp-0C]
 005A9B5A    call        TObject.Free
 005A9B5F    ret
>005A9B60    jmp         @HandleFinally
>005A9B65    jmp         005A9B57
 005A9B67    mov         eax,dword ptr [ebp-4]
 005A9B6A    cmp         dword ptr [eax+5C],0
 005A9B6E    setne       al
 005A9B71    test        al,al
>005A9B73    jne         005A9CC5
 005A9B79    xor         ebx,ebx
 005A9B7B    mov         dl,1
 005A9B7D    mov         eax,[00472CE4];TMemoryStream
 005A9B82    call        TObject.Create;TMemoryStream.Create
 005A9B87    mov         dword ptr [ebp-10],eax
 005A9B8A    xor         eax,eax
 005A9B8C    push        ebp
 005A9B8D    push        5A9C99
 005A9B92    push        dword ptr fs:[eax]
 005A9B95    mov         dword ptr fs:[eax],esp
 005A9B98    push        0
 005A9B9A    push        0
 005A9B9C    mov         eax,dword ptr [ebp-8]
 005A9B9F    call        TStream.SetPosition
 005A9BA4    mov         edx,dword ptr [ebp-8]
 005A9BA7    mov         eax,dword ptr [ebp-10]
 005A9BAA    call        TMemoryStream.LoadFromStream
 005A9BAF    push        0
 005A9BB1    push        12
 005A9BB3    mov         eax,dword ptr [ebp-10]
 005A9BB6    call        TStream.SetPosition
 005A9BBB    lea         edx,[ebp-11]
 005A9BBE    mov         ecx,1
 005A9BC3    mov         eax,dword ptr [ebp-10]
 005A9BC6    mov         esi,dword ptr [eax]
 005A9BC8    call        dword ptr [esi+0C];TCustomMemoryStream.Read
 005A9BCB    dec         eax
>005A9BCC    jne         005A9C1A
 005A9BCE    cmp         byte ptr [ebp-11],1
>005A9BD2    jne         005A9C1A
 005A9BD4    push        0
 005A9BD6    push        38
 005A9BD8    mov         eax,dword ptr [ebp-10]
 005A9BDB    call        TStream.SetPosition
 005A9BE0    lea         edx,[ebp-12]
 005A9BE3    mov         ecx,1
 005A9BE8    mov         eax,dword ptr [ebp-10]
 005A9BEB    mov         esi,dword ptr [eax]
 005A9BED    call        dword ptr [esi+0C];TCustomMemoryStream.Read
 005A9BF0    dec         eax
>005A9BF1    jne         005A9C1A
 005A9BF3    movzx       eax,byte ptr [ebp-12]
 005A9BF7    or          byte ptr [ebp-11],al
 005A9BFA    push        0
 005A9BFC    push        12
 005A9BFE    mov         eax,dword ptr [ebp-10]
 005A9C01    call        TStream.SetPosition
 005A9C06    lea         edx,[ebp-11]
 005A9C09    mov         ecx,1
 005A9C0E    mov         eax,dword ptr [ebp-10]
 005A9C11    mov         ebx,dword ptr [eax]
 005A9C13    call        dword ptr [ebx+10];TMemoryStream.Write
 005A9C16    dec         eax
 005A9C17    sete        bl
 005A9C1A    test        bl,bl
>005A9C1C    je          005A9C83
 005A9C1E    push        0
 005A9C20    push        0
 005A9C22    mov         eax,dword ptr [ebp-10]
 005A9C25    call        TStream.SetPosition
 005A9C2A    push        0
 005A9C2C    mov         ecx,dword ptr [ebp-10]
 005A9C2F    mov         dl,1
 005A9C31    mov         eax,[004738F8];TStreamAdapter
 005A9C36    call        TStreamAdapter.Create;TStreamAdapter.Create
 005A9C3B    mov         dword ptr [ebp-0C],eax
 005A9C3E    xor         eax,eax
 005A9C40    push        ebp
 005A9C41    push        5A9C7C
 005A9C46    push        dword ptr fs:[eax]
 005A9C49    mov         dword ptr fs:[eax],esp
 005A9C4C    mov         eax,dword ptr [ebp-0C]
 005A9C4F    test        eax,eax
>005A9C51    je          005A9C56
 005A9C53    sub         eax,0FFFFFFEC
 005A9C56    push        eax
 005A9C57    call        comctl32.ImageList_Read
 005A9C5C    mov         edx,eax
 005A9C5E    mov         eax,dword ptr [ebp-4]
 005A9C61    call        005A8660
 005A9C66    xor         eax,eax
 005A9C68    pop         edx
 005A9C69    pop         ecx
 005A9C6A    pop         ecx
 005A9C6B    mov         dword ptr fs:[eax],edx
 005A9C6E    push        5A9C83
 005A9C73    mov         eax,dword ptr [ebp-0C]
 005A9C76    call        TObject.Free
 005A9C7B    ret
>005A9C7C    jmp         @HandleFinally
>005A9C81    jmp         005A9C73
 005A9C83    xor         eax,eax
 005A9C85    pop         edx
 005A9C86    pop         ecx
 005A9C87    pop         ecx
 005A9C88    mov         dword ptr fs:[eax],edx
 005A9C8B    push        5A9CA0
 005A9C90    mov         eax,dword ptr [ebp-10]
 005A9C93    call        TObject.Free
 005A9C98    ret
>005A9C99    jmp         @HandleFinally
>005A9C9E    jmp         005A9C90
 005A9CA0    mov         eax,dword ptr [ebp-4]
 005A9CA3    cmp         dword ptr [eax+5C],0
 005A9CA7    setne       al
 005A9CAA    test        al,al
>005A9CAC    jne         005A9CC5
 005A9CAE    mov         ecx,dword ptr ds:[7C4B28];^SResString226:TResStringRec
 005A9CB4    mov         dl,1
 005A9CB6    mov         eax,[0046B93C];EReadError
 005A9CBB    call        Exception.CreateRes;EReadError.Create
 005A9CC0    call        @RaiseExcept
 005A9CC5    pop         esi
 005A9CC6    pop         ebx
 005A9CC7    mov         esp,ebp
 005A9CC9    pop         ebp
 005A9CCA    ret
end;*}

//005A9CCC
{*procedure sub_005A9CCC(?:?);
begin
 005A9CCC    push        ebx
 005A9CCD    push        esi
 005A9CCE    push        edi
 005A9CCF    add         esp,0FFFFFFF0
 005A9CD2    mov         edi,edx
 005A9CD4    mov         esi,eax
 005A9CD6    mov         eax,esi
 005A9CD8    call        005A8734
 005A9CDD    mov         eax,edi
 005A9CDF    call        TStream.GetPosition
 005A9CE4    mov         dword ptr [esp+0C],eax
 005A9CE8    mov         edx,esp
 005A9CEA    mov         ecx,4
 005A9CEF    mov         eax,edi
 005A9CF1    mov         ebx,dword ptr [eax]
 005A9CF3    call        dword ptr [ebx+0C]
 005A9CF6    lea         edx,[esp+4]
 005A9CFA    mov         ecx,4
 005A9CFF    mov         eax,edi
 005A9D01    mov         ebx,dword ptr [eax]
 005A9D03    call        dword ptr [ebx+0C]
 005A9D06    movzx       ebx,byte ptr [esp]
 005A9D0A    movzx       eax,word ptr [esp]
 005A9D0E    shr         eax,8
 005A9D11    mov         byte ptr [esp+8],al
 005A9D15    mov         eax,dword ptr [esp+0C]
 005A9D19    cdq
 005A9D1A    push        edx
 005A9D1B    push        eax
 005A9D1C    mov         eax,edi
 005A9D1E    call        TStream.SetPosition
 005A9D23    mov         eax,dword ptr [esp]
 005A9D26    cmp         eax,dword ptr [esp+4]
>005A9D2A    je          005A9D43
 005A9D2C    cmp         bl,49
>005A9D2F    jne         005A9D43
 005A9D31    cmp         byte ptr [esp+8],4C
>005A9D36    jne         005A9D43
 005A9D38    mov         edx,edi
 005A9D3A    mov         eax,esi
 005A9D3C    call        005A9B00
>005A9D41    jmp         005A9D4C
 005A9D43    mov         edx,edi
 005A9D45    mov         eax,esi
 005A9D47    call        005A986C
 005A9D4C    call        TStyleManager.GetActiveStyle
 005A9D51    mov         ebx,eax
 005A9D53    mov         eax,ebx
 005A9D55    mov         edx,dword ptr [eax]
 005A9D57    call        dword ptr [edx+4C];TCustomStyleServices.GetEnabled
 005A9D5A    test        al,al
>005A9D5C    jne         005A9D79
 005A9D5E    mov         eax,esi
 005A9D60    call        TCustomImageList.GetHandle
 005A9D65    push        eax
 005A9D66    call        comctl32.ImageList_GetImageCount
 005A9D6B    push        eax
 005A9D6C    mov         eax,esi
 005A9D6E    call        TCustomImageList.GetHandle
 005A9D73    push        eax
 005A9D74    call        comctl32.ImageList_SetImageCount
 005A9D79    add         esp,10
 005A9D7C    pop         edi
 005A9D7D    pop         esi
 005A9D7E    pop         ebx
 005A9D7F    ret
end;*}

//005A9D80
procedure TCustomImageList.WriteData(Stream:Classes.TStream);
begin
{*
 005A9D80    push        ebp
 005A9D81    mov         ebp,esp
 005A9D83    push        ecx
 005A9D84    push        ebx
 005A9D85    push        esi
 005A9D86    push        edi
 005A9D87    mov         esi,edx
 005A9D89    mov         ebx,eax
 005A9D8B    cmp         dword ptr ds:[7CA770],0
>005A9D92    jne         005A9DCF
 005A9D94    mov         eax,5A9E94;'comctl32.dll'
 005A9D99    call        GetFileVersion
 005A9D9E    mov         [007CA770],eax
 005A9DA3    cmp         dword ptr ds:[7CA770],60000
>005A9DAD    jb          005A9DCF
 005A9DAF    push        5A9EB0
 005A9DB4    call        kernel32.GetModuleHandleW
 005A9DB9    mov         edi,eax
 005A9DBB    test        edi,edi
>005A9DBD    je          005A9DCF
 005A9DBF    push        5A9ECC
 005A9DC4    push        edi
 005A9DC5    call        GetProcAddress
 005A9DCA    mov         [007CA774],eax
 005A9DCF    push        0
 005A9DD1    mov         ecx,esi
 005A9DD3    mov         dl,1
 005A9DD5    mov         eax,[004738F8];TStreamAdapter
 005A9DDA    call        TStreamAdapter.Create
 005A9DDF    mov         dword ptr [ebp-4],eax
 005A9DE2    xor         eax,eax
 005A9DE4    push        ebp
 005A9DE5    push        5A9E7A
 005A9DEA    push        dword ptr fs:[eax]
 005A9DED    mov         dword ptr fs:[eax],esp
 005A9DF0    cmp         dword ptr ds:[7CA774],0
>005A9DF7    je          005A9E31
 005A9DF9    mov         eax,dword ptr [ebp-4]
 005A9DFC    test        eax,eax
>005A9DFE    je          005A9E03
 005A9E00    sub         eax,0FFFFFFEC
 005A9E03    push        eax
 005A9E04    push        1
 005A9E06    mov         eax,ebx
 005A9E08    call        TCustomImageList.GetHandle
 005A9E0D    push        eax
 005A9E0E    call        dword ptr ds:[7CA774]
 005A9E14    test        eax,eax
>005A9E16    je          005A9E64
 005A9E18    mov         ecx,dword ptr ds:[7C4648];^SResString227:TResStringRec
 005A9E1E    mov         dl,1
 005A9E20    mov         eax,[0046B9E4];EWriteError
 005A9E25    call        Exception.CreateRes
 005A9E2A    call        @RaiseExcept
>005A9E2F    jmp         005A9E64
 005A9E31    mov         eax,dword ptr [ebp-4]
 005A9E34    test        eax,eax
>005A9E36    je          005A9E3B
 005A9E38    sub         eax,0FFFFFFEC
 005A9E3B    push        eax
 005A9E3C    mov         eax,ebx
 005A9E3E    call        TCustomImageList.GetHandle
 005A9E43    push        eax
 005A9E44    call        comctl32.ImageList_Write
 005A9E49    test        eax,eax
>005A9E4B    jne         005A9E64
 005A9E4D    mov         ecx,dword ptr ds:[7C4648];^SResString227:TResStringRec
 005A9E53    mov         dl,1
 005A9E55    mov         eax,[0046B9E4];EWriteError
 005A9E5A    call        Exception.CreateRes
 005A9E5F    call        @RaiseExcept
 005A9E64    xor         eax,eax
 005A9E66    pop         edx
 005A9E67    pop         ecx
 005A9E68    pop         ecx
 005A9E69    mov         dword ptr fs:[eax],edx
 005A9E6C    push        5A9E81
 005A9E71    mov         eax,dword ptr [ebp-4]
 005A9E74    call        TObject.Free
 005A9E79    ret
>005A9E7A    jmp         @HandleFinally
>005A9E7F    jmp         005A9E71
 005A9E81    pop         edi
 005A9E82    pop         esi
 005A9E83    pop         ebx
 005A9E84    pop         ecx
 005A9E85    pop         ebp
 005A9E86    ret
*}
end;

//005A9EF0
procedure TCustomImageList.BeginUpdate;
begin
{*
 005A9EF0    inc         dword ptr [eax+80];TCustomImageList.FUpdateCount:Integer
 005A9EF6    ret
*}
end;

//005A9EF8
procedure TCustomImageList.EndUpdate;
begin
{*
 005A9EF8    cmp         dword ptr [eax+80],0;TCustomImageList.FUpdateCount:Integer
>005A9EFF    jle         005A9F07
 005A9F01    dec         dword ptr [eax+80];TCustomImageList.FUpdateCount:Integer
 005A9F07    cmp         byte ptr [eax+7C],0;TCustomImageList.FChanged:Boolean
>005A9F0B    je          005A9F16
 005A9F0D    mov         byte ptr [eax+7C],0;TCustomImageList.FChanged:Boolean
 005A9F11    mov         edx,dword ptr [eax]
 005A9F13    call        dword ptr [edx+4C];TBaseImageList.Change
 005A9F16    ret
*}
end;

//005A9F18
constructor TChangeLink.Create;
begin
{*
 005A9F18    push        ebx
 005A9F19    push        esi
 005A9F1A    test        dl,dl
>005A9F1C    je          005A9F26
 005A9F1E    add         esp,0FFFFFFF0
 005A9F21    call        @ClassCreate
 005A9F26    mov         ebx,edx
 005A9F28    mov         esi,eax
 005A9F2A    xor         edx,edx
 005A9F2C    mov         eax,esi
 005A9F2E    call        004D1B04
 005A9F33    mov         byte ptr [esi+0C],1;TChangeLink.FIgnoreIndex:Boolean
 005A9F37    mov         byte ptr [esi+18],1;TChangeLink.FIgnoreImages:Boolean
 005A9F3B    mov         eax,esi
 005A9F3D    test        bl,bl
>005A9F3F    je          005A9F50
 005A9F41    call        @AfterConstruction
 005A9F46    pop         dword ptr fs:[0]
 005A9F4D    add         esp,0C
 005A9F50    mov         eax,esi
 005A9F52    pop         esi
 005A9F53    pop         ebx
 005A9F54    ret
*}
end;

//005AC938
function FindPopupControl(const Pos:Types.TPoint):TControl;
begin
{*
 005AC938    push        ebx
 005AC939    push        esi
 005AC93A    push        edi
 005AC93B    mov         edi,eax
 005AC93D    xor         esi,esi
 005AC93F    mov         eax,edi
 005AC941    call        FindVCLWindow
 005AC946    mov         ebx,eax
 005AC948    test        ebx,ebx
>005AC94A    je          005AC963
 005AC94C    push        0
 005AC94E    push        0
 005AC950    mov         edx,edi
 005AC952    xor         ecx,ecx
 005AC954    mov         eax,ebx
 005AC956    call        TWinControl.ControlAtPos
 005AC95B    mov         esi,eax
 005AC95D    test        esi,esi
>005AC95F    jne         005AC963
 005AC961    mov         esi,ebx
 005AC963    mov         eax,esi
 005AC965    pop         edi
 005AC966    pop         esi
 005AC967    pop         ebx
 005AC968    ret
*}
end;

//005AC96C
procedure Error(ResStr:PResStringRec);
begin
{*
 005AC96C    push        ebp
 005AC96D    mov         ebp,esp
 005AC96F    push        ecx
 005AC970    mov         dword ptr [ebp-4],eax
 005AC973    push        dword ptr [ebp+4]
 005AC976    mov         ecx,dword ptr [ebp-4]
 005AC979    mov         dl,1
 005AC97B    mov         eax,[005A9F64];EMenuError
 005AC980    call        Exception.CreateRes
>005AC985    jmp         @RaiseExcept
 005AC98A    pop         ecx
 005AC98B    pop         ebp
 005AC98C    ret
*}
end;

//005AC990
function ShortCut(Key:Word; Shift:Classes.TShiftState):TShortCut;
begin
{*
 005AC990    push        ecx
 005AC991    mov         word ptr [esp],dx
 005AC995    xor         edx,edx
 005AC997    movzx       ecx,ax
 005AC99A    shr         ecx,8
 005AC99D    test        cl,cl
>005AC99F    jne         005AC9C4
 005AC9A1    mov         edx,eax
 005AC9A3    test        byte ptr [esp],1
>005AC9A7    je          005AC9AE
 005AC9A9    add         dx,2000
 005AC9AE    test        byte ptr [esp],4
>005AC9B2    je          005AC9B9
 005AC9B4    add         dx,4000
 005AC9B9    test        byte ptr [esp],2
>005AC9BD    je          005AC9C4
 005AC9BF    add         dx,8000
 005AC9C4    mov         eax,edx
 005AC9C6    pop         edx
 005AC9C7    ret
*}
end;

//005AC9C8
function GetSpecialName(ShortCut:Classes.TShortCut):UnicodeString;
begin
{*
 005AC9C8    push        ebx
 005AC9C9    push        esi
 005AC9CA    add         esp,0FFFFFE00
 005AC9D0    mov         esi,edx
 005AC9D2    mov         ebx,eax
 005AC9D4    mov         eax,esi
 005AC9D6    call        @UStrClr
 005AC9DB    push        0
 005AC9DD    movzx       eax,bl
 005AC9E0    push        eax
 005AC9E1    call        user32.MapVirtualKeyW
 005AC9E6    shl         eax,10
 005AC9E9    mov         ebx,eax
 005AC9EB    test        ebx,ebx
>005AC9ED    je          005ACA1A
 005AC9EF    push        100
 005AC9F4    lea         eax,[esp+4]
 005AC9F8    push        eax
 005AC9F9    push        ebx
 005AC9FA    call        user32.GetKeyNameTextW
 005AC9FF    test        eax,eax
>005ACA01    je          005ACA13
 005ACA03    mov         eax,esi
 005ACA05    mov         edx,esp
 005ACA07    mov         ecx,100
 005ACA0C    call        @UStrFromWArray
>005ACA11    jmp         005ACA1A
 005ACA13    mov         eax,esi
 005ACA15    call        @UStrClr
 005ACA1A    add         esp,200
 005ACA20    pop         esi
 005ACA21    pop         ebx
 005ACA22    ret
*}
end;

//005ACA24
function ShortCutToText(ShortCut:Classes.TShortCut):UnicodeString;
begin
{*
 005ACA24    push        ebp
 005ACA25    mov         ebp,esp
 005ACA27    push        0
 005ACA29    push        0
 005ACA2B    push        ebx
 005ACA2C    push        esi
 005ACA2D    push        edi
 005ACA2E    mov         esi,edx
 005ACA30    mov         edi,eax
 005ACA32    xor         eax,eax
 005ACA34    push        ebp
 005ACA35    push        5ACBFF
 005ACA3A    push        dword ptr fs:[eax]
 005ACA3D    mov         dword ptr fs:[eax],esp
 005ACA40    mov         ebx,edi
 005ACA42    movzx       eax,bl
 005ACA45    cmp         eax,2D
>005ACA48    jge         005ACA71
 005ACA4A    add         eax,0FFFFFFF8
 005ACA4D    sub         eax,2
>005ACA50    jb          005ACABA
 005ACA52    sub         eax,3
>005ACA55    je          005ACAD1
 005ACA57    sub         eax,0E
>005ACA5A    je          005ACAE4
 005ACA60    add         eax,0FFFFFFFB
 005ACA63    sub         eax,9
>005ACA66    jb          005ACAF7
>005ACA6C    jmp         005ACB7E
 005ACA71    cmp         eax,41
>005ACA74    jge         005ACA91
 005ACA76    add         eax,0FFFFFFD3
 005ACA79    sub         eax,2
>005ACA7C    jb          005ACB0E
 005ACA82    dec         eax
 005ACA83    sub         eax,0A
>005ACA86    jb          005ACB25
>005ACA8C    jmp         005ACB7E
 005ACA91    add         eax,0FFFFFFBF
 005ACA94    sub         eax,1A
>005ACA97    jb          005ACB38
 005ACA9D    add         eax,0FFFFFFFB
 005ACAA0    sub         eax,0A
>005ACAA3    jb          005ACB4B
 005ACAA9    add         eax,0FFFFFFFA
 005ACAAC    sub         eax,18
>005ACAAF    jb          005ACB5E
>005ACAB5    jmp         005ACB7E
 005ACABA    lea         eax,[ebp-4]
 005ACABD    movzx       edx,bl
 005ACAC0    mov         edx,dword ptr [edx*4+7A1B80]
 005ACAC7    call        @UStrLAsg
>005ACACC    jmp         005ACB88
 005ACAD1    lea         eax,[ebp-4]
 005ACAD4    mov         edx,dword ptr ds:[7A1BAC]
 005ACADA    call        @UStrLAsg
>005ACADF    jmp         005ACB88
 005ACAE4    lea         eax,[ebp-4]
 005ACAE7    mov         edx,dword ptr ds:[7A1BA8]
 005ACAED    call        @UStrLAsg
>005ACAF2    jmp         005ACB88
 005ACAF7    lea         eax,[ebp-4]
 005ACAFA    add         bl,4
 005ACAFD    movzx       edx,bl
 005ACB00    mov         edx,dword ptr [edx*4+7A1B20]
 005ACB07    call        @UStrLAsg
>005ACB0C    jmp         005ACB88
 005ACB0E    lea         eax,[ebp-4]
 005ACB11    add         bl,0D
 005ACB14    movzx       edx,bl
 005ACB17    mov         edx,dword ptr [edx*4+7A1AEC]
 005ACB1E    call        @UStrLAsg
>005ACB23    jmp         005ACB88
 005ACB25    lea         eax,[ebp-4]
 005ACB28    movzx       edx,bl
 005ACB2B    sub         edx,30
 005ACB2E    add         edx,30
 005ACB31    call        @UStrFromWChar
>005ACB36    jmp         005ACB88
 005ACB38    lea         eax,[ebp-4]
 005ACB3B    movzx       edx,bl
 005ACB3E    sub         edx,41
 005ACB41    add         edx,41
 005ACB44    call        @UStrFromWChar
>005ACB49    jmp         005ACB88
 005ACB4B    lea         eax,[ebp-4]
 005ACB4E    movzx       edx,bl
 005ACB51    sub         edx,60
 005ACB54    add         edx,30
 005ACB57    call        @UStrFromWChar
>005ACB5C    jmp         005ACB88
 005ACB5E    lea         edx,[ebp-8]
 005ACB61    movzx       eax,bl
 005ACB64    sub         eax,6F
 005ACB67    call        IntToStr
 005ACB6C    mov         ecx,dword ptr [ebp-8]
 005ACB6F    lea         eax,[ebp-4]
 005ACB72    mov         edx,5ACC1C;'F'
 005ACB77    call        @UStrCat3
>005ACB7C    jmp         005ACB88
 005ACB7E    lea         edx,[ebp-4]
 005ACB81    mov         eax,edi
 005ACB83    call        GetSpecialName
 005ACB88    cmp         dword ptr [ebp-4],0
>005ACB8C    je          005ACBDD
 005ACB8E    mov         eax,esi
 005ACB90    call        @UStrClr
 005ACB95    test        di,2000
>005ACB9A    je          005ACBA9
 005ACB9C    mov         eax,esi
 005ACB9E    mov         edx,dword ptr ds:[7A1BDC]
 005ACBA4    call        @UStrCat
 005ACBA9    test        di,4000
>005ACBAE    je          005ACBBD
 005ACBB0    mov         eax,esi
 005ACBB2    mov         edx,dword ptr ds:[7A1BE0]
 005ACBB8    call        @UStrCat
 005ACBBD    test        di,8000
>005ACBC2    je          005ACBD1
 005ACBC4    mov         eax,esi
 005ACBC6    mov         edx,dword ptr ds:[7A1BE4]
 005ACBCC    call        @UStrCat
 005ACBD1    mov         eax,esi
 005ACBD3    mov         edx,dword ptr [ebp-4]
 005ACBD6    call        @UStrCat
>005ACBDB    jmp         005ACBE4
 005ACBDD    mov         eax,esi
 005ACBDF    call        @UStrClr
 005ACBE4    xor         eax,eax
 005ACBE6    pop         edx
 005ACBE7    pop         ecx
 005ACBE8    pop         ecx
 005ACBE9    mov         dword ptr fs:[eax],edx
 005ACBEC    push        5ACC06
 005ACBF1    lea         eax,[ebp-8]
 005ACBF4    mov         edx,2
 005ACBF9    call        @UStrArrayClr
 005ACBFE    ret
>005ACBFF    jmp         @HandleFinally
>005ACC04    jmp         005ACBF1
 005ACC06    pop         edi
 005ACC07    pop         esi
 005ACC08    pop         ebx
 005ACC09    pop         ecx
 005ACC0A    pop         ecx
 005ACC0B    pop         ebp
 005ACC0C    ret
*}
end;

//005ACC20
function CompareFront(var Text:UnicodeString; const Front:UnicodeString):Boolean;
begin
{*
 005ACC20    push        ebp
 005ACC21    mov         ebp,esp
 005ACC23    add         esp,0FFFFFFF8
 005ACC26    push        ebx
 005ACC27    push        esi
 005ACC28    mov         ebx,edx
 005ACC2A    mov         dword ptr [ebp-4],eax
 005ACC2D    mov         byte ptr [ebp-5],0
 005ACC31    mov         eax,dword ptr [ebp-4]
 005ACC34    mov         eax,dword ptr [eax]
 005ACC36    test        eax,eax
>005ACC38    je          005ACC3F
 005ACC3A    sub         eax,4
 005ACC3D    mov         eax,dword ptr [eax]
 005ACC3F    mov         edx,ebx
 005ACC41    test        edx,edx
>005ACC43    je          005ACC4A
 005ACC45    sub         edx,4
 005ACC48    mov         edx,dword ptr [edx]
 005ACC4A    cmp         edx,eax
>005ACC4C    jg          005ACC96
 005ACC4E    mov         esi,ebx
 005ACC50    test        esi,esi
>005ACC52    je          005ACC59
 005ACC54    sub         esi,4
 005ACC57    mov         esi,dword ptr [esi]
 005ACC59    mov         eax,ebx
 005ACC5B    call        @UStrToPWChar
 005ACC60    push        eax
 005ACC61    mov         eax,dword ptr [ebp-4]
 005ACC64    mov         eax,dword ptr [eax]
 005ACC66    call        @UStrToPWChar
 005ACC6B    mov         ecx,esi
 005ACC6D    pop         edx
 005ACC6E    call        AnsiStrLIComp
 005ACC73    test        eax,eax
>005ACC75    jne         005ACC96
 005ACC77    mov         byte ptr [ebp-5],1
 005ACC7B    mov         eax,ebx
 005ACC7D    test        eax,eax
>005ACC7F    je          005ACC86
 005ACC81    sub         eax,4
 005ACC84    mov         eax,dword ptr [eax]
 005ACC86    mov         edx,dword ptr [ebp-4]
 005ACC89    mov         ecx,eax
 005ACC8B    mov         eax,1
 005ACC90    xchg        eax,edx
 005ACC91    call        @UStrDelete
 005ACC96    movzx       eax,byte ptr [ebp-5]
 005ACC9A    pop         esi
 005ACC9B    pop         ebx
 005ACC9C    pop         ecx
 005ACC9D    pop         ecx
 005ACC9E    pop         ebp
 005ACC9F    ret
*}
end;

//005ACCA0
function TextToShortCut(Text:UnicodeString):TShortCut;
begin
{*
 005ACCA0    push        ebp
 005ACCA1    mov         ebp,esp
 005ACCA3    add         esp,0FFFFFFF8
 005ACCA6    push        ebx
 005ACCA7    push        esi
 005ACCA8    push        edi
 005ACCA9    xor         edx,edx
 005ACCAB    mov         dword ptr [ebp-8],edx
 005ACCAE    mov         dword ptr [ebp-4],eax
 005ACCB1    mov         eax,dword ptr [ebp-4]
 005ACCB4    call        @UStrAddRef
 005ACCB9    xor         eax,eax
 005ACCBB    push        ebp
 005ACCBC    push        5ACD7B
 005ACCC1    push        dword ptr fs:[eax]
 005ACCC4    mov         dword ptr fs:[eax],esp
 005ACCC7    xor         edi,edi
 005ACCC9    xor         esi,esi
 005ACCCB    lea         eax,[ebp-4]
 005ACCCE    mov         edx,dword ptr ds:[7A1BDC]
 005ACCD4    call        CompareFront
 005ACCD9    test        al,al
>005ACCDB    je          005ACCE4
 005ACCDD    or          si,2000
>005ACCE2    jmp         005ACCCB
 005ACCE4    lea         eax,[ebp-4]
 005ACCE7    mov         edx,5ACD98;'^'
 005ACCEC    call        CompareFront
 005ACCF1    test        al,al
>005ACCF3    je          005ACCFC
 005ACCF5    or          si,4000
>005ACCFA    jmp         005ACCCB
 005ACCFC    lea         eax,[ebp-4]
 005ACCFF    mov         edx,dword ptr ds:[7A1BE0]
 005ACD05    call        CompareFront
 005ACD0A    test        al,al
>005ACD0C    je          005ACD15
 005ACD0E    or          si,4000
>005ACD13    jmp         005ACCCB
 005ACD15    lea         eax,[ebp-4]
 005ACD18    mov         edx,dword ptr ds:[7A1BE4]
 005ACD1E    call        CompareFront
 005ACD23    test        al,al
>005ACD25    je          005ACD2E
 005ACD27    or          si,8000
>005ACD2C    jmp         005ACCCB
 005ACD2E    cmp         dword ptr [ebp-4],0
>005ACD32    je          005ACD60
 005ACD34    mov         bx,8
 005ACD38    lea         edx,[ebp-8]
 005ACD3B    mov         eax,ebx
 005ACD3D    call        ShortCutToText
 005ACD42    mov         edx,dword ptr [ebp-8]
 005ACD45    mov         eax,dword ptr [ebp-4]
 005ACD48    call        AnsiCompareText
 005ACD4D    test        eax,eax
>005ACD4F    jne         005ACD58
 005ACD51    mov         edi,ebx
 005ACD53    or          di,si
>005ACD56    jmp         005ACD60
 005ACD58    inc         ebx
 005ACD59    cmp         bx,256
>005ACD5E    jne         005ACD38
 005ACD60    xor         eax,eax
 005ACD62    pop         edx
 005ACD63    pop         ecx
 005ACD64    pop         ecx
 005ACD65    mov         dword ptr fs:[eax],edx
 005ACD68    push        5ACD82
 005ACD6D    lea         eax,[ebp-8]
 005ACD70    mov         edx,2
 005ACD75    call        @UStrArrayClr
 005ACD7A    ret
>005ACD7B    jmp         @HandleFinally
>005ACD80    jmp         005ACD6D
 005ACD82    mov         eax,edi
 005ACD84    pop         edi
 005ACD85    pop         esi
 005ACD86    pop         ebx
 005ACD87    pop         ecx
 005ACD88    pop         ecx
 005ACD89    pop         ebp
 005ACD8A    ret
*}
end;

//005ACD9C
function UniqueCommand:Word;
begin
{*
 005ACD9C    push        ebx
 005ACD9D    mov         eax,[007CA784];gvar_007CA784
 005ACDA2    call        TBits.OpenBit
 005ACDA7    mov         ebx,eax
 005ACDA9    movzx       edx,bx
 005ACDAC    mov         cl,1
 005ACDAE    mov         eax,[007CA784];gvar_007CA784
 005ACDB3    call        TBits.SetBit
 005ACDB8    mov         eax,ebx
 005ACDBA    pop         ebx
 005ACDBB    ret
*}
end;

//005ACDBC
{*function sub_005ACDBC(?:?; ?:?; ?:?; ?:?):?;
begin
 005ACDBC    push        ebp
 005ACDBD    mov         ebp,esp
 005ACDBF    add         esp,0FFFFFFF4
 005ACDC2    push        ebx
 005ACDC3    push        esi
 005ACDC4    mov         dword ptr [ebp-8],ecx
 005ACDC7    mov         esi,edx
 005ACDC9    mov         ebx,eax
 005ACDCB    mov         byte ptr [ebp-9],0
 005ACDCF    test        esi,esi
>005ACDD1    je          005ACE14
>005ACDD3    jmp         005ACE03
 005ACDD5    mov         edx,dword ptr [ebx]
 005ACDD7    mov         eax,esi
 005ACDD9    call        TMenuItem.GetItem
 005ACDDE    mov         dword ptr [ebp-4],eax
 005ACDE1    mov         eax,dword ptr [ebp-4]
 005ACDE4    movzx       eax,byte ptr [eax+4B];TMenuItem.FGroupIndex:byte
 005ACDE8    mov         edx,dword ptr [ebp+8]
 005ACDEB    cmp         eax,dword ptr [edx-4]
>005ACDEE    jg          005ACE14
 005ACDF0    mov         eax,dword ptr [ebp-4]
 005ACDF3    mov         edx,dword ptr [ebp+8]
 005ACDF6    push        dword ptr [edx]
 005ACDF8    call        dword ptr [ebp-8]
 005ACDFB    add         esp,4
 005ACDFE    mov         byte ptr [ebp-9],al
 005ACE01    inc         dword ptr [ebx]
 005ACE03    cmp         byte ptr [ebp-9],0
>005ACE07    jne         005ACE14
 005ACE09    mov         eax,esi
 005ACE0B    call        TMenuItem.GetCount
 005ACE10    cmp         eax,dword ptr [ebx]
>005ACE12    jg          005ACDD5
 005ACE14    movzx       eax,byte ptr [ebp-9]
 005ACE18    pop         esi
 005ACE19    pop         ebx
 005ACE1A    mov         esp,ebp
 005ACE1C    pop         ebp
 005ACE1D    ret
end;*}

//005ACE20
procedure IterateMenus(Func:TIterator; Menu1:TMenuItem; Menu2:TMenuItem);
begin
{*
 005ACE20    push        ebp
 005ACE21    mov         ebp,esp
 005ACE23    add         esp,0FFFFFFE8
 005ACE26    push        ebx
 005ACE27    push        esi
 005ACE28    push        edi
 005ACE29    mov         dword ptr [ebp-0C],ecx
 005ACE2C    mov         edi,edx
 005ACE2E    mov         dword ptr [ebp-8],eax
 005ACE31    xor         eax,eax
 005ACE33    mov         dword ptr [ebp-10],eax
 005ACE36    xor         eax,eax
 005ACE38    mov         dword ptr [ebp-14],eax
 005ACE3B    xor         ebx,ebx
 005ACE3D    xor         esi,esi
 005ACE3F    test        edi,edi
>005ACE41    je          005ACE4C
 005ACE43    mov         eax,edi
 005ACE45    call        TMenuItem.GetCount
 005ACE4A    mov         ebx,eax
 005ACE4C    cmp         dword ptr [ebp-0C],0
>005ACE50    je          005ACE5C
 005ACE52    mov         eax,dword ptr [ebp-0C]
 005ACE55    call        TMenuItem.GetCount
 005ACE5A    mov         esi,eax
 005ACE5C    mov         byte ptr [ebp-16],0
>005ACE60    jmp         005ACF0F
 005ACE65    mov         dword ptr [ebp-4],0FF
 005ACE6C    mov         byte ptr [ebp-15],0FF
 005ACE70    cmp         ebx,dword ptr [ebp-10]
>005ACE73    jle         005ACE86
 005ACE75    mov         edx,dword ptr [ebp-10]
 005ACE78    mov         eax,edi
 005ACE7A    call        TMenuItem.GetItem
 005ACE7F    movzx       eax,byte ptr [eax+4B]
 005ACE83    mov         dword ptr [ebp-4],eax
 005ACE86    cmp         esi,dword ptr [ebp-14]
>005ACE89    jle         005ACE9D
 005ACE8B    mov         edx,dword ptr [ebp-14]
 005ACE8E    mov         eax,dword ptr [ebp-0C]
 005ACE91    call        TMenuItem.GetItem
 005ACE96    movzx       eax,byte ptr [eax+4B]
 005ACE9A    mov         byte ptr [ebp-15],al
 005ACE9D    movzx       eax,byte ptr [ebp-15]
 005ACEA1    cmp         eax,dword ptr [ebp-4]
>005ACEA4    jl          005ACEBA
 005ACEA6    push        ebp
 005ACEA7    lea         eax,[ebp-10]
 005ACEAA    mov         ecx,dword ptr [ebp-8]
 005ACEAD    mov         edx,edi
 005ACEAF    call        005ACDBC
 005ACEB4    pop         ecx
 005ACEB5    mov         byte ptr [ebp-16],al
>005ACEB8    jmp         005ACED9
 005ACEBA    movzx       eax,byte ptr [ebp-15]
 005ACEBE    mov         dword ptr [ebp-4],eax
 005ACEC1    push        ebp
 005ACEC2    lea         eax,[ebp-14]
 005ACEC5    mov         ecx,dword ptr [ebp-8]
 005ACEC8    mov         edx,dword ptr [ebp-0C]
 005ACECB    call        005ACDBC
 005ACED0    pop         ecx
 005ACED1    mov         byte ptr [ebp-16],al
>005ACED4    jmp         005ACED9
 005ACED6    inc         dword ptr [ebp-10]
 005ACED9    cmp         ebx,dword ptr [ebp-10]
>005ACEDC    jle         005ACEF6
 005ACEDE    mov         edx,dword ptr [ebp-10]
 005ACEE1    mov         eax,edi
 005ACEE3    call        TMenuItem.GetItem
 005ACEE8    movzx       eax,byte ptr [eax+4B]
 005ACEEC    cmp         eax,dword ptr [ebp-4]
>005ACEEF    jle         005ACED6
>005ACEF1    jmp         005ACEF6
 005ACEF3    inc         dword ptr [ebp-14]
 005ACEF6    cmp         esi,dword ptr [ebp-14]
>005ACEF9    jle         005ACF0F
 005ACEFB    mov         edx,dword ptr [ebp-14]
 005ACEFE    mov         eax,dword ptr [ebp-0C]
 005ACF01    call        TMenuItem.GetItem
 005ACF06    movzx       eax,byte ptr [eax+4B]
 005ACF0A    cmp         eax,dword ptr [ebp-4]
>005ACF0D    jle         005ACEF3
 005ACF0F    cmp         byte ptr [ebp-16],0
>005ACF13    jne         005ACF27
 005ACF15    cmp         ebx,dword ptr [ebp-10]
>005ACF18    jg          005ACE65
 005ACF1E    cmp         esi,dword ptr [ebp-14]
>005ACF21    jg          005ACE65
 005ACF27    pop         edi
 005ACF28    pop         esi
 005ACF29    pop         ebx
 005ACF2A    mov         esp,ebp
 005ACF2C    pop         ebp
 005ACF2D    ret
*}
end;

//005ACF30
procedure TMenuActionLink.AssignClient(AClient:TObject);
begin
{*
 005ACF30    push        ebx
 005ACF31    push        esi
 005ACF32    mov         esi,edx
 005ACF34    mov         ebx,eax
 005ACF36    mov         eax,esi
 005ACF38    mov         edx,dword ptr ds:[5AA664];TMenuItem
 005ACF3E    call        @AsClass
 005ACF43    mov         dword ptr [ebx+18],eax
 005ACF46    pop         esi
 005ACF47    pop         ebx
 005ACF48    ret
*}
end;

//005ACF4C
{*function sub_005ACF4C:?;
begin
 005ACF4C    push        ebx
 005ACF4D    push        esi
 005ACF4E    mov         ebx,eax
 005ACF50    mov         esi,dword ptr [ebx+10];TMenuActionLink.FAction:TBasicAction
 005ACF53    mov         eax,esi
 005ACF55    mov         edx,dword ptr ds:[4D55AC];TCustomAction
 005ACF5B    call        @IsClass
 005ACF60    test        al,al
>005ACF62    je          005ACF73
 005ACF64    mov         eax,dword ptr [ebx+18];TMenuActionLink..................FClient:TMenuItem
 005ACF67    movzx       eax,byte ptr [eax+0B8];TMenuItem.FAutoCheck:Boolean
 005ACF6E    cmp         al,byte ptr [esi+6A]
>005ACF71    je          005ACF78
 005ACF73    xor         eax,eax
 005ACF75    pop         esi
 005ACF76    pop         ebx
 005ACF77    ret
 005ACF78    mov         al,1
 005ACF7A    pop         esi
 005ACF7B    pop         ebx
 005ACF7C    ret
end;*}

//005ACF80
{*function TMenuActionLink.IsCaptionLinked:?;
begin
 005ACF80    push        ebx
 005ACF81    mov         ebx,eax
 005ACF83    mov         eax,ebx
 005ACF85    call        TContainedActionLink.IsCaptionLinked
 005ACF8A    test        al,al
>005ACF8C    je          005ACFA3
 005ACF8E    mov         eax,dword ptr [ebx+10];TMenuActionLink.FAction:TBasicAction
 005ACF91    mov         edx,dword ptr [eax+6C]
 005ACF94    mov         eax,dword ptr [ebx+18];TMenuActionLink...................FClient:TMenuItem
 005ACF97    mov         eax,dword ptr [eax+40];TMenuItem.FCaption:string
 005ACF9A    call        005B3888
 005ACF9F    test        al,al
>005ACFA1    jne         005ACFA7
 005ACFA3    xor         eax,eax
 005ACFA5    pop         ebx
 005ACFA6    ret
 005ACFA7    mov         al,1
 005ACFA9    pop         ebx
 005ACFAA    ret
end;*}

//005ACFAC
{*function TMenuActionLink.IsCheckedLinked:?;
begin
 005ACFAC    push        ebx
 005ACFAD    mov         ebx,eax
 005ACFAF    mov         eax,ebx
 005ACFB1    call        TContainedActionLink.IsCheckedLinked
 005ACFB6    test        al,al
>005ACFB8    je          005ACFC9
 005ACFBA    mov         eax,dword ptr [ebx+18];TMenuActionLink....................FClient:TMenuItem
 005ACFBD    movzx       eax,byte ptr [eax+44];TMenuItem.FChecked:Boolean
 005ACFC1    mov         edx,dword ptr [ebx+10];TMenuActionLink.FAction:TBasicAction
 005ACFC4    cmp         al,byte ptr [edx+70]
>005ACFC7    je          005ACFCD
 005ACFC9    xor         eax,eax
 005ACFCB    pop         ebx
 005ACFCC    ret
 005ACFCD    mov         al,1
 005ACFCF    pop         ebx
 005ACFD0    ret
end;*}

//005ACFD4
{*function TMenuActionLink.IsEnabledLinked:?;
begin
 005ACFD4    push        ebx
 005ACFD5    mov         ebx,eax
 005ACFD7    mov         eax,ebx
 005ACFD9    call        TContainedActionLink.IsEnabledLinked
 005ACFDE    test        al,al
>005ACFE0    je          005ACFF1
 005ACFE2    mov         eax,dword ptr [ebx+18];TMenuActionLink.....................FClient:TMenuItem
 005ACFE5    movzx       eax,byte ptr [eax+45];TMenuItem.FEnabled:Boolean
 005ACFE9    mov         edx,dword ptr [ebx+10];TMenuActionLink.FAction:TBasicAction
 005ACFEC    cmp         al,byte ptr [edx+71]
>005ACFEF    je          005ACFF5
 005ACFF1    xor         eax,eax
 005ACFF3    pop         ebx
 005ACFF4    ret
 005ACFF5    mov         al,1
 005ACFF7    pop         ebx
 005ACFF8    ret
end;*}

//005ACFFC
{*function TMenuActionLink.IsHelpContextLinked:?;
begin
 005ACFFC    push        ebx
 005ACFFD    mov         ebx,eax
 005ACFFF    mov         eax,ebx
 005AD001    call        TContainedActionLink.IsHelpContextLinked
 005AD006    test        al,al
>005AD008    je          005AD018
 005AD00A    mov         eax,dword ptr [ebx+18];TMenuActionLink......................FClient:TMenuItem
 005AD00D    mov         eax,dword ptr [eax+60];TMenuItem.FHelpContext:THelpContext
 005AD010    mov         edx,dword ptr [ebx+10];TMenuActionLink.FAction:TBasicAction
 005AD013    cmp         eax,dword ptr [edx+78]
>005AD016    je          005AD01C
 005AD018    xor         eax,eax
 005AD01A    pop         ebx
 005AD01B    ret
 005AD01C    mov         al,1
 005AD01E    pop         ebx
 005AD01F    ret
end;*}

//005AD020
{*function TMenuActionLink.IsHintLinked:?;
begin
 005AD020    push        ebx
 005AD021    mov         ebx,eax
 005AD023    mov         eax,ebx
 005AD025    call        TContainedActionLink.IsHintLinked
 005AD02A    test        al,al
>005AD02C    je          005AD044
 005AD02E    mov         eax,dword ptr [ebx+18];TMenuActionLink.......................FClient:TMenuItem
 005AD031    mov         eax,dword ptr [eax+64];TMenuItem.FHint:string
 005AD034    mov         edx,dword ptr [ebx+10];TMenuActionLink.FAction:TBasicAction
 005AD037    mov         edx,dword ptr [edx+84]
 005AD03D    call        @UStrEqual
>005AD042    je          005AD048
 005AD044    xor         eax,eax
 005AD046    pop         ebx
 005AD047    ret
 005AD048    mov         al,1
 005AD04A    pop         ebx
 005AD04B    ret
end;*}

//005AD04C
{*function TMenuActionLink.IsGroupIndexLinked:?;
begin
 005AD04C    push        ebx
 005AD04D    mov         ebx,eax
 005AD04F    mov         eax,ebx
 005AD051    call        TContainedActionLink.IsGroupIndexLinked
 005AD056    test        al,al
>005AD058    je          005AD072
 005AD05A    mov         eax,dword ptr [ebx+18];TMenuActionLink........................FClient:TMenuItem
 005AD05D    cmp         byte ptr [eax+49],0;TMenuItem.FRadioItem:Boolean
>005AD061    je          005AD072
 005AD063    mov         eax,dword ptr [ebx+18];TMenuActionLink.........................FClient:TMenuItem
 005AD066    movzx       eax,byte ptr [eax+4B];TMenuItem.FGroupIndex:byte
 005AD06A    mov         edx,dword ptr [ebx+10];TMenuActionLink.FAction:TBasicAction
 005AD06D    cmp         eax,dword ptr [edx+74]
>005AD070    je          005AD076
 005AD072    xor         eax,eax
 005AD074    pop         ebx
 005AD075    ret
 005AD076    mov         al,1
 005AD078    pop         ebx
 005AD079    ret
end;*}

//005AD07C
{*function TMenuActionLink.IsImageIndexLinked:?;
begin
 005AD07C    push        ebx
 005AD07D    mov         ebx,eax
 005AD07F    mov         eax,ebx
 005AD081    call        TContainedActionLink.IsImageIndexLinked
 005AD086    test        al,al
>005AD088    je          005AD09B
 005AD08A    mov         eax,dword ptr [ebx+18];TMenuActionLink..........................FClient:TMenuItem
 005AD08D    mov         eax,dword ptr [eax+4C];TMenuItem.FImageIndex:TImageIndex
 005AD090    mov         edx,dword ptr [ebx+10];TMenuActionLink.FAction:TBasicAction
 005AD093    cmp         eax,dword ptr [edx+90]
>005AD099    je          005AD09F
 005AD09B    xor         eax,eax
 005AD09D    pop         ebx
 005AD09E    ret
 005AD09F    mov         al,1
 005AD0A1    pop         ebx
 005AD0A2    ret
end;*}

//005AD0A4
{*function TMenuActionLink.IsShortCutLinked:?;
begin
 005AD0A4    push        ebx
 005AD0A5    mov         ebx,eax
 005AD0A7    mov         eax,ebx
 005AD0A9    call        TContainedActionLink.IsShortCutLinked
 005AD0AE    test        al,al
>005AD0B0    je          005AD0C5
 005AD0B2    mov         eax,dword ptr [ebx+18];TMenuActionLink...........................FClient:TMenuItem
 005AD0B5    movzx       eax,word ptr [eax+6C];TMenuItem.FShortCut:TShortCut
 005AD0B9    mov         edx,dword ptr [ebx+10];TMenuActionLink.FAction:TBasicAction
 005AD0BC    cmp         ax,word ptr [edx+8A]
>005AD0C3    je          005AD0C9
 005AD0C5    xor         eax,eax
 005AD0C7    pop         ebx
 005AD0C8    ret
 005AD0C9    mov         al,1
 005AD0CB    pop         ebx
 005AD0CC    ret
end;*}

//005AD0D0
{*function TMenuActionLink.IsStatusActionLinked:?;
begin
 005AD0D0    push        ebx
 005AD0D1    mov         ebx,eax
 005AD0D3    mov         eax,ebx
 005AD0D5    call        TContainedActionLink.IsStatusActionLinked
 005AD0DA    test        al,al
>005AD0DC    je          005AD0F0
 005AD0DE    mov         eax,dword ptr [ebx+18];TMenuActionLink............................FClient:TMenuItem
 005AD0E1    movzx       eax,byte ptr [eax+4A];TMenuItem.FVisible:Boolean
 005AD0E5    mov         edx,dword ptr [ebx+10];TMenuActionLink.FAction:TBasicAction
 005AD0E8    cmp         al,byte ptr [edx+88]
>005AD0EE    je          005AD0F4
 005AD0F0    xor         eax,eax
 005AD0F2    pop         ebx
 005AD0F3    ret
 005AD0F4    mov         al,1
 005AD0F6    pop         ebx
 005AD0F7    ret
end;*}

//005AD0F8
{*function sub_005AD0F8:?;
begin
 005AD0F8    push        ebx
 005AD0F9    mov         ebx,eax
 005AD0FB    mov         eax,ebx
 005AD0FD    call        0049FCE8
 005AD102    test        al,al
>005AD104    je          005AD117
 005AD106    mov         eax,dword ptr [ebx+18];TMenuActionLink.............................FClient:TMenuItem
 005AD109    mov         eax,dword ptr [eax+98];TMenuItem.FOnClick:TNotifyEvent
 005AD10F    mov         edx,dword ptr [ebx+10];TMenuActionLink.FAction:TBasicAction
 005AD112    cmp         eax,dword ptr [edx+50];TBasicAction.FOnExecute:TNotifyEvent
>005AD115    je          005AD11B
 005AD117    xor         eax,eax
 005AD119    pop         ebx
 005AD11A    ret
 005AD11B    mov         al,1
 005AD11D    pop         ebx
 005AD11E    ret
end;*}

//005AD120
{*procedure sub_005AD120(?:?);
begin
 005AD120    push        ebx
 005AD121    push        esi
 005AD122    mov         ebx,edx
 005AD124    mov         esi,eax
 005AD126    mov         eax,esi
 005AD128    mov         edx,dword ptr [eax]
 005AD12A    call        dword ptr [edx+84];TMenuActionLink.sub_005ACF4C
 005AD130    test        al,al
>005AD132    je          005AD13D
 005AD134    mov         eax,dword ptr [esi+18];TMenuActionLink..............................FClient:TMenuItem
 005AD137    mov         byte ptr [eax+0B8],bl;TMenuItem.FAutoCheck:Boolean
 005AD13D    pop         esi
 005AD13E    pop         ebx
 005AD13F    ret
end;*}

//005AD140
procedure TMenuActionLink.SetCaption(const Value:UnicodeString);
begin
{*
 005AD140    push        ebx
 005AD141    push        esi
 005AD142    mov         esi,edx
 005AD144    mov         ebx,eax
 005AD146    mov         eax,ebx
 005AD148    mov         edx,dword ptr [eax]
 005AD14A    call        dword ptr [edx+24]
 005AD14D    test        al,al
>005AD14F    je          005AD15B
 005AD151    mov         edx,esi
 005AD153    mov         eax,dword ptr [ebx+18]
 005AD156    call        TMenuItem.SetCaption
 005AD15B    pop         esi
 005AD15C    pop         ebx
 005AD15D    ret
*}
end;

//005AD160
procedure TMenuActionLink.SetChecked(Value:Boolean);
begin
{*
 005AD160    push        ebx
 005AD161    push        esi
 005AD162    mov         ebx,edx
 005AD164    mov         esi,eax
 005AD166    mov         eax,esi
 005AD168    mov         edx,dword ptr [eax]
 005AD16A    call        dword ptr [edx+28]
 005AD16D    test        al,al
>005AD16F    je          005AD17B
 005AD171    mov         edx,ebx
 005AD173    mov         eax,dword ptr [esi+18]
 005AD176    call        TMenuItem.SetChecked
 005AD17B    pop         esi
 005AD17C    pop         ebx
 005AD17D    ret
*}
end;

//005AD180
procedure TMenuActionLink.SetEnabled(Value:Boolean);
begin
{*
 005AD180    push        ebx
 005AD181    push        esi
 005AD182    mov         ebx,edx
 005AD184    mov         esi,eax
 005AD186    mov         eax,esi
 005AD188    mov         edx,dword ptr [eax]
 005AD18A    call        dword ptr [edx+2C]
 005AD18D    test        al,al
>005AD18F    je          005AD19B
 005AD191    mov         edx,ebx
 005AD193    mov         eax,dword ptr [esi+18]
 005AD196    call        TMenuItem.SetEnabled
 005AD19B    pop         esi
 005AD19C    pop         ebx
 005AD19D    ret
*}
end;

//005AD1A0
{*procedure sub_005AD1A0(?:?);
begin
 005AD1A0    push        ebx
 005AD1A1    push        esi
 005AD1A2    mov         esi,edx
 005AD1A4    mov         ebx,eax
 005AD1A6    mov         eax,ebx
 005AD1A8    mov         edx,dword ptr [eax]
 005AD1AA    call        dword ptr [edx+34];TMenuActionLink.IsHelpContextLinked
 005AD1AD    test        al,al
>005AD1AF    je          005AD1B7
 005AD1B1    mov         eax,dword ptr [ebx+18];TMenuActionLink...............................FClient:TMenuItem
 005AD1B4    mov         dword ptr [eax+60],esi;TMenuItem.FHelpContext:THelpContext
 005AD1B7    pop         esi
 005AD1B8    pop         ebx
 005AD1B9    ret
end;*}

//005AD1BC
{*procedure sub_005AD1BC(?:?);
begin
 005AD1BC    push        ebx
 005AD1BD    push        esi
 005AD1BE    mov         esi,edx
 005AD1C0    mov         ebx,eax
 005AD1C2    mov         eax,ebx
 005AD1C4    mov         edx,dword ptr [eax]
 005AD1C6    call        dword ptr [edx+3C];TMenuActionLink.IsHintLinked
 005AD1C9    test        al,al
>005AD1CB    je          005AD1DA
 005AD1CD    mov         eax,dword ptr [ebx+18];TMenuActionLink................................FClient:TMenuItem
 005AD1D0    add         eax,64;TMenuItem.FHint:string
 005AD1D3    mov         edx,esi
 005AD1D5    call        @UStrAsg
 005AD1DA    pop         esi
 005AD1DB    pop         ebx
 005AD1DC    ret
end;*}

//005AD1E0
procedure TMenuActionLink.SetImageIndex(Value:Integer);
begin
{*
 005AD1E0    push        ebx
 005AD1E1    push        esi
 005AD1E2    mov         esi,edx
 005AD1E4    mov         ebx,eax
 005AD1E6    mov         eax,ebx
 005AD1E8    mov         edx,dword ptr [eax]
 005AD1EA    call        dword ptr [edx+40]
 005AD1ED    test        al,al
>005AD1EF    je          005AD1FB
 005AD1F1    mov         edx,esi
 005AD1F3    mov         eax,dword ptr [ebx+18]
 005AD1F6    call        TMenuItem.SetImageIndex
 005AD1FB    pop         esi
 005AD1FC    pop         ebx
 005AD1FD    ret
*}
end;

//005AD200
procedure TMenuActionLink.SetShortCut(Value:Classes.TShortCut);
begin
{*
 005AD200    push        ebx
 005AD201    push        esi
 005AD202    mov         esi,edx
 005AD204    mov         ebx,eax
 005AD206    mov         eax,ebx
 005AD208    mov         edx,dword ptr [eax]
 005AD20A    call        dword ptr [edx+44]
 005AD20D    test        al,al
>005AD20F    je          005AD21B
 005AD211    mov         edx,esi
 005AD213    mov         eax,dword ptr [ebx+18]
 005AD216    call        TMenuItem.SetShortCut
 005AD21B    pop         esi
 005AD21C    pop         ebx
 005AD21D    ret
*}
end;

//005AD220
procedure TMenuActionLink.SetVisible(Value:Boolean);
begin
{*
 005AD220    push        ebx
 005AD221    push        esi
 005AD222    mov         ebx,edx
 005AD224    mov         esi,eax
 005AD226    mov         eax,esi
 005AD228    mov         edx,dword ptr [eax]
 005AD22A    call        dword ptr [edx+48]
 005AD22D    test        al,al
>005AD22F    je          005AD23B
 005AD231    mov         edx,ebx
 005AD233    mov         eax,dword ptr [esi+18]
 005AD236    call        TMenuItem.SetVisible
 005AD23B    pop         esi
 005AD23C    pop         ebx
 005AD23D    ret
*}
end;

//005AD240
{*procedure sub_005AD240(?:?; ?:?);
begin
 005AD240    push        ebp
 005AD241    mov         ebp,esp
 005AD243    push        ebx
 005AD244    mov         ebx,eax
 005AD246    mov         eax,ebx
 005AD248    mov         edx,dword ptr [eax]
 005AD24A    call        dword ptr [edx+8];TMenuActionLink.sub_005AD0F8
 005AD24D    test        al,al
>005AD24F    je          005AD266
 005AD251    mov         eax,dword ptr [ebx+18];TMenuActionLink.................................FClient:TMenuItem
 005AD254    mov         edx,dword ptr [ebp+8]
 005AD257    mov         dword ptr [eax+98],edx;TMenuItem.FOnClick:TNotifyEvent
 005AD25D    mov         edx,dword ptr [ebp+0C]
 005AD260    mov         dword ptr [eax+9C],edx;TMenuItem.?f9C:TPopupMenu
 005AD266    pop         ebx
 005AD267    pop         ebp
 005AD268    ret         8
end;*}

//005AD26C
function TMenuItemEnumerator.GetCurrent:TMenuItem;
begin
{*
 005AD26C    mov         edx,dword ptr [eax+4]
 005AD26F    mov         eax,dword ptr [eax+8]
 005AD272    call        TMenuItem.GetItem
 005AD277    ret
*}
end;

//005AD278
constructor TMenuItem.Create(AOwner:TComponent);
begin
{*
 005AD278    push        ebp
 005AD279    mov         ebp,esp
 005AD27B    push        ecx
 005AD27C    push        ebx
 005AD27D    push        esi
 005AD27E    test        dl,dl
>005AD280    je          005AD28A
 005AD282    add         esp,0FFFFFFF0
 005AD285    call        @ClassCreate
 005AD28A    mov         byte ptr [ebp-1],dl
 005AD28D    mov         ebx,eax
 005AD28F    xor         edx,edx
 005AD291    mov         eax,ebx
 005AD293    call        TComponent.Create
 005AD298    mov         byte ptr [ebx+4A],1;TMenuItem.FVisible:Boolean
 005AD29C    mov         byte ptr [ebx+45],1;TMenuItem.FEnabled:Boolean
 005AD2A0    mov         byte ptr [ebx+47],2;TMenuItem.FAutoHotkeys:TMenuItemAutoFlag
 005AD2A4    mov         byte ptr [ebx+48],2;TMenuItem.FAutoLineReduction:TMenuItemAutoFlag
 005AD2A8    call        UniqueCommand
 005AD2AD    mov         word ptr [ebx+5C],ax;TMenuItem.FCommand:word
 005AD2B1    mov         dword ptr [ebx+4C],0FFFFFFFF;TMenuItem.FImageIndex:TImageIndex
 005AD2B8    lea         eax,[ebx+64];TMenuItem.FHint:string
 005AD2BB    call        @UStrClr
 005AD2C0    mov         dl,1
 005AD2C2    mov         eax,[005A6CE0];TChangeLink
 005AD2C7    call        TChangeLink.Create;TChangeLink.Create
 005AD2CC    mov         esi,eax
 005AD2CE    mov         dword ptr [ebx+84],esi;TMenuItem.FImageChangeLink:TChangeLink
 005AD2D4    mov         dword ptr [esi+14],ebx;TChangeLink.?f14:TCustomActionList
 005AD2D7    mov         dword ptr [esi+10],5B10C8;TChangeLink.FOnChange:TNotifyEvent
 005AD2DE    mov         eax,ebx
 005AD2E0    cmp         byte ptr [ebp-1],0
>005AD2E4    je          005AD2F5
 005AD2E6    call        @AfterConstruction
 005AD2EB    pop         dword ptr fs:[0]
 005AD2F2    add         esp,0C
 005AD2F5    mov         eax,ebx
 005AD2F7    pop         esi
 005AD2F8    pop         ebx
 005AD2F9    pop         ecx
 005AD2FA    pop         ebp
 005AD2FB    ret
*}
end;

//005AD2FC
destructor TMenuItem.Destroy();
begin
{*
 005AD2FC    push        ebx
 005AD2FD    push        esi
 005AD2FE    add         esp,0FFFFFFF4
 005AD301    call        @BeforeDestruction
 005AD306    mov         ebx,edx
 005AD308    mov         esi,eax
 005AD30A    mov         edx,esi
 005AD30C    mov         eax,[007CA77C];gvar_007CA77C
 005AD311    call        TMenuItemStack.ClearItem
 005AD316    mov         eax,dword ptr [esi+70];TMenuItem.FParent:TMenuItem
 005AD319    test        eax,eax
>005AD31B    je          005AD339
 005AD31D    mov         edx,esi
 005AD31F    call        TMenuItem.Remove
 005AD324    xor         eax,eax
 005AD326    mov         dword ptr [esi+70],eax;TMenuItem.FParent:TMenuItem
>005AD329    jmp         005AD339
 005AD32B    xor         edx,edx
 005AD32D    mov         eax,esi
 005AD32F    call        TMenuItem.GetItem
 005AD334    call        TObject.Free
 005AD339    mov         eax,esi
 005AD33B    call        TMenuItem.GetCount
 005AD340    test        eax,eax
>005AD342    jg          005AD32B
 005AD344    cmp         dword ptr [esi+0BC],0;TMenuItem.FHandle:HMENU
>005AD34B    je          005AD362
 005AD34D    xor         edx,edx
 005AD34F    mov         eax,esi
 005AD351    call        005AD7D0
 005AD356    mov         eax,dword ptr [esi+0BC];TMenuItem.FHandle:HMENU
 005AD35C    push        eax
 005AD35D    call        user32.DestroyMenu
 005AD362    lea         eax,[esi+68];TMenuItem.FItems:TList
 005AD365    mov         dword ptr [esp],eax
 005AD368    mov         eax,dword ptr [esp]
 005AD36B    mov         eax,dword ptr [eax]
 005AD36D    mov         edx,dword ptr [esp]
 005AD370    xor         ecx,ecx
 005AD372    mov         dword ptr [edx],ecx
 005AD374    call        TObject.Free
 005AD379    lea         eax,[esi+50];TMenuItem.FActionLink:TMenuActionLink
 005AD37C    mov         dword ptr [esp+4],eax
 005AD380    mov         eax,dword ptr [esp+4]
 005AD384    mov         eax,dword ptr [eax]
 005AD386    mov         edx,dword ptr [esp+4]
 005AD38A    xor         ecx,ecx
 005AD38C    mov         dword ptr [edx],ecx
 005AD38E    call        TObject.Free
 005AD393    lea         eax,[esi+84];TMenuItem.FImageChangeLink:TChangeLink
 005AD399    mov         dword ptr [esp+8],eax
 005AD39D    mov         eax,dword ptr [esp+8]
 005AD3A1    mov         eax,dword ptr [eax]
 005AD3A3    mov         edx,dword ptr [esp+8]
 005AD3A7    xor         ecx,ecx
 005AD3A9    mov         dword ptr [edx],ecx
 005AD3AB    call        TObject.Free
 005AD3B0    movzx       eax,word ptr [esi+5C];TMenuItem.FCommand:word
 005AD3B4    test        ax,ax
>005AD3B7    je          005AD3C8
 005AD3B9    movzx       edx,ax
 005AD3BC    xor         ecx,ecx
 005AD3BE    mov         eax,[007CA784];gvar_007CA784
 005AD3C3    call        TBits.SetBit
 005AD3C8    mov         eax,dword ptr [esi+58];TMenuItem.FBitmap:TBitmap
 005AD3CB    call        TObject.Free
 005AD3D0    mov         dl,0FC
 005AD3D2    and         dl,bl
 005AD3D4    mov         eax,esi
 005AD3D6    call        TComponent.Destroy
 005AD3DB    test        bl,bl
>005AD3DD    jle         005AD3E6
 005AD3DF    mov         eax,esi
 005AD3E1    call        @ClassDestroy
 005AD3E6    add         esp,0C
 005AD3E9    pop         esi
 005AD3EA    pop         ebx
 005AD3EB    ret
*}
end;

//005AD3EC
{*procedure sub_005AD3EC(?:?; ?:?; ?:?);
begin
 005AD3EC    push        ebp
 005AD3ED    mov         ebp,esp
 005AD3EF    add         esp,0FFFFFFBC
 005AD3F2    push        ebx
 005AD3F3    push        esi
 005AD3F4    push        edi
 005AD3F5    xor         ebx,ebx
 005AD3F7    mov         dword ptr [ebp-44],ebx
 005AD3FA    mov         dword ptr [ebp-4],ebx
 005AD3FD    mov         byte ptr [ebp-9],cl
 005AD400    mov         dword ptr [ebp-8],edx
 005AD403    mov         edi,eax
 005AD405    xor         eax,eax
 005AD407    push        ebp
 005AD408    push        5AD6B7
 005AD40D    push        dword ptr fs:[eax]
 005AD410    mov         dword ptr fs:[eax],esp
 005AD413    cmp         byte ptr [edi+4A],0
>005AD417    je          005AD699
 005AD41D    lea         eax,[ebp-4]
 005AD420    mov         edx,dword ptr [edi+40]
 005AD423    call        @UStrLAsg
 005AD428    mov         eax,edi
 005AD42A    call        TMenuItem.GetCount
 005AD42F    test        eax,eax
>005AD431    jle         005AD43F
 005AD433    mov         eax,edi
 005AD435    call        005AD984
 005AD43A    mov         dword ptr [ebp-2C],eax
>005AD43D    jmp         005AD489
 005AD43F    cmp         word ptr [edi+6C],0
>005AD444    je          005AD489
 005AD446    mov         ebx,dword ptr [edi+70]
 005AD449    test        ebx,ebx
>005AD44B    je          005AD465
 005AD44D    cmp         dword ptr [ebx+70],0
>005AD451    jne         005AD465
 005AD453    mov         eax,dword ptr [ebx+4]
 005AD456    mov         edx,dword ptr ds:[5ABC3C];TMainMenu
 005AD45C    call        @IsClass
 005AD461    test        al,al
>005AD463    jne         005AD489
 005AD465    push        dword ptr [ebp-4]
 005AD468    push        5AD6D4;'	'
 005AD46D    lea         edx,[ebp-44]
 005AD470    movzx       eax,word ptr [edi+6C]
 005AD474    call        ShortCutToText
 005AD479    push        dword ptr [ebp-44]
 005AD47C    lea         eax,[ebp-4]
 005AD47F    mov         edx,3
 005AD484    call        @UStrCatN
 005AD489    call        kernel32.GetVersion
 005AD48E    cmp         al,4
>005AD490    jb          005AD60F
 005AD496    mov         eax,[007C4EC4];^gvar_0079EDDC
 005AD49B    cmp         dword ptr [eax],1
>005AD49E    jne         005AD4AA
 005AD4A0    mov         eax,[007C4590];^gvar_0079EDE0
 005AD4A5    cmp         dword ptr [eax],4
>005AD4A8    jle         005AD4B3
 005AD4AA    mov         dword ptr [ebp-40],30
>005AD4B1    jmp         005AD4BA
 005AD4B3    mov         dword ptr [ebp-40],2C
 005AD4BA    mov         dword ptr [ebp-3C],3F
 005AD4C1    mov         eax,edi
 005AD4C3    call        TMenuItem.GetParentMenu
 005AD4C8    mov         esi,eax
 005AD4CA    mov         eax,edi
 005AD4CC    call        TMenuItem.GetImageList
 005AD4D1    mov         dword ptr [ebp-10],eax
 005AD4D4    test        esi,esi
>005AD4D6    je          005AD4E4
 005AD4D8    cmp         byte ptr [esi+4C],0;TMenu.FOwnerDraw:Boolean
>005AD4DC    jne         005AD4FA
 005AD4DE    cmp         dword ptr [ebp-10],0
>005AD4E2    jne         005AD4FA
 005AD4E4    mov         ebx,dword ptr [edi+58]
 005AD4E7    test        ebx,ebx
>005AD4E9    je          005AD4F6
 005AD4EB    mov         eax,ebx
 005AD4ED    mov         edx,dword ptr [eax]
 005AD4EF    call        dword ptr [edx+20]
 005AD4F2    test        al,al
>005AD4F4    je          005AD4FA
 005AD4F6    xor         eax,eax
>005AD4F8    jmp         005AD4FC
 005AD4FA    mov         al,1
 005AD4FC    mov         ebx,eax
 005AD4FE    mov         eax,dword ptr [edi+70]
 005AD501    mov         eax,dword ptr [eax+4]
 005AD504    mov         edx,dword ptr ds:[5ABC3C];TMainMenu
 005AD50A    call        @IsClass
 005AD50F    test        al,al
>005AD511    je          005AD555
 005AD513    xor         edx,edx
 005AD515    mov         eax,6
 005AD51A    call        CheckWin32Version
 005AD51F    test        al,al
>005AD521    je          005AD555
 005AD523    call        TStyleManager.GetSystemStyle
 005AD528    mov         edx,dword ptr [eax]
 005AD52A    call        dword ptr [edx+48];@AbstractError
 005AD52D    test        al,al
>005AD52F    je          005AD555
 005AD531    test        bl,bl
>005AD533    je          005AD54D
 005AD535    cmp         dword ptr [ebp-10],0
>005AD539    je          005AD541
 005AD53B    cmp         dword ptr [edi+4C],0FFFFFFFF
>005AD53F    jne         005AD551
 005AD541    cmp         dword ptr [edi+58],0
>005AD545    jne         005AD551
 005AD547    cmp         byte ptr [esi+4C],0;TMenu.FOwnerDraw:Boolean
>005AD54B    jne         005AD551
 005AD54D    xor         eax,eax
>005AD54F    jmp         005AD553
 005AD551    mov         al,1
 005AD553    mov         ebx,eax
 005AD555    mov         eax,dword ptr [edi+40]
 005AD558    mov         edx,5AD6E4;'-'
 005AD55D    call        @UStrEqual
 005AD562    sete        al
 005AD565    and         eax,7F
 005AD568    mov         eax,dword ptr [eax*4+7A1C38]
 005AD56F    movzx       edx,byte ptr [edi+49]
 005AD573    mov         edx,dword ptr [edx*4+7A1C30]
 005AD57A    movzx       ecx,byte ptr [edi+54]
 005AD57E    or          edx,dword ptr [ecx*4+7A1C0C]
 005AD585    or          eax,edx
 005AD587    movzx       edx,byte ptr [ebp-9]
 005AD58B    or          eax,dword ptr [edx*4+7A1C40]
 005AD592    movzx       edx,bl
 005AD595    or          eax,dword ptr [edx*4+7A1C48]
 005AD59C    mov         dword ptr [ebp-38],eax
 005AD59F    movzx       eax,byte ptr [edi+44]
 005AD5A3    mov         eax,dword ptr [eax*4+7A1C18]
 005AD5AA    movzx       edx,byte ptr [edi+45]
 005AD5AE    or          eax,dword ptr [edx*4+7A1C28]
 005AD5B5    movzx       edx,byte ptr [edi+46]
 005AD5B9    or          eax,dword ptr [edx*4+7A1C20]
 005AD5C0    mov         dword ptr [ebp-34],eax
 005AD5C3    movzx       eax,word ptr [edi+5C]
 005AD5C7    mov         dword ptr [ebp-30],eax
 005AD5CA    xor         eax,eax
 005AD5CC    mov         dword ptr [ebp-2C],eax
 005AD5CF    xor         eax,eax
 005AD5D1    mov         dword ptr [ebp-28],eax
 005AD5D4    xor         eax,eax
 005AD5D6    mov         dword ptr [ebp-24],eax
 005AD5D9    mov         eax,edi
 005AD5DB    call        TMenuItem.GetCount
 005AD5E0    test        eax,eax
>005AD5E2    jle         005AD5EE
 005AD5E4    mov         eax,edi
 005AD5E6    call        005AD984
 005AD5EB    mov         dword ptr [ebp-2C],eax
 005AD5EE    mov         eax,dword ptr [ebp-4]
 005AD5F1    call        @UStrToPWChar
 005AD5F6    mov         dword ptr [ebp-1C],eax
 005AD5F9    lea         eax,[ebp-40]
 005AD5FC    push        eax
 005AD5FD    push        0FF
 005AD5FF    push        0FF
 005AD601    mov         eax,dword ptr [ebp-8]
 005AD604    push        eax
 005AD605    call        user32.InsertMenuItemW
>005AD60A    jmp         005AD699
 005AD60F    mov         eax,dword ptr [edi+40]
 005AD612    mov         edx,5AD6E4;'-'
 005AD617    call        @UStrEqual
 005AD61C    sete        al
 005AD61F    and         eax,7F
 005AD622    mov         ebx,dword ptr [eax*4+7A1C04]
 005AD629    movzx       eax,byte ptr [edi+54]
 005AD62D    mov         eax,dword ptr [eax*4+7A1BF8]
 005AD634    movzx       edx,byte ptr [edi+44]
 005AD638    or          eax,dword ptr [edx*4+7A1BE8]
 005AD63F    movzx       edx,byte ptr [edi+45]
 005AD643    or          eax,dword ptr [edx*4+7A1BF0]
 005AD64A    or          ebx,eax
 005AD64C    or          ebx,400
 005AD652    mov         eax,edi
 005AD654    call        TMenuItem.GetCount
 005AD659    test        eax,eax
>005AD65B    jle         005AD67F
 005AD65D    mov         eax,dword ptr [edi+40]
 005AD660    call        @UStrToPWChar
 005AD665    push        eax
 005AD666    mov         eax,edi
 005AD668    call        005AD984
 005AD66D    push        eax
 005AD66E    or          ebx,10
 005AD671    push        ebx
 005AD672    push        0FF
 005AD674    mov         eax,dword ptr [ebp-8]
 005AD677    push        eax
 005AD678    call        user32.InsertMenuW
>005AD67D    jmp         005AD699
 005AD67F    mov         eax,dword ptr [ebp-4]
 005AD682    call        @UStrToPWChar
 005AD687    push        eax
 005AD688    movzx       eax,word ptr [edi+5C]
 005AD68C    push        eax
 005AD68D    push        ebx
 005AD68E    push        0FF
 005AD690    mov         eax,dword ptr [ebp-8]
 005AD693    push        eax
 005AD694    call        user32.InsertMenuW
 005AD699    xor         eax,eax
 005AD69B    pop         edx
 005AD69C    pop         ecx
 005AD69D    pop         ecx
 005AD69E    mov         dword ptr fs:[eax],edx
 005AD6A1    push        5AD6BE
 005AD6A6    lea         eax,[ebp-44]
 005AD6A9    call        @UStrClr
 005AD6AE    lea         eax,[ebp-4]
 005AD6B1    call        @UStrClr
 005AD6B6    ret
>005AD6B7    jmp         @HandleFinally
>005AD6BC    jmp         005AD6A6
 005AD6BE    pop         edi
 005AD6BF    pop         esi
 005AD6C0    pop         ebx
 005AD6C1    mov         esp,ebp
 005AD6C3    pop         ebp
 005AD6C4    ret
end;*}

//005AD6E8
{*function sub_005AD6E8(?:?):?;
begin
 005AD6E8    push        ebp
 005AD6E9    mov         ebp,esp
 005AD6EB    mov         edx,dword ptr [ebp+8]
 005AD6EE    movzx       ecx,byte ptr [edx-5]
 005AD6F2    mov         edx,dword ptr [ebp+8]
 005AD6F5    mov         edx,dword ptr [edx-4]
 005AD6F8    mov         edx,dword ptr [edx+0BC]
 005AD6FE    call        005AD3EC
 005AD703    xor         eax,eax
 005AD705    pop         ebp
 005AD706    ret
end;*}

//005AD708
procedure sub_005AD708(?:TMenuItem);
begin
{*
 005AD708    push        ebp
 005AD709    mov         ebp,esp
 005AD70B    add         esp,0FFFFFFF8
 005AD70E    push        ebx
 005AD70F    mov         dword ptr [ebp-4],eax
 005AD712    mov         eax,dword ptr [ebp-4]
 005AD715    mov         ebx,dword ptr [eax+7C]
 005AD718    test        ebx,ebx
>005AD71A    je          005AD741
 005AD71C    mov         eax,ebx
 005AD71E    mov         edx,dword ptr ds:[5ABC3C];TMainMenu
 005AD724    call        @IsClass
 005AD729    test        al,al
>005AD72B    je          005AD741
 005AD72D    xor         edx,edx
 005AD72F    mov         eax,dword ptr [ebp-4]
 005AD732    call        005B1460
 005AD737    xor         edx,edx
 005AD739    mov         eax,dword ptr [ebp-4]
 005AD73C    call        005B19A0
 005AD741    mov         eax,dword ptr [ebp-4]
 005AD744    mov         ebx,dword ptr [eax+7C]
 005AD747    test        ebx,ebx
>005AD749    je          005AD756
 005AD74B    mov         eax,ebx
 005AD74D    call        TMenu.IsRightToLeft
 005AD752    test        al,al
>005AD754    jne         005AD75A
 005AD756    xor         eax,eax
>005AD758    jmp         005AD75C
 005AD75A    mov         al,1
 005AD75C    mov         byte ptr [ebp-5],al
 005AD75F    mov         eax,dword ptr [ebp-4]
 005AD762    mov         edx,dword ptr [eax+74]
 005AD765    mov         eax,5AD6E8;sub_005AD6E8
 005AD76A    mov         ecx,dword ptr [ebp-4]
 005AD76D    call        IterateMenus
 005AD772    pop         ebx
 005AD773    pop         ecx
 005AD774    pop         ecx
 005AD775    pop         ebp
 005AD776    ret
*}
end;

//005AD778
procedure TMenuItem.ReadShortCutText(Reader:Classes.TReader);
begin
{*
 005AD778    push        ebp
 005AD779    mov         ebp,esp
 005AD77B    push        0
 005AD77D    push        ebx
 005AD77E    push        esi
 005AD77F    mov         esi,edx
 005AD781    mov         ebx,eax
 005AD783    xor         eax,eax
 005AD785    push        ebp
 005AD786    push        5AD7C2
 005AD78B    push        dword ptr fs:[eax]
 005AD78E    mov         dword ptr fs:[eax],esp
 005AD791    lea         edx,[ebp-4]
 005AD794    mov         eax,esi
 005AD796    call        TReader.ReadString
 005AD79B    mov         eax,dword ptr [ebp-4]
 005AD79E    call        TextToShortCut
 005AD7A3    mov         edx,eax
 005AD7A5    mov         eax,ebx
 005AD7A7    call        TMenuItem.SetShortCut
 005AD7AC    xor         eax,eax
 005AD7AE    pop         edx
 005AD7AF    pop         ecx
 005AD7B0    pop         ecx
 005AD7B1    mov         dword ptr fs:[eax],edx
 005AD7B4    push        5AD7C9
 005AD7B9    lea         eax,[ebp-4]
 005AD7BC    call        @UStrClr
 005AD7C1    ret
>005AD7C2    jmp         @HandleFinally
>005AD7C7    jmp         005AD7B9
 005AD7C9    pop         esi
 005AD7CA    pop         ebx
 005AD7CB    pop         ecx
 005AD7CC    pop         ebp
 005AD7CD    ret
*}
end;

//005AD7D0
procedure sub_005AD7D0(?:TMenuItem; ?:TMenuItem);
begin
{*
 005AD7D0    push        ebx
 005AD7D1    mov         ebx,eax
 005AD7D3    test        edx,edx
>005AD7D5    je          005AD7DD
 005AD7D7    test        byte ptr [edx+1C],8
>005AD7DB    jne         005AD807
 005AD7DD    mov         eax,dword ptr [ebx+74];TMenuItem.FMerged:TMenuItem
 005AD7E0    cmp         edx,eax
>005AD7E2    je          005AD807
 005AD7E4    test        eax,eax
>005AD7E6    je          005AD7ED
 005AD7E8    xor         ecx,ecx
 005AD7EA    mov         dword ptr [eax+78],ecx;TMenuItem.FMergedWith:TMenuItem
 005AD7ED    mov         eax,edx
 005AD7EF    mov         dword ptr [ebx+74],eax;TMenuItem.FMerged:TMenuItem
 005AD7F2    test        eax,eax
>005AD7F4    je          005AD800
 005AD7F6    mov         dword ptr [eax+78],ebx
 005AD7F9    mov         edx,ebx
 005AD7FB    call        TComponent.FreeNotification
 005AD800    mov         eax,ebx
 005AD802    call        005AD84C
 005AD807    pop         ebx
 005AD808    ret
*}
end;

//005AD80C
procedure TMenuItem.Loaded;
begin
{*
 005AD80C    push        ebx
 005AD80D    push        esi
 005AD80E    mov         ebx,eax
 005AD810    mov         eax,ebx
 005AD812    call        TComponent.Loaded
 005AD817    mov         eax,ebx
 005AD819    call        TMenuItem.GetAction
 005AD81E    test        eax,eax
>005AD820    je          005AD838
 005AD822    mov         eax,ebx
 005AD824    call        TMenuItem.GetAction
 005AD829    mov         edx,eax
 005AD82B    mov         cl,1
 005AD82D    mov         eax,ebx
 005AD82F    mov         si,0FFEF
 005AD833    call        @CallDynaInst;TMenuItem.sub_005B0D3C
 005AD838    cmp         byte ptr [ebx+80],0;TMenuItem.FStreamedRebuild:Boolean
>005AD83F    je          005AD848
 005AD841    mov         eax,ebx
 005AD843    call        005AD84C
 005AD848    pop         esi
 005AD849    pop         ebx
 005AD84A    ret
*}
end;

//005AD84C
procedure sub_005AD84C(?:TMenuItem);
begin
{*
 005AD84C    push        ebx
 005AD84D    push        esi
 005AD84E    push        edi
 005AD84F    push        ebp
 005AD850    mov         esi,eax
 005AD852    test        byte ptr [esi+1C],8;TMenuItem.FComponentState:TComponentState
>005AD856    jne         005AD91E
 005AD85C    test        byte ptr [esi+1C],2;TMenuItem.FComponentState:TComponentState
>005AD860    je          005AD86E
 005AD862    mov         byte ptr [esi+80],1;TMenuItem.FStreamedRebuild:Boolean
>005AD869    jmp         005AD91E
 005AD86E    mov         eax,dword ptr [esi+78];TMenuItem.FMergedWith:TMenuItem
 005AD871    test        eax,eax
>005AD873    je          005AD87F
 005AD875    call        005AD84C
>005AD87A    jmp         005AD91E
 005AD87F    mov         eax,esi
 005AD881    call        005AD984
 005AD886    push        eax
 005AD887    call        user32.GetMenuItemCount
 005AD88C    mov         ebp,eax
 005AD88E    test        ebp,ebp
 005AD890    sete        bl
 005AD893    test        ebp,ebp
>005AD895    jle         005AD8CB
 005AD897    push        400
 005AD89C    mov         edi,ebp
 005AD89E    dec         edi
 005AD89F    push        edi
 005AD8A0    mov         eax,esi
 005AD8A2    call        005AD984
 005AD8A7    push        eax
 005AD8A8    call        user32.GetMenuState
 005AD8AD    test        al,4
>005AD8AF    jne         005AD8C6
 005AD8B1    push        400
 005AD8B6    push        edi
 005AD8B7    mov         eax,esi
 005AD8B9    call        005AD984
 005AD8BE    push        eax
 005AD8BF    call        user32.RemoveMenu
 005AD8C4    mov         bl,1
 005AD8C6    dec         ebp
 005AD8C7    test        ebp,ebp
>005AD8C9    jg          005AD897
 005AD8CB    test        bl,bl
>005AD8CD    je          005AD91E
 005AD8CF    cmp         dword ptr [esi+70],0;TMenuItem.FParent:TMenuItem
>005AD8D3    jne         005AD90E
 005AD8D5    mov         eax,dword ptr [esi+7C];TMenuItem.FMenu:TMenu
 005AD8D8    mov         edx,dword ptr ds:[5ABC3C];TMainMenu
 005AD8DE    call        @IsClass
 005AD8E3    test        al,al
>005AD8E5    je          005AD90E
 005AD8E7    mov         eax,esi
 005AD8E9    call        005AD984
 005AD8EE    push        eax
 005AD8EF    call        user32.GetMenuItemCount
 005AD8F4    test        eax,eax
>005AD8F6    jne         005AD90E
 005AD8F8    mov         eax,dword ptr [esi+0BC];TMenuItem.FHandle:HMENU
 005AD8FE    push        eax
 005AD8FF    call        user32.DestroyMenu
 005AD904    xor         eax,eax
 005AD906    mov         dword ptr [esi+0BC],eax;TMenuItem.FHandle:HMENU
>005AD90C    jmp         005AD915
 005AD90E    mov         eax,esi
 005AD910    call        005AD708
 005AD915    xor         edx,edx
 005AD917    mov         eax,esi
 005AD919    mov         ecx,dword ptr [eax]
 005AD91B    call        dword ptr [ecx+50];TMenuItem.sub_005B0B00
 005AD91E    pop         ebp
 005AD91F    pop         edi
 005AD920    pop         esi
 005AD921    pop         ebx
 005AD922    ret
*}
end;

//005AD924
procedure sub_005AD924(?:TMenuItem; ?:Integer; ?:Byte);
begin
{*
 005AD924    push        ebx
 005AD925    push        esi
 005AD926    push        edi
 005AD927    push        ebp
 005AD928    push        ecx
 005AD929    mov         ebx,ecx
 005AD92B    mov         dword ptr [esp],edx
 005AD92E    mov         edi,eax
 005AD930    mov         eax,edi
 005AD932    call        TMenuItem.GetCount
 005AD937    mov         esi,eax
 005AD939    dec         esi
 005AD93A    test        esi,esi
>005AD93C    jl          005AD97E
 005AD93E    inc         esi
 005AD93F    xor         ebp,ebp
 005AD941    cmp         ebp,dword ptr [esp]
>005AD944    jge         005AD960
 005AD946    mov         edx,ebp
 005AD948    mov         eax,edi
 005AD94A    call        TMenuItem.GetItem
 005AD94F    cmp         bl,byte ptr [eax+4B];TMenuItem.FGroupIndex:byte
>005AD952    jae         005AD97A
 005AD954    mov         eax,[007C43F4];^SResString247:TResStringRec
 005AD959    call        Error
>005AD95E    jmp         005AD97A
 005AD960    mov         edx,ebp
 005AD962    mov         eax,edi
 005AD964    call        TMenuItem.GetItem
 005AD969    cmp         bl,byte ptr [eax+4B];TMenuItem.FGroupIndex:byte
>005AD96C    jbe         005AD97A
 005AD96E    mov         edx,ebp
 005AD970    mov         eax,edi
 005AD972    call        TMenuItem.GetItem
 005AD977    mov         byte ptr [eax+4B],bl;TMenuItem.FGroupIndex:byte
 005AD97A    inc         ebp
 005AD97B    dec         esi
>005AD97C    jne         005AD941
 005AD97E    pop         edx
 005AD97F    pop         ebp
 005AD980    pop         edi
 005AD981    pop         esi
 005AD982    pop         ebx
 005AD983    ret
*}
end;

//005AD984
{*function sub_005AD984(?:TMenuItem):?;
begin
 005AD984    push        ebx
 005AD985    mov         ebx,eax
 005AD987    cmp         dword ptr [ebx+0BC],0;TMenuItem.FHandle:HMENU
>005AD98E    jne         005AD9D4
 005AD990    mov         eax,dword ptr [ebx+4];TMenuItem.FOwner:TComponent
 005AD993    mov         edx,dword ptr ds:[5AC178];TPopupMenu
 005AD999    call        @IsClass
 005AD99E    test        al,al
>005AD9A0    je          005AD9AF
 005AD9A2    call        user32.CreatePopupMenu
 005AD9A7    mov         dword ptr [ebx+0BC],eax;TMenuItem.FHandle:HMENU
>005AD9AD    jmp         005AD9BA
 005AD9AF    call        user32.CreateMenu
 005AD9B4    mov         dword ptr [ebx+0BC],eax;TMenuItem.FHandle:HMENU
 005AD9BA    cmp         dword ptr [ebx+0BC],0;TMenuItem.FHandle:HMENU
>005AD9C1    jne         005AD9CD
 005AD9C3    mov         eax,[007C434C];^SResString219:TResStringRec
 005AD9C8    call        Error
 005AD9CD    mov         eax,ebx
 005AD9CF    call        005AD708
 005AD9D4    mov         eax,dword ptr [ebx+0BC];TMenuItem.FHandle:HMENU
 005AD9DA    pop         ebx
 005AD9DB    ret
end;*}

//005AD9DC
procedure TMenuItem.DefineProperties(Filer:Classes.TFiler);
begin
{*
 005AD9DC    push        ebx
 005AD9DD    push        esi
 005AD9DE    mov         esi,edx
 005AD9E0    mov         ebx,eax
 005AD9E2    mov         edx,esi
 005AD9E4    mov         eax,ebx
 005AD9E6    call        TComponent.DefineProperties
 005AD9EB    push        ebx
 005AD9EC    push        5AD778;TMenuItem.ReadShortCutText
 005AD9F1    push        0
 005AD9F3    push        0
 005AD9F5    xor         ecx,ecx
 005AD9F7    mov         edx,5ADA14;'ShortCutText'
 005AD9FC    mov         eax,esi
 005AD9FE    mov         ebx,dword ptr [eax]
 005ADA00    call        dword ptr [ebx+4]
 005ADA03    pop         esi
 005ADA04    pop         ebx
 005ADA05    ret
*}
end;

//005ADA30
{*procedure sub_005ADA30(?:TMenuItem; ?:?; ?:UnicodeString; ?:?; ?:?; ?:?);
begin
 005ADA30    push        ebp
 005ADA31    mov         ebp,esp
 005ADA33    add         esp,0FFFFFFE0
 005ADA36    push        ebx
 005ADA37    push        esi
 005ADA38    push        edi
 005ADA39    xor         ebx,ebx
 005ADA3B    mov         dword ptr [ebp-4],ebx
 005ADA3E    mov         dword ptr [ebp-0C],ecx
 005ADA41    mov         dword ptr [ebp-8],edx
 005ADA44    mov         esi,eax
 005ADA46    mov         ebx,dword ptr [ebp+8]
 005ADA49    xor         eax,eax
 005ADA4B    push        ebp
 005ADA4C    push        5ADC33
 005ADA51    push        dword ptr fs:[eax]
 005ADA54    mov         dword ptr fs:[eax],esp
 005ADA57    mov         eax,esi
 005ADA59    call        TMenuItem.GetParentMenu
 005ADA5E    mov         edi,eax
 005ADA60    test        edi,edi
>005ADA62    je          005ADA94
 005ADA64    mov         eax,edi
 005ADA66    call        TMenu.IsRightToLeft
 005ADA6B    test        al,al
>005ADA6D    je          005ADA94
 005ADA6F    test        bl,0
>005ADA72    jne         005ADA7C
 005ADA74    and         ebx,0FFFFFFFF
 005ADA77    or          ebx,2
>005ADA7A    jmp         005ADA8E
 005ADA7C    mov         eax,2
 005ADA81    and         eax,ebx
 005ADA83    cmp         eax,2
>005ADA86    jne         005ADA8E
 005ADA88    and         ebx,0FFFFFFFD
 005ADA8B    or          ebx,0
 005ADA8E    or          ebx,20000
 005ADA94    lea         eax,[ebp-4]
 005ADA97    mov         edx,dword ptr [ebp-0C]
 005ADA9A    call        @UStrLAsg
 005ADA9F    test        bh,4
>005ADAA2    je          005ADACA
 005ADAA4    cmp         dword ptr [ebp-4],0
>005ADAA8    je          005ADABD
 005ADAAA    mov         eax,dword ptr [ebp-4]
 005ADAAD    cmp         word ptr [eax],26
>005ADAB1    jne         005ADACA
 005ADAB3    mov         eax,dword ptr [ebp-4]
 005ADAB6    cmp         word ptr [eax+2],0
>005ADABB    jne         005ADACA
 005ADABD    lea         eax,[ebp-4]
 005ADAC0    mov         edx,5ADC50;' '
 005ADAC5    call        @UStrCat
 005ADACA    mov         eax,dword ptr [ebp-4]
 005ADACD    mov         edx,5ADC60;'-'
 005ADAD2    call        @UStrEqual
>005ADAD7    jne         005ADB0D
 005ADAD9    test        bh,4
>005ADADC    jne         005ADC1D
 005ADAE2    mov         eax,dword ptr [ebp+10]
 005ADAE5    mov         esi,eax
 005ADAE7    lea         edi,[ebp-20]
 005ADAEA    movs        dword ptr [edi],dword ptr [esi]
 005ADAEB    movs        dword ptr [edi],dword ptr [esi]
 005ADAEC    movs        dword ptr [edi],dword ptr [esi]
 005ADAED    movs        dword ptr [edi],dword ptr [esi]
 005ADAEE    add         dword ptr [ebp-1C],4
 005ADAF2    push        2
 005ADAF4    push        6
 005ADAF6    lea         eax,[ebp-20]
 005ADAF9    push        eax
 005ADAFA    mov         eax,dword ptr [ebp-8]
 005ADAFD    call        TCanvas.GetHandle
 005ADB02    push        eax
 005ADB03    call        user32.DrawEdge
>005ADB08    jmp         005ADC1D
 005ADB0D    mov         eax,dword ptr [ebp-8]
 005ADB10    mov         eax,dword ptr [eax+48]
 005ADB13    mov         dl,1
 005ADB15    call        TBrush.SetStyle
 005ADB1A    cmp         byte ptr [esi+46],0
>005ADB1E    je          005ADB45
 005ADB20    mov         eax,dword ptr [ebp-8]
 005ADB23    mov         eax,dword ptr [eax+40]
 005ADB26    mov         eax,dword ptr [eax+10]
 005ADB29    movzx       eax,byte ptr [eax+21]
 005ADB2D    mov         byte ptr [ebp-0D],al
 005ADB30    movzx       edx,byte ptr ds:[5ADC64];0x1 gvar_005ADC64
 005ADB37    or          dl,byte ptr [ebp-0D]
 005ADB3A    mov         eax,dword ptr [ebp-8]
 005ADB3D    mov         eax,dword ptr [eax+40]
 005ADB40    call        TFont.SetStyle
 005ADB45    cmp         byte ptr [esi+45],0
>005ADB49    jne         005ADBF2
 005ADB4F    cmp         byte ptr [ebp+0C],0
>005ADB53    jne         005ADBB0
 005ADB55    mov         eax,dword ptr [ebp+10]
 005ADB58    mov         ecx,1
 005ADB5D    mov         edx,1
 005ADB62    call        OffsetRect
 005ADB67    mov         eax,dword ptr [ebp-8]
 005ADB6A    mov         eax,dword ptr [eax+40]
 005ADB6D    mov         edx,0FF000014
 005ADB72    call        TFont.SetColor
 005ADB77    mov         eax,dword ptr [ebp-8]
 005ADB7A    call        TCanvas.GetHandle
 005ADB7F    mov         edi,eax
 005ADB81    mov         esi,dword ptr [ebp-4]
 005ADB84    test        esi,esi
>005ADB86    je          005ADB8D
 005ADB88    sub         esi,4
 005ADB8B    mov         esi,dword ptr [esi]
 005ADB8D    push        ebx
 005ADB8E    mov         eax,dword ptr [ebp+10]
 005ADB91    push        eax
 005ADB92    push        esi
 005ADB93    mov         eax,dword ptr [ebp-4]
 005ADB96    call        @UStrToPWChar
 005ADB9B    push        eax
 005ADB9C    push        edi
 005ADB9D    call        user32.DrawTextW
 005ADBA2    mov         eax,dword ptr [ebp+10]
 005ADBA5    or          ecx,0FFFFFFFF
 005ADBA8    or          edx,0FFFFFFFF
 005ADBAB    call        OffsetRect
 005ADBB0    cmp         byte ptr [ebp+0C],0
>005ADBB4    je          005ADBE2
 005ADBB6    mov         eax,0FF00000D
 005ADBBB    call        ColorToRGB
 005ADBC0    mov         esi,eax
 005ADBC2    mov         eax,0FF000010
 005ADBC7    call        ColorToRGB
 005ADBCC    cmp         esi,eax
>005ADBCE    jne         005ADBE2
 005ADBD0    mov         eax,dword ptr [ebp-8]
 005ADBD3    mov         eax,dword ptr [eax+40]
 005ADBD6    mov         edx,0FF000014
 005ADBDB    call        TFont.SetColor
>005ADBE0    jmp         005ADBF2
 005ADBE2    mov         eax,dword ptr [ebp-8]
 005ADBE5    mov         eax,dword ptr [eax+40]
 005ADBE8    mov         edx,0FF000010
 005ADBED    call        TFont.SetColor
 005ADBF2    mov         eax,dword ptr [ebp-8]
 005ADBF5    call        TCanvas.GetHandle
 005ADBFA    mov         edi,eax
 005ADBFC    mov         esi,dword ptr [ebp-4]
 005ADBFF    test        esi,esi
>005ADC01    je          005ADC08
 005ADC03    sub         esi,4
 005ADC06    mov         esi,dword ptr [esi]
 005ADC08    push        ebx
 005ADC09    mov         eax,dword ptr [ebp+10]
 005ADC0C    push        eax
 005ADC0D    push        esi
 005ADC0E    mov         eax,dword ptr [ebp-4]
 005ADC11    call        @UStrToPWChar
 005ADC16    push        eax
 005ADC17    push        edi
 005ADC18    call        user32.DrawTextW
 005ADC1D    xor         eax,eax
 005ADC1F    pop         edx
 005ADC20    pop         ecx
 005ADC21    pop         ecx
 005ADC22    mov         dword ptr fs:[eax],edx
 005ADC25    push        5ADC3A
 005ADC2A    lea         eax,[ebp-4]
 005ADC2D    call        @UStrClr
 005ADC32    ret
>005ADC33    jmp         @HandleFinally
>005ADC38    jmp         005ADC2A
 005ADC3A    pop         edi
 005ADC3B    pop         esi
 005ADC3C    pop         ebx
 005ADC3D    mov         esp,ebp
 005ADC3F    pop         ebp
 005ADC40    ret         0C
end;*}

//005ADC68
{*procedure sub_005ADC68(?:?; ?:?; ?:?);
begin
 005ADC68    push        ebp
 005ADC69    mov         ebp,esp
 005ADC6B    add         esp,0FFFFFFF0
 005ADC6E    push        ebx
 005ADC6F    push        esi
 005ADC70    push        edi
 005ADC71    mov         esi,ecx
 005ADC73    lea         edi,[ebp-10]
 005ADC76    movs        dword ptr [edi],dword ptr [esi]
 005ADC77    movs        dword ptr [edi],dword ptr [esi]
 005ADC78    movs        dword ptr [edi],dword ptr [esi]
 005ADC79    movs        dword ptr [edi],dword ptr [esi]
 005ADC7A    cmp         word ptr [eax+0A2],0;TMenuItem.?fA2:word
>005ADC82    je          005ADC9F
 005ADC84    lea         ecx,[ebp-10]
 005ADC87    push        ecx
 005ADC88    movzx       ecx,byte ptr [ebp+8]
 005ADC8C    push        ecx
 005ADC8D    mov         ebx,eax
 005ADC8F    mov         ecx,edx
 005ADC91    mov         edx,eax
 005ADC93    mov         eax,dword ptr [ebx+0A4];TMenuItem.?fA4:dword
 005ADC99    call        dword ptr [ebx+0A0];TMenuItem.FOnDrawItem
 005ADC9F    pop         edi
 005ADCA0    pop         esi
 005ADCA1    pop         ebx
 005ADCA2    mov         esp,ebp
 005ADCA4    pop         ebp
 005ADCA5    ret         4
end;*}

//005ADCA8
{*procedure sub_005ADCA8(?:?; ?:?; ?:?; ?:?; ?:?);
begin
 005ADCA8    push        ebp
 005ADCA9    mov         ebp,esp
 005ADCAB    add         esp,0FFFFFFE4
 005ADCAE    push        ebx
 005ADCAF    push        esi
 005ADCB0    push        edi
 005ADCB1    xor         ebx,ebx
 005ADCB3    mov         dword ptr [ebp-4],ebx
 005ADCB6    mov         dword ptr [ebp-0C],ecx
 005ADCB9    mov         esi,edx
 005ADCBB    mov         dword ptr [ebp-8],eax
 005ADCBE    mov         ebx,dword ptr [ebp+8]
 005ADCC1    xor         eax,eax
 005ADCC3    push        ebp
 005ADCC4    push        5ADDE0
 005ADCC9    push        dword ptr fs:[eax]
 005ADCCC    mov         dword ptr fs:[eax],esp
 005ADCCF    mov         eax,dword ptr [ebp-8]
 005ADCD2    call        TMenuItem.GetParentMenu
 005ADCD7    mov         edi,eax
 005ADCD9    test        edi,edi
>005ADCDB    je          005ADD1E
 005ADCDD    mov         eax,edi
 005ADCDF    call        TMenu.IsRightToLeft
 005ADCE4    test        al,al
>005ADCE6    je          005ADD1E
 005ADCE8    test        bh,1
>005ADCEB    je          005ADD00
 005ADCED    mov         eax,[005ADDF0];0x100 gvar_005ADDF0
 005ADCF2    not         eax
 005ADCF4    and         eax,ebx
 005ADCF6    or          eax,dword ptr ds:[5ADDF4];0x1000 gvar_005ADDF4
 005ADCFC    mov         ebx,eax
>005ADCFE    jmp         005ADD18
 005ADD00    test        bh,10
>005ADD03    je          005ADD18
 005ADD05    mov         eax,[005ADDF0];0x100 gvar_005ADDF0
 005ADD0A    or          eax,ebx
 005ADD0C    mov         edx,dword ptr ds:[5ADDF4];0x1000 gvar_005ADDF4
 005ADD12    not         edx
 005ADD14    and         edx,eax
 005ADD16    mov         ebx,edx
 005ADD18    or          ebx,2000
 005ADD1E    lea         eax,[ebp-4]
 005ADD21    mov         edx,dword ptr [ebp-0C]
 005ADD24    call        @UStrLAsg
 005ADD29    test        bl,2
>005ADD2C    je          005ADD54
 005ADD2E    cmp         dword ptr [ebp-4],0
>005ADD32    je          005ADD47
 005ADD34    mov         eax,dword ptr [ebp-4]
 005ADD37    cmp         word ptr [eax],26
>005ADD3B    jne         005ADD54
 005ADD3D    mov         eax,dword ptr [ebp-4]
 005ADD40    cmp         word ptr [eax+2],0
>005ADD45    jne         005ADD54
 005ADD47    lea         eax,[ebp-4]
 005ADD4A    mov         edx,5ADE04;' '
 005ADD4F    call        @UStrCat
 005ADD54    mov         dl,1
 005ADD56    mov         eax,dword ptr [esi+48]
 005ADD59    call        TBrush.SetStyle
 005ADD5E    mov         eax,dword ptr [ebp-8]
 005ADD61    cmp         byte ptr [eax+46],0
>005ADD65    je          005ADD86
 005ADD67    mov         eax,dword ptr [esi+40]
 005ADD6A    mov         eax,dword ptr [eax+10]
 005ADD6D    movzx       eax,byte ptr [eax+21]
 005ADD71    mov         byte ptr [ebp-0D],al
 005ADD74    movzx       edx,byte ptr ds:[5ADE08];0x1 gvar_005ADE08
 005ADD7B    or          dl,byte ptr [ebp-0D]
 005ADD7E    mov         eax,dword ptr [esi+40]
 005ADD81    call        TFont.SetStyle
 005ADD86    mov         eax,dword ptr [ebp-4]
 005ADD89    push        eax
 005ADD8A    mov         eax,dword ptr [ebp+10]
 005ADD8D    push        eax
 005ADD8E    push        ebx
 005ADD8F    push        1FFFFFFF
 005ADD94    call        TStyleManager.GetSystemStyle
 005ADD99    mov         edx,dword ptr [ebp-8]
 005ADD9C    movzx       edx,byte ptr [edx+45]
 005ADDA0    movzx       edx,byte ptr [edx+7A1C50]
 005ADDA7    lea         ecx,[ebp-1C]
 005ADDAA    mov         ebx,dword ptr [eax]
 005ADDAC    call        dword ptr [ebx+0A4];TCustomStyleServices.GetElementDetails
 005ADDB2    lea         eax,[ebp-1C]
 005ADDB5    push        eax
 005ADDB6    mov         eax,esi
 005ADDB8    call        TCanvas.GetHandle
 005ADDBD    push        eax
 005ADDBE    call        TStyleManager.GetSystemStyle
 005ADDC3    pop         edx
 005ADDC4    pop         ecx
 005ADDC5    call        TCustomStyleServices.DrawText
 005ADDCA    xor         eax,eax
 005ADDCC    pop         edx
 005ADDCD    pop         ecx
 005ADDCE    pop         ecx
 005ADDCF    mov         dword ptr fs:[eax],edx
 005ADDD2    push        5ADDE7
 005ADDD7    lea         eax,[ebp-4]
 005ADDDA    call        @UStrClr
 005ADDDF    ret
>005ADDE0    jmp         @HandleFinally
>005ADDE5    jmp         005ADDD7
 005ADDE7    pop         edi
 005ADDE8    pop         esi
 005ADDE9    pop         ebx
 005ADDEA    mov         esp,ebp
 005ADDEC    pop         ebp
 005ADDED    ret         0C
end;*}

//005ADE0C
{*procedure sub_005ADE0C(?:?; ?:?);
begin
 005ADE0C    push        ebp
 005ADE0D    mov         ebp,esp
 005ADE0F    add         esp,0FFFFFF5C
 005ADE15    push        ebx
 005ADE16    push        esi
 005ADE17    push        edi
 005ADE18    xor         edx,edx
 005ADE1A    mov         dword ptr [ebp-4],edx
 005ADE1D    mov         ebx,eax
 005ADE1F    xor         eax,eax
 005ADE21    push        ebp
 005ADE22    push        5AE920
 005ADE27    push        dword ptr fs:[eax]
 005ADE2A    mov         dword ptr fs:[eax],esp
 005ADE2D    call        TStyleManager.GetSystemStyle
 005ADE32    mov         esi,eax
 005ADE34    mov         eax,dword ptr [ebp+8]
 005ADE37    cmp         byte ptr [eax+8],0
>005ADE3B    je          005ADF15
 005ADE41    mov         eax,dword ptr [ebp+8]
 005ADE44    test        byte ptr [eax+0C],1
>005ADE48    jne         005ADE57
 005ADE4A    mov         eax,dword ptr [ebp+8]
 005ADE4D    test        byte ptr [eax+0C],40
>005ADE51    je          005ADEEF
 005ADE57    lea         eax,[ebp-8]
 005ADE5A    push        eax
 005ADE5B    mov         eax,dword ptr [ebp+8]
 005ADE5E    mov         eax,dword ptr [eax-24]
 005ADE61    movzx       eax,byte ptr [eax+45]
 005ADE65    movzx       edx,byte ptr [eax+7A1C63]
 005ADE6C    lea         ecx,[ebp-80]
 005ADE6F    mov         eax,esi
 005ADE71    mov         edi,dword ptr [eax]
 005ADE73    call        dword ptr [edi+0A4];TCustomStyleServices.GetElementDetails
 005ADE79    lea         edx,[ebp-80]
 005ADE7C    mov         cl,2
 005ADE7E    mov         eax,esi
 005ADE80    call        TCustomStyleServices.GetElementColor
 005ADE85    mov         eax,dword ptr [ebp+8]
 005ADE88    mov         eax,dword ptr [eax-28]
 005ADE8B    mov         eax,dword ptr [eax+40]
 005ADE8E    mov         edx,dword ptr [ebp-8]
 005ADE91    call        TFont.SetColor
 005ADE96    mov         eax,dword ptr [ebp+8]
 005ADE99    add         eax,0FFFFFFF0
 005ADE9C    push        eax
 005ADE9D    push        0
 005ADE9F    mov         eax,dword ptr [ebp+8]
 005ADEA2    test        byte ptr [eax+0C],1
 005ADEA6    setne       al
 005ADEA9    and         eax,7F
 005ADEAC    mov         edx,dword ptr [ebp+8]
 005ADEAF    test        byte ptr [edx+0C],40
 005ADEB3    setne       dl
 005ADEB6    and         edx,7F
 005ADEB9    lea         edx,[edx*2+7A1C5F]
 005ADEC0    movzx       edx,byte ptr [edx+eax]
 005ADEC4    lea         ecx,[ebp-80]
 005ADEC7    mov         eax,esi
 005ADEC9    mov         edi,dword ptr [eax]
 005ADECB    call        dword ptr [edi+0A4];TCustomStyleServices.GetElementDetails
 005ADED1    lea         eax,[ebp-80]
 005ADED4    push        eax
 005ADED5    mov         eax,dword ptr [ebp+8]
 005ADED8    mov         eax,dword ptr [eax-28]
 005ADEDB    call        TCanvas.GetHandle
 005ADEE0    mov         edx,eax
 005ADEE2    mov         eax,esi
 005ADEE4    pop         ecx
 005ADEE5    call        TCustomStyleServices.DrawElement
>005ADEEA    jmp         005ADF85
 005ADEEF    mov         eax,dword ptr [ebp+8]
 005ADEF2    mov         eax,dword ptr [eax-28]
 005ADEF5    mov         eax,dword ptr [eax+48]
 005ADEF8    mov         edx,0FF00001E
 005ADEFD    call        TBrush.SetColor
 005ADF02    mov         eax,dword ptr [ebp+8]
 005ADF05    lea         edx,[eax-10]
 005ADF08    mov         eax,dword ptr [ebp+8]
 005ADF0B    mov         eax,dword ptr [eax-28]
 005ADF0E    mov         ecx,dword ptr [eax]
 005ADF10    call        dword ptr [ecx+54]
>005ADF13    jmp         005ADF85
 005ADF15    mov         eax,dword ptr [ebp+8]
 005ADF18    add         eax,0FFFFFFF0
 005ADF1B    push        eax
 005ADF1C    push        0
 005ADF1E    lea         ecx,[ebp-80]
 005ADF21    mov         dl,12
 005ADF23    mov         eax,esi
 005ADF25    mov         edi,dword ptr [eax]
 005ADF27    call        dword ptr [edi+0A4];TCustomStyleServices.GetElementDetails
 005ADF2D    lea         eax,[ebp-80]
 005ADF30    push        eax
 005ADF31    mov         eax,dword ptr [ebp+8]
 005ADF34    mov         eax,dword ptr [eax-28]
 005ADF37    call        TCanvas.GetHandle
 005ADF3C    mov         edx,eax
 005ADF3E    mov         eax,esi
 005ADF40    pop         ecx
 005ADF41    call        TCustomStyleServices.DrawElement
 005ADF46    lea         eax,[ebp-8]
 005ADF49    push        eax
 005ADF4A    mov         eax,dword ptr [ebp+8]
 005ADF4D    mov         eax,dword ptr [eax-24]
 005ADF50    movzx       eax,byte ptr [eax+45]
 005ADF54    movzx       edx,byte ptr [eax+7A1C65]
 005ADF5B    lea         ecx,[ebp-80]
 005ADF5E    mov         eax,esi
 005ADF60    mov         edi,dword ptr [eax]
 005ADF62    call        dword ptr [edi+0A4];TCustomStyleServices.GetElementDetails
 005ADF68    lea         edx,[ebp-80]
 005ADF6B    mov         cl,2
 005ADF6D    mov         eax,esi
 005ADF6F    call        TCustomStyleServices.GetElementColor
 005ADF74    mov         eax,dword ptr [ebp+8]
 005ADF77    mov         eax,dword ptr [eax-28]
 005ADF7A    mov         eax,dword ptr [eax+40]
 005ADF7D    mov         edx,dword ptr [ebp-8]
 005ADF80    call        TFont.SetColor
 005ADF85    mov         eax,dword ptr [ebp+8]
 005ADF88    mov         eax,dword ptr [eax-24]
 005ADF8B    movzx       eax,byte ptr [eax+49]
 005ADF8F    mov         edx,dword ptr [ebp+8]
 005ADF92    mov         edx,dword ptr [edx-24]
 005ADF95    movzx       edx,byte ptr [edx+45]
 005ADF99    lea         edx,[edx*2+7A1C6B]
 005ADFA0    movzx       edx,byte ptr [edx+eax]
 005ADFA4    lea         ecx,[ebp-74]
 005ADFA7    mov         eax,esi
 005ADFA9    mov         edi,dword ptr [eax]
 005ADFAB    call        dword ptr [edi+0A4];TCustomStyleServices.GetElementDetails
 005ADFB1    push        1
 005ADFB3    lea         eax,[ebp-18]
 005ADFB6    push        eax
 005ADFB7    mov         eax,dword ptr [ebp+8]
 005ADFBA    mov         eax,dword ptr [eax-28]
 005ADFBD    call        TCanvas.GetHandle
 005ADFC2    mov         edx,eax
 005ADFC4    lea         ecx,[ebp-74]
 005ADFC7    mov         eax,esi
 005ADFC9    call        TCustomStyleServices.GetElementSize
 005ADFCE    push        1
 005ADFD0    lea         eax,[ebp-38]
 005ADFD3    push        eax
 005ADFD4    mov         eax,dword ptr [ebp+8]
 005ADFD7    mov         eax,dword ptr [eax-28]
 005ADFDA    call        TCanvas.GetHandle
 005ADFDF    mov         edx,eax
 005ADFE1    lea         ecx,[ebp-74]
 005ADFE4    mov         eax,esi
 005ADFE6    call        TCustomStyleServices.GetElementMargins
 005ADFEB    mov         eax,ebx
 005ADFED    xor         al,1
 005ADFEF    test        al,al
>005ADFF1    je          005AE027
 005ADFF3    mov         eax,dword ptr [ebp+8]
 005ADFF6    mov         eax,dword ptr [eax-0C]
 005ADFF9    add         eax,dword ptr [ebp-14]
 005ADFFC    add         eax,dword ptr [ebp-2C]
 005ADFFF    add         eax,dword ptr [ebp-2C]
 005AE002    push        eax
 005AE003    lea         eax,[ebp-58]
 005AE006    push        eax
 005AE007    mov         eax,dword ptr [ebp+8]
 005AE00A    mov         edi,dword ptr [eax-10]
 005AE00D    mov         ecx,edi
 005AE00F    add         ecx,dword ptr [ebp-18]
 005AE012    add         ecx,dword ptr [ebp-34]
 005AE015    add         ecx,dword ptr [ebp-34]
 005AE018    mov         eax,dword ptr [ebp+8]
 005AE01B    mov         edx,dword ptr [eax-0C]
 005AE01E    mov         eax,edi
 005AE020    call        Rect
>005AE025    jmp         005AE05C
 005AE027    mov         eax,dword ptr [ebp+8]
 005AE02A    mov         eax,dword ptr [eax-0C]
 005AE02D    add         eax,dword ptr [ebp-14]
 005AE030    add         eax,dword ptr [ebp-2C]
 005AE033    add         eax,dword ptr [ebp-2C]
 005AE036    push        eax
 005AE037    lea         eax,[ebp-58]
 005AE03A    push        eax
 005AE03B    mov         eax,dword ptr [ebp+8]
 005AE03E    mov         ecx,dword ptr [eax-8]
 005AE041    mov         eax,dword ptr [ebp+8]
 005AE044    mov         edx,dword ptr [eax-0C]
 005AE047    mov         eax,dword ptr [ebp+8]
 005AE04A    mov         eax,dword ptr [eax-8]
 005AE04D    sub         eax,dword ptr [ebp-18]
 005AE050    mov         edi,dword ptr [ebp-34]
 005AE053    sub         eax,edi
 005AE055    sub         eax,edi
 005AE057    call        Rect
 005AE05C    mov         eax,dword ptr [ebp+8]
 005AE05F    push        esi
 005AE060    lea         edi,[eax-20]
 005AE063    lea         esi,[ebp-58]
 005AE066    movs        dword ptr [edi],dword ptr [esi]
 005AE067    movs        dword ptr [edi],dword ptr [esi]
 005AE068    movs        dword ptr [edi],dword ptr [esi]
 005AE069    movs        dword ptr [edi],dword ptr [esi]
 005AE06A    pop         esi
 005AE06B    mov         eax,dword ptr [ebp+8]
 005AE06E    cmp         dword ptr [eax-2C],0
>005AE072    je          005AE0DF
 005AE074    mov         eax,dword ptr [ebp+8]
 005AE077    mov         eax,dword ptr [eax-2C]
 005AE07A    mov         eax,dword ptr [eax+50]
 005AE07D    mov         edx,dword ptr [ebp-14]
 005AE080    cmp         eax,edx
>005AE082    jle         005AE08C
 005AE084    sub         eax,edx
 005AE086    mov         edx,dword ptr [ebp+8]
 005AE089    add         dword ptr [edx-14],eax
 005AE08C    mov         eax,dword ptr [ebp+8]
 005AE08F    mov         eax,dword ptr [eax-2C]
 005AE092    mov         eax,dword ptr [eax+54]
 005AE095    mov         edx,dword ptr [ebp-18]
 005AE098    cmp         eax,edx
>005AE09A    jle         005AE0B7
 005AE09C    mov         ecx,ebx
 005AE09E    xor         cl,1
 005AE0A1    test        cl,cl
>005AE0A3    je          005AE0AF
 005AE0A5    sub         eax,edx
 005AE0A7    mov         edx,dword ptr [ebp+8]
 005AE0AA    add         dword ptr [edx-18],eax
>005AE0AD    jmp         005AE0B7
 005AE0AF    sub         eax,edx
 005AE0B1    mov         edx,dword ptr [ebp+8]
 005AE0B4    sub         dword ptr [edx-20],eax
 005AE0B7    mov         eax,dword ptr [ebp+8]
 005AE0BA    mov         ecx,dword ptr [eax-14]
 005AE0BD    sub         ecx,dword ptr [ebp-4C]
 005AE0C0    sar         ecx,1
>005AE0C2    jns         005AE0C7
 005AE0C4    adc         ecx,0
 005AE0C7    mov         eax,dword ptr [ebp+8]
 005AE0CA    mov         edx,dword ptr [eax-18]
 005AE0CD    sub         edx,dword ptr [ebp-50]
 005AE0D0    sar         edx,1
>005AE0D2    jns         005AE0D7
 005AE0D4    adc         edx,0
 005AE0D7    lea         eax,[ebp-58]
 005AE0DA    call        OffsetRect
 005AE0DF    mov         eax,dword ptr [ebp+8]
 005AE0E2    push        esi
 005AE0E3    lea         esi,[eax-20]
 005AE0E6    lea         edi,[ebp-48]
 005AE0E9    movs        dword ptr [edi],dword ptr [esi]
 005AE0EA    movs        dword ptr [edi],dword ptr [esi]
 005AE0EB    movs        dword ptr [edi],dword ptr [esi]
 005AE0EC    movs        dword ptr [edi],dword ptr [esi]
 005AE0ED    pop         esi
 005AE0EE    test        bl,bl
>005AE0F0    je          005AE0FB
 005AE0F2    mov         eax,dword ptr [ebp+8]
 005AE0F5    mov         eax,dword ptr [eax-20]
 005AE0F8    mov         dword ptr [ebp-40],eax
 005AE0FB    lea         ecx,[ebp-74]
 005AE0FE    mov         dl,1B
 005AE100    mov         eax,esi
 005AE102    mov         edi,dword ptr [eax]
 005AE104    call        dword ptr [edi+0A4];TCustomStyleServices.GetElementDetails
 005AE10A    push        1
 005AE10C    lea         eax,[ebp-10]
 005AE10F    push        eax
 005AE110    mov         eax,dword ptr [ebp+8]
 005AE113    mov         eax,dword ptr [eax-28]
 005AE116    call        TCanvas.GetHandle
 005AE11B    mov         edx,eax
 005AE11D    lea         ecx,[ebp-74]
 005AE120    mov         eax,esi
 005AE122    call        TCustomStyleServices.GetElementSize
 005AE127    push        0
 005AE129    lea         eax,[ebp-28]
 005AE12C    push        eax
 005AE12D    mov         eax,dword ptr [ebp+8]
 005AE130    mov         eax,dword ptr [eax-28]
 005AE133    call        TCanvas.GetHandle
 005AE138    mov         edx,eax
 005AE13A    lea         ecx,[ebp-74]
 005AE13D    mov         eax,esi
 005AE13F    call        TCustomStyleServices.GetElementMargins
 005AE144    mov         eax,ebx
 005AE146    xor         al,1
 005AE148    test        al,al
>005AE14A    je          005AE15D
 005AE14C    mov         eax,dword ptr [ebp-10]
 005AE14F    add         eax,dword ptr [ebp-38]
 005AE152    add         dword ptr [ebp-40],eax
 005AE155    mov         eax,dword ptr [ebp-28]
 005AE158    add         dword ptr [ebp-40],eax
>005AE15B    jmp         005AE16C
 005AE15D    mov         eax,dword ptr [ebp-10]
 005AE160    add         eax,dword ptr [ebp-34]
 005AE163    sub         dword ptr [ebp-48],eax
 005AE166    mov         eax,dword ptr [ebp-24]
 005AE169    sub         dword ptr [ebp-40],eax
 005AE16C    mov         eax,dword ptr [ebp+8]
 005AE16F    mov         eax,dword ptr [eax-24]
 005AE172    call        005B1B00
 005AE177    mov         edi,eax
 005AE179    push        60
 005AE17B    push        edi
 005AE17C    lea         eax,[ebp-48]
 005AE17F    call        RectHeight
 005AE184    push        eax
 005AE185    call        kernel32.MulDiv
 005AE18A    mov         edx,eax
 005AE18C    lea         eax,[ebp-48]
 005AE18F    call        0040E80C
 005AE194    mov         eax,dword ptr [ebp+8]
 005AE197    cmp         byte ptr [eax+8],0
>005AE19B    jne         005AE1BA
 005AE19D    lea         eax,[ebp-48]
 005AE1A0    push        eax
 005AE1A1    push        0
 005AE1A3    mov         eax,dword ptr [ebp+8]
 005AE1A6    mov         eax,dword ptr [eax-28]
 005AE1A9    call        TCanvas.GetHandle
 005AE1AE    mov         edx,eax
 005AE1B0    lea         ecx,[ebp-74]
 005AE1B3    mov         eax,esi
 005AE1B5    call        TCustomStyleServices.DrawElement
 005AE1BA    mov         eax,dword ptr [ebp+8]
 005AE1BD    cmp         dword ptr [eax-30],0
>005AE1C1    je          005AE1CC
 005AE1C3    mov         eax,dword ptr [ebp+8]
 005AE1C6    mov         byte ptr [eax-31],0
>005AE1CA    jmp         005AE1FA
 005AE1CC    mov         eax,dword ptr [ebp+8]
 005AE1CF    mov         eax,dword ptr [eax-30]
 005AE1D2    mov         edx,dword ptr ds:[5AC178];TPopupMenu
 005AE1D8    call        @IsClass
 005AE1DD    test        al,al
>005AE1DF    je          005AE1F3
 005AE1E1    mov         eax,dword ptr [ebp+8]
 005AE1E4    mov         eax,dword ptr [eax-30]
 005AE1E7    movzx       eax,byte ptr [eax+70]
 005AE1EB    mov         edx,dword ptr [ebp+8]
 005AE1EE    mov         byte ptr [edx-31],al
>005AE1F1    jmp         005AE1FA
 005AE1F3    mov         eax,dword ptr [ebp+8]
 005AE1F6    mov         byte ptr [eax-31],0
 005AE1FA    mov         eax,dword ptr [ebp+8]
 005AE1FD    cmp         byte ptr [eax-32],0
>005AE201    je          005AE24C
 005AE203    mov         eax,dword ptr [ebp+8]
 005AE206    cmp         byte ptr [eax+8],0
>005AE20A    jne         005AE24C
 005AE20C    mov         eax,dword ptr [ebp+8]
 005AE20F    add         eax,0FFFFFFF0
 005AE212    push        eax
 005AE213    push        0
 005AE215    mov         eax,dword ptr [ebp+8]
 005AE218    mov         eax,dword ptr [eax-24]
 005AE21B    movzx       eax,byte ptr [eax+45]
 005AE21F    movzx       edx,byte ptr [eax+7A1C67]
 005AE226    lea         ecx,[ebp-80]
 005AE229    mov         eax,esi
 005AE22B    mov         edi,dword ptr [eax]
 005AE22D    call        dword ptr [edi+0A4];TCustomStyleServices.GetElementDetails
 005AE233    lea         eax,[ebp-80]
 005AE236    push        eax
 005AE237    mov         eax,dword ptr [ebp+8]
 005AE23A    mov         eax,dword ptr [eax-28]
 005AE23D    call        TCanvas.GetHandle
 005AE242    mov         edx,eax
 005AE244    mov         eax,esi
 005AE246    pop         ecx
 005AE247    call        TCustomStyleServices.DrawElement
 005AE24C    mov         eax,dword ptr [ebp+8]
 005AE24F    mov         eax,dword ptr [eax-24]
 005AE252    mov         eax,dword ptr [eax+40]
 005AE255    mov         edx,5AE93C;'-'
 005AE25A    call        @UStrEqual
>005AE25F    je          005AE56B
 005AE265    mov         eax,dword ptr [ebp+8]
 005AE268    cmp         dword ptr [eax-2C],0
>005AE26C    je          005AE2B8
 005AE26E    mov         eax,dword ptr [ebp+8]
 005AE271    mov         eax,dword ptr [eax-24]
 005AE274    mov         edi,dword ptr [eax+4C]
 005AE277    cmp         edi,0FFFFFFFF
>005AE27A    jle         005AE28E
 005AE27C    mov         eax,dword ptr [ebp+8]
 005AE27F    mov         eax,dword ptr [ebp+8]
 005AE282    mov         eax,dword ptr [eax-2C]
 005AE285    mov         edx,dword ptr [eax]
 005AE287    call        dword ptr [edx+48]
 005AE28A    cmp         edi,eax
>005AE28C    jl          005AE2BC
 005AE28E    mov         eax,dword ptr [ebp+8]
 005AE291    mov         eax,dword ptr [eax-24]
 005AE294    cmp         byte ptr [eax+44],0
>005AE298    je          005AE2B8
 005AE29A    mov         eax,dword ptr [ebp+8]
 005AE29D    mov         eax,dword ptr [eax-24]
 005AE2A0    cmp         dword ptr [eax+58],0
>005AE2A4    je          005AE2BC
 005AE2A6    mov         eax,dword ptr [ebp+8]
 005AE2A9    mov         eax,dword ptr [eax-24]
 005AE2AC    mov         eax,dword ptr [eax+58]
 005AE2AF    mov         edx,dword ptr [eax]
 005AE2B1    call        dword ptr [edx+20]
 005AE2B4    test        al,al
>005AE2B6    jne         005AE2BC
 005AE2B8    xor         eax,eax
>005AE2BA    jmp         005AE2BE
 005AE2BC    mov         al,1
 005AE2BE    mov         edx,dword ptr [ebp+8]
 005AE2C1    mov         byte ptr [edx-33],al
 005AE2C4    mov         eax,dword ptr [ebp+8]
 005AE2C7    cmp         byte ptr [eax-33],0
>005AE2CB    jne         005AE2ED
 005AE2CD    mov         eax,dword ptr [ebp+8]
 005AE2D0    mov         eax,dword ptr [eax-24]
 005AE2D3    mov         edi,dword ptr [eax+58]
 005AE2D6    test        edi,edi
>005AE2D8    je          005AE56B
 005AE2DE    mov         eax,edi
 005AE2E0    mov         edx,dword ptr [eax]
 005AE2E2    call        dword ptr [edx+20]
 005AE2E5    test        al,al
>005AE2E7    jne         005AE56B
 005AE2ED    mov         eax,dword ptr [ebp+8]
 005AE2F0    cmp         byte ptr [eax-33],0
>005AE2F4    je          005AE471
 005AE2FA    mov         eax,dword ptr [ebp+8]
 005AE2FD    mov         eax,dword ptr [eax-24]
 005AE300    mov         edi,dword ptr [eax+4C]
 005AE303    cmp         edi,0FFFFFFFF
>005AE306    jle         005AE3D7
 005AE30C    mov         eax,dword ptr [ebp+8]
 005AE30F    mov         eax,dword ptr [ebp+8]
 005AE312    mov         eax,dword ptr [eax-2C]
 005AE315    mov         edx,dword ptr [eax]
 005AE317    call        dword ptr [edx+48]
 005AE31A    cmp         edi,eax
>005AE31C    jge         005AE3D7
 005AE322    mov         eax,dword ptr [ebp+8]
 005AE325    mov         eax,dword ptr [eax-24]
 005AE328    cmp         byte ptr [eax+44],0
>005AE32C    je          005AE36B
 005AE32E    lea         eax,[ebp-58]
 005AE331    push        eax
 005AE332    push        0
 005AE334    mov         eax,dword ptr [ebp+8]
 005AE337    mov         eax,dword ptr [eax-24]
 005AE33A    movzx       eax,byte ptr [eax+45]
 005AE33E    movzx       edx,byte ptr [eax+7A1C69]
 005AE345    lea         ecx,[ebp-80]
 005AE348    mov         eax,esi
 005AE34A    mov         edi,dword ptr [eax]
 005AE34C    call        dword ptr [edi+0A4];TCustomStyleServices.GetElementDetails
 005AE352    lea         eax,[ebp-80]
 005AE355    push        eax
 005AE356    mov         eax,dword ptr [ebp+8]
 005AE359    mov         eax,dword ptr [eax-28]
 005AE35C    call        TCanvas.GetHandle
 005AE361    mov         edx,eax
 005AE363    mov         eax,esi
 005AE365    pop         ecx
 005AE366    call        TCustomStyleServices.DrawElement
 005AE36B    mov         ecx,dword ptr [ebp+8]
 005AE36E    mov         ecx,dword ptr [ecx-14]
 005AE371    mov         edx,dword ptr [ebp+8]
 005AE374    mov         edx,dword ptr [edx-1C]
 005AE377    sub         ecx,edx
 005AE379    mov         edi,dword ptr [ebp+8]
 005AE37C    mov         edi,dword ptr [edi-2C]
 005AE37F    sub         ecx,dword ptr [edi+50]
 005AE382    sar         ecx,1
>005AE384    jns         005AE389
 005AE386    adc         ecx,0
 005AE389    add         ecx,edx
 005AE38B    push        ecx
 005AE38C    mov         edx,dword ptr [ebp+8]
 005AE38F    mov         edx,dword ptr [edx-24]
 005AE392    mov         edx,dword ptr [edx+4C]
 005AE395    push        edx
 005AE396    mov         edx,dword ptr [ebp+8]
 005AE399    mov         edx,dword ptr [edx-24]
 005AE39C    movzx       edx,byte ptr [edx+45]
 005AE3A0    push        edx
 005AE3A1    mov         edx,dword ptr [ebp+8]
 005AE3A4    mov         ecx,dword ptr [edx-18]
 005AE3A7    mov         eax,dword ptr [ebp+8]
 005AE3AA    mov         eax,dword ptr [eax-20]
 005AE3AD    sub         ecx,eax
 005AE3AF    mov         edx,dword ptr [ebp+8]
 005AE3B2    mov         edx,dword ptr [edx-2C]
 005AE3B5    sub         ecx,dword ptr [edx+54]
 005AE3B8    sar         ecx,1
>005AE3BA    jns         005AE3BF
 005AE3BC    adc         ecx,0
 005AE3BF    add         ecx,eax
 005AE3C1    mov         eax,dword ptr [ebp+8]
 005AE3C4    mov         eax,dword ptr [eax-2C]
 005AE3C7    mov         edx,dword ptr [ebp+8]
 005AE3CA    mov         edx,dword ptr [edx-28]
 005AE3CD    call        TCustomImageList.Draw
>005AE3D2    jmp         005AE56B
 005AE3D7    mov         eax,dword ptr [ebp+8]
 005AE3DA    cmp         byte ptr [eax+8],0
>005AE3DE    jne         005AE56B
 005AE3E4    lea         eax,[ebp-58]
 005AE3E7    push        eax
 005AE3E8    push        0
 005AE3EA    mov         eax,dword ptr [ebp+8]
 005AE3ED    mov         eax,dword ptr [eax-24]
 005AE3F0    movzx       eax,byte ptr [eax+45]
 005AE3F4    movzx       edx,byte ptr [eax+7A1C69]
 005AE3FB    lea         ecx,[ebp-80]
 005AE3FE    mov         eax,esi
 005AE400    mov         edi,dword ptr [eax]
 005AE402    call        dword ptr [edi+0A4];TCustomStyleServices.GetElementDetails
 005AE408    lea         eax,[ebp-80]
 005AE40B    push        eax
 005AE40C    mov         eax,dword ptr [ebp+8]
 005AE40F    mov         eax,dword ptr [eax-28]
 005AE412    call        TCanvas.GetHandle
 005AE417    mov         edx,eax
 005AE419    mov         eax,esi
 005AE41B    pop         ecx
 005AE41C    call        TCustomStyleServices.DrawElement
 005AE421    lea         eax,[ebp-58]
 005AE424    push        eax
 005AE425    push        0
 005AE427    mov         eax,dword ptr [ebp+8]
 005AE42A    mov         eax,dword ptr [eax-24]
 005AE42D    movzx       eax,byte ptr [eax+49]
 005AE431    mov         edx,dword ptr [ebp+8]
 005AE434    mov         edx,dword ptr [edx-24]
 005AE437    movzx       edx,byte ptr [edx+45]
 005AE43B    lea         edx,[edx*2+7A1C6B]
 005AE442    movzx       edx,byte ptr [edx+eax]
 005AE446    lea         ecx,[ebp-80]
 005AE449    mov         eax,esi
 005AE44B    mov         edi,dword ptr [eax]
 005AE44D    call        dword ptr [edi+0A4];TCustomStyleServices.GetElementDetails
 005AE453    lea         eax,[ebp-80]
 005AE456    push        eax
 005AE457    mov         eax,dword ptr [ebp+8]
 005AE45A    mov         eax,dword ptr [eax-28]
 005AE45D    call        TCanvas.GetHandle
 005AE462    mov         edx,eax
 005AE464    mov         eax,esi
 005AE466    pop         ecx
 005AE467    call        TCustomStyleServices.DrawElement
>005AE46C    jmp         005AE56B
 005AE471    push        10
 005AE473    lea         eax,[ebp-68]
 005AE476    push        eax
 005AE477    mov         ecx,10
 005AE47C    xor         edx,edx
 005AE47E    xor         eax,eax
 005AE480    call        Rect
 005AE485    mov         ecx,dword ptr [ebp+8]
 005AE488    mov         ecx,dword ptr [ecx-14]
 005AE48B    mov         edx,dword ptr [ebp+8]
 005AE48E    mov         edx,dword ptr [edx-1C]
 005AE491    sub         ecx,edx
 005AE493    sub         ecx,10
 005AE496    sar         ecx,1
>005AE498    jns         005AE49D
 005AE49A    adc         ecx,0
 005AE49D    add         ecx,edx
 005AE49F    push        ecx
 005AE4A0    mov         edx,dword ptr [ebp+8]
 005AE4A3    mov         edx,dword ptr [edx-18]
 005AE4A6    mov         eax,dword ptr [ebp+8]
 005AE4A9    mov         eax,dword ptr [eax-20]
 005AE4AC    sub         edx,eax
 005AE4AE    sub         edx,10
 005AE4B1    sar         edx,1
>005AE4B3    jns         005AE4B8
 005AE4B5    adc         edx,0
 005AE4B8    add         edx,eax
 005AE4BA    lea         eax,[ebp-68]
 005AE4BD    pop         ecx
 005AE4BE    call        OffsetRect
 005AE4C3    mov         eax,dword ptr [ebp+8]
 005AE4C6    mov         eax,dword ptr [eax-24]
 005AE4C9    mov         eax,dword ptr [eax+58]
 005AE4CC    mov         edx,dword ptr [eax]
 005AE4CE    call        dword ptr [edx+30]
 005AE4D1    cmp         eax,dword ptr [ebp-18]
>005AE4D4    jge         005AE50A
 005AE4D6    mov         eax,dword ptr [ebp+8]
 005AE4D9    mov         eax,dword ptr [eax-24]
 005AE4DC    mov         eax,dword ptr [eax+58]
 005AE4DF    mov         edx,dword ptr [eax]
 005AE4E1    call        dword ptr [edx+30]
 005AE4E4    mov         edx,dword ptr [ebp-60]
 005AE4E7    sub         edx,dword ptr [ebp-68]
 005AE4EA    sub         edx,eax
 005AE4EC    sar         edx,1
>005AE4EE    jns         005AE4F3
 005AE4F0    adc         edx,0
 005AE4F3    add         dword ptr [ebp-68],edx
 005AE4F6    mov         eax,dword ptr [ebp+8]
 005AE4F9    mov         eax,dword ptr [eax-24]
 005AE4FC    mov         eax,dword ptr [eax+58]
 005AE4FF    mov         edx,dword ptr [eax]
 005AE501    call        dword ptr [edx+30]
 005AE504    add         eax,dword ptr [ebp-68]
 005AE507    mov         dword ptr [ebp-60],eax
 005AE50A    mov         eax,dword ptr [ebp+8]
 005AE50D    mov         eax,dword ptr [eax-24]
 005AE510    mov         eax,dword ptr [eax+58]
 005AE513    mov         edx,dword ptr [eax]
 005AE515    call        dword ptr [edx+24]
 005AE518    cmp         eax,dword ptr [ebp-14]
>005AE51B    jge         005AE551
 005AE51D    mov         eax,dword ptr [ebp+8]
 005AE520    mov         eax,dword ptr [eax-24]
 005AE523    mov         eax,dword ptr [eax+58]
 005AE526    mov         edx,dword ptr [eax]
 005AE528    call        dword ptr [edx+24]
 005AE52B    mov         edx,dword ptr [ebp-5C]
 005AE52E    sub         edx,dword ptr [ebp-64]
 005AE531    sub         edx,eax
 005AE533    sar         edx,1
>005AE535    jns         005AE53A
 005AE537    adc         edx,0
 005AE53A    add         dword ptr [ebp-64],edx
 005AE53D    mov         eax,dword ptr [ebp+8]
 005AE540    mov         eax,dword ptr [eax-24]
 005AE543    mov         eax,dword ptr [eax+58]
 005AE546    mov         edx,dword ptr [eax]
 005AE548    call        dword ptr [edx+24]
 005AE54B    add         eax,dword ptr [ebp-64]
 005AE54E    mov         dword ptr [ebp-5C],eax
 005AE551    mov         eax,dword ptr [ebp+8]
 005AE554    mov         eax,dword ptr [eax-24]
 005AE557    mov         ecx,dword ptr [eax+58]
 005AE55A    lea         edx,[ebp-68]
 005AE55D    mov         eax,dword ptr [ebp+8]
 005AE560    mov         eax,dword ptr [eax-28]
 005AE563    mov         edi,dword ptr [eax]
 005AE565    call        dword ptr [edi+88]
 005AE56B    push        0
 005AE56D    lea         eax,[ebp-28]
 005AE570    push        eax
 005AE571    lea         ecx,[ebp-80]
 005AE574    mov         dl,1C
 005AE576    mov         eax,esi
 005AE578    mov         edi,dword ptr [eax]
 005AE57A    call        dword ptr [edi+0A4];TCustomStyleServices.GetElementDetails
 005AE580    lea         eax,[ebp-80]
 005AE583    push        eax
 005AE584    mov         eax,dword ptr [ebp+8]
 005AE587    mov         eax,dword ptr [eax-28]
 005AE58A    call        TCanvas.GetHandle
 005AE58F    mov         edx,eax
 005AE591    mov         eax,esi
 005AE593    pop         ecx
 005AE594    call        TCustomStyleServices.GetElementMargins
 005AE599    mov         eax,dword ptr [ebp+8]
 005AE59C    cmp         byte ptr [eax+8],0
>005AE5A0    jne         005AE648
 005AE5A6    mov         eax,ebx
 005AE5A8    xor         al,1
 005AE5AA    test        al,al
>005AE5AC    je          005AE5C2
 005AE5AE    mov         eax,dword ptr [ebp+8]
 005AE5B1    mov         edx,dword ptr [ebp-40]
 005AE5B4    mov         dword ptr [eax-10],edx
 005AE5B7    mov         eax,dword ptr [ebp+8]
 005AE5BA    mov         edx,dword ptr [ebp-28]
 005AE5BD    add         dword ptr [eax-10],edx
>005AE5C0    jmp         005AE5D4
 005AE5C2    mov         eax,dword ptr [ebp+8]
 005AE5C5    mov         edx,dword ptr [ebp-48]
 005AE5C8    mov         dword ptr [eax-8],edx
 005AE5CB    mov         eax,dword ptr [ebp+8]
 005AE5CE    mov         edx,dword ptr [ebp-28]
 005AE5D1    sub         dword ptr [eax-8],edx
 005AE5D4    mov         eax,dword ptr [ebp+8]
 005AE5D7    mov         eax,dword ptr [eax-24]
 005AE5DA    mov         eax,dword ptr [eax+40]
 005AE5DD    mov         edx,5AE93C;'-'
 005AE5E2    call        @UStrEqual
>005AE5E7    je          005AE6B3
 005AE5ED    push        1
 005AE5EF    lea         eax,[ebp-10]
 005AE5F2    push        eax
 005AE5F3    mov         eax,dword ptr [ebp+8]
 005AE5F6    mov         eax,dword ptr [eax-24]
 005AE5F9    movzx       eax,byte ptr [eax+45]
 005AE5FD    movzx       edx,byte ptr [eax+7A1C6F]
 005AE604    lea         ecx,[ebp-80]
 005AE607    mov         eax,esi
 005AE609    mov         edi,dword ptr [eax]
 005AE60B    call        dword ptr [edi+0A4];TCustomStyleServices.GetElementDetails
 005AE611    lea         eax,[ebp-80]
 005AE614    push        eax
 005AE615    mov         eax,dword ptr [ebp+8]
 005AE618    mov         eax,dword ptr [eax-28]
 005AE61B    call        TCanvas.GetHandle
 005AE620    mov         edx,eax
 005AE622    mov         eax,esi
 005AE624    pop         ecx
 005AE625    call        TCustomStyleServices.GetElementSize
 005AE62A    mov         eax,ebx
 005AE62C    xor         al,1
 005AE62E    test        al,al
>005AE630    je          005AE63D
 005AE632    mov         eax,dword ptr [ebp+8]
 005AE635    mov         edx,dword ptr [ebp-10]
 005AE638    sub         dword ptr [eax-8],edx
>005AE63B    jmp         005AE6B3
 005AE63D    mov         eax,dword ptr [ebp+8]
 005AE640    mov         edx,dword ptr [ebp-10]
 005AE643    add         dword ptr [eax-10],edx
>005AE646    jmp         005AE6B3
 005AE648    mov         eax,dword ptr [ebp+8]
 005AE64B    cmp         dword ptr [eax-2C],0
>005AE64F    je          005AE65D
 005AE651    mov         eax,dword ptr [ebp+8]
 005AE654    mov         eax,dword ptr [eax-24]
 005AE657    cmp         dword ptr [eax+4C],0FFFFFFFF
>005AE65B    jne         005AE669
 005AE65D    mov         eax,dword ptr [ebp+8]
 005AE660    mov         eax,dword ptr [eax-24]
 005AE663    cmp         dword ptr [eax+58],0
>005AE667    je          005AE695
 005AE669    test        bl,bl
>005AE66B    jne         005AE681
 005AE66D    mov         eax,dword ptr [ebp+8]
 005AE670    mov         eax,dword ptr [eax-18]
 005AE673    mov         edx,dword ptr [ebp+8]
 005AE676    sub         eax,dword ptr [edx-20]
 005AE679    mov         edx,dword ptr [ebp+8]
 005AE67C    add         dword ptr [edx-10],eax
>005AE67F    jmp         005AE6B3
 005AE681    mov         eax,dword ptr [ebp+8]
 005AE684    mov         eax,dword ptr [eax-18]
 005AE687    mov         edx,dword ptr [ebp+8]
 005AE68A    sub         eax,dword ptr [edx-20]
 005AE68D    mov         edx,dword ptr [ebp+8]
 005AE690    sub         dword ptr [edx-8],eax
>005AE693    jmp         005AE6B3
 005AE695    test        bl,bl
>005AE697    jne         005AE6A7
 005AE699    mov         eax,dword ptr [ebp-28]
 005AE69C    add         eax,3
 005AE69F    mov         edx,dword ptr [ebp+8]
 005AE6A2    add         dword ptr [edx-10],eax
>005AE6A5    jmp         005AE6B3
 005AE6A7    mov         eax,dword ptr [ebp-28]
 005AE6AA    add         eax,3
 005AE6AD    mov         edx,dword ptr [ebp+8]
 005AE6B0    sub         dword ptr [edx-8],eax
 005AE6B3    mov         eax,dword ptr [ebp+8]
 005AE6B6    mov         eax,dword ptr [eax-24]
 005AE6B9    mov         eax,dword ptr [eax+40]
 005AE6BC    mov         edx,5AE93C;'-'
 005AE6C1    call        @UStrEqual
>005AE6C6    je          005AE89B
 005AE6CC    mov         esi,5AE940
 005AE6D1    lea         edi,[ebp-0A4]
 005AE6D7    movs        word ptr [edi],word ptr [esi]
 005AE6D9    movs        byte ptr [edi],byte ptr [esi]
 005AE6DA    mov         eax,dword ptr [ebp+8]
 005AE6DD    movzx       eax,byte ptr [eax-31]
 005AE6E1    movzx       eax,byte ptr [eax+7A1C5C]
 005AE6E8    cmp         al,17
>005AE6EA    ja          005AE707
 005AE6EC    and         eax,7F
 005AE6EF    lea         edx,[ebp-0A4]
 005AE6F5    mov         ecx,edx
 005AE6F7    and         ecx,3
 005AE6FA    sub         edx,ecx
 005AE6FC    add         ecx,ecx
 005AE6FE    add         ecx,ecx
 005AE700    add         ecx,ecx
 005AE702    add         eax,ecx
 005AE704    bts         dword ptr [edx],eax
 005AE707    lea         eax,[ebp-0A4]
 005AE70D    lea         edx,[ebp-0A0]
 005AE713    mov         ecx,300
 005AE718    call        @SetExpand
 005AE71D    mov         esi,dword ptr [ebp-0A0]
 005AE723    mov         eax,dword ptr [ebp+8]
 005AE726    test        byte ptr [eax+0D],1
>005AE72A    je          005AE732
 005AE72C    or          esi,40000
 005AE732    mov         eax,dword ptr [ebp+8]
 005AE735    mov         edx,dword ptr [ebp+8]
 005AE738    push        esi
 005AE739    lea         esi,[eax-10]
 005AE73C    lea         edi,[edx-44]
 005AE73F    movs        dword ptr [edi],dword ptr [esi]
 005AE740    movs        dword ptr [edi],dword ptr [esi]
 005AE741    movs        dword ptr [edi],dword ptr [esi]
 005AE742    movs        dword ptr [edi],dword ptr [esi]
 005AE743    pop         esi
 005AE744    mov         eax,dword ptr [ebp+8]
 005AE747    add         eax,0FFFFFFF0
 005AE74A    push        eax
 005AE74B    mov         eax,dword ptr [ebp+8]
 005AE74E    movzx       eax,byte ptr [eax-32]
 005AE752    push        eax
 005AE753    mov         eax,[005AE944];0x402 gvar_005AE944
 005AE758    or          eax,esi
 005AE75A    push        eax
 005AE75B    mov         eax,dword ptr [ebp+8]
 005AE75E    mov         eax,dword ptr [eax-24]
 005AE761    mov         ecx,dword ptr [eax+40]
 005AE764    mov         eax,dword ptr [ebp+8]
 005AE767    mov         edx,dword ptr [eax-28]
 005AE76A    mov         eax,dword ptr [ebp+8]
 005AE76D    mov         eax,dword ptr [eax-24]
 005AE770    call        005ADCA8
 005AE775    test        bl,bl
>005AE777    je          005AE791
 005AE779    mov         eax,dword ptr [ebp+8]
 005AE77C    mov         eax,dword ptr [eax-44]
 005AE77F    mov         edx,dword ptr [ebp+8]
 005AE782    mov         dword ptr [edx-10],eax
 005AE785    mov         eax,dword ptr [ebp+8]
 005AE788    mov         eax,dword ptr [eax-3C]
 005AE78B    mov         edx,dword ptr [ebp+8]
 005AE78E    mov         dword ptr [edx-8],eax
 005AE791    mov         eax,dword ptr [ebp+8]
 005AE794    mov         ecx,dword ptr [eax-38]
 005AE797    mov         eax,dword ptr [ebp+8]
 005AE79A    sub         ecx,dword ptr [eax-40]
 005AE79D    mov         eax,dword ptr [ebp+8]
 005AE7A0    mov         eax,dword ptr [eax-4]
 005AE7A3    mov         edx,dword ptr [ebp+8]
 005AE7A6    sub         eax,dword ptr [edx-0C]
 005AE7A9    sub         ecx,eax
 005AE7AB    sar         ecx,1
>005AE7AD    jns         005AE7B2
 005AE7AF    adc         ecx,0
 005AE7B2    mov         eax,dword ptr [ebp+8]
 005AE7B5    add         eax,0FFFFFFF0
 005AE7B8    xor         edx,edx
 005AE7BA    call        OffsetRect
 005AE7BF    mov         eax,dword ptr [ebp+8]
 005AE7C2    add         eax,0FFFFFFF0
 005AE7C5    push        eax
 005AE7C6    mov         eax,dword ptr [ebp+8]
 005AE7C9    movzx       eax,byte ptr [eax-32]
 005AE7CD    push        eax
 005AE7CE    push        esi
 005AE7CF    mov         eax,dword ptr [ebp+8]
 005AE7D2    mov         eax,dword ptr [eax-24]
 005AE7D5    mov         ecx,dword ptr [eax+40]
 005AE7D8    mov         eax,dword ptr [ebp+8]
 005AE7DB    mov         edx,dword ptr [eax-28]
 005AE7DE    mov         eax,dword ptr [ebp+8]
 005AE7E1    mov         eax,dword ptr [eax-24]
 005AE7E4    call        005ADCA8
 005AE7E9    mov         eax,dword ptr [ebp+8]
 005AE7EC    mov         eax,dword ptr [eax-24]
 005AE7EF    movzx       esi,word ptr [eax+6C]
 005AE7F3    test        si,si
>005AE7F6    je          005AE90A
 005AE7FC    mov         eax,dword ptr [ebp+8]
 005AE7FF    cmp         byte ptr [eax+8],0
>005AE803    jne         005AE90A
 005AE809    mov         eax,dword ptr [ebp+8]
 005AE80C    mov         eax,dword ptr [eax-24]
 005AE80F    cmp         dword ptr [eax+68],0
>005AE813    jne         005AE90A
 005AE819    lea         edx,[ebp-4]
 005AE81C    mov         eax,esi
 005AE81E    call        ShortCutToText
 005AE823    test        bl,bl
>005AE825    jne         005AE847
 005AE827    mov         eax,dword ptr [ebp+8]
 005AE82A    mov         eax,dword ptr [eax-8]
 005AE82D    mov         edx,dword ptr [ebp+8]
 005AE830    mov         dword ptr [edx-10],eax
 005AE833    mov         eax,dword ptr [ebp+8]
 005AE836    mov         eax,dword ptr [eax-3C]
 005AE839    sub         eax,dword ptr [ebp-10]
 005AE83C    sub         eax,dword ptr [ebp-28]
 005AE83F    mov         edx,dword ptr [ebp+8]
 005AE842    mov         dword ptr [edx-8],eax
>005AE845    jmp         005AE874
 005AE847    mov         eax,dword ptr [ebp-10]
 005AE84A    mov         edx,eax
 005AE84C    add         edx,eax
 005AE84E    add         edx,dword ptr [ebp-28]
 005AE851    add         edx,dword ptr [ebp-24]
 005AE854    mov         eax,dword ptr [ebp+8]
 005AE857    mov         dword ptr [eax-10],edx
 005AE85A    mov         eax,dword ptr [ebp+8]
 005AE85D    mov         eax,dword ptr [eax-28]
 005AE860    mov         edx,dword ptr [ebp-4]
 005AE863    call        TCustomCanvas.TextWidth
 005AE868    mov         edx,dword ptr [ebp+8]
 005AE86B    add         eax,dword ptr [edx-10]
 005AE86E    mov         edx,dword ptr [ebp+8]
 005AE871    mov         dword ptr [edx-8],eax
 005AE874    mov         eax,dword ptr [ebp+8]
 005AE877    add         eax,0FFFFFFF0
 005AE87A    push        eax
 005AE87B    mov         eax,dword ptr [ebp+8]
 005AE87E    movzx       eax,byte ptr [eax-32]
 005AE882    push        eax
 005AE883    push        2
 005AE885    mov         eax,dword ptr [ebp+8]
 005AE888    mov         edx,dword ptr [eax-28]
 005AE88B    mov         eax,dword ptr [ebp+8]
 005AE88E    mov         eax,dword ptr [eax-24]
 005AE891    mov         ecx,dword ptr [ebp-4]
 005AE894    call        005ADA30
>005AE899    jmp         005AE90A
 005AE89B    test        bl,bl
>005AE89D    jne         005AE8AB
 005AE89F    mov         eax,dword ptr [ebp-40]
 005AE8A2    inc         eax
 005AE8A3    mov         edx,dword ptr [ebp+8]
 005AE8A6    mov         dword ptr [edx-10],eax
>005AE8A9    jmp         005AE8B5
 005AE8AB    mov         eax,dword ptr [ebp-48]
 005AE8AE    dec         eax
 005AE8AF    mov         edx,dword ptr [ebp+8]
 005AE8B2    mov         dword ptr [edx-8],eax
 005AE8B5    lea         ecx,[ebp-74]
 005AE8B8    mov         dl,20
 005AE8BA    mov         eax,esi
 005AE8BC    mov         ebx,dword ptr [eax]
 005AE8BE    call        dword ptr [ebx+0A4];TCustomStyleServices.GetElementDetails
 005AE8C4    push        0
 005AE8C6    lea         eax,[ebp-28]
 005AE8C9    push        eax
 005AE8CA    mov         eax,dword ptr [ebp+8]
 005AE8CD    mov         eax,dword ptr [eax-28]
 005AE8D0    call        TCanvas.GetHandle
 005AE8D5    mov         edx,eax
 005AE8D7    lea         ecx,[ebp-74]
 005AE8DA    mov         eax,esi
 005AE8DC    call        TCustomStyleServices.GetElementMargins
 005AE8E1    mov         eax,dword ptr [ebp+8]
 005AE8E4    mov         edx,dword ptr [ebp-1C]
 005AE8E7    sub         dword ptr [eax-4],edx
 005AE8EA    mov         eax,dword ptr [ebp+8]
 005AE8ED    add         eax,0FFFFFFF0
 005AE8F0    push        eax
 005AE8F1    push        0
 005AE8F3    mov         eax,dword ptr [ebp+8]
 005AE8F6    mov         eax,dword ptr [eax-28]
 005AE8F9    call        TCanvas.GetHandle
 005AE8FE    mov         edx,eax
 005AE900    lea         ecx,[ebp-74]
 005AE903    mov         eax,esi
 005AE905    call        TCustomStyleServices.DrawElement
 005AE90A    xor         eax,eax
 005AE90C    pop         edx
 005AE90D    pop         ecx
 005AE90E    pop         ecx
 005AE90F    mov         dword ptr fs:[eax],edx
 005AE912    push        5AE927
 005AE917    lea         eax,[ebp-4]
 005AE91A    call        @UStrClr
 005AE91F    ret
>005AE920    jmp         @HandleFinally
>005AE925    jmp         005AE917
 005AE927    pop         edi
 005AE928    pop         esi
 005AE929    pop         ebx
 005AE92A    mov         esp,ebp
 005AE92C    pop         ebp
 005AE92D    ret
end;*}

//005AE948
{*procedure sub_005AE948(?:?);
begin
 005AE948    push        ebp
 005AE949    mov         ebp,esp
 005AE94B    push        0
 005AE94D    push        ebx
 005AE94E    push        esi
 005AE94F    push        edi
 005AE950    xor         eax,eax
 005AE952    push        ebp
 005AE953    push        5AF287
 005AE958    push        dword ptr fs:[eax]
 005AE95B    mov         dword ptr fs:[eax],esp
 005AE95E    mov         eax,dword ptr [ebp+8]
 005AE961    cmp         byte ptr [eax-45],0
>005AE965    je          005AE970
 005AE967    mov         eax,dword ptr [ebp+8]
 005AE96A    cmp         byte ptr [eax-46],0
>005AE96E    jne         005AE98B
 005AE970    mov         eax,dword ptr [ebp+8]
 005AE973    cmp         byte ptr [eax-45],0
>005AE977    je          005AEA04
 005AE97D    call        TStyleManager.GetSystemStyle
 005AE982    mov         edx,dword ptr [eax]
 005AE984    call        dword ptr [edx+4C];TCustomStyleServices.GetEnabled
 005AE987    test        al,al
>005AE989    je          005AEA04
 005AE98B    mov         eax,dword ptr [ebp+8]
 005AE98E    test        byte ptr [eax+0C],1
>005AE992    jne         005AE99D
 005AE994    mov         eax,dword ptr [ebp+8]
 005AE997    test        byte ptr [eax+0C],40
>005AE99B    je          005AE9E8
 005AE99D    call        TStyleManager.GetSystemStyle
 005AE9A2    mov         edx,dword ptr [eax]
 005AE9A4    call        dword ptr [edx+4C];TCustomStyleServices.GetEnabled
 005AE9A7    test        al,al
>005AE9A9    je          005AE9C0
 005AE9AB    mov         eax,dword ptr [ebp+8]
 005AE9AE    mov         eax,dword ptr [eax-28]
 005AE9B1    mov         eax,dword ptr [eax+48]
 005AE9B4    mov         edx,0FF00001D
 005AE9B9    call        TBrush.SetColor
>005AE9BE    jmp         005AE9D3
 005AE9C0    mov         eax,dword ptr [ebp+8]
 005AE9C3    mov         eax,dword ptr [eax-28]
 005AE9C6    mov         eax,dword ptr [eax+48]
 005AE9C9    mov         edx,0FF00000D
 005AE9CE    call        TBrush.SetColor
 005AE9D3    mov         eax,dword ptr [ebp+8]
 005AE9D6    mov         eax,dword ptr [eax-28]
 005AE9D9    mov         eax,dword ptr [eax+40]
 005AE9DC    mov         edx,0FF00000E
 005AE9E1    call        TFont.SetColor
>005AE9E6    jmp         005AEA04
 005AE9E8    mov         eax,dword ptr [ebp+8]
 005AE9EB    cmp         byte ptr [eax+8],0
>005AE9EF    je          005AEA04
 005AE9F1    mov         eax,dword ptr [ebp+8]
 005AE9F4    mov         eax,dword ptr [eax-28]
 005AE9F7    mov         eax,dword ptr [eax+48]
 005AE9FA    mov         edx,0FF00001E
 005AE9FF    call        TBrush.SetColor
 005AEA04    mov         eax,dword ptr [ebp+8]
 005AEA07    cmp         byte ptr [eax-32],0
>005AEA0B    je          005AEA16
 005AEA0D    mov         eax,dword ptr [ebp+8]
 005AEA10    cmp         byte ptr [eax-45],0
>005AEA14    je          005AEA27
 005AEA16    mov         eax,dword ptr [ebp+8]
 005AEA19    lea         edx,[eax-10]
 005AEA1C    mov         eax,dword ptr [ebp+8]
 005AEA1F    mov         eax,dword ptr [eax-28]
 005AEA22    mov         ecx,dword ptr [eax]
 005AEA24    call        dword ptr [ecx+54]
 005AEA27    mov         eax,dword ptr [ebp+8]
 005AEA2A    cmp         dword ptr [eax-30],0
>005AEA2E    je          005AEA39
 005AEA30    mov         eax,dword ptr [ebp+8]
 005AEA33    mov         byte ptr [eax-31],0
>005AEA37    jmp         005AEA67
 005AEA39    mov         eax,dword ptr [ebp+8]
 005AEA3C    mov         eax,dword ptr [eax-30]
 005AEA3F    mov         edx,dword ptr ds:[5AC178];TPopupMenu
 005AEA45    call        @IsClass
 005AEA4A    test        al,al
>005AEA4C    je          005AEA60
 005AEA4E    mov         eax,dword ptr [ebp+8]
 005AEA51    mov         eax,dword ptr [eax-30]
 005AEA54    movzx       eax,byte ptr [eax+70]
 005AEA58    mov         edx,dword ptr [ebp+8]
 005AEA5B    mov         byte ptr [edx-31],al
>005AEA5E    jmp         005AEA67
 005AEA60    mov         eax,dword ptr [ebp+8]
 005AEA63    mov         byte ptr [eax-31],0
 005AEA67    mov         eax,dword ptr [ebp+8]
 005AEA6A    mov         eax,dword ptr [eax-10]
 005AEA6D    inc         eax
 005AEA6E    mov         edx,dword ptr [ebp+8]
 005AEA71    mov         dword ptr [edx-20],eax
 005AEA74    mov         eax,dword ptr [ebp+8]
 005AEA77    mov         eax,dword ptr [eax-0C]
 005AEA7A    inc         eax
 005AEA7B    mov         edx,dword ptr [ebp+8]
 005AEA7E    mov         dword ptr [edx-1C],eax
 005AEA81    mov         eax,dword ptr [ebp+8]
 005AEA84    mov         eax,dword ptr [eax-24]
 005AEA87    mov         eax,dword ptr [eax+40]
 005AEA8A    mov         edx,5AF2A0;'-'
 005AEA8F    call        @UStrEqual
>005AEA94    jne         005AEAC5
 005AEA96    mov         eax,dword ptr [ebp+8]
 005AEA99    lea         edx,[eax-10]
 005AEA9C    mov         eax,dword ptr [ebp+8]
 005AEA9F    mov         eax,dword ptr [eax-28]
 005AEAA2    mov         ecx,dword ptr [eax]
 005AEAA4    call        dword ptr [ecx+54]
 005AEAA7    mov         eax,dword ptr [ebp+8]
 005AEAAA    xor         edx,edx
 005AEAAC    mov         dword ptr [eax-20],edx
 005AEAAF    mov         eax,dword ptr [ebp+8]
 005AEAB2    mov         dword ptr [eax-18],0FFFFFFFC
 005AEAB9    mov         eax,dword ptr [ebp+8]
 005AEABC    mov         byte ptr [eax-47],0
>005AEAC0    jmp         005AEF59
 005AEAC5    mov         eax,dword ptr [ebp+8]
 005AEAC8    cmp         dword ptr [eax-2C],0
>005AEACC    je          005AEB12
 005AEACE    mov         eax,dword ptr [ebp+8]
 005AEAD1    mov         eax,dword ptr [eax-24]
 005AEAD4    mov         ebx,dword ptr [eax+4C]
 005AEAD7    cmp         ebx,0FFFFFFFF
>005AEADA    jle         005AEAEE
 005AEADC    mov         eax,dword ptr [ebp+8]
 005AEADF    mov         eax,dword ptr [ebp+8]
 005AEAE2    mov         eax,dword ptr [eax-2C]
 005AEAE5    mov         edx,dword ptr [eax]
 005AEAE7    call        dword ptr [edx+48]
 005AEAEA    cmp         ebx,eax
>005AEAEC    jl          005AEB16
 005AEAEE    mov         eax,dword ptr [ebp+8]
 005AEAF1    mov         eax,dword ptr [eax-24]
 005AEAF4    cmp         byte ptr [eax+44],0
>005AEAF8    je          005AEB12
 005AEAFA    mov         eax,dword ptr [ebp+8]
 005AEAFD    mov         eax,dword ptr [eax-24]
 005AEB00    mov         esi,dword ptr [eax+58]
 005AEB03    test        esi,esi
>005AEB05    je          005AEB16
 005AEB07    mov         eax,esi
 005AEB09    mov         edx,dword ptr [eax]
 005AEB0B    call        dword ptr [edx+20]
 005AEB0E    test        al,al
>005AEB10    jne         005AEB16
 005AEB12    xor         eax,eax
>005AEB14    jmp         005AEB18
 005AEB16    mov         al,1
 005AEB18    mov         edx,dword ptr [ebp+8]
 005AEB1B    mov         byte ptr [edx-33],al
 005AEB1E    mov         eax,dword ptr [ebp+8]
 005AEB21    cmp         byte ptr [eax-33],0
>005AEB25    jne         005AEB47
 005AEB27    mov         eax,dword ptr [ebp+8]
 005AEB2A    mov         eax,dword ptr [eax-24]
 005AEB2D    mov         ebx,dword ptr [eax+58]
 005AEB30    test        ebx,ebx
>005AEB32    je          005AEEFC
 005AEB38    mov         eax,ebx
 005AEB3A    mov         edx,dword ptr [eax]
 005AEB3C    call        dword ptr [edx+20]
 005AEB3F    test        al,al
>005AEB41    jne         005AEEFC
 005AEB47    mov         eax,dword ptr [ebp+8]
 005AEB4A    mov         byte ptr [eax-47],1
 005AEB4E    mov         eax,dword ptr [ebp+8]
 005AEB51    cmp         byte ptr [eax-33],0
>005AEB55    je          005AEB83
 005AEB57    mov         eax,dword ptr [ebp+8]
 005AEB5A    mov         eax,dword ptr [eax-20]
 005AEB5D    mov         edx,dword ptr [ebp+8]
 005AEB60    mov         edx,dword ptr [edx-2C]
 005AEB63    add         eax,dword ptr [edx+54]
 005AEB66    mov         edx,dword ptr [ebp+8]
 005AEB69    mov         dword ptr [edx-18],eax
 005AEB6C    mov         eax,dword ptr [ebp+8]
 005AEB6F    mov         eax,dword ptr [eax-1C]
 005AEB72    mov         edx,dword ptr [ebp+8]
 005AEB75    mov         edx,dword ptr [edx-2C]
 005AEB78    add         eax,dword ptr [edx+50]
 005AEB7B    mov         edx,dword ptr [ebp+8]
 005AEB7E    mov         dword ptr [edx-14],eax
>005AEB81    jmp         005AEBA1
 005AEB83    mov         eax,dword ptr [ebp+8]
 005AEB86    mov         eax,dword ptr [eax-20]
 005AEB89    add         eax,10
 005AEB8C    mov         edx,dword ptr [ebp+8]
 005AEB8F    mov         dword ptr [edx-18],eax
 005AEB92    mov         eax,dword ptr [ebp+8]
 005AEB95    mov         eax,dword ptr [eax-1C]
 005AEB98    add         eax,10
 005AEB9B    mov         edx,dword ptr [ebp+8]
 005AEB9E    mov         dword ptr [edx-14],eax
 005AEBA1    mov         eax,dword ptr [ebp+8]
 005AEBA4    mov         eax,dword ptr [eax-24]
 005AEBA7    cmp         byte ptr [eax+44],0
>005AEBAB    je          005AEC73
 005AEBB1    mov         eax,dword ptr [ebp+8]
 005AEBB4    cmp         byte ptr [eax-45],0
>005AEBB8    jne         005AEC73
 005AEBBE    mov         eax,dword ptr [ebp+8]
 005AEBC1    inc         dword ptr [eax-18]
 005AEBC4    mov         eax,dword ptr [ebp+8]
 005AEBC7    inc         dword ptr [eax-14]
 005AEBCA    mov         eax,dword ptr [ebp+8]
 005AEBCD    mov         eax,dword ptr [eax-28]
 005AEBD0    mov         eax,dword ptr [eax+48]
 005AEBD3    mov         eax,dword ptr [eax+10]
 005AEBD6    mov         eax,dword ptr [eax+18]
 005AEBD9    mov         edx,dword ptr [ebp+8]
 005AEBDC    mov         dword ptr [edx-4C],eax
 005AEBDF    mov         eax,dword ptr [ebp+8]
 005AEBE2    test        byte ptr [eax+0C],1
>005AEBE6    jne         005AEC2F
 005AEBE8    mov         eax,dword ptr [ebp+8]
 005AEBEB    mov         eax,dword ptr [eax-28]
 005AEBEE    mov         eax,dword ptr [eax+48]
 005AEBF1    mov         eax,dword ptr [eax+10]
 005AEBF4    mov         eax,dword ptr [eax+18]
 005AEBF7    mov         edx,dword ptr [ebp+8]
 005AEBFA    mov         dword ptr [edx-4C],eax
 005AEBFD    mov         edx,0FF000014
 005AEC02    mov         eax,0FF00000F
 005AEC07    call        AllocPatternBitmap
 005AEC0C    mov         edx,eax
 005AEC0E    mov         eax,dword ptr [ebp+8]
 005AEC11    mov         eax,dword ptr [eax-28]
 005AEC14    mov         eax,dword ptr [eax+48]
 005AEC17    call        TBrush.SetBitmap
 005AEC1C    mov         eax,dword ptr [ebp+8]
 005AEC1F    lea         edx,[eax-20]
 005AEC22    mov         eax,dword ptr [ebp+8]
 005AEC25    mov         eax,dword ptr [eax-28]
 005AEC28    mov         ecx,dword ptr [eax]
 005AEC2A    call        dword ptr [ecx+54]
>005AEC2D    jmp         005AEC53
 005AEC2F    mov         eax,dword ptr [ebp+8]
 005AEC32    mov         eax,dword ptr [eax-28]
 005AEC35    mov         eax,dword ptr [eax+48]
 005AEC38    mov         edx,0FF00000F
 005AEC3D    call        TBrush.SetColor
 005AEC42    mov         eax,dword ptr [ebp+8]
 005AEC45    lea         edx,[eax-20]
 005AEC48    mov         eax,dword ptr [ebp+8]
 005AEC4B    mov         eax,dword ptr [eax-28]
 005AEC4E    mov         ecx,dword ptr [eax]
 005AEC50    call        dword ptr [ecx+54]
 005AEC53    mov         eax,dword ptr [ebp+8]
 005AEC56    mov         edx,dword ptr [eax-4C]
 005AEC59    mov         eax,dword ptr [ebp+8]
 005AEC5C    mov         eax,dword ptr [eax-28]
 005AEC5F    mov         eax,dword ptr [eax+48]
 005AEC62    call        TBrush.SetColor
 005AEC67    mov         eax,dword ptr [ebp+8]
 005AEC6A    inc         dword ptr [eax-20]
 005AEC6D    mov         eax,dword ptr [ebp+8]
 005AEC70    inc         dword ptr [eax-1C]
 005AEC73    mov         eax,dword ptr [ebp+8]
 005AEC76    cmp         byte ptr [eax-33],0
>005AEC7A    je          005AEDD5
 005AEC80    mov         eax,dword ptr [ebp+8]
 005AEC83    mov         eax,dword ptr [eax-24]
 005AEC86    mov         ebx,dword ptr [eax+4C]
 005AEC89    cmp         ebx,0FFFFFFFF
>005AEC8C    jle         005AECD8
 005AEC8E    mov         eax,dword ptr [ebp+8]
 005AEC91    mov         eax,dword ptr [ebp+8]
 005AEC94    mov         eax,dword ptr [eax-2C]
 005AEC97    mov         edx,dword ptr [eax]
 005AEC99    call        dword ptr [edx+48]
 005AEC9C    cmp         ebx,eax
>005AEC9E    jge         005AECD8
 005AECA0    mov         eax,dword ptr [ebp+8]
 005AECA3    mov         eax,dword ptr [eax-1C]
 005AECA6    push        eax
 005AECA7    mov         eax,dword ptr [ebp+8]
 005AECAA    mov         eax,dword ptr [eax-24]
 005AECAD    mov         eax,dword ptr [eax+4C]
 005AECB0    push        eax
 005AECB1    mov         eax,dword ptr [ebp+8]
 005AECB4    mov         eax,dword ptr [eax-24]
 005AECB7    movzx       eax,byte ptr [eax+45]
 005AECBB    push        eax
 005AECBC    mov         eax,dword ptr [ebp+8]
 005AECBF    mov         ecx,dword ptr [eax-20]
 005AECC2    mov         eax,dword ptr [ebp+8]
 005AECC5    mov         edx,dword ptr [eax-28]
 005AECC8    mov         eax,dword ptr [ebp+8]
 005AECCB    mov         eax,dword ptr [eax-2C]
 005AECCE    call        TCustomImageList.Draw
>005AECD3    jmp         005AEEE2
 005AECD8    mov         dl,1
 005AECDA    mov         eax,[004C1D10];TBitmap
 005AECDF    call        TBitmap.Create;TBitmap.Create
 005AECE4    mov         edx,dword ptr [ebp+8]
 005AECE7    mov         dword ptr [edx-50],eax
 005AECEA    xor         eax,eax
 005AECEC    push        ebp
 005AECED    push        5AEDCE
 005AECF2    push        dword ptr fs:[eax]
 005AECF5    mov         dword ptr fs:[eax],esp
 005AECF8    mov         eax,dword ptr [ebp+8]
 005AECFB    mov         eax,dword ptr [eax-50]
 005AECFE    mov         dl,1
 005AED00    mov         ecx,dword ptr [eax]
 005AED02    call        dword ptr [ecx+40]
 005AED05    push        7FF8
 005AED0A    push        0
 005AED0C    call        user32.LoadBitmapW
 005AED11    mov         edx,eax
 005AED13    mov         eax,dword ptr [ebp+8]
 005AED16    mov         eax,dword ptr [eax-50]
 005AED19    call        TBitmap.SetHandle
 005AED1E    mov         eax,dword ptr [ebp+8]
 005AED21    mov         eax,dword ptr [eax-28]
 005AED24    mov         eax,dword ptr [eax+40]
 005AED27    mov         eax,dword ptr [eax+18]
 005AED2A    mov         edx,dword ptr [ebp+8]
 005AED2D    mov         dword ptr [edx-4C],eax
 005AED30    mov         eax,dword ptr [ebp+8]
 005AED33    mov         eax,dword ptr [eax-28]
 005AED36    mov         eax,dword ptr [eax+40]
 005AED39    mov         edx,0FF000012
 005AED3E    call        TFont.SetColor
 005AED43    mov         eax,dword ptr [ebp+8]
 005AED46    mov         eax,dword ptr [eax-50]
 005AED49    push        eax
 005AED4A    mov         eax,dword ptr [ebp+8]
 005AED4D    mov         eax,dword ptr [eax-50]
 005AED50    mov         edx,dword ptr [eax]
 005AED52    call        dword ptr [edx+24]
 005AED55    mov         edx,dword ptr [ebp+8]
 005AED58    mov         edx,dword ptr [edx-14]
 005AED5B    mov         ecx,dword ptr [ebp+8]
 005AED5E    mov         esi,dword ptr [ecx-1C]
 005AED61    sub         edx,esi
 005AED63    sub         edx,eax
 005AED65    sar         edx,1
>005AED67    jns         005AED6C
 005AED69    adc         edx,0
 005AED6C    add         edx,esi
 005AED6E    inc         edx
 005AED6F    push        edx
 005AED70    mov         eax,dword ptr [ebp+8]
 005AED73    mov         eax,dword ptr [eax-50]
 005AED76    mov         edx,dword ptr [eax]
 005AED78    call        dword ptr [edx+30]
 005AED7B    mov         edx,dword ptr [ebp+8]
 005AED7E    mov         edx,dword ptr [edx-18]
 005AED81    mov         ecx,dword ptr [ebp+8]
 005AED84    mov         ebx,dword ptr [ecx-20]
 005AED87    sub         edx,ebx
 005AED89    sub         edx,eax
 005AED8B    sar         edx,1
>005AED8D    jns         005AED92
 005AED8F    adc         edx,0
 005AED92    add         edx,ebx
 005AED94    inc         edx
 005AED95    mov         eax,dword ptr [ebp+8]
 005AED98    mov         eax,dword ptr [eax-28]
 005AED9B    pop         ecx
 005AED9C    mov         ebx,dword ptr [eax]
 005AED9E    call        dword ptr [ebx+44]
 005AEDA1    mov         eax,dword ptr [ebp+8]
 005AEDA4    mov         edx,dword ptr [eax-4C]
 005AEDA7    mov         eax,dword ptr [ebp+8]
 005AEDAA    mov         eax,dword ptr [eax-28]
 005AEDAD    mov         eax,dword ptr [eax+40]
 005AEDB0    call        TFont.SetColor
 005AEDB5    xor         eax,eax
 005AEDB7    pop         edx
 005AEDB8    pop         ecx
 005AEDB9    pop         ecx
 005AEDBA    mov         dword ptr fs:[eax],edx
 005AEDBD    push        5AEEE2
 005AEDC2    mov         eax,dword ptr [ebp+8]
 005AEDC5    mov         eax,dword ptr [eax-50]
 005AEDC8    call        TObject.Free
 005AEDCD    ret
>005AEDCE    jmp         @HandleFinally
>005AEDD3    jmp         005AEDC2
 005AEDD5    mov         eax,dword ptr [ebp+8]
 005AEDD8    mov         edx,dword ptr [ebp+8]
 005AEDDB    lea         esi,[eax-20]
 005AEDDE    lea         edi,[edx-44]
 005AEDE1    movs        dword ptr [edi],dword ptr [esi]
 005AEDE2    movs        dword ptr [edi],dword ptr [esi]
 005AEDE3    movs        dword ptr [edi],dword ptr [esi]
 005AEDE4    movs        dword ptr [edi],dword ptr [esi]
 005AEDE5    mov         eax,dword ptr [ebp+8]
 005AEDE8    mov         eax,dword ptr [eax-24]
 005AEDEB    mov         eax,dword ptr [eax+58]
 005AEDEE    mov         edx,dword ptr [eax]
 005AEDF0    call        dword ptr [edx+30]
 005AEDF3    mov         edx,dword ptr [ebp+8]
 005AEDF6    mov         edx,dword ptr [edx-18]
 005AEDF9    mov         ecx,dword ptr [ebp+8]
 005AEDFC    sub         edx,dword ptr [ecx-20]
 005AEDFF    cmp         eax,edx
>005AEE01    jge         005AEE4D
 005AEE03    mov         eax,dword ptr [ebp+8]
 005AEE06    mov         eax,dword ptr [eax-24]
 005AEE09    mov         eax,dword ptr [eax+58]
 005AEE0C    mov         edx,dword ptr [eax]
 005AEE0E    call        dword ptr [edx+30]
 005AEE11    mov         edx,dword ptr [ebp+8]
 005AEE14    mov         edx,dword ptr [edx-18]
 005AEE17    mov         ecx,dword ptr [ebp+8]
 005AEE1A    sub         edx,dword ptr [ecx-20]
 005AEE1D    sub         edx,eax
 005AEE1F    sar         edx,1
>005AEE21    jns         005AEE26
 005AEE23    adc         edx,0
 005AEE26    mov         eax,dword ptr [ebp+8]
 005AEE29    add         edx,dword ptr [eax-20]
 005AEE2C    inc         edx
 005AEE2D    mov         eax,dword ptr [ebp+8]
 005AEE30    mov         dword ptr [eax-20],edx
 005AEE33    mov         eax,dword ptr [ebp+8]
 005AEE36    mov         eax,dword ptr [eax-24]
 005AEE39    mov         eax,dword ptr [eax+58]
 005AEE3C    mov         edx,dword ptr [eax]
 005AEE3E    call        dword ptr [edx+30]
 005AEE41    mov         edx,dword ptr [ebp+8]
 005AEE44    add         eax,dword ptr [edx-20]
 005AEE47    mov         edx,dword ptr [ebp+8]
 005AEE4A    mov         dword ptr [edx-18],eax
 005AEE4D    mov         eax,dword ptr [ebp+8]
 005AEE50    mov         eax,dword ptr [eax-24]
 005AEE53    mov         eax,dword ptr [eax+58]
 005AEE56    mov         edx,dword ptr [eax]
 005AEE58    call        dword ptr [edx+24]
 005AEE5B    mov         edx,dword ptr [ebp+8]
 005AEE5E    mov         edx,dword ptr [edx-14]
 005AEE61    mov         ecx,dword ptr [ebp+8]
 005AEE64    sub         edx,dword ptr [ecx-1C]
 005AEE67    cmp         eax,edx
>005AEE69    jge         005AEEB5
 005AEE6B    mov         eax,dword ptr [ebp+8]
 005AEE6E    mov         eax,dword ptr [eax-24]
 005AEE71    mov         eax,dword ptr [eax+58]
 005AEE74    mov         edx,dword ptr [eax]
 005AEE76    call        dword ptr [edx+24]
 005AEE79    mov         edx,dword ptr [ebp+8]
 005AEE7C    mov         edx,dword ptr [edx-14]
 005AEE7F    mov         ecx,dword ptr [ebp+8]
 005AEE82    sub         edx,dword ptr [ecx-1C]
 005AEE85    sub         edx,eax
 005AEE87    sar         edx,1
>005AEE89    jns         005AEE8E
 005AEE8B    adc         edx,0
 005AEE8E    mov         eax,dword ptr [ebp+8]
 005AEE91    add         edx,dword ptr [eax-1C]
 005AEE94    inc         edx
 005AEE95    mov         eax,dword ptr [ebp+8]
 005AEE98    mov         dword ptr [eax-1C],edx
 005AEE9B    mov         eax,dword ptr [ebp+8]
 005AEE9E    mov         eax,dword ptr [eax-24]
 005AEEA1    mov         eax,dword ptr [eax+58]
 005AEEA4    mov         edx,dword ptr [eax]
 005AEEA6    call        dword ptr [edx+24]
 005AEEA9    mov         edx,dword ptr [ebp+8]
 005AEEAC    add         eax,dword ptr [edx-1C]
 005AEEAF    mov         edx,dword ptr [ebp+8]
 005AEEB2    mov         dword ptr [edx-14],eax
 005AEEB5    mov         eax,dword ptr [ebp+8]
 005AEEB8    mov         eax,dword ptr [eax-24]
 005AEEBB    mov         ecx,dword ptr [eax+58]
 005AEEBE    mov         eax,dword ptr [ebp+8]
 005AEEC1    lea         edx,[eax-20]
 005AEEC4    mov         eax,dword ptr [ebp+8]
 005AEEC7    mov         eax,dword ptr [eax-28]
 005AEECA    mov         ebx,dword ptr [eax]
 005AEECC    call        dword ptr [ebx+88]
 005AEED2    mov         eax,dword ptr [ebp+8]
 005AEED5    mov         edx,dword ptr [ebp+8]
 005AEED8    lea         esi,[eax-44]
 005AEEDB    lea         edi,[edx-20]
 005AEEDE    movs        dword ptr [edi],dword ptr [esi]
 005AEEDF    movs        dword ptr [edi],dword ptr [esi]
 005AEEE0    movs        dword ptr [edi],dword ptr [esi]
 005AEEE1    movs        dword ptr [edi],dword ptr [esi]
 005AEEE2    mov         eax,dword ptr [ebp+8]
 005AEEE5    mov         eax,dword ptr [eax-24]
 005AEEE8    cmp         byte ptr [eax+44],0
>005AEEEC    je          005AEF59
 005AEEEE    mov         eax,dword ptr [ebp+8]
 005AEEF1    dec         dword ptr [eax-18]
 005AEEF4    mov         eax,dword ptr [ebp+8]
 005AEEF7    dec         dword ptr [eax-14]
>005AEEFA    jmp         005AEF59
 005AEEFC    mov         eax,dword ptr [ebp+8]
 005AEEFF    cmp         dword ptr [eax-2C],0
>005AEF03    je          005AEF3A
 005AEF05    mov         eax,dword ptr [ebp+8]
 005AEF08    cmp         byte ptr [eax+8],0
>005AEF0C    jne         005AEF3A
 005AEF0E    mov         eax,dword ptr [ebp+8]
 005AEF11    mov         eax,dword ptr [eax-20]
 005AEF14    mov         edx,dword ptr [ebp+8]
 005AEF17    mov         edx,dword ptr [edx-2C]
 005AEF1A    add         eax,dword ptr [edx+54]
 005AEF1D    mov         edx,dword ptr [ebp+8]
 005AEF20    mov         dword ptr [edx-18],eax
 005AEF23    mov         eax,dword ptr [ebp+8]
 005AEF26    mov         eax,dword ptr [eax-1C]
 005AEF29    mov         edx,dword ptr [ebp+8]
 005AEF2C    mov         edx,dword ptr [edx-2C]
 005AEF2F    add         eax,dword ptr [edx+50]
 005AEF32    mov         edx,dword ptr [ebp+8]
 005AEF35    mov         dword ptr [edx-14],eax
>005AEF38    jmp         005AEF52
 005AEF3A    mov         eax,dword ptr [ebp+8]
 005AEF3D    mov         eax,dword ptr [eax-20]
 005AEF40    mov         edx,dword ptr [ebp+8]
 005AEF43    mov         dword ptr [edx-18],eax
 005AEF46    mov         eax,dword ptr [ebp+8]
 005AEF49    mov         eax,dword ptr [eax-1C]
 005AEF4C    mov         edx,dword ptr [ebp+8]
 005AEF4F    mov         dword ptr [edx-14],eax
 005AEF52    mov         eax,dword ptr [ebp+8]
 005AEF55    mov         byte ptr [eax-47],0
 005AEF59    mov         eax,dword ptr [ebp+8]
 005AEF5C    dec         dword ptr [eax-20]
 005AEF5F    mov         eax,dword ptr [ebp+8]
 005AEF62    dec         dword ptr [eax-1C]
 005AEF65    mov         eax,dword ptr [ebp+8]
 005AEF68    add         dword ptr [eax-18],2
 005AEF6C    mov         eax,dword ptr [ebp+8]
 005AEF6F    add         dword ptr [eax-14],2
 005AEF73    mov         eax,dword ptr [ebp+8]
 005AEF76    mov         eax,dword ptr [eax-24]
 005AEF79    cmp         byte ptr [eax+44],0
>005AEF7D    jne         005AEF91
 005AEF7F    mov         eax,dword ptr [ebp+8]
 005AEF82    cmp         byte ptr [eax-32],0
>005AEF86    je          005AEFC6
 005AEF88    mov         eax,dword ptr [ebp+8]
 005AEF8B    cmp         byte ptr [eax-47],0
>005AEF8F    je          005AEFC6
 005AEF91    mov         eax,dword ptr [ebp+8]
 005AEF94    cmp         byte ptr [eax-45],0
>005AEF98    jne         005AEFC6
 005AEF9A    push        0F
 005AEF9C    mov         eax,dword ptr [ebp+8]
 005AEF9F    mov         eax,dword ptr [eax-24]
 005AEFA2    movzx       eax,byte ptr [eax+44]
 005AEFA6    mov         eax,dword ptr [eax*4+7A1C54]
 005AEFAD    push        eax
 005AEFAE    mov         eax,dword ptr [ebp+8]
 005AEFB1    add         eax,0FFFFFFE0
 005AEFB4    push        eax
 005AEFB5    mov         eax,dword ptr [ebp+8]
 005AEFB8    mov         eax,dword ptr [eax-28]
 005AEFBB    call        TCanvas.GetHandle
 005AEFC0    push        eax
 005AEFC1    call        user32.DrawEdge
 005AEFC6    mov         eax,dword ptr [ebp+8]
 005AEFC9    cmp         byte ptr [eax-32],0
>005AEFCD    je          005AF01B
 005AEFCF    mov         eax,dword ptr [ebp+8]
 005AEFD2    cmp         byte ptr [eax-47],0
>005AEFD6    je          005AEFE5
 005AEFD8    mov         eax,dword ptr [ebp+8]
 005AEFDB    mov         eax,dword ptr [eax-18]
 005AEFDE    inc         eax
 005AEFDF    mov         edx,dword ptr [ebp+8]
 005AEFE2    mov         dword ptr [edx-10],eax
 005AEFE5    mov         eax,dword ptr [ebp+8]
 005AEFE8    cmp         byte ptr [eax-51],0
>005AEFEC    je          005AEFF7
 005AEFEE    mov         eax,dword ptr [ebp+8]
 005AEFF1    cmp         byte ptr [eax+8],0
>005AEFF5    jne         005AF00A
 005AEFF7    mov         eax,dword ptr [ebp+8]
 005AEFFA    mov         eax,dword ptr [eax-28]
 005AEFFD    mov         eax,dword ptr [eax+48]
 005AF000    mov         edx,0FF00000D
 005AF005    call        TBrush.SetColor
 005AF00A    mov         eax,dword ptr [ebp+8]
 005AF00D    lea         edx,[eax-10]
 005AF010    mov         eax,dword ptr [ebp+8]
 005AF013    mov         eax,dword ptr [eax-28]
 005AF016    mov         ecx,dword ptr [eax]
 005AF018    call        dword ptr [ecx+54]
 005AF01B    mov         eax,dword ptr [ebp+8]
 005AF01E    cmp         byte ptr [eax+8],0
>005AF022    je          005AF0A8
 005AF028    mov         eax,dword ptr [ebp+8]
 005AF02B    cmp         byte ptr [eax-51],0
>005AF02F    je          005AF0A8
 005AF031    mov         eax,dword ptr [ebp+8]
 005AF034    cmp         byte ptr [eax-45],0
>005AF038    je          005AF043
 005AF03A    mov         eax,dword ptr [ebp+8]
 005AF03D    cmp         byte ptr [eax-46],0
>005AF041    jne         005AF0A8
 005AF043    mov         eax,dword ptr [ebp+8]
 005AF046    cmp         byte ptr [eax-32],0
>005AF04A    je          005AF06A
 005AF04C    push        0F
 005AF04E    push        2
 005AF050    mov         eax,dword ptr [ebp+8]
 005AF053    add         eax,0FFFFFFF0
 005AF056    push        eax
 005AF057    mov         eax,dword ptr [ebp+8]
 005AF05A    mov         eax,dword ptr [eax-28]
 005AF05D    call        TCanvas.GetHandle
 005AF062    push        eax
 005AF063    call        user32.DrawEdge
>005AF068    jmp         005AF08F
 005AF06A    mov         eax,dword ptr [ebp+8]
 005AF06D    test        byte ptr [eax+0C],40
>005AF071    je          005AF08F
 005AF073    push        0F
 005AF075    push        4
 005AF077    mov         eax,dword ptr [ebp+8]
 005AF07A    add         eax,0FFFFFFF0
 005AF07D    push        eax
 005AF07E    mov         eax,dword ptr [ebp+8]
 005AF081    mov         eax,dword ptr [eax-28]
 005AF084    call        TCanvas.GetHandle
 005AF089    push        eax
 005AF08A    call        user32.DrawEdge
 005AF08F    mov         eax,dword ptr [ebp+8]
 005AF092    cmp         byte ptr [eax-32],0
>005AF096    jne         005AF0A8
 005AF098    mov         eax,dword ptr [ebp+8]
 005AF09B    add         eax,0FFFFFFF0
 005AF09E    or          ecx,0FFFFFFFF
 005AF0A1    xor         edx,edx
 005AF0A3    call        OffsetRect
 005AF0A8    mov         eax,dword ptr [ebp+8]
 005AF0AB    cmp         byte ptr [eax-32],0
>005AF0AF    je          005AF0BA
 005AF0B1    mov         eax,dword ptr [ebp+8]
 005AF0B4    cmp         byte ptr [eax-47],0
>005AF0B8    jne         005AF0C7
 005AF0BA    mov         eax,dword ptr [ebp+8]
 005AF0BD    mov         eax,dword ptr [eax-18]
 005AF0C0    inc         eax
 005AF0C1    mov         edx,dword ptr [ebp+8]
 005AF0C4    mov         dword ptr [edx-10],eax
 005AF0C7    mov         eax,dword ptr [ebp+8]
 005AF0CA    add         dword ptr [eax-10],2
 005AF0CE    mov         eax,dword ptr [ebp+8]
 005AF0D1    dec         dword ptr [eax-8]
 005AF0D4    mov         eax,dword ptr [ebp+8]
 005AF0D7    movzx       eax,byte ptr [eax-31]
 005AF0DB    movzx       ebx,word ptr [eax*2+7A1C72]
 005AF0E3    or          bx,60
 005AF0E7    movzx       ebx,bx
 005AF0EA    mov         eax,dword ptr [ebp+8]
 005AF0ED    cmp         byte ptr [eax-52],0
>005AF0F1    je          005AF102
 005AF0F3    mov         eax,dword ptr [ebp+8]
 005AF0F6    test        byte ptr [eax+0D],1
>005AF0FA    je          005AF102
 005AF0FC    or          ebx,100000
 005AF102    mov         eax,dword ptr [ebp+8]
 005AF105    mov         edx,dword ptr [ebp+8]
 005AF108    lea         esi,[eax-10]
 005AF10B    lea         edi,[edx-44]
 005AF10E    movs        dword ptr [edi],dword ptr [esi]
 005AF10F    movs        dword ptr [edi],dword ptr [esi]
 005AF110    movs        dword ptr [edi],dword ptr [esi]
 005AF111    movs        dword ptr [edi],dword ptr [esi]
 005AF112    mov         eax,dword ptr [ebp+8]
 005AF115    test        byte ptr [eax+0C],20
>005AF119    je          005AF130
 005AF11B    mov         eax,dword ptr [ebp+8]
 005AF11E    mov         eax,dword ptr [eax-28]
 005AF121    mov         eax,dword ptr [eax+40]
 005AF124    movzx       edx,byte ptr ds:[5AF2A4];0x1 gvar_005AF2A4
 005AF12B    call        TFont.SetStyle
 005AF130    mov         eax,dword ptr [ebp+8]
 005AF133    add         eax,0FFFFFFF0
 005AF136    push        eax
 005AF137    mov         eax,dword ptr [ebp+8]
 005AF13A    movzx       eax,byte ptr [eax-32]
 005AF13E    push        eax
 005AF13F    mov         eax,400
 005AF144    or          eax,ebx
 005AF146    or          eax,100
 005AF14B    push        eax
 005AF14C    mov         eax,dword ptr [ebp+8]
 005AF14F    mov         eax,dword ptr [eax-24]
 005AF152    mov         ecx,dword ptr [eax+40]
 005AF155    mov         eax,dword ptr [ebp+8]
 005AF158    mov         edx,dword ptr [eax-28]
 005AF15B    mov         eax,dword ptr [ebp+8]
 005AF15E    mov         eax,dword ptr [eax-24]
 005AF161    call        005ADA30
 005AF166    mov         eax,dword ptr [ebp+8]
 005AF169    mov         ecx,dword ptr [eax-38]
 005AF16C    mov         eax,dword ptr [ebp+8]
 005AF16F    sub         ecx,dword ptr [eax-40]
 005AF172    mov         eax,dword ptr [ebp+8]
 005AF175    mov         eax,dword ptr [eax-4]
 005AF178    mov         edx,dword ptr [ebp+8]
 005AF17B    sub         eax,dword ptr [edx-0C]
 005AF17E    sub         ecx,eax
 005AF180    sar         ecx,1
>005AF182    jns         005AF187
 005AF184    adc         ecx,0
 005AF187    mov         eax,dword ptr [ebp+8]
 005AF18A    add         eax,0FFFFFFF0
 005AF18D    xor         edx,edx
 005AF18F    call        OffsetRect
 005AF194    mov         eax,dword ptr [ebp+8]
 005AF197    cmp         byte ptr [eax+8],0
>005AF19B    je          005AF1CA
 005AF19D    mov         eax,dword ptr [ebp+8]
 005AF1A0    cmp         byte ptr [eax-32],0
>005AF1A4    je          005AF1CA
 005AF1A6    mov         eax,dword ptr [ebp+8]
 005AF1A9    cmp         byte ptr [eax-51],0
>005AF1AD    je          005AF1CA
 005AF1AF    mov         eax,dword ptr [ebp+8]
 005AF1B2    cmp         byte ptr [eax-45],0
>005AF1B6    jne         005AF1CA
 005AF1B8    mov         eax,dword ptr [ebp+8]
 005AF1BB    add         eax,0FFFFFFF0
 005AF1BE    xor         ecx,ecx
 005AF1C0    mov         edx,1
 005AF1C5    call        OffsetRect
 005AF1CA    mov         eax,dword ptr [ebp+8]
 005AF1CD    add         eax,0FFFFFFF0
 005AF1D0    push        eax
 005AF1D1    mov         eax,dword ptr [ebp+8]
 005AF1D4    movzx       eax,byte ptr [eax-32]
 005AF1D8    push        eax
 005AF1D9    push        ebx
 005AF1DA    mov         eax,dword ptr [ebp+8]
 005AF1DD    mov         eax,dword ptr [eax-24]
 005AF1E0    mov         ecx,dword ptr [eax+40]
 005AF1E3    mov         eax,dword ptr [ebp+8]
 005AF1E6    mov         edx,dword ptr [eax-28]
 005AF1E9    mov         eax,dword ptr [ebp+8]
 005AF1EC    mov         eax,dword ptr [eax-24]
 005AF1EF    call        005ADA30
 005AF1F4    mov         eax,dword ptr [ebp+8]
 005AF1F7    mov         eax,dword ptr [eax-24]
 005AF1FA    cmp         word ptr [eax+6C],0
>005AF1FF    je          005AF271
 005AF201    mov         eax,dword ptr [ebp+8]
 005AF204    cmp         byte ptr [eax+8],0
>005AF208    jne         005AF271
 005AF20A    mov         eax,dword ptr [ebp+8]
 005AF20D    cmp         byte ptr [eax-53],0
>005AF211    je          005AF21F
 005AF213    mov         eax,dword ptr [ebp+8]
 005AF216    mov         eax,dword ptr [eax-24]
 005AF219    cmp         dword ptr [eax+68],0
>005AF21D    jne         005AF271
 005AF21F    mov         eax,dword ptr [ebp+8]
 005AF222    mov         eax,dword ptr [eax-8]
 005AF225    mov         edx,dword ptr [ebp+8]
 005AF228    mov         dword ptr [edx-10],eax
 005AF22B    mov         eax,dword ptr [ebp+8]
 005AF22E    mov         eax,dword ptr [eax-3C]
 005AF231    sub         eax,0A
 005AF234    mov         edx,dword ptr [ebp+8]
 005AF237    mov         dword ptr [edx-8],eax
 005AF23A    mov         eax,dword ptr [ebp+8]
 005AF23D    add         eax,0FFFFFFF0
 005AF240    push        eax
 005AF241    mov         eax,dword ptr [ebp+8]
 005AF244    movzx       eax,byte ptr [eax-32]
 005AF248    push        eax
 005AF249    push        2
 005AF24B    lea         edx,[ebp-4]
 005AF24E    mov         eax,dword ptr [ebp+8]
 005AF251    mov         eax,dword ptr [eax-24]
 005AF254    movzx       eax,word ptr [eax+6C]
 005AF258    call        ShortCutToText
 005AF25D    mov         ecx,dword ptr [ebp-4]
 005AF260    mov         eax,dword ptr [ebp+8]
 005AF263    mov         edx,dword ptr [eax-28]
 005AF266    mov         eax,dword ptr [ebp+8]
 005AF269    mov         eax,dword ptr [eax-24]
 005AF26C    call        005ADA30
 005AF271    xor         eax,eax
 005AF273    pop         edx
 005AF274    pop         ecx
 005AF275    pop         ecx
 005AF276    mov         dword ptr fs:[eax],edx
 005AF279    push        5AF28E
 005AF27E    lea         eax,[ebp-4]
 005AF281    call        @UStrClr
 005AF286    ret
>005AF287    jmp         @HandleFinally
>005AF28C    jmp         005AF27E
 005AF28E    pop         edi
 005AF28F    pop         esi
 005AF290    pop         ebx
 005AF291    pop         ecx
 005AF292    pop         ebp
 005AF293    ret
end;*}

//005AF2A8
{*procedure sub_005AF2A8(?:?);
begin
 005AF2A8    push        ebp
 005AF2A9    mov         ebp,esp
 005AF2AB    push        0
 005AF2AD    push        ebx
 005AF2AE    push        esi
 005AF2AF    push        edi
 005AF2B0    xor         eax,eax
 005AF2B2    push        ebp
 005AF2B3    push        5AFC07
 005AF2B8    push        dword ptr fs:[eax]
 005AF2BB    mov         dword ptr fs:[eax],esp
 005AF2BE    mov         eax,dword ptr [ebp+8]
 005AF2C1    cmp         byte ptr [eax-45],0
>005AF2C5    je          005AF2D0
 005AF2C7    mov         eax,dword ptr [ebp+8]
 005AF2CA    cmp         byte ptr [eax-46],0
>005AF2CE    jne         005AF2EB
 005AF2D0    mov         eax,dword ptr [ebp+8]
 005AF2D3    cmp         byte ptr [eax-45],0
>005AF2D7    je          005AF364
 005AF2DD    call        TStyleManager.GetSystemStyle
 005AF2E2    mov         edx,dword ptr [eax]
 005AF2E4    call        dword ptr [edx+4C];TCustomStyleServices.GetEnabled
 005AF2E7    test        al,al
>005AF2E9    je          005AF364
 005AF2EB    mov         eax,dword ptr [ebp+8]
 005AF2EE    test        byte ptr [eax+0C],1
>005AF2F2    jne         005AF2FD
 005AF2F4    mov         eax,dword ptr [ebp+8]
 005AF2F7    test        byte ptr [eax+0C],40
>005AF2FB    je          005AF348
 005AF2FD    call        TStyleManager.GetSystemStyle
 005AF302    mov         edx,dword ptr [eax]
 005AF304    call        dword ptr [edx+4C];TCustomStyleServices.GetEnabled
 005AF307    test        al,al
>005AF309    je          005AF320
 005AF30B    mov         eax,dword ptr [ebp+8]
 005AF30E    mov         eax,dword ptr [eax-28]
 005AF311    mov         eax,dword ptr [eax+48]
 005AF314    mov         edx,0FF00001D
 005AF319    call        TBrush.SetColor
>005AF31E    jmp         005AF333
 005AF320    mov         eax,dword ptr [ebp+8]
 005AF323    mov         eax,dword ptr [eax-28]
 005AF326    mov         eax,dword ptr [eax+48]
 005AF329    mov         edx,0FF00000D
 005AF32E    call        TBrush.SetColor
 005AF333    mov         eax,dword ptr [ebp+8]
 005AF336    mov         eax,dword ptr [eax-28]
 005AF339    mov         eax,dword ptr [eax+40]
 005AF33C    mov         edx,0FF00000E
 005AF341    call        TFont.SetColor
>005AF346    jmp         005AF364
 005AF348    mov         eax,dword ptr [ebp+8]
 005AF34B    cmp         byte ptr [eax+8],0
>005AF34F    je          005AF364
 005AF351    mov         eax,dword ptr [ebp+8]
 005AF354    mov         eax,dword ptr [eax-28]
 005AF357    mov         eax,dword ptr [eax+48]
 005AF35A    mov         edx,0FF00001E
 005AF35F    call        TBrush.SetColor
 005AF364    mov         eax,dword ptr [ebp+8]
 005AF367    cmp         byte ptr [eax-32],0
>005AF36B    je          005AF382
 005AF36D    mov         eax,dword ptr [ebp+8]
 005AF370    cmp         byte ptr [eax-45],0
>005AF374    je          005AF393
 005AF376    mov         eax,dword ptr [ebp+8]
 005AF379    mov         eax,dword ptr [eax-24]
 005AF37C    cmp         byte ptr [eax+44],0
>005AF380    jne         005AF393
 005AF382    mov         eax,dword ptr [ebp+8]
 005AF385    lea         edx,[eax-10]
 005AF388    mov         eax,dword ptr [ebp+8]
 005AF38B    mov         eax,dword ptr [eax-28]
 005AF38E    mov         ecx,dword ptr [eax]
 005AF390    call        dword ptr [ecx+54]
 005AF393    mov         eax,dword ptr [ebp+8]
 005AF396    cmp         dword ptr [eax-30],0
>005AF39A    je          005AF3A5
 005AF39C    mov         eax,dword ptr [ebp+8]
 005AF39F    mov         byte ptr [eax-31],0
>005AF3A3    jmp         005AF3D3
 005AF3A5    mov         eax,dword ptr [ebp+8]
 005AF3A8    mov         eax,dword ptr [eax-30]
 005AF3AB    mov         edx,dword ptr ds:[5AC178];TPopupMenu
 005AF3B1    call        @IsClass
 005AF3B6    test        al,al
>005AF3B8    je          005AF3CC
 005AF3BA    mov         eax,dword ptr [ebp+8]
 005AF3BD    mov         eax,dword ptr [eax-30]
 005AF3C0    movzx       eax,byte ptr [eax+70]
 005AF3C4    mov         edx,dword ptr [ebp+8]
 005AF3C7    mov         byte ptr [edx-31],al
>005AF3CA    jmp         005AF3D3
 005AF3CC    mov         eax,dword ptr [ebp+8]
 005AF3CF    mov         byte ptr [eax-31],0
 005AF3D3    mov         eax,dword ptr [ebp+8]
 005AF3D6    mov         eax,dword ptr [eax-8]
 005AF3D9    dec         eax
 005AF3DA    mov         edx,dword ptr [ebp+8]
 005AF3DD    mov         dword ptr [edx-18],eax
 005AF3E0    mov         eax,dword ptr [ebp+8]
 005AF3E3    mov         eax,dword ptr [eax-0C]
 005AF3E6    inc         eax
 005AF3E7    mov         edx,dword ptr [ebp+8]
 005AF3EA    mov         dword ptr [edx-1C],eax
 005AF3ED    mov         eax,dword ptr [ebp+8]
 005AF3F0    mov         eax,dword ptr [eax-24]
 005AF3F3    mov         eax,dword ptr [eax+40]
 005AF3F6    mov         edx,5AFC20;'-'
 005AF3FB    call        @UStrEqual
>005AF400    jne         005AF436
 005AF402    mov         eax,dword ptr [ebp+8]
 005AF405    lea         edx,[eax-10]
 005AF408    mov         eax,dword ptr [ebp+8]
 005AF40B    mov         eax,dword ptr [eax-28]
 005AF40E    mov         ecx,dword ptr [eax]
 005AF410    call        dword ptr [ecx+54]
 005AF413    mov         eax,dword ptr [ebp+8]
 005AF416    mov         eax,dword ptr [eax-18]
 005AF419    add         eax,2
 005AF41C    mov         edx,dword ptr [ebp+8]
 005AF41F    mov         dword ptr [edx-20],eax
 005AF422    mov         eax,dword ptr [ebp+8]
 005AF425    xor         edx,edx
 005AF427    mov         dword ptr [eax-18],edx
 005AF42A    mov         eax,dword ptr [ebp+8]
 005AF42D    mov         byte ptr [eax-47],0
>005AF431    jmp         005AF8C1
 005AF436    mov         eax,dword ptr [ebp+8]
 005AF439    cmp         dword ptr [eax-2C],0
>005AF43D    je          005AF483
 005AF43F    mov         eax,dword ptr [ebp+8]
 005AF442    mov         eax,dword ptr [eax-24]
 005AF445    mov         ebx,dword ptr [eax+4C]
 005AF448    cmp         ebx,0FFFFFFFF
>005AF44B    jle         005AF45F
 005AF44D    mov         eax,dword ptr [ebp+8]
 005AF450    mov         eax,dword ptr [ebp+8]
 005AF453    mov         eax,dword ptr [eax-2C]
 005AF456    mov         edx,dword ptr [eax]
 005AF458    call        dword ptr [edx+48]
 005AF45B    cmp         ebx,eax
>005AF45D    jl          005AF487
 005AF45F    mov         eax,dword ptr [ebp+8]
 005AF462    mov         eax,dword ptr [eax-24]
 005AF465    cmp         byte ptr [eax+44],0
>005AF469    je          005AF483
 005AF46B    mov         eax,dword ptr [ebp+8]
 005AF46E    mov         eax,dword ptr [eax-24]
 005AF471    mov         esi,dword ptr [eax+58]
 005AF474    test        esi,esi
>005AF476    je          005AF487
 005AF478    mov         eax,esi
 005AF47A    mov         edx,dword ptr [eax]
 005AF47C    call        dword ptr [edx+20]
 005AF47F    test        al,al
>005AF481    jne         005AF487
 005AF483    xor         eax,eax
>005AF485    jmp         005AF489
 005AF487    mov         al,1
 005AF489    mov         edx,dword ptr [ebp+8]
 005AF48C    mov         byte ptr [edx-33],al
 005AF48F    mov         eax,dword ptr [ebp+8]
 005AF492    cmp         byte ptr [eax-33],0
>005AF496    jne         005AF4B8
 005AF498    mov         eax,dword ptr [ebp+8]
 005AF49B    mov         eax,dword ptr [eax-24]
 005AF49E    mov         ebx,dword ptr [eax+58]
 005AF4A1    test        ebx,ebx
>005AF4A3    je          005AF864
 005AF4A9    mov         eax,ebx
 005AF4AB    mov         edx,dword ptr [eax]
 005AF4AD    call        dword ptr [edx+20]
 005AF4B0    test        al,al
>005AF4B2    jne         005AF864
 005AF4B8    mov         eax,dword ptr [ebp+8]
 005AF4BB    mov         byte ptr [eax-47],1
 005AF4BF    mov         eax,dword ptr [ebp+8]
 005AF4C2    cmp         byte ptr [eax-33],0
>005AF4C6    je          005AF4F4
 005AF4C8    mov         eax,dword ptr [ebp+8]
 005AF4CB    mov         eax,dword ptr [eax-18]
 005AF4CE    mov         edx,dword ptr [ebp+8]
 005AF4D1    mov         edx,dword ptr [edx-2C]
 005AF4D4    sub         eax,dword ptr [edx+54]
 005AF4D7    mov         edx,dword ptr [ebp+8]
 005AF4DA    mov         dword ptr [edx-20],eax
 005AF4DD    mov         eax,dword ptr [ebp+8]
 005AF4E0    mov         eax,dword ptr [eax-1C]
 005AF4E3    mov         edx,dword ptr [ebp+8]
 005AF4E6    mov         edx,dword ptr [edx-2C]
 005AF4E9    add         eax,dword ptr [edx+50]
 005AF4EC    mov         edx,dword ptr [ebp+8]
 005AF4EF    mov         dword ptr [edx-14],eax
>005AF4F2    jmp         005AF512
 005AF4F4    mov         eax,dword ptr [ebp+8]
 005AF4F7    mov         eax,dword ptr [eax-18]
 005AF4FA    sub         eax,10
 005AF4FD    mov         edx,dword ptr [ebp+8]
 005AF500    mov         dword ptr [edx-20],eax
 005AF503    mov         eax,dword ptr [ebp+8]
 005AF506    mov         eax,dword ptr [eax-1C]
 005AF509    add         eax,10
 005AF50C    mov         edx,dword ptr [ebp+8]
 005AF50F    mov         dword ptr [edx-14],eax
 005AF512    mov         eax,dword ptr [ebp+8]
 005AF515    mov         eax,dword ptr [eax-24]
 005AF518    cmp         byte ptr [eax+44],0
>005AF51C    je          005AF5D7
 005AF522    mov         eax,dword ptr [ebp+8]
 005AF525    dec         dword ptr [eax-20]
 005AF528    mov         eax,dword ptr [ebp+8]
 005AF52B    inc         dword ptr [eax-14]
 005AF52E    mov         eax,dword ptr [ebp+8]
 005AF531    mov         eax,dword ptr [eax-28]
 005AF534    mov         eax,dword ptr [eax+48]
 005AF537    mov         eax,dword ptr [eax+10]
 005AF53A    mov         eax,dword ptr [eax+18]
 005AF53D    mov         edx,dword ptr [ebp+8]
 005AF540    mov         dword ptr [edx-4C],eax
 005AF543    mov         eax,dword ptr [ebp+8]
 005AF546    test        byte ptr [eax+0C],1
>005AF54A    jne         005AF593
 005AF54C    mov         eax,dword ptr [ebp+8]
 005AF54F    mov         eax,dword ptr [eax-28]
 005AF552    mov         eax,dword ptr [eax+48]
 005AF555    mov         eax,dword ptr [eax+10]
 005AF558    mov         eax,dword ptr [eax+18]
 005AF55B    mov         edx,dword ptr [ebp+8]
 005AF55E    mov         dword ptr [edx-4C],eax
 005AF561    mov         edx,0FF000014
 005AF566    mov         eax,0FF00000F
 005AF56B    call        AllocPatternBitmap
 005AF570    mov         edx,eax
 005AF572    mov         eax,dword ptr [ebp+8]
 005AF575    mov         eax,dword ptr [eax-28]
 005AF578    mov         eax,dword ptr [eax+48]
 005AF57B    call        TBrush.SetBitmap
 005AF580    mov         eax,dword ptr [ebp+8]
 005AF583    lea         edx,[eax-20]
 005AF586    mov         eax,dword ptr [ebp+8]
 005AF589    mov         eax,dword ptr [eax-28]
 005AF58C    mov         ecx,dword ptr [eax]
 005AF58E    call        dword ptr [ecx+54]
>005AF591    jmp         005AF5B7
 005AF593    mov         eax,dword ptr [ebp+8]
 005AF596    mov         eax,dword ptr [eax-28]
 005AF599    mov         eax,dword ptr [eax+48]
 005AF59C    mov         edx,0FF00000F
 005AF5A1    call        TBrush.SetColor
 005AF5A6    mov         eax,dword ptr [ebp+8]
 005AF5A9    lea         edx,[eax-20]
 005AF5AC    mov         eax,dword ptr [ebp+8]
 005AF5AF    mov         eax,dword ptr [eax-28]
 005AF5B2    mov         ecx,dword ptr [eax]
 005AF5B4    call        dword ptr [ecx+54]
 005AF5B7    mov         eax,dword ptr [ebp+8]
 005AF5BA    mov         edx,dword ptr [eax-4C]
 005AF5BD    mov         eax,dword ptr [ebp+8]
 005AF5C0    mov         eax,dword ptr [eax-28]
 005AF5C3    mov         eax,dword ptr [eax+48]
 005AF5C6    call        TBrush.SetColor
 005AF5CB    mov         eax,dword ptr [ebp+8]
 005AF5CE    dec         dword ptr [eax-18]
 005AF5D1    mov         eax,dword ptr [ebp+8]
 005AF5D4    inc         dword ptr [eax-1C]
 005AF5D7    mov         eax,dword ptr [ebp+8]
 005AF5DA    cmp         byte ptr [eax-33],0
>005AF5DE    je          005AF739
 005AF5E4    mov         eax,dword ptr [ebp+8]
 005AF5E7    mov         eax,dword ptr [eax-24]
 005AF5EA    mov         ebx,dword ptr [eax+4C]
 005AF5ED    cmp         ebx,0FFFFFFFF
>005AF5F0    jle         005AF63C
 005AF5F2    mov         eax,dword ptr [ebp+8]
 005AF5F5    mov         eax,dword ptr [ebp+8]
 005AF5F8    mov         eax,dword ptr [eax-2C]
 005AF5FB    mov         edx,dword ptr [eax]
 005AF5FD    call        dword ptr [edx+48]
 005AF600    cmp         ebx,eax
>005AF602    jge         005AF63C
 005AF604    mov         eax,dword ptr [ebp+8]
 005AF607    mov         eax,dword ptr [eax-1C]
 005AF60A    push        eax
 005AF60B    mov         eax,dword ptr [ebp+8]
 005AF60E    mov         eax,dword ptr [eax-24]
 005AF611    mov         eax,dword ptr [eax+4C]
 005AF614    push        eax
 005AF615    mov         eax,dword ptr [ebp+8]
 005AF618    mov         eax,dword ptr [eax-24]
 005AF61B    movzx       eax,byte ptr [eax+45]
 005AF61F    push        eax
 005AF620    mov         eax,dword ptr [ebp+8]
 005AF623    mov         ecx,dword ptr [eax-20]
 005AF626    mov         eax,dword ptr [ebp+8]
 005AF629    mov         edx,dword ptr [eax-28]
 005AF62C    mov         eax,dword ptr [ebp+8]
 005AF62F    mov         eax,dword ptr [eax-2C]
 005AF632    call        TCustomImageList.Draw
>005AF637    jmp         005AF84A
 005AF63C    mov         dl,1
 005AF63E    mov         eax,[004C1D10];TBitmap
 005AF643    call        TBitmap.Create;TBitmap.Create
 005AF648    mov         edx,dword ptr [ebp+8]
 005AF64B    mov         dword ptr [edx-50],eax
 005AF64E    xor         eax,eax
 005AF650    push        ebp
 005AF651    push        5AF732
 005AF656    push        dword ptr fs:[eax]
 005AF659    mov         dword ptr fs:[eax],esp
 005AF65C    mov         eax,dword ptr [ebp+8]
 005AF65F    mov         eax,dword ptr [eax-50]
 005AF662    mov         dl,1
 005AF664    mov         ecx,dword ptr [eax]
 005AF666    call        dword ptr [ecx+40]
 005AF669    push        7FF8
 005AF66E    push        0
 005AF670    call        user32.LoadBitmapW
 005AF675    mov         edx,eax
 005AF677    mov         eax,dword ptr [ebp+8]
 005AF67A    mov         eax,dword ptr [eax-50]
 005AF67D    call        TBitmap.SetHandle
 005AF682    mov         eax,dword ptr [ebp+8]
 005AF685    mov         eax,dword ptr [eax-28]
 005AF688    mov         eax,dword ptr [eax+40]
 005AF68B    mov         eax,dword ptr [eax+18]
 005AF68E    mov         edx,dword ptr [ebp+8]
 005AF691    mov         dword ptr [edx-4C],eax
 005AF694    mov         eax,dword ptr [ebp+8]
 005AF697    mov         eax,dword ptr [eax-28]
 005AF69A    mov         eax,dword ptr [eax+40]
 005AF69D    mov         edx,0FF000012
 005AF6A2    call        TFont.SetColor
 005AF6A7    mov         eax,dword ptr [ebp+8]
 005AF6AA    mov         eax,dword ptr [eax-50]
 005AF6AD    push        eax
 005AF6AE    mov         eax,dword ptr [ebp+8]
 005AF6B1    mov         eax,dword ptr [eax-50]
 005AF6B4    mov         edx,dword ptr [eax]
 005AF6B6    call        dword ptr [edx+24]
 005AF6B9    mov         edx,dword ptr [ebp+8]
 005AF6BC    mov         edx,dword ptr [edx-14]
 005AF6BF    mov         ecx,dword ptr [ebp+8]
 005AF6C2    mov         esi,dword ptr [ecx-1C]
 005AF6C5    sub         edx,esi
 005AF6C7    sub         edx,eax
 005AF6C9    sar         edx,1
>005AF6CB    jns         005AF6D0
 005AF6CD    adc         edx,0
 005AF6D0    add         edx,esi
 005AF6D2    inc         edx
 005AF6D3    push        edx
 005AF6D4    mov         eax,dword ptr [ebp+8]
 005AF6D7    mov         eax,dword ptr [eax-50]
 005AF6DA    mov         edx,dword ptr [eax]
 005AF6DC    call        dword ptr [edx+30]
 005AF6DF    mov         edx,dword ptr [ebp+8]
 005AF6E2    mov         edx,dword ptr [edx-18]
 005AF6E5    mov         ecx,dword ptr [ebp+8]
 005AF6E8    mov         ebx,dword ptr [ecx-20]
 005AF6EB    sub         edx,ebx
 005AF6ED    sub         edx,eax
 005AF6EF    sar         edx,1
>005AF6F1    jns         005AF6F6
 005AF6F3    adc         edx,0
 005AF6F6    add         edx,ebx
 005AF6F8    inc         edx
 005AF6F9    mov         eax,dword ptr [ebp+8]
 005AF6FC    mov         eax,dword ptr [eax-28]
 005AF6FF    pop         ecx
 005AF700    mov         ebx,dword ptr [eax]
 005AF702    call        dword ptr [ebx+44]
 005AF705    mov         eax,dword ptr [ebp+8]
 005AF708    mov         edx,dword ptr [eax-4C]
 005AF70B    mov         eax,dword ptr [ebp+8]
 005AF70E    mov         eax,dword ptr [eax-28]
 005AF711    mov         eax,dword ptr [eax+40]
 005AF714    call        TFont.SetColor
 005AF719    xor         eax,eax
 005AF71B    pop         edx
 005AF71C    pop         ecx
 005AF71D    pop         ecx
 005AF71E    mov         dword ptr fs:[eax],edx
 005AF721    push        5AF84A
 005AF726    mov         eax,dword ptr [ebp+8]
 005AF729    mov         eax,dword ptr [eax-50]
 005AF72C    call        TObject.Free
 005AF731    ret
>005AF732    jmp         @HandleFinally
>005AF737    jmp         005AF726
 005AF739    mov         eax,dword ptr [ebp+8]
 005AF73C    mov         edx,dword ptr [ebp+8]
 005AF73F    lea         esi,[eax-20]
 005AF742    lea         edi,[edx-44]
 005AF745    movs        dword ptr [edi],dword ptr [esi]
 005AF746    movs        dword ptr [edi],dword ptr [esi]
 005AF747    movs        dword ptr [edi],dword ptr [esi]
 005AF748    movs        dword ptr [edi],dword ptr [esi]
 005AF749    mov         eax,dword ptr [ebp+8]
 005AF74C    mov         eax,dword ptr [eax-24]
 005AF74F    mov         eax,dword ptr [eax+58]
 005AF752    mov         edx,dword ptr [eax]
 005AF754    call        dword ptr [edx+30]
 005AF757    mov         edx,dword ptr [ebp+8]
 005AF75A    mov         edx,dword ptr [edx-18]
 005AF75D    mov         ecx,dword ptr [ebp+8]
 005AF760    sub         edx,dword ptr [ecx-20]
 005AF763    cmp         eax,edx
>005AF765    jge         005AF7B5
 005AF767    mov         eax,dword ptr [ebp+8]
 005AF76A    mov         eax,dword ptr [eax-24]
 005AF76D    mov         eax,dword ptr [eax+58]
 005AF770    mov         edx,dword ptr [eax]
 005AF772    call        dword ptr [edx+30]
 005AF775    mov         edx,dword ptr [ebp+8]
 005AF778    mov         edx,dword ptr [edx-18]
 005AF77B    mov         ecx,dword ptr [ebp+8]
 005AF77E    sub         edx,dword ptr [ecx-20]
 005AF781    sub         edx,eax
 005AF783    sar         edx,1
>005AF785    jns         005AF78A
 005AF787    adc         edx,0
 005AF78A    mov         eax,dword ptr [ebp+8]
 005AF78D    mov         eax,dword ptr [eax-18]
 005AF790    sub         eax,edx
 005AF792    inc         eax
 005AF793    mov         edx,dword ptr [ebp+8]
 005AF796    mov         dword ptr [edx-18],eax
 005AF799    mov         eax,dword ptr [ebp+8]
 005AF79C    mov         eax,dword ptr [eax-24]
 005AF79F    mov         eax,dword ptr [eax+58]
 005AF7A2    mov         edx,dword ptr [eax]
 005AF7A4    call        dword ptr [edx+30]
 005AF7A7    mov         edx,dword ptr [ebp+8]
 005AF7AA    mov         edx,dword ptr [edx-18]
 005AF7AD    sub         edx,eax
 005AF7AF    mov         eax,dword ptr [ebp+8]
 005AF7B2    mov         dword ptr [eax-20],edx
 005AF7B5    mov         eax,dword ptr [ebp+8]
 005AF7B8    mov         eax,dword ptr [eax-24]
 005AF7BB    mov         eax,dword ptr [eax+58]
 005AF7BE    mov         edx,dword ptr [eax]
 005AF7C0    call        dword ptr [edx+24]
 005AF7C3    mov         edx,dword ptr [ebp+8]
 005AF7C6    mov         edx,dword ptr [edx-14]
 005AF7C9    mov         ecx,dword ptr [ebp+8]
 005AF7CC    sub         edx,dword ptr [ecx-1C]
 005AF7CF    cmp         eax,edx
>005AF7D1    jge         005AF81D
 005AF7D3    mov         eax,dword ptr [ebp+8]
 005AF7D6    mov         eax,dword ptr [eax-24]
 005AF7D9    mov         eax,dword ptr [eax+58]
 005AF7DC    mov         edx,dword ptr [eax]
 005AF7DE    call        dword ptr [edx+24]
 005AF7E1    mov         edx,dword ptr [ebp+8]
 005AF7E4    mov         edx,dword ptr [edx-14]
 005AF7E7    mov         ecx,dword ptr [ebp+8]
 005AF7EA    sub         edx,dword ptr [ecx-1C]
 005AF7ED    sub         edx,eax
 005AF7EF    sar         edx,1
>005AF7F1    jns         005AF7F6
 005AF7F3    adc         edx,0
 005AF7F6    mov         eax,dword ptr [ebp+8]
 005AF7F9    add         edx,dword ptr [eax-1C]
 005AF7FC    inc         edx
 005AF7FD    mov         eax,dword ptr [ebp+8]
 005AF800    mov         dword ptr [eax-1C],edx
 005AF803    mov         eax,dword ptr [ebp+8]
 005AF806    mov         eax,dword ptr [eax-24]
 005AF809    mov         eax,dword ptr [eax+58]
 005AF80C    mov         edx,dword ptr [eax]
 005AF80E    call        dword ptr [edx+24]
 005AF811    mov         edx,dword ptr [ebp+8]
 005AF814    add         eax,dword ptr [edx-1C]
 005AF817    mov         edx,dword ptr [ebp+8]
 005AF81A    mov         dword ptr [edx-14],eax
 005AF81D    mov         eax,dword ptr [ebp+8]
 005AF820    mov         eax,dword ptr [eax-24]
 005AF823    mov         ecx,dword ptr [eax+58]
 005AF826    mov         eax,dword ptr [ebp+8]
 005AF829    lea         edx,[eax-20]
 005AF82C    mov         eax,dword ptr [ebp+8]
 005AF82F    mov         eax,dword ptr [eax-28]
 005AF832    mov         ebx,dword ptr [eax]
 005AF834    call        dword ptr [ebx+88]
 005AF83A    mov         eax,dword ptr [ebp+8]
 005AF83D    mov         edx,dword ptr [ebp+8]
 005AF840    lea         esi,[eax-44]
 005AF843    lea         edi,[edx-20]
 005AF846    movs        dword ptr [edi],dword ptr [esi]
 005AF847    movs        dword ptr [edi],dword ptr [esi]
 005AF848    movs        dword ptr [edi],dword ptr [esi]
 005AF849    movs        dword ptr [edi],dword ptr [esi]
 005AF84A    mov         eax,dword ptr [ebp+8]
 005AF84D    mov         eax,dword ptr [eax-24]
 005AF850    cmp         byte ptr [eax+44],0
>005AF854    je          005AF8C1
 005AF856    mov         eax,dword ptr [ebp+8]
 005AF859    dec         dword ptr [eax-18]
 005AF85C    mov         eax,dword ptr [ebp+8]
 005AF85F    dec         dword ptr [eax-14]
>005AF862    jmp         005AF8C1
 005AF864    mov         eax,dword ptr [ebp+8]
 005AF867    cmp         dword ptr [eax-2C],0
>005AF86B    je          005AF8A2
 005AF86D    mov         eax,dword ptr [ebp+8]
 005AF870    cmp         byte ptr [eax+8],0
>005AF874    jne         005AF8A2
 005AF876    mov         eax,dword ptr [ebp+8]
 005AF879    mov         eax,dword ptr [eax-18]
 005AF87C    mov         edx,dword ptr [ebp+8]
 005AF87F    mov         edx,dword ptr [edx-2C]
 005AF882    sub         eax,dword ptr [edx+54]
 005AF885    mov         edx,dword ptr [ebp+8]
 005AF888    mov         dword ptr [edx-20],eax
 005AF88B    mov         eax,dword ptr [ebp+8]
 005AF88E    mov         eax,dword ptr [eax-1C]
 005AF891    mov         edx,dword ptr [ebp+8]
 005AF894    mov         edx,dword ptr [edx-2C]
 005AF897    add         eax,dword ptr [edx+50]
 005AF89A    mov         edx,dword ptr [ebp+8]
 005AF89D    mov         dword ptr [edx-14],eax
>005AF8A0    jmp         005AF8BA
 005AF8A2    mov         eax,dword ptr [ebp+8]
 005AF8A5    mov         eax,dword ptr [eax-18]
 005AF8A8    mov         edx,dword ptr [ebp+8]
 005AF8AB    mov         dword ptr [edx-20],eax
 005AF8AE    mov         eax,dword ptr [ebp+8]
 005AF8B1    mov         eax,dword ptr [eax-1C]
 005AF8B4    mov         edx,dword ptr [ebp+8]
 005AF8B7    mov         dword ptr [edx-14],eax
 005AF8BA    mov         eax,dword ptr [ebp+8]
 005AF8BD    mov         byte ptr [eax-47],0
 005AF8C1    mov         eax,dword ptr [ebp+8]
 005AF8C4    dec         dword ptr [eax-20]
 005AF8C7    mov         eax,dword ptr [ebp+8]
 005AF8CA    dec         dword ptr [eax-1C]
 005AF8CD    mov         eax,dword ptr [ebp+8]
 005AF8D0    add         dword ptr [eax-18],2
 005AF8D4    mov         eax,dword ptr [ebp+8]
 005AF8D7    add         dword ptr [eax-14],2
 005AF8DB    mov         eax,dword ptr [ebp+8]
 005AF8DE    mov         eax,dword ptr [eax-24]
 005AF8E1    cmp         byte ptr [eax+44],0
>005AF8E5    jne         005AF902
 005AF8E7    mov         eax,dword ptr [ebp+8]
 005AF8EA    cmp         byte ptr [eax-32],0
>005AF8EE    je          005AF92E
 005AF8F0    mov         eax,dword ptr [ebp+8]
 005AF8F3    cmp         byte ptr [eax-47],0
>005AF8F7    je          005AF92E
 005AF8F9    mov         eax,dword ptr [ebp+8]
 005AF8FC    cmp         byte ptr [eax-45],0
>005AF900    jne         005AF92E
 005AF902    push        0F
 005AF904    mov         eax,dword ptr [ebp+8]
 005AF907    mov         eax,dword ptr [eax-24]
 005AF90A    movzx       eax,byte ptr [eax+44]
 005AF90E    mov         eax,dword ptr [eax*4+7A1C54]
 005AF915    push        eax
 005AF916    mov         eax,dword ptr [ebp+8]
 005AF919    add         eax,0FFFFFFE0
 005AF91C    push        eax
 005AF91D    mov         eax,dword ptr [ebp+8]
 005AF920    mov         eax,dword ptr [eax-28]
 005AF923    call        TCanvas.GetHandle
 005AF928    push        eax
 005AF929    call        user32.DrawEdge
 005AF92E    mov         eax,dword ptr [ebp+8]
 005AF931    cmp         byte ptr [eax-32],0
>005AF935    je          005AF983
 005AF937    mov         eax,dword ptr [ebp+8]
 005AF93A    cmp         byte ptr [eax-47],0
>005AF93E    je          005AF94D
 005AF940    mov         eax,dword ptr [ebp+8]
 005AF943    mov         eax,dword ptr [eax-20]
 005AF946    dec         eax
 005AF947    mov         edx,dword ptr [ebp+8]
 005AF94A    mov         dword ptr [edx-8],eax
 005AF94D    mov         eax,dword ptr [ebp+8]
 005AF950    cmp         byte ptr [eax-51],0
>005AF954    je          005AF95F
 005AF956    mov         eax,dword ptr [ebp+8]
 005AF959    cmp         byte ptr [eax+8],0
>005AF95D    jne         005AF972
 005AF95F    mov         eax,dword ptr [ebp+8]
 005AF962    mov         eax,dword ptr [eax-28]
 005AF965    mov         eax,dword ptr [eax+48]
 005AF968    mov         edx,0FF00000D
 005AF96D    call        TBrush.SetColor
 005AF972    mov         eax,dword ptr [ebp+8]
 005AF975    lea         edx,[eax-10]
 005AF978    mov         eax,dword ptr [ebp+8]
 005AF97B    mov         eax,dword ptr [eax-28]
 005AF97E    mov         ecx,dword ptr [eax]
 005AF980    call        dword ptr [ecx+54]
 005AF983    mov         eax,dword ptr [ebp+8]
 005AF986    cmp         byte ptr [eax+8],0
>005AF98A    je          005AFA10
 005AF990    mov         eax,dword ptr [ebp+8]
 005AF993    cmp         byte ptr [eax-51],0
>005AF997    je          005AFA10
 005AF999    mov         eax,dword ptr [ebp+8]
 005AF99C    cmp         byte ptr [eax-45],0
>005AF9A0    je          005AF9AB
 005AF9A2    mov         eax,dword ptr [ebp+8]
 005AF9A5    cmp         byte ptr [eax-46],0
>005AF9A9    jne         005AFA10
 005AF9AB    mov         eax,dword ptr [ebp+8]
 005AF9AE    cmp         byte ptr [eax-32],0
>005AF9B2    je          005AF9D2
 005AF9B4    push        0F
 005AF9B6    push        2
 005AF9B8    mov         eax,dword ptr [ebp+8]
 005AF9BB    add         eax,0FFFFFFF0
 005AF9BE    push        eax
 005AF9BF    mov         eax,dword ptr [ebp+8]
 005AF9C2    mov         eax,dword ptr [eax-28]
 005AF9C5    call        TCanvas.GetHandle
 005AF9CA    push        eax
 005AF9CB    call        user32.DrawEdge
>005AF9D0    jmp         005AF9F7
 005AF9D2    mov         eax,dword ptr [ebp+8]
 005AF9D5    test        byte ptr [eax+0C],40
>005AF9D9    je          005AF9F7
 005AF9DB    push        0F
 005AF9DD    push        4
 005AF9DF    mov         eax,dword ptr [ebp+8]
 005AF9E2    add         eax,0FFFFFFF0
 005AF9E5    push        eax
 005AF9E6    mov         eax,dword ptr [ebp+8]
 005AF9E9    mov         eax,dword ptr [eax-28]
 005AF9EC    call        TCanvas.GetHandle
 005AF9F1    push        eax
 005AF9F2    call        user32.DrawEdge
 005AF9F7    mov         eax,dword ptr [ebp+8]
 005AF9FA    cmp         byte ptr [eax-32],0
>005AF9FE    jne         005AFA10
 005AFA00    mov         eax,dword ptr [ebp+8]
 005AFA03    add         eax,0FFFFFFF0
 005AFA06    or          ecx,0FFFFFFFF
 005AFA09    xor         edx,edx
 005AFA0B    call        OffsetRect
 005AFA10    mov         eax,dword ptr [ebp+8]
 005AFA13    cmp         byte ptr [eax-32],0
>005AFA17    je          005AFA22
 005AFA19    mov         eax,dword ptr [ebp+8]
 005AFA1C    cmp         byte ptr [eax-47],0
>005AFA20    jne         005AFA2F
 005AFA22    mov         eax,dword ptr [ebp+8]
 005AFA25    mov         eax,dword ptr [eax-20]
 005AFA28    dec         eax
 005AFA29    mov         edx,dword ptr [ebp+8]
 005AFA2C    mov         dword ptr [edx-8],eax
 005AFA2F    mov         eax,dword ptr [ebp+8]
 005AFA32    add         dword ptr [eax-10],2
 005AFA36    mov         eax,dword ptr [ebp+8]
 005AFA39    dec         dword ptr [eax-8]
 005AFA3C    mov         eax,dword ptr [ebp+8]
 005AFA3F    movzx       eax,byte ptr [eax-31]
 005AFA43    movzx       ebx,word ptr [eax*2+7A1C78]
 005AFA4B    or          bx,60
 005AFA4F    movzx       ebx,bx
 005AFA52    mov         eax,dword ptr [ebp+8]
 005AFA55    cmp         byte ptr [eax-52],0
>005AFA59    je          005AFA6A
 005AFA5B    mov         eax,dword ptr [ebp+8]
 005AFA5E    test        byte ptr [eax+0D],1
>005AFA62    je          005AFA6A
 005AFA64    or          ebx,100000
 005AFA6A    mov         eax,dword ptr [ebp+8]
 005AFA6D    mov         edx,dword ptr [ebp+8]
 005AFA70    lea         esi,[eax-10]
 005AFA73    lea         edi,[edx-44]
 005AFA76    movs        dword ptr [edi],dword ptr [esi]
 005AFA77    movs        dword ptr [edi],dword ptr [esi]
 005AFA78    movs        dword ptr [edi],dword ptr [esi]
 005AFA79    movs        dword ptr [edi],dword ptr [esi]
 005AFA7A    mov         eax,dword ptr [ebp+8]
 005AFA7D    test        byte ptr [eax+0C],20
>005AFA81    je          005AFA98
 005AFA83    mov         eax,dword ptr [ebp+8]
 005AFA86    mov         eax,dword ptr [eax-28]
 005AFA89    mov         eax,dword ptr [eax+40]
 005AFA8C    movzx       edx,byte ptr ds:[5AFC24];0x1 gvar_005AFC24
 005AFA93    call        TFont.SetStyle
 005AFA98    mov         eax,dword ptr [ebp+8]
 005AFA9B    add         eax,0FFFFFFF0
 005AFA9E    push        eax
 005AFA9F    mov         eax,dword ptr [ebp+8]
 005AFAA2    movzx       eax,byte ptr [eax-32]
 005AFAA6    push        eax
 005AFAA7    mov         eax,400
 005AFAAC    or          eax,ebx
 005AFAAE    or          eax,100
 005AFAB3    push        eax
 005AFAB4    mov         eax,dword ptr [ebp+8]
 005AFAB7    mov         eax,dword ptr [eax-24]
 005AFABA    mov         ecx,dword ptr [eax+40]
 005AFABD    mov         eax,dword ptr [ebp+8]
 005AFAC0    mov         edx,dword ptr [eax-28]
 005AFAC3    mov         eax,dword ptr [ebp+8]
 005AFAC6    mov         eax,dword ptr [eax-24]
 005AFAC9    call        005ADA30
 005AFACE    mov         eax,dword ptr [ebp+8]
 005AFAD1    mov         eax,dword ptr [eax-44]
 005AFAD4    mov         edx,dword ptr [ebp+8]
 005AFAD7    mov         dword ptr [edx-10],eax
 005AFADA    mov         eax,dword ptr [ebp+8]
 005AFADD    mov         eax,dword ptr [eax-3C]
 005AFAE0    mov         edx,dword ptr [ebp+8]
 005AFAE3    mov         dword ptr [edx-8],eax
 005AFAE6    mov         eax,dword ptr [ebp+8]
 005AFAE9    mov         ecx,dword ptr [eax-38]
 005AFAEC    mov         eax,dword ptr [ebp+8]
 005AFAEF    sub         ecx,dword ptr [eax-40]
 005AFAF2    mov         eax,dword ptr [ebp+8]
 005AFAF5    mov         eax,dword ptr [eax-4]
 005AFAF8    mov         edx,dword ptr [ebp+8]
 005AFAFB    sub         eax,dword ptr [edx-0C]
 005AFAFE    sub         ecx,eax
 005AFB00    sar         ecx,1
>005AFB02    jns         005AFB07
 005AFB04    adc         ecx,0
 005AFB07    mov         eax,dword ptr [ebp+8]
 005AFB0A    add         eax,0FFFFFFF0
 005AFB0D    xor         edx,edx
 005AFB0F    call        OffsetRect
 005AFB14    mov         eax,dword ptr [ebp+8]
 005AFB17    cmp         byte ptr [eax+8],0
>005AFB1B    je          005AFB41
 005AFB1D    mov         eax,dword ptr [ebp+8]
 005AFB20    cmp         byte ptr [eax-32],0
>005AFB24    je          005AFB41
 005AFB26    mov         eax,dword ptr [ebp+8]
 005AFB29    cmp         byte ptr [eax-51],0
>005AFB2D    je          005AFB41
 005AFB2F    mov         eax,dword ptr [ebp+8]
 005AFB32    add         eax,0FFFFFFF0
 005AFB35    xor         ecx,ecx
 005AFB37    mov         edx,1
 005AFB3C    call        OffsetRect
 005AFB41    mov         eax,dword ptr [ebp+8]
 005AFB44    add         eax,0FFFFFFF0
 005AFB47    push        eax
 005AFB48    mov         eax,dword ptr [ebp+8]
 005AFB4B    movzx       eax,byte ptr [eax-32]
 005AFB4F    push        eax
 005AFB50    push        ebx
 005AFB51    mov         eax,dword ptr [ebp+8]
 005AFB54    mov         eax,dword ptr [eax-24]
 005AFB57    mov         ecx,dword ptr [eax+40]
 005AFB5A    mov         eax,dword ptr [ebp+8]
 005AFB5D    mov         edx,dword ptr [eax-28]
 005AFB60    mov         eax,dword ptr [ebp+8]
 005AFB63    mov         eax,dword ptr [eax-24]
 005AFB66    call        005ADA30
 005AFB6B    mov         eax,dword ptr [ebp+8]
 005AFB6E    mov         eax,dword ptr [eax-24]
 005AFB71    cmp         word ptr [eax+6C],0
>005AFB76    je          005AFBF1
 005AFB78    mov         eax,dword ptr [ebp+8]
 005AFB7B    cmp         byte ptr [eax+8],0
>005AFB7F    jne         005AFBF1
 005AFB81    mov         eax,dword ptr [ebp+8]
 005AFB84    cmp         byte ptr [eax-53],0
>005AFB88    je          005AFB96
 005AFB8A    mov         eax,dword ptr [ebp+8]
 005AFB8D    mov         eax,dword ptr [eax-24]
 005AFB90    cmp         dword ptr [eax+68],0
>005AFB94    jne         005AFBF1
 005AFB96    lea         edx,[ebp-4]
 005AFB99    mov         eax,dword ptr [ebp+8]
 005AFB9C    mov         eax,dword ptr [eax-24]
 005AFB9F    movzx       eax,word ptr [eax+6C]
 005AFBA3    call        ShortCutToText
 005AFBA8    mov         eax,dword ptr [ebp+8]
 005AFBAB    mov         dword ptr [eax-10],0A
 005AFBB2    mov         eax,dword ptr [ebp+8]
 005AFBB5    mov         eax,dword ptr [eax-28]
 005AFBB8    mov         edx,dword ptr [ebp-4]
 005AFBBB    call        TCustomCanvas.TextWidth
 005AFBC0    mov         edx,dword ptr [ebp+8]
 005AFBC3    add         eax,dword ptr [edx-10]
 005AFBC6    mov         edx,dword ptr [ebp+8]
 005AFBC9    mov         dword ptr [edx-8],eax
 005AFBCC    mov         eax,dword ptr [ebp+8]
 005AFBCF    add         eax,0FFFFFFF0
 005AFBD2    push        eax
 005AFBD3    mov         eax,dword ptr [ebp+8]
 005AFBD6    movzx       eax,byte ptr [eax-32]
 005AFBDA    push        eax
 005AFBDB    push        2
 005AFBDD    mov         eax,dword ptr [ebp+8]
 005AFBE0    mov         edx,dword ptr [eax-28]
 005AFBE3    mov         eax,dword ptr [ebp+8]
 005AFBE6    mov         eax,dword ptr [eax-24]
 005AFBE9    mov         ecx,dword ptr [ebp-4]
 005AFBEC    call        005ADA30
 005AFBF1    xor         eax,eax
 005AFBF3    pop         edx
 005AFBF4    pop         ecx
 005AFBF5    pop         ecx
 005AFBF6    mov         dword ptr fs:[eax],edx
 005AFBF9    push        5AFC0E
 005AFBFE    lea         eax,[ebp-4]
 005AFC01    call        @UStrClr
 005AFC06    ret
>005AFC07    jmp         @HandleFinally
>005AFC0C    jmp         005AFBFE
 005AFC0E    pop         edi
 005AFC0F    pop         esi
 005AFC10    pop         ebx
 005AFC11    pop         ecx
 005AFC12    pop         ebp
 005AFC13    ret
end;*}

//005AFC28
{*procedure sub_005AFC28(?:?; ?:?; ?:?);
begin
 005AFC28    push        ebp
 005AFC29    mov         ebp,esp
 005AFC2B    add         esp,0FFFFFFAC
 005AFC2E    push        ebx
 005AFC2F    push        esi
 005AFC30    push        edi
 005AFC31    mov         esi,ecx
 005AFC33    lea         edi,[ebp-10]
 005AFC36    movs        dword ptr [edi],dword ptr [esi]
 005AFC37    movs        dword ptr [edi],dword ptr [esi]
 005AFC38    movs        dword ptr [edi],dword ptr [esi]
 005AFC39    movs        dword ptr [edi],dword ptr [esi]
 005AFC3A    mov         dword ptr [ebp-28],edx
 005AFC3D    mov         dword ptr [ebp-24],eax
 005AFC40    mov         eax,dword ptr [ebp-24]
 005AFC43    call        TMenuItem.GetParentMenu
 005AFC48    mov         dword ptr [ebp-30],eax
 005AFC4B    mov         eax,dword ptr [ebp-24]
 005AFC4E    call        TMenuItem.GetImageList
 005AFC53    mov         dword ptr [ebp-2C],eax
 005AFC56    test        byte ptr [ebp+0C],1
 005AFC5A    setne       al
 005AFC5D    mov         byte ptr [ebp-32],al
 005AFC60    mov         eax,[007C4590];^gvar_0079EDE0
 005AFC65    cmp         dword ptr [eax],4
>005AFC68    jg          005AFC82
 005AFC6A    mov         eax,[007C4590];^gvar_0079EDE0
 005AFC6F    cmp         dword ptr [eax],4
>005AFC72    jne         005AFC7E
 005AFC74    mov         eax,[007C4B24];^gvar_0079EDE4
 005AFC79    cmp         dword ptr [eax],0
>005AFC7C    jg          005AFC82
 005AFC7E    xor         eax,eax
>005AFC80    jmp         005AFC84
 005AFC82    mov         al,1
 005AFC84    mov         byte ptr [ebp-51],al
 005AFC87    mov         eax,[007C4590];^gvar_0079EDE0
 005AFC8C    cmp         dword ptr [eax],4
>005AFC8F    jle         005AFC9B
 005AFC91    mov         eax,[007C4EC4];^gvar_0079EDDC
 005AFC96    cmp         dword ptr [eax],2
>005AFC99    je          005AFC9F
 005AFC9B    xor         eax,eax
>005AFC9D    jmp         005AFCA1
 005AFC9F    mov         al,1
 005AFCA1    mov         byte ptr [ebp-52],al
 005AFCA4    mov         edx,1
 005AFCA9    mov         eax,5
 005AFCAE    call        CheckWin32Version
 005AFCB3    mov         byte ptr [ebp-45],al
 005AFCB6    cmp         byte ptr [ebp-45],0
>005AFCBA    je          005AFCE5
 005AFCBC    call        TStyleManager.GetSystemStyle
 005AFCC1    mov         edx,dword ptr [eax]
 005AFCC3    call        dword ptr [edx+48];@AbstractError
 005AFCC6    test        al,al
>005AFCC8    je          005AFCE5
 005AFCCA    push        3E9
 005AFCCF    push        0
 005AFCD1    mov         eax,[007C44CC];^gvar_007CA564:Pointer
 005AFCD6    mov         eax,dword ptr [eax]
 005AFCD8    call        eax
 005AFCDA    cmp         eax,1
 005AFCDD    sbb         eax,eax
 005AFCDF    inc         eax
 005AFCE0    mov         byte ptr [ebp-46],al
>005AFCE3    jmp         005AFCE9
 005AFCE5    mov         byte ptr [ebp-46],0
 005AFCE9    cmp         dword ptr [ebp-30],0
>005AFCED    je          005AFD5C
 005AFCEF    mov         eax,dword ptr [ebp-30]
 005AFCF2    cmp         byte ptr [eax+4C],0;TMenu.FOwnerDraw:Boolean
>005AFCF6    jne         005AFCFE
 005AFCF8    cmp         dword ptr [ebp-2C],0
>005AFCFC    je          005AFD5C
 005AFCFE    mov         eax,dword ptr [ebp-24]
 005AFD01    cmp         word ptr [eax+0AA],0;TMenuItem.?fAA:word
>005AFD09    jne         005AFD18
 005AFD0B    mov         eax,dword ptr [ebp-24]
 005AFD0E    cmp         word ptr [eax+0A2],0;TMenuItem.?fA2:word
>005AFD16    je          005AFD5C
 005AFD18    movzx       eax,byte ptr [ebp-32]
 005AFD1C    push        eax
 005AFD1D    lea         ecx,[ebp-10]
 005AFD20    mov         edx,dword ptr [ebp-28]
 005AFD23    mov         eax,dword ptr [ebp-24]
 005AFD26    mov         ebx,dword ptr [eax]
 005AFD28    call        dword ptr [ebx+48];TMenuItem.sub_005ADC68
 005AFD2B    mov         eax,dword ptr [ebp-24]
 005AFD2E    cmp         word ptr [eax+0AA],0;TMenuItem.?fAA:word
>005AFD36    je          005AFDC4
 005AFD3C    lea         eax,[ebp-10]
 005AFD3F    push        eax
 005AFD40    movzx       eax,word ptr [ebp+0C]
 005AFD44    push        eax
 005AFD45    mov         ebx,dword ptr [ebp-24]
 005AFD48    mov         ecx,dword ptr [ebp-28]
 005AFD4B    mov         edx,dword ptr [ebp-24]
 005AFD4E    mov         eax,dword ptr [ebx+0AC];TMenuItem.?fAC:dword
 005AFD54    call        dword ptr [ebx+0A8];TMenuItem.FOnAdvancedDrawItem
>005AFD5A    jmp         005AFDC4
 005AFD5C    xor         edx,edx
 005AFD5E    mov         eax,6
 005AFD63    call        CheckWin32Version
 005AFD68    mov         byte ptr [ebp-53],al
 005AFD6B    cmp         byte ptr [ebp-53],0
>005AFD6F    je          005AFDA2
 005AFD71    call        TStyleManager.GetSystemStyle
 005AFD76    mov         dl,0A
 005AFD78    mov         ecx,dword ptr [eax]
 005AFD7A    call        dword ptr [ecx+54];TCustomStyleServices.GetTheme
 005AFD7D    test        eax,eax
>005AFD7F    je          005AFDA2
 005AFD81    push        ebp
 005AFD82    cmp         dword ptr [ebp-30],0
>005AFD86    je          005AFD94
 005AFD88    mov         eax,dword ptr [ebp-30]
 005AFD8B    call        TMenu.IsRightToLeft
 005AFD90    test        al,al
>005AFD92    jne         005AFD98
 005AFD94    xor         eax,eax
>005AFD96    jmp         005AFD9A
 005AFD98    mov         al,1
 005AFD9A    call        005ADE0C
 005AFD9F    pop         ecx
>005AFDA0    jmp         005AFDC4
 005AFDA2    cmp         dword ptr [ebp-30],0
>005AFDA6    je          005AFDBD
 005AFDA8    mov         eax,dword ptr [ebp-30]
 005AFDAB    call        TMenu.IsRightToLeft
 005AFDB0    test        al,al
>005AFDB2    jne         005AFDBD
 005AFDB4    push        ebp
 005AFDB5    call        005AE948
 005AFDBA    pop         ecx
>005AFDBB    jmp         005AFDC4
 005AFDBD    push        ebp
 005AFDBE    call        005AF2A8
 005AFDC3    pop         ecx
 005AFDC4    pop         edi
 005AFDC5    pop         esi
 005AFDC6    pop         ebx
 005AFDC7    mov         esp,ebp
 005AFDC9    pop         ebp
 005AFDCA    ret         8
end;*}

//005AFDD0
function TMenuItem.GetImageList:TCustomImageList;
begin
{*
 005AFDD0    push        ebx
 005AFDD1    xor         ebx,ebx
 005AFDD3    mov         edx,dword ptr [eax+70];TMenuItem.FParent:TMenuItem
>005AFDD6    jmp         005AFDDB
 005AFDD8    mov         edx,dword ptr [edx+70];TMenuItem.FParent:TMenuItem
 005AFDDB    test        edx,edx
>005AFDDD    je          005AFDE8
 005AFDDF    cmp         dword ptr [edx+88],0;TMenuItem.FSubMenuImages:TCustomImageList
>005AFDE6    je          005AFDD8
 005AFDE8    test        edx,edx
>005AFDEA    je          005AFDF4
 005AFDEC    mov         ebx,dword ptr [edx+88];TMenuItem.FSubMenuImages:TCustomImageList
>005AFDF2    jmp         005AFE00
 005AFDF4    call        TMenuItem.GetParentMenu
 005AFDF9    test        eax,eax
>005AFDFB    je          005AFE00
 005AFDFD    mov         ebx,dword ptr [eax+54];TMenu.FImages:TCustomImageList
 005AFE00    mov         eax,ebx
 005AFE02    pop         ebx
 005AFE03    ret
*}
end;

//005AFE04
procedure GetMenuSize;
begin
{*
 005AFE04    push        ebp
 005AFE05    mov         ebp,esp
 005AFE07    add         esp,0FFFFFE08
 005AFE0D    call        tagNONCLIENTMETRICSW.SizeOf
 005AFE12    mov         dword ptr [ebp-1F8],eax
 005AFE18    push        0
 005AFE1A    lea         eax,[ebp-1F8]
 005AFE20    push        eax
 005AFE21    push        0
 005AFE23    push        29
 005AFE25    call        user32.SystemParametersInfoW
 005AFE2A    test        eax,eax
>005AFE2C    je          005AFE4A
 005AFE2E    mov         eax,dword ptr [ebp+8]
 005AFE31    mov         eax,dword ptr [eax-14]
 005AFE34    mov         edx,dword ptr [ebp-120]
 005AFE3A    mov         dword ptr [eax],edx
 005AFE3C    mov         eax,dword ptr [ebp+8]
 005AFE3F    mov         eax,dword ptr [eax+8]
 005AFE42    mov         edx,dword ptr [ebp-11C]
 005AFE48    mov         dword ptr [eax],edx
 005AFE4A    mov         esp,ebp
 005AFE4C    pop         ebp
 005AFE4D    ret
*}
end;

//005AFE50
{*procedure sub_005AFE50(?:?);
begin
 005AFE50    push        ebp
 005AFE51    mov         ebp,esp
 005AFE53    add         esp,0FFFFFF9C
 005AFE56    push        ebx
 005AFE57    push        esi
 005AFE58    push        edi
 005AFE59    xor         eax,eax
 005AFE5B    mov         dword ptr [ebp-40],eax
 005AFE5E    mov         esi,dword ptr [ebp+8]
 005AFE61    add         esi,0FFFFFFE8
 005AFE64    xor         eax,eax
 005AFE66    push        ebp
 005AFE67    push        5B029F
 005AFE6C    push        dword ptr fs:[eax]
 005AFE6F    mov         dword ptr fs:[eax],esp
 005AFE72    mov         eax,dword ptr [ebp+8]
 005AFE75    mov         eax,dword ptr [eax+8]
 005AFE78    xor         edx,edx
 005AFE7A    mov         dword ptr [eax],edx
 005AFE7C    mov         eax,dword ptr [ebp+8]
 005AFE7F    mov         eax,dword ptr [eax-14]
 005AFE82    xor         edx,edx
 005AFE84    mov         dword ptr [eax],edx
 005AFE86    call        TStyleManager.GetSystemStyle
 005AFE8B    mov         ebx,eax
 005AFE8D    push        1
 005AFE8F    lea         eax,[ebp-10]
 005AFE92    push        eax
 005AFE93    mov         eax,ebx
 005AFE95    mov         edx,dword ptr [eax]
 005AFE97    call        dword ptr [edx+4C];TCustomStyleServices.GetEnabled
 005AFE9A    and         eax,7F
 005AFE9D    lea         eax,[eax*2+7A1C84]
 005AFEA4    mov         edx,dword ptr [esi]
 005AFEA6    movzx       edx,byte ptr [edx+49]
 005AFEAA    movzx       edx,byte ptr [eax+edx]
 005AFEAE    lea         ecx,[ebp-2C]
 005AFEB1    mov         eax,ebx
 005AFEB3    mov         edi,dword ptr [eax]
 005AFEB5    call        dword ptr [edi+0A4];TCustomStyleServices.GetElementDetails
 005AFEBB    lea         eax,[ebp-2C]
 005AFEBE    push        eax
 005AFEBF    mov         eax,dword ptr [esi]
 005AFEC1    call        005AD984
 005AFEC6    mov         edx,eax
 005AFEC8    mov         eax,ebx
 005AFECA    pop         ecx
 005AFECB    call        TCustomStyleServices.GetElementSize
 005AFED0    push        60
 005AFED2    mov         eax,dword ptr [ebp+8]
 005AFED5    mov         eax,dword ptr [eax-1C]
 005AFED8    push        eax
 005AFED9    mov         eax,dword ptr [ebp-0C]
 005AFEDC    push        eax
 005AFEDD    call        kernel32.MulDiv
 005AFEE2    mov         dword ptr [ebp-0C],eax
 005AFEE5    push        60
 005AFEE7    mov         eax,dword ptr [ebp+8]
 005AFEEA    mov         eax,dword ptr [eax-1C]
 005AFEED    push        eax
 005AFEEE    mov         eax,dword ptr [ebp-10]
 005AFEF1    push        eax
 005AFEF2    call        kernel32.MulDiv
 005AFEF7    mov         dword ptr [ebp-10],eax
 005AFEFA    mov         eax,dword ptr [ebp+8]
 005AFEFD    cmp         dword ptr [eax-20],0
>005AFF01    je          005AFF1D
 005AFF03    mov         eax,dword ptr [ebp+8]
 005AFF06    mov         eax,dword ptr [eax-20]
 005AFF09    mov         eax,dword ptr [eax+50]
 005AFF0C    cmp         eax,dword ptr [ebp-0C]
>005AFF0F    jle         005AFF1D
 005AFF11    mov         eax,dword ptr [ebp+8]
 005AFF14    mov         eax,dword ptr [eax-20]
 005AFF17    mov         eax,dword ptr [eax+50]
 005AFF1A    mov         dword ptr [ebp-0C],eax
 005AFF1D    mov         eax,dword ptr [ebp+8]
 005AFF20    cmp         dword ptr [eax-20],0
>005AFF24    je          005AFF40
 005AFF26    mov         eax,dword ptr [ebp+8]
 005AFF29    mov         eax,dword ptr [eax-20]
 005AFF2C    mov         eax,dword ptr [eax+54]
 005AFF2F    cmp         eax,dword ptr [ebp-10]
>005AFF32    jle         005AFF40
 005AFF34    mov         eax,dword ptr [ebp+8]
 005AFF37    mov         eax,dword ptr [eax-20]
 005AFF3A    mov         eax,dword ptr [eax+54]
 005AFF3D    mov         dword ptr [ebp-10],eax
 005AFF40    mov         eax,dword ptr [ebp+8]
 005AFF43    cmp         byte ptr [eax-21],0
>005AFF47    je          005AFFA7
 005AFF49    mov         eax,dword ptr [ebp+8]
 005AFF4C    cmp         dword ptr [eax-20],0
>005AFF50    je          005AFF5A
 005AFF52    mov         eax,dword ptr [esi]
 005AFF54    cmp         dword ptr [eax+4C],0FFFFFFFF
>005AFF58    jne         005AFF62
 005AFF5A    mov         eax,dword ptr [esi]
 005AFF5C    cmp         dword ptr [eax+58],0
>005AFF60    je          005AFF6D
 005AFF62    mov         eax,dword ptr [ebp+8]
 005AFF65    mov         eax,dword ptr [eax-14]
 005AFF68    mov         edx,dword ptr [ebp-10]
 005AFF6B    add         dword ptr [eax],edx
 005AFF6D    push        1
 005AFF6F    lea         eax,[ebp-8]
 005AFF72    push        eax
 005AFF73    lea         ecx,[ebp-2C]
 005AFF76    mov         dl,0C
 005AFF78    mov         eax,ebx
 005AFF7A    mov         edi,dword ptr [eax]
 005AFF7C    call        dword ptr [edi+0A4];TCustomStyleServices.GetElementDetails
 005AFF82    lea         eax,[ebp-2C]
 005AFF85    push        eax
 005AFF86    mov         eax,dword ptr [esi]
 005AFF88    call        005AD984
 005AFF8D    mov         edx,eax
 005AFF8F    mov         eax,ebx
 005AFF91    pop         ecx
 005AFF92    call        TCustomStyleServices.GetElementSize
 005AFF97    mov         eax,dword ptr [ebp+8]
 005AFF9A    mov         eax,dword ptr [eax+8]
 005AFF9D    mov         edx,dword ptr [ebp-4]
 005AFFA0    add         dword ptr [eax],edx
>005AFFA2    jmp         005B0174
 005AFFA7    mov         eax,dword ptr [ebp+8]
 005AFFAA    mov         eax,dword ptr [eax+8]
 005AFFAD    mov         edx,dword ptr [ebp-0C]
 005AFFB0    add         dword ptr [eax],edx
 005AFFB2    mov         eax,dword ptr [ebp+8]
 005AFFB5    mov         eax,dword ptr [eax-14]
 005AFFB8    mov         edx,dword ptr [ebp-10]
 005AFFBB    add         dword ptr [eax],edx
 005AFFBD    push        1
 005AFFBF    lea         eax,[ebp-20]
 005AFFC2    push        eax
 005AFFC3    mov         eax,ebx
 005AFFC5    mov         edx,dword ptr [eax]
 005AFFC7    call        dword ptr [edx+4C];TCustomStyleServices.GetEnabled
 005AFFCA    and         eax,7F
 005AFFCD    lea         eax,[eax*2+7A1C84]
 005AFFD4    mov         edx,dword ptr [esi]
 005AFFD6    movzx       edx,byte ptr [edx+49]
 005AFFDA    movzx       edx,byte ptr [eax+edx]
 005AFFDE    lea         ecx,[ebp-2C]
 005AFFE1    mov         eax,ebx
 005AFFE3    mov         edi,dword ptr [eax]
 005AFFE5    call        dword ptr [edi+0A4];TCustomStyleServices.GetElementDetails
 005AFFEB    lea         eax,[ebp-2C]
 005AFFEE    push        eax
 005AFFEF    mov         eax,dword ptr [esi]
 005AFFF1    call        005AD984
 005AFFF6    mov         edx,eax
 005AFFF8    mov         eax,ebx
 005AFFFA    pop         ecx
 005AFFFB    call        TCustomStyleServices.GetElementMargins
 005B0000    mov         eax,dword ptr [ebp-18]
 005B0003    add         eax,dword ptr [ebp-14]
 005B0006    mov         edx,dword ptr [ebp+8]
 005B0009    mov         edx,dword ptr [edx+8]
 005B000C    add         dword ptr [edx],eax
 005B000E    mov         eax,dword ptr [ebp-20]
 005B0011    add         eax,dword ptr [ebp-1C]
 005B0014    mov         edx,dword ptr [ebp+8]
 005B0017    mov         edx,dword ptr [edx-14]
 005B001A    add         dword ptr [edx],eax
 005B001C    push        1
 005B001E    lea         eax,[ebp-8]
 005B0021    push        eax
 005B0022    lea         ecx,[ebp-2C]
 005B0025    mov         dl,1B
 005B0027    mov         eax,ebx
 005B0029    mov         edi,dword ptr [eax]
 005B002B    call        dword ptr [edi+0A4];TCustomStyleServices.GetElementDetails
 005B0031    lea         eax,[ebp-2C]
 005B0034    push        eax
 005B0035    mov         eax,dword ptr [esi]
 005B0037    call        005AD984
 005B003C    mov         edx,eax
 005B003E    mov         eax,ebx
 005B0040    pop         ecx
 005B0041    call        TCustomStyleServices.GetElementSize
 005B0046    mov         eax,dword ptr [ebp+8]
 005B0049    mov         eax,dword ptr [eax-14]
 005B004C    mov         edx,dword ptr [ebp-8]
 005B004F    add         dword ptr [eax],edx
 005B0051    push        0
 005B0053    lea         eax,[ebp-20]
 005B0056    push        eax
 005B0057    lea         ecx,[ebp-2C]
 005B005A    mov         dl,1B
 005B005C    mov         eax,ebx
 005B005E    mov         edi,dword ptr [eax]
 005B0060    call        dword ptr [edi+0A4];TCustomStyleServices.GetElementDetails
 005B0066    lea         eax,[ebp-2C]
 005B0069    push        eax
 005B006A    mov         eax,dword ptr [esi]
 005B006C    call        005AD984
 005B0071    mov         edx,eax
 005B0073    mov         eax,ebx
 005B0075    pop         ecx
 005B0076    call        TCustomStyleServices.GetElementMargins
 005B007B    mov         eax,dword ptr [ebp-20]
 005B007E    add         eax,dword ptr [ebp-1C]
 005B0081    mov         edx,dword ptr [ebp+8]
 005B0084    mov         edx,dword ptr [edx-14]
 005B0087    add         dword ptr [edx],eax
 005B0089    push        0
 005B008B    lea         eax,[ebp-20]
 005B008E    push        eax
 005B008F    lea         ecx,[ebp-2C]
 005B0092    mov         dl,1C
 005B0094    mov         eax,ebx
 005B0096    mov         edi,dword ptr [eax]
 005B0098    call        dword ptr [edi+0A4];TCustomStyleServices.GetElementDetails
 005B009E    lea         eax,[ebp-2C]
 005B00A1    push        eax
 005B00A2    mov         eax,dword ptr [esi]
 005B00A4    call        005AD984
 005B00A9    mov         edx,eax
 005B00AB    mov         eax,ebx
 005B00AD    pop         ecx
 005B00AE    call        TCustomStyleServices.GetElementMargins
 005B00B3    mov         eax,dword ptr [ebp-20]
 005B00B6    add         eax,dword ptr [ebp-1C]
 005B00B9    mov         edx,dword ptr [ebp+8]
 005B00BC    mov         edx,dword ptr [edx-14]
 005B00BF    add         dword ptr [edx],eax
 005B00C1    push        1
 005B00C3    lea         eax,[ebp-8]
 005B00C6    push        eax
 005B00C7    lea         ecx,[ebp-2C]
 005B00CA    mov         dl,21
 005B00CC    mov         eax,ebx
 005B00CE    mov         edi,dword ptr [eax]
 005B00D0    call        dword ptr [edi+0A4];TCustomStyleServices.GetElementDetails
 005B00D6    lea         eax,[ebp-2C]
 005B00D9    push        eax
 005B00DA    mov         eax,dword ptr [esi]
 005B00DC    call        005AD984
 005B00E1    mov         edx,eax
 005B00E3    mov         eax,ebx
 005B00E5    pop         ecx
 005B00E6    call        TCustomStyleServices.GetElementSize
 005B00EB    mov         eax,dword ptr [ebp+8]
 005B00EE    mov         eax,dword ptr [eax-14]
 005B00F1    mov         edx,dword ptr [ebp-8]
 005B00F4    add         dword ptr [eax],edx
 005B00F6    mov         eax,dword ptr [esi]
 005B00F8    mov         eax,dword ptr [eax+40]
 005B00FB    mov         edx,5B02BC;'-'
 005B0100    call        @UStrEqual
>005B0105    jne         005B0174
 005B0107    push        1
 005B0109    lea         eax,[ebp-8]
 005B010C    push        eax
 005B010D    lea         ecx,[ebp-2C]
 005B0110    mov         dl,20
 005B0112    mov         eax,ebx
 005B0114    mov         edi,dword ptr [eax]
 005B0116    call        dword ptr [edi+0A4];TCustomStyleServices.GetElementDetails
 005B011C    lea         eax,[ebp-2C]
 005B011F    push        eax
 005B0120    mov         eax,dword ptr [esi]
 005B0122    call        005AD984
 005B0127    mov         edx,eax
 005B0129    mov         eax,ebx
 005B012B    pop         ecx
 005B012C    call        TCustomStyleServices.GetElementSize
 005B0131    push        0
 005B0133    lea         eax,[ebp-20]
 005B0136    push        eax
 005B0137    lea         ecx,[ebp-2C]
 005B013A    mov         dl,20
 005B013C    mov         eax,ebx
 005B013E    mov         edi,dword ptr [eax]
 005B0140    call        dword ptr [edi+0A4];TCustomStyleServices.GetElementDetails
 005B0146    lea         eax,[ebp-2C]
 005B0149    push        eax
 005B014A    mov         eax,dword ptr [esi]
 005B014C    call        005AD984
 005B0151    mov         edx,eax
 005B0153    mov         eax,ebx
 005B0155    pop         ecx
 005B0156    call        TCustomStyleServices.GetElementMargins
 005B015B    mov         eax,dword ptr [ebp-4]
 005B015E    add         eax,dword ptr [ebp-14]
 005B0161    mov         edx,dword ptr [ebp+8]
 005B0164    mov         edx,dword ptr [edx+8]
 005B0167    mov         dword ptr [edx],eax
 005B0169    mov         eax,dword ptr [ebp+8]
 005B016C    mov         eax,dword ptr [eax-14]
 005B016F    mov         edx,dword ptr [ebp-8]
 005B0172    add         dword ptr [eax],edx
 005B0174    push        0
 005B0176    lea         eax,[ebp-3C]
 005B0179    push        eax
 005B017A    xor         ecx,ecx
 005B017C    xor         edx,edx
 005B017E    xor         eax,eax
 005B0180    call        Rect
 005B0185    mov         eax,dword ptr [ebp+8]
 005B0188    push        esi
 005B0189    lea         esi,[ebp-3C]
 005B018C    lea         edi,[eax-10]
 005B018F    movs        dword ptr [edi],dword ptr [esi]
 005B0190    movs        dword ptr [edi],dword ptr [esi]
 005B0191    movs        dword ptr [edi],dword ptr [esi]
 005B0192    movs        dword ptr [edi],dword ptr [esi]
 005B0193    pop         esi
 005B0194    mov         eax,dword ptr [ebp+8]
 005B0197    cmp         dword ptr [eax-28],0
>005B019B    je          005B01A6
 005B019D    mov         eax,dword ptr [ebp+8]
 005B01A0    mov         byte ptr [eax-29],0
>005B01A4    jmp         005B01D4
 005B01A6    mov         eax,dword ptr [ebp+8]
 005B01A9    mov         eax,dword ptr [eax-28]
 005B01AC    mov         edx,dword ptr ds:[5AC178];TPopupMenu
 005B01B2    call        @IsClass
 005B01B7    test        al,al
>005B01B9    je          005B01CD
 005B01BB    mov         eax,dword ptr [ebp+8]
 005B01BE    mov         eax,dword ptr [eax-28]
 005B01C1    movzx       eax,byte ptr [eax+70]
 005B01C5    mov         edx,dword ptr [ebp+8]
 005B01C8    mov         byte ptr [edx-29],al
>005B01CB    jmp         005B01D4
 005B01CD    mov         eax,dword ptr [ebp+8]
 005B01D0    mov         byte ptr [eax-29],0
 005B01D4    mov         eax,dword ptr [esi]
 005B01D6    movzx       ebx,word ptr [eax+6C]
 005B01DA    test        bx,bx
>005B01DD    je          005B01FE
 005B01DF    lea         edx,[ebp-40]
 005B01E2    mov         eax,ebx
 005B01E4    call        ShortCutToText
 005B01E9    mov         ecx,dword ptr [ebp-40]
 005B01EC    mov         eax,dword ptr [esi]
 005B01EE    mov         edx,dword ptr [eax+40]
 005B01F1    mov         eax,dword ptr [ebp+8]
 005B01F4    add         eax,0FFFFFFD0
 005B01F7    call        @UStrCat3
>005B01FC    jmp         005B020E
 005B01FE    mov         eax,dword ptr [ebp+8]
 005B0201    add         eax,0FFFFFFD0
 005B0204    mov         edx,dword ptr [esi]
 005B0206    mov         edx,dword ptr [edx+40]
 005B0209    call        @UStrLAsg
 005B020E    push        esi
 005B020F    mov         esi,5B02C0
 005B0214    lea         edi,[ebp-64]
 005B0217    movs        word ptr [edi],word ptr [esi]
 005B0219    movs        byte ptr [edi],byte ptr [esi]
 005B021A    pop         esi
 005B021B    mov         eax,dword ptr [ebp+8]
 005B021E    movzx       eax,byte ptr [eax-29]
 005B0222    movzx       eax,byte ptr [eax+7A1C88]
 005B0229    cmp         al,17
>005B022B    ja          005B0245
 005B022D    and         eax,7F
 005B0230    lea         edx,[ebp-64]
 005B0233    mov         ecx,edx
 005B0235    and         ecx,3
 005B0238    sub         edx,ecx
 005B023A    add         ecx,ecx
 005B023C    add         ecx,ecx
 005B023E    add         ecx,ecx
 005B0240    add         eax,ecx
 005B0242    bts         dword ptr [edx],eax
 005B0245    lea         eax,[ebp-64]
 005B0248    lea         edx,[ebp-60]
 005B024B    mov         ecx,300
 005B0250    call        @SetExpand
 005B0255    mov         ebx,dword ptr [ebp-60]
 005B0258    mov         eax,dword ptr [ebp+8]
 005B025B    add         eax,0FFFFFFF0
 005B025E    push        eax
 005B025F    push        0
 005B0261    push        ebx
 005B0262    mov         eax,dword ptr [ebp+8]
 005B0265    mov         ecx,dword ptr [eax-30]
 005B0268    mov         eax,dword ptr [ebp+8]
 005B026B    mov         edx,dword ptr [eax-34]
 005B026E    mov         eax,dword ptr [esi]
 005B0270    call        005ADCA8
 005B0275    mov         eax,dword ptr [ebp+8]
 005B0278    mov         eax,dword ptr [eax-8]
 005B027B    mov         edx,dword ptr [ebp+8]
 005B027E    sub         eax,dword ptr [edx-10]
 005B0281    mov         edx,dword ptr [ebp+8]
 005B0284    mov         edx,dword ptr [edx-14]
 005B0287    add         dword ptr [edx],eax
 005B0289    xor         eax,eax
 005B028B    pop         edx
 005B028C    pop         ecx
 005B028D    pop         ecx
 005B028E    mov         dword ptr fs:[eax],edx
 005B0291    push        5B02A6
 005B0296    lea         eax,[ebp-40]
 005B0299    call        @UStrClr
 005B029E    ret
>005B029F    jmp         @HandleFinally
>005B02A4    jmp         005B0296
 005B02A6    pop         edi
 005B02A7    pop         esi
 005B02A8    pop         ebx
 005B02A9    mov         esp,ebp
 005B02AB    pop         ebp
 005B02AC    ret
end;*}

//005B02C4
{*procedure sub_005B02C4(?:?; ?:?; ?:?);
begin
 005B02C4    push        ebp
 005B02C5    mov         ebp,esp
 005B02C7    add         esp,0FFFFFFC8
 005B02CA    push        ebx
 005B02CB    push        esi
 005B02CC    xor         ebx,ebx
 005B02CE    mov         dword ptr [ebp-38],ebx
 005B02D1    mov         dword ptr [ebp-30],ebx
 005B02D4    mov         dword ptr [ebp-14],ecx
 005B02D7    mov         dword ptr [ebp-34],edx
 005B02DA    mov         dword ptr [ebp-18],eax
 005B02DD    xor         eax,eax
 005B02DF    push        ebp
 005B02E0    push        5B0545
 005B02E5    push        dword ptr fs:[eax]
 005B02E8    mov         dword ptr fs:[eax],esp
 005B02EB    mov         eax,dword ptr [ebp-18]
 005B02EE    mov         si,0FFF1
 005B02F2    call        @CallDynaInst;TMenuItem.sub_0049ECBC
 005B02F7    mov         edx,dword ptr ds:[5ABC3C];TMainMenu
 005B02FD    call        @IsClass
 005B0302    test        al,al
>005B0304    je          005B0313
 005B0306    mov         byte ptr [ebp-21],1
 005B030A    push        ebp
 005B030B    call        GetMenuSize
 005B0310    pop         ecx
>005B0311    jmp         005B0317
 005B0313    mov         byte ptr [ebp-21],0
 005B0317    mov         eax,dword ptr [ebp-18]
 005B031A    call        TMenuItem.GetImageList
 005B031F    mov         dword ptr [ebp-20],eax
 005B0322    mov         eax,dword ptr [ebp-18]
 005B0325    call        TMenuItem.GetParentMenu
 005B032A    mov         dword ptr [ebp-28],eax
 005B032D    mov         eax,dword ptr [ebp-18]
 005B0330    call        005B1B00
 005B0335    mov         dword ptr [ebp-1C],eax
 005B0338    xor         edx,edx
 005B033A    mov         eax,6
 005B033F    call        CheckWin32Version
 005B0344    test        al,al
>005B0346    je          005B0364
 005B0348    call        TStyleManager.GetSystemStyle
 005B034D    mov         dl,0A
 005B034F    mov         ecx,dword ptr [eax]
 005B0351    call        dword ptr [ecx+54];TCustomStyleServices.GetTheme
 005B0354    test        eax,eax
>005B0356    je          005B0364
 005B0358    push        ebp
 005B0359    call        005AFE50
 005B035E    pop         ecx
>005B035F    jmp         005B04FD
 005B0364    mov         eax,dword ptr [ebp-18]
 005B0367    mov         eax,dword ptr [eax+40];TMenuItem.FCaption:string
 005B036A    mov         edx,5B0560;'-'
 005B036F    call        @UStrEqual
>005B0374    jne         005B038C
 005B0376    mov         eax,dword ptr [ebp+8]
 005B0379    mov         dword ptr [eax],5
 005B037F    mov         eax,dword ptr [ebp-14]
 005B0382    mov         dword ptr [eax],0FFFFFFFE
 005B0388    xor         eax,eax
>005B038A    jmp         005B03FD
 005B038C    cmp         dword ptr [ebp-20],0
>005B0390    je          005B03C1
 005B0392    mov         eax,dword ptr [ebp-18]
 005B0395    cmp         dword ptr [eax+4C],0FFFFFFFF;TMenuItem.FImageIndex:TImageIndex
>005B0399    jg          005B03A1
 005B039B    cmp         byte ptr [ebp-21],0
>005B039F    jne         005B03C1
 005B03A1    mov         eax,dword ptr [ebp-20]
 005B03A4    mov         eax,dword ptr [eax+54];TCustomImageList.FWidth:Integer
 005B03A7    mov         edx,dword ptr [ebp-14]
 005B03AA    mov         dword ptr [edx],eax
 005B03AC    cmp         byte ptr [ebp-21],0
>005B03B0    jne         005B03BD
 005B03B2    mov         eax,dword ptr [ebp-20]
 005B03B5    mov         eax,dword ptr [eax+50];TCustomImageList.FHeight:Integer
 005B03B8    mov         edx,dword ptr [ebp+8]
 005B03BB    mov         dword ptr [edx],eax
 005B03BD    mov         al,1
>005B03BF    jmp         005B03FD
 005B03C1    mov         eax,dword ptr [ebp-18]
 005B03C4    mov         ebx,dword ptr [eax+58];TMenuItem.FBitmap:TBitmap
 005B03C7    test        ebx,ebx
>005B03C9    je          005B03F2
 005B03CB    mov         eax,ebx
 005B03CD    mov         edx,dword ptr [eax]
 005B03CF    call        dword ptr [edx+20];TBitmap.GetEmpty
 005B03D2    test        al,al
>005B03D4    jne         005B03F2
 005B03D6    mov         eax,dword ptr [ebp-14]
 005B03D9    mov         dword ptr [eax],10
 005B03DF    cmp         byte ptr [ebp-21],0
>005B03E3    jne         005B03EE
 005B03E5    mov         eax,dword ptr [ebp+8]
 005B03E8    mov         dword ptr [eax],10
 005B03EE    mov         al,1
>005B03F0    jmp         005B03FD
 005B03F2    mov         eax,dword ptr [ebp-14]
 005B03F5    mov         dword ptr [eax],0FFFFFFF9
 005B03FB    xor         eax,eax
 005B03FD    test        al,al
>005B03FF    je          005B040D
 005B0401    cmp         byte ptr [ebp-21],0
>005B0405    jne         005B040D
 005B0407    mov         eax,dword ptr [ebp-14]
 005B040A    add         dword ptr [eax],0F
 005B040D    cmp         byte ptr [ebp-21],0
>005B0411    jne         005B0419
 005B0413    mov         eax,dword ptr [ebp+8]
 005B0416    add         dword ptr [eax],3
 005B0419    push        0
 005B041B    lea         eax,[ebp-10]
 005B041E    push        eax
 005B041F    xor         ecx,ecx
 005B0421    xor         edx,edx
 005B0423    xor         eax,eax
 005B0425    call        Rect
 005B042A    cmp         dword ptr [ebp-28],0
>005B042E    je          005B0436
 005B0430    mov         byte ptr [ebp-29],0
>005B0434    jmp         005B0458
 005B0436    mov         eax,dword ptr [ebp-28]
 005B0439    mov         edx,dword ptr ds:[5AC178];TPopupMenu
 005B043F    call        @IsClass
 005B0444    test        al,al
>005B0446    je          005B0454
 005B0448    mov         eax,dword ptr [ebp-28]
 005B044B    movzx       eax,byte ptr [eax+70]
 005B044F    mov         byte ptr [ebp-29],al
>005B0452    jmp         005B0458
 005B0454    mov         byte ptr [ebp-29],0
 005B0458    mov         eax,dword ptr [ebp-18]
 005B045B    movzx       ebx,word ptr [eax+6C];TMenuItem.FShortCut:TShortCut
 005B045F    test        bx,bx
>005B0462    je          005B0481
 005B0464    lea         edx,[ebp-38]
 005B0467    mov         eax,ebx
 005B0469    call        ShortCutToText
 005B046E    mov         ecx,dword ptr [ebp-38]
 005B0471    mov         eax,dword ptr [ebp-18]
 005B0474    mov         edx,dword ptr [eax+40];TMenuItem.FCaption:string
 005B0477    lea         eax,[ebp-30]
 005B047A    call        @UStrCat3
>005B047F    jmp         005B048F
 005B0481    lea         eax,[ebp-30]
 005B0484    mov         edx,dword ptr [ebp-18]
 005B0487    mov         edx,dword ptr [edx+40];TMenuItem.FCaption:string
 005B048A    call        @UStrLAsg
 005B048F    movzx       eax,byte ptr [ebp-29]
 005B0493    movzx       eax,word ptr [eax*2+7A1C7E]
 005B049B    or          ax,40
 005B049F    or          ax,20
 005B04A3    or          ax,100
 005B04A7    or          ax,400
 005B04AB    movzx       eax,ax
 005B04AE    lea         edx,[ebp-10]
 005B04B1    push        edx
 005B04B2    push        0
 005B04B4    push        eax
 005B04B5    mov         ecx,dword ptr [ebp-30]
 005B04B8    mov         edx,dword ptr [ebp-34]
 005B04BB    mov         eax,dword ptr [ebp-18]
 005B04BE    call        005ADA30
 005B04C3    mov         eax,dword ptr [ebp-8]
 005B04C6    sub         eax,dword ptr [ebp-10]
 005B04C9    add         eax,7
 005B04CC    mov         edx,dword ptr [ebp-14]
 005B04CF    add         dword ptr [edx],eax
 005B04D1    push        60
 005B04D3    mov         eax,dword ptr [ebp-1C]
 005B04D6    push        eax
 005B04D7    mov         eax,dword ptr [ebp+8]
 005B04DA    mov         eax,dword ptr [eax]
 005B04DC    push        eax
 005B04DD    call        kernel32.MulDiv
 005B04E2    mov         edx,dword ptr [ebp+8]
 005B04E5    mov         dword ptr [edx],eax
 005B04E7    push        60
 005B04E9    mov         eax,dword ptr [ebp-1C]
 005B04EC    push        eax
 005B04ED    mov         eax,dword ptr [ebp-14]
 005B04F0    mov         eax,dword ptr [eax]
 005B04F2    push        eax
 005B04F3    call        kernel32.MulDiv
 005B04F8    mov         edx,dword ptr [ebp-14]
 005B04FB    mov         dword ptr [edx],eax
 005B04FD    mov         eax,dword ptr [ebp-18]
 005B0500    cmp         word ptr [eax+0B2],0;TMenuItem.?fB2:word
>005B0508    je          005B0527
 005B050A    mov         eax,dword ptr [ebp-14]
 005B050D    push        eax
 005B050E    mov         eax,dword ptr [ebp+8]
 005B0511    push        eax
 005B0512    mov         ebx,dword ptr [ebp-18]
 005B0515    mov         ecx,dword ptr [ebp-34]
 005B0518    mov         edx,dword ptr [ebp-18]
 005B051B    mov         eax,dword ptr [ebx+0B4];TMenuItem.FHandle:HMENU
 005B0521    call        dword ptr [ebx+0B0];TMenuItem.FOnMeasureItem
 005B0527    xor         eax,eax
 005B0529    pop         edx
 005B052A    pop         ecx
 005B052B    pop         ecx
 005B052C    mov         dword ptr fs:[eax],edx
 005B052F    push        5B054C
 005B0534    lea         eax,[ebp-38]
 005B0537    call        @UStrClr
 005B053C    lea         eax,[ebp-30]
 005B053F    call        @UStrClr
 005B0544    ret
>005B0545    jmp         @HandleFinally
>005B054A    jmp         005B0534
 005B054C    pop         esi
 005B054D    pop         ebx
 005B054E    mov         esp,ebp
 005B0550    pop         ebp
 005B0551    ret         4
end;*}

//005B0564
procedure TMenuItem.HasParent;
begin
{*
 005B0564    mov         al,1
 005B0566    ret
*}
end;

//005B0568
procedure TMenuItem.SetBreak(Value:TMenuBreak);
begin
{*
 005B0568    push        esi
 005B0569    mov         esi,eax
 005B056B    cmp         dl,byte ptr [esi+54];TMenuItem.FBreak:TMenuBreak
>005B056E    je          005B057C
 005B0570    mov         byte ptr [esi+54],dl;TMenuItem.FBreak:TMenuBreak
 005B0573    mov         dl,1
 005B0575    mov         eax,esi
 005B0577    mov         ecx,dword ptr [eax]
 005B0579    call        dword ptr [ecx+50];TMenuItem.sub_005B0B00
 005B057C    pop         esi
 005B057D    ret
*}
end;

//005B0580
procedure TMenuItem.SetCaption(const Value:UnicodeString);
begin
{*
 005B0580    push        ebx
 005B0581    push        esi
 005B0582    mov         ebx,edx
 005B0584    mov         esi,eax
 005B0586    mov         eax,dword ptr [esi+40]
 005B0589    mov         edx,ebx
 005B058B    call        @UStrEqual
>005B0590    je          005B05A5
 005B0592    lea         eax,[esi+40]
 005B0595    mov         edx,ebx
 005B0597    call        @UStrAsg
 005B059C    mov         dl,1
 005B059E    mov         eax,esi
 005B05A0    mov         ecx,dword ptr [eax]
 005B05A2    call        dword ptr [ecx+50]
 005B05A5    pop         esi
 005B05A6    pop         ebx
 005B05A7    ret
*}
end;

//005B05A8
procedure sub_005B05A8(?:TMenuItem);
begin
{*
 005B05A8    push        ebx
 005B05A9    push        esi
 005B05AA    push        edi
 005B05AB    mov         ebx,eax
 005B05AD    mov         esi,dword ptr [ebx+70]
 005B05B0    test        esi,esi
>005B05B2    je          005B05ED
 005B05B4    mov         eax,esi
 005B05B6    call        TMenuItem.GetCount
 005B05BB    dec         eax
 005B05BC    test        eax,eax
>005B05BE    jl          005B05ED
 005B05C0    inc         eax
 005B05C1    mov         esi,eax
 005B05C3    xor         edi,edi
 005B05C5    mov         edx,edi
 005B05C7    mov         eax,dword ptr [ebx+70]
 005B05CA    call        TMenuItem.GetItem
 005B05CF    cmp         ebx,eax
>005B05D1    je          005B05E9
 005B05D3    cmp         byte ptr [eax+49],0;TMenuItem.FRadioItem:Boolean
>005B05D7    je          005B05E9
 005B05D9    movzx       edx,byte ptr [eax+4B];TMenuItem.FGroupIndex:byte
 005B05DD    cmp         dl,byte ptr [ebx+4B]
>005B05E0    jne         005B05E9
 005B05E2    xor         edx,edx
 005B05E4    call        TMenuItem.SetChecked
 005B05E9    inc         edi
 005B05EA    dec         esi
>005B05EB    jne         005B05C5
 005B05ED    pop         edi
 005B05EE    pop         esi
 005B05EF    pop         ebx
 005B05F0    ret
*}
end;

//005B05F4
procedure TMenuItem.SetChecked(Value:Boolean);
begin
{*
 005B05F4    push        ebx
 005B05F5    push        esi
 005B05F6    push        edi
 005B05F7    mov         ebx,edx
 005B05F9    mov         esi,eax
 005B05FB    cmp         bl,byte ptr [esi+44]
>005B05FE    je          005B0641
 005B0600    mov         byte ptr [esi+44],bl
 005B0603    mov         edi,dword ptr [esi+70]
 005B0606    test        edi,edi
>005B0608    je          005B0630
 005B060A    test        byte ptr [esi+1C],2
>005B060E    jne         005B0630
 005B0610    movzx       eax,bl
 005B0613    mov         eax,dword ptr [eax*4+7A1BE8]
 005B061A    or          eax,0
 005B061D    push        eax
 005B061E    movzx       eax,word ptr [esi+5C]
 005B0622    push        eax
 005B0623    mov         eax,edi
 005B0625    call        005AD984
 005B062A    push        eax
 005B062B    call        user32.CheckMenuItem
 005B0630    test        bl,bl
>005B0632    je          005B0641
 005B0634    cmp         byte ptr [esi+49],0
>005B0638    je          005B0641
 005B063A    mov         eax,esi
 005B063C    call        005B05A8
 005B0641    pop         edi
 005B0642    pop         esi
 005B0643    pop         ebx
 005B0644    ret
*}
end;

//005B0648
procedure TMenuItem.SetEnabled(Value:Boolean);
begin
{*
 005B0648    push        ebx
 005B0649    push        esi
 005B064A    push        edi
 005B064B    mov         ebx,edx
 005B064D    mov         esi,eax
 005B064F    cmp         bl,byte ptr [esi+45]
>005B0652    je          005B06BA
 005B0654    mov         byte ptr [esi+45],bl
 005B0657    mov         eax,[007C4EC4];^gvar_0079EDDC
 005B065C    cmp         dword ptr [eax],2
>005B065F    jne         005B066C
 005B0661    mov         eax,esi
 005B0663    call        TMenuItem.GetCount
 005B0668    test        eax,eax
>005B066A    jne         005B0679
 005B066C    mov         edi,dword ptr [esi+70]
 005B066F    test        edi,edi
>005B0671    je          005B0684
 005B0673    cmp         dword ptr [edi+78],0
>005B0677    je          005B0684
 005B0679    mov         dl,1
 005B067B    mov         eax,esi
 005B067D    mov         ecx,dword ptr [eax]
 005B067F    call        dword ptr [ecx+50]
>005B0682    jmp         005B06BA
 005B0684    mov         edi,dword ptr [esi+70]
 005B0687    test        edi,edi
>005B0689    je          005B06B1
 005B068B    test        byte ptr [esi+1C],2
>005B068F    jne         005B06B1
 005B0691    movzx       eax,bl
 005B0694    mov         eax,dword ptr [eax*4+7A1BF0]
 005B069B    or          eax,0
 005B069E    push        eax
 005B069F    movzx       eax,word ptr [esi+5C]
 005B06A3    push        eax
 005B06A4    mov         eax,edi
 005B06A6    call        005AD984
 005B06AB    push        eax
 005B06AC    call        user32.EnableMenuItem
 005B06B1    xor         edx,edx
 005B06B3    mov         eax,esi
 005B06B5    mov         ecx,dword ptr [eax]
 005B06B7    call        dword ptr [ecx+50]
 005B06BA    pop         edi
 005B06BB    pop         esi
 005B06BC    pop         ebx
 005B06BD    ret
*}
end;

//005B06C0
procedure TMenuItem.SetGroupIndex(Value:Byte);
begin
{*
 005B06C0    push        ebx
 005B06C1    push        esi
 005B06C2    push        edi
 005B06C3    mov         ebx,edx
 005B06C5    mov         esi,eax
 005B06C7    cmp         bl,byte ptr [esi+4B];TMenuItem.FGroupIndex:byte
>005B06CA    je          005B06FD
 005B06CC    mov         edi,dword ptr [esi+70];TMenuItem.FParent:TMenuItem
 005B06CF    test        edi,edi
>005B06D1    je          005B06E7
 005B06D3    mov         edx,esi
 005B06D5    mov         eax,edi
 005B06D7    call        TMenuItem.IndexOf
 005B06DC    mov         edx,eax
 005B06DE    mov         ecx,ebx
 005B06E0    mov         eax,edi
 005B06E2    call        005AD924
 005B06E7    mov         byte ptr [esi+4B],bl;TMenuItem.FGroupIndex:byte
 005B06EA    cmp         byte ptr [esi+44],0;TMenuItem.FChecked:Boolean
>005B06EE    je          005B06FD
 005B06F0    cmp         byte ptr [esi+49],0;TMenuItem.FRadioItem:Boolean
>005B06F4    je          005B06FD
 005B06F6    mov         eax,esi
 005B06F8    call        005B05A8
 005B06FD    pop         edi
 005B06FE    pop         esi
 005B06FF    pop         ebx
 005B0700    ret
*}
end;

//005B0704
{*function TMenuItem.GetAction:?;
begin
 005B0704    mov         edx,dword ptr [eax+50];TMenuItem.FActionLink:TMenuActionLink
 005B0707    test        edx,edx
>005B0709    je          005B070F
 005B070B    mov         eax,dword ptr [edx+10];TMenuActionLink.FAction:TBasicAction
 005B070E    ret
 005B070F    xor         eax,eax
 005B0711    ret
end;*}

//005B0714
procedure TMenuItem.sub_005B0714;
begin
{*
 005B0714    mov         eax,[005AA378];TMenuActionLink
 005B0719    ret
*}
end;

//005B071C
function TMenuItem.GetCount:Integer;
begin
{*
 005B071C    mov         edx,dword ptr [eax+68]
 005B071F    test        edx,edx
>005B0721    jne         005B0726
 005B0723    xor         eax,eax
 005B0725    ret
 005B0726    mov         eax,dword ptr [edx+8]
 005B0729    ret
*}
end;

//005B072C
function TMenuItem.GetItem(Index:Integer):TMenuItem;
begin
{*
 005B072C    push        ebx
 005B072D    push        esi
 005B072E    mov         esi,edx
 005B0730    mov         ebx,eax
 005B0732    cmp         dword ptr [ebx+68],0
>005B0736    jne         005B0742
 005B0738    mov         eax,[007C4698];^SResString238:TResStringRec
 005B073D    call        Error
 005B0742    mov         edx,esi
 005B0744    mov         eax,dword ptr [ebx+68]
 005B0747    call        TList.Get
 005B074C    pop         esi
 005B074D    pop         ebx
 005B074E    ret
*}
end;

//005B0750
procedure TMenuItem.SetShortCut(Value:Classes.TShortCut);
begin
{*
 005B0750    push        esi
 005B0751    mov         esi,eax
 005B0753    cmp         dx,word ptr [esi+6C]
>005B0757    je          005B0766
 005B0759    mov         word ptr [esi+6C],dx
 005B075D    mov         dl,1
 005B075F    mov         eax,esi
 005B0761    mov         ecx,dword ptr [eax]
 005B0763    call        dword ptr [ecx+50]
 005B0766    pop         esi
 005B0767    ret
*}
end;

//005B0768
procedure TMenuItem.SetVisible(Value:Boolean);
begin
{*
 005B0768    push        esi
 005B0769    mov         esi,eax
 005B076B    cmp         dl,byte ptr [esi+4A]
>005B076E    je          005B077C
 005B0770    mov         byte ptr [esi+4A],dl
 005B0773    mov         dl,1
 005B0775    mov         eax,esi
 005B0777    mov         ecx,dword ptr [eax]
 005B0779    call        dword ptr [ecx+50]
 005B077C    pop         esi
 005B077D    ret
*}
end;

//005B0780
procedure TMenuItem.SetImageIndex(Value:ImgList.TImageIndex);
begin
{*
 005B0780    push        esi
 005B0781    mov         esi,eax
 005B0783    cmp         edx,dword ptr [esi+4C]
>005B0786    je          005B0794
 005B0788    mov         dword ptr [esi+4C],edx
 005B078B    mov         dl,1
 005B078D    mov         eax,esi
 005B078F    mov         ecx,dword ptr [eax]
 005B0791    call        dword ptr [ecx+50]
 005B0794    pop         esi
 005B0795    ret
*}
end;

//005B0798
{*function sub_005B0798(?:?; ?:?):?;
begin
 005B0798    or          edx,0FFFFFFFF
 005B079B    mov         ecx,dword ptr [eax+70]
 005B079E    test        ecx,ecx
>005B07A0    je          005B07AD
 005B07A2    mov         edx,eax
 005B07A4    mov         eax,ecx
 005B07A6    call        TMenuItem.IndexOf
 005B07AB    mov         edx,eax
 005B07AD    mov         eax,edx
 005B07AF    ret
end;*}

//005B07B0
procedure TMenuItem.SetMenuIndex(Value:Integer);
begin
{*
 005B07B0    push        ebx
 005B07B1    push        esi
 005B07B2    push        edi
 005B07B3    mov         esi,edx
 005B07B5    mov         ebx,eax
 005B07B7    mov         eax,dword ptr [ebx+70]
 005B07BA    test        eax,eax
>005B07BC    je          005B07F2
 005B07BE    call        TMenuItem.GetCount
 005B07C3    test        esi,esi
>005B07C5    jge         005B07C9
 005B07C7    xor         esi,esi
 005B07C9    cmp         eax,esi
>005B07CB    jg          005B07D0
 005B07CD    mov         esi,eax
 005B07CF    dec         esi
 005B07D0    mov         eax,ebx
 005B07D2    call        005B0798
 005B07D7    cmp         esi,eax
>005B07D9    je          005B07F2
 005B07DB    mov         edi,dword ptr [ebx+70]
 005B07DE    mov         edx,ebx
 005B07E0    mov         eax,edi
 005B07E2    call        TMenuItem.Remove
 005B07E7    mov         ecx,ebx
 005B07E9    mov         edx,esi
 005B07EB    mov         eax,edi
 005B07ED    call        TMenuItem.Insert
 005B07F2    pop         edi
 005B07F3    pop         esi
 005B07F4    pop         ebx
 005B07F5    ret
*}
end;

//005B07F8
procedure TMenuItem.GetChildren(Root:TComponent; Proc:TGetChildProc);
begin
{*
 005B07F8    push        ebp
 005B07F9    mov         ebp,esp
 005B07FB    push        ecx
 005B07FC    push        ebx
 005B07FD    push        esi
 005B07FE    mov         dword ptr [ebp-4],eax
 005B0801    mov         eax,dword ptr [ebp-4]
 005B0804    call        TMenuItem.GetCount
 005B0809    mov         ebx,eax
 005B080B    dec         ebx
 005B080C    test        ebx,ebx
>005B080E    jl          005B0829
 005B0810    inc         ebx
 005B0811    xor         esi,esi
 005B0813    mov         edx,esi
 005B0815    mov         eax,dword ptr [ebp-4]
 005B0818    call        TMenuItem.GetItem
 005B081D    mov         edx,eax
 005B081F    mov         eax,dword ptr [ebp+0C]
 005B0822    call        dword ptr [ebp+8]
 005B0825    inc         esi
 005B0826    dec         ebx
>005B0827    jne         005B0813
 005B0829    pop         esi
 005B082A    pop         ebx
 005B082B    pop         ecx
 005B082C    pop         ebp
 005B082D    ret         8
*}
end;

//005B0830
procedure TMenuItem.SetChildOrder(Child:Classes.TComponent; Order:Integer);
begin
{*
 005B0830    push        ebx
 005B0831    push        esi
 005B0832    mov         esi,ecx
 005B0834    mov         ebx,edx
 005B0836    mov         eax,ebx
 005B0838    mov         edx,dword ptr ds:[5AA664];TMenuItem
 005B083E    call        @AsClass
 005B0843    mov         edx,esi
 005B0845    call        TMenuItem.SetMenuIndex
 005B084A    pop         esi
 005B084B    pop         ebx
 005B084C    ret
*}
end;

//005B0850
procedure TMenuItem.SetDefault(Value:Boolean);
begin
{*
 005B0850    push        ebx
 005B0851    push        esi
 005B0852    push        edi
 005B0853    push        ebp
 005B0854    mov         ebx,edx
 005B0856    mov         esi,eax
 005B0858    cmp         bl,byte ptr [esi+46];TMenuItem.FDefault:Boolean
>005B085B    je          005B08A7
 005B085D    test        bl,bl
>005B085F    je          005B089B
 005B0861    cmp         dword ptr [esi+70],0;TMenuItem.FParent:TMenuItem
>005B0865    je          005B089B
 005B0867    mov         eax,dword ptr [esi+70];TMenuItem.FParent:TMenuItem
 005B086A    call        TMenuItem.GetCount
 005B086F    mov         edi,eax
 005B0871    dec         edi
 005B0872    test        edi,edi
>005B0874    jl          005B089B
 005B0876    inc         edi
 005B0877    xor         ebp,ebp
 005B0879    mov         edx,ebp
 005B087B    mov         eax,dword ptr [esi+70];TMenuItem.FParent:TMenuItem
 005B087E    call        TMenuItem.GetItem
 005B0883    cmp         byte ptr [eax+46],0;TMenuItem.FDefault:Boolean
>005B0887    je          005B0897
 005B0889    mov         edx,ebp
 005B088B    mov         eax,dword ptr [esi+70];TMenuItem.FParent:TMenuItem
 005B088E    call        TMenuItem.GetItem
 005B0893    mov         byte ptr [eax+46],0;TMenuItem.FDefault:Boolean
 005B0897    inc         ebp
 005B0898    dec         edi
>005B0899    jne         005B0879
 005B089B    mov         byte ptr [esi+46],bl;TMenuItem.FDefault:Boolean
 005B089E    mov         dl,1
 005B08A0    mov         eax,esi
 005B08A2    mov         ecx,dword ptr [eax]
 005B08A4    call        dword ptr [ecx+50];TMenuItem.sub_005B0B00
 005B08A7    pop         ebp
 005B08A8    pop         edi
 005B08A9    pop         esi
 005B08AA    pop         ebx
 005B08AB    ret
*}
end;

//005B08AC
procedure TMenuItem.InitiateAction;
begin
{*
 005B08AC    mov         edx,dword ptr [eax+50];TMenuItem.FActionLink:TMenuActionLink
 005B08AF    test        edx,edx
>005B08B1    je          005B08BA
 005B08B3    mov         eax,edx
 005B08B5    mov         edx,dword ptr [eax]
 005B08B7    call        dword ptr [edx+1C];TBasicActionLink.Update
 005B08BA    ret
*}
end;

//005B08BC
procedure TMenuItem.Insert(Index:Integer; Item:TMenuItem);
begin
{*
 005B08BC    push        ebx
 005B08BD    push        esi
 005B08BE    push        edi
 005B08BF    push        ebp
 005B08C0    mov         ebx,ecx
 005B08C2    mov         edi,edx
 005B08C4    mov         esi,eax
 005B08C6    cmp         dword ptr [ebx+70],0
>005B08CA    je          005B08D6
 005B08CC    mov         eax,[007C4EAC];^SResString239:TResStringRec
 005B08D1    call        Error
 005B08D6    cmp         dword ptr [esi+68],0
>005B08DA    jne         005B08EB
 005B08DC    mov         dl,1
 005B08DE    mov         eax,[0046C204];TList
 005B08E3    call        TObject.Create
 005B08E8    mov         dword ptr [esi+68],eax
 005B08EB    mov         ebp,edi
 005B08ED    dec         ebp
 005B08EE    test        ebp,ebp
>005B08F0    jl          005B0922
 005B08F2    mov         eax,dword ptr [esi+68]
 005B08F5    cmp         ebp,dword ptr [eax+8]
>005B08F8    jge         005B0922
 005B08FA    mov         edx,ebp
 005B08FC    mov         eax,dword ptr [esi+68]
 005B08FF    call        TList.Get
 005B0904    movzx       eax,byte ptr [eax+4B]
 005B0908    cmp         al,byte ptr [ebx+4B]
>005B090B    jbe         005B0922
 005B090D    mov         edx,ebp
 005B090F    mov         eax,dword ptr [esi+68]
 005B0912    call        TList.Get
 005B0917    movzx       edx,byte ptr [eax+4B]
 005B091B    mov         eax,ebx
 005B091D    call        TMenuItem.SetGroupIndex
 005B0922    movzx       ecx,byte ptr [ebx+4B]
 005B0926    mov         edx,edi
 005B0928    mov         eax,esi
 005B092A    call        005AD924
 005B092F    mov         ecx,ebx
 005B0931    mov         edx,edi
 005B0933    mov         eax,dword ptr [esi+68]
 005B0936    call        TList.Insert
 005B093B    mov         dword ptr [ebx+70],esi
 005B093E    mov         dword ptr [ebx+94],esi
 005B0944    mov         dword ptr [ebx+90],5B0B44;sub_005B0B44
 005B094E    cmp         dword ptr [esi+0BC],0
>005B0955    je          005B095E
 005B0957    mov         eax,esi
 005B0959    call        005AD84C
 005B095E    mov         eax,esi
 005B0960    call        TMenuItem.GetCount
 005B0965    dec         eax
 005B0966    sete        dl
 005B0969    mov         eax,esi
 005B096B    mov         ecx,dword ptr [eax]
 005B096D    call        dword ptr [ecx+50]
 005B0970    pop         ebp
 005B0971    pop         edi
 005B0972    pop         esi
 005B0973    pop         ebx
 005B0974    ret
*}
end;

//005B0978
procedure TMenuItem.Delete(Index:Integer);
begin
{*
 005B0978    push        ebx
 005B0979    push        esi
 005B097A    push        edi
 005B097B    mov         ebx,edx
 005B097D    mov         esi,eax
 005B097F    test        ebx,ebx
>005B0981    jl          005B0994
 005B0983    cmp         dword ptr [esi+68],0
>005B0987    je          005B0994
 005B0989    mov         eax,esi
 005B098B    call        TMenuItem.GetCount
 005B0990    cmp         ebx,eax
>005B0992    jl          005B099E
 005B0994    mov         eax,[007C4698];^SResString238:TResStringRec
 005B0999    call        Error
 005B099E    mov         edx,ebx
 005B09A0    mov         eax,dword ptr [esi+68]
 005B09A3    call        TList.Get
 005B09A8    mov         edi,eax
 005B09AA    mov         edx,ebx
 005B09AC    mov         eax,dword ptr [esi+68]
 005B09AF    call        TList.Delete
 005B09B4    xor         eax,eax
 005B09B6    mov         dword ptr [edi+70],eax
 005B09B9    xor         eax,eax
 005B09BB    mov         dword ptr [edi+90],eax
 005B09C1    mov         dword ptr [edi+94],eax
 005B09C7    cmp         dword ptr [esi+0BC],0
>005B09CE    je          005B09D7
 005B09D0    mov         eax,esi
 005B09D2    call        005AD84C
 005B09D7    mov         eax,esi
 005B09D9    call        TMenuItem.GetCount
 005B09DE    test        eax,eax
 005B09E0    sete        dl
 005B09E3    mov         eax,esi
 005B09E5    mov         ecx,dword ptr [eax]
 005B09E7    call        dword ptr [ecx+50]
 005B09EA    pop         edi
 005B09EB    pop         esi
 005B09EC    pop         ebx
 005B09ED    ret
*}
end;

//005B09F0
procedure TMenuItem.Click;
begin
{*
 005B09F0    push        ebx
 005B09F1    push        esi
 005B09F2    mov         ebx,eax
 005B09F4    cmp         byte ptr [ebx+45],0;TMenuItem.FEnabled:Boolean
>005B09F8    je          005B0AA0
 005B09FE    cmp         dword ptr [ebx+50],0;TMenuItem.FActionLink:TMenuActionLink
>005B0A02    jne         005B0A0D
 005B0A04    cmp         byte ptr [ebx+0B8],0;TMenuItem.FAutoCheck:Boolean
>005B0A0B    jne         005B0A2B
 005B0A0D    mov         esi,dword ptr [ebx+50];TMenuItem.FActionLink:TMenuActionLink
 005B0A10    test        esi,esi
>005B0A12    je          005B0A39
 005B0A14    mov         eax,esi
 005B0A16    mov         edx,dword ptr [eax]
 005B0A18    call        dword ptr [edx+84];TMenuActionLink.sub_005ACF4C
 005B0A1E    test        al,al
>005B0A20    jne         005B0A39
 005B0A22    cmp         byte ptr [ebx+0B8],0;TMenuItem.FAutoCheck:Boolean
>005B0A29    je          005B0A39
 005B0A2B    movzx       edx,byte ptr [ebx+44];TMenuItem.FChecked:Boolean
 005B0A2F    xor         dl,1
 005B0A32    mov         eax,ebx
 005B0A34    call        TMenuItem.SetChecked
 005B0A39    cmp         word ptr [ebx+9A],0;TMenuItem.?f9A:word
>005B0A41    je          005B0A70
 005B0A43    mov         eax,ebx
 005B0A45    call        TMenuItem.GetAction
 005B0A4A    test        eax,eax
>005B0A4C    je          005B0A70
 005B0A4E    mov         eax,ebx
 005B0A50    call        TMenuItem.GetAction
 005B0A55    mov         eax,dword ptr [eax+50]
 005B0A58    cmp         eax,dword ptr [ebx+98];TMenuItem.FOnClick:TNotifyEvent
>005B0A5E    je          005B0A70
 005B0A60    mov         edx,ebx
 005B0A62    mov         eax,dword ptr [ebx+9C];TMenuItem.?f9C:TPopupMenu
 005B0A68    call        dword ptr [ebx+98];TMenuItem.FOnClick
>005B0A6E    jmp         005B0AA0
 005B0A70    test        byte ptr [ebx+1C],10;TMenuItem.FComponentState:TComponentState
>005B0A74    jne         005B0A88
 005B0A76    cmp         dword ptr [ebx+50],0;TMenuItem.FActionLink:TMenuActionLink
>005B0A7A    je          005B0A88
 005B0A7C    mov         edx,ebx
 005B0A7E    mov         eax,dword ptr [ebx+50];TMenuItem.FActionLink:TMenuActionLink
 005B0A81    mov         ecx,dword ptr [eax]
 005B0A83    call        dword ptr [ecx+18];TBasicActionLink.Execute
>005B0A86    jmp         005B0AA0
 005B0A88    cmp         word ptr [ebx+9A],0;TMenuItem.?f9A:word
>005B0A90    je          005B0AA0
 005B0A92    mov         edx,ebx
 005B0A94    mov         eax,dword ptr [ebx+9C];TMenuItem.?f9C:TPopupMenu
 005B0A9A    call        dword ptr [ebx+98];TMenuItem.FOnClick
 005B0AA0    pop         esi
 005B0AA1    pop         ebx
 005B0AA2    ret
*}
end;

//005B0AA4
function TMenuItem.IndexOf(Item:TMenuItem):Integer;
begin
{*
 005B0AA4    push        esi
 005B0AA5    or          ecx,0FFFFFFFF
 005B0AA8    mov         esi,dword ptr [eax+68]
 005B0AAB    test        esi,esi
>005B0AAD    je          005B0AB8
 005B0AAF    mov         eax,esi
 005B0AB1    call        TList.IndexOf
 005B0AB6    mov         ecx,eax
 005B0AB8    mov         eax,ecx
 005B0ABA    pop         esi
 005B0ABB    ret
*}
end;

//005B0ABC
procedure TMenuItem.Add(Item:TMenuItem);
begin
{*
 005B0ABC    push        ebx
 005B0ABD    push        esi
 005B0ABE    mov         esi,edx
 005B0AC0    mov         ebx,eax
 005B0AC2    mov         eax,ebx
 005B0AC4    call        TMenuItem.GetCount
 005B0AC9    mov         edx,eax
 005B0ACB    mov         ecx,esi
 005B0ACD    mov         eax,ebx
 005B0ACF    call        TMenuItem.Insert
 005B0AD4    pop         esi
 005B0AD5    pop         ebx
 005B0AD6    ret
*}
end;

//005B0AD8
procedure TMenuItem.Remove(Item:TMenuItem);
begin
{*
 005B0AD8    push        ebx
 005B0AD9    push        esi
 005B0ADA    mov         ebx,eax
 005B0ADC    mov         eax,ebx
 005B0ADE    call        TMenuItem.IndexOf
 005B0AE3    mov         esi,eax
 005B0AE5    cmp         esi,0FFFFFFFF
>005B0AE8    jne         005B0AF4
 005B0AEA    mov         eax,[007C4CB4];^SResString240:TResStringRec
 005B0AEF    call        Error
 005B0AF4    mov         edx,esi
 005B0AF6    mov         eax,ebx
 005B0AF8    call        TMenuItem.Delete
 005B0AFD    pop         esi
 005B0AFE    pop         ebx
 005B0AFF    ret
*}
end;

//005B0B00
{*procedure sub_005B0B00(?:?);
begin
 005B0B00    push        ebx
 005B0B01    push        esi
 005B0B02    mov         ebx,edx
 005B0B04    mov         esi,eax
 005B0B06    cmp         dword ptr [esi+70],0;TMenuItem.FParent:TMenuItem
>005B0B0A    jne         005B0B22
 005B0B0C    mov         eax,dword ptr [esi+4];TMenuItem.FOwner:TComponent
 005B0B0F    mov         edx,dword ptr ds:[5AB560];TMenu
 005B0B15    call        @IsClass
 005B0B1A    test        al,al
>005B0B1C    je          005B0B22
 005B0B1E    xor         eax,eax
>005B0B20    jmp         005B0B24
 005B0B22    mov         eax,esi
 005B0B24    cmp         word ptr [esi+92],0;TMenuItem.?f92:word
>005B0B2C    je          005B0B3F
 005B0B2E    push        ebx
 005B0B2F    mov         ecx,eax
 005B0B31    mov         edx,esi
 005B0B33    mov         eax,dword ptr [esi+94];TMenuItem.?f94:TMenu
 005B0B39    call        dword ptr [esi+90];TMenuItem.FOnChange
 005B0B3F    pop         esi
 005B0B40    pop         ebx
 005B0B41    ret
end;*}

//005B0B44
{*procedure sub_005B0B44(?:?; ?:?; ?:?; ?:?);
begin
 005B0B44    push        ebp
 005B0B45    mov         ebp,esp
 005B0B47    push        ebx
 005B0B48    push        esi
 005B0B49    mov         esi,ecx
 005B0B4B    mov         ebx,eax
 005B0B4D    cmp         byte ptr [ebp+8],0
>005B0B51    je          005B0B69
 005B0B53    cmp         dword ptr [ebx+0BC],0
>005B0B5A    jne         005B0B62
 005B0B5C    cmp         dword ptr [ebx+78],0
>005B0B60    je          005B0B69
 005B0B62    mov         eax,ebx
 005B0B64    call        005AD84C
 005B0B69    mov         eax,dword ptr [ebx+70]
 005B0B6C    test        eax,eax
>005B0B6E    je          005B0B7D
 005B0B70    push        0
 005B0B72    mov         ecx,esi
 005B0B74    mov         edx,ebx
 005B0B76    call        005B0B44
>005B0B7B    jmp         005B0B98
 005B0B7D    mov         esi,dword ptr [ebx+4]
 005B0B80    mov         eax,esi
 005B0B82    mov         edx,dword ptr ds:[5ABC3C];TMainMenu
 005B0B88    call        @IsClass
 005B0B8D    test        al,al
>005B0B8F    je          005B0B98
 005B0B91    mov         eax,esi
 005B0B93    call        005B2D88
 005B0B98    pop         esi
 005B0B99    pop         ebx
 005B0B9A    pop         ebp
 005B0B9B    ret         4
end;*}

//005B0BA0
{*function TMenuItem.GetBitmap:?;
begin
 005B0BA0    push        ebx
 005B0BA1    mov         ebx,eax
 005B0BA3    cmp         dword ptr [ebx+58],0;TMenuItem.FBitmap:TBitmap
>005B0BA7    jne         005B0BB8
 005B0BA9    mov         dl,1
 005B0BAB    mov         eax,[004C1D10];TBitmap
 005B0BB0    call        TBitmap.Create;TBitmap.Create
 005B0BB5    mov         dword ptr [ebx+58],eax;TMenuItem.FBitmap:TBitmap
 005B0BB8    mov         dl,1
 005B0BBA    mov         eax,dword ptr [ebx+58];TMenuItem.FBitmap:TBitmap
 005B0BBD    mov         ecx,dword ptr [eax]
 005B0BBF    call        dword ptr [ecx+40];TGraphic.SetTransparent
 005B0BC2    mov         eax,dword ptr [ebx+58];TMenuItem.FBitmap:TBitmap
 005B0BC5    pop         ebx
 005B0BC6    ret
end;*}

//005B0BC8
procedure TMenuItem.SetAction(Value:TBasicAction);
begin
{*
 005B0BC8    push        ebx
 005B0BC9    push        esi
 005B0BCA    push        edi
 005B0BCB    mov         edi,edx
 005B0BCD    mov         ebx,eax
 005B0BCF    test        edi,edi
>005B0BD1    jne         005B0BE2
 005B0BD3    mov         eax,dword ptr [ebx+50];TMenuItem.FActionLink:TMenuActionLink
 005B0BD6    call        TObject.Free
 005B0BDB    xor         eax,eax
 005B0BDD    mov         dword ptr [ebx+50],eax;TMenuItem.FActionLink:TMenuActionLink
>005B0BE0    jmp         005B0C31
 005B0BE2    cmp         dword ptr [ebx+50],0;TMenuItem.FActionLink:TMenuActionLink
>005B0BE6    jne         005B0BFD
 005B0BE8    mov         eax,ebx
 005B0BEA    mov         si,0FFEE
 005B0BEE    call        @CallDynaInst;TMenuItem.sub_005B0714
 005B0BF3    mov         ecx,ebx
 005B0BF5    mov         dl,1
 005B0BF7    call        dword ptr [eax+14]
 005B0BFA    mov         dword ptr [ebx+50],eax;TMenuItem.FActionLink:TMenuActionLink
 005B0BFD    mov         edx,edi
 005B0BFF    mov         eax,dword ptr [ebx+50];TMenuItem.FActionLink:TMenuActionLink
 005B0C02    mov         ecx,dword ptr [eax]
 005B0C04    call        dword ptr [ecx+0C];TBasicActionLink.SetAction
 005B0C07    mov         eax,dword ptr [ebx+50];TMenuItem.FActionLink:TMenuActionLink
 005B0C0A    mov         dword ptr [eax+0C],ebx;TMenuActionLink.?fC:TButton
 005B0C0D    mov         dword ptr [eax+8],5B0E60;TMenuActionLink.FOnChange:TNotifyEvent sub_005B0E60
 005B0C14    test        byte ptr [edi+1C],1;TBasicAction.FComponentState:TComponentState
 005B0C18    setne       cl
 005B0C1B    mov         edx,edi
 005B0C1D    mov         eax,ebx
 005B0C1F    mov         si,0FFEF
 005B0C23    call        @CallDynaInst;TMenuItem.sub_005B0D3C
 005B0C28    mov         edx,ebx
 005B0C2A    mov         eax,edi
 005B0C2C    call        TComponent.FreeNotification
 005B0C31    pop         edi
 005B0C32    pop         esi
 005B0C33    pop         ebx
 005B0C34    ret
*}
end;

//005B0C38
procedure TMenuItem.SetBitmap(Value:TBitmap);
begin
{*
 005B0C38    push        ebx
 005B0C39    push        esi
 005B0C3A    mov         ebx,edx
 005B0C3C    mov         esi,eax
 005B0C3E    cmp         dword ptr [esi+58],0;TMenuItem.FBitmap:TBitmap
>005B0C42    jne         005B0C53
 005B0C44    mov         dl,1
 005B0C46    mov         eax,[004C1D10];TBitmap
 005B0C4B    call        TBitmap.Create;TBitmap.Create
 005B0C50    mov         dword ptr [esi+58],eax;TMenuItem.FBitmap:TBitmap
 005B0C53    mov         edx,ebx
 005B0C55    mov         eax,dword ptr [esi+58];TMenuItem.FBitmap:TBitmap
 005B0C58    mov         ecx,dword ptr [eax]
 005B0C5A    call        dword ptr [ecx+8];TBitmap.Assign
 005B0C5D    mov         dl,1
 005B0C5F    mov         eax,esi
 005B0C61    mov         ecx,dword ptr [eax]
 005B0C63    call        dword ptr [ecx+50];TMenuItem.sub_005B0B00
 005B0C66    pop         esi
 005B0C67    pop         ebx
 005B0C68    ret
*}
end;

//005B0C6C
procedure sub_005B0C6C(?:TMenuItem);
begin
{*
 005B0C6C    push        ebx
 005B0C6D    push        esi
 005B0C6E    push        edi
 005B0C6F    mov         edi,eax
 005B0C71    mov         eax,edi
 005B0C73    call        TMenuItem.GetCount
 005B0C78    mov         ebx,eax
 005B0C7A    dec         ebx
 005B0C7B    test        ebx,ebx
>005B0C7D    jl          005B0C94
 005B0C7F    inc         ebx
 005B0C80    xor         esi,esi
 005B0C82    mov         edx,esi
 005B0C84    mov         eax,edi
 005B0C86    call        TMenuItem.GetItem
 005B0C8B    mov         edx,dword ptr [eax]
 005B0C8D    call        dword ptr [edx+54];TMenuItem.InitiateAction
 005B0C90    inc         esi
 005B0C91    dec         ebx
>005B0C92    jne         005B0C82
 005B0C94    pop         edi
 005B0C95    pop         esi
 005B0C96    pop         ebx
 005B0C97    ret
*}
end;

//005B0C98
procedure TMenuItem.GetParentComponent;
begin
{*
 005B0C98    mov         edx,dword ptr [eax+70];TMenuItem.FParent:TMenuItem
 005B0C9B    test        edx,edx
>005B0C9D    je          005B0CA9
 005B0C9F    cmp         dword ptr [edx+7C],0;TMenuItem.FMenu:TMenu
>005B0CA3    je          005B0CA9
 005B0CA5    mov         eax,dword ptr [edx+7C];TMenuItem.FMenu:TMenu
 005B0CA8    ret
 005B0CA9    mov         eax,edx
 005B0CAB    ret
*}
end;

//005B0CAC
procedure TMenuItem.SetParentComponent(Value:TComponent);
begin
{*
 005B0CAC    push        ebx
 005B0CAD    push        esi
 005B0CAE    mov         esi,edx
 005B0CB0    mov         ebx,eax
 005B0CB2    mov         eax,dword ptr [ebx+70];TMenuItem.FParent:TMenuItem
 005B0CB5    test        eax,eax
>005B0CB7    je          005B0CC0
 005B0CB9    mov         edx,ebx
 005B0CBB    call        TMenuItem.Remove
 005B0CC0    test        esi,esi
>005B0CC2    je          005B0CFB
 005B0CC4    mov         eax,esi
 005B0CC6    mov         edx,dword ptr ds:[5AB560];TMenu
 005B0CCC    call        @IsClass
 005B0CD1    test        al,al
>005B0CD3    je          005B0CE1
 005B0CD5    mov         eax,dword ptr [esi+44]
 005B0CD8    mov         edx,ebx
 005B0CDA    call        TMenuItem.Add
>005B0CDF    jmp         005B0CFB
 005B0CE1    mov         eax,esi
 005B0CE3    mov         edx,dword ptr ds:[5AA664];TMenuItem
 005B0CE9    call        @IsClass
 005B0CEE    test        al,al
>005B0CF0    je          005B0CFB
 005B0CF2    mov         edx,ebx
 005B0CF4    mov         eax,esi
 005B0CF6    call        TMenuItem.Add
 005B0CFB    pop         esi
 005B0CFC    pop         ebx
 005B0CFD    ret
*}
end;

//005B0D00
function TMenuItem.GetParentMenu:TMenu;
begin
{*
>005B0D00    jmp         005B0D04
*}
end;

//005B0D10
procedure TMenuItem.SetRadioItem(Value:Boolean);
begin
{*
 005B0D10    push        esi
 005B0D11    mov         esi,eax
 005B0D13    cmp         dl,byte ptr [esi+49];TMenuItem.FRadioItem:Boolean
>005B0D16    je          005B0D37
 005B0D18    mov         byte ptr [esi+49],dl;TMenuItem.FRadioItem:Boolean
 005B0D1B    cmp         byte ptr [esi+44],0;TMenuItem.FChecked:Boolean
>005B0D1F    je          005B0D2E
 005B0D21    cmp         byte ptr [esi+49],0;TMenuItem.FRadioItem:Boolean
>005B0D25    je          005B0D2E
 005B0D27    mov         eax,esi
 005B0D29    call        005B05A8
 005B0D2E    mov         dl,1
 005B0D30    mov         eax,esi
 005B0D32    mov         ecx,dword ptr [eax]
 005B0D34    call        dword ptr [ecx+50];TMenuItem.sub_005B0B00
 005B0D37    pop         esi
 005B0D38    ret
*}
end;

//005B0D3C
{*procedure TMenuItem.sub_005B0D3C(?:?; ?:?);
begin
 005B0D3C    push        ebx
 005B0D3D    push        esi
 005B0D3E    push        edi
 005B0D3F    mov         ebx,ecx
 005B0D41    mov         edi,edx
 005B0D43    mov         esi,eax
 005B0D45    mov         eax,edi
 005B0D47    mov         edx,dword ptr ds:[4D55AC];TCustomAction
 005B0D4D    call        @IsClass
 005B0D52    test        al,al
>005B0D54    je          005B0E59
 005B0D5A    test        bl,bl
>005B0D5C    je          005B0D67
 005B0D5E    cmp         byte ptr [esi+0B8],0;TMenuItem.FAutoCheck:Boolean
>005B0D65    jne         005B0D71
 005B0D67    movzx       eax,byte ptr [edi+6A]
 005B0D6B    mov         byte ptr [esi+0B8],al;TMenuItem.FAutoCheck:Boolean
 005B0D71    test        bl,bl
>005B0D73    je          005B0D7B
 005B0D75    cmp         dword ptr [esi+40],0;TMenuItem.FCaption:string
>005B0D79    jne         005B0D85
 005B0D7B    mov         edx,dword ptr [edi+6C]
 005B0D7E    mov         eax,esi
 005B0D80    call        TMenuItem.SetCaption
 005B0D85    test        bl,bl
>005B0D87    je          005B0D8F
 005B0D89    cmp         byte ptr [esi+44],0;TMenuItem.FChecked:Boolean
>005B0D8D    jne         005B0D9A
 005B0D8F    movzx       edx,byte ptr [edi+70]
 005B0D93    mov         eax,esi
 005B0D95    call        TMenuItem.SetChecked
 005B0D9A    test        bl,bl
>005B0D9C    je          005B0DA4
 005B0D9E    cmp         byte ptr [esi+45],1;TMenuItem.FEnabled:Boolean
>005B0DA2    jne         005B0DAF
 005B0DA4    movzx       edx,byte ptr [edi+71]
 005B0DA8    mov         eax,esi
 005B0DAA    call        TMenuItem.SetEnabled
 005B0DAF    test        bl,bl
>005B0DB1    je          005B0DB9
 005B0DB3    cmp         dword ptr [esi+60],0;TMenuItem.FHelpContext:THelpContext
>005B0DB7    jne         005B0DBF
 005B0DB9    mov         eax,dword ptr [edi+78]
 005B0DBC    mov         dword ptr [esi+60],eax;TMenuItem.FHelpContext:THelpContext
 005B0DBF    test        bl,bl
>005B0DC1    je          005B0DC9
 005B0DC3    cmp         dword ptr [esi+64],0;TMenuItem.FHint:string
>005B0DC7    jne         005B0DD7
 005B0DC9    lea         eax,[esi+64];TMenuItem.FHint:string
 005B0DCC    mov         edx,dword ptr [edi+84]
 005B0DD2    call        @UStrAsg
 005B0DD7    cmp         byte ptr [esi+49],0;TMenuItem.FRadioItem:Boolean
>005B0DDB    je          005B0DF2
 005B0DDD    test        bl,bl
>005B0DDF    je          005B0DE7
 005B0DE1    cmp         byte ptr [esi+4B],0;TMenuItem.FGroupIndex:byte
>005B0DE5    jne         005B0DF2
 005B0DE7    movzx       edx,byte ptr [edi+74]
 005B0DEB    mov         eax,esi
 005B0DED    call        TMenuItem.SetGroupIndex
 005B0DF2    test        bl,bl
>005B0DF4    je          005B0DFC
 005B0DF6    cmp         dword ptr [esi+4C],0FFFFFFFF;TMenuItem.FImageIndex:TImageIndex
>005B0DFA    jne         005B0E09
 005B0DFC    mov         edx,dword ptr [edi+90]
 005B0E02    mov         eax,esi
 005B0E04    call        TMenuItem.SetImageIndex
 005B0E09    test        bl,bl
>005B0E0B    je          005B0E14
 005B0E0D    cmp         word ptr [esi+6C],0;TMenuItem.FShortCut:TShortCut
>005B0E12    jne         005B0E22
 005B0E14    movzx       edx,word ptr [edi+8A]
 005B0E1B    mov         eax,esi
 005B0E1D    call        TMenuItem.SetShortCut
 005B0E22    test        bl,bl
>005B0E24    je          005B0E2C
 005B0E26    cmp         byte ptr [esi+4A],1;TMenuItem.FVisible:Boolean
>005B0E2A    jne         005B0E3A
 005B0E2C    movzx       edx,byte ptr [edi+88]
 005B0E33    mov         eax,esi
 005B0E35    call        TMenuItem.SetVisible
 005B0E3A    test        bl,bl
>005B0E3C    je          005B0E47
 005B0E3E    cmp         dword ptr [esi+98],0;TMenuItem.FOnClick:TNotifyEvent
>005B0E45    jne         005B0E59
 005B0E47    mov         eax,dword ptr [edi+50]
 005B0E4A    mov         dword ptr [esi+98],eax;TMenuItem.FOnClick:TNotifyEvent
 005B0E50    mov         eax,dword ptr [edi+54]
 005B0E53    mov         dword ptr [esi+9C],eax;TMenuItem.?f9C:TPopupMenu
 005B0E59    pop         edi
 005B0E5A    pop         esi
 005B0E5B    pop         ebx
 005B0E5C    ret
end;*}

//005B0E60
{*procedure sub_005B0E60(?:?; ?:?);
begin
 005B0E60    push        esi
 005B0E61    push        edi
 005B0E62    mov         edi,edx
 005B0E64    mov         esi,eax
 005B0E66    mov         eax,esi
 005B0E68    call        TMenuItem.GetAction
 005B0E6D    cmp         edi,eax
>005B0E6F    jne         005B0E80
 005B0E71    xor         ecx,ecx
 005B0E73    mov         edx,edi
 005B0E75    mov         eax,esi
 005B0E77    mov         si,0FFEF
 005B0E7B    call        @CallDynaInst
 005B0E80    pop         edi
 005B0E81    pop         esi
 005B0E82    ret
end;*}

//005B0E84
function TMenuItem.IsStoredCaption(Value:string):Boolean;
begin
{*
 005B0E84    push        ebx
 005B0E85    push        esi
 005B0E86    mov         ebx,eax
 005B0E88    mov         esi,dword ptr [ebx+50];TMenuItem.FActionLink:TMenuActionLink
 005B0E8B    test        esi,esi
>005B0E8D    je          005B0E9F
 005B0E8F    mov         eax,esi
 005B0E91    mov         edx,dword ptr [eax]
 005B0E93    call        dword ptr [edx+24];TMenuActionLink.IsCaptionLinked
 005B0E96    test        al,al
>005B0E98    je          005B0E9F
 005B0E9A    xor         eax,eax
 005B0E9C    pop         esi
 005B0E9D    pop         ebx
 005B0E9E    ret
 005B0E9F    mov         al,1
 005B0EA1    pop         esi
 005B0EA2    pop         ebx
 005B0EA3    ret
*}
end;

//005B0EA4
function TMenuItem.IsStoredChecked(Value:Boolean):Boolean;
begin
{*
 005B0EA4    push        ebx
 005B0EA5    push        esi
 005B0EA6    mov         ebx,eax
 005B0EA8    mov         esi,dword ptr [ebx+50];TMenuItem.FActionLink:TMenuActionLink
 005B0EAB    test        esi,esi
>005B0EAD    je          005B0EBF
 005B0EAF    mov         eax,esi
 005B0EB1    mov         edx,dword ptr [eax]
 005B0EB3    call        dword ptr [edx+28];TMenuActionLink.IsCheckedLinked
 005B0EB6    test        al,al
>005B0EB8    je          005B0EBF
 005B0EBA    xor         eax,eax
 005B0EBC    pop         esi
 005B0EBD    pop         ebx
 005B0EBE    ret
 005B0EBF    mov         al,1
 005B0EC1    pop         esi
 005B0EC2    pop         ebx
 005B0EC3    ret
*}
end;

//005B0EC4
function TMenuItem.IsStoredEnabled(Value:Boolean):Boolean;
begin
{*
 005B0EC4    push        ebx
 005B0EC5    push        esi
 005B0EC6    mov         ebx,eax
 005B0EC8    mov         esi,dword ptr [ebx+50];TMenuItem.FActionLink:TMenuActionLink
 005B0ECB    test        esi,esi
>005B0ECD    je          005B0EDF
 005B0ECF    mov         eax,esi
 005B0ED1    mov         edx,dword ptr [eax]
 005B0ED3    call        dword ptr [edx+2C];TMenuActionLink.IsEnabledLinked
 005B0ED6    test        al,al
>005B0ED8    je          005B0EDF
 005B0EDA    xor         eax,eax
 005B0EDC    pop         esi
 005B0EDD    pop         ebx
 005B0EDE    ret
 005B0EDF    mov         al,1
 005B0EE1    pop         esi
 005B0EE2    pop         ebx
 005B0EE3    ret
*}
end;

//005B0EE4
function TMenuItem.IsStoredHint(Value:string):Boolean;
begin
{*
 005B0EE4    push        ebx
 005B0EE5    push        esi
 005B0EE6    mov         ebx,eax
 005B0EE8    mov         esi,dword ptr [ebx+50];TMenuItem.FActionLink:TMenuActionLink
 005B0EEB    test        esi,esi
>005B0EED    je          005B0EFF
 005B0EEF    mov         eax,esi
 005B0EF1    mov         edx,dword ptr [eax]
 005B0EF3    call        dword ptr [edx+3C];TMenuActionLink.IsHintLinked
 005B0EF6    test        al,al
>005B0EF8    je          005B0EFF
 005B0EFA    xor         eax,eax
 005B0EFC    pop         esi
 005B0EFD    pop         ebx
 005B0EFE    ret
 005B0EFF    mov         al,1
 005B0F01    pop         esi
 005B0F02    pop         ebx
 005B0F03    ret
*}
end;

//005B0F04
function TMenuItem.IsStoredHelpContext(Value:THelpContext):Boolean;
begin
{*
 005B0F04    push        ebx
 005B0F05    push        esi
 005B0F06    mov         ebx,eax
 005B0F08    mov         esi,dword ptr [ebx+50];TMenuItem.FActionLink:TMenuActionLink
 005B0F0B    test        esi,esi
>005B0F0D    je          005B0F1F
 005B0F0F    mov         eax,esi
 005B0F11    mov         edx,dword ptr [eax]
 005B0F13    call        dword ptr [edx+34];TMenuActionLink.IsHelpContextLinked
 005B0F16    test        al,al
>005B0F18    je          005B0F1F
 005B0F1A    xor         eax,eax
 005B0F1C    pop         esi
 005B0F1D    pop         ebx
 005B0F1E    ret
 005B0F1F    mov         al,1
 005B0F21    pop         esi
 005B0F22    pop         ebx
 005B0F23    ret
*}
end;

//005B0F24
function TMenuItem.IsStoredImageIndex(Value:TImageIndex):Boolean;
begin
{*
 005B0F24    push        ebx
 005B0F25    push        esi
 005B0F26    mov         ebx,eax
 005B0F28    mov         esi,dword ptr [ebx+50];TMenuItem.FActionLink:TMenuActionLink
 005B0F2B    test        esi,esi
>005B0F2D    je          005B0F3F
 005B0F2F    mov         eax,esi
 005B0F31    mov         edx,dword ptr [eax]
 005B0F33    call        dword ptr [edx+40];TMenuActionLink.IsImageIndexLinked
 005B0F36    test        al,al
>005B0F38    je          005B0F3F
 005B0F3A    xor         eax,eax
 005B0F3C    pop         esi
 005B0F3D    pop         ebx
 005B0F3E    ret
 005B0F3F    mov         al,1
 005B0F41    pop         esi
 005B0F42    pop         ebx
 005B0F43    ret
*}
end;

//005B0F44
function TMenuItem.IsStoredShortCut(Value:TShortCut):Boolean;
begin
{*
 005B0F44    push        ebx
 005B0F45    push        esi
 005B0F46    mov         ebx,eax
 005B0F48    mov         esi,dword ptr [ebx+50];TMenuItem.FActionLink:TMenuActionLink
 005B0F4B    test        esi,esi
>005B0F4D    je          005B0F5F
 005B0F4F    mov         eax,esi
 005B0F51    mov         edx,dword ptr [eax]
 005B0F53    call        dword ptr [edx+44];TMenuActionLink.IsShortCutLinked
 005B0F56    test        al,al
>005B0F58    je          005B0F5F
 005B0F5A    xor         eax,eax
 005B0F5C    pop         esi
 005B0F5D    pop         ebx
 005B0F5E    ret
 005B0F5F    mov         al,1
 005B0F61    pop         esi
 005B0F62    pop         ebx
 005B0F63    ret
*}
end;

//005B0F64
function TMenuItem.IsStoredVisible(Value:Boolean):Boolean;
begin
{*
 005B0F64    push        ebx
 005B0F65    push        esi
 005B0F66    mov         ebx,eax
 005B0F68    mov         esi,dword ptr [ebx+50];TMenuItem.FActionLink:TMenuActionLink
 005B0F6B    test        esi,esi
>005B0F6D    je          005B0F7F
 005B0F6F    mov         eax,esi
 005B0F71    mov         edx,dword ptr [eax]
 005B0F73    call        dword ptr [edx+48];TMenuActionLink.IsStatusActionLinked
 005B0F76    test        al,al
>005B0F78    je          005B0F7F
 005B0F7A    xor         eax,eax
 005B0F7C    pop         esi
 005B0F7D    pop         ebx
 005B0F7E    ret
 005B0F7F    mov         al,1
 005B0F81    pop         esi
 005B0F82    pop         ebx
 005B0F83    ret
*}
end;

//005B0F84
function TMenuItem.IsStoredOnClick(Value:TNotifyEvent):Boolean;
begin
{*
 005B0F84    push        ebx
 005B0F85    push        esi
 005B0F86    mov         ebx,eax
 005B0F88    mov         esi,dword ptr [ebx+50];TMenuItem.FActionLink:TMenuActionLink
 005B0F8B    test        esi,esi
>005B0F8D    je          005B0F9F
 005B0F8F    mov         eax,esi
 005B0F91    mov         edx,dword ptr [eax]
 005B0F93    call        dword ptr [edx+8];TMenuActionLink.sub_005AD0F8
 005B0F96    test        al,al
>005B0F98    je          005B0F9F
 005B0F9A    xor         eax,eax
 005B0F9C    pop         esi
 005B0F9D    pop         ebx
 005B0F9E    ret
 005B0F9F    mov         al,1
 005B0FA1    pop         esi
 005B0FA2    pop         ebx
 005B0FA3    ret
*}
end;

//005B0FA4
procedure TMenuItem.AssignTo(Dest:TPersistent);
begin
{*
 005B0FA4    push        ebx
 005B0FA5    push        esi
 005B0FA6    push        edi
 005B0FA7    mov         esi,edx
 005B0FA9    mov         ebx,eax
 005B0FAB    mov         eax,esi
 005B0FAD    mov         edx,dword ptr ds:[4D55AC];TCustomAction
 005B0FB3    call        @IsClass
 005B0FB8    test        al,al
>005B0FBA    je          005B101A
 005B0FBC    movzx       edx,byte ptr [ebx+45];TMenuItem.FEnabled:Boolean
 005B0FC0    mov         edi,esi
 005B0FC2    mov         eax,edi
 005B0FC4    mov         ecx,dword ptr [eax]
 005B0FC6    call        dword ptr [ecx+74]
 005B0FC9    mov         edx,dword ptr [ebx+60];TMenuItem.FHelpContext:THelpContext
 005B0FCC    mov         eax,edi
 005B0FCE    mov         ecx,dword ptr [eax]
 005B0FD0    call        dword ptr [ecx+7C]
 005B0FD3    mov         edx,dword ptr [ebx+64];TMenuItem.FHint:string
 005B0FD6    mov         eax,edi
 005B0FD8    mov         ecx,dword ptr [eax]
 005B0FDA    call        dword ptr [ecx+88]
 005B0FE0    mov         edx,dword ptr [ebx+4C];TMenuItem.FImageIndex:TImageIndex
 005B0FE3    mov         eax,edi
 005B0FE5    mov         ecx,dword ptr [eax]
 005B0FE7    call        dword ptr [ecx+94]
 005B0FED    mov         edx,dword ptr [ebx+40];TMenuItem.FCaption:string
 005B0FF0    mov         eax,edi
 005B0FF2    mov         ecx,dword ptr [eax]
 005B0FF4    call        dword ptr [ecx+6C]
 005B0FF7    movzx       edx,byte ptr [ebx+4A];TMenuItem.FVisible:Boolean
 005B0FFB    mov         eax,edi
 005B0FFD    mov         ecx,dword ptr [eax]
 005B0FFF    call        dword ptr [ecx+8C]
 005B1005    push        dword ptr [ebx+9C];TMenuItem.?f9C:TPopupMenu
 005B100B    push        dword ptr [ebx+98];TMenuItem.FOnClick:TNotifyEvent
 005B1011    mov         eax,edi
 005B1013    mov         edx,dword ptr [eax]
 005B1015    call        dword ptr [edx+48]
>005B1018    jmp         005B1023
 005B101A    mov         edx,esi
 005B101C    mov         eax,ebx
 005B101E    call        TPersistent.AssignTo
 005B1023    pop         edi
 005B1024    pop         esi
 005B1025    pop         ebx
 005B1026    ret
*}
end;

//005B1028
procedure TMenuItem.Notification(AComponent:TComponent; Operation:TOperation);
begin
{*
 005B1028    push        ebx
 005B1029    push        esi
 005B102A    push        edi
 005B102B    mov         ebx,ecx
 005B102D    mov         edi,edx
 005B102F    mov         esi,eax
 005B1031    mov         ecx,ebx
 005B1033    mov         edx,edi
 005B1035    mov         eax,esi
 005B1037    call        TComponent.Notification
 005B103C    cmp         bl,1
>005B103F    jne         005B1078
 005B1041    mov         eax,esi
 005B1043    call        TMenuItem.GetAction
 005B1048    cmp         edi,eax
>005B104A    jne         005B1057
 005B104C    xor         edx,edx
 005B104E    mov         eax,esi
 005B1050    call        TMenuItem.SetAction
>005B1055    jmp         005B1078
 005B1057    cmp         edi,dword ptr [esi+88];TMenuItem.FSubMenuImages:TCustomImageList
>005B105D    jne         005B106A
 005B105F    xor         edx,edx
 005B1061    mov         eax,esi
 005B1063    call        TMenuItem.SetSubMenuImages
>005B1068    jmp         005B1078
 005B106A    cmp         edi,dword ptr [esi+74];TMenuItem.FMerged:TMenuItem
>005B106D    jne         005B1078
 005B106F    xor         edx,edx
 005B1071    mov         eax,esi
 005B1073    call        005AD7D0
 005B1078    pop         edi
 005B1079    pop         esi
 005B107A    pop         ebx
 005B107B    ret
*}
end;

//005B107C
procedure TMenuItem.SetSubMenuImages(Value:TCustomImageList);
begin
{*
 005B107C    push        ebx
 005B107D    push        esi
 005B107E    mov         esi,edx
 005B1080    mov         ebx,eax
 005B1082    mov         eax,dword ptr [ebx+88];TMenuItem.FSubMenuImages:TCustomImageList
 005B1088    test        eax,eax
>005B108A    je          005B1097
 005B108C    mov         edx,dword ptr [ebx+84];TMenuItem.FImageChangeLink:TChangeLink
 005B1092    call        TCustomImageList.UnRegisterChanges
 005B1097    mov         eax,esi
 005B1099    mov         dword ptr [ebx+88],eax;TMenuItem.FSubMenuImages:TCustomImageList
 005B109F    test        eax,eax
>005B10A1    je          005B10BB
 005B10A3    mov         edx,dword ptr [ebx+84];TMenuItem.FImageChangeLink:TChangeLink
 005B10A9    call        TCustomImageList.RegisterChanges
 005B10AE    mov         edx,ebx
 005B10B0    mov         eax,dword ptr [ebx+88];TMenuItem.FSubMenuImages:TCustomImageList
 005B10B6    call        TComponent.FreeNotification
 005B10BB    mov         eax,ebx
 005B10BD    call        005B11FC
 005B10C2    pop         esi
 005B10C3    pop         ebx
 005B10C4    ret
*}
end;

//005B11C8
function UpdateItem(MenuItem:TMenuItem):Boolean;
begin
{*
 005B11C8    push        ebx
 005B11C9    push        esi
 005B11CA    mov         esi,eax
 005B11CC    xor         ebx,ebx
 005B11CE    mov         eax,5B11C8;UpdateItem:Boolean
 005B11D3    mov         ecx,esi
 005B11D5    mov         edx,dword ptr [esi+74]
 005B11D8    call        IterateMenus
 005B11DD    push        1
 005B11DF    mov         ecx,esi
 005B11E1    mov         edx,esi
 005B11E3    mov         eax,esi
 005B11E5    call        005B0B44
 005B11EA    mov         eax,ebx
 005B11EC    pop         esi
 005B11ED    pop         ebx
 005B11EE    ret
*}
end;

//005B11F0
procedure TMenuUpdater.DoIterateMenus(Menu1:TMenuItem; Menu2:TMenuItem);
begin
{*
 005B11F0    mov         eax,5B11C8;UpdateItem:Boolean
 005B11F5    call        IterateMenus
 005B11FA    ret
*}
end;

//005B11FC
procedure sub_005B11FC(?:TMenuItem);
begin
{*
 005B11FC    mov         ecx,eax
 005B11FE    mov         edx,dword ptr [eax+74];TMenuItem.FMerged:TMenuItem
 005B1201    mov         eax,[005B10D8];TMenuUpdater
 005B1206    call        TMenuUpdater.DoIterateMenus
 005B120B    ret
*}
end;

//005B120C
function IfHotkeyAvailable(const AHotkey:UnicodeString):Boolean;
begin
{*
 005B120C    push        ebp
 005B120D    mov         ebp,esp
 005B120F    push        ebx
 005B1210    mov         edx,dword ptr [ebp+8]
 005B1213    mov         edx,dword ptr [edx-4]
 005B1216    mov         ecx,1
 005B121B    call        Pos
 005B1220    test        eax,eax
 005B1222    setne       bl
 005B1225    test        bl,bl
>005B1227    je          005B123A
 005B1229    mov         edx,dword ptr [ebp+8]
 005B122C    add         edx,0FFFFFFFC
 005B122F    mov         ecx,1
 005B1234    xchg        eax,edx
 005B1235    call        @UStrDelete
 005B123A    mov         eax,ebx
 005B123C    pop         ebx
 005B123D    pop         ebp
 005B123E    ret
*}
end;

//005B1240
{*procedure sub_005B1240(?:?);
begin
 005B1240    push        ebp
 005B1241    mov         ebp,esp
 005B1243    push        ebx
 005B1244    push        esi
 005B1245    push        edi
 005B1246    mov         eax,dword ptr [ebp+8]
 005B1249    mov         edx,dword ptr [eax-0C]
 005B124C    mov         eax,dword ptr [ebp+8]
 005B124F    mov         eax,dword ptr [eax-8]
 005B1252    mov         ecx,dword ptr [eax]
 005B1254    call        dword ptr [ecx+8]
 005B1257    mov         eax,dword ptr [ebp+8]
 005B125A    mov         eax,dword ptr [eax-0C]
 005B125D    mov         edx,dword ptr [eax]
 005B125F    call        dword ptr [edx+14]
 005B1262    mov         edx,dword ptr [ebp+8]
 005B1265    mov         dword ptr [edx-10],eax
 005B1268    mov         eax,dword ptr [ebp+8]
 005B126B    mov         eax,dword ptr [eax-14]
 005B126E    mov         edx,dword ptr [eax]
 005B1270    call        dword ptr [edx+14]
 005B1273    mov         esi,eax
 005B1275    dec         esi
 005B1276    test        esi,esi
>005B1278    jl          005B12AB
 005B127A    inc         esi
 005B127B    xor         ebx,ebx
 005B127D    mov         eax,dword ptr [ebp+8]
 005B1280    mov         eax,dword ptr [eax-14]
 005B1283    mov         edx,ebx
 005B1285    mov         ecx,dword ptr [eax]
 005B1287    call        dword ptr [ecx+18]
 005B128A    push        eax
 005B128B    mov         eax,dword ptr [ebp+8]
 005B128E    mov         eax,dword ptr [eax-14]
 005B1291    mov         edx,ebx
 005B1293    mov         ecx,dword ptr [eax]
 005B1295    call        dword ptr [ecx+18]
 005B1298    mov         edx,dword ptr [eax+40]
 005B129B    mov         eax,dword ptr [ebp+8]
 005B129E    mov         eax,dword ptr [eax-8]
 005B12A1    pop         ecx
 005B12A2    mov         edi,dword ptr [eax]
 005B12A4    call        dword ptr [edi+40]
 005B12A7    inc         ebx
 005B12A8    dec         esi
>005B12A9    jne         005B127D
 005B12AB    mov         eax,dword ptr [ebp+8]
 005B12AE    add         eax,0FFFFFFE8
 005B12B1    mov         edx,dword ptr [ebp+8]
 005B12B4    mov         edx,dword ptr [edx-4]
 005B12B7    call        @UStrLAsg
 005B12BC    pop         edi
 005B12BD    pop         esi
 005B12BE    pop         ebx
 005B12BF    pop         ebp
 005B12C0    ret
end;*}

//005B12C4
{*procedure sub_005B12C4(?:UnicodeString; ?:?; ?:?);
begin
 005B12C4    push        ebp
 005B12C5    mov         ebp,esp
 005B12C7    add         esp,0FFFFFFEC
 005B12CA    push        ebx
 005B12CB    push        esi
 005B12CC    push        edi
 005B12CD    xor         ebx,ebx
 005B12CF    mov         dword ptr [ebp-14],ebx
 005B12D2    mov         dword ptr [ebp-10],ebx
 005B12D5    mov         dword ptr [ebp-0C],ecx
 005B12D8    mov         dword ptr [ebp-8],edx
 005B12DB    mov         dword ptr [ebp-4],eax
 005B12DE    xor         eax,eax
 005B12E0    push        ebp
 005B12E1    push        5B140C
 005B12E6    push        dword ptr fs:[eax]
 005B12E9    mov         dword ptr fs:[eax],esp
 005B12EC    xor         ebx,ebx
 005B12EE    mov         eax,dword ptr [ebp-4]
 005B12F1    mov         eax,dword ptr [eax]
 005B12F3    test        eax,eax
>005B12F5    je          005B12FC
 005B12F7    sub         eax,4
 005B12FA    mov         eax,dword ptr [eax]
 005B12FC    mov         edi,eax
 005B12FE    test        edi,edi
>005B1300    jle         005B1328
 005B1302    mov         esi,1
 005B1307    mov         eax,dword ptr [ebp-4]
 005B130A    call        @UniqueStringU
 005B130F    lea         eax,[eax+esi*2-2]
 005B1313    call        00417114
 005B1318    cmp         al,7
>005B131A    je          005B1320
 005B131C    cmp         al,0F
>005B131E    jne         005B1324
 005B1320    mov         bl,1
>005B1322    jmp         005B1328
 005B1324    inc         esi
 005B1325    dec         edi
>005B1326    jne         005B1307
 005B1328    test        bl,bl
>005B132A    je          005B13DB
 005B1330    mov         ebx,dword ptr [ebp-4]
 005B1333    mov         ebx,dword ptr [ebx]
 005B1335    test        ebx,ebx
>005B1337    je          005B133E
 005B1339    sub         ebx,4
 005B133C    mov         ebx,dword ptr [ebx]
 005B133E    lea         eax,[ebp-10]
 005B1341    push        eax
 005B1342    mov         edx,ebx
 005B1344    sub         edx,3
 005B1347    inc         edx
 005B1348    mov         eax,dword ptr [ebp-4]
 005B134B    mov         eax,dword ptr [eax]
 005B134D    mov         ecx,3
 005B1352    call        @UStrCopy
 005B1357    mov         eax,dword ptr [ebp-10]
 005B135A    mov         edx,5B1428;'...'
 005B135F    call        @UStrEqual
>005B1364    jne         005B13B5
 005B1366    mov         ebx,dword ptr [ebp-4]
 005B1369    mov         ebx,dword ptr [ebx]
 005B136B    test        ebx,ebx
>005B136D    je          005B1374
 005B136F    sub         ebx,4
 005B1372    mov         ebx,dword ptr [ebx]
 005B1374    lea         eax,[ebp-14]
 005B1377    push        eax
 005B1378    mov         ecx,ebx
 005B137A    sub         ecx,3
 005B137D    mov         eax,dword ptr [ebp-4]
 005B1380    mov         eax,dword ptr [eax]
 005B1382    mov         edx,1
 005B1387    call        @UStrCopy
 005B138C    push        dword ptr [ebp-14]
 005B138F    push        5B143C;'('
 005B1394    push        5B144C;'&'
 005B1399    push        dword ptr [ebp-8]
 005B139C    push        5B145C;')'
 005B13A1    push        5B1428;'...'
 005B13A6    mov         eax,dword ptr [ebp-4]
 005B13A9    mov         edx,6
 005B13AE    call        @UStrCatN
>005B13B3    jmp         005B13F1
 005B13B5    mov         eax,dword ptr [ebp-4]
 005B13B8    push        dword ptr [eax]
 005B13BA    push        5B143C;'('
 005B13BF    push        5B144C;'&'
 005B13C4    push        dword ptr [ebp-8]
 005B13C7    push        5B145C;')'
 005B13CC    mov         eax,dword ptr [ebp-4]
 005B13CF    mov         edx,5
 005B13D4    call        @UStrCatN
>005B13D9    jmp         005B13F1
 005B13DB    cmp         dword ptr [ebp-0C],0
>005B13DF    je          005B13F1
 005B13E1    mov         edx,dword ptr [ebp-4]
 005B13E4    mov         ecx,dword ptr [ebp-0C]
 005B13E7    mov         eax,5B144C;'&'
 005B13EC    call        @UStrInsert
 005B13F1    xor         eax,eax
 005B13F3    pop         edx
 005B13F4    pop         ecx
 005B13F5    pop         ecx
 005B13F6    mov         dword ptr fs:[eax],edx
 005B13F9    push        5B1413
 005B13FE    lea         eax,[ebp-14]
 005B1401    mov         edx,2
 005B1406    call        @UStrArrayClr
 005B140B    ret
>005B140C    jmp         @HandleFinally
>005B1411    jmp         005B13FE
 005B1413    pop         edi
 005B1414    pop         esi
 005B1415    pop         ebx
 005B1416    mov         esp,ebp
 005B1418    pop         ebp
 005B1419    ret
end;*}

//005B1460
{*function sub_005B1460(?:TMenuItem; ?:?):?;
begin
 005B1460    push        ebp
 005B1461    mov         ebp,esp
 005B1463    add         esp,0FFFFFFB8
 005B1466    push        ebx
 005B1467    push        esi
 005B1468    push        edi
 005B1469    xor         ecx,ecx
 005B146B    mov         dword ptr [ebp-48],ecx
 005B146E    mov         dword ptr [ebp-44],ecx
 005B1471    mov         dword ptr [ebp-40],ecx
 005B1474    mov         dword ptr [ebp-3C],ecx
 005B1477    mov         dword ptr [ebp-1C],ecx
 005B147A    mov         dword ptr [ebp-20],ecx
 005B147D    mov         dword ptr [ebp-24],ecx
 005B1480    mov         dword ptr [ebp-4],ecx
 005B1483    mov         dword ptr [ebp-18],ecx
 005B1486    mov         ebx,edx
 005B1488    mov         esi,eax
 005B148A    xor         eax,eax
 005B148C    push        ebp
 005B148D    push        5B192B
 005B1492    push        dword ptr fs:[eax]
 005B1495    mov         dword ptr fs:[eax],esp
 005B1498    mov         byte ptr [ebp-25],0
 005B149C    test        bl,bl
>005B149E    jne         005B14B9
 005B14A0    test        byte ptr [esi+1C],10
>005B14A4    jne         005B18FB
 005B14AA    mov         eax,esi
 005B14AC    call        005B1B24
 005B14B1    test        al,al
>005B14B3    je          005B18FB
 005B14B9    lea         eax,[ebp-4]
 005B14BC    mov         edx,dword ptr ds:[7A1B90];^'1234567890ABCDEFGHIJKLMNOPQRSTUVWXYZ'
 005B14C2    call        @UStrLAsg
 005B14C7    xor         eax,eax
 005B14C9    mov         dword ptr [ebp-0C],eax
 005B14CC    xor         eax,eax
 005B14CE    mov         dword ptr [ebp-14],eax
 005B14D1    xor         eax,eax
 005B14D3    mov         dword ptr [ebp-2C],eax
 005B14D6    xor         eax,eax
 005B14D8    mov         dword ptr [ebp-8],eax
 005B14DB    xor         eax,eax
 005B14DD    mov         dword ptr [ebp-10],eax
 005B14E0    xor         edx,edx
 005B14E2    push        ebp
 005B14E3    push        5B18F4
 005B14E8    push        dword ptr fs:[edx]
 005B14EB    mov         dword ptr fs:[edx],esp
 005B14EE    mov         dl,1
 005B14F0    mov         eax,[0046F9A0];TStringList
 005B14F5    call        TStringList.Create;TStringList.Create
 005B14FA    mov         dword ptr [ebp-0C],eax
 005B14FD    mov         dl,1
 005B14FF    mov         eax,[0046F9A0];TStringList
 005B1504    call        TStringList.Create;TStringList.Create
 005B1509    mov         dword ptr [ebp-14],eax
 005B150C    mov         dl,1
 005B150E    mov         eax,[0046F9A0];TStringList
 005B1513    call        TStringList.Create;TStringList.Create
 005B1518    mov         dword ptr [ebp-2C],eax
 005B151B    mov         dl,1
 005B151D    mov         eax,[0046F9A0];TStringList
 005B1522    call        TStringList.Create;TStringList.Create
 005B1527    mov         dword ptr [ebp-8],eax
 005B152A    mov         eax,esi
 005B152C    call        TMenuItem.GetCount
 005B1531    dec         eax
 005B1532    test        eax,eax
>005B1534    jl          005B164E
 005B153A    inc         eax
 005B153B    mov         dword ptr [ebp-38],eax
 005B153E    mov         dword ptr [ebp-30],0
 005B1545    mov         edx,dword ptr [ebp-30]
 005B1548    mov         eax,esi
 005B154A    call        TMenuItem.GetItem
 005B154F    cmp         byte ptr [eax+4A],0;TMenuItem.FVisible:Boolean
>005B1553    je          005B1642
 005B1559    mov         edx,dword ptr [ebp-30]
 005B155C    mov         eax,esi
 005B155E    call        TMenuItem.GetItem
 005B1563    mov         eax,dword ptr [eax+40];TMenuItem.FCaption:string
 005B1566    mov         edx,5B194C;'-'
 005B156B    call        @UStrEqual
>005B1570    je          005B1642
 005B1576    mov         edx,dword ptr [ebp-30]
 005B1579    mov         eax,esi
 005B157B    call        TMenuItem.GetItem
 005B1580    cmp         dword ptr [eax+40],0;TMenuItem.FCaption:string
>005B1584    je          005B1642
 005B158A    mov         edx,dword ptr [ebp-30]
 005B158D    mov         eax,esi
 005B158F    call        TMenuItem.GetItem
 005B1594    mov         eax,dword ptr [eax+40];TMenuItem.FCaption:string
 005B1597    lea         edx,[ebp-3C]
 005B159A    call        GetHotkey
 005B159F    mov         eax,dword ptr [ebp-3C]
 005B15A2    lea         edx,[ebp-1C]
 005B15A5    call        UpperCase
 005B15AA    cmp         dword ptr [ebp-1C],0
>005B15AE    jne         005B15D4
 005B15B0    mov         edx,dword ptr [ebp-30]
 005B15B3    mov         eax,esi
 005B15B5    call        TMenuItem.GetItem
 005B15BA    push        eax
 005B15BB    mov         edx,dword ptr [ebp-30]
 005B15BE    mov         eax,esi
 005B15C0    call        TMenuItem.GetItem
 005B15C5    mov         ecx,dword ptr [eax+40];TMenuItem.FCaption:string
 005B15C8    xor         edx,edx
 005B15CA    mov         eax,dword ptr [ebp-2C]
 005B15CD    mov         ebx,dword ptr [eax]
 005B15CF    call        dword ptr [ebx+68];TStringList.InsertObject
>005B15D2    jmp         005B1642
 005B15D4    mov         edx,dword ptr ds:[7A1B90];^'1234567890ABCDEFGHIJKLMNOPQRSTUVWXYZ'
 005B15DA    mov         eax,dword ptr [ebp-1C]
 005B15DD    call        AnsiPos
 005B15E2    test        eax,eax
>005B15E4    je          005B1642
 005B15E6    push        ebp
 005B15E7    mov         eax,dword ptr [ebp-1C]
 005B15EA    call        IfHotkeyAvailable
 005B15EF    pop         ecx
 005B15F0    test        al,al
>005B15F2    jne         005B1642
 005B15F4    mov         edx,dword ptr [ebp-30]
 005B15F7    mov         eax,esi
 005B15F9    call        TMenuItem.GetItem
 005B15FE    add         eax,40;TMenuItem.FCaption:string
 005B1601    push        eax
 005B1602    mov         edx,dword ptr [ebp-30]
 005B1605    mov         eax,esi
 005B1607    call        TMenuItem.GetItem
 005B160C    mov         eax,dword ptr [eax+40];TMenuItem.FCaption:string
 005B160F    lea         edx,[ebp-40]
 005B1612    call        005B370C
 005B1617    mov         edx,dword ptr [ebp-40]
 005B161A    pop         eax
 005B161B    call        @UStrAsg
 005B1620    mov         edx,dword ptr [ebp-30]
 005B1623    mov         eax,esi
 005B1625    call        TMenuItem.GetItem
 005B162A    push        eax
 005B162B    mov         edx,dword ptr [ebp-30]
 005B162E    mov         eax,esi
 005B1630    call        TMenuItem.GetItem
 005B1635    mov         ecx,dword ptr [eax+40];TMenuItem.FCaption:string
 005B1638    xor         edx,edx
 005B163A    mov         eax,dword ptr [ebp-2C]
 005B163D    mov         ebx,dword ptr [eax]
 005B163F    call        dword ptr [ebx+68];TStringList.InsertObject
 005B1642    inc         dword ptr [ebp-30]
 005B1645    dec         dword ptr [ebp-38]
>005B1648    jne         005B1545
 005B164E    lea         eax,[ebp-24]
 005B1651    mov         edx,dword ptr [ebp-4]
 005B1654    call        @UStrLAsg
 005B1659    mov         eax,dword ptr [ebp-2C]
 005B165C    mov         edx,dword ptr [eax]
 005B165E    call        dword ptr [edx+14];TStringList.GetCount
 005B1661    dec         eax
 005B1662    test        eax,eax
>005B1664    jl          005B17E6
 005B166A    inc         eax
 005B166B    mov         dword ptr [ebp-38],eax
 005B166E    lea         eax,[ebp-4]
 005B1671    mov         edx,dword ptr [ebp-24]
 005B1674    call        @UStrLAsg
 005B1679    mov         edx,dword ptr [ebp-2C]
 005B167C    mov         eax,dword ptr [ebp-14]
 005B167F    mov         ecx,dword ptr [eax]
 005B1681    call        dword ptr [ecx+8];TStringList.Assign
 005B1684    mov         eax,dword ptr [ebp-0C]
 005B1687    mov         edx,dword ptr [eax]
 005B1689    call        dword ptr [edx+48];TStringList.Clear
 005B168C    mov         eax,dword ptr [ebp-14]
 005B168F    mov         edx,dword ptr [eax]
 005B1691    call        dword ptr [edx+14];TStringList.GetCount
 005B1694    dec         eax
 005B1695    cmp         eax,0
>005B1698    jl          005B1774
 005B169E    mov         dword ptr [ebp-30],eax
 005B16A1    lea         ecx,[ebp-20]
 005B16A4    mov         edx,dword ptr [ebp-30]
 005B16A7    mov         eax,dword ptr [ebp-14]
 005B16AA    mov         ebx,dword ptr [eax]
 005B16AC    call        dword ptr [ebx+0C];TStringList.Get
 005B16AF    mov         ebx,1
>005B16B4    jmp         005B1757
 005B16B9    mov         eax,dword ptr [ebp-20]
 005B16BC    movzx       esi,word ptr [eax+ebx*2-2]
 005B16C1    cmp         si,0D800
>005B16C6    jb          005B16CF
 005B16C8    cmp         si,0DFFF
>005B16CD    jbe         005B16D3
 005B16CF    xor         eax,eax
>005B16D1    jmp         005B16D5
 005B16D3    mov         al,1
 005B16D5    test        al,al
>005B16D7    je          005B16DC
 005B16D9    inc         ebx
>005B16DA    jmp         005B1756
 005B16DC    lea         eax,[ebp-44]
 005B16DF    push        eax
 005B16E0    mov         ecx,1
 005B16E5    mov         edx,ebx
 005B16E7    mov         eax,dword ptr [ebp-20]
 005B16EA    call        @UStrCopy
 005B16EF    mov         eax,dword ptr [ebp-44]
 005B16F2    lea         edx,[ebp-1C]
 005B16F5    call        UpperCase
 005B16FA    push        ebp
 005B16FB    mov         eax,dword ptr [ebp-1C]
 005B16FE    call        IfHotkeyAvailable
 005B1703    pop         ecx
 005B1704    test        al,al
>005B1706    je          005B1756
 005B1708    mov         eax,[007C4EF4];^gvar_007C7CB8:Cardinal
 005B170D    cmp         byte ptr [eax+0C],0;TSysLocale.FarEast:Boolean
>005B1711    je          005B1722
 005B1713    lea         eax,[ebp-20]
 005B1716    mov         ecx,ebx
 005B1718    mov         edx,dword ptr [ebp-1C]
 005B171B    call        005B12C4
>005B1720    jmp         005B1731
 005B1722    lea         edx,[ebp-20]
 005B1725    mov         ecx,ebx
 005B1727    mov         eax,5B195C;'&'
 005B172C    call        @UStrInsert
 005B1731    mov         edx,dword ptr [ebp-30]
 005B1734    mov         eax,dword ptr [ebp-14]
 005B1737    mov         ecx,dword ptr [eax]
 005B1739    call        dword ptr [ecx+18];TStringList.GetObject
 005B173C    mov         ecx,eax
 005B173E    mov         edx,dword ptr [ebp-20]
 005B1741    mov         eax,dword ptr [ebp-0C]
 005B1744    mov         ebx,dword ptr [eax]
 005B1746    call        dword ptr [ebx+40];TStringList.AddObject
 005B1749    mov         edx,dword ptr [ebp-30]
 005B174C    mov         eax,dword ptr [ebp-14]
 005B174F    mov         ecx,dword ptr [eax]
 005B1751    call        dword ptr [ecx+4C];TStringList.Delete
>005B1754    jmp         005B1767
 005B1756    inc         ebx
 005B1757    mov         eax,dword ptr [ebp-20]
 005B175A    call        @UStrLen
 005B175F    cmp         ebx,eax
>005B1761    jle         005B16B9
 005B1767    dec         dword ptr [ebp-30]
 005B176A    cmp         dword ptr [ebp-30],0FFFFFFFF
>005B176E    jne         005B16A1
 005B1774    mov         eax,dword ptr [ebp-0C]
 005B1777    mov         edx,dword ptr [eax]
 005B1779    call        dword ptr [edx+14];TStringList.GetCount
 005B177C    cmp         eax,dword ptr [ebp-10]
>005B177F    jle         005B1788
 005B1781    push        ebp
 005B1782    call        005B1240
 005B1787    pop         ecx
 005B1788    mov         eax,dword ptr [ebp-14]
 005B178B    mov         edx,dword ptr [eax]
 005B178D    call        dword ptr [edx+14];TStringList.GetCount
 005B1790    test        eax,eax
>005B1792    jle         005B17E6
 005B1794    mov         eax,dword ptr [ebp-14]
 005B1797    mov         edx,dword ptr [eax]
 005B1799    call        dword ptr [edx+14];TStringList.GetCount
 005B179C    mov         esi,eax
 005B179E    dec         esi
 005B179F    test        esi,esi
>005B17A1    jl          005B17DD
 005B17A3    inc         esi
 005B17A4    mov         dword ptr [ebp-30],0
 005B17AB    mov         edx,dword ptr [ebp-30]
 005B17AE    mov         eax,dword ptr [ebp-14]
 005B17B1    mov         ecx,dword ptr [eax]
 005B17B3    call        dword ptr [ecx+18];TStringList.GetObject
 005B17B6    mov         edx,eax
 005B17B8    mov         eax,dword ptr [ebp-2C]
 005B17BB    mov         ecx,dword ptr [eax]
 005B17BD    call        dword ptr [ecx+60];TStrings.IndexOfObject
 005B17C0    mov         edi,eax
 005B17C2    mov         eax,dword ptr [ebp-2C]
 005B17C5    mov         edx,dword ptr [eax]
 005B17C7    call        dword ptr [edx+14];TStringList.GetCount
 005B17CA    mov         ecx,eax
 005B17CC    dec         ecx
 005B17CD    mov         edx,edi
 005B17CF    mov         eax,dword ptr [ebp-2C]
 005B17D2    mov         ebx,dword ptr [eax]
 005B17D4    call        dword ptr [ebx+7C];TStrings.Move
 005B17D7    inc         dword ptr [ebp-30]
 005B17DA    dec         esi
>005B17DB    jne         005B17AB
 005B17DD    dec         dword ptr [ebp-38]
>005B17E0    jne         005B166E
 005B17E6    cmp         dword ptr [ebp-10],0
>005B17EA    jne         005B17F3
 005B17EC    push        ebp
 005B17ED    call        005B1240
 005B17F2    pop         ecx
 005B17F3    mov         eax,dword ptr [ebp-8]
 005B17F6    mov         edx,dword ptr [eax]
 005B17F8    call        dword ptr [edx+14];TStringList.GetCount
 005B17FB    test        eax,eax
 005B17FD    setg        byte ptr [ebp-25]
 005B1801    mov         eax,dword ptr [ebp-8]
 005B1804    mov         edx,dword ptr [eax]
 005B1806    call        dword ptr [edx+14];TStringList.GetCount
 005B1809    dec         eax
 005B180A    test        eax,eax
>005B180C    jl          005B18C6
 005B1812    inc         eax
 005B1813    mov         dword ptr [ebp-38],eax
 005B1816    mov         dword ptr [ebp-30],0
 005B181D    lea         ecx,[ebp-20]
 005B1820    mov         edx,dword ptr [ebp-30]
 005B1823    mov         eax,dword ptr [ebp-8]
 005B1826    mov         ebx,dword ptr [eax]
 005B1828    call        dword ptr [ebx+0C];TStringList.Get
 005B182B    mov         eax,[007C4EF4];^gvar_007C7CB8:Cardinal
 005B1830    cmp         byte ptr [eax+0C],0;TSysLocale.FarEast:Boolean
>005B1834    je          005B18A4
 005B1836    mov         edx,dword ptr [ebp-20]
 005B1839    mov         eax,5B195C;'&'
 005B183E    call        AnsiPos
 005B1843    test        eax,eax
>005B1845    jne         005B18A4
 005B1847    cmp         dword ptr [ebp-18],0
>005B184B    je          005B18A4
 005B184D    mov         edx,dword ptr [ebp-20]
 005B1850    mov         eax,5B195C;'&'
 005B1855    call        AnsiPos
 005B185A    test        eax,eax
>005B185C    jne         005B18A4
 005B185E    mov         ebx,dword ptr [ebp-18]
 005B1861    test        ebx,ebx
>005B1863    je          005B186A
 005B1865    sub         ebx,4
 005B1868    mov         ebx,dword ptr [ebx]
 005B186A    lea         eax,[ebp-48]
 005B186D    push        eax
 005B186E    mov         ecx,1
 005B1873    mov         edx,ebx
 005B1875    mov         eax,dword ptr [ebp-18]
 005B1878    call        @UStrCopy
 005B187D    mov         edx,dword ptr [ebp-48]
 005B1880    lea         eax,[ebp-20]
 005B1883    xor         ecx,ecx
 005B1885    call        005B12C4
 005B188A    mov         eax,dword ptr [ebp-18]
 005B188D    test        eax,eax
>005B188F    je          005B1896
 005B1891    sub         eax,4
 005B1894    mov         eax,dword ptr [eax]
 005B1896    lea         edx,[ebp-18]
 005B1899    mov         ecx,1
 005B189E    xchg        eax,edx
 005B189F    call        @UStrDelete
 005B18A4    mov         edx,dword ptr [ebp-30]
 005B18A7    mov         eax,dword ptr [ebp-8]
 005B18AA    mov         ecx,dword ptr [eax]
 005B18AC    call        dword ptr [ecx+18];TStringList.GetObject
 005B18AF    add         eax,40
 005B18B2    mov         edx,dword ptr [ebp-20]
 005B18B5    call        @UStrAsg
 005B18BA    inc         dword ptr [ebp-30]
 005B18BD    dec         dword ptr [ebp-38]
>005B18C0    jne         005B181D
 005B18C6    xor         eax,eax
 005B18C8    pop         edx
 005B18C9    pop         ecx
 005B18CA    pop         ecx
 005B18CB    mov         dword ptr fs:[eax],edx
 005B18CE    push        5B18FB
 005B18D3    mov         eax,dword ptr [ebp-8]
 005B18D6    call        TObject.Free
 005B18DB    mov         eax,dword ptr [ebp-2C]
 005B18DE    call        TObject.Free
 005B18E3    mov         eax,dword ptr [ebp-14]
 005B18E6    call        TObject.Free
 005B18EB    mov         eax,dword ptr [ebp-0C]
 005B18EE    call        TObject.Free
 005B18F3    ret
>005B18F4    jmp         @HandleFinally
>005B18F9    jmp         005B18D3
 005B18FB    xor         eax,eax
 005B18FD    pop         edx
 005B18FE    pop         ecx
 005B18FF    pop         ecx
 005B1900    mov         dword ptr fs:[eax],edx
 005B1903    push        5B1932
 005B1908    lea         eax,[ebp-48]
 005B190B    mov         edx,4
 005B1910    call        @UStrArrayClr
 005B1915    lea         eax,[ebp-24]
 005B1918    mov         edx,4
 005B191D    call        @UStrArrayClr
 005B1922    lea         eax,[ebp-4]
 005B1925    call        @UStrClr
 005B192A    ret
>005B192B    jmp         @HandleFinally
>005B1930    jmp         005B1908
 005B1932    movzx       eax,byte ptr [ebp-25]
 005B1936    pop         edi
 005B1937    pop         esi
 005B1938    pop         ebx
 005B1939    mov         esp,ebp
 005B193B    pop         ebp
 005B193C    ret
end;*}

//005B1960
procedure TMenuItem.SetAutoHotkeys(Value:TMenuItemAutoFlag);
begin
{*
 005B1960    push        esi
 005B1961    mov         esi,eax
 005B1963    cmp         dl,byte ptr [esi+47];TMenuItem.FAutoHotkeys:TMenuItemAutoFlag
>005B1966    je          005B1974
 005B1968    mov         byte ptr [esi+47],dl;TMenuItem.FAutoHotkeys:TMenuItemAutoFlag
 005B196B    mov         dl,1
 005B196D    mov         eax,esi
 005B196F    mov         ecx,dword ptr [eax]
 005B1971    call        dword ptr [ecx+50];TMenuItem.sub_005B0B00
 005B1974    pop         esi
 005B1975    ret
*}
end;

//005B1978
function TMenuItem.IsLine:Boolean;
begin
{*
 005B1978    push        ebx
 005B1979    mov         ebx,eax
 005B197B    mov         eax,dword ptr [ebx+40];TMenuItem.FCaption:string
 005B197E    mov         edx,5B199C;'-'
 005B1983    call        @UStrEqual
 005B1988    sete        al
 005B198B    pop         ebx
 005B198C    ret
*}
end;

//005B19A0
{*function sub_005B19A0(?:TMenuItem; ?:?):?;
begin
 005B19A0    push        ebx
 005B19A1    push        esi
 005B19A2    push        edi
 005B19A3    push        ebp
 005B19A4    add         esp,0FFFFFFF8
 005B19A7    mov         ebx,edx
 005B19A9    mov         esi,eax
 005B19AB    mov         byte ptr [esp],0
 005B19AF    test        bl,bl
>005B19B1    jne         005B19CC
 005B19B3    test        byte ptr [esi+1C],10
>005B19B7    jne         005B1ADD
 005B19BD    mov         eax,esi
 005B19BF    call        005B1B54
 005B19C4    test        al,al
>005B19C6    je          005B1ADD
 005B19CC    xor         eax,eax
 005B19CE    mov         dword ptr [esp+4],eax
 005B19D2    xor         ebp,ebp
 005B19D4    mov         ebx,dword ptr [esp+4]
 005B19D8    mov         eax,esi
 005B19DA    call        TMenuItem.GetCount
 005B19DF    mov         edi,eax
 005B19E1    dec         edi
 005B19E2    sub         edi,ebx
>005B19E4    jl          005B1A25
 005B19E6    inc         edi
 005B19E7    mov         edx,ebx
 005B19E9    mov         eax,esi
 005B19EB    call        TMenuItem.GetItem
 005B19F0    cmp         byte ptr [eax+4A],0;TMenuItem.FVisible:Boolean
>005B19F4    je          005B1A21
 005B19F6    mov         edx,ebx
 005B19F8    mov         eax,esi
 005B19FA    call        TMenuItem.GetItem
 005B19FF    call        TMenuItem.IsLine
 005B1A04    test        al,al
>005B1A06    je          005B1A1B
 005B1A08    mov         edx,ebx
 005B1A0A    mov         eax,esi
 005B1A0C    call        TMenuItem.GetItem
 005B1A11    mov         byte ptr [eax+4A],0;TMenuItem.FVisible:Boolean
 005B1A15    mov         byte ptr [esp],1
>005B1A19    jmp         005B1A21
 005B1A1B    mov         dword ptr [esp+4],ebx
>005B1A1F    jmp         005B1A25
 005B1A21    inc         ebx
 005B1A22    dec         edi
>005B1A23    jne         005B19E7
 005B1A25    mov         ebx,dword ptr [esp+4]
 005B1A29    mov         eax,esi
 005B1A2B    call        TMenuItem.GetCount
 005B1A30    mov         edi,eax
 005B1A32    dec         edi
 005B1A33    sub         edi,ebx
>005B1A35    jl          005B1A94
 005B1A37    inc         edi
 005B1A38    mov         edx,ebx
 005B1A3A    mov         eax,esi
 005B1A3C    call        TMenuItem.GetItem
 005B1A41    call        TMenuItem.IsLine
 005B1A46    test        al,al
>005B1A48    je          005B1A69
 005B1A4A    test        ebp,ebp
>005B1A4C    je          005B1A5C
 005B1A4E    cmp         byte ptr [ebp+4A],0
>005B1A52    je          005B1A5C
 005B1A54    mov         byte ptr [ebp+4A],0
 005B1A58    mov         byte ptr [esp],1
 005B1A5C    mov         edx,ebx
 005B1A5E    mov         eax,esi
 005B1A60    call        TMenuItem.GetItem
 005B1A65    mov         ebp,eax
>005B1A67    jmp         005B1A90
 005B1A69    mov         edx,ebx
 005B1A6B    mov         eax,esi
 005B1A6D    call        TMenuItem.GetItem
 005B1A72    cmp         byte ptr [eax+4A],0;TMenuItem.FVisible:Boolean
>005B1A76    je          005B1A90
 005B1A78    test        ebp,ebp
>005B1A7A    je          005B1A8A
 005B1A7C    cmp         byte ptr [ebp+4A],0
>005B1A80    jne         005B1A8A
 005B1A82    mov         byte ptr [ebp+4A],1
 005B1A86    mov         byte ptr [esp],1
 005B1A8A    xor         ebp,ebp
 005B1A8C    mov         dword ptr [esp+4],ebx
 005B1A90    inc         ebx
 005B1A91    dec         edi
>005B1A92    jne         005B1A38
 005B1A94    mov         eax,esi
 005B1A96    call        TMenuItem.GetCount
 005B1A9B    mov         ebx,eax
 005B1A9D    dec         ebx
 005B1A9E    mov         edi,dword ptr [esp+4]
 005B1AA2    sub         edi,ebx
>005B1AA4    jg          005B1ADD
 005B1AA6    dec         edi
 005B1AA7    mov         edx,ebx
 005B1AA9    mov         eax,esi
 005B1AAB    call        TMenuItem.GetItem
 005B1AB0    cmp         byte ptr [eax+4A],0;TMenuItem.FVisible:Boolean
>005B1AB4    je          005B1AD9
 005B1AB6    mov         edx,ebx
 005B1AB8    mov         eax,esi
 005B1ABA    call        TMenuItem.GetItem
 005B1ABF    call        TMenuItem.IsLine
 005B1AC4    test        al,al
>005B1AC6    je          005B1ADD
 005B1AC8    mov         edx,ebx
 005B1ACA    mov         eax,esi
 005B1ACC    call        TMenuItem.GetItem
 005B1AD1    mov         byte ptr [eax+4A],0;TMenuItem.FVisible:Boolean
 005B1AD5    mov         byte ptr [esp],1
 005B1AD9    dec         ebx
 005B1ADA    inc         edi
>005B1ADB    jne         005B1AA7
 005B1ADD    movzx       eax,byte ptr [esp]
 005B1AE1    pop         ecx
 005B1AE2    pop         edx
 005B1AE3    pop         ebp
 005B1AE4    pop         edi
 005B1AE5    pop         esi
 005B1AE6    pop         ebx
 005B1AE7    ret
end;*}

//005B1AE8
procedure TMenuItem.SetAutoLineReduction(Value:TMenuItemAutoFlag);
begin
{*
 005B1AE8    push        esi
 005B1AE9    mov         esi,eax
 005B1AEB    cmp         dl,byte ptr [esi+48];TMenuItem.FAutoLineReduction:TMenuItemAutoFlag
>005B1AEE    je          005B1AFC
 005B1AF0    mov         byte ptr [esi+48],dl;TMenuItem.FAutoLineReduction:TMenuItemAutoFlag
 005B1AF3    mov         dl,1
 005B1AF5    mov         eax,esi
 005B1AF7    mov         ecx,dword ptr [eax]
 005B1AF9    call        dword ptr [ecx+50];TMenuItem.sub_005B0B00
 005B1AFC    pop         esi
 005B1AFD    ret
*}
end;

//005B1B00
{*function sub_005B1B00:?;
begin
 005B1B00    push        ebx
 005B1B01    push        esi
 005B1B02    push        0
 005B1B04    call        user32.GetDC
 005B1B09    mov         ebx,eax
 005B1B0B    push        5A
 005B1B0D    push        ebx
 005B1B0E    call        gdi32.GetDeviceCaps
 005B1B13    mov         esi,eax
 005B1B15    push        ebx
 005B1B16    push        0
 005B1B18    call        user32.ReleaseDC
 005B1B1D    mov         eax,esi
 005B1B1F    pop         esi
 005B1B20    pop         ebx
 005B1B21    ret
end;*}

//005B1B24
{*function sub_005B1B24(?:?):?;
begin
 005B1B24    push        ebx
 005B1B25    mov         ebx,eax
 005B1B27    movzx       eax,byte ptr [ebx+47]
 005B1B2B    cmp         al,2
>005B1B2D    jne         005B1B47
 005B1B2F    cmp         dword ptr [ebx+70],0
>005B1B33    je          005B1B47
 005B1B35    mov         eax,dword ptr [ebx+70]
 005B1B38    call        005B1B24
 005B1B3D    and         eax,7F
 005B1B40    movzx       eax,byte ptr [eax+7A1B99]
 005B1B47    and         eax,7F
 005B1B4A    movzx       eax,byte ptr [eax+7A1B9B]
 005B1B51    pop         ebx
 005B1B52    ret
end;*}

//005B1B54
{*function sub_005B1B54(?:?):?;
begin
 005B1B54    push        ebx
 005B1B55    mov         ebx,eax
 005B1B57    movzx       eax,byte ptr [ebx+48]
 005B1B5B    cmp         al,2
>005B1B5D    jne         005B1B77
 005B1B5F    cmp         dword ptr [ebx+70],0
>005B1B63    je          005B1B77
 005B1B65    mov         eax,dword ptr [ebx+70]
 005B1B68    call        005B1B54
 005B1B6D    and         eax,7F
 005B1B70    movzx       eax,byte ptr [eax+7A1B99]
 005B1B77    and         eax,7F
 005B1B7A    movzx       eax,byte ptr [eax+7A1B9B]
 005B1B81    pop         ebx
 005B1B82    ret
end;*}

//005B1B84
constructor TMenu.Create(AOwner:TComponent);
begin
{*
 005B1B84    push        ebp
 005B1B85    mov         ebp,esp
 005B1B87    push        ecx
 005B1B88    push        ebx
 005B1B89    push        esi
 005B1B8A    push        edi
 005B1B8B    test        dl,dl
>005B1B8D    je          005B1B97
 005B1B8F    add         esp,0FFFFFFF0
 005B1B92    call        @ClassCreate
 005B1B97    mov         edi,ecx
 005B1B99    mov         byte ptr [ebp-1],dl
 005B1B9C    mov         ebx,eax
 005B1B9E    mov         ecx,ebx
 005B1BA0    mov         dl,1
 005B1BA2    mov         eax,[005AA664];TMenuItem
 005B1BA7    call        TMenuItem.Create;TMenuItem.Create
 005B1BAC    mov         esi,eax
 005B1BAE    mov         dword ptr [ebx+44],esi;TMenu.FItems:TMenuItem
 005B1BB1    mov         dword ptr [esi+94],ebx;TMenuItem.?f94:TMenu
 005B1BB7    mov         eax,dword ptr [ebx]
 005B1BB9    mov         eax,dword ptr [eax+4C];TMenu.FOwnerDraw:Boolean
 005B1BBC    mov         dword ptr [esi+90],eax;TMenuItem.FOnChange:TMenuChangeEvent
 005B1BC2    mov         dword ptr [esi+7C],ebx;TMenuItem.FMenu:TMenu
 005B1BC5    mov         dl,1
 005B1BC7    mov         eax,[005A6CE0];TChangeLink
 005B1BCC    call        TChangeLink.Create;TChangeLink.Create
 005B1BD1    mov         esi,eax
 005B1BD3    mov         dword ptr [ebx+50],esi;TMenu.FImageChangeLink:TChangeLink
 005B1BD6    mov         dword ptr [esi+14],ebx;TChangeLink.?f14:TCustomActionList
 005B1BD9    mov         dword ptr [esi+10],5B281C;TChangeLink.FOnChange:TNotifyEvent
 005B1BE0    mov         byte ptr [ebx+4D],1;TMenu.FParentBiDiMode:Boolean
 005B1BE4    mov         ecx,edi
 005B1BE6    xor         edx,edx
 005B1BE8    mov         eax,ebx
 005B1BEA    call        TComponent.Create
 005B1BEF    mov         eax,dword ptr [ebx+44];TMenu.FItems:TMenuItem
 005B1BF2    mov         byte ptr [eax+47],0;TMenuItem.FAutoHotkeys:TMenuItemAutoFlag
 005B1BF6    mov         byte ptr [eax+48],0;TMenuItem.FAutoLineReduction:TMenuItemAutoFlag
 005B1BFA    mov         eax,ebx
 005B1BFC    call        TMenu.ParentBiDiModeChanged
 005B1C01    mov         eax,ebx
 005B1C03    cmp         byte ptr [ebp-1],0
>005B1C07    je          005B1C18
 005B1C09    call        @AfterConstruction
 005B1C0E    pop         dword ptr fs:[0]
 005B1C15    add         esp,0C
 005B1C18    mov         eax,ebx
 005B1C1A    pop         edi
 005B1C1B    pop         esi
 005B1C1C    pop         ebx
 005B1C1D    pop         ecx
 005B1C1E    pop         ebp
 005B1C1F    ret
*}
end;

//005B1C20
procedure TMenu.CreateMenuItem;
begin
{*
 005B1C20    mov         ecx,eax
 005B1C22    mov         dl,1
 005B1C24    mov         eax,[005AA664];TMenuItem
 005B1C29    call        TMenuItem.Create;TMenuItem.Create
 005B1C2E    ret
*}
end;

//005B1C30
destructor TMenu.Destroy();
begin
{*
 005B1C30    push        ebx
 005B1C31    push        esi
 005B1C32    call        @BeforeDestruction
 005B1C37    mov         ebx,edx
 005B1C39    mov         esi,eax
 005B1C3B    mov         eax,dword ptr [esi+44]
 005B1C3E    call        TObject.Free
 005B1C43    mov         eax,dword ptr [esi+50]
 005B1C46    call        TObject.Free
 005B1C4B    mov         dl,0FC
 005B1C4D    and         dl,bl
 005B1C4F    mov         eax,esi
 005B1C51    call        TComponent.Destroy
 005B1C56    test        bl,bl
>005B1C58    jle         005B1C61
 005B1C5A    mov         eax,esi
 005B1C5C    call        @ClassDestroy
 005B1C61    pop         esi
 005B1C62    pop         ebx
 005B1C63    ret
*}
end;

//005B1C64
{*procedure TMenu.GetChildren(Root:TComponent; Proc:TGetChildProc; ?:?);
begin
 005B1C64    push        ebp
 005B1C65    mov         ebp,esp
 005B1C67    push        esi
 005B1C68    push        edi
 005B1C69    mov         edi,edx
 005B1C6B    mov         esi,eax
 005B1C6D    push        dword ptr [ebp+0C]
 005B1C70    push        dword ptr [ebp+8]
 005B1C73    mov         edx,edi
 005B1C75    mov         eax,dword ptr [esi+44];TMenu.FItems:TMenuItem
 005B1C78    mov         si,0FFFD
 005B1C7C    call        @CallDynaInst;TMenuItem.GetChildren
 005B1C81    pop         edi
 005B1C82    pop         esi
 005B1C83    pop         ebp
 005B1C84    ret         8
end;*}

//005B1C88
procedure sub_005B1C88;
begin
{*
 005B1C88    mov         eax,dword ptr [eax+44];TMenu.FItems:TMenuItem
 005B1C8B    call        005AD984
 005B1C90    ret
*}
end;

//005B1C94
{*procedure TMenu.sub_0049ECB8(?:?; ?:?);
begin
 005B1C94    push        esi
 005B1C95    push        edi
 005B1C96    push        ebp
 005B1C97    mov         ebp,ecx
 005B1C99    mov         edi,edx
 005B1C9B    mov         esi,eax
 005B1C9D    mov         ecx,ebp
 005B1C9F    mov         edx,edi
 005B1CA1    mov         eax,dword ptr [esi+44];TMenu.FItems:TMenuItem
 005B1CA4    mov         si,0FFF8
 005B1CA8    call        @CallDynaInst;TMenuItem.SetChildOrder
 005B1CAD    pop         ebp
 005B1CAE    pop         edi
 005B1CAF    pop         esi
 005B1CB0    ret
end;*}

//005B1CB4
procedure sub_005B1CB4(?:TMainMenu);
begin
{*
 005B1CB4    mov         edx,dword ptr [eax+44]
 005B1CB7    mov         ecx,dword ptr [edx+74]
 005B1CBA    mov         eax,edx
 005B1CBC    mov         edx,dword ptr ds:[5B10D8];TMenuUpdater
 005B1CC2    xchg        ecx,edx
 005B1CC4    xchg        eax,ecx
 005B1CC5    call        TMenuUpdater.DoIterateMenus
 005B1CCA    ret
*}
end;

//005B1CCC
{*function sub_005B1CCC(?:TMenuItem; ?:?):?;
begin
 005B1CCC    push        ebp
 005B1CCD    mov         ebp,esp
 005B1CCF    push        ecx
 005B1CD0    push        ebx
 005B1CD1    push        esi
 005B1CD2    push        edi
 005B1CD3    mov         ebx,eax
 005B1CD5    mov         byte ptr [ebp-1],0
 005B1CD9    mov         eax,dword ptr [ebp+8]
 005B1CDC    cmp         byte ptr [eax-1],0
>005B1CE0    jne         005B1CF0
 005B1CE2    mov         eax,dword ptr [ebp+8]
 005B1CE5    mov         eax,dword ptr [eax-8]
 005B1CE8    movzx       edx,word ptr [ebx+5C]
 005B1CEC    cmp         eax,edx
>005B1CEE    je          005B1D1E
 005B1CF0    mov         eax,dword ptr [ebp+8]
 005B1CF3    cmp         byte ptr [eax-1],1
>005B1CF7    jne         005B1D07
 005B1CF9    mov         eax,dword ptr [ebp+8]
 005B1CFC    mov         eax,dword ptr [eax-8]
 005B1CFF    cmp         eax,dword ptr [ebx+0BC]
>005B1D05    je          005B1D1E
 005B1D07    mov         eax,dword ptr [ebp+8]
 005B1D0A    cmp         byte ptr [eax-1],2
>005B1D0E    jne         005B1D2A
 005B1D10    mov         eax,dword ptr [ebp+8]
 005B1D13    mov         eax,dword ptr [eax-8]
 005B1D16    movzx       edx,word ptr [ebx+6C]
 005B1D1A    cmp         eax,edx
>005B1D1C    jne         005B1D2A
 005B1D1E    mov         eax,dword ptr [ebp+8]
 005B1D21    mov         dword ptr [eax-0C],ebx
 005B1D24    mov         byte ptr [ebp-1],1
>005B1D28    jmp         005B1D5C
 005B1D2A    mov         eax,ebx
 005B1D2C    call        TMenuItem.GetCount
 005B1D31    mov         esi,eax
 005B1D33    dec         esi
 005B1D34    test        esi,esi
>005B1D36    jl          005B1D5C
 005B1D38    inc         esi
 005B1D39    xor         edi,edi
 005B1D3B    mov         eax,dword ptr [ebp+8]
 005B1D3E    push        eax
 005B1D3F    mov         edx,edi
 005B1D41    mov         eax,ebx
 005B1D43    call        TMenuItem.GetItem
 005B1D48    call        005B1CCC
 005B1D4D    pop         ecx
 005B1D4E    test        al,al
>005B1D50    je          005B1D58
 005B1D52    mov         byte ptr [ebp-1],1
>005B1D56    jmp         005B1D5C
 005B1D58    inc         edi
 005B1D59    dec         esi
>005B1D5A    jne         005B1D3B
 005B1D5C    movzx       eax,byte ptr [ebp-1]
 005B1D60    pop         edi
 005B1D61    pop         esi
 005B1D62    pop         ebx
 005B1D63    pop         ecx
 005B1D64    pop         ebp
 005B1D65    ret
end;*}

//005B1D68
function TMenu.FindItem(Value:NativeUInt; Kind:TFindItemKind):TMenuItem;
begin
{*
 005B1D68    push        ebp
 005B1D69    mov         ebp,esp
 005B1D6B    add         esp,0FFFFFFF4
 005B1D6E    push        ebx
 005B1D6F    mov         byte ptr [ebp-1],cl
 005B1D72    mov         dword ptr [ebp-8],edx
 005B1D75    xor         edx,edx
 005B1D77    mov         dword ptr [ebp-0C],edx
 005B1D7A    mov         ecx,5B1CCC;sub_005B1CCC
 005B1D7F    mov         edx,dword ptr [eax+44];TMenu.FItems:TMenuItem
 005B1D82    mov         ebx,dword ptr [edx+74];TMenuItem.FMerged:TMenuItem
 005B1D85    mov         eax,edx
 005B1D87    xchg        eax,ecx
 005B1D88    mov         edx,ebx
 005B1D8A    call        IterateMenus
 005B1D8F    mov         eax,dword ptr [ebp-0C]
 005B1D92    pop         ebx
 005B1D93    mov         esp,ebp
 005B1D95    pop         ebp
 005B1D96    ret
*}
end;

//005B1D98
function TMenu.GetHelpContext(Value:NativeUInt; ByCommand:Boolean):THelpContext;
begin
{*
 005B1D98    push        ebx
 005B1D99    push        esi
 005B1D9A    push        edi
 005B1D9B    push        ebp
 005B1D9C    push        ecx
 005B1D9D    mov         byte ptr [esp],cl
 005B1DA0    mov         ebp,edx
 005B1DA2    mov         esi,eax
 005B1DA4    xor         edi,edi
 005B1DA6    mov         bl,1
 005B1DA8    cmp         byte ptr [esp],0
>005B1DAC    je          005B1DB0
 005B1DAE    xor         ebx,ebx
 005B1DB0    cmp         bl,1
>005B1DB3    jne         005B1DDC
 005B1DB5    mov         eax,esi
 005B1DB7    mov         edx,dword ptr ds:[5AC178];TPopupMenu
 005B1DBD    call        @IsClass
 005B1DC2    test        al,al
>005B1DC4    je          005B1DDC
 005B1DC6    mov         eax,esi
 005B1DC8    mov         edx,dword ptr [eax]
 005B1DCA    call        dword ptr [edx+48];TMenu.sub_005B1C88
 005B1DCD    cmp         ebp,eax
>005B1DCF    jne         005B1DDC
 005B1DD1    mov         eax,esi
 005B1DD3    call        TPopupMenu.GetHelpContext
 005B1DD8    mov         edi,eax
>005B1DDA    jmp         005B1DFD
 005B1DDC    mov         ecx,ebx
 005B1DDE    mov         edx,ebp
 005B1DE0    mov         eax,esi
 005B1DE2    call        TMenu.FindItem
>005B1DE7    jmp         005B1DEC
 005B1DE9    mov         eax,dword ptr [eax+70];TMenuItem.FParent:TMenuItem
 005B1DEC    test        eax,eax
>005B1DEE    je          005B1DF6
 005B1DF0    cmp         dword ptr [eax+60],0;TMenuItem.FHelpContext:THelpContext
>005B1DF4    je          005B1DE9
 005B1DF6    test        eax,eax
>005B1DF8    je          005B1DFD
 005B1DFA    mov         edi,dword ptr [eax+60];TMenuItem.FHelpContext:THelpContext
 005B1DFD    mov         eax,edi
 005B1DFF    pop         edx
 005B1E00    pop         ebp
 005B1E01    pop         edi
 005B1E02    pop         esi
 005B1E03    pop         ebx
 005B1E04    ret
*}
end;

//005B1E08
function TMenu.DispatchCommand(ACommand:Word):Boolean;
begin
{*
 005B1E08    push        ebx
 005B1E09    push        esi
 005B1E0A    xor         ebx,ebx
 005B1E0C    movzx       edx,dx
 005B1E0F    xor         ecx,ecx
 005B1E11    call        TMenu.FindItem
 005B1E16    mov         esi,eax
 005B1E18    test        esi,esi
>005B1E1A    je          005B1E25
 005B1E1C    mov         eax,esi
 005B1E1E    mov         edx,dword ptr [eax]
 005B1E20    call        dword ptr [edx+58];TMenuItem.Click
 005B1E23    mov         bl,1
 005B1E25    mov         eax,ebx
 005B1E27    pop         esi
 005B1E28    pop         ebx
 005B1E29    ret
*}
end;

//005B1E2C
function TMenu.DispatchPopup(AHandle:HMENU):Boolean;
begin
{*
 005B1E2C    push        ebx
 005B1E2D    push        esi
 005B1E2E    push        edi
 005B1E2F    mov         esi,eax
 005B1E31    xor         ebx,ebx
 005B1E33    mov         cl,1
 005B1E35    mov         eax,esi
 005B1E37    call        TMenu.FindItem
 005B1E3C    mov         edi,eax
 005B1E3E    test        edi,edi
>005B1E40    je          005B1EC6
 005B1E46    test        byte ptr [edi+1C],10;TMenuItem.FComponentState:TComponentState
>005B1E4A    jne         005B1E53
 005B1E4C    mov         eax,edi
 005B1E4E    call        005B0C6C
 005B1E53    mov         eax,edi
 005B1E55    mov         edx,dword ptr [eax]
 005B1E57    call        dword ptr [edx+58];TMenuItem.Click
 005B1E5A    xor         edx,edx
 005B1E5C    mov         eax,edi
 005B1E5E    call        005B1460
 005B1E63    mov         ebx,eax
 005B1E65    xor         edx,edx
 005B1E67    mov         eax,edi
 005B1E69    call        005B19A0
 005B1E6E    or          bl,al
 005B1E70    test        bl,bl
>005B1E72    je          005B1E7B
 005B1E74    mov         eax,edi
 005B1E76    call        005AD84C
 005B1E7B    mov         eax,[007C4A18];^Application:TApplication
 005B1E80    mov         eax,dword ptr [eax]
 005B1E82    mov         eax,dword ptr [eax+58];TApplication.FMainForm:TForm
 005B1E85    test        eax,eax
>005B1E87    je          005B1EC2
 005B1E89    mov         ebx,eax
 005B1E8B    cmp         byte ptr [ebx+2C2],2;TForm.FFormStyle:TFormStyle
>005B1E92    jne         005B1EC2
 005B1E94    cmp         edi,dword ptr [ebx+2E4];TForm.FWindowMenu:TMenuItem
>005B1E9A    jne         005B1EC2
 005B1E9C    push        0
 005B1E9E    push        0
 005B1EA0    push        234
 005B1EA5    mov         eax,dword ptr [ebx+3B4];TForm.FClientHandle:HWND
 005B1EAB    push        eax
 005B1EAC    call        user32.SendMessageW
 005B1EB1    test        eax,eax
>005B1EB3    je          005B1EC2
 005B1EB5    mov         eax,ebx
 005B1EB7    call        TWinControl.GetHandle
 005B1EBC    push        eax
 005B1EBD    call        user32.DrawMenuBar
 005B1EC2    mov         bl,1
>005B1EC4    jmp         005B1EE5
 005B1EC6    test        byte ptr [esi+1C],10;TMenu.FComponentState:TComponentState
>005B1ECA    jne         005B1EE5
 005B1ECC    mov         eax,esi
 005B1ECE    mov         edx,dword ptr ds:[5AC178];TPopupMenu
 005B1ED4    call        @IsClass
 005B1ED9    test        al,al
>005B1EDB    je          005B1EE5
 005B1EDD    mov         eax,dword ptr [esi+44];TMenu.FItems:TMenuItem
 005B1EE0    call        005B0C6C
 005B1EE5    mov         eax,ebx
 005B1EE7    pop         edi
 005B1EE8    pop         esi
 005B1EE9    pop         ebx
 005B1EEA    ret
*}
end;

//005B1EEC
{*function sub_005B1EEC(?:?):?;
begin
 005B1EEC    cmp         byte ptr [eax+4C],0
>005B1EF0    jne         005B1EFB
 005B1EF2    cmp         dword ptr [eax+54],0
>005B1EF6    jne         005B1EFB
 005B1EF8    xor         eax,eax
 005B1EFA    ret
 005B1EFB    mov         al,1
 005B1EFD    ret
end;*}

//005B1F00
function IsWOW64:BOOL;
begin
{*
 005B1F00    push        ebp
 005B1F01    mov         ebp,esp
 005B1F03    push        ecx
 005B1F04    xor         eax,eax
 005B1F06    mov         dword ptr [ebp-4],eax
 005B1F09    push        5B1F38
 005B1F0E    push        5B1F58
 005B1F13    call        kernel32.GetModuleHandleW
 005B1F18    push        eax
 005B1F19    call        GetProcAddress
 005B1F1E    test        eax,eax
>005B1F20    je          005B1F31
 005B1F22    lea         eax,[ebp-4]
 005B1F25    push        eax
 005B1F26    call        kernel32.GetCurrentProcess
 005B1F2B    push        eax
 005B1F2C    call        IsWow64Process
 005B1F31    mov         eax,dword ptr [ebp-4]
 005B1F34    pop         ecx
 005B1F35    pop         ebp
 005B1F36    ret
*}
end;

//005B1F74
procedure GetAltGRStatus;
begin
{*
 005B1F74    push        ebp
 005B1F75    mov         ebp,esp
 005B1F77    add         esp,0FFFFFFD8
 005B1F7A    push        ebx
 005B1F7B    xor         eax,eax
 005B1F7D    mov         dword ptr [ebp-24],eax
 005B1F80    mov         dword ptr [ebp-28],eax
 005B1F83    mov         dword ptr [ebp-4],eax
 005B1F86    xor         eax,eax
 005B1F88    push        ebp
 005B1F89    push        5B20D3
 005B1F8E    push        dword ptr fs:[eax]
 005B1F91    mov         dword ptr fs:[eax],esp
 005B1F94    mov         byte ptr ds:[7A1C90],0
 005B1F9B    mov         word ptr [ebp-20],0
 005B1FA1    lea         eax,[ebp-20]
 005B1FA4    push        eax
 005B1FA5    call        user32.GetKeyboardLayoutNameW
 005B1FAA    mov         dl,1
 005B1FAC    mov         eax,[004B67E8];TRegistry
 005B1FB1    call        TRegistry.Create
 005B1FB6    mov         dword ptr [ebp-0C],eax
 005B1FB9    xor         edx,edx
 005B1FBB    push        ebp
 005B1FBC    push        5B20A9
 005B1FC1    push        dword ptr fs:[edx]
 005B1FC4    mov         dword ptr fs:[edx],esp
 005B1FC7    mov         edx,80000002
 005B1FCC    mov         eax,dword ptr [ebp-0C]
 005B1FCF    call        TRegistry.SetRootKey
 005B1FD4    lea         eax,[ebp-28]
 005B1FD7    lea         edx,[ebp-20]
 005B1FDA    mov         ecx,0A
 005B1FDF    call        @UStrFromWArray
 005B1FE4    mov         ecx,dword ptr [ebp-28]
 005B1FE7    lea         eax,[ebp-24]
 005B1FEA    mov         edx,5B20EC;'\SYSTEM\CurrentControlSet\Control\Keyboard Layouts\'
 005B1FEF    call        @UStrCat3
 005B1FF4    mov         edx,dword ptr [ebp-24]
 005B1FF7    mov         eax,dword ptr [ebp-0C]
 005B1FFA    call        TRegistry.OpenKeyReadOnly
 005B1FFF    test        al,al
>005B2001    je          005B2093
 005B2007    lea         ecx,[ebp-4]
 005B200A    mov         edx,5B2160;'Layout File'
 005B200F    mov         eax,dword ptr [ebp-0C]
 005B2012    call        TRegistry.ReadString
 005B2017    mov         edx,8000
 005B201C    mov         eax,dword ptr [ebp-4]
 005B201F    call        SafeLoadLibrary
 005B2024    mov         dword ptr [ebp-8],eax
 005B2027    cmp         dword ptr [ebp-8],0
>005B202B    je          005B2093
 005B202D    xor         edx,edx
 005B202F    push        ebp
 005B2030    push        5B208C
 005B2035    push        dword ptr fs:[edx]
 005B2038    mov         dword ptr fs:[edx],esp
 005B203B    push        5B2178
 005B2040    mov         eax,dword ptr [ebp-8]
 005B2043    push        eax
 005B2044    call        GetProcAddress
 005B2049    test        eax,eax
>005B204B    je          005B2075
 005B204D    mov         ebx,eax
 005B204F    call        ebx
 005B2051    mov         ebx,eax
 005B2053    test        ebx,ebx
>005B2055    je          005B2075
 005B2057    call        IsWOW64
 005B205C    test        eax,eax
>005B205E    je          005B2065
 005B2060    mov         eax,dword ptr [ebx+50]
>005B2063    jmp         005B2068
 005B2065    mov         eax,dword ptr [ebx+28]
 005B2068    and         eax,1
 005B206B    cmp         eax,1
 005B206E    sete        byte ptr ds:[7A1C90]
 005B2075    xor         eax,eax
 005B2077    pop         edx
 005B2078    pop         ecx
 005B2079    pop         ecx
 005B207A    mov         dword ptr fs:[eax],edx
 005B207D    push        5B2093
 005B2082    mov         eax,dword ptr [ebp-8]
 005B2085    push        eax
 005B2086    call        kernel32.FreeLibrary
 005B208B    ret
>005B208C    jmp         @HandleFinally
>005B2091    jmp         005B2082
 005B2093    xor         eax,eax
 005B2095    pop         edx
 005B2096    pop         ecx
 005B2097    pop         ecx
 005B2098    mov         dword ptr fs:[eax],edx
 005B209B    push        5B20B0
 005B20A0    mov         eax,dword ptr [ebp-0C]
 005B20A3    call        TObject.Free
 005B20A8    ret
>005B20A9    jmp         @HandleFinally
>005B20AE    jmp         005B20A0
 005B20B0    xor         eax,eax
 005B20B2    pop         edx
 005B20B3    pop         ecx
 005B20B4    pop         ecx
 005B20B5    mov         dword ptr fs:[eax],edx
 005B20B8    push        5B20DA
 005B20BD    lea         eax,[ebp-28]
 005B20C0    mov         edx,2
 005B20C5    call        @UStrArrayClr
 005B20CA    lea         eax,[ebp-4]
 005B20CD    call        @UStrClr
 005B20D2    ret
>005B20D3    jmp         @HandleFinally
>005B20D8    jmp         005B20BD
 005B20DA    pop         ebx
 005B20DB    mov         esp,ebp
 005B20DD    pop         ebp
 005B20DE    ret
*}
end;

//005B21A0
function IsAltGRPressed:Boolean;
begin
{*
 005B21A0    push        ebx
 005B21A1    xor         ebx,ebx
 005B21A3    push        0A5
 005B21A8    call        user32.GetKeyState
 005B21AD    test        ax,ax
>005B21B0    jge         005B21D5
 005B21B2    push        0
 005B21B4    call        user32.GetKeyboardLayout
 005B21B9    mov         ebx,eax
 005B21BB    cmp         ebx,dword ptr ds:[7A1C8C]
>005B21C1    je          005B21CE
 005B21C3    call        GetAltGRStatus
 005B21C8    mov         dword ptr ds:[7A1C8C],ebx
 005B21CE    movzx       ebx,byte ptr ds:[7A1C90]
 005B21D5    mov         eax,ebx
 005B21D7    pop         ebx
 005B21D8    ret
*}
end;

//005B21DC
function ShortCutFromMessage(Message:Messages.TWMKey):TShortCut;
begin
{*
 005B21DC    push        ebx
 005B21DD    push        esi
 005B21DE    push        edi
 005B21DF    add         esp,0FFFFFFF0
 005B21E2    mov         esi,eax
 005B21E4    lea         edi,[esp]
 005B21E7    movs        dword ptr [edi],dword ptr [esi]
 005B21E8    movs        dword ptr [edi],dword ptr [esi]
 005B21E9    movs        dword ptr [edi],dword ptr [esi]
 005B21EA    movs        dword ptr [edi],dword ptr [esi]
 005B21EB    movzx       ebx,byte ptr [esp+4]
 005B21F0    test        bx,bx
>005B21F3    je          005B2223
 005B21F5    push        10
 005B21F7    call        user32.GetKeyState
 005B21FC    test        ax,ax
>005B21FF    jge         005B2206
 005B2201    add         bx,2000
 005B2206    push        11
 005B2208    call        user32.GetKeyState
 005B220D    test        ax,ax
>005B2210    jge         005B2217
 005B2212    add         bx,4000
 005B2217    test        byte ptr [esp+0B],20
>005B221C    je          005B2223
 005B221E    add         bx,8000
 005B2223    mov         eax,ebx
 005B2225    add         esp,10
 005B2228    pop         edi
 005B2229    pop         esi
 005B222A    pop         ebx
 005B222B    ret
*}
end;

//005B222C
{*function sub_005B222C:?;
begin
>005B222C    jmp         005B2232
end;*}

//005B223C
{*function sub_005B223C(?:Byte; ?:?; ?:?):?;
begin
 005B223C    push        ebp
 005B223D    mov         ebp,esp
 005B223F    add         esp,0FFFFFFF8
 005B2242    push        ebx
 005B2243    push        esi
 005B2244    push        edi
 005B2245    mov         esi,edx
 005B2247    mov         ebx,eax
 005B2249    mov         byte ptr [ebp-1],1
 005B224D    mov         eax,dword ptr [ebx]
 005B224F    mov         eax,dword ptr [eax+70]
 005B2252    mov         dword ptr [ebp-8],eax
 005B2255    cmp         dword ptr [ebp-8],0
>005B2259    je          005B226E
 005B225B    mov         eax,dword ptr [ebp+8]
 005B225E    push        eax
 005B225F    lea         edx,[esi+1]
 005B2262    lea         eax,[ebp-8]
 005B2265    call        005B223C
 005B226A    pop         ecx
 005B226B    mov         byte ptr [ebp-1],al
 005B226E    movzx       eax,byte ptr [ebp-1]
 005B2272    test        al,al
>005B2274    je          005B2384
 005B227A    sub         al,3
>005B227C    je          005B2384
 005B2282    cmp         byte ptr [ebp-1],2
>005B2286    jne         005B22FE
 005B2288    mov         eax,dword ptr [ebp+8]
 005B228B    cmp         dword ptr [eax-4],0
>005B228F    je          005B22A4
 005B2291    mov         eax,dword ptr [ebp+8]
 005B2294    mov         eax,dword ptr [eax-4]
 005B2297    movzx       eax,word ptr [eax+6C]
 005B229B    mov         edx,dword ptr [ebp+8]
 005B229E    cmp         ax,word ptr [edx-6]
>005B22A2    je          005B22D0
 005B22A4    mov         eax,dword ptr [ebp+8]
 005B22A7    movzx       edx,word ptr [eax-6]
 005B22AB    mov         eax,dword ptr [ebp+8]
 005B22AE    mov         eax,dword ptr [eax-0C]
 005B22B1    mov         cl,2
 005B22B3    call        TMenu.FindItem
 005B22B8    mov         edx,dword ptr [ebp+8]
 005B22BB    mov         dword ptr [edx-4],eax
 005B22BE    mov         eax,dword ptr [ebp+8]
 005B22C1    cmp         dword ptr [eax-4],0
>005B22C5    jne         005B22D0
 005B22C7    mov         byte ptr [ebp-1],3
>005B22CB    jmp         005B2384
 005B22D0    mov         eax,dword ptr [ebp+8]
 005B22D3    mov         eax,dword ptr [eax-4]
 005B22D6    mov         edx,esi
 005B22D8    call        005B222C
 005B22DD    mov         dword ptr [ebx],eax
 005B22DF    cmp         dword ptr [ebx],0
>005B22E2    je          005B2384
 005B22E8    mov         eax,dword ptr [ebx]
 005B22EA    mov         eax,dword ptr [eax+70]
 005B22ED    cmp         eax,dword ptr [ebp-8]
>005B22F0    jne         005B2384
 005B22F6    test        esi,esi
>005B22F8    jne         005B22FE
 005B22FA    mov         byte ptr [ebp-1],1
 005B22FE    mov         eax,dword ptr [ebx]
 005B2300    cmp         byte ptr [eax+45],0
>005B2304    je          005B2380
 005B2306    xor         eax,eax
 005B2308    push        ebp
 005B2309    push        5B2362
 005B230E    push        dword ptr fs:[eax]
 005B2311    mov         dword ptr fs:[eax],esp
 005B2314    mov         eax,dword ptr [ebp+8]
 005B2317    mov         eax,dword ptr [eax-0C]
 005B231A    test        byte ptr [eax+1C],10
>005B231E    jne         005B2327
 005B2320    mov         eax,dword ptr [ebx]
 005B2322    call        005B0C6C
 005B2327    mov         eax,dword ptr [ebx]
 005B2329    mov         edx,dword ptr [eax]
 005B232B    call        dword ptr [edx+58]
 005B232E    mov         eax,dword ptr [ebp+8]
 005B2331    cmp         dword ptr [eax-4],0
>005B2335    je          005B2354
 005B2337    mov         eax,dword ptr [ebx]
 005B2339    mov         edx,dword ptr [ebp+8]
 005B233C    cmp         eax,dword ptr [edx-4]
>005B233F    je          005B2358
 005B2341    mov         eax,dword ptr [ebp+8]
 005B2344    mov         eax,dword ptr [eax-4]
 005B2347    movzx       eax,word ptr [eax+6C]
 005B234B    mov         edx,dword ptr [ebp+8]
 005B234E    cmp         ax,word ptr [edx-6]
>005B2352    je          005B2358
 005B2354    mov         byte ptr [ebp-1],2
 005B2358    xor         eax,eax
 005B235A    pop         edx
 005B235B    pop         ecx
 005B235C    pop         ecx
 005B235D    mov         dword ptr fs:[eax],edx
>005B2360    jmp         005B2384
>005B2362    jmp         @HandleAnyException
 005B2367    mov         eax,dword ptr [ebp+8]
 005B236A    mov         edx,dword ptr [eax-0C]
 005B236D    mov         eax,[007C4A18];^Application:TApplication
 005B2372    mov         eax,dword ptr [eax]
 005B2374    call        TApplication.HandleException
 005B2379    call        @DoneExcept
>005B237E    jmp         005B2384
 005B2380    mov         byte ptr [ebp-1],0
 005B2384    movzx       eax,byte ptr [ebp-1]
 005B2388    pop         edi
 005B2389    pop         esi
 005B238A    pop         ebx
 005B238B    pop         ecx
 005B238C    pop         ecx
 005B238D    pop         ebp
 005B238E    ret
end;*}

//005B2390
procedure TMenu.IsShortCut(var Message:TWMKey);
begin
{*
 005B2390    push        ebp
 005B2391    mov         ebp,esp
 005B2393    add         esp,0FFFFFFEC
 005B2396    push        ebx
 005B2397    push        esi
 005B2398    mov         esi,edx
 005B239A    mov         dword ptr [ebp-0C],eax
 005B239D    xor         ebx,ebx
 005B239F    call        IsAltGRPressed
 005B23A4    test        al,al
>005B23A6    jne         005B247C
 005B23AC    mov         eax,esi
 005B23AE    call        ShortCutFromMessage
 005B23B3    mov         word ptr [ebp-6],ax
 005B23B7    mov         eax,dword ptr [ebp-0C]
 005B23BA    mov         eax,dword ptr [eax+44];TMenu.FItems:TMenuItem
 005B23BD    mov         dword ptr [ebp-14],eax
 005B23C0    lea         edx,[ebp-14]
 005B23C3    mov         eax,[007CA77C];gvar_007CA77C
 005B23C8    call        TOrderedList.Push
 005B23CD    xor         edx,edx
 005B23CF    push        ebp
 005B23D0    push        5B2463
 005B23D5    push        dword ptr fs:[edx]
 005B23D8    mov         dword ptr fs:[edx],esp
 005B23DB    mov         byte ptr [ebp-0D],0
 005B23DF    movzx       edx,word ptr [ebp-6]
 005B23E3    mov         cl,2
 005B23E5    mov         eax,dword ptr [ebp-0C]
 005B23E8    call        TMenu.FindItem
 005B23ED    mov         dword ptr [ebp-4],eax
 005B23F0    cmp         dword ptr [ebp-4],0
>005B23F4    je          005B243F
 005B23F6    lea         edx,[ebp-4]
 005B23F9    mov         eax,[007CA77C];gvar_007CA77C
 005B23FE    call        TOrderedList.Push
 005B2403    xor         edx,edx
 005B2405    push        ebp
 005B2406    push        5B2438
 005B240B    push        dword ptr fs:[edx]
 005B240E    mov         dword ptr fs:[edx],esp
 005B2411    push        ebp
 005B2412    lea         eax,[ebp-4]
 005B2415    xor         edx,edx
 005B2417    call        005B223C
 005B241C    pop         ecx
 005B241D    mov         byte ptr [ebp-0D],al
 005B2420    xor         eax,eax
 005B2422    pop         edx
 005B2423    pop         ecx
 005B2424    pop         ecx
 005B2425    mov         dword ptr fs:[eax],edx
 005B2428    push        5B243F
 005B242D    mov         eax,[007CA77C];gvar_007CA77C
 005B2432    mov         edx,dword ptr [eax]
 005B2434    call        dword ptr [edx+4]
 005B2437    ret
>005B2438    jmp         @HandleFinally
>005B243D    jmp         005B242D
 005B243F    cmp         dword ptr [ebp-14],0
>005B2443    je          005B244B
 005B2445    cmp         byte ptr [ebp-0D],2
>005B2449    je          005B23DB
 005B244B    xor         eax,eax
 005B244D    pop         edx
 005B244E    pop         ecx
 005B244F    pop         ecx
 005B2450    mov         dword ptr fs:[eax],edx
 005B2453    push        5B246A
 005B2458    mov         eax,[007CA77C];gvar_007CA77C
 005B245D    mov         edx,dword ptr [eax]
 005B245F    call        dword ptr [edx+4]
 005B2462    ret
>005B2463    jmp         @HandleFinally
>005B2468    jmp         005B2458
 005B246A    cmp         dword ptr [ebp-4],0
>005B246E    jne         005B247A
 005B2470    cmp         dword ptr [ebp-14],0
>005B2474    je          005B247A
 005B2476    xor         ebx,ebx
>005B2478    jmp         005B247C
 005B247A    mov         bl,1
 005B247C    mov         eax,ebx
 005B247E    pop         esi
 005B247F    pop         ebx
 005B2480    mov         esp,ebp
 005B2482    pop         ebp
 005B2483    ret
*}
end;

//005B2484
procedure TMainMenu.IsStoredBiDiMode(Value:TBiDiMode);
begin
{*
 005B2484    movzx       eax,byte ptr [eax+4D];TMainMenu.FParentBiDiMode:Boolean
 005B2488    xor         al,1
 005B248A    ret
*}
end;

//005B248C
procedure sub_005B248C(?:TMainMenu);
begin
{*
 005B248C    push        ebp
 005B248D    mov         ebp,esp
 005B248F    add         esp,0FFFFFF30
 005B2495    push        ebx
 005B2496    push        esi
 005B2497    mov         ebx,eax
 005B2499    mov         eax,[007C4EF4];^gvar_007C7CB8:Cardinal
 005B249E    cmp         byte ptr [eax+0D],0
>005B24A2    je          005B258C
 005B24A8    cmp         dword ptr [ebx+48],0
>005B24AC    je          005B258C
 005B24B2    mov         eax,ebx
 005B24B4    mov         edx,dword ptr [eax]
 005B24B6    call        dword ptr [edx+48]
 005B24B9    mov         esi,eax
 005B24BB    mov         dword ptr [ebp-2C],10
 005B24C2    mov         dword ptr [ebp-8],50
 005B24C9    mov         eax,[007C4EC4];^gvar_0079EDDC
 005B24CE    cmp         dword ptr [eax],1
>005B24D1    jne         005B24DD
 005B24D3    mov         eax,[007C4590];^gvar_0079EDE0
 005B24D8    cmp         dword ptr [eax],4
>005B24DB    jle         005B24E6
 005B24DD    mov         dword ptr [ebp-30],30
>005B24E4    jmp         005B24ED
 005B24E6    mov         dword ptr [ebp-30],2C
 005B24ED    lea         eax,[ebp-0D0]
 005B24F3    mov         dword ptr [ebp-0C],eax
 005B24F6    xor         eax,eax
 005B24F8    push        ebp
 005B24F9    push        5B2585
 005B24FE    push        dword ptr fs:[eax]
 005B2501    mov         dword ptr fs:[eax],esp
 005B2504    lea         eax,[ebp-30]
 005B2507    push        eax
 005B2508    push        0FF
 005B250A    push        0
 005B250C    push        esi
 005B250D    call        user32.GetMenuItemInfoW
 005B2512    test        eax,eax
>005B2514    je          005B2577
 005B2516    mov         eax,ebx
 005B2518    call        TMenu.IsRightToLeft
 005B251D    mov         edx,dword ptr [ebp-28]
 005B2520    and         edx,6000
 005B2526    cmp         edx,1
 005B2529    sbb         edx,edx
 005B252B    inc         edx
 005B252C    cmp         al,dl
>005B252E    jne         005B2537
 005B2530    call        @TryFinallyExit
>005B2535    jmp         005B258C
 005B2537    mov         eax,ebx
 005B2539    call        TMenu.IsRightToLeft
 005B253E    and         eax,7F
 005B2541    shl         eax,0D
 005B2544    lea         eax,[eax+eax*2]
 005B2547    mov         edx,dword ptr [ebp-28]
 005B254A    and         edx,0FFFF9FFF
 005B2550    or          eax,edx
 005B2552    mov         dword ptr [ebp-28],eax
 005B2555    mov         dword ptr [ebp-2C],10
 005B255C    lea         eax,[ebp-30]
 005B255F    push        eax
 005B2560    push        0FF
 005B2562    push        0
 005B2564    push        esi
 005B2565    call        user32.SetMenuItemInfoW
 005B256A    test        eax,eax
>005B256C    je          005B2577
 005B256E    mov         eax,dword ptr [ebx+48]
 005B2571    push        eax
 005B2572    call        user32.DrawMenuBar
 005B2577    xor         eax,eax
 005B2579    pop         edx
 005B257A    pop         ecx
 005B257B    pop         ecx
 005B257C    mov         dword ptr fs:[eax],edx
 005B257F    push        5B258C
 005B2584    ret
>005B2585    jmp         @HandleFinally
>005B258A    jmp         005B2584
 005B258C    pop         esi
 005B258D    pop         ebx
 005B258E    mov         esp,ebp
 005B2590    pop         ebp
 005B2591    ret
*}
end;

//005B2594
procedure BuildImage(Menu:Windows.HMENU);
begin
{*
 005B2594    push        ebp
 005B2595    mov         ebp,esp
 005B2597    add         esp,0FFFFFFF4
 005B259A    push        ebx
 005B259B    push        esi
 005B259C    push        edi
 005B259D    mov         dword ptr [ebp-4],eax
 005B25A0    mov         eax,dword ptr [ebp-4]
 005B25A3    push        eax
 005B25A4    call        user32.GetMenuItemCount
 005B25A9    mov         dword ptr [ebp-0C],eax
 005B25AC    mov         eax,dword ptr [ebp+8]
 005B25AF    lea         ebx,[eax-400]
 005B25B5    mov         eax,dword ptr [ebp+8]
 005B25B8    add         eax,0FFFFFFF6
 005B25BB    mov         dword ptr [ebp-8],eax
 005B25BE    xor         esi,esi
>005B25C0    jmp         005B264F
 005B25C5    push        ebx
 005B25C6    mov         eax,dword ptr [ebp-8]
 005B25C9    sub         eax,ebx
 005B25CB    sar         eax,1
>005B25CD    jns         005B25D2
 005B25CF    adc         eax,0
 005B25D2    push        eax
 005B25D3    push        400
 005B25D8    mov         eax,dword ptr [ebp+8]
 005B25DB    mov         eax,dword ptr [eax-404]
 005B25E1    mov         ecx,esi
 005B25E3    mov         edx,dword ptr [ebp-4]
 005B25E6    call        TMenu.DoGetMenuString
 005B25EB    mov         eax,ebx
 005B25ED    call        StrEnd
 005B25F2    mov         ebx,eax
 005B25F4    push        400
 005B25F9    push        esi
 005B25FA    mov         eax,dword ptr [ebp-4]
 005B25FD    push        eax
 005B25FE    call        user32.GetMenuState
 005B2603    mov         edi,eax
 005B2605    test        di,2
>005B260A    je          005B2619
 005B260C    mov         word ptr [ebx],24
 005B2611    add         ebx,2
 005B2614    mov         word ptr [ebx],0
 005B2619    test        di,40
>005B261E    je          005B262D
 005B2620    mov         word ptr [ebx],40
 005B2625    add         ebx,2
 005B2628    mov         word ptr [ebx],0
 005B262D    test        di,1
>005B2632    je          005B2641
 005B2634    mov         word ptr [ebx],23
 005B2639    add         ebx,2
 005B263C    mov         word ptr [ebx],0
 005B2641    mov         word ptr [ebx],3B
 005B2646    add         ebx,2
 005B2649    mov         word ptr [ebx],0
 005B264E    inc         esi
 005B264F    cmp         esi,dword ptr [ebp-0C]
>005B2652    jge         005B265D
 005B2654    cmp         ebx,dword ptr [ebp-8]
>005B2657    jb          005B25C5
 005B265D    pop         edi
 005B265E    pop         esi
 005B265F    pop         ebx
 005B2660    mov         esp,ebp
 005B2662    pop         ebp
 005B2663    ret
*}
end;

//005B2664
{*function sub_005B2664(?:TMainMenu):?;
begin
 005B2664    push        ebp
 005B2665    mov         ebp,esp
 005B2667    add         esp,0FFFFFBFC
 005B266D    push        ebx
 005B266E    mov         dword ptr [ebp-404],eax
 005B2674    xor         ebx,ebx
 005B2676    mov         word ptr [ebp-400],0
 005B267F    mov         eax,dword ptr [ebp-404]
 005B2685    cmp         dword ptr [eax+48],0
>005B2689    je          005B269D
 005B268B    push        ebp
 005B268C    mov         eax,dword ptr [ebp-404]
 005B2692    mov         edx,dword ptr [eax]
 005B2694    call        dword ptr [edx+48]
 005B2697    call        BuildImage
 005B269C    pop         ecx
 005B269D    mov         eax,dword ptr [ebp-404]
 005B26A3    cmp         dword ptr [eax+60],0
>005B26A7    je          005B26C6
 005B26A9    mov         eax,dword ptr [ebp-404]
 005B26AF    mov         eax,dword ptr [eax+60]
 005B26B2    call        @UStrToPWChar
 005B26B7    lea         edx,[ebp-400]
 005B26BD    call        0041F2A0
 005B26C2    test        eax,eax
>005B26C4    je          005B26E1
 005B26C6    mov         bl,1
 005B26C8    mov         eax,dword ptr [ebp-404]
 005B26CE    add         eax,60
 005B26D1    lea         edx,[ebp-400]
 005B26D7    mov         ecx,200
 005B26DC    call        @UStrFromWArray
 005B26E1    mov         eax,ebx
 005B26E3    pop         ebx
 005B26E4    mov         esp,ebp
 005B26E6    pop         ebp
 005B26E7    ret
end;*}

//005B26E8
procedure TMainMenu.SetOwnerDraw(Value:Boolean);
begin
{*
 005B26E8    cmp         dl,byte ptr [eax+4C];TMainMenu.FOwnerDraw:Boolean
>005B26EB    je          005B26F5
 005B26ED    mov         byte ptr [eax+4C],dl;TMainMenu.FOwnerDraw:Boolean
 005B26F0    call        005B1CB4
 005B26F5    ret
*}
end;

//005B26F8
procedure sub_005B26F8(?:TPopupMenu);
begin
{*
 005B26F8    push        ebp
 005B26F9    mov         ebp,esp
 005B26FB    add         esp,0FFFFFFF8
 005B26FE    mov         dword ptr [ebp-4],eax
 005B2701    mov         eax,[007C4EF4];^gvar_007C7CB8:Cardinal
 005B2706    cmp         byte ptr [eax+0D],0
>005B270A    je          005B2773
 005B270C    mov         eax,dword ptr [ebp-4]
 005B270F    movzx       eax,byte ptr [eax+40]
 005B2713    mov         byte ptr [ebp-5],al
 005B2716    mov         edx,dword ptr [ebp-4]
 005B2719    movzx       edx,byte ptr [edx+4D]
 005B271D    mov         byte ptr [ebp-6],dl
 005B2720    xor         edx,edx
 005B2722    push        ebp
 005B2723    push        5B276C
 005B2728    push        dword ptr fs:[edx]
 005B272B    mov         dword ptr fs:[edx],esp
 005B272E    test        al,al
>005B2730    jne         005B273E
 005B2732    mov         dl,1
 005B2734    mov         eax,dword ptr [ebp-4]
 005B2737    call        TMainMenu.SetBiDiMode
>005B273C    jmp         005B2748
 005B273E    xor         edx,edx
 005B2740    mov         eax,dword ptr [ebp-4]
 005B2743    call        TMainMenu.SetBiDiMode
 005B2748    xor         eax,eax
 005B274A    pop         edx
 005B274B    pop         ecx
 005B274C    pop         ecx
 005B274D    mov         dword ptr fs:[eax],edx
 005B2750    push        5B2773
 005B2755    movzx       edx,byte ptr [ebp-5]
 005B2759    mov         eax,dword ptr [ebp-4]
 005B275C    call        TMainMenu.SetBiDiMode
 005B2761    mov         eax,dword ptr [ebp-4]
 005B2764    movzx       edx,byte ptr [ebp-6]
 005B2768    mov         byte ptr [eax+4D],dl
 005B276B    ret
>005B276C    jmp         @HandleFinally
>005B2771    jmp         005B2755
 005B2773    pop         ecx
 005B2774    pop         ecx
 005B2775    pop         ebp
 005B2776    ret
*}
end;

//005B2778
procedure sub_005B2778(?:TComponent; ?:HWND);
begin
{*
 005B2778    push        ebx
 005B2779    push        esi
 005B277A    mov         esi,edx
 005B277C    mov         ebx,eax
 005B277E    mov         dword ptr [ebx+48],esi
 005B2781    mov         eax,ebx
 005B2783    call        005B2664
 005B2788    mov         eax,[007C4EF4];^gvar_007C7CB8:Cardinal
 005B278D    cmp         byte ptr [eax+0D],0
>005B2791    je          005B27AD
 005B2793    test        esi,esi
>005B2795    je          005B27AD
 005B2797    cmp         byte ptr [ebx+4D],0
>005B279B    je          005B27A6
 005B279D    mov         eax,ebx
 005B279F    call        TMenu.ParentBiDiModeChanged
>005B27A4    jmp         005B27AD
 005B27A6    mov         eax,ebx
 005B27A8    call        005B26F8
 005B27AD    pop         esi
 005B27AE    pop         ebx
 005B27AF    ret
*}
end;

//005B27B0
{*procedure sub_005B27B0(?:?);
begin
 005B27B0    push        ebx
 005B27B1    cmp         word ptr [eax+5A],0;TMenu.?f5A:word
>005B27B6    je          005B27C5
 005B27B8    push        ecx
 005B27B9    mov         ebx,eax
 005B27BB    mov         ecx,edx
 005B27BD    mov         edx,eax
 005B27BF    mov         eax,dword ptr [ebx+5C];TMenu.?f5C:dword
 005B27C2    call        dword ptr [ebx+58];TMenu.FOnChange
 005B27C5    pop         ebx
 005B27C6    ret
end;*}

//005B27C8
procedure TMenu.Loaded;
begin
{*
 005B27C8    push        ebx
 005B27C9    mov         ebx,eax
 005B27CB    mov         eax,ebx
 005B27CD    call        TComponent.Loaded
 005B27D2    xor         ecx,ecx
 005B27D4    xor         edx,edx
 005B27D6    mov         eax,ebx
 005B27D8    mov         ebx,dword ptr [eax]
 005B27DA    call        dword ptr [ebx+44];TMenu.sub_005B27B0
 005B27DD    pop         ebx
 005B27DE    ret
*}
end;

//005B27E0
{*procedure sub_005B27E0(?:?; ?:?; ?:?);
begin
 005B27E0    push        ebp
 005B27E1    mov         ebp,esp
 005B27E3    push        ebx
 005B27E4    push        esi
 005B27E5    mov         esi,ecx
 005B27E7    mov         ebx,eax
 005B27E9    movzx       eax,word ptr ds:[5B2814];0x9 gvar_005B2814
 005B27F0    and         ax,word ptr [ebx+1C];TMenu.FComponentState:TComponentState
 005B27F4    movzx       edx,word ptr ds:[5B2818];0x0 gvar_005B2818
 005B27FB    cmp         dx,ax
>005B27FE    jne         005B280D
 005B2800    movzx       ecx,byte ptr [ebp+8]
 005B2804    mov         edx,esi
 005B2806    mov         eax,ebx
 005B2808    mov         ebx,dword ptr [eax]
 005B280A    call        dword ptr [ebx+44];TMenu.sub_005B27B0
 005B280D    pop         esi
 005B280E    pop         ebx
 005B280F    pop         ebp
 005B2810    ret         4
end;*}

//005B2828
procedure TMainMenu.SetImages(Value:TCustomImageList);
begin
{*
 005B2828    push        ebx
 005B2829    push        esi
 005B282A    mov         esi,edx
 005B282C    mov         ebx,eax
 005B282E    mov         eax,dword ptr [ebx+54];TMainMenu.FImages:TCustomImageList
 005B2831    test        eax,eax
>005B2833    je          005B283D
 005B2835    mov         edx,dword ptr [ebx+50];TMainMenu.FImageChangeLink:TChangeLink
 005B2838    call        TCustomImageList.UnRegisterChanges
 005B283D    mov         eax,esi
 005B283F    mov         dword ptr [ebx+54],eax;TMainMenu.FImages:TCustomImageList
 005B2842    test        eax,eax
>005B2844    je          005B2858
 005B2846    mov         edx,dword ptr [ebx+50];TMainMenu.FImageChangeLink:TChangeLink
 005B2849    call        TCustomImageList.RegisterChanges
 005B284E    mov         edx,ebx
 005B2850    mov         eax,dword ptr [ebx+54];TMainMenu.FImages:TCustomImageList
 005B2853    call        TComponent.FreeNotification
 005B2858    mov         eax,ebx
 005B285A    call        005B1CB4
 005B285F    pop         esi
 005B2860    pop         ebx
 005B2861    ret
*}
end;

//005B2864
procedure TMenu.Notification(AComponent:TComponent; Operation:TOperation);
begin
{*
 005B2864    push        ebx
 005B2865    push        esi
 005B2866    push        edi
 005B2867    mov         ebx,ecx
 005B2869    mov         esi,edx
 005B286B    mov         edi,eax
 005B286D    mov         ecx,ebx
 005B286F    mov         edx,esi
 005B2871    mov         eax,edi
 005B2873    call        TComponent.Notification
 005B2878    cmp         esi,dword ptr [edi+54];TMenu.FImages:TCustomImageList
>005B287B    jne         005B288B
 005B287D    cmp         bl,1
>005B2880    jne         005B288B
 005B2882    xor         edx,edx
 005B2884    mov         eax,edi
 005B2886    call        TMainMenu.SetImages
 005B288B    pop         edi
 005B288C    pop         esi
 005B288D    pop         ebx
 005B288E    ret
*}
end;

//005B2890
function TMenu.IsRightToLeft:Boolean;
begin
{*
 005B2890    mov         edx,dword ptr ds:[7C4EF4];^gvar_007C7CB8:Cardinal
 005B2896    cmp         byte ptr [edx+0D],0
>005B289A    je          005B28A2
 005B289C    cmp         byte ptr [eax+40],0;TMenu.FBiDiMode:TBiDiMode
>005B28A0    jne         005B28A5
 005B28A2    xor         eax,eax
 005B28A4    ret
 005B28A5    mov         al,1
 005B28A7    ret
*}
end;

//005B28A8
function IsAccelChar(Menu:Windows.HMENU; State:Word; I:Integer; C:Char):Boolean;
begin
{*
 005B28A8    push        ebp
 005B28A9    mov         ebp,esp
 005B28AB    push        esi
 005B28AC    xor         esi,esi
 005B28AE    test        dl,10
>005B28B1    je          005B28CC
 005B28B3    push        ecx
 005B28B4    push        eax
 005B28B5    call        user32.GetSubMenu
 005B28BA    mov         edx,dword ptr [ebp+0C]
 005B28BD    mov         edx,dword ptr [edx-4]
 005B28C0    mov         cl,1
 005B28C2    xchg        eax,edx
 005B28C3    call        TMenu.FindItem
 005B28C8    mov         esi,eax
>005B28CA    jmp         005B28E8
 005B28CC    push        ecx
 005B28CD    push        eax
 005B28CE    call        user32.GetMenuItemID
 005B28D3    cmp         eax,0FFFFFFFF
>005B28D6    je          005B28E8
 005B28D8    mov         edx,dword ptr [ebp+0C]
 005B28DB    mov         edx,dword ptr [edx-4]
 005B28DE    xor         ecx,ecx
 005B28E0    xchg        eax,edx
 005B28E1    call        TMenu.FindItem
 005B28E6    mov         esi,eax
 005B28E8    test        esi,esi
>005B28EA    je          005B28FA
 005B28EC    movzx       eax,word ptr [ebp+8]
 005B28F0    mov         edx,dword ptr [esi+40]
 005B28F3    call        IsAccel
>005B28F8    jmp         005B28FC
 005B28FA    xor         eax,eax
 005B28FC    pop         esi
 005B28FD    pop         ebp
 005B28FE    ret         4
*}
end;

//005B2904
function IsInitialChar(Menu:Windows.HMENU; State:Word; I:Integer; C:Char):Boolean;
begin
{*
 005B2904    push        ebp
 005B2905    mov         ebp,esp
 005B2907    push        0
 005B2909    push        0
 005B290B    push        0
 005B290D    push        0
 005B290F    push        ebx
 005B2910    push        esi
 005B2911    mov         esi,ecx
 005B2913    mov         word ptr [ebp-2],dx
 005B2917    xor         edx,edx
 005B2919    push        ebp
 005B291A    push        5B29DB
 005B291F    push        dword ptr fs:[edx]
 005B2922    mov         dword ptr fs:[edx],esp
 005B2925    test        byte ptr [ebp-2],10
>005B2929    je          005B2944
 005B292B    push        esi
 005B292C    push        eax
 005B292D    call        user32.GetSubMenu
 005B2932    mov         edx,dword ptr [ebp+0C]
 005B2935    mov         edx,dword ptr [edx-4]
 005B2938    mov         cl,1
 005B293A    xchg        eax,edx
 005B293B    call        TMenu.FindItem
 005B2940    mov         ebx,eax
>005B2942    jmp         005B296E
 005B2944    mov         edx,dword ptr [ebp+0C]
 005B2947    mov         edx,dword ptr [edx-4]
 005B294A    mov         cl,1
 005B294C    xchg        eax,edx
 005B294D    call        TMenu.FindItem
 005B2952    mov         ebx,eax
 005B2954    test        ebx,ebx
>005B2956    je          005B296E
 005B2958    mov         eax,ebx
 005B295A    call        TMenuItem.GetCount
 005B295F    cmp         esi,eax
>005B2961    jge         005B296E
 005B2963    mov         edx,esi
 005B2965    mov         eax,ebx
 005B2967    call        TMenuItem.GetItem
 005B296C    mov         ebx,eax
 005B296E    test        ebx,ebx
>005B2970    je          005B29BE
 005B2972    cmp         dword ptr [ebx+40],0
>005B2976    je          005B29BE
 005B2978    lea         eax,[ebp-8]
 005B297B    movzx       edx,word ptr [ebp+8]
 005B297F    call        @UStrFromWChar
 005B2984    mov         eax,dword ptr [ebp-8]
 005B2987    push        eax
 005B2988    lea         eax,[ebp-0C]
 005B298B    mov         edx,dword ptr [ebx+40]
 005B298E    movzx       edx,word ptr [edx]
 005B2991    call        @UStrFromWChar
 005B2996    mov         eax,dword ptr [ebp-0C]
 005B2999    pop         edx
 005B299A    call        AnsiCompareText
 005B299F    test        eax,eax
>005B29A1    jne         005B29B4
 005B29A3    lea         edx,[ebp-10]
 005B29A6    mov         eax,dword ptr [ebx+40]
 005B29A9    call        GetHotkey
 005B29AE    cmp         dword ptr [ebp-10],0
>005B29B2    je          005B29B8
 005B29B4    xor         eax,eax
>005B29B6    jmp         005B29BA
 005B29B8    mov         al,1
 005B29BA    mov         ebx,eax
>005B29BC    jmp         005B29C0
 005B29BE    xor         ebx,ebx
 005B29C0    xor         eax,eax
 005B29C2    pop         edx
 005B29C3    pop         ecx
 005B29C4    pop         ecx
 005B29C5    mov         dword ptr fs:[eax],edx
 005B29C8    push        5B29E2
 005B29CD    lea         eax,[ebp-10]
 005B29D0    mov         edx,3
 005B29D5    call        @UStrArrayClr
 005B29DA    ret
>005B29DB    jmp         @HandleFinally
>005B29E0    jmp         005B29CD
 005B29E2    mov         eax,ebx
 005B29E4    pop         esi
 005B29E5    pop         ebx
 005B29E6    mov         esp,ebp
 005B29E8    pop         ebp
 005B29E9    ret         4
*}
end;

//005B29EC
procedure TMenu.ProcessMenuChar(var Message:TWMMenuChar);
begin
{*
 005B29EC    push        ebp
 005B29ED    mov         ebp,esp
 005B29EF    add         esp,0FFFFFFE8
 005B29F2    push        ebx
 005B29F3    push        esi
 005B29F4    push        edi
 005B29F5    mov         ebx,edx
 005B29F7    mov         dword ptr [ebp-4],eax
 005B29FA    xor         eax,eax
 005B29FC    mov         dword ptr [ebx+0C],eax
 005B29FF    mov         dword ptr [ebp-0C],0FFFFFFFF
 005B2A06    mov         dword ptr [ebp-10],0FFFFFFFF
 005B2A0D    mov         dword ptr [ebp-14],0FFFFFFFF
 005B2A14    mov         eax,dword ptr [ebx+8]
 005B2A17    push        eax
 005B2A18    call        user32.GetMenuItemCount
 005B2A1D    mov         dword ptr [ebp-8],eax
 005B2A20    mov         eax,dword ptr [ebp-8]
 005B2A23    dec         eax
 005B2A24    test        eax,eax
>005B2A26    jl          005B2AA0
 005B2A28    inc         eax
 005B2A29    mov         dword ptr [ebp-18],eax
 005B2A2C    xor         esi,esi
 005B2A2E    push        400
 005B2A33    push        esi
 005B2A34    mov         eax,dword ptr [ebx+8]
 005B2A37    push        eax
 005B2A38    call        user32.GetMenuState
 005B2A3D    mov         edi,eax
 005B2A3F    push        ebp
 005B2A40    movzx       eax,word ptr [ebx+4]
 005B2A44    push        eax
 005B2A45    mov         eax,dword ptr [ebx+8]
 005B2A48    mov         ecx,esi
 005B2A4A    mov         edx,edi
 005B2A4C    call        IsAccelChar
 005B2A51    pop         ecx
 005B2A52    test        al,al
>005B2A54    je          005B2A9A
 005B2A56    test        di,2
>005B2A5B    je          005B2A6C
 005B2A5D    cmp         dword ptr [ebp-0C],0
>005B2A61    jge         005B2A9A
 005B2A63    mov         dword ptr [ebp-0C],0FFFFFFFE
>005B2A6A    jmp         005B2A9A
 005B2A6C    cmp         dword ptr [ebp-0C],0
>005B2A70    jge         005B2A7E
 005B2A72    mov         dword ptr [ebp-0C],esi
 005B2A75    mov         dword ptr [ebx+0C],2
>005B2A7C    jmp         005B2A85
 005B2A7E    mov         dword ptr [ebx+0C],3
 005B2A85    test        di,80
>005B2A8A    je          005B2A91
 005B2A8C    mov         dword ptr [ebp-10],esi
>005B2A8F    jmp         005B2A9A
 005B2A91    cmp         dword ptr [ebp-10],0
>005B2A95    jl          005B2A9A
 005B2A97    mov         dword ptr [ebp-14],esi
 005B2A9A    inc         esi
 005B2A9B    dec         dword ptr [ebp-18]
>005B2A9E    jne         005B2A2E
 005B2AA0    cmp         dword ptr [ebp-0C],0FFFFFFFF
>005B2AA4    jge         005B2AB2
 005B2AA6    mov         dword ptr [ebx+0C],10000
>005B2AAD    jmp         005B2B5F
 005B2AB2    cmp         dword ptr [ebp-0C],0
>005B2AB6    jge         005B2B32
 005B2AB8    mov         eax,dword ptr [ebp-8]
 005B2ABB    dec         eax
 005B2ABC    test        eax,eax
>005B2ABE    jl          005B2B32
 005B2AC0    inc         eax
 005B2AC1    mov         dword ptr [ebp-18],eax
 005B2AC4    xor         esi,esi
 005B2AC6    push        400
 005B2ACB    push        esi
 005B2ACC    mov         eax,dword ptr [ebx+8]
 005B2ACF    push        eax
 005B2AD0    call        user32.GetMenuState
 005B2AD5    mov         edi,eax
 005B2AD7    push        ebp
 005B2AD8    movzx       eax,word ptr [ebx+4]
 005B2ADC    push        eax
 005B2ADD    mov         eax,dword ptr [ebx+8]
 005B2AE0    mov         ecx,esi
 005B2AE2    mov         edx,edi
 005B2AE4    call        IsInitialChar
 005B2AE9    pop         ecx
 005B2AEA    test        al,al
>005B2AEC    je          005B2B2C
 005B2AEE    test        di,2
>005B2AF3    je          005B2AFE
 005B2AF5    mov         dword ptr [ebx+0C],10000
>005B2AFC    jmp         005B2B5F
 005B2AFE    cmp         dword ptr [ebp-0C],0
>005B2B02    jge         005B2B10
 005B2B04    mov         dword ptr [ebp-0C],esi
 005B2B07    mov         dword ptr [ebx+0C],2
>005B2B0E    jmp         005B2B17
 005B2B10    mov         dword ptr [ebx+0C],3
 005B2B17    test        di,80
>005B2B1C    je          005B2B23
 005B2B1E    mov         dword ptr [ebp-10],esi
>005B2B21    jmp         005B2B2C
 005B2B23    cmp         dword ptr [ebp-10],0
>005B2B27    jl          005B2B2C
 005B2B29    mov         dword ptr [ebp-14],esi
 005B2B2C    inc         esi
 005B2B2D    dec         dword ptr [ebp-18]
>005B2B30    jne         005B2AC6
 005B2B32    mov         eax,dword ptr [ebx+0C]
 005B2B35    cmp         eax,2
>005B2B38    jne         005B2B45
 005B2B3A    shl         eax,10
 005B2B3D    or          eax,dword ptr [ebp-0C]
 005B2B40    mov         dword ptr [ebx+0C],eax
>005B2B43    jmp         005B2B5F
 005B2B45    cmp         eax,3
>005B2B48    jne         005B2B5F
 005B2B4A    cmp         dword ptr [ebp-14],0
>005B2B4E    jge         005B2B56
 005B2B50    mov         edx,dword ptr [ebp-0C]
 005B2B53    mov         dword ptr [ebp-14],edx
 005B2B56    shl         eax,10
 005B2B59    or          eax,dword ptr [ebp-14]
 005B2B5C    mov         dword ptr [ebx+0C],eax
 005B2B5F    pop         edi
 005B2B60    pop         esi
 005B2B61    pop         ebx
 005B2B62    mov         esp,ebp
 005B2B64    pop         ebp
 005B2B65    ret
*}
end;

//005B2B68
function TMenu.DoGetMenuString(Menu:Windows.HMENU; ItemID:Windows.UINT; Str:PChar; MaxCount:Integer; Flag:Windows.UINT):Integer;
begin
{*
 005B2B68    push        ebp
 005B2B69    mov         ebp,esp
 005B2B6B    push        ecx
 005B2B6C    push        ebx
 005B2B6D    push        esi
 005B2B6E    push        edi
 005B2B6F    mov         esi,ecx
 005B2B71    mov         edi,edx
 005B2B73    mov         ebx,eax
 005B2B75    mov         eax,ebx
 005B2B77    call        005B1EEC
 005B2B7C    test        al,al
>005B2B7E    je          005B2BF6
 005B2B80    xor         eax,eax
 005B2B82    mov         dword ptr [ebp-4],eax
 005B2B85    mov         eax,dword ptr [ebp+8]
 005B2B88    push        eax
 005B2B89    push        esi
 005B2B8A    push        edi
 005B2B8B    call        user32.GetMenuState
 005B2B90    test        al,10
>005B2B92    je          005B2BAD
 005B2B94    push        esi
 005B2B95    push        edi
 005B2B96    call        user32.GetSubMenu
 005B2B9B    mov         edi,eax
 005B2B9D    mov         cl,1
 005B2B9F    mov         edx,edi
 005B2BA1    mov         eax,ebx
 005B2BA3    call        TMenu.FindItem
 005B2BA8    mov         dword ptr [ebp-4],eax
>005B2BAB    jmp         005B2BC9
 005B2BAD    push        esi
 005B2BAE    push        edi
 005B2BAF    call        user32.GetMenuItemID
 005B2BB4    mov         esi,eax
 005B2BB6    cmp         esi,0FFFFFFFF
>005B2BB9    je          005B2BC9
 005B2BBB    xor         ecx,ecx
 005B2BBD    mov         edx,esi
 005B2BBF    mov         eax,ebx
 005B2BC1    call        TMenu.FindItem
 005B2BC6    mov         dword ptr [ebp-4],eax
 005B2BC9    cmp         dword ptr [ebp-4],0
>005B2BCD    je          005B2BF2
 005B2BCF    mov         eax,dword ptr [ebp+10]
 005B2BD2    mov         word ptr [eax],0
 005B2BD7    mov         eax,dword ptr [ebp-4]
 005B2BDA    mov         edx,dword ptr [eax+40]
 005B2BDD    mov         ecx,dword ptr [ebp+0C]
 005B2BE0    mov         eax,dword ptr [ebp+10]
 005B2BE3    call        StrPLCopy
 005B2BE8    mov         eax,dword ptr [ebp+10]
 005B2BEB    call        @PWCharLen
>005B2BF0    jmp         005B2C09
 005B2BF2    xor         eax,eax
>005B2BF4    jmp         005B2C09
 005B2BF6    mov         eax,dword ptr [ebp+8]
 005B2BF9    push        eax
 005B2BFA    mov         eax,dword ptr [ebp+0C]
 005B2BFD    push        eax
 005B2BFE    mov         eax,dword ptr [ebp+10]
 005B2C01    push        eax
 005B2C02    push        esi
 005B2C03    push        edi
 005B2C04    call        user32.GetMenuStringW
 005B2C09    pop         edi
 005B2C0A    pop         esi
 005B2C0B    pop         ebx
 005B2C0C    pop         ecx
 005B2C0D    pop         ebp
 005B2C0E    ret         0C
*}
end;

//005B2C14
procedure TMainMenu.SetBiDiMode(Value:TBiDiMode);
begin
{*
 005B2C14    cmp         dl,byte ptr [eax+40];TMainMenu.FBiDiMode:TBiDiMode
>005B2C17    je          005B2C25
 005B2C19    mov         byte ptr [eax+40],dl;TMainMenu.FBiDiMode:TBiDiMode
 005B2C1C    mov         byte ptr [eax+4D],0;TMainMenu.FParentBiDiMode:Boolean
 005B2C20    call        005B248C
 005B2C25    ret
*}
end;

//005B2C28
procedure TMainMenu.SetParentBiDiMode(Value:Boolean);
begin
{*
 005B2C28    cmp         dl,byte ptr [eax+4D];TMainMenu.FParentBiDiMode:Boolean
>005B2C2B    je          005B2C35
 005B2C2D    mov         byte ptr [eax+4D],dl;TMainMenu.FParentBiDiMode:Boolean
 005B2C30    call        TMenu.ParentBiDiModeChanged
 005B2C35    ret
*}
end;

//005B2C38
procedure TMenu.ParentBiDiModeChanged;
begin
{*
 005B2C38    push        ebx
 005B2C39    mov         ebx,eax
 005B2C3B    cmp         byte ptr [ebx+4D],0;TMenu.FParentBiDiMode:Boolean
>005B2C3F    je          005B2C5C
 005B2C41    mov         eax,dword ptr [ebx+48];TMenu.FWindowHandle:HWND
 005B2C44    call        FindControl
 005B2C49    test        eax,eax
>005B2C4B    je          005B2C5C
 005B2C4D    movzx       edx,byte ptr [eax+71];TWinControl.FBiDiMode:TBiDiMode
 005B2C51    mov         eax,ebx
 005B2C53    call        TMainMenu.SetBiDiMode
 005B2C58    mov         byte ptr [ebx+4D],1;TMenu.FParentBiDiMode:Boolean
 005B2C5C    pop         ebx
 005B2C5D    ret
*}
end;

//005B2C60
procedure TMenu.ParentBiDiModeChanged(AControl:TObject);
begin
{*
 005B2C60    push        ebx
 005B2C61    push        esi
 005B2C62    mov         esi,edx
 005B2C64    mov         ebx,eax
 005B2C66    cmp         byte ptr [ebx+4D],0;TMenu.FParentBiDiMode:Boolean
>005B2C6A    je          005B2C88
 005B2C6C    mov         eax,esi
 005B2C6E    mov         edx,dword ptr ds:[4DC470];TControl
 005B2C74    call        @AsClass
 005B2C79    movzx       edx,byte ptr [eax+71];TControl.FBiDiMode:TBiDiMode
 005B2C7D    mov         eax,ebx
 005B2C7F    call        TMainMenu.SetBiDiMode
 005B2C84    mov         byte ptr [ebx+4D],1;TMenu.FParentBiDiMode:Boolean
 005B2C88    pop         esi
 005B2C89    pop         ebx
 005B2C8A    ret
*}
end;

//005B2C8C
{*function TMainMenu.GetAutoHotkeys:?;
begin
 005B2C8C    mov         eax,dword ptr [eax+44];TMainMenu.FItems:TMenuItem
 005B2C8F    movzx       eax,byte ptr [eax+47];TMenuItem.FAutoHotkeys:TMenuItemAutoFlag
 005B2C93    movzx       eax,byte ptr [eax+7A1B96]
 005B2C9A    ret
end;*}

//005B2C9C
procedure TMainMenu.SetAutoHotkeys(Value:TMenuAutoFlag);
begin
{*
 005B2C9C    and         edx,7F
 005B2C9F    movzx       edx,byte ptr [edx+7A1B94]
 005B2CA6    mov         eax,dword ptr [eax+44];TMainMenu.FItems:TMenuItem
 005B2CA9    mov         byte ptr [eax+47],dl;TMenuItem.FAutoHotkeys:TMenuItemAutoFlag
 005B2CAC    ret
*}
end;

//005B2CB0
{*function TMainMenu.GetAutoLineReduction:?;
begin
 005B2CB0    mov         eax,dword ptr [eax+44];TMainMenu.FItems:TMenuItem
 005B2CB3    movzx       eax,byte ptr [eax+48];TMenuItem.FAutoLineReduction:TMenuItemAutoFlag
 005B2CB7    movzx       eax,byte ptr [eax+7A1B96]
 005B2CBE    ret
end;*}

//005B2CC0
procedure TMainMenu.SetAutoLineReduction(Value:TMenuAutoFlag);
begin
{*
 005B2CC0    and         edx,7F
 005B2CC3    movzx       edx,byte ptr [edx+7A1B94]
 005B2CCA    mov         eax,dword ptr [eax+44];TMainMenu.FItems:TMenuItem
 005B2CCD    mov         byte ptr [eax+48],dl;TMenuItem.FAutoLineReduction:TMenuItemAutoFlag
 005B2CD0    ret
*}
end;

//005B2CD4
procedure TMainMenu.SetAutoMerge(Value:Boolean);
begin
{*
 005B2CD4    cmp         dl,byte ptr [eax+6C];TMainMenu.FAutoMerge:Boolean
>005B2CD7    je          005B2CF2
 005B2CD9    mov         byte ptr [eax+6C],dl;TMainMenu.FAutoMerge:Boolean
 005B2CDC    mov         edx,dword ptr [eax+48];TMainMenu.FWindowHandle:HWND
 005B2CDF    test        edx,edx
>005B2CE1    je          005B2CF2
 005B2CE3    push        0
 005B2CE5    push        0
 005B2CE7    push        0B015
 005B2CEC    push        edx
 005B2CED    call        user32.SendMessageW
 005B2CF2    ret
*}
end;

//005B2CF4
{*procedure sub_005B2CF4(?:?; ?:?; ?:?);
begin
 005B2CF4    push        ebp
 005B2CF5    mov         ebp,esp
 005B2CF7    push        ecx
 005B2CF8    push        ebx
 005B2CF9    push        esi
 005B2CFA    push        edi
 005B2CFB    mov         esi,ecx
 005B2CFD    mov         dword ptr [ebp-4],edx
 005B2D00    mov         edi,eax
 005B2D02    cmp         dword ptr [edi+48],0;TMainMenu.FWindowHandle:HWND
>005B2D06    je          005B2D34
 005B2D08    mov         eax,edi
 005B2D0A    call        005B2664
 005B2D0F    mov         ebx,eax
 005B2D11    test        esi,esi
>005B2D13    jne         005B2D27
 005B2D15    push        0
 005B2D17    push        0
 005B2D19    push        0B015
 005B2D1E    mov         eax,dword ptr [edi+48];TMainMenu.FWindowHandle:HWND
 005B2D21    push        eax
 005B2D22    call        user32.SendMessageW
 005B2D27    test        bl,bl
>005B2D29    je          005B2D34
 005B2D2B    mov         eax,dword ptr [edi+48];TMainMenu.FWindowHandle:HWND
 005B2D2E    push        eax
 005B2D2F    call        user32.DrawMenuBar
 005B2D34    movzx       eax,byte ptr [ebp+8]
 005B2D38    push        eax
 005B2D39    mov         ecx,esi
 005B2D3B    mov         edx,dword ptr [ebp-4]
 005B2D3E    mov         eax,edi
 005B2D40    call        005B27E0
 005B2D45    pop         edi
 005B2D46    pop         esi
 005B2D47    pop         ebx
 005B2D48    pop         ecx
 005B2D49    pop         ebp
 005B2D4A    ret         4
end;*}

//005B2D50
procedure TMainMenu.Merge(Menu:TMainMenu);
begin
{*
 005B2D50    test        edx,edx
>005B2D52    je          005B2D60
 005B2D54    mov         eax,dword ptr [eax+44];TMainMenu.FItems:TMenuItem
 005B2D57    mov         edx,dword ptr [edx+44];TMainMenu.FItems:TMenuItem
 005B2D5A    call        005AD7D0
 005B2D5F    ret
 005B2D60    xor         edx,edx
 005B2D62    mov         eax,dword ptr [eax+44];TMainMenu.FItems:TMenuItem
 005B2D65    call        005AD7D0
 005B2D6A    ret
*}
end;

//005B2D6C
procedure TMainMenu.Unmerge(Menu:TMainMenu);
begin
{*
 005B2D6C    test        edx,edx
>005B2D6E    je          005B2D85
 005B2D70    mov         ecx,dword ptr [eax+44];TMainMenu.FItems:TMenuItem
 005B2D73    mov         ecx,dword ptr [ecx+74];TMenuItem.FMerged:TMenuItem
 005B2D76    cmp         ecx,dword ptr [edx+44];TMainMenu.FItems:TMenuItem
>005B2D79    jne         005B2D85
 005B2D7B    xor         edx,edx
 005B2D7D    mov         eax,dword ptr [eax+44];TMainMenu.FItems:TMenuItem
 005B2D80    call        005AD7D0
 005B2D85    ret
*}
end;

//005B2D88
{*procedure sub_005B2D88(?:?);
begin
 005B2D88    push        ebx
 005B2D89    push        esi
 005B2D8A    mov         ebx,eax
 005B2D8C    push        0
 005B2D8E    xor         ecx,ecx
 005B2D90    xor         edx,edx
 005B2D92    mov         eax,ebx
 005B2D94    mov         esi,dword ptr [eax]
 005B2D96    call        dword ptr [esi+4C]
 005B2D99    mov         eax,dword ptr [ebx+48]
 005B2D9C    test        eax,eax
>005B2D9E    je          005B2DAF
 005B2DA0    push        0
 005B2DA2    push        0
 005B2DA4    push        0B015
 005B2DA9    push        eax
 005B2DAA    call        user32.SendMessageW
 005B2DAF    pop         esi
 005B2DB0    pop         ebx
 005B2DB1    ret
end;*}

//005B2DB4
procedure sub_005B2DB4;
begin
{*
 005B2DB4    mov         edx,dword ptr [eax+68];TMainMenu.FOle2Menu:HMENU
 005B2DB7    test        edx,edx
>005B2DB9    je          005B2DBE
 005B2DBB    mov         eax,edx
 005B2DBD    ret
 005B2DBE    call        005B1C88
 005B2DC3    ret
*}
end;

//005B2DC4
procedure TPopupList.MainWndProc(var Message:Messages.TMessage);
begin
{*
 005B2DC4    push        ebp
 005B2DC5    mov         ebp,esp
 005B2DC7    push        ecx
 005B2DC8    push        ebx
 005B2DC9    push        esi
 005B2DCA    push        edi
 005B2DCB    mov         dword ptr [ebp-4],eax
 005B2DCE    xor         eax,eax
 005B2DD0    push        ebp
 005B2DD1    push        5B2DEE
 005B2DD6    push        dword ptr fs:[eax]
 005B2DD9    mov         dword ptr fs:[eax],esp
 005B2DDC    mov         eax,dword ptr [ebp-4]
 005B2DDF    mov         ecx,dword ptr [eax]
 005B2DE1    call        dword ptr [ecx+10]
 005B2DE4    xor         eax,eax
 005B2DE6    pop         edx
 005B2DE7    pop         ecx
 005B2DE8    pop         ecx
 005B2DE9    mov         dword ptr fs:[eax],edx
>005B2DEC    jmp         005B2E07
>005B2DEE    jmp         @HandleAnyException
 005B2DF3    mov         eax,[007C4A18];^Application:TApplication
 005B2DF8    mov         eax,dword ptr [eax]
 005B2DFA    mov         edx,dword ptr [ebp-4]
 005B2DFD    call        TApplication.HandleException
 005B2E02    call        @DoneExcept
 005B2E07    pop         edi
 005B2E08    pop         esi
 005B2E09    pop         ebx
 005B2E0A    pop         ecx
 005B2E0B    pop         ebp
 005B2E0C    ret
*}
end;

//005B2E10
{*procedure sub_005B2E10(?:?);
begin
 005B2E10    push        ebp
 005B2E11    mov         ebp,esp
 005B2E13    add         esp,0FFFFFFC8
 005B2E16    push        ebx
 005B2E17    push        esi
 005B2E18    push        edi
 005B2E19    xor         ecx,ecx
 005B2E1B    mov         dword ptr [ebp-38],ecx
 005B2E1E    mov         esi,edx
 005B2E20    mov         dword ptr [ebp-4],eax
 005B2E23    xor         eax,eax
 005B2E25    push        ebp
 005B2E26    push        5B3357
 005B2E2B    push        dword ptr fs:[eax]
 005B2E2E    mov         dword ptr fs:[eax],esp
 005B2E31    mov         eax,dword ptr [esi]
 005B2E33    cmp         eax,111
>005B2E38    jg          005B2E5A
>005B2E3A    je          005B2E72
 005B2E3C    sub         eax,2B
>005B2E3F    je          005B3075
 005B2E45    dec         eax
>005B2E46    je          005B3180
 005B2E4C    sub         eax,27
>005B2E4F    je          005B2F7E
>005B2E55    jmp         005B3327
 005B2E5A    sub         eax,117
>005B2E5F    je          005B2EA8
 005B2E61    sub         eax,8
>005B2E64    je          005B2EDD
 005B2E66    dec         eax
>005B2E67    je          005B32DE
>005B2E6D    jmp         005B3327
 005B2E72    mov         eax,dword ptr [ebp-4]
 005B2E75    mov         ebx,dword ptr [eax+8];TPopupList.FCount:Integer
 005B2E78    dec         ebx
 005B2E79    test        ebx,ebx
>005B2E7B    jl          005B3327
 005B2E81    inc         ebx
 005B2E82    xor         edi,edi
 005B2E84    mov         edx,edi
 005B2E86    mov         eax,dword ptr [ebp-4]
 005B2E89    call        TList.Get
 005B2E8E    movzx       edx,word ptr [esi+4]
 005B2E92    call        TMenu.DispatchCommand
 005B2E97    test        al,al
>005B2E99    jne         005B3341
 005B2E9F    inc         edi
 005B2EA0    dec         ebx
>005B2EA1    jne         005B2E84
>005B2EA3    jmp         005B3327
 005B2EA8    mov         eax,dword ptr [ebp-4]
 005B2EAB    mov         ebx,dword ptr [eax+8];TPopupList.FCount:Integer
 005B2EAE    dec         ebx
 005B2EAF    test        ebx,ebx
>005B2EB1    jl          005B3327
 005B2EB7    inc         ebx
 005B2EB8    xor         edi,edi
 005B2EBA    mov         edx,edi
 005B2EBC    mov         eax,dword ptr [ebp-4]
 005B2EBF    call        TList.Get
 005B2EC4    mov         edx,dword ptr [esi+4]
 005B2EC7    call        TMenu.DispatchPopup
 005B2ECC    test        al,al
>005B2ECE    jne         005B3341
 005B2ED4    inc         edi
 005B2ED5    dec         ebx
>005B2ED6    jne         005B2EBA
>005B2ED8    jmp         005B3327
 005B2EDD    mov         byte ptr [ebp-0D],0
 005B2EE1    test        byte ptr [esi+6],10
>005B2EE5    je          005B2EEB
 005B2EE7    mov         byte ptr [ebp-0D],1
 005B2EEB    mov         eax,dword ptr [ebp-4]
 005B2EEE    mov         ebx,dword ptr [eax+8];TPopupList.FCount:Integer
 005B2EF1    dec         ebx
 005B2EF2    test        ebx,ebx
>005B2EF4    jl          005B2F6B
 005B2EF6    inc         ebx
 005B2EF7    xor         edi,edi
 005B2EF9    cmp         byte ptr [ebp-0D],1
>005B2EFD    jne         005B2F1F
 005B2EFF    mov         eax,dword ptr [esi+8]
 005B2F02    test        eax,eax
>005B2F04    je          005B2F16
 005B2F06    movzx       edx,word ptr [esi+4]
 005B2F0A    push        edx
 005B2F0B    push        eax
 005B2F0C    call        user32.GetSubMenu
 005B2F11    mov         dword ptr [ebp-8],eax
>005B2F14    jmp         005B2F26
 005B2F16    mov         dword ptr [ebp-8],0FFFFFFFF
>005B2F1D    jmp         005B2F26
 005B2F1F    movzx       eax,word ptr [esi+4]
 005B2F23    mov         dword ptr [ebp-8],eax
 005B2F26    mov         edx,edi
 005B2F28    mov         eax,dword ptr [ebp-4]
 005B2F2B    call        TList.Get
 005B2F30    movzx       ecx,byte ptr [ebp-0D]
 005B2F34    mov         edx,dword ptr [ebp-8]
 005B2F37    call        TMenu.FindItem
 005B2F3C    mov         dword ptr [ebp-0C],eax
 005B2F3F    cmp         dword ptr [ebp-0C],0
>005B2F43    je          005B2F67
 005B2F45    lea         edx,[ebp-38]
 005B2F48    mov         eax,dword ptr [ebp-0C]
 005B2F4B    mov         eax,dword ptr [eax+64];TMenuItem.FHint:string
 005B2F4E    call        GetLongHint
 005B2F53    mov         edx,dword ptr [ebp-38]
 005B2F56    mov         eax,[007C4A18];^Application:TApplication
 005B2F5B    mov         eax,dword ptr [eax]
 005B2F5D    call        005CC1DC
>005B2F62    jmp         005B3341
 005B2F67    inc         edi
 005B2F68    dec         ebx
>005B2F69    jne         005B2EF9
 005B2F6B    mov         eax,[007C4A18];^Application:TApplication
 005B2F70    mov         eax,dword ptr [eax]
 005B2F72    xor         edx,edx
 005B2F74    call        005CC1DC
>005B2F79    jmp         005B3327
 005B2F7E    mov         eax,dword ptr [esi+8]
 005B2F81    mov         dword ptr [ebp-28],eax
 005B2F84    mov         eax,dword ptr [ebp-4]
 005B2F87    mov         ebx,dword ptr [eax+8];TPopupList.FCount:Integer
 005B2F8A    dec         ebx
 005B2F8B    test        ebx,ebx
>005B2F8D    jl          005B3327
 005B2F93    inc         ebx
 005B2F94    xor         edi,edi
 005B2F96    mov         edx,edi
 005B2F98    mov         eax,dword ptr [ebp-4]
 005B2F9B    call        TList.Get
 005B2FA0    mov         edx,dword ptr [eax]
 005B2FA2    call        dword ptr [edx+48]
 005B2FA5    mov         edx,dword ptr [ebp-28]
 005B2FA8    cmp         eax,dword ptr [edx+0C]
>005B2FAB    jne         005B2FBF
 005B2FAD    mov         edx,edi
 005B2FAF    mov         eax,dword ptr [ebp-4]
 005B2FB2    call        TList.Get
 005B2FB7    mov         eax,dword ptr [eax+44]
 005B2FBA    mov         dword ptr [ebp-0C],eax
>005B2FBD    jmp         005B2FD9
 005B2FBF    mov         edx,edi
 005B2FC1    mov         eax,dword ptr [ebp-4]
 005B2FC4    call        TList.Get
 005B2FC9    mov         edx,dword ptr [ebp-28]
 005B2FCC    mov         edx,dword ptr [edx+0C]
 005B2FCF    mov         cl,1
 005B2FD1    call        TMenu.FindItem
 005B2FD6    mov         dword ptr [ebp-0C],eax
 005B2FD9    cmp         dword ptr [ebp-0C],0
>005B2FDD    je          005B3068
 005B2FE3    mov         edx,edi
 005B2FE5    mov         eax,dword ptr [ebp-4]
 005B2FE8    call        TList.Get
 005B2FED    mov         edx,dword ptr [ebp-28]
 005B2FF0    mov         edx,dword ptr [edx+8]
 005B2FF3    mov         cl,1
 005B2FF5    call        TMenu.GetHelpContext
 005B2FFA    test        eax,eax
>005B2FFC    jne         005B3015
 005B2FFE    mov         edx,edi
 005B3000    mov         eax,dword ptr [ebp-4]
 005B3003    call        TList.Get
 005B3008    mov         edx,dword ptr [ebp-28]
 005B300B    mov         edx,dword ptr [edx+0C]
 005B300E    xor         ecx,ecx
 005B3010    call        TMenu.GetHelpContext
 005B3015    mov         edx,dword ptr ds:[7C4E78];^Screen:TScreen
 005B301B    mov         edx,dword ptr [edx]
 005B301D    mov         edx,dword ptr [edx+74];TScreen.FActiveForm:TForm
 005B3020    test        edx,edx
>005B3022    je          005B3341
 005B3028    test        eax,eax
>005B302A    jne         005B3032
 005B302C    mov         eax,dword ptr [edx+178];TForm.FHelpContext:THelpContext
 005B3032    test        byte ptr [edx+2BC],8;TForm.FBorderIcons:TBorderIcons
>005B3039    je          005B3055
 005B303B    mov         edx,dword ptr ds:[7C4A18];^Application:TApplication
 005B3041    mov         edx,dword ptr [edx]
 005B3043    mov         ecx,eax
 005B3045    mov         eax,8
 005B304A    xchg        eax,edx
 005B304B    call        TApplication.HelpCommand
>005B3050    jmp         005B3341
 005B3055    mov         edx,dword ptr ds:[7C4A18];^Application:TApplication
 005B305B    mov         edx,dword ptr [edx]
 005B305D    xchg        eax,edx
 005B305E    call        TApplication.HelpContext
>005B3063    jmp         005B3341
 005B3068    inc         edi
 005B3069    dec         ebx
>005B306A    jne         005B2F96
>005B3070    jmp         005B3327
 005B3075    mov         eax,dword ptr [esi+8]
 005B3078    mov         dword ptr [ebp-2C],eax
 005B307B    mov         eax,dword ptr [ebp-4]
 005B307E    mov         ebx,dword ptr [eax+8];TPopupList.FCount:Integer
 005B3081    dec         ebx
 005B3082    test        ebx,ebx
>005B3084    jl          005B3327
 005B308A    inc         ebx
 005B308B    xor         edi,edi
 005B308D    mov         edx,edi
 005B308F    mov         eax,dword ptr [ebp-4]
 005B3092    call        TList.Get
 005B3097    mov         edx,dword ptr [ebp-2C]
 005B309A    mov         edx,dword ptr [edx+8]
 005B309D    xor         ecx,ecx
 005B309F    call        TMenu.FindItem
 005B30A4    mov         dword ptr [ebp-0C],eax
 005B30A7    cmp         dword ptr [ebp-0C],0
>005B30AB    je          005B3173
 005B30B1    mov         dl,1
 005B30B3    mov         eax,[004D9044];TControlCanvas
 005B30B8    call        TCanvas.Create;TControlCanvas.Create
 005B30BD    mov         dword ptr [ebp-14],eax
 005B30C0    xor         eax,eax
 005B30C2    push        ebp
 005B30C3    push        5B316C
 005B30C8    push        dword ptr fs:[eax]
 005B30CB    mov         dword ptr fs:[eax],esp
 005B30CE    mov         eax,dword ptr [ebp-2C]
 005B30D1    mov         eax,dword ptr [eax+18]
 005B30D4    push        eax
 005B30D5    call        gdi32.SaveDC
 005B30DA    mov         dword ptr [ebp-18],eax
 005B30DD    xor         eax,eax
 005B30DF    push        ebp
 005B30E0    push        5B314F
 005B30E5    push        dword ptr fs:[eax]
 005B30E8    mov         dword ptr fs:[eax],esp
 005B30EB    mov         eax,dword ptr [ebp-2C]
 005B30EE    mov         edx,dword ptr [eax+18]
 005B30F1    mov         eax,dword ptr [ebp-14]
 005B30F4    call        TCanvas.SetHandle
 005B30F9    mov         eax,[007C4E78];^Screen:TScreen
 005B30FE    mov         eax,dword ptr [eax]
 005B3100    mov         edx,dword ptr [eax+90];TScreen.FMenuFont:TFont
 005B3106    mov         eax,dword ptr [ebp-14]
 005B3109    call        TCanvas.SetFont
 005B310E    mov         eax,dword ptr [ebp-2C]
 005B3111    movzx       eax,word ptr [eax+10]
 005B3115    push        eax
 005B3116    mov         eax,dword ptr [ebp-2C]
 005B3119    lea         ecx,[eax+1C]
 005B311C    mov         edx,dword ptr [ebp-14]
 005B311F    mov         eax,dword ptr [ebp-0C]
 005B3122    call        005B3624
 005B3127    xor         eax,eax
 005B3129    pop         edx
 005B312A    pop         ecx
 005B312B    pop         ecx
 005B312C    mov         dword ptr fs:[eax],edx
 005B312F    push        5B3156
 005B3134    xor         edx,edx
 005B3136    mov         eax,dword ptr [ebp-14]
 005B3139    call        TCanvas.SetHandle
 005B313E    mov         eax,dword ptr [ebp-18]
 005B3141    push        eax
 005B3142    mov         eax,dword ptr [ebp-2C]
 005B3145    mov         eax,dword ptr [eax+18]
 005B3148    push        eax
 005B3149    call        gdi32.RestoreDC
 005B314E    ret
>005B314F    jmp         @HandleFinally
>005B3154    jmp         005B3134
 005B3156    xor         eax,eax
 005B3158    pop         edx
 005B3159    pop         ecx
 005B315A    pop         ecx
 005B315B    mov         dword ptr fs:[eax],edx
 005B315E    push        5B3341
 005B3163    mov         eax,dword ptr [ebp-14]
 005B3166    call        TObject.Free
 005B316B    ret
>005B316C    jmp         @HandleFinally
>005B3171    jmp         005B3163
 005B3173    inc         edi
 005B3174    dec         ebx
>005B3175    jne         005B308D
>005B317B    jmp         005B3327
 005B3180    mov         eax,dword ptr [esi+8]
 005B3183    mov         dword ptr [ebp-30],eax
 005B3186    mov         eax,dword ptr [ebp-4]
 005B3189    mov         ebx,dword ptr [eax+8];TPopupList.FCount:Integer
 005B318C    dec         ebx
 005B318D    test        ebx,ebx
>005B318F    jl          005B3327
 005B3195    inc         ebx
 005B3196    xor         edi,edi
 005B3198    mov         edx,edi
 005B319A    mov         eax,dword ptr [ebp-4]
 005B319D    call        TList.Get
 005B31A2    mov         edx,dword ptr [ebp-30]
 005B31A5    mov         edx,dword ptr [edx+8]
 005B31A8    xor         ecx,ecx
 005B31AA    call        TMenu.FindItem
 005B31AF    mov         dword ptr [ebp-0C],eax
 005B31B2    cmp         dword ptr [ebp-0C],0
>005B31B6    je          005B32D4
 005B31BC    mov         eax,dword ptr [ebp-4]
 005B31BF    mov         eax,dword ptr [eax+10];TPopupList.....FWindow:HWND
 005B31C2    push        eax
 005B31C3    call        user32.GetWindowDC
 005B31C8    mov         dword ptr [ebp-1C],eax
 005B31CB    xor         eax,eax
 005B31CD    push        ebp
 005B31CE    push        5B32CD
 005B31D3    push        dword ptr fs:[eax]
 005B31D6    mov         dword ptr fs:[eax],esp
 005B31D9    mov         dl,1
 005B31DB    mov         eax,[004D9044];TControlCanvas
 005B31E0    call        TCanvas.Create;TControlCanvas.Create
 005B31E5    mov         dword ptr [ebp-14],eax
 005B31E8    xor         eax,eax
 005B31EA    push        ebp
 005B31EB    push        5B32A8
 005B31F0    push        dword ptr fs:[eax]
 005B31F3    mov         dword ptr fs:[eax],esp
 005B31F6    mov         eax,dword ptr [ebp-1C]
 005B31F9    push        eax
 005B31FA    call        gdi32.SaveDC
 005B31FF    mov         dword ptr [ebp-18],eax
 005B3202    xor         eax,eax
 005B3204    push        ebp
 005B3205    push        5B328B
 005B320A    push        dword ptr fs:[eax]
 005B320D    mov         dword ptr fs:[eax],esp
 005B3210    mov         edx,dword ptr [ebp-1C]
 005B3213    mov         eax,dword ptr [ebp-14]
 005B3216    call        TCanvas.SetHandle
 005B321B    mov         eax,[007C4E78];^Screen:TScreen
 005B3220    mov         eax,dword ptr [eax]
 005B3222    mov         edx,dword ptr [eax+90];TScreen.FMenuFont:TFont
 005B3228    mov         eax,dword ptr [ebp-14]
 005B322B    call        TCanvas.SetFont
 005B3230    mov         eax,dword ptr [ebp-30]
 005B3233    mov         eax,dword ptr [eax+0C]
 005B3236    mov         dword ptr [ebp-20],eax
 005B3239    mov         eax,dword ptr [ebp-30]
 005B323C    mov         eax,dword ptr [eax+10]
 005B323F    mov         dword ptr [ebp-24],eax
 005B3242    lea         eax,[ebp-24]
 005B3245    push        eax
 005B3246    lea         ecx,[ebp-20]
 005B3249    mov         edx,dword ptr [ebp-14]
 005B324C    mov         eax,dword ptr [ebp-0C]
 005B324F    mov         ebx,dword ptr [eax]
 005B3251    call        dword ptr [ebx+4C];TMenuItem.sub_005B02C4
 005B3254    mov         eax,dword ptr [ebp-30]
 005B3257    mov         edx,dword ptr [ebp-20]
 005B325A    mov         dword ptr [eax+0C],edx
 005B325D    mov         eax,dword ptr [ebp-30]
 005B3260    mov         edx,dword ptr [ebp-24]
 005B3263    mov         dword ptr [eax+10],edx
 005B3266    xor         eax,eax
 005B3268    pop         edx
 005B3269    pop         ecx
 005B326A    pop         ecx
 005B326B    mov         dword ptr fs:[eax],edx
 005B326E    push        5B3292
 005B3273    xor         edx,edx
 005B3275    mov         eax,dword ptr [ebp-14]
 005B3278    call        TCanvas.SetHandle
 005B327D    mov         eax,dword ptr [ebp-18]
 005B3280    push        eax
 005B3281    mov         eax,dword ptr [ebp-1C]
 005B3284    push        eax
 005B3285    call        gdi32.RestoreDC
 005B328A    ret
>005B328B    jmp         @HandleFinally
>005B3290    jmp         005B3273
 005B3292    xor         eax,eax
 005B3294    pop         edx
 005B3295    pop         ecx
 005B3296    pop         ecx
 005B3297    mov         dword ptr fs:[eax],edx
 005B329A    push        5B32AF
 005B329F    mov         eax,dword ptr [ebp-14]
 005B32A2    call        TObject.Free
 005B32A7    ret
>005B32A8    jmp         @HandleFinally
>005B32AD    jmp         005B329F
 005B32AF    xor         eax,eax
 005B32B1    pop         edx
 005B32B2    pop         ecx
 005B32B3    pop         ecx
 005B32B4    mov         dword ptr fs:[eax],edx
 005B32B7    push        5B3341
 005B32BC    mov         eax,dword ptr [ebp-1C]
 005B32BF    push        eax
 005B32C0    mov         eax,dword ptr [ebp-4]
 005B32C3    mov         eax,dword ptr [eax+10];TPopupList......FWindow:HWND
 005B32C6    push        eax
 005B32C7    call        user32.ReleaseDC
 005B32CC    ret
>005B32CD    jmp         @HandleFinally
>005B32D2    jmp         005B32BC
 005B32D4    inc         edi
 005B32D5    dec         ebx
>005B32D6    jne         005B3198
>005B32DC    jmp         005B3327
 005B32DE    mov         eax,dword ptr [ebp-4]
 005B32E1    mov         ebx,dword ptr [eax+8];TPopupList.FCount:Integer
 005B32E4    dec         ebx
 005B32E5    test        ebx,ebx
>005B32E7    jl          005B3327
 005B32E9    inc         ebx
 005B32EA    xor         edi,edi
 005B32EC    mov         edx,edi
 005B32EE    mov         eax,dword ptr [ebp-4]
 005B32F1    call        TList.Get
 005B32F6    mov         dword ptr [ebp-34],eax
 005B32F9    mov         eax,dword ptr [ebp-34]
 005B32FC    mov         edx,dword ptr [eax]
 005B32FE    call        dword ptr [edx+48]
 005B3301    cmp         eax,dword ptr [esi+8]
>005B3304    je          005B3317
 005B3306    mov         edx,dword ptr [esi+8]
 005B3309    mov         cl,1
 005B330B    mov         eax,dword ptr [ebp-34]
 005B330E    call        TMenu.FindItem
 005B3313    test        eax,eax
>005B3315    je          005B3323
 005B3317    mov         edx,esi
 005B3319    mov         eax,dword ptr [ebp-34]
 005B331C    call        TMenu.ProcessMenuChar
>005B3321    jmp         005B3341
 005B3323    inc         edi
 005B3324    dec         ebx
>005B3325    jne         005B32EC
 005B3327    mov         eax,dword ptr [esi+8]
 005B332A    push        eax
 005B332B    mov         eax,dword ptr [esi+4]
 005B332E    push        eax
 005B332F    mov         eax,dword ptr [esi]
 005B3331    push        eax
 005B3332    mov         eax,dword ptr [ebp-4]
 005B3335    mov         eax,dword ptr [eax+10];TPopupList.......FWindow:HWND
 005B3338    push        eax
 005B3339    call        user32.DefWindowProcW
 005B333E    mov         dword ptr [esi+0C],eax
 005B3341    xor         eax,eax
 005B3343    pop         edx
 005B3344    pop         ecx
 005B3345    pop         ecx
 005B3346    mov         dword ptr fs:[eax],edx
 005B3349    push        5B335E
 005B334E    lea         eax,[ebp-38]
 005B3351    call        @UStrClr
 005B3356    ret
>005B3357    jmp         @HandleFinally
>005B335C    jmp         005B334E
 005B335E    pop         edi
 005B335F    pop         esi
 005B3360    pop         ebx
 005B3361    mov         esp,ebp
 005B3363    pop         ebp
 005B3364    ret
end;*}

//005B3368
procedure TPopupList.Add(Popup:TPopupMenu);
begin
{*
 005B3368    push        ebx
 005B3369    push        esi
 005B336A    mov         esi,edx
 005B336C    mov         ebx,eax
 005B336E    cmp         dword ptr [ebx+8],0
>005B3372    jne         005B3382
 005B3374    push        ebx
 005B3375    push        5B2DC4;TPopupList.MainWndProc
 005B337A    call        AllocateHWnd
 005B337F    mov         dword ptr [ebx+10],eax
 005B3382    mov         edx,esi
 005B3384    mov         eax,ebx
 005B3386    call        TList.Add
 005B338B    pop         esi
 005B338C    pop         ebx
 005B338D    ret
*}
end;

//005B3390
procedure TPopupList.Remove(Popup:TPopupMenu);
begin
{*
 005B3390    push        ebx
 005B3391    mov         ebx,eax
 005B3393    mov         eax,ebx
 005B3395    xor         ecx,ecx
 005B3397    call        TList.RemoveItem
 005B339C    cmp         dword ptr [ebx+8],0
>005B33A0    jne         005B33AA
 005B33A2    mov         eax,dword ptr [ebx+10]
 005B33A5    call        DeallocateHWnd
 005B33AA    pop         ebx
 005B33AB    ret
*}
end;

//005B33AC
constructor TPopupMenu.Create(AOwner:TComponent);
begin
{*
 005B33AC    push        ebx
 005B33AD    push        esi
 005B33AE    test        dl,dl
>005B33B0    je          005B33BA
 005B33B2    add         esp,0FFFFFFF0
 005B33B5    call        @ClassCreate
 005B33BA    mov         ebx,edx
 005B33BC    mov         esi,eax
 005B33BE    xor         edx,edx
 005B33C0    mov         eax,esi
 005B33C2    call        TMenu.Create
 005B33C7    mov         dword ptr [esi+68],0FFFFFFFF;TPopupMenu.FPopupPoint:TPoint
 005B33CE    mov         dword ptr [esi+6C],0FFFFFFFF;TPopupMenu.FPopupComponent:TComponent
 005B33D5    mov         eax,dword ptr [esi+44];TPopupMenu.FItems:TMenuItem
 005B33D8    mov         dword ptr [eax+9C],esi;TMenuItem.?f9C:TPopupMenu
 005B33DE    mov         edx,dword ptr [esi]
 005B33E0    mov         edx,dword ptr [edx+50];TPopupMenu.FImageChangeLink:TChangeLink
 005B33E3    mov         dword ptr [eax+98],edx;TMenuItem.FOnClick:TNotifyEvent
 005B33E9    mov         eax,[007C4A18];^Application:TApplication
 005B33EE    mov         eax,dword ptr [eax]
 005B33F0    mov         eax,dword ptr [eax+188];TApplication.FHandle:HWND
 005B33F6    mov         dword ptr [esi+48],eax;TPopupMenu.FWindowHandle:HWND
 005B33F9    mov         byte ptr [esi+71],1;TPopupMenu.FAutoPopup:Boolean
 005B33FD    mov         edx,esi
 005B33FF    mov         eax,[007CA778];gvar_007CA778
 005B3404    call        TPopupList.Add
 005B3409    mov         eax,esi
 005B340B    test        bl,bl
>005B340D    je          005B341E
 005B340F    call        @AfterConstruction
 005B3414    pop         dword ptr fs:[0]
 005B341B    add         esp,0C
 005B341E    mov         eax,esi
 005B3420    pop         esi
 005B3421    pop         ebx
 005B3422    ret
*}
end;

//005B3424
destructor TPopupMenu.Destroy();
begin
{*
 005B3424    push        ebx
 005B3425    push        esi
 005B3426    call        @BeforeDestruction
 005B342B    mov         ebx,edx
 005B342D    mov         esi,eax
 005B342F    mov         edx,esi
 005B3431    mov         eax,[007CA778];gvar_007CA778
 005B3436    call        TPopupList.Remove
 005B343B    mov         dl,0FC
 005B343D    and         dl,bl
 005B343F    mov         eax,esi
 005B3441    call        TMenu.Destroy
 005B3446    test        bl,bl
>005B3448    jle         005B3451
 005B344A    mov         eax,esi
 005B344C    call        @ClassDestroy
 005B3451    pop         esi
 005B3452    pop         ebx
 005B3453    ret
*}
end;

//005B3454
procedure sub_005B3454;
begin
{*
 005B3454    push        ebx
 005B3455    cmp         word ptr [eax+82],0;TPopupMenu.?f82:word
>005B345D    je          005B346D
 005B345F    mov         ebx,eax
 005B3461    mov         eax,dword ptr [ebx+84];TPopupMenu.?f84:dword
 005B3467    call        dword ptr [ebx+80];TPopupMenu.FOnPopup
 005B346D    pop         ebx
 005B346E    ret
*}
end;

//005B3470
{*function TPopupMenu.GetHelpContext:?;
begin
 005B3470    mov         eax,dword ptr [eax+44];TPopupMenu.FItems:TMenuItem
 005B3473    mov         eax,dword ptr [eax+60];TMenuItem.FHelpContext:THelpContext
 005B3476    ret
end;*}

//005B3478
procedure TPopupMenu.SetHelpContext(Value:THelpContext);
begin
{*
 005B3478    mov         eax,dword ptr [eax+44];TPopupMenu.FItems:TMenuItem
 005B347B    mov         dword ptr [eax+60],edx;TMenuItem.FHelpContext:THelpContext
 005B347E    ret
*}
end;

//005B3480
procedure sub_005B3480(?:TPopupMenu);
begin
{*
 005B3480    push        ebx
 005B3481    mov         ebx,eax
 005B3483    mov         eax,[007C4EF4];^gvar_007C7CB8:Cardinal
 005B3488    cmp         byte ptr [eax+0D],0
>005B348C    je          005B34C7
 005B348E    cmp         byte ptr [ebx+4D],0
>005B3492    je          005B34C7
 005B3494    lea         eax,[ebx+68]
 005B3497    call        FindPopupControl
 005B349C    test        eax,eax
>005B349E    je          005B34B1
 005B34A0    movzx       edx,byte ptr [eax+71];TControl.FBiDiMode:TBiDiMode
 005B34A4    mov         eax,ebx
 005B34A6    call        TMainMenu.SetBiDiMode
 005B34AB    mov         byte ptr [ebx+4D],1
>005B34AF    jmp         005B34C7
 005B34B1    mov         eax,[007C4A18];^Application:TApplication
 005B34B6    mov         eax,dword ptr [eax]
 005B34B8    movzx       edx,byte ptr [eax+41];TApplication.FBiDiMode:TBiDiMode
 005B34BC    mov         eax,ebx
 005B34BE    call        TMainMenu.SetBiDiMode
 005B34C3    mov         byte ptr [ebx+4D],1
 005B34C7    pop         ebx
 005B34C8    ret
*}
end;

//005B34CC
{*function sub_005B34CC(?:TPopupMenu):?;
begin
 005B34CC    push        esi
 005B34CD    xor         edx,edx
 005B34CF    mov         ecx,dword ptr ds:[7C4EF4];^gvar_007C7CB8:Cardinal
 005B34D5    cmp         byte ptr [ecx+0D],0
>005B34D9    je          005B3515
 005B34DB    cmp         byte ptr [eax+4D],0
>005B34DF    je          005B350E
 005B34E1    add         eax,68
 005B34E4    call        FindPopupControl
 005B34E9    mov         esi,eax
 005B34EB    test        esi,esi
>005B34ED    je          005B34FE
 005B34EF    mov         eax,esi
 005B34F1    mov         si,0FFC6
 005B34F5    call        @CallDynaInst;TControl.sub_004E7698
 005B34FA    mov         edx,eax
>005B34FC    jmp         005B3515
 005B34FE    mov         eax,[007C4A18];^Application:TApplication
 005B3503    mov         eax,dword ptr [eax]
 005B3505    call        TApplication.UseRightToLeftAlignment
 005B350A    mov         edx,eax
>005B350C    jmp         005B3515
 005B350E    cmp         byte ptr [eax+40],1
 005B3512    sete        dl
 005B3515    mov         eax,edx
 005B3517    pop         esi
 005B3518    ret
end;*}

//005B351C
procedure TPopupMenu.Popup(X:Integer; Y:Integer);
begin
{*
 005B351C    push        ebx
 005B351D    push        esi
 005B351E    push        edi
 005B351F    push        ebp
 005B3520    add         esp,0FFFFFFF8
 005B3523    mov         edi,ecx
 005B3525    mov         esi,edx
 005B3527    mov         ebx,eax
 005B3529    mov         dword ptr [esp],esi
 005B352C    mov         dword ptr [esp+4],edi
 005B3530    mov         edx,esp
 005B3532    mov         eax,ebx
 005B3534    call        005B35C8
 005B3539    mov         eax,ebx
 005B353B    call        005B3480
 005B3540    mov         edx,ebx
 005B3542    mov         eax,ebx
 005B3544    mov         ecx,dword ptr [eax]
 005B3546    call        dword ptr [ecx+50];TPopupMenu.sub_005B3454
 005B3549    xor         edx,edx
 005B354B    mov         eax,dword ptr [ebx+44];TPopupMenu.FItems:TMenuItem
 005B354E    call        005B1460
 005B3553    xor         edx,edx
 005B3555    mov         eax,dword ptr [ebx+44];TPopupMenu.FItems:TMenuItem
 005B3558    call        005B19A0
 005B355D    mov         eax,dword ptr [ebx+44];TPopupMenu.FItems:TMenuItem
 005B3560    call        005AD84C
 005B3565    mov         eax,ebx
 005B3567    call        005B26F8
 005B356C    mov         eax,ebx
 005B356E    call        005B34CC
 005B3573    and         eax,7F
 005B3576    lea         eax,[eax+eax*2]
 005B3579    lea         eax,[eax*2+7A1C92]
 005B3580    movzx       edx,byte ptr [ebx+70];TPopupMenu.FAlignment:TPopupAlignment
 005B3584    movzx       ebp,word ptr [eax+edx*2]
 005B3588    movzx       eax,byte ptr [ebx+78];TPopupMenu.FTrackButton:TTrackButton
 005B358C    or          bp,word ptr [eax*2+7A1C9E]
 005B3594    movzx       ebp,bp
 005B3597    movzx       eax,byte ptr [ebx+79];TPopupMenu.FMenuAnimation:TMenuAnimation
 005B359B    shl         eax,0A
 005B359E    or          ebp,eax
 005B35A0    push        0
 005B35A2    mov         eax,[007CA778];gvar_007CA778
 005B35A7    mov         eax,dword ptr [eax+10]
 005B35AA    push        eax
 005B35AB    push        0
 005B35AD    push        edi
 005B35AE    push        esi
 005B35AF    push        ebp
 005B35B0    mov         eax,dword ptr [ebx+44];TPopupMenu.FItems:TMenuItem
 005B35B3    call        005AD984
 005B35B8    push        eax
 005B35B9    call        user32.TrackPopupMenu
 005B35BE    pop         ecx
 005B35BF    pop         edx
 005B35C0    pop         ebp
 005B35C1    pop         edi
 005B35C2    pop         esi
 005B35C3    pop         ebx
 005B35C4    ret
*}
end;

//005B35C8
{*procedure sub_005B35C8(?:TPopupMenu; ?:?);
begin
 005B35C8    push        esi
 005B35C9    push        edi
 005B35CA    add         esp,0FFFFFFF8
 005B35CD    mov         esi,edx
 005B35CF    lea         edi,[esp]
 005B35D2    movs        dword ptr [edi],dword ptr [esi]
 005B35D3    movs        dword ptr [edi],dword ptr [esi]
 005B35D4    mov         edx,dword ptr [esp]
 005B35D7    mov         dword ptr [eax+68],edx;TPopupMenu.FPopupPoint:TPoint
 005B35DA    mov         edx,dword ptr [esp+4]
 005B35DE    mov         dword ptr [eax+6C],edx;TPopupMenu.FPopupComponent:TComponent
 005B35E1    pop         ecx
 005B35E2    pop         edx
 005B35E3    pop         edi
 005B35E4    pop         esi
 005B35E5    ret
end;*}

//005B35E8
procedure TMenuItemStack.ClearItem(AItem:TMenuItem);
begin
{*
 005B35E8    push        ebx
 005B35E9    push        esi
 005B35EA    push        edi
 005B35EB    push        ebp
 005B35EC    mov         ebp,edx
 005B35EE    mov         edi,eax
 005B35F0    mov         eax,dword ptr [edi+4]
 005B35F3    mov         esi,dword ptr [eax+8]
 005B35F6    dec         esi
 005B35F7    test        esi,esi
>005B35F9    jl          005B361E
 005B35FB    inc         esi
 005B35FC    xor         ebx,ebx
 005B35FE    mov         eax,dword ptr [edi+4]
 005B3601    mov         edx,ebx
 005B3603    call        TList.Get
 005B3608    cmp         ebp,dword ptr [eax]
>005B360A    jne         005B361A
 005B360C    mov         eax,dword ptr [edi+4]
 005B360F    mov         edx,ebx
 005B3611    call        TList.Get
 005B3616    xor         edx,edx
 005B3618    mov         dword ptr [eax],edx
 005B361A    inc         ebx
 005B361B    dec         esi
>005B361C    jne         005B35FE
 005B361E    pop         ebp
 005B361F    pop         edi
 005B3620    pop         esi
 005B3621    pop         ebx
 005B3622    ret
*}
end;

//005B3624
{*procedure sub_005B3624(?:TMenuItem; ?:TControlCanvas; ?:?; ?:?);
begin
 005B3624    push        ebp
 005B3625    mov         ebp,esp
 005B3627    add         esp,0FFFFFFE8
 005B362A    push        ebx
 005B362B    push        esi
 005B362C    push        edi
 005B362D    mov         esi,ecx
 005B362F    lea         edi,[ebp-18]
 005B3632    movs        dword ptr [edi],dword ptr [esi]
 005B3633    movs        dword ptr [edi],dword ptr [esi]
 005B3634    movs        dword ptr [edi],dword ptr [esi]
 005B3635    movs        dword ptr [edi],dword ptr [esi]
 005B3636    mov         edi,edx
 005B3638    mov         dword ptr [ebp-4],eax
 005B363B    mov         eax,[007C4590];^gvar_0079EDE0
 005B3640    cmp         dword ptr [eax],4
>005B3643    jg          005B365D
 005B3645    mov         eax,[007C4590];^gvar_0079EDE0
 005B364A    cmp         dword ptr [eax],4
>005B364D    jne         005B3659
 005B364F    mov         eax,[007C4B24];^gvar_0079EDE4
 005B3654    cmp         dword ptr [eax],0
>005B3657    jg          005B365D
 005B3659    xor         ebx,ebx
>005B365B    jmp         005B365F
 005B365D    mov         bl,1
 005B365F    mov         eax,dword ptr [ebp-4]
 005B3662    mov         si,0FFF1
 005B3666    call        @CallDynaInst;TMenuItem.sub_0049ECBC
 005B366B    mov         edx,dword ptr ds:[5ABC3C];TMainMenu
 005B3671    call        @IsClass
 005B3676    mov         byte ptr [ebp-5],al
 005B3679    test        byte ptr [ebp+8],1
>005B367D    je          005B36AB
 005B367F    cmp         byte ptr [ebp-5],0
>005B3683    je          005B368F
 005B3685    cmp         byte ptr [ebp-5],0
>005B3689    je          005B36AB
 005B368B    test        bl,bl
>005B368D    jne         005B36AB
 005B368F    mov         edx,0FF00000D
 005B3694    mov         eax,dword ptr [edi+48];TControlCanvas.FBrush:TBrush
 005B3697    call        TBrush.SetColor
 005B369C    mov         edx,0FF00000E
 005B36A1    mov         eax,dword ptr [edi+40];TControlCanvas.FFont:TFont
 005B36A4    call        TFont.SetColor
>005B36A9    jmp         005B36EB
 005B36AB    test        bl,bl
>005B36AD    je          005B36D1
 005B36AF    test        byte ptr [ebp+8],80
>005B36B3    je          005B36D1
 005B36B5    mov         edx,0FF000004
 005B36BA    mov         eax,dword ptr [edi+48];TControlCanvas.FBrush:TBrush
 005B36BD    call        TBrush.SetColor
 005B36C2    mov         edx,0FF000011
 005B36C7    mov         eax,dword ptr [edi+40];TControlCanvas.FFont:TFont
 005B36CA    call        TFont.SetColor
>005B36CF    jmp         005B36EB
 005B36D1    mov         edx,0FF000004
 005B36D6    mov         eax,dword ptr [edi+48];TControlCanvas.FBrush:TBrush
 005B36D9    call        TBrush.SetColor
 005B36DE    mov         edx,0FF000007
 005B36E3    mov         eax,dword ptr [edi+40];TControlCanvas.FFont:TFont
 005B36E6    call        TFont.SetColor
 005B36EB    movzx       eax,word ptr [ebp+8]
 005B36EF    push        eax
 005B36F0    movzx       eax,byte ptr [ebp-5]
 005B36F4    push        eax
 005B36F5    lea         ecx,[ebp-18]
 005B36F8    mov         edx,edi
 005B36FA    mov         eax,dword ptr [ebp-4]
 005B36FD    mov         ebx,dword ptr [eax]
 005B36FF    call        dword ptr [ebx+44];TMenuItem.sub_005AFC28
 005B3702    pop         edi
 005B3703    pop         esi
 005B3704    pop         ebx
 005B3705    mov         esp,ebp
 005B3707    pop         ebp
 005B3708    ret         4
end;*}

//005B370C
{*procedure sub_005B370C(?:string; ?:?);
begin
 005B370C    push        ebx
 005B370D    push        esi
 005B370E    push        edi
 005B370F    push        ebp
 005B3710    add         esp,0FFFFFFF8
 005B3713    mov         esi,edx
 005B3715    mov         ebx,eax
 005B3717    mov         eax,esi
 005B3719    mov         edx,ebx
 005B371B    call        @UStrAsg
 005B3720    mov         ebp,1
>005B3725    jmp         005B37FA
 005B372A    mov         eax,dword ptr [esi]
 005B372C    movzx       edi,word ptr [eax+ebp*2-2]
 005B3731    cmp         di,0D800
>005B3736    jb          005B373F
 005B3738    cmp         di,0DFFF
>005B373D    jbe         005B3743
 005B373F    xor         eax,eax
>005B3741    jmp         005B3745
 005B3743    mov         al,1
 005B3745    test        al,al
>005B3747    je          005B374F
 005B3749    inc         ebp
>005B374A    jmp         005B37F9
 005B374F    mov         eax,dword ptr [esi]
 005B3751    cmp         word ptr [eax+ebp*2-2],26
>005B3757    jne         005B37F9
 005B375D    mov         eax,[007C4EF4];^gvar_007C7CB8:Cardinal
 005B3762    cmp         byte ptr [eax+0C],0;TSysLocale.FarEast:Boolean
>005B3766    je          005B37D4
 005B3768    cmp         ebp,1
>005B376B    jle         005B3792
 005B376D    mov         eax,dword ptr [esi]
 005B376F    mov         dword ptr [esp],eax
 005B3772    cmp         dword ptr [esp],0
>005B3776    je          005B3783
 005B3778    mov         eax,dword ptr [esp]
 005B377B    sub         eax,4
 005B377E    mov         eax,dword ptr [eax]
 005B3780    mov         dword ptr [esp],eax
 005B3783    mov         eax,dword ptr [esp]
 005B3786    sub         eax,ebp
 005B3788    cmp         eax,2
 005B378B    setge       byte ptr [esp+4]
>005B3790    jmp         005B3797
 005B3792    mov         byte ptr [esp+4],0
 005B3797    cmp         byte ptr [esp+4],0
>005B379C    je          005B37AD
 005B379E    mov         eax,dword ptr [esi]
 005B37A0    cmp         word ptr [eax+ebp*2-4],28
 005B37A6    sete        byte ptr [esp+5]
>005B37AB    jmp         005B37B2
 005B37AD    mov         byte ptr [esp+5],0
 005B37B2    cmp         byte ptr [esp+5],0
>005B37B7    je          005B37C8
 005B37B9    mov         eax,dword ptr [esi]
 005B37BB    cmp         word ptr [eax+ebp*2+2],29
 005B37C1    sete        byte ptr [esp+6]
>005B37C6    jmp         005B37CD
 005B37C8    mov         byte ptr [esp+6],0
 005B37CD    movzx       ebx,byte ptr [esp+6]
>005B37D2    jmp         005B37D6
 005B37D4    xor         ebx,ebx
 005B37D6    test        bl,bl
>005B37D8    je          005B37EB
 005B37DA    mov         edx,ebp
 005B37DC    dec         edx
 005B37DD    mov         eax,esi
 005B37DF    mov         ecx,4
 005B37E4    call        @UStrDelete
>005B37E9    jmp         005B37F9
 005B37EB    mov         eax,esi
 005B37ED    mov         ecx,1
 005B37F2    mov         edx,ebp
 005B37F4    call        @UStrDelete
 005B37F9    inc         ebp
 005B37FA    mov         eax,dword ptr [esi]
 005B37FC    call        @UStrLen
 005B3801    cmp         ebp,eax
>005B3803    jle         005B372A
 005B3809    pop         ecx
 005B380A    pop         edx
 005B380B    pop         ebp
 005B380C    pop         edi
 005B380D    pop         esi
 005B380E    pop         ebx
 005B380F    ret
end;*}

//005B3810
function GetHotkey(const Text:UnicodeString):UnicodeString;
begin
{*
 005B3810    push        ebx
 005B3811    push        esi
 005B3812    push        edi
 005B3813    push        ebp
 005B3814    push        ecx
 005B3815    mov         dword ptr [esp],edx
 005B3818    mov         edi,eax
 005B381A    mov         eax,dword ptr [esp]
 005B381D    call        @UStrClr
 005B3822    mov         ebx,1
 005B3827    mov         eax,edi
 005B3829    test        eax,eax
>005B382B    je          005B3832
 005B382D    sub         eax,4
 005B3830    mov         eax,dword ptr [eax]
 005B3832    mov         ebp,eax
 005B3834    cmp         ebp,ebx
>005B3836    jl          005B3882
 005B3838    movzx       esi,word ptr [edi+ebx*2-2]
 005B383D    cmp         si,0D800
>005B3842    jb          005B384B
 005B3844    cmp         si,0DFFF
>005B3849    jbe         005B384F
 005B384B    xor         eax,eax
>005B384D    jmp         005B3851
 005B384F    mov         al,1
 005B3851    test        al,al
>005B3853    je          005B3858
 005B3855    inc         ebx
>005B3856    jmp         005B387D
 005B3858    cmp         word ptr [edi+ebx*2-2],26
>005B385E    jne         005B387D
 005B3860    mov         eax,ebp
 005B3862    sub         eax,ebx
 005B3864    dec         eax
>005B3865    jl          005B387D
 005B3867    inc         ebx
 005B3868    cmp         word ptr [edi+ebx*2-2],26
>005B386E    je          005B387D
 005B3870    mov         eax,dword ptr [esp]
 005B3873    movzx       edx,word ptr [edi+ebx*2-2]
 005B3878    call        @UStrFromWChar
 005B387D    inc         ebx
 005B387E    cmp         ebp,ebx
>005B3880    jge         005B3838
 005B3882    pop         edx
 005B3883    pop         ebp
 005B3884    pop         edi
 005B3885    pop         esi
 005B3886    pop         ebx
 005B3887    ret
*}
end;

//005B3888
{*function sub_005B3888(?:string; ?:?):?;
begin
 005B3888    push        ebp
 005B3889    mov         ebp,esp
 005B388B    add         esp,0FFFFFFF0
 005B388E    push        ebx
 005B388F    push        esi
 005B3890    xor         ecx,ecx
 005B3892    mov         dword ptr [ebp-8],ecx
 005B3895    mov         dword ptr [ebp-4],ecx
 005B3898    mov         esi,edx
 005B389A    mov         ebx,eax
 005B389C    xor         eax,eax
 005B389E    push        ebp
 005B389F    push        5B38F7
 005B38A4    push        dword ptr fs:[eax]
 005B38A7    mov         dword ptr fs:[eax],esp
 005B38AA    lea         edx,[ebp-4]
 005B38AD    mov         eax,ebx
 005B38AF    call        005B370C
 005B38B4    mov         ebx,dword ptr [ebp-4]
 005B38B7    lea         edx,[ebp-8]
 005B38BA    mov         eax,esi
 005B38BC    call        005B370C
 005B38C1    mov         esi,dword ptr [ebp-8]
 005B38C4    mov         dword ptr [ebp-0C],esi
 005B38C7    mov         edx,dword ptr [ebp-0C]
 005B38CA    mov         dword ptr [ebp-10],ebx
 005B38CD    mov         eax,dword ptr [ebp-10]
 005B38D0    call        AnsiCompareText
 005B38D5    test        eax,eax
 005B38D7    sete        al
 005B38DA    mov         ebx,eax
 005B38DC    xor         eax,eax
 005B38DE    pop         edx
 005B38DF    pop         ecx
 005B38E0    pop         ecx
 005B38E1    mov         dword ptr fs:[eax],edx
 005B38E4    push        5B38FE
 005B38E9    lea         eax,[ebp-8]
 005B38EC    mov         edx,2
 005B38F1    call        @UStrArrayClr
 005B38F6    ret
>005B38F7    jmp         @HandleFinally
>005B38FC    jmp         005B38E9
 005B38FE    mov         eax,ebx
 005B3900    pop         esi
 005B3901    pop         ebx
 005B3902    mov         esp,ebp
 005B3904    pop         ebp
 005B3905    ret
end;*}

Initialization
//0079D69C
{*
 0079D69C    sub         dword ptr ds:[7CA780],1
>0079D6A3    jae         0079D720
 0079D6A5    mov         eax,5B3908
 0079D6AA    call        @InitResStringImports
 0079D6AF    mov         eax,[004DC470];TControl
 0079D6B4    call        StartClassGroup
 0079D6B9    mov         eax,[004DC470];TControl
 0079D6BE    call        ActivateClassGroup
 0079D6C3    mov         edx,dword ptr ds:[4DC470];TControl
 0079D6C9    mov         eax,[005AA664];TMenuItem
 0079D6CE    call        GroupDescendentsWith
 0079D6D3    mov         edx,dword ptr ds:[4DC470];TControl
 0079D6D9    mov         eax,[005AB560];TMenu
 0079D6DE    call        GroupDescendentsWith
 0079D6E3    mov         eax,[005AA664];TMenuItem
 0079D6E8    call        RegisterClass
 0079D6ED    mov         dl,1
 0079D6EF    mov         eax,[0046D5A0];TBits
 0079D6F4    call        TObject.Create
 0079D6F9    mov         [007CA784],eax;gvar_007CA784
 0079D6FE    mov         dl,1
 0079D700    mov         eax,[005AC690];TPopupList
 0079D705    call        TObject.Create
 0079D70A    mov         [007CA778],eax;gvar_007CA778
 0079D70F    mov         dl,1
 0079D711    mov         eax,[005AC7F4];TMenuItemStack
 0079D716    call        TOrderedList.Create
 0079D71B    mov         [007CA77C],eax;gvar_007CA77C
 0079D720    ret
*}
Finalization
//005B39E4
{*
 005B39E4    push        ebp
 005B39E5    mov         ebp,esp
 005B39E7    xor         eax,eax
 005B39E9    push        ebp
 005B39EA    push        5B3A52
 005B39EF    push        dword ptr fs:[eax]
 005B39F2    mov         dword ptr fs:[eax],esp
 005B39F5    inc         dword ptr ds:[7CA780]
>005B39FB    jne         005B3A44
 005B39FD    mov         eax,[007CA77C];gvar_007CA77C
 005B3A02    call        TObject.Free
 005B3A07    mov         eax,[007CA778];gvar_007CA778
 005B3A0C    call        TObject.Free
 005B3A11    mov         eax,[007CA784];gvar_007CA784
 005B3A16    call        TObject.Free
 005B3A1B    mov         eax,7A1B90;^'1234567890ABCDEFGHIJKLMNOPQRSTUVWXYZ'
 005B3A20    call        @UStrClr
 005B3A25    mov         eax,7A1BA0
 005B3A2A    mov         ecx,12
 005B3A2F    mov         edx,dword ptr ds:[4012B8];string
 005B3A35    call        @FinalizeArray
 005B3A3A    mov         eax,5B3908
 005B3A3F    call        @FinalizeResStringImports
 005B3A44    xor         eax,eax
 005B3A46    pop         edx
 005B3A47    pop         ecx
 005B3A48    pop         ecx
 005B3A49    mov         dword ptr fs:[eax],edx
 005B3A4C    push        5B3A59
 005B3A51    ret
>005B3A52    jmp         @HandleFinally
>005B3A57    jmp         005B3A51
 005B3A59    pop         ebp
 005B3A5A    ret
*}
end.