//***************************************
//IDR home page: http://kpnc.org/idr32/en
//Decompiled by IDR v.01.04.2017
//***************************************
unit Vcl.Controls;

interface

uses
  SysUtils, Classes, Vcl.Controls, System.Win.Registry, Vcl.Graphics, System.UIConsts, System.TypInfo, System.Classes, System.Generics.Defaults, System.Generics.Collections, Vcl.ImgList, Vcl.Menus, FXOverwriteDialog, FXEsaFileMerge, FXAboutFrames, Vcl.Samples.Spin, Vcl.Mask, Vcl.Grids, System.Generics.Defaults, Vcl.Dialogs, System.Contnrs, System.ImageList, System.Generics.Collections, System.Generics.Defaults, System.SyncObjs, Winapi.CommCtrl;

type
  _NOTIFYICONDATAW = _NOTIFYICONDATAW = record//size=3BC
cbSize:Cardinal;//f0
Wnd:HWND;//f4
uID:Cardinal;//f8
uFlags:Cardinal;//fC
uCallbackMessage:Cardinal;//f10
hIcon:HICON;//f14
szTip:?;//f18
dwState:Cardinal;//f118
dwStateMask:Cardinal;//f11C
szInfo:?;//f120
uTimeout:Cardinal;//f320
uVersion:Cardinal;//f320
szInfoTitle:?;//f324
dwInfoFlags:Cardinal;//f3A4
guidItem:TGUID;//f3A8
hBalloonIcon:HICON;//f3B8
end;
//Methods:
SizeOf:Integer;//004D7F00;
  TInteractiveGestureFlag = (gfBegin, gfInertia, gfEnd);
  TInteractiveGestureFlags = set of TInteractiveGestureFlag;
  TInteractiveGesture = (igZoom, igPan, igRotate, igTwoFingerTap, igPressAndTap);
  TInteractiveGestures = set of TInteractiveGesture;
  TInteractiveGestureOption = (igoPanSingleFingerHorizontal, igoPanSingleFingerVertical, igoPanInertia, igoPanGutter, igoParentPassthrough);
  TInteractiveGestureOptions = set of TInteractiveGestureOption;
  THintInfo = THintInfo = record//size=40
f38:string;//f38
end;
HintControl:TControl;//f0
HintWindowClass:THintWindowClass;//f4
HintPos:TPoint;//f8
HintMaxWidth:Integer;//f10
HintColor:TColor;//f14
CursorRect:TRect;//f18
CursorPos:TPoint;//f28
ReshowTimeout:Integer;//f30
HideTimeout:Integer;//f34
HintStr:string;//f38
HintData:Pointer;//f3C
end;;
  TAlign = (alNone, alTop, alBottom, alLeft, alRight, alClient, alCustom);
  TDragObject = class(TObject)
  published
    procedure ShowDragImage;//004E3DB8
    procedure AfterConstruction;//004E3E18
    procedure BeforeDestruction;//004E3E08
    function Instance:NativeUInt;//004E3DB0
    procedure Assign(Source:TDragObject);//004E3BD4
    function GetName:string;//004E3C34
    procedure HideDragImage;//004E3DAC
  public
    FAlwaysShowDragImages:Boolean;//f4
    FCancelling:Boolean;//f5
    FDragHandle:HWND;//f8
    FDragPos:TPoint;//fC
    FDragTarget:Pointer;//f14
    FDragTargetPos:TPoint;//f18
    FDropped:Boolean;//f20
    FMouseDeltaX:Double;//f28
    FMouseDeltaY:Double;//f30
    FRightClickCancels:Boolean;//f38
    procedure AfterConstruction; virtual;//004E3E18
    procedure BeforeDestruction; virtual;//004E3E08
    procedure v0; virtual;//v0//004E3C2C
    function GetDragCursor(Accepted:Boolean; X:Integer; Y:Integer):TCursor; virtual;//v4//004E3D94
    //function v8:?; virtual;//v8//004E3D90
    //procedure vC(?:?); virtual;//vC//004E3C5C
    procedure Assign(Source:TDragObject); virtual;//v10//004E3BD4
    function GetName:string; virtual;//v14//004E3C34
    procedure HideDragImage; virtual;//v18//004E3DAC
    function Instance:NativeUInt; virtual;//v1C//004E3DB0
    procedure ShowDragImage; virtual;//v20//004E3DB8
    function Capture:HWND;//004E3C14
    procedure ReleaseCapture(Handle:Windows.HWND);//004E3C48
    procedure MainWndProc(var Message:Messages.TMessage);//004E3DBC
  end;
  TBaseDragControlObject = class(TDragObject)
  published
    procedure Assign(Source:TDragObject);//004E3E64
    constructor Create;//004E3E28
  public
    ..............FControl:TControl;//f40
    //procedure v0(?:?; ?:?; ?:?; ?:?); virtual;//v0//004E3EC4
    procedure Assign(Source:TDragObject); virtual;//v10//004E3E64
    //procedure v24(?:?; ?:?; ?:?); virtual;//v24//004E3E90
    constructor Create; virtual;//v28//004E3E28
  end;
  TDragControlObject = class(TBaseDragControlObject)
  published
    procedure ShowDragImage;//004E3F44
    procedure HideDragImage;//004E3F20
  public
    //function GetDragCursor(Accepted:Boolean; X:Integer; Y:Integer):?; virtual;//v4//004E3EF8
    procedure v8; virtual;//v8//004E3F14
    procedure HideDragImage; virtual;//v18//004E3F20
    procedure ShowDragImage; virtual;//v20//004E3F44
  end;
  TDragControlObjectEx = class(TDragControlObject)
  published
    procedure BeforeDestruction;//004E3F68
  public
    procedure BeforeDestruction; virtual;//004E3F68
  end;
  TDragDockObject = class(TBaseDragControlObject)
  published
    procedure Assign(Source:TDragObject);//004E4000
    destructor Destroy();//004E3FD4
    constructor Create;//004E3F6C
  public
    FBrush:TBrush;//f48
    FDockRect:TRect;//f4C
    FDropAlign:TAlign;//f5C
    FDropOnControl:TControl;//f60
    FEraseDockRect:TRect;//f64
    FFloating:Boolean;//f74
    destructor Destroy(); virtual;//004E3FD4
    function GetDragCursor(Accepted:Boolean; X:Integer; Y:Integer):TCursor; virtual;//v4//004E4160
    procedure Assign(Source:TDragObject); virtual;//v10//004E4000
    //procedure v24(?:?; ?:?; ?:?); virtual;//v24//004E406C
    constructor Create; virtual;//v28//004E3F6C
    procedure AdjustDockRect(ARect:Types.TRect); virtual;//v2C//004E40BC
    procedure v30; virtual;//v30//004E4138
    procedure v34; virtual;//v34//004E414C
    //function v38:?; virtual;//v38//004E4170
    //function v3C:?; virtual;//v3C//004E416C
    procedure SetBrush(Value:Graphics.TBrush);//004E4060
  end;
  TDragDockObjectEx = class(TDragDockObject)
  published
    procedure BeforeDestruction;//004E4178
  public
    procedure BeforeDestruction; virtual;//004E4178
  end;
  TControlCanvas = class(TCanvas)
  published
    procedure UpdateTextFlags;//004E5518
    procedure FreeHandle;//004E54CC
    destructor Destroy();//004E53CC
  public
    FControl:TControl;//f58
    FDeviceContext:HDC;//f5C
    FWindowHandle:HWND;//f60
    destructor Destroy(); virtual;//004E53CC
    procedure v9C; virtual;//v9C//004E53F8
    procedure SetControl(AControl:TControl);//004E5500
  end;
  TControlActionLink = class(TActionLink)
  public
    .............FClient:TControl;//f18
    procedure AssignClient(AClient:TObject); virtual;//v0//004E5658
    //function v8:?; virtual;//v8//004E58B8
    //procedure v10(?:?; ?:?); virtual;//v10//004E5970
    //function IsCaptionLinked:?; virtual;//v24//004E5774
    //function IsEnabledLinked:?; virtual;//v2C//004E57F0
    //function IsHelpLinked:?; virtual;//v38//004E599C
    //function IsHintLinked:?; virtual;//v3C//004E582C
    //function IsStatusActionLinked:?; virtual;//v48//004E5890
    procedure SetCaption(const Value:UnicodeString); virtual;//v54//004E58E0
    //procedure v5C(?:?); virtual;//v5C//004E5904
    procedure SetHelpKeyword(const Value:UnicodeString); virtual;//v64//004E5A10
    procedure SetHelpContext(Value:Classes.THelpContext); virtual;//v68//004E59F0
    //procedure v6C(?:?); virtual;//v6C//004E5A30
    //procedure v70(?:?); virtual;//v70//004E592C
    procedure SetVisible(Value:Boolean); virtual;//v7C//004E5950
    function IsDropdownMenuLinked:Boolean; virtual;//v84//004E57DC
    function IsEnableDropdownLinked:Boolean; virtual;//v88//004E5818
    //function v8C:?; virtual;//v8C//004E585C
    //function v90(?:?):?; virtual;//v90//004E5674
    procedure v94; virtual;//v94//004E5900
    procedure v98; virtual;//v98//004E5928
    procedure SetPopupMenu(Value:Menus.TPopupMenu); virtual;//v9C//004E5A50
  end;
  :21 = (csLButtonDown, csClicked, csPalette, csReadingState, csAlignmentNeeded, csFocusing, csCreating, csPaintCopy, csCustomPaint, csDestroyingHandle, csDocking, csDesignerHide, csPanning, csRecreating, csAligning, csGlassPaint, csPrintClient);
  TControlState = set of :21;
  :31 = (csAcceptsControls, csCaptureMouse, csDesignInteractive, csClickEvents, csFramed, csSetCaption, csOpaque, csDoubleClicks, csFixedWidth, csFixedHeight, csNoDesignVisible, csReplicatable, csNoStdEvents, csDisplayDragImage, csReflector, csActionClient, csMenuEvents, csNeedsBorderPaint, csParentBackground, csPannable, csAlignWithMargins, csGestures, csPaintBlackOpaqueOnGlass, csOverrideStylePaint);
  TControlStyle = set of :31;
  :41 = (sfLeft, sfTop, sfWidth, sfHeight, sfFont, sfDesignSize);
  TScalingFlags = set of :41;
  TSizeConstraints = class(TPersistent)
  published
    constructor Create;//004E5544
  public
    FControl:TControl;//f4
    FMaxHeight:TConstraintSize;//f8
    FMaxWidth:TConstraintSize;//fC
    FMinHeight:TConstraintSize;//f10
    FMinWidth:TConstraintSize;//f14
    FOnChange:TNotifyEvent;//f18
    procedure AssignTo(Dest:Classes.TPersistent); virtual;//v0//004E5580
    constructor Create; virtual;//v10//004E5544
    procedure SetMaxHeight(Value:TConstraintSize; ?:Integer);//004E55C8
  end;
  TMargins = class(TPersistent)
  published
    procedure TLicFile>.Compare(Left:TLicFile; Right:TLicFile);//0079EC18
    procedure SetControlBounds(ALeft:Integer; ATop:Integer; Aligning:Boolean; AHeight:Integer; AWidth:Integer);//004F6B80
    constructor Create;//004F6A78
  public
    FControl:TControl;//f4
    FLeft:TMarginSize;//f8
    FTop:TMarginSize;//fC
    FRight:TMarginSize;//f10
    FBottom:TMarginSize;//f14
    FOnChange:TNotifyEvent;//f18
    f1C:TWinControl;//f1C
    procedure AssignTo(Dest:Classes.TPersistent); virtual;//v0//004F6ABC
    //function v10(?:?):?; virtual;//v10//004F6C74
    procedure InitDefaults(Margins:TMargins); virtual;//v14//004F6B18
    constructor Create; virtual;//v18//004F6A78
    procedure SetLeft(Value:TMarginSize; ?:Integer);//004F6B38
  end;
  TPadding = class(TMargins)
  public
    procedure InitDefaults(Margins:TMargins); virtual;//v14//004F6E40
  end;
  TGestureEventInfo = TGestureEventInfo = record//size=20
GestureID:TGestureID;//f0
Location:TPoint;//f4
Flags:TInteractiveGestureFlags;//fC
Angle:Double;//f10
InertiaVector:TSmallPoint;//f18
Distance:Integer;//f1C
TapLocation:TSmallPoint;//f1C
end;;
  TGestureEvent = procedure(Sender:TObject; const EventInfo:TGestureEventInfo; var Handled:Boolean) of object;;
  TStandardGestures = set of ?;
  TTabletOption = (toPressAndHold, toPenTapFeedback, toPenBarrelFeedback, toTouchUIForceOn, toTouchUIForceOff, toTouchSwitch, toFlicks, toSmoothScrolling, toFlickFallbackKeys);
  TTabletOptions = set of TTabletOption;
  TGestureType = (gtStandard, gtRecorded, gtRegistered, gtNone);
  TGestureOption = (goUniDirectional, goSkew, goEndpoint, goRotate);
  TGestureOptions = set of TGestureOption;
  TGestureArray = array of TCustomGestureCollectionItem;
//elSize = 4;
  TGesturePointArray = array of TPoint;
//elSize = 8;
  TCustomGestureCollectionItem = class(TCollectionItem)
  public
    procedure v24; virtual; abstract;//v24//00405554
    procedure v28; virtual; abstract;//v28//00405554
    procedure v2C; virtual; abstract;//v2C//00405554
    procedure v30; virtual; abstract;//v30//00405554
    procedure v34; virtual; abstract;//v34//00405554
    procedure v38; virtual; abstract;//v38//00405554
    procedure v3C; virtual; abstract;//v3C//00405554
    procedure v40; virtual; abstract;//v40//00405554
    procedure v44; virtual; abstract;//v44//00405554
    procedure v48; virtual; abstract;//v48//00405554
    procedure v4C; virtual; abstract;//v4C//00405554
    procedure v50; virtual; abstract;//v50//00405554
    procedure v54; virtual; abstract;//v54//00405554
    procedure v58; virtual; abstract;//v58//00405554
    procedure v5C; virtual; abstract;//v5C//00405554
  end;
  TCustomGestureManager = class(TComponent)
  published
    procedure TLicFile>.Compare(Left:TLicFile; Right:TLicFile);//0079EC18
  public
    procedure v44; virtual; abstract;//v44//00405554
    procedure v48; virtual; abstract;//v48//00405554
    procedure v4C; virtual; abstract;//v4C//00405554
    procedure v50; virtual; abstract;//v50//00405554
    procedure v54; virtual; abstract;//v54//00405554
    procedure v58; virtual; abstract;//v58//00405554
    procedure v5C; virtual; abstract;//v5C//00405554
    procedure v60; virtual; abstract;//v60//00405554
    procedure v64; virtual; abstract;//v64//00405554
    procedure v68; virtual; abstract;//v68//00405554
    procedure v6C; virtual; abstract;//v6C//00405554
    procedure v70; virtual; abstract;//v70//00405554
    procedure v74; virtual; abstract;//v74//00405554
    procedure v78; virtual; abstract;//v78//00405554
    procedure v7C; virtual; abstract;//v7C//00405554
  end;
  TCustomGestureEngine.TGestureEngineFlag = (efMouseEvents, efTouchEvents);
  TCustomGestureEngine.TGestureEngineFlags = set of TCustomGestureEngine.TGestureEngineFlag;
  TCustomGestureEngine = class(TObject)
  published
    function Supported:Boolean;//004F7E94
    procedure TLicFile>.Compare(Left:TLicFile; Right:TLicFile);//0079EC18
  public
    procedure v0; virtual; abstract;//v0//00405554
    procedure v4; virtual; abstract;//v4//00405554
    procedure v8; virtual; abstract;//v8//00405554
    procedure vC; virtual; abstract;//vC//00405554
    procedure v10; virtual; abstract;//v10//00405554
    function Supported:Boolean; virtual;//v14//004F7E94
  end;
  TCustomTouchManager = class(TPersistent)
  published
    procedure TLicFile>.Compare(Left:TLicFile; Right:TLicFile);//0079EC18
    destructor Destroy();//004F7F04
    constructor Create;//004F7E98
  public
    FControl:TControl;//f4
    FGestureEngine:TCustomGestureEngine;//f8
    FGestureManager:TCustomGestureManager;//fC
    FInteractiveGestures:TInteractiveGestures;//f10
    FInteractiveGestureOptions:TInteractiveGestureOptions;//f11
    FNotifyList:TList;//f14
    FParentTabletOptions:Boolean;//f18
    FStandardGestures:TStandardGestures;//f19
    FTabletOptions:TTabletOptions;//f1E
    destructor Destroy(); virtual;//004F7F04
    procedure AssignTo(Dest:Classes.TPersistent); virtual;//v0//004F7F50
    procedure SetTabletOptions(const Value:TTabletOptions);//004F818C
  end;
  TTouchManager = class(TCustomTouchManager)
    procedure IsStoredInteractiveGestureOptions(Value:TInteractiveGestureOptions);//004F8024
    procedure IsStoredInteractiveGestures(Value:TInteractiveGestures);//004F8038
    procedure IsStoredParentTabletOptions(Value:Boolean);//004F804C
    procedure IsStoredTabletOptions(Value:TTabletOptions);//004F8060
    procedure SetGestureManager(Value:TCustomGestureManager);//004F80BC
    procedure SetParentTabletOptions(Value:Boolean);//004F8130
  end;
  :52 = (seFont, seClient, seBorder);
  TStyleElements = set of :52;
  TMouseEvent = procedure(Sender:TObject; Button:TMouseButton; Shift:TShiftState; X:Integer; Y:Integer) of object;;
  TMouseMoveEvent = procedure(Sender:TObject; Shift:TShiftState; X:Integer; Y:Integer) of object;;
  TMouseActivateEvent = procedure(Sender:TObject; Button:TMouseButton; Shift:TShiftState; X:Integer; Y:Integer; HitTest:Integer; var MouseActivate:TMouseActivate) of object;;
  TKeyEvent = procedure(Sender:TObject; var Key:Word; Shift:TShiftState) of object;;
  TKeyPressEvent = procedure(Sender:TObject; var Key:Char) of object;;
  TDragOverEvent = procedure(Sender:TObject; Source:TObject; X:Integer; Y:Integer; State:TDragState; var Accept:Boolean) of object;;
  TDragDropEvent = procedure(Sender:TObject; Source:TObject; X:Integer; Y:Integer) of object;;
  TStartDragEvent = procedure(Sender:TObject; var DragObject:TDragObject) of object;;
  TEndDragEvent = procedure(Sender:TObject; Target:TObject; X:Integer; Y:Integer) of object;;
  TDockDropEvent = procedure(Sender:TObject; Source:TDragDockObject; X:Integer; Y:Integer) of object;;
  TDockOverEvent = procedure(Sender:TObject; Source:TDragDockObject; X:Integer; Y:Integer; State:TDragState; var Accept:Boolean) of object;;
  TUnDockEvent = procedure(Sender:TObject; Client:TControl; NewTarget:TWinControl; var Allow:Boolean) of object;;
  TStartDockEvent = procedure(Sender:TObject; var DragObject:TDragDockObject) of object;;
  TGetSiteInfoEvent = procedure(Sender:TObject; DockClient:TControl; var InfluenceRect:TRect; MousePos:TPoint; var CanDock:Boolean) of object;;
  TCanResizeEvent = procedure(Sender:TObject; var NewWidth:Integer; var NewHeight:Integer; var Resize:Boolean) of object;;
  TConstrainedResizeEvent = procedure(Sender:TObject; var MinWidth:Integer; var MinHeight:Integer; var MaxWidth:Integer; var MaxHeight:Integer) of object;;
  TMouseWheelEvent = procedure(Sender:TObject; Shift:TShiftState; WheelDelta:Integer; MousePos:TPoint; var Handled:Boolean) of object;;
  TMouseWheelUpDownEvent = procedure(Sender:TObject; Shift:TShiftState; MousePos:TPoint; var Handled:Boolean) of object;;
  TContextPopupEvent = procedure(Sender:TObject; MousePos:TPoint; var Handled:Boolean) of object;;
  TDockOrientation = (doNoOrient, doHorizontal, doVertical);
  TControl = class(TComponent)
  published
    procedure Hide;//004E7538
    procedure InitiateAction;//004E9C8C
    procedure GetParentComponent;//004E5D28
    procedure HasParent;//004E5D20
    procedure Invalidate;//004E7470
    function Perform(Msg:Cardinal; WParam:NativeUInt; LParam:NativeInt):NativeInt;//004E82F0
    procedure Refresh;//004E7558
    procedure Repaint;//004E7568
    function ManualFloat(ScreenPos:TRect):Boolean;//004E7FF4
    procedure MouseWheelHandler(var Message:TMessage);//004E74CC
    function IsRightToLeft:Boolean;//004E7668
    function ManualDock(NewDockSite:TWinControl; DropControl:TControl; ControlSide:TAlign):Boolean;//004E7DE0
    procedure BringToFront;//004E71B0
    //procedure ClientToScreen(Point:TPoint; ?:?);//004E68BC
    //procedure ClientToParent(Point:TPoint; AParent:TWinControl; ?:?);//004E9E50
    constructor Create;//004E5A74
    destructor Destroy();//004E5BD8
    procedure BeginDrag(Immediate:Boolean; Threshold:Integer);//004E76E8
    procedure Dock(NewDockSite:TWinControl; ARect:TRect);//004E6558
    function DrawTextBiDiModeFlagsReadingOnly:Integer;//004E9C70
    procedure TLicFile>.Compare(Left:TLicFile; Right:TLicFile);//0079EC18
    procedure GetControlsAlignment;//004E7664
    function Dragging:Boolean;//004E77CC
    procedure DragDrop(Source:TObject; X:Integer; Y:Integer);//004E7814
    function DrawTextBiDiModeFlags(Flags:Integer):Integer;//004E9C2C
    function ScreenToClient(Point:TPoint):TPoint;//004E69FC
    function GetTextLen:Integer;//004E6E58
    function GetTextBuf(Buffer:PWideChar; BufSize:Integer):Integer;//004E6E68
    //procedure DefaultHandler(var Message:?);//004E86EC
    procedure SetTextBuf(Buffer:PWideChar);//004E62AC
    procedure Perform(Msg:Cardinal; WParam:NativeUInt; var LParam:TRect);//004E8338
    function Perform(Msg:Cardinal; WParam:NativeUInt; LParam:PWideChar):NativeInt;//004E8324
    function UseRightToLeftScrollBar:Boolean;//004E76B0
    procedure SetParentComponent(Value:TComponent);//004E5D2C
    procedure SetDesignVisible(Value:Boolean);//004E5F7C
    procedure SetBounds(ALeft:Integer; ATop:Integer; AHeight:Integer; AWidth:Integer);//004E620C
    function UseRightToLeftReading:Boolean;//004E7680
    procedure UseRightToLeftAlignment;//004E7698
    procedure Update;//004E7540
  public
    FParent:TWinControl;//f40
    FWindowProc:TWndMethod;//f48
    FTop:Integer;//f4C
    FLeft:Integer;//f50
    FTop:Integer;//f54
    FWidth:Integer;//f58
    FHeight:Integer;//f5C
    FControlStyle:TControlStyle;//f60
    FVisible:Boolean;//f61
    FEnabled:Boolean;//f62
    FParentFont:Boolean;//f63
    FControlState:TControlState;//f64
    FAlign:TAlign;//f65
    FAutoSize:Boolean;//f66
    FDragMode:TDragMode;//f67
    FDesktopFont:Boolean;//f68
    FVisible:Boolean;//f69
    FEnabled:Boolean;//f6A
    FParentFont:Boolean;//f6B
    FParentColor:Boolean;//f6C
    FAlign:TAlign;//f6D
    FAutoSize:Boolean;//f6E
    FDragMode:TDragMode;//f6F
    FIsControl:Boolean;//f70
    FBiDiMode:TBiDiMode;//f71
    FParentBiDiMode:Boolean;//f72
    FAnchors:TAnchors;//f73
    FFont:TFont;//f74
    FActionLink:TControlActionLink;//f78
    FColor:TColor;//f7C
    FConstraints:TSizeConstraints;//f80
    FDragCursor:TCursor;//f82
    FMargins:TMargins;//f84
    FCursor:TCursor;//f88
    FDragCursor:TCursor;//f8A
    FPopupMenu:TPopupMenu;//f8C
    FHint:string;//f90
    FShowHint:Boolean;//f91
    FParentShowHint:Boolean;//f92
    FDragKind:TDragKind;//f93
    FFontHeight:Integer;//f94
    FScalingFlags:TScalingFlags;//f98
    FShowHint:Boolean;//f99
    FParentShowHint:Boolean;//f9A
    FDragKind:TDragKind;//f9B
    FDockOrientation:TDockOrientation;//f9C
    FHostDockSite:TWinControl;//fA0
    FWheelAccumulator:Integer;//fA4
    FUndockWidth:Integer;//fA8
    FUndockHeight:Integer;//fAC
    FLRDockWidth:Integer;//fB0
    FTBDockHeight:Integer;//fB4
    FFloatingDockSiteClass:TWinControlClass;//fB8
    FTouchManager:TTouchManager;//fBC
    FOnCanResize:TCanResizeEvent;//fC0
    fC2:word;//fC2
    fC4:dword;//fC4
    FOnConstrainedResize:TConstrainedResizeEvent;//fC8
    FOnMouseDown:TMouseEvent;//fD0
    fD2:word;//fD2
    fD4:TSpinButton;//fD4
    FOnMouseMove:TMouseMoveEvent;//fD8
    fDA:word;//fDA
    fDC:dword;//fDC
    FOnMouseUp:TMouseEvent;//fE0
    fE2:word;//fE2
    fE4:dword;//fE4
    FOnDragDrop:TDragDropEvent;//fE8
    fEA:word;//fEA
    fEC:dword;//fEC
    FOnDragOver:TDragOverEvent;//fF0
    fF2:word;//fF2
    fF4:dword;//fF4
    FOnResize:TNotifyEvent;//fF8
    fFA:word;//fFA
    fFC:dword;//fFC
    FOnStartDock:TStartDockEvent;//f100
    f102:word;//f102
    f104:dword;//f104
    FOnEndDock:TEndDragEvent;//f108
    f10A:word;//f10A
    f10C:dword;//f10C
    FOnStartDrag:TStartDragEvent;//f110
    f112:word;//f112
    f114:dword;//f114
    FOnEndDrag:TEndDragEvent;//f118
    f11A:word;//f11A
    f11C:dword;//f11C
    FOnClick:TNotifyEvent;//f120
    f124:TMessageForm;//f124
    FOnDblClick:TNotifyEvent;//f128
    f12A:word;//f12A
    f12C:dword;//f12C
    FOnContextPopup:TContextPopupEvent;//f130
    f132:word;//f132
    f134:dword;//f134
    FOnMouseActivate:TMouseActivateEvent;//f138
    f13A:word;//f13A
    f13C:dword;//f13C
    FOnMouseLeave:TNotifyEvent;//f140
    f142:word;//f142
    f144:dword;//f144
    FOnMouseEnter:TNotifyEvent;//f148
    f14A:word;//f14A
    f14C:dword;//f14C
    FOnMouseWheel:TMouseWheelEvent;//f150
    f152:word;//f152
    f154:dword;//f154
    FOnMouseWheelDown:TMouseWheelUpDownEvent;//f158
    FOnMouseWheelUp:TMouseWheelUpDownEvent;//f160
    f162:word;//f162
    f164:dword;//f164
    FOnGesture:TGestureEvent;//f168
    f16A:word;//f16A
    FHelpKeyword:UnicodeString;//f16C
    FHelpType:THelpType;//f170
    FHelpKeyword:string;//f174
    FHelpContext:THelpContext;//f178
    FCustomHint:TCustomHint;//f17C
    FParentCustomHint:Boolean;//f180
    FAnchorMove:Boolean;//f181
    FText:PWideChar;//f184
    FStyleElements:TStyleElements;//f188
    FAnchorMove:Boolean;//f189
    FAnchorRules:TPoint;//f18C
    FAnchorOrigin:TPoint;//f194
    FOriginalParentSize:TPoint;//f19C
    FExplicitTop:Integer;//f1A0
    FExplicitLeft:Integer;//f1A4
    FExplicitTop:Integer;//f1A8
    FExplicitWidth:Integer;//f1AC
    FExplicitHeight:Integer;//f1B0
    FReserved:Pointer;//f1B4
    //procedure DefaultHandler(var Message:?); virtual;//004E86EC
    destructor Destroy(); virtual;//004E5BD8
    procedure AssignTo(Dest:TPersistent); virtual;//v0//004E9A34
    procedure DefineProperties(Filer:Classes.TFiler); virtual;//v4//004E89F4
    //procedure vC(?:?); virtual;//vC//004E97C8
    procedure Notification(AComponent:TComponent; Operation:TOperation); virtual;//v14//004E60A4
    procedure ReadState(Reader:TReader); virtual;//v18//004E5FF0
    //procedure v28(?:?); virtual;//v28//004E6CB8
    constructor Create; virtual;//v3C//004E5A74
    //function v44(?:?):?; virtual;//v44//004E80A8
    //function v48:?; virtual;//v48//004E80A4
    procedure ConstrainedResize(var MinWidth:Integer; var MinHeight:Integer; var MaxWidth:Integer; var MaxHeight:Integer); virtual;//v4C//004E8174
    procedure v50; virtual;//v50//004E96A8
    //procedure v54(?:?; ?:?); virtual;//v54//004E7860
    //procedure v58(?:?; ?:?); virtual;//v58//004E7864
    function GetAction:TBasicAction; virtual;//v5C//004E5DD8
    //procedure v60(?:?); virtual;//v60//004E682C
    //procedure v64(?:?); virtual;//v64//004E6794
    //function v68(?:?):?; virtual;//v68//004E72A8
    function GetEnabled:Boolean; virtual;//v6C//004E5D14
    //function v70:?; virtual;//v70//004E9BD0
    //function v74:?; virtual;//v74//004E9BFC
    procedure v78; virtual;//v78//004E5FB8
    //function v7C:?; virtual;//v7C//004E69F0
    procedure SetAutoSize(Value:Boolean); virtual;//v80//004E6C9C
    procedure SetDragMode(Value:TDragMode); virtual;//v84//004E5FB4
    procedure SetEnabled(Value:Boolean); virtual;//v88//004E6E40
    //procedure v8C(?:?); virtual;//v8C//004E6DA4
    procedure SetParentBiDiMode(Value:Boolean); virtual;//v90//004E7134
    procedure SetBiDiMode(Value:TBiDiMode); virtual;//v94//004E6FA4
    //procedure v98(?:?); virtual;//v98//004E841C
    procedure v9C; virtual;//v9C//004E9FA8
    //function vA0:?; virtual;//vA0//004E5D10
    procedure InitiateAction; virtual;//vA4//004E9C8C
    procedure Invalidate; virtual;//vA8//004E7470
    procedure Repaint; virtual;//vAC//004E7568
    procedure SetBounds(ALeft:Integer; ATop:Integer; AHeight:Integer; AWidth:Integer); virtual;//vB0//004E620C
    procedure Update; virtual;//vB4//004E7540
    //procedure WMWindowPosChangedMsg(?:?); message WM_WINDOWPOSCHANGED;//004E91E0
    //procedure WMContextMenu(?:?); message WM_CONTEXTMENU;//004E9CCC
    procedure WMNCLButtonDown(var Message:Messages.TWMNCLButtonDown); message WM_NCLBUTTONDOWN;//004E8D90
    //procedure WMMouseMove(?:?); message WM_MOUSEMOVE;//004E8F88
    //procedure WMLButtonDown(?:?); message WM_LBUTTONDOWN;//004E8D44
    //procedure WMLButtonUp(?:?); message WM_LBUTTONUP;//004E908C
    //procedure WMLButtonDblClk(?:?); message WM_LBUTTONDBLCLK;//004E8DAC
    procedure WMRButtonDown(var Message:Messages.TWMRButtonDown); message WM_RBUTTONDOWN;//004E8EA4
    procedure WMRButtonUp(var Message:Messages.TWMRButtonUp); message WM_RBUTTONUP;//004E910C
    procedure WMRButtonDblClk(var Message:Messages.TWMRButtonDblClk); message WM_RBUTTONDBLCLK;//004E8ED0
    procedure WMMButtonDown(var Message:Messages.TWMMButtonDown); message WM_MBUTTONDOWN;//004E8EFC
    procedure WMMButtonUp(var Message:Messages.TWMMButtonUp); message WM_MBUTTONUP;//004E912C
    procedure WMMButtonDblClk(var Message:Messages.TWMMButtonDblClk); message WM_MBUTTONDBLCLK;//004E8F28
    //procedure WMMouseWheel(?:?); message WM_MOUSEWHEEL;//004E914C
    //procedure CMParentFontChanged(?:?); message CM_PARENTFONTCHANGED;//004E94CC
    //procedure CMParentColorChanged(?:?); message CM_PARENTCOLORCHANGED;//004E9328
    procedure CMHitTest(var Message:Messages.TWMNCHitTest); message CM_HITTEST;//004E9520
    procedure CMVisibleChanged; message CM_VISIBLECHANGED;//004E9298
    procedure CMEnabledChanged; message CM_ENABLEDCHANGED;//004E92C0
    procedure CMColorChanged; message CM_COLORCHANGED;//004E92E0
    procedure CMFontChanged; message CM_FONTCHANGED;//004E92D0
    //procedure CMMouseEnter(?:?); message CM_MOUSEENTER;//004E9528
    //procedure CMMouseLeave(?:?); message CM_MOUSELEAVE;//004E958C
    procedure CMDesignHitTest(var Message:Messages.TWMMouse); message CM_DESIGNHITTEST;//004E95F0
    procedure CMParentShowHintChanged; message CM_PARENTSHOWHINTCHANGED;//004E9490
    //procedure CMHintShow(?:?); message CM_HINTSHOW;//004E9C9C
    procedure CMSysFontChanged(var Message:Messages.TMessage); message CM_SYSFONTCHANGED;//004E94FC
    //procedure CMFloat(?:?); message CM_FLOAT;//004E9768
    procedure CMBiDiModeChanged(var Message:Messages.TMessage); message CM_BIDIMODECHANGED;//004E9470
    procedure CMParentBiDiModeChanged; message CM_PARENTBIDIMODECHANGED;//004E9364
    //procedure CMMouseWheel(?:?); message CM_MOUSEWHEEL;//004E9388
    //procedure sub_004E9F60(?:?); dynamic;//004E9F60
    //procedure sub_004E93FC(?:?); dynamic;//004E93FC
    procedure sub_004E95F8; dynamic;//004E95F8
    procedure UseRightToLeftAlignment; dynamic;//004E7698
    procedure SetDesignVisible(Value:Boolean); dynamic;//004E5F7C
    procedure MouseWheelHandler(var Message:TMessage); dynamic;//004E74CC
    procedure GetControlsAlignment; dynamic;//004E7664
    procedure DragDrop(Source:TObject; X:Integer; Y:Integer); dynamic;//004E7814
    procedure Dock(NewDockSite:TWinControl; ARect:TRect); dynamic;//004E6558
    //procedure sub_004E81D0(?:?); dynamic;//004E81D0
    procedure sub_004E8418; dynamic;//004E8418
    //procedure sub_004E724C(?:?); dynamic;//004E724C
    procedure sub_004E5FD0; dynamic;//004E5FD0
    //procedure sub_004E5D58(?:?); dynamic;//004E5D58
    //procedure sub_004E78AC(?:?); dynamic;//004E78AC
    //procedure sub_004E9010(?:?; ?:?; ?:?; ?:?); dynamic;//004E9010
    //procedure sub_004E8F54(?:?; ?:?); dynamic;//004E8F54
    //procedure sub_004E8C70(?:?; ?:?; ?:?; ?:?); dynamic;//004E8C70
    //procedure sub_004E7484(?:?; ?:?; ?:?; ?:?; ?:?); dynamic;//004E7484
    //procedure sub_004E5F1C(?:?); dynamic;//004E5F1C
    procedure sub_004E8E00; dynamic;//004E8E00
    procedure sub_004E5D1C; dynamic;//004E5D1C
    //procedure sub_004E9B20(?:?); dynamic;//004E9B20
    procedure sub_004E9934; dynamic;//004E9934
    //procedure sub_004E7CD8(?:?); dynamic;//004E7CD8
    //procedure sub_004E7CC0(?:?); dynamic;//004E7CC0
    //procedure sub_004E7840(?:?); dynamic;//004E7840
    //procedure sub_004E7880(?:?; ?:?); dynamic;//004E7880
    //procedure sub_004E77D8(?:?; ?:?; ?:?; ?:?); dynamic;//004E77D8
    procedure sub_004E77C8; dynamic;//004E77C8
    //procedure sub_004E7B48(?:?; ?:?); dynamic;//004E7B48
    procedure DoMouseWheelUp(Shift:Classes.TShiftState; MousePos:Types.TPoint); dynamic;//004E7AFC
    //procedure sub_004E7A2C(?:?; ?:?; ?:?); dynamic;//004E7A2C
    //procedure sub_004E79C8(?:?); dynamic;//004E79C8
    //procedure sub_004E668C(?:?; ?:?); dynamic;//004E668C
    //procedure sub_004E799C(?:?; ?:?); dynamic;//004E799C
    //procedure sub_004E9E10(?:?); dynamic;//004E9E10
    //procedure sub_004E7980(?:?); dynamic;//004E7980
    //procedure sub_004E7B94(?:?; ?:?); dynamic;//004E7B94
    procedure sub_004E8C50; dynamic;//004E8C50
    procedure Click; dynamic;//004E8BD4
    //procedure sub_004E6AD4(?:?; ?:?); dynamic;//004E6AD4
    procedure BeginAutoDrag; dynamic;//004E76CC
    procedure sub_004E9C04; dynamic;//004E9C04
    //procedure sub_004E980C(?:?; ?:?); dynamic;//004E980C
    procedure HasParent; dynamic;//004E5D20
    procedure GetParentComponent; dynamic;//004E5D28
    procedure SetParentComponent(Value:TComponent); dynamic;//004E5D2C
    procedure SetLeft(Value:Integer);//004E6478
    procedure SetTop(Value:Integer);//004E64B0
    procedure SetWidth(Value:Integer);//004E64E8
    procedure SetHeight(Value:Integer);//004E6520
    procedure SetHelpKeyword(const Value:UnicodeString);//004E66E8
    procedure SetHelpContext(const Value:Classes.THelpContext);//004E66FC
    function GetBoundsRect:TRect;//004E6748
    function GetClientWidth:Integer;//004E67AC
    procedure SetClientWidth(Value:Integer);//004E67C4
    function GetClientHeight:Integer;//004E67EC
    procedure SetClientHeight(Value:Integer);//004E6804
    procedure SendCancelMode(Sender:TControl);//004E6A28
    procedure Changed;//004E6AC4
    procedure SetClientSize(Value:Types.TPoint);//004E6D5C
    procedure SetVisible(Value:Boolean);//004E6DF0
    procedure SetPopupMenu(Value:Menus.TPopupMenu);//004E6EC4
    function GetText:TCaption;//004E6EEC
    procedure SetText(const Value:TCaption);//004E6F40
    procedure SetParentCustomHint(Value:Boolean);//004E70AC
    procedure SetCursor(Value:TCursor);//004E7158
    function GetMouseCapture:Boolean;//004E7178
    procedure SetMouseCapture(Value:Boolean);//004E7188
    procedure SetZOrderPosition(Position:Integer);//004E71C0
    procedure SetCustomHint(Value:TCustomHint);//004E7270
    procedure DoDragMsg(var DragMsg:TCMDrag);//004E7CF0
    function CalcCursorPos:TPoint;//004E81A4
    //function GetCustomHint:?;//004E834C
    procedure ReadIsControl(Reader:Classes.TReader);//004E8790
    procedure WriteIsControl(Writer:Classes.TWriter);//004E87A4
    procedure DoMouseDown(var Message:Messages.TWMMouse; Button:UITypes.TMouseButton; Shift:Classes.TShiftState);//004E8CA8
    function CheckNewSize(var NewWidth:Integer; var NewHeight:Integer):Boolean;//004E8E08
    procedure DoMouseUp(var Message:Messages.TWMMouse; Button:UITypes.TMouseButton);//004E9048
    function IsStoredHint(Value:string):Boolean;//004E997C
    function IsStoredHelpKeyword(Value:string):Boolean;//004E999C
    procedure SetMargins(Value:TMargins);//004E9F90
    function GetAlignWithMargins:Boolean;//004E9FF4
    procedure SetAlignWithMargins(Value:Boolean);//004E9FFC
    procedure WriteExplicitTop(Writer:Classes.TWriter);//004EA05C
    procedure WriteExplicitHeight(Writer:Classes.TWriter);//004EA06C
    procedure WriteExplicitLeft(Writer:Classes.TWriter);//004EA07C
    procedure ReadExplicitWidth(Reader:Classes.TReader);//004EA08C
    procedure WriteExplicitWidth(Writer:Classes.TWriter);//004EA0A4
    procedure ReadExplicitTop(Reader:Classes.TReader);//004EA0B4
    procedure ReadExplicitHeight(Reader:Classes.TReader);//004EA0CC
    procedure ReadExplicitLeft(Reader:Classes.TReader);//004EA0E4
  end;
  TWinControlActionLink = class(TControlActionLink)
  public
    .......FClient:TWinControl;//f20
    procedure AssignClient(AClient:TObject); virtual;//v0//004EA0FC
    procedure IsHelpContextLinked; virtual;//v34//004EA120
    procedure SetHelpKeyword(const Value:UnicodeString); virtual;//v64//004EA128
  end;
  TImeMode = (imDisable, imClose, imOpen, imDontCare, imSAlpha, imAlpha, imHira, imSKata, imKata, imChinese, imSHanguel, imHanguel);
  TTipMode = (tipClose, tipOpen, tipDontCare);
  TAlignInfo = TAlignInfo = record//size=10
AlignList:TList;//f0
ControlIndex:Integer;//f4
Align:TAlign;//f8
Scratch:Integer;//fC
end;;
  TBevelCut = (bvNone, bvLowered, bvRaised, bvSpace);
  TBevelEdge = (beLeft, beTop, beRight, beBottom);
  TBevelEdges = set of TBevelEdge;
  TBevelKind = (bkNone, bkTile, bkSoft, bkFlat);
  TAlignInsertBeforeEvent = function(Sender:TWinControl; C1:TControl; C2:TControl):Boolean of object;;
  TAlignPositionEvent = procedure(Sender:TWinControl; Control:TControl; var NewLeft:Integer; var NewTop:Integer; var NewWidth:Integer; var NewHeight:Integer; var AlignRect:TRect; AlignInfo:TAlignInfo) of object;;
  TWinControl = class(TControl)
  published
    procedure TLicFile>.Compare(Left:TLicFile; Right:TLicFile);//0079EC18
    constructor Create(ParentWindow:HWND);//004EA234
    //procedure DefaultHandler(var Message:?);//004ED110
    procedure CanFocus;//004EFD3C
    //procedure Broadcast(var Message:?);//004EB890
    constructor Create(AOwner:TComponent);//004EA130
    destructor Destroy();//004EA27C
    function ControlAtPos(Pos:TPoint; AllowDisabled:Boolean; AllLevels:Boolean; AllowWinControls:Boolean):TControl;//004EC81C
    function ContainsControl(Control:TControl):Boolean;//004EB5B0
    procedure Repaint;//004EFCE4
    //function ScrollBy(DeltaX:Integer; DeltaY:Integer):?;//004EF94C
    procedure SetBounds(ALeft:Integer; ATop:Integer; AHeight:Integer; AWidth:Integer);//004EF6EC
    procedure PreProcessMessage(var Msg:tagMSG);//004F2098
    procedure RemoveControl(AControl:TControl);//004EB798
    procedure Realign;//004EB374
    procedure UpdateControlState;//004EC500
    function GetDockClients(Index:Integer):TControl;//004EE608
    function GetControl(Index:Integer):TControl;//004EB834
    procedure SetDesignVisible(Value:Boolean);//004EE73C
    procedure SetFocus;//004EFD7C
    procedure Update;//004EFCC8
    procedure PaintTo(DC:HDC; X:Integer; Y:Integer);//004ED79C
    procedure FlipChildren(AllLevels:Boolean);//004EB468
    procedure Focused;//004EFDB8
    procedure GetChildren(Root:TComponent; Proc:TGetChildProc);//004F0514
    procedure DisableAlign;//004EB34C
    procedure DockDrop(Source:TDragDockObject; X:Integer; Y:Integer);//004EE4A8
    procedure EnableAlign;//004EB354
    procedure HandleNeeded;//004EFDDC
    procedure InsertControl(AControl:TControl);//004EB678
    procedure Invalidate;//004EFBC8
    procedure GetTabControlList(List:TList);//004F02F8
    procedure GetTabOrderList(List:TList);//004F0334
    function HandleAllocated:Boolean;//004F01D0
  public
    FAlignControlList:TList;//f1B8
    FBevelKind:TBevelKind;//f1B9
    FAlignLevel:Word;//f1BC
    FBevelEdges:TBevelEdges;//f1BE
    FBevelInner:TBevelCut;//f1BF
    FBevelOuter:TBevelCut;//f1C0
    FBevelKind:TBevelKind;//f1C1
    FBevelWidth:TBevelWidth;//f1C4
    FBorderWidth:TBorderWidth;//f1C8
    FPadding:TPadding;//f1CC
    FBrush:TBrush;//f1D0
    FDockClients:TList;//f1D4
    FDockManager:IDockManager;//f1D8
    FImeMode:TImeMode;//f1DC
    FImeName:TImeName;//f1E0
    FParentWindow:HWND;//f1E4
    FTabList:TList;//f1E8
    FTipMode:TTipMode;//f1EC
    FControls:TList;//f1F0
    FWinControls:TList;//f1F4
    FTabOrder:Integer;//f1F8
    FTabStop:Boolean;//f1FC
    FShowing:Boolean;//f1FD
    FUseDockManager:Boolean;//f1FE
    FDockSite:Boolean;//f1FF
    FTIPIntf:IInterface;//f200
    FParentDoubleBuffered:Boolean;//f201
    FPerformingShowingChanged:Boolean;//f202
    FCtl3D:Boolean;//f204
    FShowing:Boolean;//f205
    FUseDockManager:Boolean;//f206
    FDockSite:Boolean;//f207
    FParentCtl3D:Boolean;//f208
    FParentDoubleBuffered:Boolean;//f209
    FPerformingShowingChanged:Boolean;//f20A
    FOnDockDrop:TDockDropEvent;//f210
    f212:word;//f212
    f214:dword;//f214
    FOnDockOver:TDockOverEvent;//f218
    f21A:word;//f21A
    f21C:dword;//f21C
    FOnEnter:TNotifyEvent;//f220
    FOnExit:TNotifyEvent;//f228
    f22A:word;//f22A
    f22C:dword;//f22C
    FOnGetSiteInfo:TGetSiteInfoEvent;//f230
    f232:word;//f232
    f234:dword;//f234
    FOnKeyDown:TKeyEvent;//f238
    f23A:word;//f23A
    f23C:TMessageForm;//f23C
    FOnKeyPress:TKeyPressEvent;//f240
    f242:word;//f242
    f244:dword;//f244
    FOnKeyUp:TKeyEvent;//f248
    f24A:word;//f24A
    f24C:dword;//f24C
    FOnUnDock:TUnDockEvent;//f250
    f252:word;//f252
    f254:dword;//f254
    FOnAlignInsertBefore:TAlignInsertBeforeEvent;//f258
    f25A:word;//f25A
    f25C:dword;//f25C
    FOnAlignPosition:TAlignPositionEvent;//f260
    f262:word;//f262
    FMouseControl:TControl;//f264
    FMouseInClient:Boolean;//f268
    FMouseControl:TControl;//f26C
    FTouchControl:TControl;//f270
    FDefWndProc:Pointer;//f274
    FHandle:HWND;//f278
    FInImeComposition:Boolean;//f279
    FObjectInstance:Pointer;//f27C
    FDoubleBuffered:Boolean;//f280
    FInImeComposition:Boolean;//f281
    FDesignSize:TPoint;//f284
    FAsyncList:TList;//f28C
    //procedure DefaultHandler(var Message:?); virtual;//004ED110
    destructor Destroy(); virtual;//004EA27C
    procedure AssignTo(Dest:TPersistent); virtual;//v0//004F0E80
    procedure DefineProperties(Filer:TFiler); virtual;//v4//004EBFA0
    //procedure vC(?:?); virtual;//vC//004F0C34
    procedure Notification(AComponent:TComponent; Operation:TOperation); virtual;//v14//004EB8D0
    procedure ReadState(Reader:TReader); virtual;//v18//004EA4B8
    constructor Create(AOwner:TComponent); virtual;//v3C//004EA130
    procedure v44; virtual;//v44//004F059C
    //function v48(?:?; ?:?):?; virtual;//v48//004F0EB0
    procedure ConstrainedResize(var MinWidth:Integer; var MinHeight:Integer; var MaxWidth:Integer; var MaxHeight:Integer); virtual;//v4C//004F0B18
    function GetClientOrigin:TPoint; virtual;//v60//004EFF6C
    function GetClientRect:TRect; virtual;//v64//004EFF8C
    //procedure v68(?:?); virtual;//v68//004EFB74
    procedure v78; virtual;//v78//004EE248
    //procedure v8C(?:?); virtual;//v8C//004F22F8
    //procedure v98(?:?); virtual;//v98//004ECAFC
    procedure v9C; virtual;//v9C//004F0B54
    procedure Invalidate; virtual;//vA8//004EFBC8
    procedure Repaint; virtual;//vAC//004EFCE4
    procedure SetBounds(ALeft:Integer; ATop:Integer; AHeight:Integer; AWidth:Integer); virtual;//vB0//004EF6EC
    procedure Update; virtual;//vB4//004EFCC8
    //procedure vB8(?:?); virtual;//vB8//004EA530
    procedure AlignControls(AControl:TControl; var Rect:Types.TRect); virtual;//vBC//004EB0DC
    procedure vC0; virtual;//vC0//004EC138
    procedure CreateParams(var Params:TCreateParams); virtual;//vC4//004EB9FC
    //procedure vC8(?:?); virtual;//vC8//004EBDE4
    procedure CreateWnd; virtual;//vCC//004EBB10
    //function vD0(?:?):?; virtual;//vD0//004EC1D0
    //procedure vD4(?:?; ?:?; ?:?; ?:?; ?:?; ?:?); virtual;//vD4//004EC1F4
    procedure vD8; virtual;//vD8//004EC288
    procedure vDC; virtual;//vDC//004EC074
    procedure vE0; virtual;//vE0//004EC00C
    function DockReplaceDockClient(Client:TControl; NewDockSite:TWinControl; DropControl:TControl; ControlSide:TAlign; ReplacementClient:TControl):Boolean; virtual;//vE4//004F208C
    //procedure vE8(?:?); virtual;//vE8//004EFE14
    //procedure vEC(?:?); virtual;//vEC//004ED3CC
    procedure SetParentBackground(Value:Boolean); virtual;//vF0//004F2008
    procedure SetParentDoubleBuffered(Value:Boolean); virtual;//vF4//004EC5C8
    procedure vF8; virtual;//vF8//004EFA28
    //procedure vFC(?:?; ?:?); virtual;//vFC//004F227C
    procedure UpdateTIPStatus; virtual;//v100//004F2250
    procedure SetFocus; virtual;//v104//004EFD7C
    //procedure WMDestroy(?:?); message WM_DESTROY;//004EEEB0
    procedure WMMove; message WM_MOVE;//004EE03C
    //procedure WMSize(?:?); message WM_SIZE;//004EDFC0
    procedure WMSetFocus(var Message:Messages.TWMSetFocus); message WM_SETFOCUS;//004EE164
    procedure WMKillFocus; message WM_KILLFOCUS;//004EE18C
    //procedure WMPaint(?:?); message WM_PAINT;//004ED9F4
    //procedure WMEraseBkgnd(?:?); message WM_ERASEBKGND;//004EDDFC
    procedure WMSysColorChange(var Message:Messages.TWMSysColorChange); message WM_SYSCOLORCHANGE;//004EDCAC
    procedure WMWinIniChange(var Message:Messages.TMessage); message WM_SETTINGCHANGE;//004EDCC8
    procedure WMFontChange(var Message:Messages.TMessage); message WM_FONTCHANGE;//004EDCDC
    procedure WMTimeChange(var Message:Messages.TMessage); message WM_TIMECHANGE;//004EDCEC
    //procedure WMSetCursor(?:?); message WM_SETCURSOR;//004EE058
    procedure WMMouseActivate(var Message:Messages.TWMMouseActivate); message WM_MOUSEACTIVATE;//004EDDC8
    procedure WMDrawItem(var Message:Messages.TWMDrawItem); message WM_DRAWITEM;//004EDD84
    procedure WMMeasureItem(var Message:Messages.TWMMeasureItem); message WM_MEASUREITEM;//004EDDA8
    procedure WMDeleteItem(var Message:Messages.TWMDeleteItem); message WM_DELETEITEM;//004EDD60
    procedure WMVScroll(var Message:Messages.TWMVScroll); message WM_VKEYTOITEM;//004EEE90
    procedure WMVKeyToItem(var Message:Messages.TWMVKeyToItem); message WM_CHARTOITEM;//004EEE3C
    procedure WMCompareItem(var Message:Messages.TWMCompareItem); message WM_COMPAREITEM;//004EDD3C
    procedure WMWindowPosChanging(var Message:Messages.TWMWindowPosChanging); message WM_WINDOWPOSCHANGING;//004EDF6C
    //procedure WMWindowPosChangedMsg(?:?); message WM_WINDOWPOSCHANGED;//004EDEB4
    procedure WMNotify(var Message:Messages.TWMNotify); message WM_NOTIFY;//004EDC88
    //procedure sub_004EE1B8(?:?); dynamic;//004EE1B8
    //procedure WMContextMenu(?:?); message WM_CONTEXTMENU;//004F15A8
    procedure WMNCDestroy; message WM_NCDESTROY;//004EEF34
    //procedure WMNCCalcSize(?:?); message WM_NCCALCSIZE;//004F113C
    //procedure WMNCHitTest(?:?); message WM_NCHITTEST;//004EEF50
    //procedure WMNCPaint(?:?); message WM_NCPAINT;//004F11C8
    procedure WMKeyDown(var Message:Messages.TWMKeyDown); message WM_KEYDOWN;//004EEABC
    procedure WMChar(var Message:Messages.TWMChar); message WM_KEYUP;//004EEBF0
    procedure WMKeyUp(var Message:Messages.TWMKeyUp); message WM_CHAR;//004EECC0
    procedure WMSysKeyDown(var Message:Messages.TWMSysKeyDown); message WM_SYSKEYDOWN;//004EEAE8
    //procedure WMSysKeyUp(?:?); message WM_SYSKEYUP;//004EEC10
    procedure sub_004EE1A8; dynamic;//004EE1A8
    procedure sub_004EE238; dynamic;//004EE238
    procedure WMCharToItem(var Message:Messages.TWMCharToItem); message WM_COMMAND;//004EDC68
    //procedure WMSysCommand(?:?); message WM_SYSCOMMAND;//004EED90
    procedure WMCommand(var Message:Messages.TWMCommand); message WM_HSCROLL;//004EDCFC
    procedure WMHScroll(var Message:Messages.TWMHScroll); message WM_VSCROLL;//004EDD1C
    //procedure sub_004F1790(?:?); dynamic;//004F1790
    //procedure sub_004F1B70(?:?); dynamic;//004F1B70
    procedure WMParentNotify(var Message:Messages.TWMParentNotify); message WM_PARENTNOTIFY;//004EEE5C
    //procedure sub_004F1F58(?:?); dynamic;//004F1F58
    //procedure WMQueryNewPalette(?:?); message WM_QUERYNEWPALETTE;//004EEFC4
    //procedure WMPaletteChanged(?:?); message WM_PALETTECHANGED;//004EEFE8
    //procedure sub_004F16B4(?:?); dynamic;//004F16B4
    procedure CMDialogKey; message CM_DIALOGKEY;//004EF114
    procedure CMDialogChar; message CM_DIALOGCHAR;//004EF11C
    procedure CMFocusChenged; message CM_FOCUSCHANGED;//004EF124
    procedure CMVisibleChanged; message CM_VISIBLECHANGED;//004EF12C
    procedure CMEnabledChanged; message CM_ENABLEDCHANGED;//004EF184
    procedure CMColorChanged(var Message:Messages.TMessage); message CM_COLORCHANGED;//004EF1CC
    procedure CMFontChanged; message CM_FONTCHANGED;//004EF1F4
    procedure CMCursorChanged(var Message:Messages.TMessage); message CM_CURSORCHANGED;//004EF230
    procedure CMCtl3DChanged; message CM_CTL3DCHANGED;//004EF2B0
    //procedure CMParentCtl3DChanged(?:?); message CM_PARENTCTL3DCHANGED;//004EF2F0
    procedure CMTextChanged; message CM_TEXTCHANGED;//004F2040
    procedure CMShowingChanged; message CM_SHOWINGCHANGED;//004EF15C
    procedure CMEnter; message CM_ENTER;//004EF07C
    procedure CMExit; message CM_EXIT;//004EF0BC
    procedure CMDesignHitTest(var Message:Messages.TWMMouse); message CM_DESIGNHITTEST;//004EF0CC
    procedure CMShowHintChanged; message CM_SHOWHINTCHANGED;//004EF008
    procedure CMSysColorChange; message CM_SYSCOLORCHANGE;//004EF35C
    procedure CMWinIniChange; message CM_WININICHANGE;//004EF364
    procedure CMFontChange; message CM_FONTCHANGE;//004EF36C
    procedure CMTimeChange; message CM_TIMECHANGE;//004EF390
    procedure CMControlLIstChange; message CM_CONTROLLISTCHANGE;//004EF3F8
    procedure CMChildKey; message CM_CHILDKEY;//004EF100
    procedure CMDrag(var Message:TCMDrag); message CM_DRAG;//004EF398
    procedure CMRecreateWnd; message CM_RECREATEWND;//004EC314
    //procedure CMInvalidate(?:?); message CM_INVALIDATE;//004EFC2C
    procedure CMSysFontChanged(var Message:Messages.TMessage); message CM_SYSFONTCHANGED;//004EF420
    procedure CMChanged; message CM_CHANGED;//004EF0EC
    //procedure CMDockClient(?:?); message CM_DOCKCLIENT;//004EE84C
    //procedure CMUndockClient(?:?); message CM_UNDOCKCLIENT;//004EE938
    //procedure CMFloat(?:?); message CM_FLOAT;//004EE960
    procedure CMBorderChanged; message CM_BORDERCHANGED;//004EF270
    procedure CMBiDiModeChanged(var Message:Messages.TMessage); message CM_BIDIMODECHANGED;//004EF020
    procedure sub_004EF40C; dynamic;//004EF40C
    procedure sub_004EF058; dynamic;//004EF058
    procedure sub_004EF330; dynamic;//004EF330
    procedure CMInputLangChange(var Message:Messages.TMessage); dynamic;//004EFBD8
    procedure sub_004EF374; dynamic;//004EF374
    procedure CNKeyDown(var Message:Messages.TWMKeyDown); dynamic;//004EF4D4
    procedure CNKeyUp(var Message:Messages.TWMKeyUp); dynamic;//004EF5B8
    procedure CNChar(var Message:Messages.TWMChar); dynamic;//004EF60C
    procedure CNSysKeyDown(var Message:Messages.TWMKeyDown); dynamic;//004EF65C
    procedure CNSysChar(var Message:Messages.TWMChar); dynamic;//004EF6B8
    procedure PreProcessMessage(var Msg:tagMSG); dynamic;//004F2098
    procedure GetTabOrderList(List:TList); dynamic;//004F0334
    procedure GetTabControlList(List:TList); dynamic;//004F02F8
    procedure Focused; dynamic;//004EFDB8
    procedure FlipChildren(AllLevels:Boolean); dynamic;//004EB468
    procedure DockDrop(Source:TDragDockObject; X:Integer; Y:Integer); dynamic;//004EE4A8
    procedure CanFocus; dynamic;//004EFD3C
    procedure ReloadDockedControl(const AControlName:UnicodeString; var AControl:TControl); dynamic;//004EE5D0
    //procedure sub_004EEC30(?:?); dynamic;//004EEC30
    //procedure sub_004EEB14(?:?; ?:?); dynamic;//004EEB14
    //procedure sub_004EE9E0(?:?; ?:?); dynamic;//004EE9E0
    //procedure sub_004F20CC(?:?); dynamic;//004F20CC
    //procedure sub_004EE62C(?:?; ?:?; ?:?; ?:?); dynamic;//004EE62C
    //procedure sub_004EE574(?:?; ?:?); dynamic;//004EE574
    procedure sub_004EE464; dynamic;//004EE464
    //procedure sub_004EB450(?:?); dynamic;//004EB450
    procedure sub_004EB37C; dynamic;//004EB37C
    procedure sub_004EE488; dynamic;//004EE488
    procedure DoExit; dynamic;//004EE468
    //procedure sub_004EE4FC(?:?; ?:?; ?:?; ?:?); dynamic;//004EE4FC
    //procedure sub_004EE530(?:?; ?:?; ?:?; ?:?; ?:?); dynamic;//004EE530
    //procedure sub_004EE458(?:?); dynamic;//004EE458
    //procedure sub_004EE6D0(?:?); dynamic;//004EE6D0
    procedure sub_004EE6CC; dynamic;//004EE6CC
    procedure SetDesignVisible(Value:Boolean); dynamic;//004EE73C
    //procedure sub_004E724C(?:?); dynamic;//004EFB14
    //procedure sub_004E5D58(?:?); dynamic;//004EEF6C
    procedure sub_004E9934; dynamic;//004F0E78
    procedure ChangeScale(M:Integer; D:Integer); dynamic;//004EF894
    procedure sub_004E9C04; dynamic;//004EFFA4
    //procedure sub_004E980C(?:?; ?:?); dynamic;//004F0E38
    procedure SetChildOrder(Child:Classes.TComponent; Order:Integer); dynamic;//004F055C
    procedure GetChildren(Root:TComponent; Proc:TGetChildProc); dynamic;//004F0514
    procedure AlignControl(AControl:TControl);//004EB2B8
    procedure RemoveFocus(Removing:Boolean);//004EB5C4
    function GetControlCount:Integer;//004EB870
    procedure NotifyControls(Msg:Word);//004EB900
    procedure CreateSubClass(var Params:TCreateParams; ControlClassName:PChar);//004EB928
    procedure AddBiDiModeExStyle(var ExStyle:Types.DWORD);//004EB994
    procedure ReadDesignSize(Reader:Classes.TReader);//004EBE24
    procedure WriteDesignSize(Writer:Classes.TWriter);//004EBE60
    procedure RecreateWnd;//004EC2FC
    function IsControlMouseMsg(var Message:Messages.TWMMouse):Boolean;//004EC8E0
    function IsControlActivateMsg(var Message:Messages.TWMMouseActivate; Control:TControl):Boolean;//004EC9A4
    function GetDockClientCount:Integer;//004EE5F4
    procedure SetDoubleBuffered(Value:Boolean);//004EE828
    function DoKeyDown(var Message:Messages.TWMKey):Boolean;//004EEA0C
    function DoKeyPress(var Message:Messages.TWMKey):Boolean;//004EEB40
    function DoKeyUp(var Message:Messages.TWMKey):Boolean;//004EEC50
    function IsMenuKey(var Message:Messages.TWMKey):Boolean;//004EF43C
    procedure SetZOrderPosition(Position:Integer);//004EFA3C
    function GetHandle:HWND;//004EFE00
    procedure SetCtl3D(Value:Boolean);//004F0000
    procedure SetParentCtl3D(Value:Boolean);//004F003C
    procedure SetTabStop(Value:Boolean);//004F0100
    function FindNextControl(CurControl:TWinControl; GoForward:Boolean; CheckTabStop:Boolean; CheckParent:Boolean):TWinControl;//004F0394
    procedure SelectFirst;//004F04CC
    procedure CalcConstraints(var MinWidth:Integer; var MinHeight:Integer; var MaxWidth:Integer; var MaxHeight:Integer);//004F0668
    procedure UpdateUIState(CharCode:Word);//004F1668
    procedure Realign;//004F20F0
  end;
  TGraphicControl = class(TControl)
  published
    destructor Destroy();//004F23DC
    constructor Create(AOwner:TComponent);//004F2380
  public
    FCanvas:TCanvas;//f1B8
    destructor Destroy(); virtual;//004F23DC
    constructor Create(AOwner:TComponent); virtual;//v3C//004F2380
    procedure vB8; virtual;//vB8//004F24D0
    //procedure WMPaint(?:?); message WM_PAINT;//004F241C
  end;
  TCustomControl = class(TWinControl)
  published
    destructor Destroy();//004F3014
    constructor Create(AOwner:TComponent);//004F2FB8
  public
    FCanvas:TCanvas;//f290
    destructor Destroy(); virtual;//004F3014
    constructor Create(AOwner:TComponent); virtual;//v3C//004F2FB8
    //procedure vEC(?:?); virtual;//vEC//004F3064
    procedure v108; virtual;//v108//004F3110
    //procedure WMPaint(?:?); message WM_PAINT;//004F3044
  end;
  THintWindow = class(TCustomControl)
  published
    //procedure CalcHintRect(MaxWidth:Integer; AHint:string; ?:?; AData:Pointer);//004F2BAC
    procedure ActivateHintData(Rect:TRect; AHint:string; AData:Pointer);//004F2B84
    function IsHintMsg(var Msg:tagMSG):Boolean;//004F27FC
    procedure ActivateHint(Rect:TRect; AHint:string);//004F2908
    constructor Create(AOwner:TComponent);//004F24D4
    procedure ReleaseHandle;//004F2860
    function ShouldHideHint:Boolean;//004F2CBC
  public
    FActivating:Boolean;//f298
    FLastActive:Cardinal;//f29C
    constructor Create(AOwner:TComponent); virtual;//v3C//004F24D4
    procedure CreateParams(var Params:TCreateParams); virtual;//vC4//004F2540
    procedure v108; virtual;//v108//004F2600
    //procedure v10C(?:?); virtual;//v10C//004F2C10
    procedure ActivateHint(Rect:TRect; AHint:string); virtual;//v110//004F2908
    function IsHintMsg(var Msg:tagMSG):Boolean; virtual;//v114//004F27FC
    function ShouldHideHint:Boolean; virtual;//v118//004F2CBC
    procedure ActivateHintData(Rect:TRect; AHint:string; AData:Pointer); virtual;//v11C//004F2B84
    //procedure CalcHintRect(MaxWidth:Integer; AHint:string; ?:?; AData:Pointer); virtual;//v120//004F2BAC
    //procedure WMNCPaint(?:?); message WM_NCPAINT;//004F259C
    //procedure sub_004F2C98(?:?); dynamic;//004F2C98
    procedure CMTextChanged; message CM_TEXTCHANGED;//004F2870
  end;
  TDragImageList = class(TCustomImageList)
  published
    procedure HideDragImage;//004F2F48
    //procedure GetHotSpot(?:?);//004F2D98
    procedure ShowDragImage;//004F2F30
    function SetDragImage(Index:Integer; HotSpotX:Integer; HotSpotY:Integer):Boolean;//004F2D18
    function EndDrag:Boolean;//004F2F60
    function DragLock(Window:HWND; XPos:Integer; YPos:Integer):Boolean;//004F2E4C
    function BeginDrag(Window:HWND; X:Integer; Y:Integer):Boolean;//004F2DC8
    procedure DragUnlock;//004F2EB8
    function DragMove(X:Integer; Y:Integer):Boolean;//004F2EE8
  public
    FDragCursor:TCursor;//f98
    FDragging:Boolean;//f9A
    FDragHandle:HWND;//f9C
    FDragHotspot:TPoint;//fA0
    FDragIndex:Integer;//fA8
    FOldCursor:TCursor;//fAC
    procedure Initialize; virtual;//v54//004F2D00
    //procedure GetHotSpot(?:?); virtual;//v60//004F2D98
    procedure SetDragCursor(Value:UITypes.TCursor);//004F2D6C
  end;
  TImageList = class(TDragImageList)
  end;
  TDockZone = class(TObject)
  published
    procedure ResetChildren;//004F33CC
    function PrevVisible:TDockZone;//004F37D0
    procedure Update;//004F3570
    procedure ResetZoneLimits;//004F3764
    procedure ExpandZoneLimit(NewLimit:Integer);//004F3728
    constructor Create;//004F3154
    function NextVisible:TDockZone;//004F37C4
    function FirstVisibleChild:TDockZone;//004F37EC
  public
    FChildControl:TControl;//f4
    FChildZones:TDockZone;//f8
    FNextSibling:TDockZone;//fC
    FOrientation:TDockOrientation;//f10
    FParentZone:TDockZone;//f14
    FPrevSibling:TDockZone;//f18
    FTree:TDockTree;//f1C
    FZoneLimit:Integer;//f20
    FOldSize:Integer;//f24
    function GetChildCount:Integer;//004F3190
    function GetVisibleChildCount:Integer;//004F31A4
    function GetVisible:Boolean;//004F31C8
    function GetLimitBegin:Integer;//004F3200
    function GetLimitSize:Integer;//004F3248
    function GetTopLeft(Orient:Integer):Integer;//004F3290
    function GetHeightWidth(Orient:Integer):Integer;//004F3314
    function GetControlName:UnicodeString;//004F3474
    function GetZoneLimit:Integer;//004F36EC
    procedure SetZoneLimit(const Value:Integer);//004F3714
  end;
  TDockTree = class(TInterfacedObject)
  published
    procedure PaintSite(DC:HDC);//004F49C8
    destructor Destroy();//004F3960
    constructor sub_004F37F8(DockSite:TWinControl);//004F37F8
  public
    FBorderWidth:Integer;//fC
    FBrush:TBrush;//f10
    FDockSite:TWinControl;//f14
    FGrabberSize:Integer;//f18
    FGrabbersOnTop:Boolean;//f1C
    FOldRect:TRect;//f20
    FOldWndProc:TWndMethod;//f30
    f32:word;//f32
    f34:Integer;//f34
    FReplacementZone:TDockZone;//f38
    FScaleBy:Double;//f40
    f44:dword;//f44
    FShiftScaleOrient:TDockOrientation;//f48
    FShiftBy:Integer;//f4C
    FSizePos:TPoint;//f50
    FSizingDC:HDC;//f58
    FSizingWnd:HWND;//f5C
    FSizingZone:TDockZone;//f60
    FTopZone:TDockZone;//f64
    FTopXYLimit:Integer;//f68
    FUpdateCount:Integer;//f6C
    FVersion:Integer;//f70
    FRelativeSizes:Boolean;//f74
    destructor Destroy(); virtual;//004F3960
    //procedure v0(?:?; ?:?); virtual;//v0//004F39B4
    //procedure v4(?:?; ?:?); virtual;//v4//004F5F0C
    function HitTest(const MousePos:Types.TPoint; var HTFlag:Integer):TControl; virtual;//v8//004F3B34
    //procedure vC(?:?; ?:?; ?:?); virtual;//vC//004F3B44
    //procedure v10(?:?); virtual;//v10//004F439C
    //procedure v14(?:?; ?:?; ?:?; ?:?; ?:?); virtual;//v14//004F5F4C
    procedure MouseMove(Shift:Classes.TShiftState; X:Integer; Y:Integer; var Handled:Boolean); virtual;//v18//004F6104
    procedure MouseUp(Button:UITypes.TMouseButton; Shift:Classes.TShiftState; X:Integer; Y:Integer; var Handled:Boolean); virtual;//v1C//004F6150
    //procedure v20(?:?; ?:?); virtual;//v20//004F486C
    //procedure v24(?:?; ?:?; ?:?; ?:?); virtual;//v24//004F4AFC
    function ReferenceFromOrient(const Orient:TDockOrientation):Integer; virtual;//v28//004F5EE0
    //procedure v2C(?:?); virtual;//v2C//004F4D00
    //procedure v30(?:?); virtual;//v30//004F52F8
    //procedure v34(?:?; ?:?; ?:?); virtual;//v34//004F61BC
    //procedure v38(?:?); virtual;//v38//004F4FE0
    //procedure v3C(?:?); virtual;//v3C//004F5BE8
    //function v40(?:?; ?:?; ?:?):?; virtual;//v40//004F3F9C
    constructor v44(DockSite:TWinControl); virtual;//v44//004F37F8
    procedure PaintSite(DC:HDC); virtual;//v48//004F49C8
    procedure EndUpdate;//004F39D0
    function FindControlZone(Control:TControl):TDockZone;//004F3A3C
    procedure ForEachAt(Zone:TDockZone; Proc:TForEachZoneProc);//004F3AA4
    procedure GetControlBounds(Control:TControl; var CtlBounds:Types.TRect);//004F3ABC
    procedure InsertSibling(NewZone:TDockZone; SiblingZone:TDockZone; InsertLast:Boolean);//004F3F24
    function InternalHitTest(const MousePos:Types.TPoint; var HTFlag:Integer):TDockZone;//004F424C
    procedure PruneZone(Zone:TDockZone);//004F4CA4
    procedure SetReplacingControl(Control:TControl);//004F55AC
    procedure SplitterMouseDown(OnZone:TDockZone; MousePos:Types.TPoint);//004F55FC
    procedure SplitterMouseUp;//004F565C
    procedure UpdateAll;//004F56E8
    procedure UpdateZone(Zone:TDockZone);//004F5710
    procedure DrawSizeSplitter;//004F572C
    function GetNextLimit(AZone:TDockZone):Integer;//004F58C0
    function RelativeSize(const ActualSize:Integer; const Reference:Integer):Integer;//004F5EA8
  end;
  TCustomPanningWindow = class(TCustomControl)
  published
    procedure StopPanning;//004E1BCC
    procedure StartPanning(AHandle:NativeUInt; AControl:TControl);//004E1BC4
    procedure GetIsPanning;//004E1BBC
  public
    procedure v10C; virtual; abstract;//v10C//00405554
    procedure v110; virtual; abstract;//v110//00405554
    procedure v114; virtual; abstract;//v114//00405554
  end;
  TMouse = class(TObject)
  published
    procedure SettingChanged(Setting:Integer);//004F64D4
    procedure CreatePanningWindow;//004F6340
    constructor Create();//004F62B0
    destructor Destroy();//004F636C
  public
    FDragImmediate:Boolean;//f4
    FDragThreshold:Integer;//f8
    FMousePresent:Boolean;//fC
    FNativeWheelSupport:Boolean;//fD
    FScrollLines:Integer;//f10
    FScrollLinesMessage:Cardinal;//f14
    FWheelHwnd:HWND;//f18
    FWheelMessage:Cardinal;//f1C
    FWheelPresent:Boolean;//f20
    FWheelSupportMessage:Cardinal;//f24
    FPanningWindow:TCustomPanningWindow;//f28
    FPanningWindowClass:TPanningWindowClass;//f2C
    function GetCapture:HWND;//004F639C
    function GetCursorPos:TPoint;//004F63A4
    function GetIsDragging:Boolean;//004F63D0
    procedure GetMouseData;//004F6400
    procedure GetNativeData;//004F6418
    procedure GetRegisteredData;//004F6444
    procedure SetCapture(const Value:Windows.HWND);//004F646C
    procedure SetCursorPos(const Value:Types.TPoint);//004F6494
    procedure SetPanningWindow(const Value:TCustomPanningWindow);//004F64A4
  end;
  TCustomListControl = class(TWinControl)
  published
    procedure MoveSelection(Destination:TCustomListControl);//004F6A5C
    constructor Create(AOwner:TComponent);//004F69B0
    procedure TLicFile>.Compare(Left:TLicFile; Right:TLicFile);//0079EC18
  public
    constructor Create(AOwner:TComponent); virtual;//v3C//004F69B0
    procedure v108; virtual; abstract;//v108//00405554
    procedure v10C; virtual; abstract;//v10C//00405554
    procedure AddItem; virtual; abstract;//v110//00405554
    procedure Clear; virtual; abstract;//v114//00405554
    procedure ClearSelection; virtual; abstract;//v118//00405554
    procedure CopySelection; virtual; abstract;//v11C//00405554
    procedure DeleteSelected; virtual; abstract;//v120//00405554
    procedure GetCount; virtual; abstract;//v124//00405554
    procedure MoveSelection(Destination:TCustomListControl); virtual;//v128//004F6A5C
    procedure SelectAll; virtual; abstract;//v12C//00405554
    //procedure sub_004E5F1C(?:?); dynamic;//004F6A10
  end;
  TCustomMultiSelectListControl = class(TCustomListControl)
  public
    FMultiSelect:Boolean;//f290
  end;
  TBalloonHintStyle = (bhsStandard, bhsBalloon);
  TCustomHintWindow = class(TCustomControl)
  published
    procedure AutoSize;//004F6E44
    constructor Create(AOwner:TComponent);//004F6E5C
    procedure PositionAt(Rect:TRect);//004F6F80
    procedure TLicFile>.Compare(Left:TLicFile; Right:TLicFile);//0079EC18
  public
    FHintParent:TCustomHint;//f298
    FPopAbove:Boolean;//f29C
    FTitle:string;//f2A0
    FDescription:string;//f2A4
    FImageIndex:TImageIndex;//f2A8
    constructor Create(AOwner:TComponent); virtual;//v3C//004F6E5C
    procedure CreateParams(var Params:TCreateParams); virtual;//vC4//004F6EE0
    procedure CreateWnd; virtual;//vCC//004F6EFC
    procedure v108; virtual;//v108//004F6F70
    //procedure v10C(?:?); virtual;//v10C//004F6F5C
    //procedure WMNCPaint(?:?); message WM_NCPAINT;//004F702C
    //procedure sub_004F7090(?:?); dynamic;//004F7090
    procedure CMTextChanged; message CM_TEXTCHANGED;//004F6E54
  end;
  TCustomHintShowHideThread = class(TThread)
  published
    procedure Execute;//004F79F4
    procedure TLicFile>.Compare(Left:TLicFile; Right:TLicFile);//0079EC18
    procedure ResumeWork;//004F7E88
    constructor Create(HintObject:TCustomHint);//004F77A0
    destructor Destroy();//004F7824
  public
    FHintWindowQueue:TThreadList;//f40
    FHintObject:TCustomHint;//f44
    FHideHint:Boolean;//f48
    FActive:Boolean;//f49
    FDisplayTime:Cardinal;//f4C
    FWaitEvent:TEvent;//f50
    destructor Destroy(); virtual;//004F7824
    procedure Execute; virtual;//v8//004F79F4
    procedure QueHintWindow(Value:TCustomHintWindow);//004F7E7C
  end;
  TCustomHint = class(TComponent)
  published
    procedure HideHint(HidingControl:TControl);//004F72D8
    procedure HideHint;//004F72E4
    procedure PaintHint(HintWindow:TCustomHintWindow);//004F731C
    procedure SetHintSize(HintWindow:TCustomHintWindow);//004F70B4
    procedure NCPaintHint(HintWindow:TCustomHintWindow; DC:HDC);//004F72EC
    procedure ShowHint(Control:TControl);//004F7570
    destructor Destroy();//004F7288
    constructor Create(AOwner:TComponent);//004F7238
    procedure TLicFile>.Compare(Left:TLicFile; Right:TLicFile);//0079EC18
    procedure ShowHint(Rect:TRect);//004F76CC
    procedure ShowHint(Point:TPoint);//004F7764
  public
    FTitle:string;//f40
    FDescription:string;//f44
    FImages:TImageList;//f48
    FImageIndex:TImageIndex;//f4C
    FStyle:TBalloonHintStyle;//f50
    FAnimateThread:TCustomHintShowHideThread;//f54
    FShowDelay:Cardinal;//f58
    FShow:Boolean;//f5C
    FHideAfter:Integer;//f60
    FLatestHintControl:TControl;//f64
    FWorkComplete:Boolean;//f68
    destructor Destroy(); virtual;//004F7288
    procedure Notification(AComponent:TComponent; Operation:TOperation); virtual;//v14//004F72F0
    constructor Create(AOwner:TComponent); virtual;//v3C//004F7238
    procedure PaintHint(HintWindow:TCustomHintWindow); virtual;//v44//004F731C
    procedure NCPaintHint(HintWindow:TCustomHintWindow; DC:HDC); virtual;//v48//004F72EC
    procedure SetHintSize(HintWindow:TCustomHintWindow); virtual;//v4C//004F70B4
    procedure SetImages(Value:TImageList);//004F7220
  end;
  TSiteList = class(TList)
  published
    function GetTopSite:TWinControl;//004E3B70
    procedure Clear;//004E3B40
    procedure AddSite(ASite:TWinControl);//004E3ABC
    function Find(ParentWnd:HWND; var Index:Integer):Boolean;//004E3A58
  public
    procedure Clear; virtual;//v8//004E3B40
  end;
  :TWinControl.:1 = array of Integer;
//elSize = 4
//varType equivalent: varInteger;
  :TWinControl.:3 = array of GESTURECONFIG;
//elSize = C;
  :TDockTree.:2 = array of Byte;
//elSize = 1
//varType equivalent: varByte;
    function Shell_NotifyIconW(lpData:PNotifyIconDataW):BOOL; stdcall;//004D7EBC
    procedure sub_004D7EC4;//004D7EC4
    //function sub_004D7F00:?;//004D7F00
    function MouseOriginToShiftState:TShiftState;//004E3468
    procedure ChangeBiDiModeAlignment(var Alignment:Classes.TAlignment);//004E34A4
    //function sub_004E34B8(?:?; ?:?; ?:?; ?:?):?;//004E34B8
    function ObjectFromHWnd(Handle:Windows.HWND):TWinControl;//004E35C8
    function FindControl(Handle:Windows.HWND):TWinControl;//004E35FC
    function IsVCLControl(Handle:Windows.HWND):Boolean;//004E3658
    //function sub_004E3688:?;//004E3688
    function GetShortHint(const Hint:UnicodeString):UnicodeString;//004E36C0
    function GetLongHint(const Hint:UnicodeString):UnicodeString;//004E3708
    procedure sub_004E3750(?:TControl; ?:HDC);//004E3750
    procedure PerformBufferedPrintClient(Handle:Windows.HWND; const Rect:Types.TRect);//004E37A0
    function GetCaptureControl:TControl;//004E3858
    procedure SetCaptureControl(Control:TControl);//004E3880
    function GetTopParent:HWND;//004E3A90
    procedure sub_004E3C2C;//004E3C2C
    //procedure sub_004E3C5C(?:?);//004E3C5C
    //function sub_004E3D90:?;//004E3D90
    function GetDragCursor(Accepted:Boolean; X:Integer; Y:Integer):TCursor;//004E3D94
    //procedure sub_004E3E90(?:?; ?:?; ?:?);//004E3E90
    //procedure sub_004E3EC4(?:?; ?:?; ?:?; ?:?);//004E3EC4
    //function GetDragCursor(Accepted:Boolean; X:Integer; Y:Integer):?;//004E3EF8
    procedure sub_004E3F14;//004E3F14
    //procedure sub_004E406C(?:?; ?:?; ?:?);//004E406C
    function AbsMin(Value1:Integer; Value2:Integer):Integer;//004E4098
    procedure AdjustDockRect(ARect:Types.TRect);//004E40BC
    procedure sub_004E4138;//004E4138
    procedure sub_004E414C;//004E414C
    function GetDragCursor(Accepted:Boolean; X:Integer; Y:Integer):TCursor;//004E4160
    //function sub_004E416C:?;//004E416C
    //function sub_004E4170:?;//004E4170
    function IsBeforeTargetWindow(Window:Windows.HWND; Data:LongInt):BOOL; stdcall;//004E417C
    //function sub_004E41DC(?:?; ?:?):?;//004E41DC
    function IsSiteChildOfClient:Boolean;//004E4374
    function GetDockSiteAtPos(MousePos:Types.TPoint; Client:TControl):TWinControl;//004E43B8
    procedure RegisterDockSite(Site:TWinControl; DoRegister:Boolean);//004E4504
    function DragMessage(Handle:Windows.HWND; Msg:TDragMessage; Source:TDragObject; Target:Pointer; const Pos:Types.TPoint):NativeInt;//004E4560
    function IsDelphiHandle(Handle:Windows.HWND):Boolean;//004E45B8
    function DragFindWindow(const Pos:Types.TPoint):HWND;//004E4618
    function DragFindTarget(const Pos:Types.TPoint; var Handle:Windows.HWND; DragKind:UITypes.TDragKind; Client:TControl):Pointer;//004E4644
    function DoDragOver(DragMsg:TDragMessage):Boolean;//004E4694
    //function sub_004E46D0:?;//004E46D0
    //procedure sub_004E4770(?:?);//004E4770
    //procedure sub_004E4A60(?:TDragDockObjectEx; ?:?; ?:?);//004E4A60
    //procedure sub_004E4BC8(?:?; ?:?; ?:?);//004E4BC8
    //function sub_004E4D88(?:?):?;//004E4D88
    procedure DragDone(Drop:Boolean);//004E4DFC
    procedure CancelDrag;//004E5120
    function FindVCLWindow(const Pos:Types.TPoint):TWinControl;//004E5138
    function FindDragTarget(const Pos:Types.TPoint; AllowDisabled:Boolean):TControl;//004E516C
    procedure ListAdd(var List:Classes.TList; Item:Pointer);//004E51B8
    //procedure sub_004E51E0(?:?; ?:TControl);//004E51E0
    procedure MoveWindowOrg(DC:Windows.HDC; DX:Integer; DY:Integer);//004E5230
    procedure sub_004E5260;//004E5260
    procedure sub_004E5320;//004E5320
    procedure sub_004E53F8;//004E53F8
    procedure AssignTo(Dest:Classes.TPersistent);//004E5580
    procedure Change;//004E5644
    procedure AssignClient(AClient:TObject);//004E5658
    //function sub_004E5674(?:?):?;//004E5674
    //function IsCaptionLinked:?;//004E5774
    function IsDropdownMenuLinked:Boolean;//004E57DC
    //function IsEnabledLinked:?;//004E57F0
    function IsEnableDropdownLinked:Boolean;//004E5818
    //function IsHintLinked:?;//004E582C
    //function sub_004E585C:?;//004E585C
    //function IsStatusActionLinked:?;//004E5890
    //function sub_004E58B8:?;//004E58B8
    procedure SetCaption(const Value:UnicodeString);//004E58E0
    procedure sub_004E5900;//004E5900
    //procedure sub_004E5904(?:?);//004E5904
    procedure sub_004E5928;//004E5928
    //procedure sub_004E592C(?:?);//004E592C
    procedure SetVisible(Value:Boolean);//004E5950
    //procedure sub_004E5970(?:?; ?:?);//004E5970
    //function IsHelpLinked:?;//004E599C
    procedure SetHelpContext(Value:Classes.THelpContext);//004E59F0
    procedure SetHelpKeyword(const Value:UnicodeString);//004E5A10
    //procedure sub_004E5A30(?:?);//004E5A30
    procedure SetPopupMenu(Value:Menus.TPopupMenu);//004E5A50
    //function sub_004E5D10:?;//004E5D10
    function GetEnabled:Boolean;//004E5D14
    procedure sub_004E5D1C;//004E5D1C
    //procedure sub_004E5D58(?:?);//004E5D58
    function GetAction:TBasicAction;//004E5DD8
    procedure SetAnchors(Value:TAnchors);//004E5DE8
    procedure SetAction(Value:TBasicAction);//004E5E88
    function IsStoredAnchors(Value:TAnchors):Boolean;//004E5F04
    //procedure sub_004E5F1C(?:?);//004E5F1C
    procedure SetDragMode(Value:TDragMode);//004E5FB4
    procedure sub_004E5FB8;//004E5FB8
    //function GetDragMode:?;//004E5FC8
    procedure sub_004E5FD0;//004E5FD0
    procedure ReadState(Reader:TReader);//004E5FF0
    procedure Notification(AComponent:TComponent; Operation:TOperation);//004E60A4
    procedure SetAlign(Value:TAlign);//004E6124
    procedure sub_004E62D0(?:TControl);//004E62D0
    //procedure sub_004E668C(?:?; ?:?);//004E668C
    //procedure sub_004E6768(?:TControl; ?:?);//004E6768
    //procedure sub_004E6794(?:?);//004E6794
    //procedure sub_004E682C(?:?);//004E682C
    //procedure sub_004E68E8(?:TControl; ?:?; ?:Pointer);//004E68E8
    //procedure sub_004E696C(?:TControl; ?:?; ?:?);//004E696C
    //function sub_004E69F0:?;//004E69F0
    //procedure sub_004E6A58(?:TControl; ?:?; ?:TWinControl; ?:?);//004E6A58
    //procedure sub_004E6AD4(?:?; ?:?);//004E6AD4
    procedure SetAutoSize(Value:Boolean);//004E6C9C
    //procedure sub_004E6CB8(?:?);//004E6CB8
    //procedure sub_004E6DA4(?:?);//004E6DA4
    procedure SetEnabled(Value:Boolean);//004E6E40
    //function sub_004E6E74(?:TControl):?;//004E6E74
    //function sub_004E6E88(?:TControl):?;//004E6E88
    procedure SetBiDiMode(Value:TBiDiMode);//004E6FA4
    //procedure sub_004E6FC0(?:?);//004E6FC0
    procedure SetFont(Value:TFont);//004E7004
    function IsStoredFont(Value:TFont):Boolean;//004E7010
    procedure IsStoredShowHint(Value:Boolean);//004E7024
    procedure IsStoredBiDiMode(Value:TBiDiMode);//004E7030
    procedure SetParentFont(Value:Boolean);//004E7038
    procedure SetShowHint(Value:Boolean);//004E705C
    procedure SetParentShowHint(Value:Boolean);//004E7080
    procedure SetColor(Value:TColor);//004E70BC
    procedure IsStoredColor(Value:TColor);//004E7108
    procedure SetParentColor(Value:Boolean);//004E7110
    procedure SetParentBiDiMode(Value:Boolean);//004E7134
    //procedure sub_004E724C(?:?);//004E724C
    //function sub_004E72A8(?:?):?;//004E72A8
    //function sub_004E7354(?:?):?;//004E7354
    //procedure sub_004E73DC(?:TControl; ?:Boolean; ?:?);//004E73DC
    //procedure sub_004E7484(?:?; ?:?; ?:?; ?:?; ?:?);//004E7484
    procedure BeginAutoDrag;//004E76CC
    procedure sub_004E77C8;//004E77C8
    //procedure sub_004E77D8(?:?; ?:?; ?:?; ?:?);//004E77D8
    //procedure sub_004E7840(?:?);//004E7840
    //procedure sub_004E7860(?:?; ?:?);//004E7860
    //procedure sub_004E7864(?:?; ?:?);//004E7864
    //procedure sub_004E7880(?:?; ?:?);//004E7880
    //procedure sub_004E78AC(?:?);//004E78AC
    //procedure sub_004E7980(?:?);//004E7980
    //procedure sub_004E799C(?:?; ?:?);//004E799C
    //procedure sub_004E79C8(?:?);//004E79C8
    //procedure sub_004E79F8(?:TControl; ?:?);//004E79F8
    //procedure sub_004E7A2C(?:?; ?:?; ?:?);//004E7A2C
    procedure DoMouseWheelUp(Shift:Classes.TShiftState; MousePos:Types.TPoint);//004E7AFC
    //procedure sub_004E7B48(?:?; ?:?);//004E7B48
    //procedure sub_004E7B94(?:?; ?:?);//004E7B94
    //procedure sub_004E7CC0(?:?);//004E7CC0
    //procedure sub_004E7CD8(?:?);//004E7CD8
    //procedure sub_004E8094(?:?);//004E8094
    //function sub_004E80A4:?;//004E80A4
    //function sub_004E80A8(?:?):?;//004E80A8
    //function sub_004E80D8(?:?; ?:?; ?:?):?;//004E80D8
    //function sub_004E8144(?:?; ?:?; ?:?):?;//004E8144
    procedure ConstrainedResize(var MinWidth:Integer; var MinHeight:Integer; var MaxWidth:Integer; var MaxHeight:Integer);//004E8174
    //procedure sub_004E81D0(?:?);//004E81D0
    //procedure sub_004E8204(?:?; ?:?; ?:?);//004E8204
    procedure sub_004E8374(?:TControl);//004E8374
    //procedure sub_004E83E8(?:TControl; ?:?);//004E83E8
    procedure sub_004E8418;//004E8418
    //procedure sub_004E841C(?:?);//004E841C
    function DoWriteIsControl:Boolean;//004E87B0
    function DoWriteExplicit(Dim:TExplicitDimension):Boolean;//004E87E0
    procedure DefineProperties(Filer:Classes.TFiler);//004E89F4
    procedure Click;//004E8BD4
    procedure sub_004E8C50;//004E8C50
    //procedure sub_004E8C70(?:?; ?:?; ?:?; ?:?);//004E8C70
    //procedure WMLButtonDown(?:?);//004E8D44
    procedure WMNCLButtonDown(var Message:Messages.TWMNCLButtonDown);//004E8D90
    //procedure WMLButtonDblClk(?:?);//004E8DAC
    procedure sub_004E8E00;//004E8E00
    procedure WMRButtonDown(var Message:Messages.TWMRButtonDown);//004E8EA4
    procedure WMRButtonDblClk(var Message:Messages.TWMRButtonDblClk);//004E8ED0
    procedure WMMButtonDown(var Message:Messages.TWMMButtonDown);//004E8EFC
    procedure WMMButtonDblClk(var Message:Messages.TWMMButtonDblClk);//004E8F28
    //procedure sub_004E8F54(?:?; ?:?);//004E8F54
    //procedure WMMouseMove(?:?);//004E8F88
    //procedure sub_004E9010(?:?; ?:?; ?:?; ?:?);//004E9010
    //procedure WMLButtonUp(?:?);//004E908C
    procedure WMRButtonUp(var Message:Messages.TWMRButtonUp);//004E910C
    procedure WMMButtonUp(var Message:Messages.TWMMButtonUp);//004E912C
    //procedure WMMouseWheel(?:?);//004E914C
    procedure CMCtl3DChanged(var Message:Messages.TMessage);//004E91A4
    //procedure WMWindowPosChangedMsg(?:?);//004E91E0
    procedure CMVisibleChanged;//004E9298
    procedure CMEnabledChanged;//004E92C0
    procedure CMFontChanged;//004E92D0
    procedure CMColorChanged;//004E92E0
    //procedure sub_004E92F0(?:TColor; ?:?);//004E92F0
    //procedure CMParentColorChanged(?:?);//004E9328
    procedure CMParentBiDiModeChanged;//004E9364
    //procedure CMMouseWheel(?:?);//004E9388
    //procedure sub_004E93FC(?:?);//004E93FC
    procedure CMBiDiModeChanged(var Message:Messages.TMessage);//004E9470
    procedure CMParentShowHintChanged;//004E9490
    //procedure CMParentFontChanged(?:?);//004E94CC
    procedure CMSysFontChanged(var Message:Messages.TMessage);//004E94FC
    procedure CMHitTest(var Message:Messages.TWMNCHitTest);//004E9520
    //procedure CMMouseEnter(?:?);//004E9528
    //procedure CMMouseLeave(?:?);//004E958C
    procedure CMDesignHitTest(var Message:Messages.TWMMouse);//004E95F0
    procedure sub_004E95F8;//004E95F8
    //function sub_004E962C(?:TControl; ?:?):?;//004E962C
    procedure sub_004E96A8;//004E96A8
    //procedure sub_004E96C4(?:?);//004E96C4
    //procedure CMFloat(?:?);//004E9768
    //procedure sub_004E97C8(?:?);//004E97C8
    //procedure sub_004E980C(?:?; ?:?);//004E980C
    //procedure sub_004E9910(?:?; ?:?);//004E9910
    procedure sub_004E9934;//004E9934
    function IsStoredCaption(Value:TCaption):Boolean;//004E993C
    function IsStoredEnabled(Value:Boolean):Boolean;//004E995C
    function IsStoredVisible(Value:Boolean):Boolean;//004E99BC
    function IsStoredOnClick(Value:TNotifyEvent):Boolean;//004E99DC
    procedure CMFontChanged(var Message:Messages.TMessage);//004E99FC
    procedure AssignTo(Dest:TPersistent);//004E9A34
    //function sub_004E9AE4(?:?; ?:?):?;//004E9AE4
    //procedure sub_004E9B20(?:?);//004E9B20
    //function sub_004E9BD0:?;//004E9BD0
    //function sub_004E9BFC:?;//004E9BFC
    procedure sub_004E9C04;//004E9C04
    //procedure CMHintShow(?:?);//004E9C9C
    //procedure WMContextMenu(?:?);//004E9CCC
    //procedure sub_004E9E10(?:?);//004E9E10
    procedure SetConstraints(Value:TSizeConstraints);//004E9E44
    //procedure sub_004E9F60(?:?);//004E9F60
    //procedure sub_004E9F84(?:?);//004E9F84
    procedure SetTouch(Value:TTouchManager);//004E9F9C
    procedure sub_004E9FA8;//004E9FA8
    procedure SetStyleElements(Value:TStyleElements);//004E9FB8
    procedure sub_004EA028(?:TControl);//004EA028
    procedure AssignClient(AClient:TObject);//004EA0FC
    procedure IsHelpContextLinked;//004EA120
    procedure SetHelpKeyword(const Value:UnicodeString);//004EA128
    procedure sub_004EA3E4(?:TWinControl);//004EA3E4
    procedure ReadState(Reader:TReader);//004EA4B8
    //procedure sub_004EA530(?:?);//004EA530
    //procedure sub_004EA560(?:?; ?:?; ?:?; ?:?; ?:?; ?:?; ?:?);//004EA560
    //procedure sub_004EA9A8(?:?; ?:?);//004EA9A8
    //function sub_004EAA10(?:TControl; ?:Pointer; ?:?; ?:?):?;//004EAA10
    //procedure sub_004EAB68(?:Pointer; ?:?; ?:?; ?:?);//004EAB68
    //procedure sub_004EABB0(?:?; ?:?);//004EABB0
    //function sub_004EAD3C(?:?):?;//004EAD3C
    //procedure sub_004EAD90(?:?);//004EAD90
    //procedure sub_004EB008(?:?);//004EB008
    procedure AlignControls(AControl:TControl; var Rect:Types.TRect);//004EB0DC
    procedure sub_004EB37C;//004EB37C
    //procedure sub_004EB450(?:?);//004EB450
    procedure sub_004EB5E4(?:TWinControl; ?:TControl);//004EB5E4
    procedure sub_004EB630(?:TWinControl; ?:TControl);//004EB630
    procedure Notification(AComponent:TComponent; Operation:TOperation);//004EB8D0
    procedure CreateParams(var Params:TCreateParams);//004EB9FC
    procedure CreateWnd;//004EBB10
    //procedure sub_004EBDE4(?:?);//004EBDE4
    function PointsEqual(const P1:Types.TPoint; const P2:Types.TPoint):Boolean;//004EBEB8
    function DoWriteDesignSize:Boolean;//004EBECC
    procedure DefineProperties(Filer:TFiler);//004EBFA0
    procedure sub_004EC00C;//004EC00C
    procedure sub_004EC074;//004EC074
    //function sub_004EC0F0(?:TWinControl; ?:TMainForm):?;//004EC0F0
    procedure sub_004EC138;//004EC138
    //function sub_004EC1D0(?:?):?;//004EC1D0
    //procedure sub_004EC1F4(?:?; ?:?; ?:?; ?:?; ?:?; ?:?);//004EC1F4
    procedure sub_004EC288;//004EC288
    procedure CMRecreateWnd;//004EC314
    procedure sub_004EC3A0(?:Pointer);//004EC3A0
    procedure SetParentDoubleBuffered(Value:Boolean);//004EC5C8
    procedure sub_004EC5F4(?:THintWindow; ?:HWND);//004EC5F4
    //function sub_004EC750(?:?; ?:?):?;//004EC750
    //procedure sub_004ECAFC(?:?);//004ECAFC
    function DoControlMsg(ControlHandle:Windows.HWND; var Message:void ):Boolean;//004ED228
    //procedure sub_004ED25C(?:TWinControl; ?:?);//004ED25C
    //procedure sub_004ED3CC(?:?);//004ED3CC
    //procedure sub_004ED400(?:TWinControl; ?:HDC; ?:?);//004ED400
    //procedure sub_004ED6E0(?:HDC; ?:?);//004ED6E0
    //procedure WMPaint(?:?);//004ED9F4
    procedure WMCharToItem(var Message:Messages.TWMCharToItem);//004EDC68
    procedure WMNotify(var Message:Messages.TWMNotify);//004EDC88
    procedure WMSysColorChange(var Message:Messages.TWMSysColorChange);//004EDCAC
    procedure WMWinIniChange(var Message:Messages.TMessage);//004EDCC8
    procedure WMFontChange(var Message:Messages.TMessage);//004EDCDC
    procedure WMTimeChange(var Message:Messages.TMessage);//004EDCEC
    procedure WMCommand(var Message:Messages.TWMCommand);//004EDCFC
    procedure WMHScroll(var Message:Messages.TWMHScroll);//004EDD1C
    procedure WMCompareItem(var Message:Messages.TWMCompareItem);//004EDD3C
    procedure WMDeleteItem(var Message:Messages.TWMDeleteItem);//004EDD60
    procedure WMDrawItem(var Message:Messages.TWMDrawItem);//004EDD84
    procedure WMMeasureItem(var Message:Messages.TWMMeasureItem);//004EDDA8
    procedure WMMouseActivate(var Message:Messages.TWMMouseActivate);//004EDDC8
    //procedure WMEraseBkgnd(?:?);//004EDDFC
    //procedure WMWindowPosChangedMsg(?:?);//004EDEB4
    procedure WMWindowPosChanging(var Message:Messages.TWMWindowPosChanging);//004EDF6C
    //procedure WMSize(?:?);//004EDFC0
    procedure WMMove;//004EE03C
    //procedure WMSetCursor(?:?);//004EE058
    procedure WMSetFocus(var Message:Messages.TWMSetFocus);//004EE164
    procedure WMKillFocus;//004EE18C
    procedure sub_004EE1A8;//004EE1A8
    //procedure sub_004EE1B8(?:?);//004EE1B8
    procedure sub_004EE238;//004EE238
    procedure sub_004EE248;//004EE248
    procedure sub_004EE2D0(?:TCustomCombo);//004EE2D0
    procedure sub_004EE3C0(?:TWinControl);//004EE3C0
    //procedure sub_004EE458(?:?);//004EE458
    procedure sub_004EE464;//004EE464
    procedure DoExit;//004EE468
    procedure sub_004EE488;//004EE488
    //procedure sub_004EE4FC(?:?; ?:?; ?:?; ?:?);//004EE4FC
    //procedure sub_004EE530(?:?; ?:?; ?:?; ?:?; ?:?);//004EE530
    //procedure sub_004EE574(?:?; ?:?);//004EE574
    procedure ReloadDockedControl(const AControlName:UnicodeString; var AControl:TControl);//004EE5D0
    //procedure sub_004EE62C(?:?; ?:?; ?:?; ?:?);//004EE62C
    //function sub_004EE690(?:TWinControl):?;//004EE690
    procedure sub_004EE6CC;//004EE6CC
    //procedure sub_004EE6D0(?:?);//004EE6D0
    procedure SetDockSite(Value:Boolean);//004EE770
    //procedure CMDockClient(?:?);//004EE84C
    //procedure CMUndockClient(?:?);//004EE938
    //procedure CMFloat(?:?);//004EE960
    //procedure sub_004EE9E0(?:?; ?:?);//004EE9E0
    procedure WMKeyDown(var Message:Messages.TWMKeyDown);//004EEABC
    procedure WMSysKeyDown(var Message:Messages.TWMSysKeyDown);//004EEAE8
    //procedure sub_004EEB14(?:?; ?:?);//004EEB14
    procedure WMChar(var Message:Messages.TWMChar);//004EEBF0
    //procedure WMSysKeyUp(?:?);//004EEC10
    //procedure sub_004EEC30(?:?);//004EEC30
    procedure WMKeyUp(var Message:Messages.TWMKeyUp);//004EECC0
    //function sub_004EECE0(?:TControl; ?:?):?;//004EECE0
    //procedure WMSysCommand(?:?);//004EED90
    procedure WMVKeyToItem(var Message:Messages.TWMVKeyToItem);//004EEE3C
    procedure WMParentNotify(var Message:Messages.TWMParentNotify);//004EEE5C
    procedure WMVScroll(var Message:Messages.TWMVScroll);//004EEE90
    //procedure WMDestroy(?:?);//004EEEB0
    procedure WMNCDestroy;//004EEF34
    //procedure WMNCHitTest(?:?);//004EEF50
    //procedure sub_004E5D58(?:?);//004EEF6C
    //procedure WMQueryNewPalette(?:?);//004EEFC4
    //procedure WMPaletteChanged(?:?);//004EEFE8
    procedure CMShowHintChanged;//004EF008
    procedure CMBiDiModeChanged(var Message:Messages.TMessage);//004EF020
    procedure sub_004EF058;//004EF058
    procedure CMEnter;//004EF07C
    procedure CMExit;//004EF0BC
    procedure CMDesignHitTest(var Message:Messages.TWMMouse);//004EF0CC
    procedure CMChanged;//004EF0EC
    procedure CMChildKey;//004EF100
    procedure CMDialogKey;//004EF114
    procedure CMDialogChar;//004EF11C
    procedure CMFocusChenged;//004EF124
    procedure CMVisibleChanged;//004EF12C
    procedure CMShowingChanged;//004EF15C
    procedure CMEnabledChanged;//004EF184
    procedure CMColorChanged(var Message:Messages.TMessage);//004EF1CC
    procedure CMFontChanged;//004EF1F4
    procedure CMCursorChanged(var Message:Messages.TMessage);//004EF230
    procedure CMBorderChanged;//004EF270
    procedure CMCtl3DChanged;//004EF2B0
    //procedure CMParentCtl3DChanged(?:?);//004EF2F0
    procedure sub_004EF330;//004EF330
    procedure CMSysColorChange;//004EF35C
    procedure CMWinIniChange;//004EF364
    procedure CMFontChange;//004EF36C
    procedure sub_004EF374;//004EF374
    procedure CMTimeChange;//004EF390
    procedure CMDrag(var Message:TCMDrag);//004EF398
    procedure CMControlLIstChange;//004EF3F8
    procedure sub_004EF40C;//004EF40C
    procedure CMSysFontChanged(var Message:Messages.TMessage);//004EF420
    procedure CNKeyDown(var Message:Messages.TWMKeyDown);//004EF4D4
    procedure CNKeyUp(var Message:Messages.TWMKeyUp);//004EF5B8
    procedure CNChar(var Message:Messages.TWMChar);//004EF60C
    procedure CNSysKeyDown(var Message:Messages.TWMKeyDown);//004EF65C
    procedure CNSysChar(var Message:Messages.TWMChar);//004EF6B8
    //procedure sub_004EF7C8(?:TCustomForm; ?:?; ?:Pointer);//004EF7C8
    //procedure sub_004EF810(?:?; ?:?; ?:?);//004EF810
    procedure ChangeScale(M:Integer; D:Integer);//004EF894
    procedure sub_004EFA28;//004EFA28
    //procedure sub_004E724C(?:?);//004EFB14
    //procedure sub_004EFB74(?:?);//004EFB74
    procedure CMInputLangChange(var Message:Messages.TMessage);//004EFBD8
    //procedure CMInvalidate(?:?);//004EFC2C
    procedure sub_004EFD00(?:TWinControl);//004EFD00
    //procedure sub_004EFE14(?:?);//004EFE14
    function GetClientOrigin:TPoint;//004EFF6C
    function GetClientRect:TRect;//004EFF8C
    procedure sub_004E9C04;//004EFFA4
    procedure SetBorderWidth(Value:TBorderWidth);//004EFFE0
    procedure IsStoredCtl3D(Value:Boolean);//004F0024
    procedure IsStoredDoubleBuffered(Value:Boolean);//004F0030
    //function GetTabOrder:?;//004F0068
    procedure sub_004F008C(?:Pointer; ?:TTabOrder);//004F008C
    procedure SetTabOrder(Value:TTabOrder);//004F00E8
    procedure SetUseDockManager(Value:Boolean);//004F0160
    procedure sub_004F01DC(?:TWinControl);//004F01DC
    //procedure sub_004F04A0(?:TWinControl; ?:TWinControl; ?:?);//004F04A0
    procedure SetChildOrder(Child:Classes.TComponent; Order:Integer);//004F055C
    procedure sub_004F059C;//004F059C
    //procedure sub_004F05A4(?:?; ?:?; ?:?; ?:?; ?:?);//004F05A4
    procedure ConstrainedResize(var MinWidth:Integer; var MinHeight:Integer; var MaxWidth:Integer; var MaxHeight:Integer);//004F0B18
    procedure sub_004F0B54;//004F0B54
    //function sub_004F0B5C(?:?):?;//004F0B5C
    procedure sub_004F0BF8(?:TWinControl);//004F0BF8
    //procedure sub_004F0C34(?:?);//004F0C34
    //procedure sub_004E980C(?:?; ?:?);//004F0E38
    procedure sub_004E9934;//004F0E78
    procedure AssignTo(Dest:TPersistent);//004F0E80
    //function sub_004F0EB0(?:?; ?:?):?;//004F0EB0
    //procedure SetBevelInner(Value:TBevelCut; ?:?);//004F1088
    procedure SetBevelEdges(Value:TBevelEdges);//004F10CC
    procedure SetBevelKind(Value:TBevelKind);//004F10FC
    procedure SetBevelWidth(Value:TBevelWidth);//004F111C
    //procedure WMNCCalcSize(?:?);//004F113C
    //procedure WMNCPaint(?:?);//004F11C8
    //procedure WMContextMenu(?:?);//004F15A8
    //procedure sub_004F16B4(?:?);//004F16B4
    //procedure sub_004F1790(?:?);//004F1790
    //procedure sub_004F1B70(?:?);//004F1B70
    //procedure sub_004F1F58(?:?);//004F1F58
    function GetParentBackground:Boolean;//004F2000
    procedure SetParentBackground(Value:Boolean);//004F2008
    procedure CMTextChanged;//004F2040
    //procedure sub_004F2058(?:TWinControl; ?:?);//004F2058
    function DockReplaceDockClient(Client:TControl; NewDockSite:TWinControl; DropControl:TControl; ControlSide:TAlign; ReplacementClient:TControl):Boolean;//004F208C
    procedure sub_004F209C(?:TWinControl);//004F209C
    //procedure sub_004F20CC(?:?);//004F20CC
    procedure SetPadding(Value:TPadding);//004F20F8
    //procedure sub_004F2104(?:TWinControl; ?:?);//004F2104
    //procedure sub_004F2154(?:?);//004F2154
    //procedure sub_004F21BC(?:?);//004F21BC
    procedure SetTextInputPanelStatus(Control:TWinControl; OpenTIP:Boolean);//004F2224
    procedure UpdateTIPStatus;//004F2250
    //procedure sub_004F227C(?:?; ?:?);//004F227C
    //procedure sub_004F22F8(?:?);//004F22F8
    //procedure WMPaint(?:?);//004F241C
    procedure sub_004F24D0;//004F24D0
    procedure CreateParams(var Params:TCreateParams);//004F2540
    procedure WMNCHitTest(var Message:Messages.TWMNCHitTest);//004F2594
    //procedure WMNCPaint(?:?);//004F259C
    procedure sub_004F2600;//004F2600
    procedure CMTextChanged;//004F2870
    //procedure sub_004F2C10(?:?);//004F2C10
    //procedure sub_004F2C98(?:?);//004F2C98
    function ClientToWindow(Handle:Windows.HWND; X:Integer; Y:Integer):TPoint;//004F2CC0
    procedure Initialize;//004F2D00
    //procedure WMPaint(?:?);//004F3044
    //procedure sub_004F3064(?:?);//004F3064
    procedure sub_004F3110;//004F3110
    function NextVisibleZone(StartZone:TDockZone):TDockZone;//004F3114
    function IsOrientationSet(Zone:TDockZone):Boolean;//004F3130
    //function sub_004F34B8(?:TDockZone; ?:?):?;//004F34B8
    function ParentNotLast:Boolean;//004F3540
    function GetLastChildZone(Zone:TDockZone):TDockZone;//004F3718
    //procedure sub_004F39B4(?:?; ?:?);//004F39B4
    procedure sub_004F39CC(?:TDockTree);//004F39CC
    procedure DoFindControlZone(StartZone:TDockZone);//004F39E4
    procedure DoForEach(Zone:TDockZone);//004F3A68
    function HitTest(const MousePos:Types.TPoint; var HTFlag:Integer):TControl;//004F3B34
    //procedure sub_004F3B44(?:?; ?:?; ?:?);//004F3B44
    //procedure sub_004F3D6C(?:TDockTree; ?:TDockZone; ?:TDockZone; ?:?; ?:?);//004F3D6C
    //function sub_004F3F9C(?:?; ?:?; ?:?):?;//004F3F9C
    //function sub_004F40A0(?:?; ?:?):?;//004F40A0
    procedure DoFindZone(Zone:TDockZone);//004F4138
    //procedure sub_004F42D4(?:?; ?:?);//004F42D4
    //procedure sub_004F439C(?:?);//004F439C
    //procedure sub_004F46D8(?:?; ?:?; ?:?);//004F46D8
    procedure DrawGrabberLine(Left:Integer; Top:Integer; Right:Integer; Bottom:Integer);//004F4778
    //procedure sub_004F4804(?:?; ?:?; ?:?; ?:?; ?:?; ?:?);//004F4804
    //procedure sub_004F486C(?:?; ?:?);//004F486C
    //procedure sub_004F4AFC(?:?; ?:?; ?:?; ?:?);//004F4AFC
    procedure DoPrune(Zone:TDockZone);//004F4C70
    //procedure sub_004F4D00(?:?);//004F4D00
    procedure sub_004F4D40(?:TDockTree; ?:TDockZone);//004F4D40
    //procedure sub_004F4FE0(?:?);//004F4FE0
    procedure WriteControlName(const ControlName:UnicodeString);//004F5158
    procedure DoSaveZone(Zone:TDockZone; Level:Integer);//004F51E4
    //procedure sub_004F52F8(?:?);//004F52F8
    //procedure sub_004F54E8(?:TDockZone; ?:?);//004F54E8
    //procedure sub_004F557C(?:TDockTree; ?:?);//004F557C
    //procedure sub_004F5720(?:?);//004F5720
    procedure DoGetNextLimit(Zone:TDockZone);//004F5818
    function GetDockAlign(Client:TControl; DropCtl:TControl):TAlign;//004F5918
    procedure HideZone(const Zone:TDockZone);//004F5994
    //procedure sub_004F5A14(?:TDockZone; ?:?);//004F5A14
    //procedure sub_004F5B60(?:TDockTree; ?:?; ?:?);//004F5B60
    //procedure sub_004F5BE8(?:?);//004F5BE8
    //function sub_004F5E80(?:TDockTree; ?:Integer; ?:Integer):?;//004F5E80
    function ReferenceFromOrient(const Orient:TDockOrientation):Integer;//004F5EE0
    //procedure sub_004F5F0C(?:?; ?:?);//004F5F0C
    //procedure sub_004F5F4C(?:?; ?:?; ?:?; ?:?; ?:?);//004F5F4C
    procedure CalcSplitterPos;//004F6074
    procedure MouseMove(Shift:Classes.TShiftState; X:Integer; Y:Integer; var Handled:Boolean);//004F6104
    procedure MouseUp(Button:UITypes.TMouseButton; Shift:Classes.TShiftState; X:Integer; Y:Integer; var Handled:Boolean);//004F6150
    //procedure sub_004F61BC(?:?; ?:?; ?:?);//004F61BC
    //function sub_004F63DC(?:?):?;//004F63DC
    procedure InitIMM32;//004F6538
    //procedure sub_004F6584(?:HWND; ?:?);//004F6584
    //function sub_004F6684(?:?):?;//004F6684
    procedure DoneControls;//004F66A4
    procedure InitControls;//004F6748
    //procedure sub_004E5F1C(?:?);//004F6A10
    procedure AssignTo(Dest:Classes.TPersistent);//004F6ABC
    procedure Change;//004F6B04
    procedure InitDefaults(Margins:TMargins);//004F6B18
    //function sub_004F6C74(?:?):?;//004F6C74
    procedure InitDefaults(Margins:TMargins);//004F6E40
    procedure CMTextChanged;//004F6E54
    procedure CreateParams(var Params:TCreateParams);//004F6EE0
    procedure CreateWnd;//004F6EFC
    //procedure sub_004F6F5C(?:?);//004F6F5C
    procedure sub_004F6F70;//004F6F70
    procedure WMNCHitTest(var Message:Messages.TWMNCHitTest);//004F7024
    //procedure WMNCPaint(?:?);//004F702C
    //procedure sub_004F7090(?:?);//004F7090
    procedure Notification(AComponent:TComponent; Operation:TOperation);//004F72F0
    procedure sub_004F7568(?:TCustomHint);//004F7568
    function LatestHintWindow:TCustomHintWindow;//004F78E8
    procedure AssignTo(Dest:Classes.TPersistent);//004F7F50
    //procedure sub_004F8074(?:TTouchManager; ?:?);//004F8074

implementation

//004D7EBC
function shell32.Shell_NotifyIconW(lpData:PNotifyIconDataW):BOOL; stdcall;
begin
{*
 004D7EBC    jmp         dword ptr ds:[9054B4]
*}
end;

//004D7EC4
procedure sub_004D7EC4;
begin
{*
 004D7EC4    add         esp,0FFFFFEEC
 004D7ECA    mov         dword ptr [esp],114
 004D7ED1    push        esp
 004D7ED2    call        kernel32.GetVersionExW
 004D7ED7    test        eax,eax
>004D7ED9    je          004D7EF6
 004D7EDB    mov         eax,dword ptr [esp+10]
 004D7EDF    mov         [007A119C],eax;gvar_007A119C
 004D7EE4    mov         eax,dword ptr [esp+4]
 004D7EE8    mov         [007A1194],eax;gvar_007A1194
 004D7EED    mov         eax,dword ptr [esp+8]
 004D7EF1    mov         [007A1198],eax;gvar_007A1198
 004D7EF6    add         esp,114
 004D7EFC    ret
*}
end;

//004D7F00
{*function sub_004D7F00:?;
begin
 004D7F00    cmp         dword ptr ds:[7A1194],6;gvar_007A1194
>004D7F07    jl          004D7F0F
 004D7F09    mov         eax,3BC
 004D7F0E    ret
 004D7F0F    mov         eax,3A8
 004D7F14    ret
end;*}

//004E1BBC
procedure TCustomPanningWindow.GetIsPanning;
begin
{*
>004E1BBC    jmp         @AbstractError
*}
end;

//004E1BC4
procedure TCustomPanningWindow.StartPanning(AHandle:NativeUInt; AControl:TControl);
begin
{*
>004E1BC4    jmp         @AbstractError
*}
end;

//004E1BCC
procedure TCustomPanningWindow.StopPanning;
begin
{*
>004E1BCC    jmp         @AbstractError
*}
end;

//004E3468
function MouseOriginToShiftState:TShiftState;
begin
{*
 004E3468    call        user32.GetMessageExtraInfo
 004E346D    and         eax,0FFFFFF80
 004E3470    cmp         eax,0FF515700
>004E3475    jne         004E347F
 004E3477    movzx       eax,word ptr ds:[4E3498]
 004E347E    ret
 004E347F    cmp         eax,0FF515780
>004E3484    jne         004E348F
 004E3486    movzx       eax,word ptr ds:[4E349C]
>004E348D    jmp         004E3496
 004E348F    movzx       eax,word ptr ds:[4E34A0]
 004E3496    ret
*}
end;

//004E34A4
procedure ChangeBiDiModeAlignment(var Alignment:Classes.TAlignment);
begin
{*
 004E34A4    movzx       edx,byte ptr [eax]
 004E34A7    sub         dl,1
>004E34AA    jb          004E34B0
>004E34AC    je          004E34B4
>004E34AE    jmp         004E34B7
 004E34B0    mov         byte ptr [eax],1
 004E34B3    ret
 004E34B4    mov         byte ptr [eax],0
 004E34B7    ret
*}
end;

//004E34B8
{*function sub_004E34B8(?:?; ?:?; ?:?; ?:?):?;
begin
 004E34B8    push        ebp
 004E34B9    mov         ebp,esp
 004E34BB    push        ecx
 004E34BC    push        ebx
 004E34BD    lea         ebx,[ebp-4]
 004E34C0    mov         eax,[007A11A8];0x0 gvar_007A11A8
 004E34C5    mov         edx,dword ptr [ebp+8]
 004E34C8    mov         dword ptr [eax+278],edx
 004E34CE    mov         eax,dword ptr [ebp+8]
 004E34D1    push        eax
 004E34D2    call        user32.IsWindowUnicode
 004E34D7    test        eax,eax
>004E34D9    je          004E3524
 004E34DB    mov         eax,[007A11A8];0x0 gvar_007A11A8
 004E34E0    mov         eax,dword ptr [eax+27C]
 004E34E6    push        eax
 004E34E7    push        0FC
 004E34E9    mov         eax,dword ptr [ebp+8]
 004E34EC    push        eax
 004E34ED    call        user32.SetWindowLongW
 004E34F2    push        0F0
 004E34F4    mov         eax,dword ptr [ebp+8]
 004E34F7    push        eax
 004E34F8    call        user32.GetWindowLongW
 004E34FD    test        eax,40000000
>004E3502    je          004E356B
 004E3504    push        0F4
 004E3506    mov         eax,dword ptr [ebp+8]
 004E3509    push        eax
 004E350A    call        user32.GetWindowLongW
 004E350F    test        eax,eax
>004E3511    jne         004E356B
 004E3513    mov         eax,dword ptr [ebp+8]
 004E3516    push        eax
 004E3517    push        0F4
 004E3519    mov         eax,dword ptr [ebp+8]
 004E351C    push        eax
 004E351D    call        user32.SetWindowLongW
>004E3522    jmp         004E356B
 004E3524    mov         eax,[007A11A8];0x0 gvar_007A11A8
 004E3529    mov         eax,dword ptr [eax+27C]
 004E352F    push        eax
 004E3530    push        0FC
 004E3532    mov         eax,dword ptr [ebp+8]
 004E3535    push        eax
 004E3536    call        user32.SetWindowLongW
 004E353B    push        0F0
 004E353D    mov         eax,dword ptr [ebp+8]
 004E3540    push        eax
 004E3541    call        user32.GetWindowLongW
 004E3546    test        eax,40000000
>004E354B    je          004E356B
 004E354D    push        0F4
 004E354F    mov         eax,dword ptr [ebp+8]
 004E3552    push        eax
 004E3553    call        user32.GetWindowLongW
 004E3558    test        eax,eax
>004E355A    jne         004E356B
 004E355C    mov         eax,dword ptr [ebp+8]
 004E355F    push        eax
 004E3560    push        0F4
 004E3562    mov         eax,dword ptr [ebp+8]
 004E3565    push        eax
 004E3566    call        user32.SetWindowLongW
 004E356B    mov         eax,[007A11A8];0x0 gvar_007A11A8
 004E3570    push        eax
 004E3571    movzx       eax,word ptr ds:[7CA5EA];gvar_007CA5EA
 004E3578    push        eax
 004E3579    mov         eax,dword ptr [ebp+8]
 004E357C    push        eax
 004E357D    call        user32.SetPropW
 004E3582    mov         eax,[007A11A8];0x0 gvar_007A11A8
 004E3587    push        eax
 004E3588    movzx       eax,word ptr ds:[7CA5E8];gvar_007CA5E8
 004E358F    push        eax
 004E3590    mov         eax,dword ptr [ebp+8]
 004E3593    push        eax
 004E3594    call        user32.SetPropW
 004E3599    push        dword ptr [ebp+14]
 004E359C    push        dword ptr [ebp+10]
 004E359F    push        dword ptr [ebp+0C]
 004E35A2    push        dword ptr [ebp+8]
 004E35A5    mov         eax,[007A11A8];0x0 gvar_007A11A8
 004E35AA    mov         dword ptr ds:[7A11A8],0;gvar_007A11A8
 004E35B4    call        dword ptr [eax+27C]
 004E35BA    mov         dword ptr [ebp-4],eax
 004E35BD    mov         eax,dword ptr [ebx]
 004E35BF    pop         ebx
 004E35C0    pop         ecx
 004E35C1    pop         ebp
 004E35C2    ret         10
end;*}

//004E35C8
function ObjectFromHWnd(Handle:Windows.HWND):TWinControl;
begin
{*
 004E35C8    push        ebx
 004E35C9    push        esi
 004E35CA    push        ecx
 004E35CB    mov         esi,eax
 004E35CD    call        kernel32.GetCurrentProcessId
 004E35D2    mov         ebx,eax
 004E35D4    push        esp
 004E35D5    push        esi
 004E35D6    call        user32.GetWindowThreadProcessId
 004E35DB    test        eax,eax
>004E35DD    je          004E35F5
 004E35DF    cmp         ebx,dword ptr [esp]
>004E35E2    jne         004E35F5
 004E35E4    push        0
 004E35E6    push        ebx
 004E35E7    mov         eax,[007CA5F4]
 004E35EC    push        eax
 004E35ED    push        esi
 004E35EE    call        user32.SendMessageW
>004E35F3    jmp         004E35F7
 004E35F5    xor         eax,eax
 004E35F7    pop         edx
 004E35F8    pop         esi
 004E35F9    pop         ebx
 004E35FA    ret
*}
end;

//004E35FC
function FindControl(Handle:Windows.HWND):TWinControl;
begin
{*
 004E35FC    push        ebx
 004E35FD    push        esi
 004E35FE    push        ecx
 004E35FF    mov         ebx,eax
 004E3601    xor         esi,esi
 004E3603    test        ebx,ebx
>004E3605    je          004E3650
 004E3607    push        esp
 004E3608    push        ebx
 004E3609    call        user32.GetWindowThreadProcessId
 004E360E    test        eax,eax
>004E3610    je          004E3650
 004E3612    call        kernel32.GetCurrentProcessId
 004E3617    cmp         eax,dword ptr [esp]
>004E361A    jne         004E3650
 004E361C    mov         eax,[007CA5F0]
 004E3621    call        @UStrToPWChar
 004E3626    push        eax
 004E3627    call        kernel32.GlobalFindAtomW
 004E362C    cmp         ax,word ptr ds:[7CA5EA];gvar_007CA5EA
>004E3633    jne         004E3647
 004E3635    movzx       eax,word ptr ds:[7CA5EA];gvar_007CA5EA
 004E363C    push        eax
 004E363D    push        ebx
 004E363E    call        user32.GetPropW
 004E3643    mov         esi,eax
>004E3645    jmp         004E3650
 004E3647    mov         eax,ebx
 004E3649    call        ObjectFromHWnd
 004E364E    mov         esi,eax
 004E3650    mov         eax,esi
 004E3652    pop         edx
 004E3653    pop         esi
 004E3654    pop         ebx
 004E3655    ret
*}
end;

//004E3658
function IsVCLControl(Handle:Windows.HWND):Boolean;
begin
{*
 004E3658    push        ebx
 004E3659    mov         ebx,eax
 004E365B    mov         eax,ebx
 004E365D    call        FindControl
 004E3662    test        eax,eax
 004E3664    setne       al
 004E3667    test        al,al
>004E3669    jne         004E3683
 004E366B    cmp         word ptr ds:[7CA5DA],0
>004E3673    je          004E3683
 004E3675    mov         edx,ebx
 004E3677    mov         eax,dword ptr ds:[7CA5DC]
 004E367D    call        dword ptr ds:[7CA5D8]
 004E3683    pop         ebx
 004E3684    ret
*}
end;

//004E3688
{*function sub_004E3688:?;
begin
 004E3688    push        ebx
 004E3689    push        esi
 004E368A    mov         ebx,dword ptr ds:[7C4A18];^Application:TApplication
 004E3690    mov         ebx,dword ptr [ebx]
 004E3692    mov         esi,dword ptr [ebx+188];TApplication.FHandle:HWND
 004E3698    test        esi,esi
>004E369A    je          004E36A8
 004E369C    push        ecx
 004E369D    push        edx
 004E369E    push        eax
 004E369F    push        esi
 004E36A0    call        user32.SendMessageW
 004E36A5    pop         esi
 004E36A6    pop         ebx
 004E36A7    ret
 004E36A8    xor         eax,eax
 004E36AA    pop         esi
 004E36AB    pop         ebx
 004E36AC    ret
end;*}

//004E36C0
function GetShortHint(const Hint:UnicodeString):UnicodeString;
begin
{*
 004E36C0    push        ebx
 004E36C1    push        esi
 004E36C2    push        edi
 004E36C3    mov         edi,edx
 004E36C5    mov         esi,eax
 004E36C7    mov         edx,esi
 004E36C9    mov         eax,4E3704;'|'
 004E36CE    call        AnsiPos
 004E36D3    mov         ebx,eax
 004E36D5    test        ebx,ebx
>004E36D7    jne         004E36E4
 004E36D9    mov         eax,edi
 004E36DB    mov         edx,esi
 004E36DD    call        @UStrAsg
>004E36E2    jmp         004E36F4
 004E36E4    push        edi
 004E36E5    mov         ecx,ebx
 004E36E7    dec         ecx
 004E36E8    mov         edx,1
 004E36ED    mov         eax,esi
 004E36EF    call        @UStrCopy
 004E36F4    pop         edi
 004E36F5    pop         esi
 004E36F6    pop         ebx
 004E36F7    ret
*}
end;

//004E3708
function GetLongHint(const Hint:UnicodeString):UnicodeString;
begin
{*
 004E3708    push        ebx
 004E3709    push        esi
 004E370A    push        edi
 004E370B    mov         edi,edx
 004E370D    mov         esi,eax
 004E370F    mov         edx,esi
 004E3711    mov         eax,4E374C;'|'
 004E3716    call        AnsiPos
 004E371B    mov         ebx,eax
 004E371D    test        ebx,ebx
>004E371F    jne         004E372C
 004E3721    mov         eax,edi
 004E3723    mov         edx,esi
 004E3725    call        @UStrAsg
>004E372A    jmp         004E373C
 004E372C    push        edi
 004E372D    lea         edx,[ebx+1]
 004E3730    mov         ecx,7FFFFFFF
 004E3735    mov         eax,esi
 004E3737    call        @UStrCopy
 004E373C    pop         edi
 004E373D    pop         esi
 004E373E    pop         ebx
 004E373F    ret
*}
end;

//004E3750
procedure sub_004E3750(?:TControl; ?:HDC);
begin
{*
 004E3750    push        ebx
 004E3751    push        esi
 004E3752    add         esp,0FFFFFFF8
 004E3755    mov         ebx,edx
 004E3757    mov         esi,eax
 004E3759    push        esp
 004E375A    push        ebx
 004E375B    call        gdi32.GetWindowOrgEx
 004E3760    push        0
 004E3762    mov         eax,dword ptr [esp+8]
 004E3766    add         eax,dword ptr [esi+54]
 004E3769    push        eax
 004E376A    mov         eax,dword ptr [esp+8]
 004E376E    add         eax,dword ptr [esi+50]
 004E3771    push        eax
 004E3772    push        ebx
 004E3773    call        gdi32.SetWindowOrgEx
 004E3778    push        ebx
 004E3779    mov         ecx,ebx
 004E377B    mov         edx,14
 004E3780    mov         eax,dword ptr [esi+40]
 004E3783    call        TControl.Perform
 004E3788    push        0
 004E378A    mov         eax,dword ptr [esp+8]
 004E378E    push        eax
 004E378F    mov         eax,dword ptr [esp+8]
 004E3793    push        eax
 004E3794    push        ebx
 004E3795    call        gdi32.SetWindowOrgEx
 004E379A    pop         ecx
 004E379B    pop         edx
 004E379C    pop         esi
 004E379D    pop         ebx
 004E379E    ret
*}
end;

//004E37A0
procedure PerformBufferedPrintClient(Handle:Windows.HWND; const Rect:Types.TRect);
begin
{*
 004E37A0    push        ebp
 004E37A1    mov         ebp,esp
 004E37A3    add         esp,0FFFFFFEC
 004E37A6    mov         dword ptr [ebp-8],edx
 004E37A9    mov         dword ptr [ebp-4],eax
 004E37AC    mov         eax,dword ptr [ebp-4]
 004E37AF    push        eax
 004E37B0    call        user32.GetDC
 004E37B5    mov         dword ptr [ebp-0C],eax
 004E37B8    xor         edx,edx
 004E37BA    push        ebp
 004E37BB    push        4E384D
 004E37C0    push        dword ptr fs:[edx]
 004E37C3    mov         dword ptr fs:[edx],esp
 004E37C6    lea         eax,[ebp-10]
 004E37C9    push        eax
 004E37CA    push        0
 004E37CC    push        2
 004E37CE    mov         eax,dword ptr [ebp-8]
 004E37D1    push        eax
 004E37D2    mov         eax,dword ptr [ebp-0C]
 004E37D5    push        eax
 004E37D6    call        004D426C
 004E37DB    mov         dword ptr [ebp-14],eax
 004E37DE    xor         edx,edx
 004E37E0    push        ebp
 004E37E1    push        4E382B
 004E37E6    push        dword ptr fs:[edx]
 004E37E9    mov         dword ptr fs:[edx],esp
 004E37EC    push        4
 004E37EE    mov         eax,dword ptr [ebp-10]
 004E37F1    push        eax
 004E37F2    push        318
 004E37F7    mov         eax,dword ptr [ebp-4]
 004E37FA    push        eax
 004E37FB    call        user32.SendMessageW
 004E3800    push        0FF
 004E3805    mov         eax,dword ptr [ebp-8]
 004E3808    push        eax
 004E3809    mov         eax,dword ptr [ebp-14]
 004E380C    push        eax
 004E380D    call        004D429C
 004E3812    xor         eax,eax
 004E3814    pop         edx
 004E3815    pop         ecx
 004E3816    pop         ecx
 004E3817    mov         dword ptr fs:[eax],edx
 004E381A    push        4E3832
 004E381F    push        0FF
 004E3821    mov         eax,dword ptr [ebp-14]
 004E3824    push        eax
 004E3825    call        004D4284
 004E382A    ret
>004E382B    jmp         @HandleFinally
>004E3830    jmp         004E381F
 004E3832    xor         eax,eax
 004E3834    pop         edx
 004E3835    pop         ecx
 004E3836    pop         ecx
 004E3837    mov         dword ptr fs:[eax],edx
 004E383A    push        4E3854
 004E383F    mov         eax,dword ptr [ebp-0C]
 004E3842    push        eax
 004E3843    mov         eax,dword ptr [ebp-4]
 004E3846    push        eax
 004E3847    call        user32.ReleaseDC
 004E384C    ret
>004E384D    jmp         @HandleFinally
>004E3852    jmp         004E383F
 004E3854    mov         esp,ebp
 004E3856    pop         ebp
 004E3857    ret
*}
end;

//004E3858
function GetCaptureControl:TControl;
begin
{*
 004E3858    call        user32.GetCapture
 004E385D    call        FindControl
 004E3862    test        eax,eax
>004E3864    je          004E387F
 004E3866    cmp         dword ptr ds:[7A11B4],0;gvar_007A11B4:TControl
>004E386D    je          004E387F
 004E386F    mov         edx,dword ptr ds:[7A11B4];gvar_007A11B4:TControl
 004E3875    cmp         eax,dword ptr [edx+40]
>004E3878    jne         004E387F
 004E387A    mov         eax,[007A11B4];gvar_007A11B4:TControl
 004E387F    ret
*}
end;

//004E3880
procedure SetCaptureControl(Control:TControl);
begin
{*
 004E3880    push        ebx
 004E3881    mov         ebx,eax
 004E3883    call        user32.ReleaseCapture
 004E3888    xor         eax,eax
 004E388A    mov         [007A11B4],eax;gvar_007A11B4:TControl
 004E388F    test        ebx,ebx
>004E3891    je          004E38C0
 004E3893    mov         eax,ebx
 004E3895    mov         edx,dword ptr ds:[4DE8CC];TWinControl
 004E389B    call        @IsClass
 004E38A0    test        al,al
>004E38A2    jne         004E38B3
 004E38A4    cmp         dword ptr [ebx+40],0
>004E38A8    je          004E38C0
 004E38AA    mov         dword ptr ds:[7A11B4],ebx;gvar_007A11B4:TControl
 004E38B0    mov         ebx,dword ptr [ebx+40]
 004E38B3    mov         eax,ebx
 004E38B5    call        TWinControl.GetHandle
 004E38BA    push        eax
 004E38BB    call        user32.SetCapture
 004E38C0    pop         ebx
 004E38C1    ret
*}
end;

//004E3A58
function TSiteList.Find(ParentWnd:HWND; var Index:Integer):Boolean;
begin
{*
 004E3A58    push        ebx
 004E3A59    push        esi
 004E3A5A    push        edi
 004E3A5B    push        ebp
 004E3A5C    mov         edi,ecx
 004E3A5E    mov         ebp,edx
 004E3A60    mov         esi,eax
 004E3A62    xor         eax,eax
 004E3A64    mov         dword ptr [edi],eax
 004E3A66    xor         ebx,ebx
>004E3A68    jmp         004E3A7F
 004E3A6A    mov         edx,dword ptr [edi]
 004E3A6C    mov         eax,esi
 004E3A6E    call        TList.Get
 004E3A73    cmp         ebp,dword ptr [eax+4]
 004E3A76    sete        bl
 004E3A79    test        bl,bl
>004E3A7B    jne         004E3A86
 004E3A7D    inc         dword ptr [edi]
 004E3A7F    mov         eax,dword ptr [edi]
 004E3A81    cmp         eax,dword ptr [esi+8]
>004E3A84    jl          004E3A6A
 004E3A86    mov         eax,ebx
 004E3A88    pop         ebp
 004E3A89    pop         edi
 004E3A8A    pop         esi
 004E3A8B    pop         ebx
 004E3A8C    ret
*}
end;

//004E3A90
function GetTopParent:HWND;
begin
{*
 004E3A90    push        ebp
 004E3A91    mov         ebp,esp
 004E3A93    push        ebx
 004E3A94    push        esi
 004E3A95    mov         eax,dword ptr [ebp+8]
 004E3A98    mov         eax,dword ptr [eax-4]
 004E3A9B    call        TWinControl.GetHandle
 004E3AA0    mov         ebx,eax
 004E3AA2    mov         esi,ebx
 004E3AA4    test        ebx,ebx
>004E3AA6    je          004E3AB6
 004E3AA8    mov         esi,ebx
 004E3AAA    push        ebx
 004E3AAB    call        user32.GetParent
 004E3AB0    mov         ebx,eax
 004E3AB2    test        ebx,ebx
>004E3AB4    jne         004E3AA8
 004E3AB6    mov         eax,esi
 004E3AB8    pop         esi
 004E3AB9    pop         ebx
 004E3ABA    pop         ebp
 004E3ABB    ret
*}
end;

//004E3ABC
procedure TSiteList.AddSite(ASite:TWinControl);
begin
{*
 004E3ABC    push        ebp
 004E3ABD    mov         ebp,esp
 004E3ABF    add         esp,0FFFFFFF8
 004E3AC2    push        ebx
 004E3AC3    push        esi
 004E3AC4    push        edi
 004E3AC5    mov         dword ptr [ebp-4],edx
 004E3AC8    mov         esi,eax
 004E3ACA    mov         eax,8
 004E3ACF    call        @GetMem
 004E3AD4    mov         ebx,eax
 004E3AD6    mov         eax,dword ptr [ebp-4]
 004E3AD9    mov         dword ptr [ebx],eax
 004E3ADB    push        ebp
 004E3ADC    call        GetTopParent
 004E3AE1    pop         ecx
 004E3AE2    mov         edi,eax
 004E3AE4    mov         dword ptr [ebx+4],edi
 004E3AE7    lea         ecx,[ebp-8]
 004E3AEA    mov         edx,edi
 004E3AEC    mov         eax,esi
 004E3AEE    call        TSiteList.Find
 004E3AF3    test        al,al
>004E3AF5    je          004E3B2D
 004E3AF7    mov         edx,dword ptr [ebp-8]
 004E3AFA    mov         eax,esi
 004E3AFC    call        TList.Get
 004E3B01    mov         edi,eax
 004E3B03    mov         eax,dword ptr [edi]
 004E3B05    call        TWinControl.GetHandle
 004E3B0A    push        eax
 004E3B0B    mov         eax,dword ptr [ebx]
 004E3B0D    call        TWinControl.GetHandle
 004E3B12    push        eax
 004E3B13    call        user32.IsChild
 004E3B18    test        eax,eax
>004E3B1A    je          004E3B1F
 004E3B1C    inc         dword ptr [ebp-8]
 004E3B1F    mov         ecx,ebx
 004E3B21    mov         edx,dword ptr [ebp-8]
 004E3B24    mov         eax,esi
 004E3B26    call        TList.Insert
>004E3B2B    jmp         004E3B36
 004E3B2D    mov         edx,ebx
 004E3B2F    mov         eax,esi
 004E3B31    call        TList.Add
 004E3B36    pop         edi
 004E3B37    pop         esi
 004E3B38    pop         ebx
 004E3B39    pop         ecx
 004E3B3A    pop         ecx
 004E3B3B    pop         ebp
 004E3B3C    ret
*}
end;

//004E3B40
procedure TSiteList.Clear;
begin
{*
 004E3B40    push        ebx
 004E3B41    push        esi
 004E3B42    push        edi
 004E3B43    mov         edi,eax
 004E3B45    mov         ebx,dword ptr [edi+8]
 004E3B48    dec         ebx
 004E3B49    test        ebx,ebx
>004E3B4B    jl          004E3B62
 004E3B4D    inc         ebx
 004E3B4E    xor         esi,esi
 004E3B50    mov         edx,esi
 004E3B52    mov         eax,edi
 004E3B54    call        TList.Get
 004E3B59    call        @FreeMem
 004E3B5E    inc         esi
 004E3B5F    dec         ebx
>004E3B60    jne         004E3B50
 004E3B62    mov         eax,edi
 004E3B64    call        TList.Clear
 004E3B69    pop         edi
 004E3B6A    pop         esi
 004E3B6B    pop         ebx
 004E3B6C    ret
*}
end;

//004E3B70
function TSiteList.GetTopSite:TWinControl;
begin
{*
 004E3B70    push        ebx
 004E3B71    push        esi
 004E3B72    push        edi
 004E3B73    push        ecx
 004E3B74    mov         ebx,eax
 004E3B76    xor         edi,edi
 004E3B78    mov         eax,dword ptr [ebx+8];TSiteList.FCount:Integer
 004E3B7B    test        eax,eax
>004E3B7D    je          004E3BCC
 004E3B7F    dec         eax
>004E3B80    jne         004E3B8F
 004E3B82    xor         edx,edx
 004E3B84    mov         eax,ebx
 004E3B86    call        TList.Get
 004E3B8B    mov         edi,dword ptr [eax]
>004E3B8D    jmp         004E3BCC
 004E3B8F    call        user32.GetDesktopWindow
 004E3B94    push        eax
 004E3B95    call        user32.GetTopWindow
 004E3B9A    mov         esi,eax
>004E3B9C    jmp         004E3BC4
 004E3B9E    mov         ecx,esp
 004E3BA0    mov         edx,esi
 004E3BA2    mov         eax,ebx
 004E3BA4    call        TSiteList.Find
 004E3BA9    test        al,al
>004E3BAB    je          004E3BBA
 004E3BAD    mov         eax,dword ptr [ebx+4];TSiteList.FList:TPointerList
 004E3BB0    mov         edx,dword ptr [esp]
 004E3BB3    mov         eax,dword ptr [eax+edx*4]
 004E3BB6    mov         edi,dword ptr [eax]
>004E3BB8    jmp         004E3BC4
 004E3BBA    push        2
 004E3BBC    push        esi
 004E3BBD    call        user32.GetWindow
 004E3BC2    mov         esi,eax
 004E3BC4    test        edi,edi
>004E3BC6    jne         004E3BCC
 004E3BC8    test        esi,esi
>004E3BCA    jne         004E3B9E
 004E3BCC    mov         eax,edi
 004E3BCE    pop         edx
 004E3BCF    pop         edi
 004E3BD0    pop         esi
 004E3BD1    pop         ebx
 004E3BD2    ret
*}
end;

//004E3BD4
procedure TDragObject.Assign(Source:TDragObject);
begin
{*
 004E3BD4    mov         ecx,dword ptr [edx+14]
 004E3BD7    mov         dword ptr [eax+14],ecx
 004E3BDA    mov         ecx,dword ptr [edx+8]
 004E3BDD    mov         dword ptr [eax+8],ecx
 004E3BE0    mov         ecx,dword ptr [edx+0C]
 004E3BE3    mov         dword ptr [eax+0C],ecx
 004E3BE6    mov         ecx,dword ptr [edx+10]
 004E3BE9    mov         dword ptr [eax+10],ecx
 004E3BEC    mov         ecx,dword ptr [edx+18]
 004E3BEF    mov         dword ptr [eax+18],ecx
 004E3BF2    mov         ecx,dword ptr [edx+1C]
 004E3BF5    mov         dword ptr [eax+1C],ecx
 004E3BF8    mov         ecx,dword ptr [edx+28]
 004E3BFB    mov         dword ptr [eax+28],ecx
 004E3BFE    mov         ecx,dword ptr [edx+2C]
 004E3C01    mov         dword ptr [eax+2C],ecx
 004E3C04    mov         ecx,dword ptr [edx+30]
 004E3C07    mov         dword ptr [eax+30],ecx
 004E3C0A    mov         ecx,dword ptr [edx+34]
 004E3C0D    mov         dword ptr [eax+34],ecx
 004E3C10    ret
*}
end;

//004E3C14
function TDragObject.Capture:HWND;
begin
{*
 004E3C14    push        ebx
 004E3C15    push        eax
 004E3C16    push        4E3DBC;TDragObject.MainWndProc
 004E3C1B    call        AllocateHWnd
 004E3C20    mov         ebx,eax
 004E3C22    push        ebx
 004E3C23    call        user32.SetCapture
 004E3C28    mov         eax,ebx
 004E3C2A    pop         ebx
 004E3C2B    ret
*}
end;

//004E3C2C
procedure sub_004E3C2C;
begin
{*
 004E3C2C    push        ebp
 004E3C2D    mov         ebp,esp
 004E3C2F    pop         ebp
 004E3C30    ret         8
*}
end;

//004E3C34
function TDragObject.GetName:string;
begin
{*
 004E3C34    push        ebx
 004E3C35    push        esi
 004E3C36    mov         esi,edx
 004E3C38    mov         ebx,eax
 004E3C3A    mov         edx,esi
 004E3C3C    mov         eax,dword ptr [ebx]
 004E3C3E    call        TObject.ClassName
 004E3C43    pop         esi
 004E3C44    pop         ebx
 004E3C45    ret
*}
end;

//004E3C48
procedure TDragObject.ReleaseCapture(Handle:Windows.HWND);
begin
{*
 004E3C48    push        ebx
 004E3C49    mov         ebx,edx
 004E3C4B    call        user32.ReleaseCapture
 004E3C50    mov         eax,ebx
 004E3C52    call        DeallocateHWnd
 004E3C57    pop         ebx
 004E3C58    ret
*}
end;

//004E3C5C
{*procedure sub_004E3C5C(?:?);
begin
 004E3C5C    push        ebp
 004E3C5D    mov         ebp,esp
 004E3C5F    add         esp,0FFFFFFE8
 004E3C62    push        ebx
 004E3C63    push        esi
 004E3C64    push        edi
 004E3C65    mov         dword ptr [ebp-4],eax
 004E3C68    xor         eax,eax
 004E3C6A    push        ebp
 004E3C6B    push        4E3D60
 004E3C70    push        dword ptr fs:[eax]
 004E3C73    mov         dword ptr fs:[eax],esp
 004E3C76    mov         eax,dword ptr [edx]
 004E3C78    cmp         eax,215
>004E3C7D    jg          004E3C97
>004E3C7F    je          004E3CE8
 004E3C81    sub         eax,200
>004E3C86    je          004E3CAA
 004E3C88    sub         eax,2
>004E3C8B    je          004E3CF1
 004E3C8D    sub         eax,3
>004E3C90    je          004E3CFA
>004E3C92    jmp         004E3D56
 004E3C97    sub         eax,0BD00
>004E3C9C    je          004E3D2A
 004E3CA2    dec         eax
>004E3CA3    je          004E3D15
>004E3CA5    jmp         004E3D56
 004E3CAA    lea         eax,[edx+8]
 004E3CAD    mov         dword ptr [ebp-10],eax
 004E3CB0    mov         eax,dword ptr [ebp-10]
 004E3CB3    movsx       eax,word ptr [eax]
 004E3CB6    mov         dword ptr [ebp-18],eax
 004E3CB9    mov         eax,dword ptr [ebp-10]
 004E3CBC    movsx       eax,word ptr [eax+2]
 004E3CC0    mov         dword ptr [ebp-14],eax
 004E3CC3    mov         eax,dword ptr [ebp-18]
 004E3CC6    mov         dword ptr [ebp-0C],eax
 004E3CC9    mov         eax,dword ptr [ebp-14]
 004E3CCC    mov         dword ptr [ebp-8],eax
 004E3CCF    lea         eax,[ebp-0C]
 004E3CD2    push        eax
 004E3CD3    mov         eax,[007CA604];gvar_007CA604:Windows.HWND
 004E3CD8    push        eax
 004E3CD9    call        user32.ClientToScreen
 004E3CDE    lea         eax,[ebp-0C]
 004E3CE1    call        004E4770
>004E3CE6    jmp         004E3D56
 004E3CE8    xor         eax,eax
 004E3CEA    call        DragDone
>004E3CEF    jmp         004E3D56
 004E3CF1    mov         al,1
 004E3CF3    call        DragDone
>004E3CF8    jmp         004E3D56
 004E3CFA    mov         eax,dword ptr [ebp-4]
 004E3CFD    cmp         byte ptr [eax+38],0;TDragObject.FRightClickCancels:Boolean
>004E3D01    je          004E3D0C
 004E3D03    xor         eax,eax
 004E3D05    call        DragDone
>004E3D0A    jmp         004E3D56
 004E3D0C    mov         al,1
 004E3D0E    call        DragDone
>004E3D13    jmp         004E3D56
 004E3D15    cmp         dword ptr [edx+4],11
>004E3D19    jne         004E3D56
 004E3D1B    mov         eax,[007CA5FC];gvar_007CA5FC
 004E3D20    add         eax,0C
 004E3D23    call        004E4770
>004E3D28    jmp         004E3D56
 004E3D2A    mov         eax,dword ptr [edx+4]
 004E3D2D    sub         eax,11
>004E3D30    je          004E3D39
 004E3D32    sub         eax,0A
>004E3D35    je          004E3D48
>004E3D37    jmp         004E3D56
 004E3D39    mov         eax,[007CA5FC];gvar_007CA5FC
 004E3D3E    add         eax,0C
 004E3D41    call        004E4770
>004E3D46    jmp         004E3D56
 004E3D48    mov         dword ptr [edx+0C],1
 004E3D4F    xor         eax,eax
 004E3D51    call        DragDone
 004E3D56    xor         eax,eax
 004E3D58    pop         edx
 004E3D59    pop         ecx
 004E3D5A    pop         ecx
 004E3D5B    mov         dword ptr fs:[eax],edx
>004E3D5E    jmp         004E3D89
>004E3D60    jmp         @HandleAnyException
 004E3D65    cmp         dword ptr ds:[7CA5F8],0;gvar_007CA5F8
>004E3D6C    je          004E3D75
 004E3D6E    xor         eax,eax
 004E3D70    call        DragDone
 004E3D75    mov         eax,[007C4A18];^Application:TApplication
 004E3D7A    mov         eax,dword ptr [eax]
 004E3D7C    mov         edx,dword ptr [ebp-4]
 004E3D7F    call        TApplication.HandleException
 004E3D84    call        @DoneExcept
 004E3D89    pop         edi
 004E3D8A    pop         esi
 004E3D8B    pop         ebx
 004E3D8C    mov         esp,ebp
 004E3D8E    pop         ebp
 004E3D8F    ret
end;*}

//004E3D90
{*function sub_004E3D90:?;
begin
 004E3D90    xor         eax,eax
 004E3D92    ret
end;*}

//004E3D94
function TDragObject.GetDragCursor(Accepted:Boolean; X:Integer; Y:Integer):TCursor;
begin
{*
 004E3D94    push        ebp
 004E3D95    mov         ebp,esp
 004E3D97    test        dl,dl
>004E3D99    je          004E3DA1
 004E3D9B    mov         ax,0FFF4
>004E3D9F    jmp         004E3DA5
 004E3DA1    mov         ax,0FFF3
 004E3DA5    pop         ebp
 004E3DA6    ret         4
*}
end;

//004E3DAC
procedure TDragObject.HideDragImage;
begin
{*
 004E3DAC    ret
*}
end;

//004E3DB0
function TDragObject.Instance:NativeUInt;
begin
{*
 004E3DB0    mov         eax,[007C7C54];gvar_007C7C54
 004E3DB5    ret
*}
end;

//004E3DB8
procedure TDragObject.ShowDragImage;
begin
{*
 004E3DB8    ret
*}
end;

//004E3DBC
procedure TDragObject.MainWndProc(var Message:Messages.TMessage);
begin
{*
 004E3DBC    push        ebp
 004E3DBD    mov         ebp,esp
 004E3DBF    push        ecx
 004E3DC0    push        ebx
 004E3DC1    push        esi
 004E3DC2    push        edi
 004E3DC3    mov         dword ptr [ebp-4],eax
 004E3DC6    xor         eax,eax
 004E3DC8    push        ebp
 004E3DC9    push        4E3DE6
 004E3DCE    push        dword ptr fs:[eax]
 004E3DD1    mov         dword ptr fs:[eax],esp
 004E3DD4    mov         eax,dword ptr [ebp-4]
 004E3DD7    mov         ecx,dword ptr [eax]
 004E3DD9    call        dword ptr [ecx+0C]
 004E3DDC    xor         eax,eax
 004E3DDE    pop         edx
 004E3DDF    pop         ecx
 004E3DE0    pop         ecx
 004E3DE1    mov         dword ptr fs:[eax],edx
>004E3DE4    jmp         004E3DFF
>004E3DE6    jmp         @HandleAnyException
 004E3DEB    mov         eax,[007C4A18];^Application:TApplication
 004E3DF0    mov         eax,dword ptr [eax]
 004E3DF2    mov         edx,dword ptr [ebp-4]
 004E3DF5    call        TApplication.HandleException
 004E3DFA    call        @DoneExcept
 004E3DFF    pop         edi
 004E3E00    pop         esi
 004E3E01    pop         ebx
 004E3E02    pop         ecx
 004E3E03    pop         ebp
 004E3E04    ret
*}
end;

//004E3E08
procedure TDragObject.BeforeDestruction;
begin
{*
 004E3E08    call        TObject.BeforeDestruction
 004E3E0D    xor         eax,eax
 004E3E0F    mov         [007CA628],eax
 004E3E14    ret
*}
end;

//004E3E18
procedure TDragObject.AfterConstruction;
begin
{*
 004E3E18    call        TObject.AfterConstruction
 004E3E1D    xor         eax,eax
 004E3E1F    mov         [007CA628],eax
 004E3E24    ret
*}
end;

//004E3E28
constructor TBaseDragControlObject.Create;
begin
{*
 004E3E28    push        ebx
 004E3E29    push        esi
 004E3E2A    push        edi
 004E3E2B    test        dl,dl
>004E3E2D    je          004E3E37
 004E3E2F    add         esp,0FFFFFFF0
 004E3E32    call        @ClassCreate
 004E3E37    mov         esi,ecx
 004E3E39    mov         ebx,edx
 004E3E3B    mov         edi,eax
 004E3E3D    xor         edx,edx
 004E3E3F    mov         eax,edi
 004E3E41    call        TObject.Create
 004E3E46    mov         dword ptr [edi+40],esi
 004E3E49    mov         eax,edi
 004E3E4B    test        bl,bl
>004E3E4D    je          004E3E5E
 004E3E4F    call        @AfterConstruction
 004E3E54    pop         dword ptr fs:[0]
 004E3E5B    add         esp,0C
 004E3E5E    mov         eax,edi
 004E3E60    pop         edi
 004E3E61    pop         esi
 004E3E62    pop         ebx
 004E3E63    ret
*}
end;

//004E3E64
procedure TBaseDragControlObject.Assign(Source:TDragObject);
begin
{*
 004E3E64    push        ebx
 004E3E65    push        esi
 004E3E66    mov         esi,edx
 004E3E68    mov         ebx,eax
 004E3E6A    mov         edx,esi
 004E3E6C    mov         eax,ebx
 004E3E6E    call        TDragObject.Assign
 004E3E73    mov         eax,esi
 004E3E75    mov         edx,dword ptr ds:[4D87A8];TBaseDragControlObject
 004E3E7B    call        @IsClass
 004E3E80    test        al,al
>004E3E82    je          004E3E8A
 004E3E84    mov         eax,dword ptr [esi+40]
 004E3E87    mov         dword ptr [ebx+40],eax
 004E3E8A    pop         esi
 004E3E8B    pop         ebx
 004E3E8C    ret
*}
end;

//004E3E90
{*procedure sub_004E3E90(?:?; ?:?; ?:?);
begin
 004E3E90    push        ebp
 004E3E91    mov         ebp,esp
 004E3E93    add         esp,0FFFFFFF8
 004E3E96    push        esi
 004E3E97    push        edi
 004E3E98    mov         dword ptr [ebp-8],ecx
 004E3E9B    mov         dword ptr [ebp-4],edx
 004E3E9E    mov         esi,eax
 004E3EA0    mov         edi,dword ptr [esi+40];TBaseDragControlObject................FControl:TControl
 004E3EA3    test        edi,edi
>004E3EA5    je          004E3EBC
 004E3EA7    mov         eax,dword ptr [ebp+8]
 004E3EAA    push        eax
 004E3EAB    mov         ecx,dword ptr [ebp-8]
 004E3EAE    mov         edx,dword ptr [ebp-4]
 004E3EB1    mov         eax,edi
 004E3EB3    mov         si,0FFDE
 004E3EB7    call        @CallDynaInst;TControl.sub_004E7880
 004E3EBC    pop         edi
 004E3EBD    pop         esi
 004E3EBE    pop         ecx
 004E3EBF    pop         ecx
 004E3EC0    pop         ebp
 004E3EC1    ret         4
end;*}

//004E3EC4
{*procedure sub_004E3EC4(?:?; ?:?; ?:?; ?:?);
begin
 004E3EC4    push        ebp
 004E3EC5    mov         ebp,esp
 004E3EC7    push        ebx
 004E3EC8    push        esi
 004E3EC9    push        edi
 004E3ECA    mov         edi,ecx
 004E3ECC    mov         ebx,eax
 004E3ECE    cmp         byte ptr [ebp+8],0
>004E3ED2    jne         004E3EE2
 004E3ED4    mov         eax,dword ptr [ebx+40];TBaseDragControlObject.................FControl:TControl
 004E3ED7    mov         si,0FFE0
 004E3EDB    call        @CallDynaInst;TControl.sub_004E77C8
 004E3EE0    xor         edx,edx
 004E3EE2    mov         eax,dword ptr [ebp+0C]
 004E3EE5    push        eax
 004E3EE6    mov         ecx,edi
 004E3EE8    mov         eax,ebx
 004E3EEA    mov         ebx,dword ptr [eax]
 004E3EEC    call        dword ptr [ebx+24];TBaseDragControlObject.sub_004E3E90
 004E3EEF    pop         edi
 004E3EF0    pop         esi
 004E3EF1    pop         ebx
 004E3EF2    pop         ebp
 004E3EF3    ret         8
end;*}

//004E3EF8
{*function TDragControlObject.GetDragCursor(Accepted:Boolean; X:Integer; Y:Integer):?;
begin
 004E3EF8    push        ebp
 004E3EF9    mov         ebp,esp
 004E3EFB    test        dl,dl
>004E3EFD    je          004E3F0B
 004E3EFF    mov         eax,dword ptr [eax+40];TDragControlObject..................FControl:TControl
 004E3F02    movzx       eax,word ptr [eax+8A];TControl.FDragCursor:TCursor
>004E3F09    jmp         004E3F0F
 004E3F0B    mov         ax,0FFF3
 004E3F0F    pop         ebp
 004E3F10    ret         4
end;*}

//004E3F14
procedure sub_004E3F14;
begin
{*
 004E3F14    mov         eax,dword ptr [eax+40];TDragControlObject...................FControl:TControl
 004E3F17    mov         edx,dword ptr [eax]
 004E3F19    call        dword ptr [edx+0A0];TControl.sub_004E5D10
 004E3F1F    ret
*}
end;

//004E3F20
procedure TDragControlObject.HideDragImage;
begin
{*
 004E3F20    push        ebx
 004E3F21    mov         ebx,eax
 004E3F23    mov         eax,dword ptr [ebx+40];TDragControlObject....................FControl:TControl
 004E3F26    mov         edx,dword ptr [eax]
 004E3F28    call        dword ptr [edx+0A0];TControl.sub_004E5D10
 004E3F2E    test        eax,eax
>004E3F30    je          004E3F42
 004E3F32    mov         eax,dword ptr [ebx+40];TDragControlObject.....................FControl:TControl
 004E3F35    mov         edx,dword ptr [eax]
 004E3F37    call        dword ptr [edx+0A0];TControl.sub_004E5D10
 004E3F3D    call        TDragImageList.HideDragImage
 004E3F42    pop         ebx
 004E3F43    ret
*}
end;

//004E3F44
procedure TDragControlObject.ShowDragImage;
begin
{*
 004E3F44    push        ebx
 004E3F45    mov         ebx,eax
 004E3F47    mov         eax,dword ptr [ebx+40];TDragControlObject......................FControl:TControl
 004E3F4A    mov         edx,dword ptr [eax]
 004E3F4C    call        dword ptr [edx+0A0];TControl.sub_004E5D10
 004E3F52    test        eax,eax
>004E3F54    je          004E3F66
 004E3F56    mov         eax,dword ptr [ebx+40];TDragControlObject.......................FControl:TControl
 004E3F59    mov         edx,dword ptr [eax]
 004E3F5B    call        dword ptr [edx+0A0];TControl.sub_004E5D10
 004E3F61    call        TDragImageList.ShowDragImage
 004E3F66    pop         ebx
 004E3F67    ret
*}
end;

//004E3F68
procedure TDragControlObjectEx.BeforeDestruction;
begin
{*
 004E3F68    ret
*}
end;

//004E3F6C
constructor TDragDockObject.Create;
begin
{*
 004E3F6C    push        ebp
 004E3F6D    mov         ebp,esp
 004E3F6F    push        ecx
 004E3F70    push        ebx
 004E3F71    push        esi
 004E3F72    test        dl,dl
>004E3F74    je          004E3F7E
 004E3F76    add         esp,0FFFFFFF0
 004E3F79    call        @ClassCreate
 004E3F7E    mov         byte ptr [ebp-1],dl
 004E3F81    mov         ebx,eax
 004E3F83    xor         edx,edx
 004E3F85    mov         eax,ebx
 004E3F87    call        TBaseDragControlObject.Create
 004E3F8C    mov         byte ptr [ebx+38],1
 004E3F90    mov         dl,1
 004E3F92    mov         eax,[004BE308];TBrush
 004E3F97    call        TBrush.Create
 004E3F9C    mov         esi,eax
 004E3F9E    mov         dword ptr [ebx+48],esi
 004E3FA1    mov         edx,0FFFFFF
 004E3FA6    xor         eax,eax
 004E3FA8    call        AllocPatternBitmap
 004E3FAD    mov         edx,eax
 004E3FAF    mov         eax,esi
 004E3FB1    call        TBrush.SetBitmap
 004E3FB6    mov         eax,ebx
 004E3FB8    cmp         byte ptr [ebp-1],0
>004E3FBC    je          004E3FCD
 004E3FBE    call        @AfterConstruction
 004E3FC3    pop         dword ptr fs:[0]
 004E3FCA    add         esp,0C
 004E3FCD    mov         eax,ebx
 004E3FCF    pop         esi
 004E3FD0    pop         ebx
 004E3FD1    pop         ecx
 004E3FD2    pop         ebp
 004E3FD3    ret
*}
end;

//004E3FD4
destructor TDragDockObject.Destroy();
begin
{*
 004E3FD4    push        ebx
 004E3FD5    push        esi
 004E3FD6    call        @BeforeDestruction
 004E3FDB    mov         ebx,edx
 004E3FDD    mov         esi,eax
 004E3FDF    mov         eax,dword ptr [esi+48]
 004E3FE2    call        TObject.Free
 004E3FE7    mov         dl,0FC
 004E3FE9    and         dl,bl
 004E3FEB    mov         eax,esi
 004E3FED    call        TObject.Destroy
 004E3FF2    test        bl,bl
>004E3FF4    jle         004E3FFD
 004E3FF6    mov         eax,esi
 004E3FF8    call        @ClassDestroy
 004E3FFD    pop         esi
 004E3FFE    pop         ebx
 004E3FFF    ret
*}
end;

//004E4000
procedure TDragDockObject.Assign(Source:TDragObject);
begin
{*
 004E4000    push        ebx
 004E4001    push        esi
 004E4002    push        edi
 004E4003    mov         esi,edx
 004E4005    mov         ebx,eax
 004E4007    mov         edx,esi
 004E4009    mov         eax,ebx
 004E400B    call        TBaseDragControlObject.Assign
 004E4010    mov         eax,esi
 004E4012    mov         edx,dword ptr ds:[4D8B9C];TDragDockObject
 004E4018    call        @IsClass
 004E401D    test        al,al
>004E401F    je          004E405A
 004E4021    mov         eax,esi
 004E4023    movzx       edx,byte ptr [eax+5C]
 004E4027    mov         byte ptr [ebx+5C],dl
 004E402A    mov         edx,dword ptr [eax+60]
 004E402D    mov         dword ptr [ebx+60],edx
 004E4030    movzx       edx,byte ptr [eax+74]
 004E4034    mov         byte ptr [ebx+74],dl
 004E4037    push        esi
 004E4038    lea         esi,[eax+4C]
 004E403B    lea         edi,[ebx+4C]
 004E403E    movs        dword ptr [edi],dword ptr [esi]
 004E403F    movs        dword ptr [edi],dword ptr [esi]
 004E4040    movs        dword ptr [edi],dword ptr [esi]
 004E4041    movs        dword ptr [edi],dword ptr [esi]
 004E4042    pop         esi
 004E4043    push        esi
 004E4044    lea         esi,[eax+64]
 004E4047    lea         edi,[ebx+64]
 004E404A    movs        dword ptr [edi],dword ptr [esi]
 004E404B    movs        dword ptr [edi],dword ptr [esi]
 004E404C    movs        dword ptr [edi],dword ptr [esi]
 004E404D    movs        dword ptr [edi],dword ptr [esi]
 004E404E    pop         esi
 004E404F    mov         edx,dword ptr [eax+48]
 004E4052    mov         eax,dword ptr [ebx+48]
 004E4055    mov         ecx,dword ptr [eax]
 004E4057    call        dword ptr [ecx+8]
 004E405A    pop         edi
 004E405B    pop         esi
 004E405C    pop         ebx
 004E405D    ret
*}
end;

//004E4060
procedure TDragDockObject.SetBrush(Value:Graphics.TBrush);
begin
{*
 004E4060    mov         eax,dword ptr [eax+48]
 004E4063    mov         ecx,dword ptr [eax]
 004E4065    call        dword ptr [ecx+8]
 004E4068    ret
*}
end;

//004E406C
{*procedure sub_004E406C(?:?; ?:?; ?:?);
begin
 004E406C    push        ebp
 004E406D    mov         ebp,esp
 004E406F    push        ecx
 004E4070    push        esi
 004E4071    push        edi
 004E4072    mov         dword ptr [ebp-4],ecx
 004E4075    mov         edi,edx
 004E4077    mov         esi,eax
 004E4079    mov         eax,dword ptr [ebp+8]
 004E407C    push        eax
 004E407D    mov         ecx,dword ptr [ebp-4]
 004E4080    mov         edx,edi
 004E4082    mov         eax,dword ptr [esi+40];TDragDockObject........................FControl:TControl
 004E4085    mov         si,0FFE6
 004E4089    call        @CallDynaInst;TControl.sub_004E799C
 004E408E    pop         edi
 004E408F    pop         esi
 004E4090    pop         ecx
 004E4091    pop         ebp
 004E4092    ret         4
end;*}

//004E4098
function AbsMin(Value1:Integer; Value2:Integer):Integer;
begin
{*
 004E4098    push        ebx
 004E4099    push        esi
 004E409A    mov         ebx,edx
 004E409C    mov         ecx,eax
 004E409E    mov         eax,ecx
 004E40A0    cdq
 004E40A1    xor         eax,edx
 004E40A3    sub         eax,edx
 004E40A5    mov         esi,eax
 004E40A7    mov         eax,ebx
 004E40A9    cdq
 004E40AA    xor         eax,edx
 004E40AC    sub         eax,edx
 004E40AE    cmp         esi,eax
>004E40B0    jge         004E40B7
 004E40B2    mov         eax,ecx
 004E40B4    pop         esi
 004E40B5    pop         ebx
 004E40B6    ret
 004E40B7    mov         eax,ebx
 004E40B9    pop         esi
 004E40BA    pop         ebx
 004E40BB    ret
*}
end;

//004E40BC
procedure TDragDockObject.AdjustDockRect(ARect:Types.TRect);
begin
{*
 004E40BC    push        ebx
 004E40BD    push        esi
 004E40BE    push        edi
 004E40BF    add         esp,0FFFFFFF0
 004E40C2    mov         esi,edx
 004E40C4    lea         edi,[esp]
 004E40C7    movs        dword ptr [edi],dword ptr [esi]
 004E40C8    movs        dword ptr [edi],dword ptr [esi]
 004E40C9    movs        dword ptr [edi],dword ptr [esi]
 004E40CA    movs        dword ptr [edi],dword ptr [esi]
 004E40CB    mov         ebx,eax
 004E40CD    mov         eax,dword ptr [ebx+0C]
 004E40D0    mov         edx,dword ptr [esp]
 004E40D3    cmp         eax,edx
>004E40D5    jl          004E40DD
 004E40D7    cmp         eax,dword ptr [esp+8]
>004E40DB    jle         004E40F1
 004E40DD    sub         edx,eax
 004E40DF    mov         ecx,dword ptr [esp+8]
 004E40E3    sub         ecx,eax
 004E40E5    mov         eax,ecx
 004E40E7    xchg        eax,edx
 004E40E8    call        AbsMin
 004E40ED    mov         esi,eax
>004E40EF    jmp         004E40F3
 004E40F1    xor         esi,esi
 004E40F3    mov         eax,dword ptr [ebx+10]
 004E40F6    mov         edx,dword ptr [esp+4]
 004E40FA    cmp         eax,edx
>004E40FC    jl          004E4104
 004E40FE    cmp         eax,dword ptr [esp+0C]
>004E4102    jle         004E4116
 004E4104    sub         edx,eax
 004E4106    mov         ecx,dword ptr [esp+0C]
 004E410A    sub         ecx,eax
 004E410C    mov         eax,ecx
 004E410E    xchg        eax,edx
 004E410F    call        AbsMin
>004E4114    jmp         004E4118
 004E4116    xor         eax,eax
 004E4118    test        esi,esi
>004E411A    jne         004E4120
 004E411C    test        eax,eax
>004E411E    je          004E4130
 004E4120    mov         ecx,eax
 004E4122    neg         ecx
 004E4124    mov         edx,esi
 004E4126    neg         edx
 004E4128    lea         eax,[ebx+4C]
 004E412B    call        OffsetRect
 004E4130    add         esp,10
 004E4133    pop         edi
 004E4134    pop         esi
 004E4135    pop         ebx
 004E4136    ret
*}
end;

//004E4138
procedure sub_004E4138;
begin
{*
 004E4138    push        esi
 004E4139    mov         esi,eax
 004E413B    mov         edx,esi
 004E413D    mov         eax,dword ptr [esi+40];TDragDockObject.........................FControl:TControl
 004E4140    mov         si,0FFDC
 004E4144    call        @CallDynaInst;TControl.sub_004E7CC0
 004E4149    pop         esi
 004E414A    ret
*}
end;

//004E414C
procedure sub_004E414C;
begin
{*
 004E414C    push        esi
 004E414D    mov         esi,eax
 004E414F    mov         edx,esi
 004E4151    mov         eax,dword ptr [esi+40];TDragDockObject..........................FControl:TControl
 004E4154    mov         si,0FFDB
 004E4158    call        @CallDynaInst;TControl.sub_004E7CD8
 004E415D    pop         esi
 004E415E    ret
*}
end;

//004E4160
function TDragDockObject.GetDragCursor(Accepted:Boolean; X:Integer; Y:Integer):TCursor;
begin
{*
 004E4160    push        ebp
 004E4161    mov         ebp,esp
 004E4163    xor         eax,eax
 004E4165    pop         ebp
 004E4166    ret         4
*}
end;

//004E416C
{*function sub_004E416C:?;
begin
 004E416C    mov         al,1
 004E416E    ret
end;*}

//004E4170
{*function sub_004E4170:?;
begin
 004E4170    mov         eax,4
 004E4175    ret
end;*}

//004E4178
procedure TDragDockObjectEx.BeforeDestruction;
begin
{*
 004E4178    ret
*}
end;

//004E417C
function IsBeforeTargetWindow(Window:Windows.HWND; Data:LongInt):BOOL; stdcall;
begin
{*
 004E417C    push        ebp
 004E417D    mov         ebp,esp
 004E417F    add         esp,0FFFFFFF0
 004E4182    push        ebx
 004E4183    push        esi
 004E4184    mov         esi,dword ptr [ebp+8]
 004E4187    mov         ebx,dword ptr [ebp+0C]
 004E418A    cmp         esi,dword ptr [ebx+4]
>004E418D    jne         004E4193
 004E418F    xor         eax,eax
>004E4191    jmp         004E41D3
 004E4193    cmp         dword ptr [ebx+8],0
>004E4197    jne         004E41B5
 004E4199    lea         eax,[ebp-10]
 004E419C    push        eax
 004E419D    push        esi
 004E419E    call        user32.GetWindowRect
 004E41A3    lea         edx,[ebx+0C]
 004E41A6    lea         eax,[ebp-10]
 004E41A9    call        TRect.Contains
 004E41AE    test        al,al
>004E41B0    je          004E41B5
 004E41B2    mov         dword ptr [ebx+8],esi
 004E41B5    cmp         esi,dword ptr [ebx+8]
>004E41B8    jne         004E41C2
 004E41BA    xor         eax,eax
 004E41BC    mov         byte ptr [ebx+14],1
>004E41C0    jmp         004E41D3
 004E41C2    cmp         esi,dword ptr [ebx]
>004E41C4    jne         004E41D0
 004E41C6    or          eax,0FFFFFFFF
 004E41C9    xor         edx,edx
 004E41CB    mov         dword ptr [ebx+8],edx
>004E41CE    jmp         004E41D3
 004E41D0    or          eax,0FFFFFFFF
 004E41D3    pop         esi
 004E41D4    pop         ebx
 004E41D5    mov         esp,ebp
 004E41D7    pop         ebp
 004E41D8    ret         8
*}
end;

//004E41DC
{*function sub_004E41DC(?:?; ?:?):?;
begin
 004E41DC    push        ebp
 004E41DD    mov         ebp,esp
 004E41DF    add         esp,0FFFFFFC4
 004E41E2    push        ebx
 004E41E3    push        esi
 004E41E4    push        edi
 004E41E5    mov         esi,eax
 004E41E7    mov         byte ptr [ebp-1],1
 004E41EB    mov         eax,dword ptr [ebp+8]
 004E41EE    add         eax,0FFFFFFF8
 004E41F1    call        DragFindWindow
 004E41F6    mov         ebx,eax
 004E41F8    mov         dword ptr [ebp-14],ebx
 004E41FB    push        4
 004E41FD    push        ebx
 004E41FE    call        user32.GetWindow
 004E4203    mov         edx,dword ptr ds:[7C4A18];^Application:TApplication
 004E4209    mov         edx,dword ptr [edx]
 004E420B    cmp         eax,dword ptr [edx+188];TApplication.FHandle:HWND
>004E4211    je          004E423A
 004E4213    mov         eax,dword ptr [ebp-14]
 004E4216    call        FindControl
 004E421B    mov         ebx,eax
 004E421D    test        ebx,ebx
>004E421F    je          004E4369
>004E4225    jmp         004E4229
 004E4227    mov         ebx,eax
 004E4229    mov         eax,dword ptr [ebx+40];TWinControl.FParent:TWinControl
 004E422C    test        eax,eax
>004E422E    jne         004E4227
 004E4230    mov         eax,ebx
 004E4232    call        TWinControl.GetHandle
 004E4237    mov         dword ptr [ebp-14],eax
 004E423A    cmp         dword ptr [ebp-14],0
>004E423E    je          004E4369
 004E4244    mov         ebx,esi
>004E4246    jmp         004E424A
 004E4248    mov         ebx,eax
 004E424A    mov         eax,dword ptr [ebx+40]
 004E424D    test        eax,eax
>004E424F    jne         004E4248
 004E4251    mov         eax,ebx
 004E4253    call        TWinControl.GetHandle
 004E4258    mov         edi,eax
 004E425A    mov         dword ptr [ebp-18],edi
 004E425D    cmp         edi,dword ptr [ebp-14]
>004E4260    je          004E4369
 004E4266    mov         eax,dword ptr [ebp+8]
 004E4269    mov         eax,dword ptr [eax-10]
 004E426C    mov         eax,dword ptr [eax+40]
 004E426F    test        eax,eax
>004E4271    je          004E428C
 004E4273    mov         ebx,eax
>004E4275    jmp         004E4279
 004E4277    mov         ebx,eax
 004E4279    mov         eax,dword ptr [ebx+40]
 004E427C    test        eax,eax
>004E427E    jne         004E4277
 004E4280    mov         eax,ebx
 004E4282    call        TWinControl.GetHandle
 004E4287    mov         dword ptr [ebp-1C],eax
>004E428A    jmp         004E42B6
 004E428C    mov         eax,dword ptr [ebp+8]
 004E428F    mov         eax,dword ptr [eax-10]
 004E4292    mov         edx,dword ptr ds:[4DE8CC];TWinControl
 004E4298    call        @IsClass
 004E429D    test        al,al
>004E429F    je          004E42B1
 004E42A1    mov         eax,dword ptr [ebp+8]
 004E42A4    mov         eax,dword ptr [eax-10]
 004E42A7    call        TWinControl.GetHandle
 004E42AC    mov         dword ptr [ebp-1C],eax
>004E42AF    jmp         004E42B6
 004E42B1    xor         eax,eax
 004E42B3    mov         dword ptr [ebp-1C],eax
 004E42B6    mov         byte ptr [ebp-8],0
 004E42BA    mov         eax,dword ptr [ebp+8]
 004E42BD    mov         edx,dword ptr [eax-8]
 004E42C0    mov         dword ptr [ebp-10],edx
 004E42C3    mov         edx,dword ptr [eax-4]
 004E42C6    mov         dword ptr [ebp-0C],edx
 004E42C9    lea         eax,[ebp-1C]
 004E42CC    push        eax
 004E42CD    push        4E417C;IsBeforeTargetWindow:Windows.BOOL
 004E42D2    call        kernel32.GetCurrentThreadId
 004E42D7    push        eax
 004E42D8    call        user32.EnumThreadWindows
 004E42DD    cmp         byte ptr [ebp-8],0
>004E42E1    je          004E4369
 004E42E7    lea         eax,[ebp-2C]
 004E42EA    push        eax
 004E42EB    mov         eax,dword ptr [ebp-14]
 004E42EE    push        eax
 004E42EF    call        user32.GetWindowRect
 004E42F4    mov         eax,dword ptr [ebp+8]
 004E42F7    add         eax,0FFFFFFF8
 004E42FA    push        eax
 004E42FB    mov         eax,dword ptr [ebp+8]
 004E42FE    add         eax,0FFFFFFF7
 004E4301    push        eax
 004E4302    lea         ecx,[ebp-3C]
 004E4305    mov         eax,dword ptr [ebp+8]
 004E4308    mov         edx,dword ptr [eax-10]
 004E430B    mov         eax,esi
 004E430D    mov         si,0FFBA
 004E4311    call        @CallDynaInst
 004E4316    mov         eax,[007CA5FC];gvar_007CA5FC
 004E431B    mov         edx,dword ptr ds:[4D8B9C];TDragDockObject
 004E4321    call        @IsClass
 004E4326    test        al,al
>004E4328    je          004E4353
 004E432A    mov         eax,[007CA5FC];gvar_007CA5FC
 004E432F    mov         eax,dword ptr [eax+40]
 004E4332    cmp         dword ptr [eax+0A0],0
>004E4339    je          004E4353
 004E433B    mov         eax,[007CA5FC];gvar_007CA5FC
 004E4340    mov         eax,dword ptr [eax+40]
 004E4343    mov         eax,dword ptr [eax+0A0]
 004E4349    call        TWinControl.GetHandle
 004E434E    cmp         eax,dword ptr [ebp-14]
>004E4351    je          004E4369
 004E4353    lea         ecx,[ebp-3C]
 004E4356    lea         edx,[ebp-2C]
 004E4359    lea         eax,[ebp-2C]
 004E435C    call        IntersectRect
 004E4361    test        al,al
>004E4363    je          004E4369
 004E4365    mov         byte ptr [ebp-1],0
 004E4369    movzx       eax,byte ptr [ebp-1]
 004E436D    pop         edi
 004E436E    pop         esi
 004E436F    pop         ebx
 004E4370    mov         esp,ebp
 004E4372    pop         ebp
 004E4373    ret
end;*}

//004E4374
function IsSiteChildOfClient:Boolean;
begin
{*
 004E4374    push        ebp
 004E4375    mov         ebp,esp
 004E4377    mov         eax,dword ptr [ebp+8]
 004E437A    mov         eax,dword ptr [eax-10]
 004E437D    mov         edx,dword ptr ds:[4DE8CC];TWinControl
 004E4383    call        @IsClass
 004E4388    test        al,al
>004E438A    je          004E43B1
 004E438C    mov         eax,dword ptr [ebp+8]
 004E438F    mov         eax,dword ptr [eax-14]
 004E4392    call        TWinControl.GetHandle
 004E4397    push        eax
 004E4398    mov         eax,dword ptr [ebp+8]
 004E439B    mov         eax,dword ptr [eax-10]
 004E439E    call        TWinControl.GetHandle
 004E43A3    push        eax
 004E43A4    call        user32.IsChild
 004E43A9    cmp         eax,1
 004E43AC    sbb         eax,eax
 004E43AE    inc         eax
 004E43AF    pop         ebp
 004E43B0    ret
 004E43B1    xor         eax,eax
 004E43B3    pop         ebp
 004E43B4    ret
*}
end;

//004E43B8
function GetDockSiteAtPos(MousePos:Types.TPoint; Client:TControl):TWinControl;
begin
{*
 004E43B8    push        ebp
 004E43B9    mov         ebp,esp
 004E43BB    add         esp,0FFFFFFD8
 004E43BE    push        ebx
 004E43BF    push        esi
 004E43C0    push        edi
 004E43C1    mov         esi,eax
 004E43C3    lea         edi,[ebp-8]
 004E43C6    movs        dword ptr [edi],dword ptr [esi]
 004E43C7    movs        dword ptr [edi],dword ptr [esi]
 004E43C8    mov         dword ptr [ebp-10],edx
 004E43CB    xor         eax,eax
 004E43CD    mov         dword ptr [ebp-18],eax
 004E43D0    cmp         dword ptr ds:[7CA620],0
>004E43D7    je          004E44F9
 004E43DD    push        11
 004E43DF    call        user32.GetKeyState
 004E43E4    test        ax,8000
 004E43E8    setne       al
 004E43EB    mov         edx,dword ptr ds:[7C4A18];^Application:TApplication
 004E43F1    mov         edx,dword ptr [edx]
 004E43F3    xor         al,byte ptr [edx+0D4]
>004E43F9    je          004E44F9
 004E43FF    mov         eax,[007CA624];gvar_007CA624:TSiteList
 004E4404    mov         edx,dword ptr [eax]
 004E4406    call        dword ptr [edx+8]
 004E4409    mov         eax,[007CA620]
 004E440E    mov         ebx,dword ptr [eax+8]
 004E4411    dec         ebx
 004E4412    test        ebx,ebx
>004E4414    jl          004E44C8
 004E441A    inc         ebx
 004E441B    xor         edi,edi
 004E441D    mov         edx,edi
 004E441F    mov         eax,[007CA620]
 004E4424    call        TList.Get
 004E4429    mov         dword ptr [ebp-14],eax
 004E442C    mov         eax,dword ptr [ebp-14]
 004E442F    cmp         eax,dword ptr [ebp-10]
>004E4432    je          004E44C0
 004E4438    mov         eax,dword ptr [ebp-14]
 004E443B    cmp         byte ptr [eax+205],0
>004E4442    je          004E44C0
 004E4444    mov         eax,dword ptr [ebp-14]
 004E4447    mov         edx,dword ptr [eax]
 004E4449    call        dword ptr [edx+6C]
 004E444C    test        al,al
>004E444E    je          004E44C0
 004E4450    mov         eax,dword ptr [ebp-14]
 004E4453    call        TWinControl.GetHandle
 004E4458    push        eax
 004E4459    call        user32.IsWindowVisible
 004E445E    test        eax,eax
>004E4460    je          004E44C0
 004E4462    push        ebp
 004E4463    call        IsSiteChildOfClient
 004E4468    pop         ecx
 004E4469    test        al,al
>004E446B    jne         004E44C0
 004E446D    mov         edx,dword ptr [ebp-10]
 004E4470    mov         eax,dword ptr [ebp-14]
 004E4473    mov         si,0FFB9
 004E4477    call        @CallDynaInst
 004E447C    test        al,al
>004E447E    je          004E44C0
 004E4480    mov         byte ptr [ebp-9],1
 004E4484    lea         eax,[ebp-8]
 004E4487    push        eax
 004E4488    lea         eax,[ebp-9]
 004E448B    push        eax
 004E448C    lea         ecx,[ebp-28]
 004E448F    mov         edx,dword ptr [ebp-10]
 004E4492    mov         eax,dword ptr [ebp-14]
 004E4495    mov         si,0FFBA
 004E4499    call        @CallDynaInst
 004E449E    cmp         byte ptr [ebp-9],0
>004E44A2    je          004E44C0
 004E44A4    lea         edx,[ebp-8]
 004E44A7    lea         eax,[ebp-28]
 004E44AA    call        TRect.Contains
 004E44AF    test        al,al
>004E44B1    je          004E44C0
 004E44B3    mov         edx,dword ptr [ebp-14]
 004E44B6    mov         eax,[007CA624];gvar_007CA624:TSiteList
 004E44BB    call        TSiteList.AddSite
 004E44C0    inc         edi
 004E44C1    dec         ebx
>004E44C2    jne         004E441D
 004E44C8    mov         eax,[007CA624];gvar_007CA624:TSiteList
 004E44CD    cmp         dword ptr [eax+8],0
>004E44D1    jle         004E44E0
 004E44D3    mov         eax,[007CA624];gvar_007CA624:TSiteList
 004E44D8    call        TSiteList.GetTopSite
 004E44DD    mov         dword ptr [ebp-18],eax
 004E44E0    cmp         dword ptr [ebp-18],0
>004E44E4    je          004E44F9
 004E44E6    push        ebp
 004E44E7    mov         eax,dword ptr [ebp-18]
 004E44EA    call        004E41DC
 004E44EF    pop         ecx
 004E44F0    test        al,al
>004E44F2    jne         004E44F9
 004E44F4    xor         eax,eax
 004E44F6    mov         dword ptr [ebp-18],eax
 004E44F9    mov         eax,dword ptr [ebp-18]
 004E44FC    pop         edi
 004E44FD    pop         esi
 004E44FE    pop         ebx
 004E44FF    mov         esp,ebp
 004E4501    pop         ebp
 004E4502    ret
*}
end;

//004E4504
procedure RegisterDockSite(Site:TWinControl; DoRegister:Boolean);
begin
{*
 004E4504    push        ebx
 004E4505    push        esi
 004E4506    mov         ebx,edx
 004E4508    mov         esi,eax
 004E450A    test        esi,esi
>004E450C    je          004E455A
 004E450E    cmp         dword ptr ds:[7CA620],0
>004E4515    jne         004E4528
 004E4517    mov         dl,1
 004E4519    mov         eax,[0046C204];TList
 004E451E    call        TObject.Create
 004E4523    mov         [007CA620],eax
 004E4528    mov         edx,esi
 004E452A    mov         eax,[007CA620]
 004E452F    call        TList.IndexOf
 004E4534    test        bl,bl
>004E4536    je          004E4549
 004E4538    inc         eax
>004E4539    jne         004E455A
 004E453B    mov         edx,esi
 004E453D    mov         eax,[007CA620]
 004E4542    call        TList.Add
>004E4547    jmp         004E455A
 004E4549    cmp         eax,0FFFFFFFF
>004E454C    je          004E455A
 004E454E    mov         edx,eax
 004E4550    mov         eax,[007CA620]
 004E4555    call        TList.Delete
 004E455A    pop         esi
 004E455B    pop         ebx
 004E455C    ret
*}
end;

//004E4560
function DragMessage(Handle:Windows.HWND; Msg:TDragMessage; Source:TDragObject; Target:Pointer; const Pos:Types.TPoint):NativeInt;
begin
{*
 004E4560    push        ebp
 004E4561    mov         ebp,esp
 004E4563    add         esp,0FFFFFFE8
 004E4566    push        ebx
 004E4567    mov         dword ptr [ebp-4],ecx
 004E456A    xor         ecx,ecx
 004E456C    test        eax,eax
>004E456E    je          004E45AC
 004E4570    mov         ecx,dword ptr [ebp+8]
 004E4573    mov         ebx,dword ptr [ecx]
 004E4575    mov         dword ptr [ebp-18],ebx
 004E4578    mov         ebx,dword ptr [ecx+4]
 004E457B    mov         dword ptr [ebp-14],ebx
 004E457E    mov         ecx,dword ptr [ebp+0C]
 004E4581    mov         dword ptr [ebp-0C],ecx
 004E4584    mov         ecx,dword ptr [ebp-4]
 004E4587    mov         dword ptr [ebp-10],ecx
 004E458A    cmp         byte ptr ds:[7CA618],2;gvar_007CA618
 004E4591    sete        cl
 004E4594    mov         byte ptr [ebp-8],cl
 004E4597    lea         ecx,[ebp-18]
 004E459A    push        ecx
 004E459B    and         edx,7F
 004E459E    push        edx
 004E459F    push        0B02F
 004E45A4    push        eax
 004E45A5    call        user32.SendMessageW
 004E45AA    mov         ecx,eax
 004E45AC    mov         eax,ecx
 004E45AE    pop         ebx
 004E45AF    mov         esp,ebp
 004E45B1    pop         ebp
 004E45B2    ret         8
*}
end;

//004E45B8
function IsDelphiHandle(Handle:Windows.HWND):Boolean;
begin
{*
 004E45B8    push        ebx
 004E45B9    push        esi
 004E45BA    push        ecx
 004E45BB    mov         esi,eax
 004E45BD    xor         ebx,ebx
 004E45BF    test        esi,esi
>004E45C1    je          004E4612
 004E45C3    push        esp
 004E45C4    push        esi
 004E45C5    call        user32.GetWindowThreadProcessId
 004E45CA    test        eax,eax
>004E45CC    je          004E4612
 004E45CE    call        kernel32.GetCurrentProcessId
 004E45D3    cmp         eax,dword ptr [esp]
>004E45D6    jne         004E4612
 004E45D8    mov         eax,[007CA5EC]
 004E45DD    call        @UStrToPWChar
 004E45E2    push        eax
 004E45E3    call        kernel32.GlobalFindAtomW
 004E45E8    cmp         ax,word ptr ds:[7CA5E8];gvar_007CA5E8
>004E45EF    jne         004E4606
 004E45F1    movzx       eax,word ptr ds:[7CA5E8];gvar_007CA5E8
 004E45F8    push        eax
 004E45F9    push        esi
 004E45FA    call        user32.GetPropW
 004E45FF    test        eax,eax
 004E4601    setne       bl
>004E4604    jmp         004E4612
 004E4606    mov         eax,esi
 004E4608    call        ObjectFromHWnd
 004E460D    test        eax,eax
 004E460F    setne       bl
 004E4612    mov         eax,ebx
 004E4614    pop         edx
 004E4615    pop         esi
 004E4616    pop         ebx
 004E4617    ret
*}
end;

//004E4618
function DragFindWindow(const Pos:Types.TPoint):HWND;
begin
{*
 004E4618    push        ebx
 004E4619    push        dword ptr [eax+4]
 004E461C    push        dword ptr [eax]
 004E461E    call        user32.WindowFromPoint
 004E4623    mov         ebx,eax
 004E4625    test        ebx,ebx
>004E4627    je          004E4640
 004E4629    mov         eax,ebx
 004E462B    call        IsDelphiHandle
 004E4630    test        al,al
>004E4632    jne         004E4640
 004E4634    push        ebx
 004E4635    call        user32.GetParent
 004E463A    mov         ebx,eax
 004E463C    test        ebx,ebx
>004E463E    jne         004E4629
 004E4640    mov         eax,ebx
 004E4642    pop         ebx
 004E4643    ret
*}
end;

//004E4644
function DragFindTarget(const Pos:Types.TPoint; var Handle:Windows.HWND; DragKind:UITypes.TDragKind; Client:TControl):Pointer;
begin
{*
 004E4644    push        ebp
 004E4645    mov         ebp,esp
 004E4647    push        ebx
 004E4648    push        esi
 004E4649    mov         esi,edx
 004E464B    mov         ebx,eax
 004E464D    test        cl,cl
>004E464F    jne         004E4670
 004E4651    mov         eax,ebx
 004E4653    call        DragFindWindow
 004E4658    mov         dword ptr [esi],eax
 004E465A    push        0
 004E465C    push        ebx
 004E465D    mov         eax,dword ptr [esi]
 004E465F    mov         ecx,dword ptr ds:[7CA5FC];gvar_007CA5FC
 004E4665    mov         dl,5
 004E4667    call        DragMessage
 004E466C    mov         ebx,eax
>004E466E    jmp         004E4689
 004E4670    mov         eax,ebx
 004E4672    mov         edx,dword ptr [ebp+8]
 004E4675    call        GetDockSiteAtPos
 004E467A    mov         ebx,eax
 004E467C    test        ebx,ebx
>004E467E    je          004E4689
 004E4680    mov         eax,ebx
 004E4682    call        TWinControl.GetHandle
 004E4687    mov         dword ptr [esi],eax
 004E4689    mov         eax,ebx
 004E468B    pop         esi
 004E468C    pop         ebx
 004E468D    pop         ebp
 004E468E    ret         4
*}
end;

//004E4694
function DoDragOver(DragMsg:TDragMessage):Boolean;
begin
{*
 004E4694    push        ebx
 004E4695    push        esi
 004E4696    mov         ebx,eax
 004E4698    xor         eax,eax
 004E469A    mov         edx,dword ptr ds:[7CA5FC];gvar_007CA5FC
 004E46A0    mov         esi,dword ptr [edx+14]
 004E46A3    test        esi,esi
>004E46A5    je          004E46CC
 004E46A7    push        esi
 004E46A8    mov         eax,[007CA5FC];gvar_007CA5FC
 004E46AD    add         eax,0C
 004E46B0    push        eax
 004E46B1    mov         edx,ebx
 004E46B3    mov         eax,[007CA5FC];gvar_007CA5FC
 004E46B8    mov         eax,dword ptr [eax+8]
 004E46BB    mov         ecx,dword ptr ds:[7CA5FC];gvar_007CA5FC
 004E46C1    call        DragMessage
 004E46C6    cmp         eax,1
 004E46C9    sbb         eax,eax
 004E46CB    inc         eax
 004E46CC    pop         esi
 004E46CD    pop         ebx
 004E46CE    ret
*}
end;

//004E46D0
{*function sub_004E46D0:?;
begin
 004E46D0    push        ebp
 004E46D1    mov         ebp,esp
 004E46D3    push        ecx
 004E46D4    push        ebx
 004E46D5    push        esi
 004E46D6    push        edi
 004E46D7    xor         eax,eax
 004E46D9    mov         dword ptr [ebp-4],eax
 004E46DC    mov         eax,[007CA5FC];gvar_007CA5FC
 004E46E1    mov         esi,dword ptr [eax+14]
 004E46E4    test        esi,esi
>004E46E6    je          004E4767
 004E46E8    cmp         byte ptr [esi+206],0
>004E46EF    je          004E4767
 004E46F1    cmp         dword ptr [esi+1D4],0
>004E46F8    je          004E4767
 004E46FA    mov         eax,esi
 004E46FC    call        TWinControl.GetDockClientCount
 004E4701    test        eax,eax
>004E4703    je          004E4767
 004E4705    mov         eax,esi
 004E4707    call        TWinControl.GetDockClientCount
 004E470C    dec         eax
>004E470D    jne         004E4727
 004E470F    xor         edx,edx
 004E4711    mov         eax,dword ptr [esi+1D4]
 004E4717    call        TList.Get
 004E471C    mov         edx,dword ptr ds:[7CA5FC];gvar_007CA5FC
 004E4722    cmp         eax,dword ptr [edx+40]
>004E4725    je          004E4767
 004E4727    mov         eax,[007CA5FC];gvar_007CA5FC
 004E472C    add         eax,0C
 004E472F    xor         edx,edx
 004E4731    call        FindDragTarget
 004E4736    mov         ebx,eax
>004E4738    jmp         004E475F
 004E473A    mov         edx,ebx
 004E473C    mov         eax,dword ptr [esi+1D4]
 004E4742    call        TList.IndexOf
 004E4747    mov         edi,eax
 004E4749    cmp         edi,0FFFFFFFF
>004E474C    je          004E475C
 004E474E    mov         edx,edi
 004E4750    mov         eax,esi
 004E4752    call        TWinControl.GetDockClients
 004E4757    mov         dword ptr [ebp-4],eax
>004E475A    jmp         004E4767
 004E475C    mov         ebx,dword ptr [ebx+40];TControl.FParent:TWinControl
 004E475F    test        ebx,ebx
>004E4761    je          004E4767
 004E4763    cmp         esi,ebx
>004E4765    jne         004E473A
 004E4767    mov         eax,dword ptr [ebp-4]
 004E476A    pop         edi
 004E476B    pop         esi
 004E476C    pop         ebx
 004E476D    pop         ecx
 004E476E    pop         ebp
 004E476F    ret
end;*}

//004E4770
{*procedure sub_004E4770(?:?);
begin
 004E4770    push        ebx
 004E4771    push        esi
 004E4772    push        edi
 004E4773    add         esp,0FFFFFFF0
 004E4776    mov         edi,eax
 004E4778    cmp         byte ptr ds:[7CA618],0;gvar_007CA618
>004E477F    jne         004E47AE
 004E4781    mov         eax,[007CA608];gvar_007CA608
 004E4786    sub         eax,dword ptr [edi]
 004E4788    cdq
 004E4789    xor         eax,edx
 004E478B    sub         eax,edx
 004E478D    cmp         eax,dword ptr ds:[7CA614];gvar_007CA614
>004E4793    jge         004E47AE
 004E4795    mov         eax,[007CA60C];gvar_007CA60C
 004E479A    sub         eax,dword ptr [edi+4]
 004E479D    cdq
 004E479E    xor         eax,edx
 004E47A0    sub         eax,edx
 004E47A2    cmp         eax,dword ptr ds:[7CA614];gvar_007CA614
>004E47A8    jl          004E4A56
 004E47AE    mov         eax,[007CA5F8];gvar_007CA5F8
 004E47B3    push        eax
 004E47B4    mov         eax,[007CA5F8];gvar_007CA5F8
 004E47B9    movzx       ecx,byte ptr [eax+9B]
 004E47C0    lea         edx,[esp+4]
 004E47C4    mov         eax,edi
 004E47C6    call        DragFindTarget
 004E47CB    mov         ebx,eax
 004E47CD    cmp         byte ptr ds:[7CA618],0;gvar_007CA618
>004E47D4    jne         004E47FC
 004E47D6    cmp         dword ptr ds:[7CA61C],0;gvar_007CA61C
>004E47DD    je          004E47FC
 004E47DF    mov         eax,[007CA60C];gvar_007CA60C
 004E47E4    push        eax
 004E47E5    call        user32.GetDesktopWindow
 004E47EA    mov         edx,eax
 004E47EC    mov         ecx,dword ptr ds:[7CA608];gvar_007CA608
 004E47F2    mov         eax,[007CA61C];gvar_007CA61C
 004E47F7    call        TDragImageList.BeginDrag
 004E47FC    mov         eax,[007CA5F8];gvar_007CA5F8
 004E4801    cmp         byte ptr [eax+9B],0
>004E4808    jne         004E4818
 004E480A    mov         byte ptr ds:[7CA618],1;gvar_007CA618
 004E4811    mov         byte ptr [esp+4],0
>004E4816    jmp         004E482B
 004E4818    cmp         byte ptr ds:[7CA618],0;gvar_007CA618
 004E481F    setne       byte ptr [esp+4]
 004E4824    mov         byte ptr ds:[7CA618],2;gvar_007CA618
 004E482B    mov         eax,[007CA5FC];gvar_007CA5FC
 004E4830    cmp         ebx,dword ptr [eax+14]
>004E4833    je          004E4880
 004E4835    mov         al,1
 004E4837    call        DoDragOver
 004E483C    cmp         dword ptr ds:[7CA5FC],0;gvar_007CA5FC
>004E4843    je          004E4A56
 004E4849    mov         eax,[007CA5FC];gvar_007CA5FC
 004E484E    mov         dword ptr [eax+14],ebx
 004E4851    mov         eax,[007CA5FC];gvar_007CA5FC
 004E4856    mov         edx,dword ptr [esp]
 004E4859    mov         dword ptr [eax+8],edx
 004E485C    mov         eax,[007CA5FC];gvar_007CA5FC
 004E4861    mov         edx,dword ptr [edi]
 004E4863    mov         dword ptr [eax+0C],edx
 004E4866    mov         edx,dword ptr [edi+4]
 004E4869    mov         dword ptr [eax+10],edx
 004E486C    xor         eax,eax
 004E486E    call        DoDragOver
 004E4873    cmp         dword ptr ds:[7CA5FC],0;gvar_007CA5FC
>004E487A    je          004E4A56
 004E4880    mov         eax,[007CA5FC];gvar_007CA5FC
 004E4885    mov         edx,dword ptr [edi]
 004E4887    mov         dword ptr [eax+0C],edx
 004E488A    mov         edx,dword ptr [edi+4]
 004E488D    mov         dword ptr [eax+10],edx
 004E4890    mov         eax,[007CA5FC];gvar_007CA5FC
 004E4895    cmp         dword ptr [eax+14],0
>004E4899    je          004E48C1
 004E489B    lea         ecx,[esp+8]
 004E489F    mov         edx,edi
 004E48A1    mov         eax,[007CA5FC];gvar_007CA5FC
 004E48A6    mov         eax,dword ptr [eax+14]
 004E48A9    call        TControl.ScreenToClient
 004E48AE    mov         eax,[007CA5FC];gvar_007CA5FC
 004E48B3    mov         edx,dword ptr [esp+8]
 004E48B7    mov         dword ptr [eax+18],edx
 004E48BA    mov         edx,dword ptr [esp+0C]
 004E48BE    mov         dword ptr [eax+1C],edx
 004E48C1    mov         eax,dword ptr [edi+4]
 004E48C4    push        eax
 004E48C5    mov         al,2
 004E48C7    call        DoDragOver
 004E48CC    mov         edx,eax
 004E48CE    mov         ecx,dword ptr [edi]
 004E48D0    mov         eax,[007CA5FC];gvar_007CA5FC
 004E48D5    mov         esi,dword ptr [eax]
 004E48D7    call        dword ptr [esi+4]
 004E48DA    mov         esi,eax
 004E48DC    cmp         dword ptr ds:[7CA61C],0;gvar_007CA61C
>004E48E3    je          004E495D
 004E48E5    test        ebx,ebx
>004E48E7    je          004E48FA
 004E48E9    test        byte ptr [ebx+61],20
>004E48ED    jne         004E48FA
 004E48EF    mov         eax,[007CA5FC];gvar_007CA5FC
 004E48F4    cmp         byte ptr [eax+4],0
>004E48F8    je          004E493E
 004E48FA    mov         edx,esi
 004E48FC    mov         eax,[007CA61C];gvar_007CA61C
 004E4901    call        TDragImageList.SetDragCursor
 004E4906    mov         eax,[007CA61C];gvar_007CA61C
 004E490B    cmp         byte ptr [eax+9A],0
>004E4912    jne         004E492D
 004E4914    mov         eax,dword ptr [edi+4]
 004E4917    push        eax
 004E4918    call        user32.GetDesktopWindow
 004E491D    mov         edx,eax
 004E491F    mov         ecx,dword ptr [edi]
 004E4921    mov         eax,[007CA61C];gvar_007CA61C
 004E4926    call        TDragImageList.BeginDrag
>004E492B    jmp         004E495D
 004E492D    mov         ecx,dword ptr [edi+4]
 004E4930    mov         edx,dword ptr [edi]
 004E4932    mov         eax,[007CA61C];gvar_007CA61C
 004E4937    call        TDragImageList.DragMove
>004E493C    jmp         004E495D
 004E493E    mov         eax,[007CA61C];gvar_007CA61C
 004E4943    call        TDragImageList.EndDrag
 004E4948    movsx       edx,si
 004E494B    mov         eax,[007C4E78];^Screen:TScreen
 004E4950    mov         eax,dword ptr [eax]
 004E4952    call        TScreen.GetCursors
 004E4957    push        eax
 004E4958    call        user32.SetCursor
 004E495D    movsx       edx,si
 004E4960    mov         eax,[007C4E78];^Screen:TScreen
 004E4965    mov         eax,dword ptr [eax]
 004E4967    call        TScreen.GetCursors
 004E496C    push        eax
 004E496D    call        user32.SetCursor
 004E4972    cmp         byte ptr ds:[7CA618],2;gvar_007CA618
>004E4979    jne         004E4A56
 004E497F    test        ebx,ebx
>004E4981    jne         004E499F
 004E4983    mov         eax,dword ptr [edi+4]
 004E4986    push        eax
 004E4987    mov         ecx,dword ptr [edi]
 004E4989    mov         esi,dword ptr ds:[7CA5FC];gvar_007CA5FC
 004E498F    mov         eax,dword ptr [esi+40]
 004E4992    mov         edx,esi
 004E4994    mov         si,0FFE8
 004E4998    call        @CallDynaInst
>004E499D    jmp         004E49FB
 004E499F    call        004E46D0
 004E49A4    mov         ebx,eax
 004E49A6    mov         eax,[007CA5FC];gvar_007CA5FC
 004E49AB    mov         dword ptr [eax+60],ebx
 004E49AE    test        ebx,ebx
>004E49B0    jne         004E49D6
 004E49B2    mov         eax,[007CA5FC];gvar_007CA5FC
 004E49B7    lea         edx,[eax+18]
 004E49BA    mov         eax,[007CA5FC];gvar_007CA5FC
 004E49BF    mov         eax,dword ptr [eax+14]
 004E49C2    mov         si,0FFD9
 004E49C6    call        @CallDynaInst
 004E49CB    mov         edx,dword ptr ds:[7CA5FC];gvar_007CA5FC
 004E49D1    mov         byte ptr [edx+5C],al
>004E49D4    jmp         004E49FB
 004E49D6    lea         ecx,[esp+8]
 004E49DA    mov         edx,edi
 004E49DC    mov         eax,ebx
 004E49DE    call        TControl.ScreenToClient
 004E49E3    lea         edx,[esp+8]
 004E49E7    mov         eax,ebx
 004E49E9    mov         si,0FFD9
 004E49ED    call        @CallDynaInst
 004E49F2    mov         edx,dword ptr ds:[7CA5FC];gvar_007CA5FC
 004E49F8    mov         byte ptr [edx+5C],al
 004E49FB    cmp         dword ptr ds:[7CA5FC],0;gvar_007CA5FC
>004E4A02    je          004E4A56
 004E4A04    mov         ebx,dword ptr ds:[7CA5FC];gvar_007CA5FC
 004E4A0A    lea         edx,[ebx+64]
 004E4A0D    lea         eax,[ebx+4C]
 004E4A10    mov         ecx,10
 004E4A15    call        CompareMem
 004E4A1A    test        al,al
>004E4A1C    jne         004E4A56
 004E4A1E    cmp         byte ptr [esp+4],0
>004E4A23    je          004E4A3D
 004E4A25    mov         eax,[007CA5FC];gvar_007CA5FC
 004E4A2A    mov         edx,dword ptr [eax]
 004E4A2C    call        dword ptr [edx+3C]
 004E4A2F    test        al,al
>004E4A31    je          004E4A3D
 004E4A33    mov         eax,[007CA5FC];gvar_007CA5FC
 004E4A38    mov         edx,dword ptr [eax]
 004E4A3A    call        dword ptr [edx+34]
 004E4A3D    mov         eax,[007CA5FC];gvar_007CA5FC
 004E4A42    mov         edx,dword ptr [eax]
 004E4A44    call        dword ptr [edx+30]
 004E4A47    mov         eax,[007CA5FC];gvar_007CA5FC
 004E4A4C    lea         esi,[eax+4C]
 004E4A4F    lea         edi,[eax+64]
 004E4A52    movs        dword ptr [edi],dword ptr [esi]
 004E4A53    movs        dword ptr [edi],dword ptr [esi]
 004E4A54    movs        dword ptr [edi],dword ptr [esi]
 004E4A55    movs        dword ptr [edi],dword ptr [esi]
 004E4A56    add         esp,10
 004E4A59    pop         edi
 004E4A5A    pop         esi
 004E4A5B    pop         ebx
 004E4A5C    ret
end;*}

//004E4A60
{*procedure sub_004E4A60(?:TDragDockObjectEx; ?:?; ?:?);
begin
 004E4A60    push        ebx
 004E4A61    push        esi
 004E4A62    push        edi
 004E4A63    push        ebp
 004E4A64    add         esp,0FFFFFFF8
 004E4A67    mov         edi,ecx
 004E4A69    mov         ebx,edx
 004E4A6B    mov         esi,eax
 004E4A6D    mov         dword ptr ds:[7CA5FC],esi;gvar_007CA5FC
 004E4A73    mov         eax,[007CA5FC];gvar_007CA5FC
 004E4A78    xor         edx,edx
 004E4A7A    mov         dword ptr [eax+14],edx
 004E4A7D    push        7CA608;gvar_007CA608
 004E4A82    call        user32.GetCursorPos
 004E4A87    mov         eax,[007CA5FC];gvar_007CA5FC
 004E4A8C    mov         edx,dword ptr ds:[7CA608];gvar_007CA608
 004E4A92    mov         dword ptr [eax+0C],edx
 004E4A95    mov         edx,dword ptr ds:[7CA60C];gvar_007CA60C
 004E4A9B    mov         dword ptr [eax+10],edx
 004E4A9E    call        user32.GetCursor
 004E4AA3    mov         [007CA610],eax;gvar_007CA610:HICON
 004E4AA8    mov         eax,[007CA5FC];gvar_007CA5FC
 004E4AAD    call        TDragObject.Capture
 004E4AB2    mov         [007CA604],eax;gvar_007CA604:Windows.HWND
 004E4AB7    mov         dword ptr ds:[7CA614],edi;gvar_007CA614
 004E4ABD    mov         eax,esi
 004E4ABF    mov         edx,dword ptr ds:[4D8B9C];TDragDockObject
 004E4AC5    call        @IsClass
 004E4ACA    test        al,al
>004E4ACC    je          004E4B53
 004E4AD2    mov         edx,esi
 004E4AD4    lea         eax,[edx+4C]
 004E4AD7    mov         edi,dword ptr [eax+8]
 004E4ADA    mov         ecx,dword ptr [eax]
 004E4ADC    sub         edi,ecx
 004E4ADE    test        edi,edi
>004E4AE0    jle         004E4AFD
 004E4AE2    mov         ebp,dword ptr [edx+0C]
 004E4AE5    sub         ebp,ecx
 004E4AE7    mov         dword ptr [esp],ebp
 004E4AEA    fild        dword ptr [esp]
 004E4AED    mov         dword ptr [esp+4],edi
 004E4AF1    fild        dword ptr [esp+4]
 004E4AF5    fdivp       st(1),st
 004E4AF7    fstp        qword ptr [edx+28]
 004E4AFA    wait
>004E4AFB    jmp         004E4B05
 004E4AFD    xor         ecx,ecx
 004E4AFF    mov         dword ptr [edx+28],ecx
 004E4B02    mov         dword ptr [edx+2C],ecx
 004E4B05    mov         ecx,dword ptr [eax+0C]
 004E4B08    mov         edx,dword ptr [eax+4]
 004E4B0B    sub         ecx,edx
 004E4B0D    test        ecx,ecx
>004E4B0F    jle         004E4B2E
 004E4B11    mov         edi,esi
 004E4B13    mov         ebp,dword ptr [edi+10]
 004E4B16    sub         ebp,edx
 004E4B18    mov         dword ptr [esp],ebp
 004E4B1B    fild        dword ptr [esp]
 004E4B1E    mov         dword ptr [esp+4],ecx
 004E4B22    fild        dword ptr [esp+4]
 004E4B26    fdivp       st(1),st
 004E4B28    fstp        qword ptr [edi+30]
 004E4B2B    wait
>004E4B2C    jmp         004E4B36
 004E4B2E    xor         eax,eax
 004E4B30    mov         dword ptr [esi+30],eax
 004E4B33    mov         dword ptr [esi+34],eax
 004E4B36    test        bl,bl
>004E4B38    je          004E4B4A
 004E4B3A    mov         byte ptr ds:[7CA618],2;gvar_007CA618
 004E4B41    mov         eax,esi
 004E4B43    mov         edx,dword ptr [eax]
 004E4B45    call        dword ptr [edx+30]
>004E4B48    jmp         004E4B67
 004E4B4A    mov         byte ptr ds:[7CA618],0;gvar_007CA618
>004E4B51    jmp         004E4B67
 004E4B53    test        bl,bl
>004E4B55    je          004E4B60
 004E4B57    mov         byte ptr ds:[7CA618],1;gvar_007CA618
>004E4B5E    jmp         004E4B67
 004E4B60    mov         byte ptr ds:[7CA618],0;gvar_007CA618
 004E4B67    mov         eax,[007CA5FC];gvar_007CA5FC
 004E4B6C    mov         edx,dword ptr [eax]
 004E4B6E    call        dword ptr [edx+8]
 004E4B71    mov         [007CA61C],eax;gvar_007CA61C
 004E4B76    cmp         dword ptr ds:[7CA61C],0;gvar_007CA61C
>004E4B7D    je          004E4B9C
 004E4B7F    mov         eax,[007CA60C];gvar_007CA60C
 004E4B84    push        eax
 004E4B85    call        user32.GetDesktopWindow
 004E4B8A    mov         edx,eax
 004E4B8C    mov         ecx,dword ptr ds:[7CA608];gvar_007CA608
 004E4B92    mov         eax,[007CA61C];gvar_007CA61C
 004E4B97    call        TDragImageList.BeginDrag
 004E4B9C    mov         dl,1
 004E4B9E    mov         eax,[004E38C4];TSiteList
 004E4BA3    call        TObject.Create;TSiteList.Create
 004E4BA8    mov         [007CA624],eax;gvar_007CA624:TSiteList
 004E4BAD    cmp         byte ptr ds:[7CA618],0;gvar_007CA618
>004E4BB4    je          004E4BC0
 004E4BB6    mov         eax,7CA608;gvar_007CA608
 004E4BBB    call        004E4770
 004E4BC0    pop         ecx
 004E4BC1    pop         edx
 004E4BC2    pop         ebp
 004E4BC3    pop         edi
 004E4BC4    pop         esi
 004E4BC5    pop         ebx
 004E4BC6    ret
end;*}

//004E4BC8
{*procedure sub_004E4BC8(?:?; ?:?; ?:?);
begin
 004E4BC8    push        ebp
 004E4BC9    mov         ebp,esp
 004E4BCB    add         esp,0FFFFFFD8
 004E4BCE    push        ebx
 004E4BCF    push        esi
 004E4BD0    push        edi
 004E4BD1    mov         dword ptr [ebp-4],ecx
 004E4BD4    mov         ebx,edx
 004E4BD6    mov         edi,eax
 004E4BD8    mov         dword ptr ds:[7CA5F8],edi;gvar_007CA5F8
 004E4BDE    push        ebp
 004E4BDF    push        4E4D6B
 004E4BE4    push        dword ptr fs:[0]
 004E4BEB    mov         dword ptr fs:[0],esp
 004E4BF2    xor         eax,eax
 004E4BF4    mov         dword ptr [ebp-8],eax
 004E4BF7    mov         byte ptr ds:[7CA600],0;gvar_007CA600
 004E4BFE    cmp         byte ptr [edi+9B],0
>004E4C05    jne         004E4C52
 004E4C07    lea         edx,[ebp-8]
 004E4C0A    mov         eax,edi
 004E4C0C    mov         si,0FFDD
 004E4C10    call        @CallDynaInst
 004E4C15    cmp         dword ptr ds:[7CA5F8],0;gvar_007CA5F8
>004E4C1C    jne         004E4C2B
 004E4C1E    xor         eax,eax
 004E4C20    pop         edx
 004E4C21    pop         ecx
 004E4C22    pop         ecx
 004E4C23    mov         dword ptr fs:[eax],edx
>004E4C26    jmp         004E4D81
 004E4C2B    cmp         dword ptr [ebp-8],0
>004E4C2F    jne         004E4D54
 004E4C35    mov         ecx,edi
 004E4C37    mov         dl,1
 004E4C39    mov         eax,[004D8A88];TDragControlObjectEx
 004E4C3E    call        TBaseDragControlObject.Create;TDragControlObjectEx.Create
 004E4C43    mov         dword ptr [ebp-8],eax
 004E4C46    mov         byte ptr ds:[7CA600],1;gvar_007CA600
>004E4C4D    jmp         004E4D54
 004E4C52    lea         edx,[ebp-8]
 004E4C55    mov         eax,edi
 004E4C57    mov         si,0FFE4
 004E4C5B    call        @CallDynaInst
 004E4C60    cmp         dword ptr ds:[7CA5F8],0;gvar_007CA5F8
>004E4C67    jne         004E4C76
 004E4C69    xor         eax,eax
 004E4C6B    pop         edx
 004E4C6C    pop         ecx
 004E4C6D    pop         ecx
 004E4C6E    mov         dword ptr fs:[eax],edx
>004E4C71    jmp         004E4D81
 004E4C76    cmp         dword ptr [ebp-8],0
>004E4C7A    jne         004E4C94
 004E4C7C    mov         ecx,edi
 004E4C7E    mov         dl,1
 004E4C80    mov         eax,[004D8F20];TDragDockObjectEx
 004E4C85    call        TDragDockObject.Create;TDragDockObjectEx.Create
 004E4C8A    mov         dword ptr [ebp-8],eax
 004E4C8D    mov         byte ptr ds:[7CA600],1;gvar_007CA600
 004E4C94    mov         eax,dword ptr [ebp-8]
 004E4C97    mov         esi,dword ptr [eax+40];TDragDockObjectEx...........................FControl:TControl
 004E4C9A    mov         eax,esi
 004E4C9C    mov         edx,dword ptr ds:[4DE8CC];TWinControl
 004E4CA2    call        @IsClass
 004E4CA7    test        al,al
>004E4CA9    je          004E4CC4
 004E4CAB    mov         eax,dword ptr [ebp-8]
 004E4CAE    add         eax,4C;TDragDockObjectEx.FDockRect:TRect
 004E4CB1    push        eax
 004E4CB2    mov         eax,esi
 004E4CB4    call        TWinControl.GetHandle
 004E4CB9    push        eax
 004E4CBA    call        user32.GetWindowRect
>004E4CBF    jmp         004E4D47
 004E4CC4    mov         eax,dword ptr [ebp-8]
 004E4CC7    mov         esi,dword ptr [eax+40];TDragDockObjectEx............................FControl:TControl
 004E4CCA    cmp         dword ptr [esi+40],0;TControl.FParent:TWinControl
>004E4CCE    jne         004E4CFB
 004E4CD0    mov         eax,esi
 004E4CD2    mov         edx,dword ptr ds:[4DE8CC];TWinControl
 004E4CD8    call        @IsClass
 004E4CDD    test        al,al
>004E4CDF    jne         004E4CFB
 004E4CE1    lea         eax,[ebp-10]
 004E4CE4    push        eax
 004E4CE5    call        user32.GetCursorPos
 004E4CEA    mov         eax,dword ptr [ebp-8]
 004E4CED    mov         edx,dword ptr [ebp-10]
 004E4CF0    mov         dword ptr [eax+4C],edx;TDragDockObjectEx.FDockRect:TRect
 004E4CF3    mov         edx,dword ptr [ebp-0C]
 004E4CF6    mov         dword ptr [eax+50],edx;TDragDockObjectEx.FDockRect.Top:LongInt
>004E4CF9    jmp         004E4D21
 004E4CFB    xor         eax,eax
 004E4CFD    mov         dword ptr [ebp-18],eax
 004E4D00    xor         eax,eax
 004E4D02    mov         dword ptr [ebp-14],eax
 004E4D05    lea         ecx,[ebp-28]
 004E4D08    lea         edx,[ebp-18]
 004E4D0B    mov         eax,esi
 004E4D0D    call        TControl.ClientToScreen
 004E4D12    mov         eax,dword ptr [ebp-8]
 004E4D15    mov         edx,dword ptr [ebp-28]
 004E4D18    mov         dword ptr [eax+4C],edx;TDragDockObjectEx.FDockRect:TRect
 004E4D1B    mov         edx,dword ptr [ebp-24]
 004E4D1E    mov         dword ptr [eax+50],edx;TDragDockObjectEx.FDockRect.Top:LongInt
 004E4D21    mov         eax,dword ptr [ebp-8]
 004E4D24    mov         edx,dword ptr [eax+4C];TDragDockObjectEx.FDockRect:TRect
 004E4D27    mov         ecx,dword ptr [eax+40];TDragDockObjectEx.............................FControl:TControl
 004E4D2A    add         edx,dword ptr [ecx+58];TControl.FWidth:Integer
 004E4D2D    mov         esi,dword ptr [eax+50];TDragDockObjectEx.FDockRect.Top:LongInt
 004E4D30    add         esi,dword ptr [ecx+5C];TControl.FHeight:Integer
 004E4D33    mov         ecx,esi
 004E4D35    mov         dword ptr [ebp-20],edx
 004E4D38    mov         dword ptr [ebp-1C],ecx
 004E4D3B    mov         edx,dword ptr [ebp-20]
 004E4D3E    mov         dword ptr [eax+54],edx;TDragDockObjectEx.FDockRect.Right:LongInt
 004E4D41    mov         edx,dword ptr [ebp-1C]
 004E4D44    mov         dword ptr [eax+58],edx
 004E4D47    mov         eax,dword ptr [ebp-8]
 004E4D4A    lea         esi,[eax+4C];TDragDockObjectEx.FDockRect:TRect
 004E4D4D    lea         edi,[eax+64];TDragDockObjectEx.FEraseDockRect:TRect
 004E4D50    movs        dword ptr [edi],dword ptr [esi]
 004E4D51    movs        dword ptr [edi],dword ptr [esi]
 004E4D52    movs        dword ptr [edi],dword ptr [esi]
 004E4D53    movs        dword ptr [edi],dword ptr [esi]
 004E4D54    mov         ecx,dword ptr [ebp-4]
 004E4D57    mov         edx,ebx
 004E4D59    mov         eax,dword ptr [ebp-8]
 004E4D5C    call        004E4A60
 004E4D61    xor         eax,eax
 004E4D63    pop         edx
 004E4D64    pop         ecx
 004E4D65    pop         ecx
 004E4D66    mov         dword ptr fs:[eax],edx
>004E4D69    jmp         004E4D81
>004E4D6B    jmp         @HandleAnyException
 004E4D70    xor         eax,eax
 004E4D72    mov         [007CA5F8],eax;gvar_007CA5F8
 004E4D77    call        @RaiseAgain
 004E4D7C    call        @DoneExcept
 004E4D81    pop         edi
 004E4D82    pop         esi
 004E4D83    pop         ebx
 004E4D84    mov         esp,ebp
 004E4D86    pop         ebp
 004E4D87    ret
end;*}

//004E4D88
{*function sub_004E4D88(?:?):?;
begin
 004E4D88    push        ebp
 004E4D89    mov         ebp,esp
 004E4D8B    push        ebx
 004E4D8C    push        esi
 004E4D8D    mov         eax,[007CA5FC];gvar_007CA5FC
 004E4D92    cmp         dword ptr [eax+14],0
 004E4D96    setne       bl
 004E4D99    mov         eax,dword ptr [ebp+8]
 004E4D9C    cmp         byte ptr [eax-1],0
>004E4DA0    je          004E4DF5
 004E4DA2    cmp         byte ptr ds:[7CA618],2;gvar_007CA618
>004E4DA9    jne         004E4DF5
 004E4DAB    mov         eax,[007CA5F8];gvar_007CA5F8
 004E4DB0    mov         edx,dword ptr [eax]
 004E4DB2    call        dword ptr [edx+70]
 004E4DB5    test        al,al
>004E4DB7    jne         004E4DC7
 004E4DB9    mov         eax,[007CA5F8];gvar_007CA5F8
 004E4DBE    cmp         dword ptr [eax+0A0],0
>004E4DC5    jne         004E4DCB
 004E4DC7    mov         bl,1
>004E4DC9    jmp         004E4DF5
 004E4DCB    mov         eax,[007CA5F8];gvar_007CA5F8
 004E4DD0    mov         esi,dword ptr [eax+0A0]
 004E4DD6    test        esi,esi
>004E4DD8    je          004E4DF5
 004E4DDA    mov         eax,[007CA5FC];gvar_007CA5FC
 004E4DDF    mov         edx,dword ptr [eax+14]
 004E4DE2    mov         eax,esi
 004E4DE4    mov         ecx,dword ptr ds:[7CA5F8];gvar_007CA5F8
 004E4DEA    mov         si,0FFBB
 004E4DEE    call        @CallDynaInst
 004E4DF3    mov         ebx,eax
 004E4DF5    mov         eax,ebx
 004E4DF7    pop         esi
 004E4DF8    pop         ebx
 004E4DF9    pop         ebp
 004E4DFA    ret
end;*}

//004E4DFC
procedure DragDone(Drop:Boolean);
begin
{*
 004E4DFC    push        ebp
 004E4DFD    mov         ebp,esp
 004E4DFF    add         esp,0FFFFFFEC
 004E4E02    push        ebx
 004E4E03    mov         byte ptr [ebp-1],al
 004E4E06    xor         ebx,ebx
 004E4E08    mov         byte ptr [ebp-9],0
 004E4E0C    cmp         dword ptr ds:[7CA5FC],0;gvar_007CA5FC
>004E4E13    je          004E5118
 004E4E19    mov         eax,[007CA5FC];gvar_007CA5FC
 004E4E1E    cmp         byte ptr [eax+5],0
>004E4E22    jne         004E5118
 004E4E28    xor         edx,edx
 004E4E2A    push        ebp
 004E4E2B    push        4E5111
 004E4E30    push        dword ptr fs:[edx]
 004E4E33    mov         dword ptr fs:[edx],esp
 004E4E36    mov         eax,[007CA5FC];gvar_007CA5FC
 004E4E3B    mov         [007CA628],eax
 004E4E40    xor         edx,edx
 004E4E42    push        ebp
 004E4E43    push        4E509F
 004E4E48    push        dword ptr fs:[edx]
 004E4E4B    mov         dword ptr fs:[edx],esp
 004E4E4E    mov         eax,[007CA5FC];gvar_007CA5FC
 004E4E53    mov         byte ptr [eax+5],1
 004E4E57    mov         eax,[007CA5FC];gvar_007CA5FC
 004E4E5C    movzx       edx,byte ptr [ebp-1]
 004E4E60    mov         byte ptr [eax+20],dl
 004E4E63    mov         edx,dword ptr ds:[7CA604];gvar_007CA604:Windows.HWND
 004E4E69    mov         eax,[007CA5FC];gvar_007CA5FC
 004E4E6E    call        TDragObject.ReleaseCapture
 004E4E73    cmp         byte ptr ds:[7CA618],2;gvar_007CA618
>004E4E7A    jne         004E4E9F
 004E4E7C    mov         eax,[007CA5FC];gvar_007CA5FC
 004E4E81    mov         edx,dword ptr ds:[4D8B9C];TDragDockObject
 004E4E87    call        @AsClass
 004E4E8C    mov         ebx,eax
 004E4E8E    mov         eax,ebx
 004E4E90    mov         edx,dword ptr [eax]
 004E4E92    call        dword ptr [edx+34]
 004E4E95    cmp         dword ptr [ebx+14],0
 004E4E99    sete        al
 004E4E9C    mov         byte ptr [ebx+74],al
 004E4E9F    mov         eax,[007CA5FC];gvar_007CA5FC
 004E4EA4    cmp         dword ptr [eax+14],0
>004E4EA8    je          004E4ED4
 004E4EAA    mov         eax,[007CA5FC];gvar_007CA5FC
 004E4EAF    mov         eax,dword ptr [eax+14]
 004E4EB2    mov         edx,dword ptr ds:[4DC470];TControl
 004E4EB8    call        @IsClass
 004E4EBD    test        al,al
>004E4EBF    je          004E4ED4
 004E4EC1    mov         eax,[007CA5FC];gvar_007CA5FC
 004E4EC6    mov         edx,dword ptr [eax+18]
 004E4EC9    mov         dword ptr [ebp-14],edx
 004E4ECC    mov         edx,dword ptr [eax+1C]
 004E4ECF    mov         dword ptr [ebp-10],edx
>004E4ED2    jmp         004E4EE5
 004E4ED4    mov         eax,[007CA5FC];gvar_007CA5FC
 004E4ED9    mov         edx,dword ptr [eax+0C]
 004E4EDC    mov         dword ptr [ebp-14],edx
 004E4EDF    mov         edx,dword ptr [eax+10]
 004E4EE2    mov         dword ptr [ebp-10],edx
 004E4EE5    push        ebp
 004E4EE6    call        004E4D88
 004E4EEB    pop         ecx
 004E4EEC    test        al,al
>004E4EEE    je          004E4F19
 004E4EF0    cmp         byte ptr ds:[7CA618],2;gvar_007CA618
>004E4EF7    jne         004E4EFF
 004E4EF9    cmp         byte ptr [ebx+74],0
>004E4EFD    jne         004E4F13
 004E4EFF    cmp         byte ptr ds:[7CA618],0;gvar_007CA618
>004E4F06    je          004E4F19
 004E4F08    mov         al,1
 004E4F0A    call        DoDragOver
 004E4F0F    test        al,al
>004E4F11    je          004E4F19
 004E4F13    cmp         byte ptr [ebp-1],0
>004E4F17    jne         004E4F1D
 004E4F19    xor         eax,eax
>004E4F1B    jmp         004E4F1F
 004E4F1D    mov         al,1
 004E4F1F    mov         byte ptr [ebp-9],al
 004E4F22    cmp         byte ptr ds:[7CA618],2;gvar_007CA618
>004E4F29    jne         004E4F70
 004E4F2B    cmp         byte ptr [ebp-9],0
>004E4F2F    je          004E4F90
 004E4F31    cmp         byte ptr [ebx+74],0
>004E4F35    je          004E4F90
 004E4F37    mov         eax,dword ptr [ebx+40]
 004E4F3A    mov         dl,1
 004E4F3C    call        GetParentForm
 004E4F41    test        eax,eax
>004E4F43    je          004E4F57
 004E4F45    mov         edx,dword ptr [eax+2B4]
 004E4F4B    cmp         edx,dword ptr [ebx+40]
>004E4F4E    jne         004E4F57
 004E4F50    xor         edx,edx
 004E4F52    call        TCustomForm.SetActiveControl
 004E4F57    mov         eax,[007CA5FC];gvar_007CA5FC
 004E4F5C    push        eax
 004E4F5D    xor         ecx,ecx
 004E4F5F    mov         edx,0B03A
 004E4F64    mov         eax,[007CA5F8];gvar_007CA5F8
 004E4F69    call        TControl.Perform
>004E4F6E    jmp         004E4F90
 004E4F70    cmp         dword ptr ds:[7CA61C],0;gvar_007CA61C
>004E4F77    je          004E4F85
 004E4F79    mov         eax,[007CA61C];gvar_007CA61C
 004E4F7E    call        TDragImageList.EndDrag
>004E4F83    jmp         004E4F90
 004E4F85    mov         eax,[007CA610];gvar_007CA610:HICON
 004E4F8A    push        eax
 004E4F8B    call        user32.SetCursor
 004E4F90    xor         eax,eax
 004E4F92    mov         [007CA5F8],eax;gvar_007CA5F8
 004E4F97    xor         eax,eax
 004E4F99    mov         [007CA5FC],eax;gvar_007CA5FC
 004E4F9E    cmp         dword ptr ds:[7CA628],0
>004E4FA5    je          004E504A
 004E4FAB    mov         eax,[007CA628]
 004E4FB0    cmp         dword ptr [eax+14],0
>004E4FB4    je          004E504A
 004E4FBA    mov         al,3
 004E4FBC    cmp         byte ptr [ebp-9],0
>004E4FC0    jne         004E4FE4
 004E4FC2    mov         al,4
 004E4FC4    mov         edx,dword ptr ds:[7CA628]
 004E4FCA    xor         ecx,ecx
 004E4FCC    mov         dword ptr [edx+0C],ecx
 004E4FCF    mov         edx,dword ptr ds:[7CA628]
 004E4FD5    xor         ecx,ecx
 004E4FD7    mov         dword ptr [edx+10],ecx
 004E4FDA    xor         edx,edx
 004E4FDC    mov         dword ptr [ebp-14],edx
 004E4FDF    xor         edx,edx
 004E4FE1    mov         dword ptr [ebp-10],edx
 004E4FE4    mov         edx,dword ptr ds:[7CA628]
 004E4FEA    mov         dword ptr [ebp-8],edx
 004E4FED    xor         edx,edx
 004E4FEF    push        ebp
 004E4FF0    push        4E5043
 004E4FF5    push        dword ptr fs:[edx]
 004E4FF8    mov         dword ptr fs:[edx],esp
 004E4FFB    mov         edx,dword ptr ds:[7CA628]
 004E5001    mov         edx,dword ptr [edx+14]
 004E5004    push        edx
 004E5005    mov         edx,dword ptr ds:[7CA628]
 004E500B    add         edx,0C
 004E500E    push        edx
 004E500F    mov         edx,eax
 004E5011    mov         eax,[007CA628]
 004E5016    mov         eax,dword ptr [eax+8]
 004E5019    mov         ecx,dword ptr ds:[7CA628]
 004E501F    call        DragMessage
 004E5024    xor         eax,eax
 004E5026    pop         edx
 004E5027    pop         ecx
 004E5028    pop         ecx
 004E5029    mov         dword ptr fs:[eax],edx
 004E502C    push        4E504A
 004E5031    cmp         dword ptr ds:[7CA628],0
>004E5038    jne         004E5042
 004E503A    mov         eax,dword ptr [ebp-8]
 004E503D    mov         [007CA628],eax
 004E5042    ret
>004E5043    jmp         @HandleFinally
>004E5048    jmp         004E5031
 004E504A    xor         eax,eax
 004E504C    pop         edx
 004E504D    pop         ecx
 004E504E    pop         ecx
 004E504F    mov         dword ptr fs:[eax],edx
 004E5052    push        4E50A6
 004E5057    mov         eax,[007CA624];gvar_007CA624:TSiteList
 004E505C    call        TObject.Free
 004E5061    xor         eax,eax
 004E5063    mov         [007CA624],eax;gvar_007CA624:TSiteList
 004E5068    cmp         dword ptr ds:[7CA628],0
>004E506F    je          004E5097
 004E5071    mov         eax,[007CA628]
 004E5076    mov         byte ptr [eax+5],0
 004E507A    mov         eax,dword ptr [ebp-10]
 004E507D    push        eax
 004E507E    movzx       eax,byte ptr [ebp-9]
 004E5082    push        eax
 004E5083    mov         eax,[007CA628]
 004E5088    mov         edx,dword ptr [eax+14]
 004E508B    mov         ecx,dword ptr [ebp-14]
 004E508E    mov         eax,[007CA628]
 004E5093    mov         ebx,dword ptr [eax]
 004E5095    call        dword ptr [ebx]
 004E5097    xor         eax,eax
 004E5099    mov         [007CA5FC],eax;gvar_007CA5FC
 004E509E    ret
>004E509F    jmp         @HandleFinally
>004E50A4    jmp         004E5057
 004E50A6    xor         eax,eax
 004E50A8    pop         edx
 004E50A9    pop         ecx
 004E50AA    pop         ecx
 004E50AB    mov         dword ptr fs:[eax],edx
 004E50AE    push        4E5118
 004E50B3    xor         eax,eax
 004E50B5    mov         [007CA5F8],eax;gvar_007CA5F8
 004E50BA    cmp         dword ptr ds:[7CA628],0
>004E50C1    je          004E5109
 004E50C3    mov         eax,[007CA628]
 004E50C8    mov         edx,dword ptr ds:[4D8A88];TDragControlObjectEx
 004E50CE    call        @IsClass
 004E50D3    test        al,al
>004E50D5    jne         004E50FF
 004E50D7    mov         eax,[007CA628]
 004E50DC    mov         edx,dword ptr ds:[79EC18];TComparer<FXLicenseManagerFrm.TLicFile>.Compare:Integer
 004E50E2    call        @IsClass
 004E50E7    test        al,al
>004E50E9    jne         004E50FF
 004E50EB    mov         eax,[007CA628]
 004E50F0    mov         edx,dword ptr ds:[4D8F20];TDragDockObjectEx
 004E50F6    call        @IsClass
 004E50FB    test        al,al
>004E50FD    je          004E5109
 004E50FF    mov         eax,[007CA628]
 004E5104    call        TObject.Free
 004E5109    mov         byte ptr ds:[7CA618],0;gvar_007CA618
 004E5110    ret
>004E5111    jmp         @HandleFinally
>004E5116    jmp         004E50B3
 004E5118    pop         ebx
 004E5119    mov         esp,ebp
 004E511B    pop         ebp
 004E511C    ret
*}
end;

//004E5120
procedure CancelDrag;
begin
{*
 004E5120    cmp         dword ptr ds:[7CA5FC],0;gvar_007CA5FC
>004E5127    je          004E5130
 004E5129    xor         eax,eax
 004E512B    call        DragDone
 004E5130    xor         eax,eax
 004E5132    mov         [007CA5F8],eax;gvar_007CA5F8
 004E5137    ret
*}
end;

//004E5138
function FindVCLWindow(const Pos:Types.TPoint):TWinControl;
begin
{*
 004E5138    push        ebx
 004E5139    push        esi
 004E513A    push        dword ptr [eax+4]
 004E513D    push        dword ptr [eax]
 004E513F    call        user32.WindowFromPoint
 004E5144    mov         ebx,eax
 004E5146    xor         esi,esi
 004E5148    test        ebx,ebx
>004E514A    je          004E5165
 004E514C    mov         eax,ebx
 004E514E    call        FindControl
 004E5153    mov         esi,eax
 004E5155    test        esi,esi
>004E5157    jne         004E5165
 004E5159    push        ebx
 004E515A    call        user32.GetParent
 004E515F    mov         ebx,eax
 004E5161    test        ebx,ebx
>004E5163    jne         004E514C
 004E5165    mov         eax,esi
 004E5167    pop         esi
 004E5168    pop         ebx
 004E5169    ret
*}
end;

//004E516C
function FindDragTarget(const Pos:Types.TPoint; AllowDisabled:Boolean):TControl;
begin
{*
 004E516C    push        ebx
 004E516D    push        esi
 004E516E    push        edi
 004E516F    push        ebp
 004E5170    add         esp,0FFFFFFF8
 004E5173    mov         ebx,edx
 004E5175    mov         edi,eax
 004E5177    xor         esi,esi
 004E5179    mov         eax,edi
 004E517B    call        FindVCLWindow
 004E5180    mov         ebp,eax
 004E5182    test        ebp,ebp
>004E5184    je          004E51AC
 004E5186    mov         esi,ebp
 004E5188    push        0
 004E518A    push        0
 004E518C    lea         ecx,[esp+8]
 004E5190    mov         edx,edi
 004E5192    mov         eax,ebp
 004E5194    call        TControl.ScreenToClient
 004E5199    lea         edx,[esp+8]
 004E519D    mov         ecx,ebx
 004E519F    mov         eax,ebp
 004E51A1    call        TWinControl.ControlAtPos
 004E51A6    test        eax,eax
>004E51A8    je          004E51AC
 004E51AA    mov         esi,eax
 004E51AC    mov         eax,esi
 004E51AE    pop         ecx
 004E51AF    pop         edx
 004E51B0    pop         ebp
 004E51B1    pop         edi
 004E51B2    pop         esi
 004E51B3    pop         ebx
 004E51B4    ret
*}
end;

//004E51B8
procedure ListAdd(var List:Classes.TList; Item:Pointer);
begin
{*
 004E51B8    push        ebx
 004E51B9    push        esi
 004E51BA    mov         esi,edx
 004E51BC    mov         ebx,eax
 004E51BE    cmp         dword ptr [ebx],0
>004E51C1    jne         004E51D1
 004E51C3    mov         dl,1
 004E51C5    mov         eax,[0046C204];TList
 004E51CA    call        TObject.Create
 004E51CF    mov         dword ptr [ebx],eax
 004E51D1    mov         eax,dword ptr [ebx]
 004E51D3    mov         edx,esi
 004E51D5    call        TList.Add
 004E51DA    pop         esi
 004E51DB    pop         ebx
 004E51DC    ret
*}
end;

//004E51E0
{*procedure sub_004E51E0(?:?; ?:TControl);
begin
 004E51E0    push        ebx
 004E51E1    push        esi
 004E51E2    push        edi
 004E51E3    push        ebp
 004E51E4    mov         edi,edx
 004E51E6    mov         ebx,eax
 004E51E8    mov         eax,dword ptr [ebx]
 004E51EA    mov         esi,dword ptr [eax+8]
 004E51ED    test        esi,esi
>004E51EF    jle         004E5217
 004E51F1    mov         ebp,esi
 004E51F3    dec         ebp
 004E51F4    mov         edx,ebp
 004E51F6    mov         eax,dword ptr [ebx]
 004E51F8    call        TList.Get
 004E51FD    cmp         edi,eax
>004E51FF    jne         004E520C
 004E5201    mov         edx,ebp
 004E5203    mov         eax,dword ptr [ebx]
 004E5205    call        TList.Delete
>004E520A    jmp         004E5217
 004E520C    mov         eax,dword ptr [ebx]
 004E520E    xor         ecx,ecx
 004E5210    mov         edx,edi
 004E5212    call        TList.RemoveItem
 004E5217    mov         eax,dword ptr [ebx]
 004E5219    cmp         dword ptr [eax+8],0
>004E521D    jne         004E522A
 004E521F    mov         eax,dword ptr [ebx]
 004E5221    call        TObject.Free
 004E5226    xor         eax,eax
 004E5228    mov         dword ptr [ebx],eax
 004E522A    pop         ebp
 004E522B    pop         edi
 004E522C    pop         esi
 004E522D    pop         ebx
 004E522E    ret
end;*}

//004E5230
procedure MoveWindowOrg(DC:Windows.HDC; DX:Integer; DY:Integer);
begin
{*
 004E5230    push        ebx
 004E5231    push        esi
 004E5232    push        edi
 004E5233    add         esp,0FFFFFFF8
 004E5236    mov         edi,ecx
 004E5238    mov         esi,edx
 004E523A    mov         ebx,eax
 004E523C    push        esp
 004E523D    push        ebx
 004E523E    call        gdi32.GetWindowOrgEx
 004E5243    push        0
 004E5245    mov         eax,dword ptr [esp+8]
 004E5249    sub         eax,edi
 004E524B    push        eax
 004E524C    mov         eax,dword ptr [esp+8]
 004E5250    sub         eax,esi
 004E5252    push        eax
 004E5253    push        ebx
 004E5254    call        gdi32.SetWindowOrgEx
 004E5259    pop         ecx
 004E525A    pop         edx
 004E525B    pop         edi
 004E525C    pop         esi
 004E525D    pop         ebx
 004E525E    ret
*}
end;

//004E5260
procedure sub_004E5260;
begin
{*
 004E5260    push        ebp
 004E5261    mov         ebp,esp
 004E5263    add         esp,0FFFFFFF0
 004E5266    mov         eax,[007CA62C];gvar_007CA62C
 004E526B    call        TThreadList.LockList
 004E5270    mov         dword ptr [ebp-8],eax
 004E5273    xor         eax,eax
 004E5275    push        ebp
 004E5276    push        4E5313
 004E527B    push        dword ptr fs:[eax]
 004E527E    mov         dword ptr fs:[eax],esp
 004E5281    mov         eax,dword ptr [ebp-8]
 004E5284    mov         eax,dword ptr [eax+8];TList.FCount:Integer
 004E5287    dec         eax
 004E5288    test        eax,eax
>004E528A    jl          004E52F8
 004E528C    inc         eax
 004E528D    mov         dword ptr [ebp-0C],eax
 004E5290    mov         dword ptr [ebp-4],0
 004E5297    mov         edx,dword ptr [ebp-4]
 004E529A    mov         eax,dword ptr [ebp-8]
 004E529D    call        TList.Get
 004E52A2    mov         dword ptr [ebp-10],eax
 004E52A5    mov         eax,dword ptr [ebp-10]
 004E52A8    call        TCustomCanvas.TryLock
 004E52AD    test        al,al
>004E52AF    je          004E52F0
 004E52B1    xor         eax,eax
 004E52B3    push        ebp
 004E52B4    push        4E52E9
 004E52B9    push        dword ptr fs:[eax]
 004E52BC    mov         dword ptr fs:[eax],esp
 004E52BF    mov         eax,dword ptr [ebp-10]
 004E52C2    call        TControlCanvas.FreeHandle
 004E52C7    call        @TryFinallyExit
 004E52CC    call        @TryFinallyExit
>004E52D1    jmp         004E531A
 004E52D3    xor         eax,eax
 004E52D5    pop         edx
 004E52D6    pop         ecx
 004E52D7    pop         ecx
 004E52D8    mov         dword ptr fs:[eax],edx
 004E52DB    push        4E52F0
 004E52E0    mov         eax,dword ptr [ebp-10]
 004E52E3    call        TCustomCanvas.Unlock
 004E52E8    ret
>004E52E9    jmp         @HandleFinally
>004E52EE    jmp         004E52E0
 004E52F0    inc         dword ptr [ebp-4]
 004E52F3    dec         dword ptr [ebp-0C]
>004E52F6    jne         004E5297
 004E52F8    xor         eax,eax
 004E52FA    pop         edx
 004E52FB    pop         ecx
 004E52FC    pop         ecx
 004E52FD    mov         dword ptr fs:[eax],edx
 004E5300    push        4E531A
 004E5305    mov         eax,[007CA62C];gvar_007CA62C
 004E530A    mov         eax,dword ptr [eax+8]
 004E530D    call        TMonitor.Exit
 004E5312    ret
>004E5313    jmp         @HandleFinally
>004E5318    jmp         004E5305
 004E531A    mov         esp,ebp
 004E531C    pop         ebp
 004E531D    ret
*}
end;

//004E5320
procedure sub_004E5320;
begin
{*
 004E5320    push        ebp
 004E5321    mov         ebp,esp
 004E5323    add         esp,0FFFFFFF4
 004E5326    mov         eax,[007CA62C];gvar_007CA62C
 004E532B    call        TThreadList.LockList
 004E5330    mov         dword ptr [ebp-8],eax
 004E5333    xor         eax,eax
 004E5335    push        ebp
 004E5336    push        4E53C1
 004E533B    push        dword ptr fs:[eax]
 004E533E    mov         dword ptr fs:[eax],esp
 004E5341    mov         eax,dword ptr [ebp-8]
 004E5344    mov         eax,dword ptr [eax+8];TList.FCount:Integer
 004E5347    dec         eax
 004E5348    cmp         eax,0
>004E534B    jl          004E53A6
 004E534D    mov         dword ptr [ebp-4],eax
 004E5350    mov         edx,dword ptr [ebp-4]
 004E5353    mov         eax,dword ptr [ebp-8]
 004E5356    call        TList.Get
 004E535B    mov         dword ptr [ebp-0C],eax
 004E535E    mov         eax,dword ptr [ebp-0C]
 004E5361    call        TCustomCanvas.TryLock
 004E5366    test        al,al
>004E5368    je          004E539D
 004E536A    xor         eax,eax
 004E536C    push        ebp
 004E536D    push        4E5396
 004E5372    push        dword ptr fs:[eax]
 004E5375    mov         dword ptr fs:[eax],esp
 004E5378    mov         eax,dword ptr [ebp-0C]
 004E537B    call        TControlCanvas.FreeHandle
 004E5380    xor         eax,eax
 004E5382    pop         edx
 004E5383    pop         ecx
 004E5384    pop         ecx
 004E5385    mov         dword ptr fs:[eax],edx
 004E5388    push        4E539D
 004E538D    mov         eax,dword ptr [ebp-0C]
 004E5390    call        TCustomCanvas.Unlock
 004E5395    ret
>004E5396    jmp         @HandleFinally
>004E539B    jmp         004E538D
 004E539D    dec         dword ptr [ebp-4]
 004E53A0    cmp         dword ptr [ebp-4],0FFFFFFFF
>004E53A4    jne         004E5350
 004E53A6    xor         eax,eax
 004E53A8    pop         edx
 004E53A9    pop         ecx
 004E53AA    pop         ecx
 004E53AB    mov         dword ptr fs:[eax],edx
 004E53AE    push        4E53C8
 004E53B3    mov         eax,[007CA62C];gvar_007CA62C
 004E53B8    mov         eax,dword ptr [eax+8]
 004E53BB    call        TMonitor.Exit
 004E53C0    ret
>004E53C1    jmp         @HandleFinally
>004E53C6    jmp         004E53B3
 004E53C8    mov         esp,ebp
 004E53CA    pop         ebp
 004E53CB    ret
*}
end;

//004E53CC
destructor TControlCanvas.Destroy();
begin
{*
 004E53CC    push        ebx
 004E53CD    push        esi
 004E53CE    call        @BeforeDestruction
 004E53D3    mov         ebx,edx
 004E53D5    mov         esi,eax
 004E53D7    mov         eax,esi
 004E53D9    call        TControlCanvas.FreeHandle
 004E53DE    mov         dl,0FC
 004E53E0    and         dl,bl
 004E53E2    mov         eax,esi
 004E53E4    call        TCanvas.Destroy
 004E53E9    test        bl,bl
>004E53EB    jle         004E53F4
 004E53ED    mov         eax,esi
 004E53EF    call        @ClassDestroy
 004E53F4    pop         esi
 004E53F5    pop         ebx
 004E53F6    ret
*}
end;

//004E53F8
procedure sub_004E53F8;
begin
{*
 004E53F8    push        ebp
 004E53F9    mov         ebp,esp
 004E53FB    push        ecx
 004E53FC    push        ebx
 004E53FD    mov         dword ptr [ebp-4],eax
 004E5400    mov         eax,dword ptr [ebp-4]
 004E5403    cmp         dword ptr [eax+58],0;TControlCanvas.FControl:TControl
>004E5407    jne         004E5416
 004E5409    mov         eax,dword ptr [ebp-4]
 004E540C    call        004C5D80
>004E5411    jmp         004E54C6
 004E5416    mov         eax,dword ptr [ebp-4]
 004E5419    cmp         dword ptr [eax+5C],0;TControlCanvas.FDeviceContext:HDC
>004E541D    jne         004E543F
 004E541F    mov         eax,dword ptr [ebp-4]
 004E5422    mov         eax,dword ptr [eax+58];TControlCanvas.FControl:TControl
 004E5425    mov         edx,dword ptr ds:[4DE8CC];TWinControl
 004E542B    call        @IsClass
 004E5430    test        al,al
>004E5432    je          004E543F
 004E5434    mov         eax,dword ptr [ebp-4]
 004E5437    mov         eax,dword ptr [eax+58];TControlCanvas.FControl:TControl
 004E543A    call        TWinControl.HandleNeeded
 004E543F    mov         eax,dword ptr [ebp-4]
 004E5442    cmp         dword ptr [eax+5C],0;TControlCanvas.FDeviceContext:HDC
>004E5446    jne         004E54B0
 004E5448    mov         eax,[007CA62C];gvar_007CA62C
 004E544D    call        TThreadList.LockList
 004E5452    mov         ebx,eax
 004E5454    xor         eax,eax
 004E5456    push        ebp
 004E5457    push        4E54A9
 004E545C    push        dword ptr fs:[eax]
 004E545F    mov         dword ptr fs:[eax],esp
 004E5462    cmp         dword ptr [ebx+8],4;TList.FCount:Integer
>004E5466    jl          004E546D
 004E5468    call        004E5260
 004E546D    mov         eax,dword ptr [ebp-4]
 004E5470    lea         edx,[eax+60];TControlCanvas.FWindowHandle:HWND
 004E5473    mov         eax,dword ptr [ebp-4]
 004E5476    mov         eax,dword ptr [eax+58];TControlCanvas.FControl:TControl
 004E5479    mov         ecx,dword ptr [eax]
 004E547B    call        dword ptr [ecx+68];TControl.sub_004E72A8
 004E547E    mov         edx,dword ptr [ebp-4]
 004E5481    mov         dword ptr [edx+5C],eax;TControlCanvas.FDeviceContext:HDC
 004E5484    mov         edx,dword ptr [ebp-4]
 004E5487    mov         eax,ebx
 004E5489    call        TList.Add
 004E548E    xor         eax,eax
 004E5490    pop         edx
 004E5491    pop         ecx
 004E5492    pop         ecx
 004E5493    mov         dword ptr fs:[eax],edx
 004E5496    push        4E54B0
 004E549B    mov         eax,[007CA62C];gvar_007CA62C
 004E54A0    mov         eax,dword ptr [eax+8]
 004E54A3    call        TMonitor.Exit
 004E54A8    ret
>004E54A9    jmp         @HandleFinally
>004E54AE    jmp         004E549B
 004E54B0    mov         eax,dword ptr [ebp-4]
 004E54B3    mov         edx,dword ptr [eax+5C];TControlCanvas.FDeviceContext:HDC
 004E54B6    mov         eax,dword ptr [ebp-4]
 004E54B9    call        TCanvas.SetHandle
 004E54BE    mov         eax,dword ptr [ebp-4]
 004E54C1    call        TControlCanvas.UpdateTextFlags
 004E54C6    pop         ebx
 004E54C7    pop         ecx
 004E54C8    pop         ebp
 004E54C9    ret
*}
end;

//004E54CC
procedure TControlCanvas.FreeHandle;
begin
{*
 004E54CC    push        ebx
 004E54CD    mov         ebx,eax
 004E54CF    cmp         dword ptr [ebx+5C],0
>004E54D3    je          004E54FE
 004E54D5    xor         edx,edx
 004E54D7    mov         eax,ebx
 004E54D9    call        TCanvas.SetHandle
 004E54DE    mov         cl,1
 004E54E0    mov         edx,ebx
 004E54E2    mov         eax,[007CA62C];gvar_007CA62C
 004E54E7    call        TThreadList.RemoveItem
 004E54EC    mov         eax,dword ptr [ebx+5C]
 004E54EF    push        eax
 004E54F0    mov         eax,dword ptr [ebx+60]
 004E54F3    push        eax
 004E54F4    call        user32.ReleaseDC
 004E54F9    xor         eax,eax
 004E54FB    mov         dword ptr [ebx+5C],eax
 004E54FE    pop         ebx
 004E54FF    ret
*}
end;

//004E5500
procedure TControlCanvas.SetControl(AControl:TControl);
begin
{*
 004E5500    push        ebx
 004E5501    push        esi
 004E5502    mov         esi,edx
 004E5504    mov         ebx,eax
 004E5506    cmp         esi,dword ptr [ebx+58]
>004E5509    je          004E5515
 004E550B    mov         eax,ebx
 004E550D    call        TControlCanvas.FreeHandle
 004E5512    mov         dword ptr [ebx+58],esi
 004E5515    pop         esi
 004E5516    pop         ebx
 004E5517    ret
*}
end;

//004E5518
procedure TControlCanvas.UpdateTextFlags;
begin
{*
 004E5518    push        ebx
 004E5519    push        esi
 004E551A    mov         ebx,eax
 004E551C    mov         esi,dword ptr [ebx+58]
 004E551F    test        esi,esi
>004E5521    je          004E553E
 004E5523    mov         eax,esi
 004E5525    call        TControl.UseRightToLeftReading
 004E552A    test        al,al
>004E552C    je          004E5537
 004E552E    or          dword ptr [ebx+18],80
>004E5535    jmp         004E553E
 004E5537    and         dword ptr [ebx+18],0FFFFFF7F
 004E553E    pop         esi
 004E553F    pop         ebx
 004E5540    ret
*}
end;

//004E5544
constructor TSizeConstraints.Create;
begin
{*
 004E5544    push        ebx
 004E5545    push        esi
 004E5546    push        edi
 004E5547    test        dl,dl
>004E5549    je          004E5553
 004E554B    add         esp,0FFFFFFF0
 004E554E    call        @ClassCreate
 004E5553    mov         esi,ecx
 004E5555    mov         ebx,edx
 004E5557    mov         edi,eax
 004E5559    xor         edx,edx
 004E555B    mov         eax,edi
 004E555D    call        TObject.Create
 004E5562    mov         dword ptr [edi+4],esi
 004E5565    mov         eax,edi
 004E5567    test        bl,bl
>004E5569    je          004E557A
 004E556B    call        @AfterConstruction
 004E5570    pop         dword ptr fs:[0]
 004E5577    add         esp,0C
 004E557A    mov         eax,edi
 004E557C    pop         edi
 004E557D    pop         esi
 004E557E    pop         ebx
 004E557F    ret
*}
end;

//004E5580
procedure TSizeConstraints.AssignTo(Dest:Classes.TPersistent);
begin
{*
 004E5580    push        ebx
 004E5581    push        esi
 004E5582    mov         ebx,edx
 004E5584    mov         esi,eax
 004E5586    mov         eax,ebx
 004E5588    mov         edx,dword ptr ds:[4D9774];TSizeConstraints
 004E558E    call        @IsClass
 004E5593    test        al,al
>004E5595    je          004E55B9
 004E5597    mov         eax,ebx
 004E5599    mov         edx,dword ptr [esi+10]
 004E559C    mov         dword ptr [eax+10],edx
 004E559F    mov         edx,dword ptr [esi+8]
 004E55A2    mov         dword ptr [eax+8],edx
 004E55A5    mov         edx,dword ptr [esi+14]
 004E55A8    mov         dword ptr [eax+14],edx
 004E55AB    mov         edx,dword ptr [esi+0C]
 004E55AE    mov         dword ptr [eax+0C],edx
 004E55B1    mov         edx,dword ptr [eax]
 004E55B3    call        dword ptr [edx+0C]
 004E55B6    pop         esi
 004E55B7    pop         ebx
 004E55B8    ret
 004E55B9    mov         edx,ebx
 004E55BB    mov         eax,esi
 004E55BD    call        TPersistent.AssignTo
 004E55C2    pop         esi
 004E55C3    pop         ebx
 004E55C4    ret
*}
end;

//004E55C8
procedure TSizeConstraints.SetMaxHeight(Value:TConstraintSize; ?:Integer);
begin
{*
 004E55C8    sub         edx,1
>004E55CB    jb          004E55D7
>004E55CD    je          004E55F1
 004E55CF    dec         edx
>004E55D0    je          004E560B
 004E55D2    dec         edx
>004E55D3    je          004E5627
>004E55D5    jmp         004E5642
 004E55D7    cmp         ecx,dword ptr [eax+8];TSizeConstraints.FMaxHeight:TConstraintSize
>004E55DA    je          004E5642
 004E55DC    mov         dword ptr [eax+8],ecx;TSizeConstraints.FMaxHeight:TConstraintSize
 004E55DF    test        ecx,ecx
>004E55E1    jbe         004E55EB
 004E55E3    cmp         ecx,dword ptr [eax+10];TSizeConstraints.FMinHeight:TConstraintSize
>004E55E6    jae         004E55EB
 004E55E8    mov         dword ptr [eax+10],ecx;TSizeConstraints.FMinHeight:TConstraintSize
 004E55EB    mov         edx,dword ptr [eax]
 004E55ED    call        dword ptr [edx+0C];TMargins.Change
 004E55F0    ret
 004E55F1    cmp         ecx,dword ptr [eax+0C];TSizeConstraints.FMaxWidth:TConstraintSize
>004E55F4    je          004E5642
 004E55F6    mov         dword ptr [eax+0C],ecx;TSizeConstraints.FMaxWidth:TConstraintSize
 004E55F9    test        ecx,ecx
>004E55FB    jbe         004E5605
 004E55FD    cmp         ecx,dword ptr [eax+14];TSizeConstraints.FMinWidth:TConstraintSize
>004E5600    jae         004E5605
 004E5602    mov         dword ptr [eax+14],ecx;TSizeConstraints.FMinWidth:TConstraintSize
 004E5605    mov         edx,dword ptr [eax]
 004E5607    call        dword ptr [edx+0C];TMargins.Change
 004E560A    ret
 004E560B    cmp         ecx,dword ptr [eax+10];TSizeConstraints.FMinHeight:TConstraintSize
>004E560E    je          004E5642
 004E5610    mov         dword ptr [eax+10],ecx;TSizeConstraints.FMinHeight:TConstraintSize
 004E5613    mov         edx,dword ptr [eax+8];TSizeConstraints.FMaxHeight:TConstraintSize
 004E5616    test        edx,edx
>004E5618    jbe         004E5621
 004E561A    cmp         edx,ecx
>004E561C    jae         004E5621
 004E561E    mov         dword ptr [eax+8],ecx;TSizeConstraints.FMaxHeight:TConstraintSize
 004E5621    mov         edx,dword ptr [eax]
 004E5623    call        dword ptr [edx+0C];TMargins.Change
 004E5626    ret
 004E5627    cmp         ecx,dword ptr [eax+14];TSizeConstraints.FMinWidth:TConstraintSize
>004E562A    je          004E5642
 004E562C    mov         dword ptr [eax+14],ecx;TSizeConstraints.FMinWidth:TConstraintSize
 004E562F    mov         edx,dword ptr [eax+0C];TSizeConstraints.FMaxWidth:TConstraintSize
 004E5632    test        edx,edx
>004E5634    jbe         004E563D
 004E5636    cmp         edx,ecx
>004E5638    jae         004E563D
 004E563A    mov         dword ptr [eax+0C],ecx;TSizeConstraints.FMaxWidth:TConstraintSize
 004E563D    mov         edx,dword ptr [eax]
 004E563F    call        dword ptr [edx+0C];TMargins.Change
 004E5642    ret
*}
end;

//004E5644
procedure TMargins.Change;
begin
{*
 004E5644    push        ebx
 004E5645    cmp         word ptr [eax+1A],0
>004E564A    je          004E5656
 004E564C    mov         ebx,eax
 004E564E    mov         edx,eax
 004E5650    mov         eax,dword ptr [ebx+1C]
 004E5653    call        dword ptr [ebx+18]
 004E5656    pop         ebx
 004E5657    ret
*}
end;

//004E5658
procedure TControlActionLink.AssignClient(AClient:TObject);
begin
{*
 004E5658    push        ebx
 004E5659    push        esi
 004E565A    mov         esi,edx
 004E565C    mov         ebx,eax
 004E565E    mov         eax,esi
 004E5660    mov         edx,dword ptr ds:[4DC470];TControl
 004E5666    call        @AsClass
 004E566B    mov         dword ptr [ebx+18],eax
 004E566E    pop         esi
 004E566F    pop         ebx
 004E5670    ret
*}
end;

//004E5674
{*function sub_004E5674(?:?):?;
begin
 004E5674    push        ebp
 004E5675    mov         ebp,esp
 004E5677    add         esp,0FFFFFFE4
 004E567A    push        ebx
 004E567B    push        esi
 004E567C    push        edi
 004E567D    xor         ecx,ecx
 004E567F    mov         dword ptr [ebp-8],ecx
 004E5682    mov         dword ptr [ebp-1C],ecx
 004E5685    mov         edi,edx
 004E5687    mov         ebx,eax
 004E5689    xor         eax,eax
 004E568B    push        ebp
 004E568C    push        4E5744
 004E5691    push        dword ptr fs:[eax]
 004E5694    mov         dword ptr fs:[eax],esp
 004E5697    mov         byte ptr [ebp-1],1
 004E569B    mov         eax,dword ptr [ebx+10];TControlActionLink.FAction:TBasicAction
 004E569E    mov         edx,dword ptr ds:[4D55AC];TCustomAction
 004E56A4    call        @IsClass
 004E56A9    test        al,al
>004E56AB    je          004E5726
 004E56AD    mov         edx,edi
 004E56AF    mov         eax,dword ptr [ebx+10];TControlActionLink.FAction:TBasicAction
 004E56B2    mov         si,0FFEE
 004E56B6    call        @CallDynaInst
 004E56BB    test        al,al
>004E56BD    je          004E5726
 004E56BF    mov         eax,[007C4A18];^Application:TApplication
 004E56C4    mov         eax,dword ptr [eax]
 004E56C6    cmp         byte ptr [eax+90],0;TApplication.FHintShortCuts:Boolean
>004E56CD    je          004E5726
 004E56CF    mov         eax,dword ptr [ebx+10];TControlActionLink.FAction:TBasicAction
 004E56D2    cmp         word ptr [eax+8A],0
>004E56DA    je          004E5726
 004E56DC    cmp         dword ptr [edi],0
>004E56DF    je          004E5726
 004E56E1    lea         eax,[ebp-8]
 004E56E4    push        eax
 004E56E5    mov         eax,dword ptr [edi]
 004E56E7    mov         dword ptr [ebp-18],eax
 004E56EA    mov         byte ptr [ebp-14],11
 004E56EE    lea         edx,[ebp-1C]
 004E56F1    mov         eax,dword ptr [ebx+10];TControlActionLink.FAction:TBasicAction
 004E56F4    movzx       eax,word ptr [eax+8A]
 004E56FB    call        ShortCutToText
 004E5700    mov         eax,dword ptr [ebp-1C]
 004E5703    mov         dword ptr [ebp-10],eax
 004E5706    mov         byte ptr [ebp-0C],11
 004E570A    lea         edx,[ebp-18]
 004E570D    mov         ecx,1
 004E5712    mov         eax,4E5764;'%s (%s)'
 004E5717    call        Format
 004E571C    mov         edx,dword ptr [ebp-8]
 004E571F    mov         eax,edi
 004E5721    call        @UStrAsg
 004E5726    xor         eax,eax
 004E5728    pop         edx
 004E5729    pop         ecx
 004E572A    pop         ecx
 004E572B    mov         dword ptr fs:[eax],edx
 004E572E    push        4E574B
 004E5733    lea         eax,[ebp-1C]
 004E5736    call        @UStrClr
 004E573B    lea         eax,[ebp-8]
 004E573E    call        @UStrClr
 004E5743    ret
>004E5744    jmp         @HandleFinally
>004E5749    jmp         004E5733
 004E574B    movzx       eax,byte ptr [ebp-1]
 004E574F    pop         edi
 004E5750    pop         esi
 004E5751    pop         ebx
 004E5752    mov         esp,ebp
 004E5754    pop         ebp
 004E5755    ret
end;*}

//004E5774
{*function TControlActionLink.IsCaptionLinked:?;
begin
 004E5774    push        ebp
 004E5775    mov         ebp,esp
 004E5777    push        0
 004E5779    push        ebx
 004E577A    mov         ebx,eax
 004E577C    xor         eax,eax
 004E577E    push        ebp
 004E577F    push        4E57CE
 004E5784    push        dword ptr fs:[eax]
 004E5787    mov         dword ptr fs:[eax],esp
 004E578A    mov         eax,ebx
 004E578C    call        TContainedActionLink.IsCaptionLinked
 004E5791    test        al,al
>004E5793    je          004E57B0
 004E5795    lea         edx,[ebp-4]
 004E5798    mov         eax,dword ptr [ebx+18];TControlActionLink...............FClient:TControl
 004E579B    call        TControl.GetText
 004E57A0    mov         eax,dword ptr [ebp-4]
 004E57A3    mov         edx,dword ptr [ebx+10];TControlActionLink.FAction:TBasicAction
 004E57A6    mov         edx,dword ptr [edx+6C]
 004E57A9    call        @UStrEqual
>004E57AE    je          004E57B4
 004E57B0    xor         eax,eax
>004E57B2    jmp         004E57B6
 004E57B4    mov         al,1
 004E57B6    mov         ebx,eax
 004E57B8    xor         eax,eax
 004E57BA    pop         edx
 004E57BB    pop         ecx
 004E57BC    pop         ecx
 004E57BD    mov         dword ptr fs:[eax],edx
 004E57C0    push        4E57D5
 004E57C5    lea         eax,[ebp-4]
 004E57C8    call        @UStrClr
 004E57CD    ret
>004E57CE    jmp         @HandleFinally
>004E57D3    jmp         004E57C5
 004E57D5    mov         eax,ebx
 004E57D7    pop         ebx
 004E57D8    pop         ecx
 004E57D9    pop         ebp
 004E57DA    ret
end;*}

//004E57DC
function TControlActionLink.IsDropdownMenuLinked:Boolean;
begin
{*
 004E57DC    push        ebx
 004E57DD    mov         ebx,eax
 004E57DF    mov         eax,dword ptr [ebx+10]
 004E57E2    mov         edx,dword ptr ds:[79EC18];TComparer<FXLicenseManagerFrm.TLicFile>.Compare:Integer
 004E57E8    call        @IsClass
 004E57ED    pop         ebx
 004E57EE    ret
*}
end;

//004E57F0
{*function TControlActionLink.IsEnabledLinked:?;
begin
 004E57F0    push        ebx
 004E57F1    mov         ebx,eax
 004E57F3    mov         eax,ebx
 004E57F5    call        TContainedActionLink.IsEnabledLinked
 004E57FA    test        al,al
>004E57FC    je          004E580E
 004E57FE    mov         eax,dword ptr [ebx+18];TControlActionLink................FClient:TControl
 004E5801    mov         edx,dword ptr [eax]
 004E5803    call        dword ptr [edx+6C];TGroupBox.GetEnabled
 004E5806    mov         edx,dword ptr [ebx+10];TControlActionLink.FAction:TBasicAction
 004E5809    cmp         al,byte ptr [edx+71]
>004E580C    je          004E5812
 004E580E    xor         eax,eax
 004E5810    pop         ebx
 004E5811    ret
 004E5812    mov         al,1
 004E5814    pop         ebx
 004E5815    ret
end;*}

//004E5818
function TControlActionLink.IsEnableDropdownLinked:Boolean;
begin
{*
 004E5818    push        ebx
 004E5819    mov         ebx,eax
 004E581B    mov         eax,dword ptr [ebx+10]
 004E581E    mov         edx,dword ptr ds:[79EC18];TComparer<FXLicenseManagerFrm.TLicFile>.Compare:Integer
 004E5824    call        @IsClass
 004E5829    pop         ebx
 004E582A    ret
*}
end;

//004E582C
{*function TControlActionLink.IsHintLinked:?;
begin
 004E582C    push        ebx
 004E582D    mov         ebx,eax
 004E582F    mov         eax,ebx
 004E5831    call        TContainedActionLink.IsHintLinked
 004E5836    test        al,al
>004E5838    je          004E5853
 004E583A    mov         eax,dword ptr [ebx+18];TControlActionLink.................FClient:TControl
 004E583D    mov         eax,dword ptr [eax+90];TControl.FHint:string
 004E5843    mov         edx,dword ptr [ebx+10];TControlActionLink.FAction:TBasicAction
 004E5846    mov         edx,dword ptr [edx+84]
 004E584C    call        @UStrEqual
>004E5851    je          004E5857
 004E5853    xor         eax,eax
 004E5855    pop         ebx
 004E5856    ret
 004E5857    mov         al,1
 004E5859    pop         ebx
 004E585A    ret
end;*}

//004E585C
{*function sub_004E585C:?;
begin
 004E585C    push        ebx
 004E585D    push        esi
 004E585E    mov         ebx,eax
 004E5860    mov         esi,dword ptr [ebx+10];TControlActionLink.FAction:TBasicAction
 004E5863    mov         eax,esi
 004E5865    mov         edx,dword ptr ds:[79EC18];0x0 TComparer<FXLicenseManagerFrm.TLicFile>.Compare:Integer
 004E586B    call        @IsClass
 004E5870    test        al,al
>004E5872    je          004E5885
 004E5874    mov         eax,dword ptr [ebx+18];TControlActionLink..................FClient:TControl
 004E5877    mov         eax,dword ptr [eax+8C];TControl.FPopupMenu:TPopupMenu
 004E587D    cmp         eax,dword ptr [esi+0AC]
>004E5883    je          004E588A
 004E5885    xor         eax,eax
 004E5887    pop         esi
 004E5888    pop         ebx
 004E5889    ret
 004E588A    mov         al,1
 004E588C    pop         esi
 004E588D    pop         ebx
 004E588E    ret
end;*}

//004E5890
{*function TControlActionLink.IsStatusActionLinked:?;
begin
 004E5890    push        ebx
 004E5891    mov         ebx,eax
 004E5893    mov         eax,ebx
 004E5895    call        TContainedActionLink.IsStatusActionLinked
 004E589A    test        al,al
>004E589C    je          004E58B0
 004E589E    mov         eax,dword ptr [ebx+18];TControlActionLink...................FClient:TControl
 004E58A1    movzx       eax,byte ptr [eax+69];TControl.FVisible:Boolean
 004E58A5    mov         edx,dword ptr [ebx+10];TControlActionLink.FAction:TBasicAction
 004E58A8    cmp         al,byte ptr [edx+88]
>004E58AE    je          004E58B4
 004E58B0    xor         eax,eax
 004E58B2    pop         ebx
 004E58B3    ret
 004E58B4    mov         al,1
 004E58B6    pop         ebx
 004E58B7    ret
end;*}

//004E58B8
{*function sub_004E58B8:?;
begin
 004E58B8    push        ebx
 004E58B9    mov         ebx,eax
 004E58BB    mov         eax,ebx
 004E58BD    call        0049FCE8
 004E58C2    test        al,al
>004E58C4    je          004E58DC
 004E58C6    mov         eax,dword ptr [ebx+18];TControlActionLink....................FClient:TControl
 004E58C9    mov         eax,dword ptr [eax+120];TControl.FOnClick:TNotifyEvent
 004E58CF    mov         edx,dword ptr [ebx+10];TControlActionLink.FAction:TBasicAction
 004E58D2    mov         edx,dword ptr [edx+50];TBasicAction.FOnExecute:TNotifyEvent
 004E58D5    cmp         edx,eax
 004E58D7    sete        al
 004E58DA    pop         ebx
 004E58DB    ret
 004E58DC    xor         eax,eax
 004E58DE    pop         ebx
 004E58DF    ret
end;*}

//004E58E0
procedure TControlActionLink.SetCaption(const Value:UnicodeString);
begin
{*
 004E58E0    push        ebx
 004E58E1    push        esi
 004E58E2    mov         esi,edx
 004E58E4    mov         ebx,eax
 004E58E6    mov         eax,ebx
 004E58E8    mov         edx,dword ptr [eax]
 004E58EA    call        dword ptr [edx+24]
 004E58ED    test        al,al
>004E58EF    je          004E58FB
 004E58F1    mov         edx,esi
 004E58F3    mov         eax,dword ptr [ebx+18]
 004E58F6    call        TControl.SetText
 004E58FB    pop         esi
 004E58FC    pop         ebx
 004E58FD    ret
*}
end;

//004E5900
procedure sub_004E5900;
begin
{*
 004E5900    ret
*}
end;

//004E5904
{*procedure sub_004E5904(?:?);
begin
 004E5904    push        ebx
 004E5905    push        esi
 004E5906    mov         ebx,edx
 004E5908    mov         esi,eax
 004E590A    mov         eax,esi
 004E590C    mov         edx,dword ptr [eax]
 004E590E    call        dword ptr [edx+2C];TControlActionLink.IsEnabledLinked
 004E5911    test        al,al
>004E5913    je          004E5922
 004E5915    mov         edx,ebx
 004E5917    mov         eax,dword ptr [esi+18];TControlActionLink.....................FClient:TControl
 004E591A    mov         ecx,dword ptr [eax]
 004E591C    call        dword ptr [ecx+88];TGroupBox.SetEnabled
 004E5922    pop         esi
 004E5923    pop         ebx
 004E5924    ret
end;*}

//004E5928
procedure sub_004E5928;
begin
{*
 004E5928    ret
*}
end;

//004E592C
{*procedure sub_004E592C(?:?);
begin
 004E592C    push        ebx
 004E592D    push        esi
 004E592E    mov         esi,edx
 004E5930    mov         ebx,eax
 004E5932    mov         eax,ebx
 004E5934    mov         edx,dword ptr [eax]
 004E5936    call        dword ptr [edx+3C];TControlActionLink.IsHintLinked
 004E5939    test        al,al
>004E593B    je          004E594C
 004E593D    mov         eax,dword ptr [ebx+18];TControlActionLink......................FClient:TControl
 004E5940    add         eax,90;TControl.FHint:string
 004E5945    mov         edx,esi
 004E5947    call        @UStrAsg
 004E594C    pop         esi
 004E594D    pop         ebx
 004E594E    ret
end;*}

//004E5950
procedure TControlActionLink.SetVisible(Value:Boolean);
begin
{*
 004E5950    push        ebx
 004E5951    push        esi
 004E5952    mov         ebx,edx
 004E5954    mov         esi,eax
 004E5956    mov         eax,esi
 004E5958    mov         edx,dword ptr [eax]
 004E595A    call        dword ptr [edx+48]
 004E595D    test        al,al
>004E595F    je          004E596B
 004E5961    mov         edx,ebx
 004E5963    mov         eax,dword ptr [esi+18]
 004E5966    call        TControl.SetVisible
 004E596B    pop         esi
 004E596C    pop         ebx
 004E596D    ret
*}
end;

//004E5970
{*procedure sub_004E5970(?:?; ?:?);
begin
 004E5970    push        ebp
 004E5971    mov         ebp,esp
 004E5973    push        ebx
 004E5974    mov         ebx,eax
 004E5976    mov         eax,ebx
 004E5978    mov         edx,dword ptr [eax]
 004E597A    call        dword ptr [edx+8];TControlActionLink.sub_004E58B8
 004E597D    test        al,al
>004E597F    je          004E5996
 004E5981    mov         eax,dword ptr [ebx+18];TControlActionLink.......................FClient:TControl
 004E5984    mov         edx,dword ptr [ebp+8]
 004E5987    mov         dword ptr [eax+120],edx;TControl.FOnClick:TNotifyEvent
 004E598D    mov         edx,dword ptr [ebp+0C]
 004E5990    mov         dword ptr [eax+124],edx;TControl.?f124:TMessageForm
 004E5996    pop         ebx
 004E5997    pop         ebp
 004E5998    ret         8
end;*}

//004E599C
{*function TControlActionLink.IsHelpLinked:?;
begin
 004E599C    push        ebx
 004E599D    mov         ebx,eax
 004E599F    mov         eax,ebx
 004E59A1    call        TContainedActionLink.IsHelpLinked
 004E59A6    test        al,al
>004E59A8    je          004E59E6
 004E59AA    mov         eax,dword ptr [ebx+18];TControlActionLink........................FClient:TControl
 004E59AD    mov         eax,dword ptr [eax+178];TControl.FHelpContext:THelpContext
 004E59B3    mov         edx,dword ptr [ebx+10];TControlActionLink.FAction:TBasicAction
 004E59B6    cmp         eax,dword ptr [edx+78]
>004E59B9    jne         004E59E6
 004E59BB    mov         eax,dword ptr [ebx+18];TControlActionLink.........................FClient:TControl
 004E59BE    mov         eax,dword ptr [eax+174];TControl.FHelpKeyword:string
 004E59C4    mov         edx,dword ptr [ebx+10];TControlActionLink.FAction:TBasicAction
 004E59C7    mov         edx,dword ptr [edx+7C]
 004E59CA    call        @UStrEqual
>004E59CF    jne         004E59E6
 004E59D1    mov         eax,dword ptr [ebx+18];TControlActionLink..........................FClient:TControl
 004E59D4    movzx       eax,byte ptr [eax+170];TControl.FHelpType:THelpType
 004E59DB    mov         edx,dword ptr [ebx+10];TControlActionLink.FAction:TBasicAction
 004E59DE    cmp         al,byte ptr [edx+80]
>004E59E4    je          004E59EA
 004E59E6    xor         eax,eax
 004E59E8    pop         ebx
 004E59E9    ret
 004E59EA    mov         al,1
 004E59EC    pop         ebx
 004E59ED    ret
end;*}

//004E59F0
procedure TControlActionLink.SetHelpContext(Value:Classes.THelpContext);
begin
{*
 004E59F0    push        ebx
 004E59F1    push        esi
 004E59F2    mov         esi,edx
 004E59F4    mov         ebx,eax
 004E59F6    mov         eax,ebx
 004E59F8    mov         edx,dword ptr [eax]
 004E59FA    call        dword ptr [edx+38]
 004E59FD    test        al,al
>004E59FF    je          004E5A0B
 004E5A01    mov         edx,esi
 004E5A03    mov         eax,dword ptr [ebx+18]
 004E5A06    call        TControl.SetHelpContext
 004E5A0B    pop         esi
 004E5A0C    pop         ebx
 004E5A0D    ret
*}
end;

//004E5A10
procedure TControlActionLink.SetHelpKeyword(const Value:UnicodeString);
begin
{*
 004E5A10    push        ebx
 004E5A11    push        esi
 004E5A12    mov         esi,edx
 004E5A14    mov         ebx,eax
 004E5A16    mov         eax,ebx
 004E5A18    mov         edx,dword ptr [eax]
 004E5A1A    call        dword ptr [edx+38]
 004E5A1D    test        al,al
>004E5A1F    je          004E5A2B
 004E5A21    mov         edx,esi
 004E5A23    mov         eax,dword ptr [ebx+18]
 004E5A26    call        TControl.SetHelpKeyword
 004E5A2B    pop         esi
 004E5A2C    pop         ebx
 004E5A2D    ret
*}
end;

//004E5A30
{*procedure sub_004E5A30(?:?);
begin
 004E5A30    push        ebx
 004E5A31    push        esi
 004E5A32    mov         ebx,edx
 004E5A34    mov         esi,eax
 004E5A36    mov         eax,esi
 004E5A38    mov         edx,dword ptr [eax]
 004E5A3A    call        dword ptr [edx+38];TControlActionLink.IsHelpLinked
 004E5A3D    test        al,al
>004E5A3F    je          004E5A4A
 004E5A41    mov         eax,dword ptr [esi+18];TControlActionLink...........................FClient:TControl
 004E5A44    mov         byte ptr [eax+170],bl;TControl.FHelpType:THelpType
 004E5A4A    pop         esi
 004E5A4B    pop         ebx
 004E5A4C    ret
end;*}

//004E5A50
procedure TControlActionLink.SetPopupMenu(Value:Menus.TPopupMenu);
begin
{*
 004E5A50    push        ebx
 004E5A51    push        esi
 004E5A52    mov         esi,edx
 004E5A54    mov         ebx,eax
 004E5A56    mov         eax,ebx
 004E5A58    mov         edx,dword ptr [eax]
 004E5A5A    call        dword ptr [edx+8C]
 004E5A60    test        al,al
>004E5A62    je          004E5A6E
 004E5A64    mov         edx,esi
 004E5A66    mov         eax,dword ptr [ebx+18]
 004E5A69    call        TControl.SetPopupMenu
 004E5A6E    pop         esi
 004E5A6F    pop         ebx
 004E5A70    ret
*}
end;

//004E5A74
constructor TControl.Create;
begin
{*
 004E5A74    push        ebp
 004E5A75    mov         ebp,esp
 004E5A77    push        ecx
 004E5A78    push        ebx
 004E5A79    push        esi
 004E5A7A    test        dl,dl
>004E5A7C    je          004E5A86
 004E5A7E    add         esp,0FFFFFFF0
 004E5A81    call        @ClassCreate
 004E5A86    mov         byte ptr [ebp-1],dl
 004E5A89    mov         ebx,eax
 004E5A8B    xor         edx,edx
 004E5A8D    mov         eax,ebx
 004E5A8F    call        TComponent.Create
 004E5A94    mov         dword ptr [ebx+4C],ebx
 004E5A97    mov         eax,dword ptr [ebx]
 004E5A99    mov         eax,dword ptr [eax+98]
 004E5A9F    mov         dword ptr [ebx+48],eax
 004E5AA2    mov         eax,[004E5BC4]
 004E5AA7    mov         dword ptr [ebx+60],eax
 004E5AAA    mov         dl,1
 004E5AAC    mov         eax,[004BDD74];TFont
 004E5AB1    call        TFont.Create
 004E5AB6    mov         esi,eax
 004E5AB8    mov         dword ptr [ebx+74],esi
 004E5ABB    mov         dword ptr [esi+0C],ebx
 004E5ABE    mov         dword ptr [esi+8],4E6FC0;sub_004E6FC0
 004E5AC5    movzx       eax,byte ptr ds:[4E5BC8]
 004E5ACC    mov         byte ptr [ebx+73],al
 004E5ACF    mov         ecx,ebx
 004E5AD1    mov         dl,1
 004E5AD3    mov         eax,[004D9774];TSizeConstraints
 004E5AD8    call        TSizeConstraints.Create
 004E5ADD    mov         esi,eax
 004E5ADF    mov         dword ptr [ebx+80],esi
 004E5AE5    mov         dword ptr [esi+1C],ebx
 004E5AE8    mov         dword ptr [esi+18],4E8094;sub_004E8094
 004E5AEF    mov         ecx,ebx
 004E5AF1    mov         dl,1
 004E5AF3    mov         eax,[004D99E8];TMargins
 004E5AF8    call        TMargins.Create
 004E5AFD    mov         esi,eax
 004E5AFF    mov         dword ptr [ebx+84],esi
 004E5B05    mov         dword ptr [esi+1C],ebx
 004E5B08    mov         dword ptr [esi+18],4E9F84;sub_004E9F84
 004E5B0F    mov         dword ptr [ebx+7C],0FF000005
 004E5B16    mov         byte ptr [ebx+69],1
 004E5B1A    mov         byte ptr [ebx+6A],1
 004E5B1E    mov         byte ptr [ebx+6B],1
 004E5B22    mov         byte ptr [ebx+6C],1
 004E5B26    mov         byte ptr [ebx+9A],1
 004E5B2D    mov         byte ptr [ebx+72],1
 004E5B31    mov         byte ptr [ebx+70],0
 004E5B35    mov         word ptr [ebx+8A],0FFF4
 004E5B3E    mov         eax,[005B9BD0];TCustomDockForm
 004E5B43    mov         dword ptr [ebx+0B8],eax
 004E5B49    mov         byte ptr [ebx+170],1
 004E5B50    xor         eax,eax
 004E5B52    mov         dword ptr [ebx+184],eax
 004E5B58    xor         eax,eax
 004E5B5A    mov         dword ptr [ebx+17C],eax
 004E5B60    mov         byte ptr [ebx+180],1
 004E5B67    mov         eax,ebx
 004E5B69    mov         edx,dword ptr [eax]
 004E5B6B    call        dword ptr [edx+50]
 004E5B6E    mov         eax,dword ptr [ebx+0BC]
 004E5B74    movzx       edx,byte ptr ds:[4E5BCC]
 004E5B7B    mov         byte ptr [eax+10],dl
 004E5B7E    movzx       edx,byte ptr ds:[4E5BCC]
 004E5B85    mov         byte ptr [eax+11],dl
 004E5B88    mov         byte ptr [eax+18],1
 004E5B8C    movzx       edx,word ptr ds:[4E5BD0]
 004E5B93    mov         word ptr [eax+1E],dx
 004E5B97    movzx       eax,byte ptr ds:[4E5BD4]
 004E5B9E    mov         byte ptr [ebx+188],al
 004E5BA4    mov         eax,ebx
 004E5BA6    cmp         byte ptr [ebp-1],0
>004E5BAA    je          004E5BBB
 004E5BAC    call        @AfterConstruction
 004E5BB1    pop         dword ptr fs:[0]
 004E5BB8    add         esp,0C
 004E5BBB    mov         eax,ebx
 004E5BBD    pop         esi
 004E5BBE    pop         ebx
 004E5BBF    pop         ecx
 004E5BC0    pop         ebp
 004E5BC1    ret
*}
end;

//004E5BD8
destructor TControl.Destroy();
begin
{*
 004E5BD8    push        ebx
 004E5BD9    push        esi
 004E5BDA    push        edi
 004E5BDB    add         esp,0FFFFFFDC
 004E5BDE    call        @BeforeDestruction
 004E5BE3    mov         ebx,edx
 004E5BE5    mov         edi,eax
 004E5BE7    mov         eax,[007C4A18];^Application:TApplication
 004E5BEC    mov         eax,dword ptr [eax]
 004E5BEE    mov         edx,edi
 004E5BF0    call        TApplication.ControlDestroyed
 004E5BF5    mov         eax,dword ptr [edi+0A0];TControl.FHostDockSite:TWinControl
 004E5BFB    test        eax,eax
>004E5BFD    je          004E5C4C
 004E5BFF    mov         edx,edi
 004E5C01    call        TComponent.RemoveFreeNotification
 004E5C06    push        edi
 004E5C07    mov         eax,dword ptr [edi+0A0];TControl.FHostDockSite:TWinControl
 004E5C0D    xor         ecx,ecx
 004E5C0F    mov         edx,0B039
 004E5C14    call        TControl.Perform
 004E5C19    xor         edx,edx
 004E5C1B    mov         eax,edi
 004E5C1D    mov         ecx,dword ptr [eax]
 004E5C1F    call        dword ptr [ecx+8C];TControl.sub_004E6DA4
 004E5C25    lea         edx,[esp+14]
 004E5C29    mov         eax,edi
 004E5C2B    call        TControl.GetBoundsRect
 004E5C30    lea         ecx,[esp+14]
 004E5C34    or          edx,0FFFFFFFF
 004E5C37    mov         eax,edi
 004E5C39    mov         si,0FFCB
 004E5C3D    call        @CallDynaInst;TControl.sub_004E6558
 004E5C42    xor         eax,eax
 004E5C44    mov         dword ptr [edi+0A0],eax;TControl.FHostDockSite:TWinControl
>004E5C4A    jmp         004E5C58
 004E5C4C    xor         edx,edx
 004E5C4E    mov         eax,edi
 004E5C50    mov         ecx,dword ptr [eax]
 004E5C52    call        dword ptr [ecx+8C];TControl.sub_004E6DA4
 004E5C58    lea         eax,[edi+78];TControl.FActionLink:TControlActionLink
 004E5C5B    mov         dword ptr [esp],eax
 004E5C5E    mov         eax,dword ptr [esp]
 004E5C61    mov         eax,dword ptr [eax]
 004E5C63    mov         edx,dword ptr [esp]
 004E5C66    xor         ecx,ecx
 004E5C68    mov         dword ptr [edx],ecx
 004E5C6A    call        TObject.Free
 004E5C6F    lea         eax,[edi+80];TControl.FConstraints:TSizeConstraints
 004E5C75    mov         dword ptr [esp+4],eax
 004E5C79    mov         eax,dword ptr [esp+4]
 004E5C7D    mov         eax,dword ptr [eax]
 004E5C7F    mov         edx,dword ptr [esp+4]
 004E5C83    xor         ecx,ecx
 004E5C85    mov         dword ptr [edx],ecx
 004E5C87    call        TObject.Free
 004E5C8C    lea         eax,[edi+74];TControl.FFont:TFont
 004E5C8F    mov         dword ptr [esp+8],eax
 004E5C93    mov         eax,dword ptr [esp+8]
 004E5C97    mov         eax,dword ptr [eax]
 004E5C99    mov         edx,dword ptr [esp+8]
 004E5C9D    xor         ecx,ecx
 004E5C9F    mov         dword ptr [edx],ecx
 004E5CA1    call        TObject.Free
 004E5CA6    mov         eax,dword ptr [edi+184];TControl.FText:PWideChar
 004E5CAC    call        0041F4FC
 004E5CB1    lea         eax,[edi+84];TControl.FMargins:TMargins
 004E5CB7    mov         dword ptr [esp+0C],eax
 004E5CBB    mov         eax,dword ptr [esp+0C]
 004E5CBF    mov         eax,dword ptr [eax]
 004E5CC1    mov         edx,dword ptr [esp+0C]
 004E5CC5    xor         ecx,ecx
 004E5CC7    mov         dword ptr [edx],ecx
 004E5CC9    call        TObject.Free
 004E5CCE    xor         eax,eax
 004E5CD0    mov         dword ptr [edi+17C],eax;TControl.FCustomHint:TCustomHint
 004E5CD6    lea         eax,[edi+0BC];TControl.FTouchManager:TTouchManager
 004E5CDC    mov         dword ptr [esp+10],eax
 004E5CE0    mov         eax,dword ptr [esp+10]
 004E5CE4    mov         eax,dword ptr [eax]
 004E5CE6    mov         edx,dword ptr [esp+10]
 004E5CEA    xor         ecx,ecx
 004E5CEC    mov         dword ptr [edx],ecx
 004E5CEE    call        TObject.Free
 004E5CF3    mov         dl,0FC
 004E5CF5    and         dl,bl
 004E5CF7    mov         eax,edi
 004E5CF9    call        TComponent.Destroy
 004E5CFE    test        bl,bl
>004E5D00    jle         004E5D09
 004E5D02    mov         eax,edi
 004E5D04    call        @ClassDestroy
 004E5D09    add         esp,24
 004E5D0C    pop         edi
 004E5D0D    pop         esi
 004E5D0E    pop         ebx
 004E5D0F    ret
*}
end;

//004E5D10
{*function sub_004E5D10:?;
begin
 004E5D10    xor         eax,eax
 004E5D12    ret
end;*}

//004E5D14
function TGroupBox.GetEnabled:Boolean;
begin
{*
 004E5D14    movzx       eax,byte ptr [eax+6A];TGroupBox.FEnabled:Boolean
 004E5D18    ret
*}
end;

//004E5D1C
procedure TControl.sub_004E5D1C;
begin
{*
 004E5D1C    xor         eax,eax
 004E5D1E    ret
*}
end;

//004E5D20
procedure TControl.HasParent;
begin
{*
 004E5D20    cmp         dword ptr [eax+40],0;TControl.FParent:TWinControl
 004E5D24    setne       al
 004E5D27    ret
*}
end;

//004E5D28
procedure TControl.GetParentComponent;
begin
{*
 004E5D28    mov         eax,dword ptr [eax+40];TControl.FParent:TWinControl
 004E5D2B    ret
*}
end;

//004E5D2C
procedure TControl.SetParentComponent(Value:TComponent);
begin
{*
 004E5D2C    push        ebx
 004E5D2D    push        esi
 004E5D2E    mov         esi,edx
 004E5D30    mov         ebx,eax
 004E5D32    cmp         esi,dword ptr [ebx+40];TControl.FParent:TWinControl
>004E5D35    je          004E5D54
 004E5D37    mov         eax,esi
 004E5D39    mov         edx,dword ptr ds:[4DE8CC];TWinControl
 004E5D3F    call        @IsClass
 004E5D44    test        al,al
>004E5D46    je          004E5D54
 004E5D48    mov         edx,esi
 004E5D4A    mov         eax,ebx
 004E5D4C    mov         ecx,dword ptr [eax]
 004E5D4E    call        dword ptr [ecx+8C];TControl.sub_004E6DA4
 004E5D54    pop         esi
 004E5D55    pop         ebx
 004E5D56    ret
*}
end;

//004E5D58
{*procedure TControl.sub_004E5D58(?:?);
begin
 004E5D58    push        esi
 004E5D59    push        edi
 004E5D5A    push        ebp
 004E5D5B    add         esp,0FFFFFFF8
 004E5D5E    mov         byte ptr [esp],dl
 004E5D61    mov         edi,eax
 004E5D63    mov         byte ptr [esp+1],0
 004E5D68    cmp         byte ptr [edi+69],0;TControl.FVisible:Boolean
>004E5D6C    je          004E5DCD
 004E5D6E    mov         eax,edi
 004E5D70    mov         si,0FFD8
 004E5D74    call        @CallDynaInst;TControl.sub_004E5D1C
 004E5D79    mov         ebp,eax
 004E5D7B    test        ebp,ebp
>004E5D7D    je          004E5DCD
 004E5D7F    lea         edx,[esp+4]
 004E5D83    mov         eax,edi
 004E5D85    mov         ecx,dword ptr [eax]
 004E5D87    call        dword ptr [ecx+68];TControl.sub_004E72A8
 004E5D8A    mov         esi,eax
 004E5D8C    movzx       eax,byte ptr [esp]
 004E5D90    xor         al,1
 004E5D92    neg         al
 004E5D94    sbb         eax,eax
 004E5D96    push        eax
 004E5D97    push        ebp
 004E5D98    push        esi
 004E5D99    call        gdi32.SelectPalette
 004E5D9E    mov         ebp,eax
 004E5DA0    push        esi
 004E5DA1    call        gdi32.RealizePalette
 004E5DA6    test        eax,eax
>004E5DA8    je          004E5DB4
 004E5DAA    mov         eax,edi
 004E5DAC    mov         edx,dword ptr [eax]
 004E5DAE    call        dword ptr [edx+0A8];TControl.Invalidate
 004E5DB4    push        0FF
 004E5DB6    push        ebp
 004E5DB7    push        esi
 004E5DB8    call        gdi32.SelectPalette
 004E5DBD    push        esi
 004E5DBE    mov         eax,dword ptr [esp+8]
 004E5DC2    push        eax
 004E5DC3    call        user32.ReleaseDC
 004E5DC8    mov         byte ptr [esp+1],1
 004E5DCD    movzx       eax,byte ptr [esp+1]
 004E5DD2    pop         ecx
 004E5DD3    pop         edx
 004E5DD4    pop         ebp
 004E5DD5    pop         edi
 004E5DD6    pop         esi
 004E5DD7    ret
end;*}

//004E5DD8
function TButton.GetAction:TBasicAction;
begin
{*
 004E5DD8    mov         edx,dword ptr [eax+78];TButton.FActionLink:TControlActionLink
 004E5DDB    test        edx,edx
>004E5DDD    je          004E5DE3
 004E5DDF    mov         eax,dword ptr [edx+10];TControlActionLink.FAction:TBasicAction
 004E5DE2    ret
 004E5DE3    xor         eax,eax
 004E5DE5    ret
*}
end;

//004E5DE8
procedure TGroupBox.SetAnchors(Value:TAnchors);
begin
{*
 004E5DE8    push        ebx
 004E5DE9    push        esi
 004E5DEA    push        ecx
 004E5DEB    mov         byte ptr [esp],dl
 004E5DEE    mov         esi,eax
 004E5DF0    movzx       eax,byte ptr [esp]
 004E5DF4    cmp         al,byte ptr [esi+73];TGroupBox.FAnchors:TAnchors
>004E5DF7    je          004E5E7E
 004E5DFD    movzx       ebx,byte ptr [esi+73];TGroupBox.FAnchors:TAnchors
 004E5E01    movzx       eax,byte ptr [esp]
 004E5E05    mov         byte ptr [esi+73],al;TGroupBox.FAnchors:TAnchors
 004E5E08    test        byte ptr [esi+1C],1;TGroupBox.FComponentState:TComponentState
>004E5E0C    jne         004E5E7E
 004E5E0E    movzx       eax,byte ptr ds:[4E5E84];0x3 gvar_004E5E84
 004E5E15    cmp         al,bl
>004E5E17    je          004E5E77
 004E5E19    movzx       eax,byte ptr ds:[4E5E84];0x3 gvar_004E5E84
 004E5E20    cmp         al,byte ptr [esi+73];TGroupBox.FAnchors:TAnchors
>004E5E23    jne         004E5E77
 004E5E25    mov         eax,dword ptr [esi+1A4];TGroupBox.FExplicitLeft:Integer
 004E5E2B    cmp         eax,dword ptr [esi+50];TGroupBox.FLeft:Integer
>004E5E2E    jne         004E5E51
 004E5E30    mov         eax,dword ptr [esi+1A8];TGroupBox.FExplicitTop:Integer
 004E5E36    cmp         eax,dword ptr [esi+54];TGroupBox.FTop:Integer
>004E5E39    jne         004E5E51
 004E5E3B    mov         eax,dword ptr [esi+1AC];TGroupBox.FExplicitWidth:Integer
 004E5E41    cmp         eax,dword ptr [esi+58];TGroupBox.FWidth:Integer
>004E5E44    jne         004E5E51
 004E5E46    mov         eax,dword ptr [esi+1B0];TGroupBox.FExplicitHeight:Integer
 004E5E4C    cmp         eax,dword ptr [esi+5C];TGroupBox.FHeight:Integer
>004E5E4F    je          004E5E77
 004E5E51    mov         eax,dword ptr [esi+1AC];TGroupBox.FExplicitWidth:Integer
 004E5E57    push        eax
 004E5E58    mov         eax,dword ptr [esi+1B0];TGroupBox.FExplicitHeight:Integer
 004E5E5E    push        eax
 004E5E5F    mov         ecx,dword ptr [esi+1A8];TGroupBox.FExplicitTop:Integer
 004E5E65    mov         edx,dword ptr [esi+1A4];TGroupBox.FExplicitLeft:Integer
 004E5E6B    mov         eax,esi
 004E5E6D    mov         ebx,dword ptr [eax]
 004E5E6F    call        dword ptr [ebx+0B0];TWinControl.SetBounds
>004E5E75    jmp         004E5E7E
 004E5E77    mov         eax,esi
 004E5E79    call        004E62D0
 004E5E7E    pop         edx
 004E5E7F    pop         esi
 004E5E80    pop         ebx
 004E5E81    ret
*}
end;

//004E5E88
procedure TButton.SetAction(Value:TBasicAction);
begin
{*
 004E5E88    push        ebx
 004E5E89    push        esi
 004E5E8A    push        edi
 004E5E8B    mov         edi,edx
 004E5E8D    mov         ebx,eax
 004E5E8F    test        edi,edi
>004E5E91    jne         004E5EA9
 004E5E93    mov         eax,dword ptr [ebx+78];TButton.FActionLink:TControlActionLink
 004E5E96    call        TObject.Free
 004E5E9B    xor         eax,eax
 004E5E9D    mov         dword ptr [ebx+78],eax;TButton.FActionLink:TControlActionLink
 004E5EA0    and         dword ptr [ebx+60],0FFFF7FFF;TButton.FControlStyle:TControlStyle
>004E5EA7    jmp         004E5EFF
 004E5EA9    or          dword ptr [ebx+60],8000;TButton.FControlStyle:TControlStyle
 004E5EB0    cmp         dword ptr [ebx+78],0;TButton.FActionLink:TControlActionLink
>004E5EB4    jne         004E5ECB
 004E5EB6    mov         eax,ebx
 004E5EB8    mov         si,0FFDA
 004E5EBC    call        @CallDynaInst;TCustomButton.sub_004E9934
 004E5EC1    mov         ecx,ebx
 004E5EC3    mov         dl,1
 004E5EC5    call        dword ptr [eax+14]
 004E5EC8    mov         dword ptr [ebx+78],eax;TButton.FActionLink:TControlActionLink
 004E5ECB    mov         edx,edi
 004E5ECD    mov         eax,dword ptr [ebx+78];TButton.FActionLink:TControlActionLink
 004E5ED0    mov         ecx,dword ptr [eax]
 004E5ED2    call        dword ptr [ecx+0C];TBasicActionLink.SetAction
 004E5ED5    mov         eax,dword ptr [ebx+78];TButton.FActionLink:TControlActionLink
 004E5ED8    mov         dword ptr [eax+0C],ebx;TControlActionLink.?fC:TButton
 004E5EDB    mov         dword ptr [eax+8],4E9910;TControlActionLink.FOnChange:TNotifyEvent sub_004E9910
 004E5EE2    test        byte ptr [edi+1C],1;TBasicAction.FComponentState:TComponentState
 004E5EE6    setne       cl
 004E5EE9    mov         edx,edi
 004E5EEB    mov         eax,ebx
 004E5EED    mov         si,0FFEF
 004E5EF1    call        @CallDynaInst;TCustomButton.sub_004E980C
 004E5EF6    mov         edx,ebx
 004E5EF8    mov         eax,edi
 004E5EFA    call        TComponent.FreeNotification
 004E5EFF    pop         edi
 004E5F00    pop         esi
 004E5F01    pop         ebx
 004E5F02    ret
*}
end;

//004E5F04
function TGroupBox.IsStoredAnchors(Value:TAnchors):Boolean;
begin
{*
 004E5F04    push        ebx
 004E5F05    mov         ebx,eax
 004E5F07    movzx       eax,byte ptr [ebx+6D];TGroupBox.FAlign:TAlign
 004E5F0B    movzx       eax,byte ptr [eax+7A11AC]
 004E5F12    cmp         al,byte ptr [ebx+73];TGroupBox.FAnchors:TAnchors
 004E5F15    setne       al
 004E5F18    pop         ebx
 004E5F19    ret
*}
end;

//004E5F1C
{*procedure TControl.sub_004E5F1C(?:?);
begin
 004E5F1C    push        ebx
 004E5F1D    mov         ebx,eax
 004E5F1F    mov         al,1
 004E5F21    sub         dl,1
>004E5F24    jb          004E5F32
>004E5F26    je          004E5F47
 004E5F28    dec         dl
>004E5F2A    je          004E5F5C
 004E5F2C    dec         dl
>004E5F2E    je          004E5F6A
>004E5F30    jmp         004E5F76
 004E5F32    mov         eax,dword ptr [ebx+0BC];TControl.FTouchManager:TTouchManager
 004E5F38    movzx       edx,byte ptr ds:[4E5F78];0x10 gvar_004E5F78
 004E5F3F    cmp         dl,byte ptr [eax+10];TTouchManager.FInteractiveGestures:TInteractiveGestures
 004E5F42    setne       al
 004E5F45    pop         ebx
 004E5F46    ret
 004E5F47    mov         eax,dword ptr [ebx+0BC];TControl.FTouchManager:TTouchManager
 004E5F4D    movzx       edx,byte ptr ds:[4E5F78];0x10 gvar_004E5F78
 004E5F54    cmp         dl,byte ptr [eax+11];TTouchManager.FInteractiveGestureOptions:TInteractiveGestureOptions
 004E5F57    setne       al
 004E5F5A    pop         ebx
 004E5F5B    ret
 004E5F5C    mov         eax,dword ptr [ebx+0BC];TControl.FTouchManager:TTouchManager
 004E5F62    movzx       eax,byte ptr [eax+18];TTouchManager.FParentTabletOptions:Boolean
 004E5F66    xor         al,1
 004E5F68    pop         ebx
 004E5F69    ret
 004E5F6A    mov         eax,dword ptr [ebx+0BC];TControl.FTouchManager:TTouchManager
 004E5F70    movzx       eax,byte ptr [eax+18];TTouchManager.FParentTabletOptions:Boolean
 004E5F74    xor         al,1
 004E5F76    pop         ebx
 004E5F77    ret
end;*}

//004E5F7C
procedure TControl.SetDesignVisible(Value:Boolean);
begin
{*
 004E5F7C    push        ebx
 004E5F7D    mov         ebx,eax
 004E5F7F    test        byte ptr [ebx+1C],10;TControl.FComponentState:TComponentState
>004E5F83    je          004E5FB1
 004E5F85    test        byte ptr [ebx+65],8;TControl.FAlign:TAlign
 004E5F89    setne       al
 004E5F8C    xor         al,1
 004E5F8E    cmp         dl,al
>004E5F90    je          004E5FB1
 004E5F92    test        dl,dl
>004E5F94    jne         004E5F9F
 004E5F96    or          dword ptr [ebx+64],800;TControl.FControlState:TControlState
>004E5F9D    jmp         004E5FA6
 004E5F9F    and         dword ptr [ebx+64],0FFFFF7FF;TControl.FControlState:TControlState
 004E5FA6    xor         ecx,ecx
 004E5FA8    mov         dl,1
 004E5FAA    mov         eax,ebx
 004E5FAC    call        004E73DC
 004E5FB1    pop         ebx
 004E5FB2    ret
*}
end;

//004E5FB4
procedure TGroupBox.SetDragMode(Value:TDragMode);
begin
{*
 004E5FB4    mov         byte ptr [eax+6F],dl;TGroupBox.FDragMode:TDragMode
 004E5FB7    ret
*}
end;

//004E5FB8
procedure sub_004E5FB8;
begin
{*
 004E5FB8    mov         edx,dword ptr [eax+40];TControl.FParent:TWinControl
 004E5FBB    test        edx,edx
>004E5FBD    je          004E5FC5
 004E5FBF    xchg        eax,edx
 004E5FC0    call        TWinControl.AlignControl
 004E5FC5    ret
*}
end;

//004E5FC8
{*function TGroupBox.GetDragMode:?;
begin
 004E5FC8    movzx       eax,byte ptr [eax+6F];TGroupBox.FDragMode:TDragMode
 004E5FCC    ret
end;*}

//004E5FD0
procedure TControl.sub_004E5FD0;
begin
{*
 004E5FD0    push        ebx
 004E5FD1    cmp         word ptr [eax+0FA],0;TControl.?fFA:word
>004E5FD9    je          004E5FEB
 004E5FDB    mov         ebx,eax
 004E5FDD    mov         edx,eax
 004E5FDF    mov         eax,dword ptr [ebx+0FC];TControl.?fFC:dword
 004E5FE5    call        dword ptr [ebx+0F8];TControl.FOnResize
 004E5FEB    pop         ebx
 004E5FEC    ret
*}
end;

//004E5FF0
procedure TControl.ReadState(Reader:TReader);
begin
{*
 004E5FF0    push        ebx
 004E5FF1    push        esi
 004E5FF2    push        edi
 004E5FF3    mov         esi,edx
 004E5FF5    mov         ebx,eax
 004E5FF7    or          dword ptr [ebx+64],8;TControl.FControlState:TControlState
 004E5FFB    mov         edi,dword ptr [esi+2C];TReader.FParent:TComponent
 004E5FFE    mov         eax,edi
 004E6000    mov         edx,dword ptr ds:[4DE8CC];TWinControl
 004E6006    call        @IsClass
 004E600B    test        al,al
>004E600D    je          004E601B
 004E600F    mov         edx,edi
 004E6011    mov         eax,ebx
 004E6013    mov         ecx,dword ptr [eax]
 004E6015    call        dword ptr [ecx+8C];TControl.sub_004E6DA4
 004E601B    mov         edx,esi
 004E601D    mov         eax,ebx
 004E601F    call        TComponent.ReadState
 004E6024    and         dword ptr [ebx+64],0FFFFFFF7;TControl.FControlState:TControlState
 004E6028    cmp         dword ptr [ebx+40],0;TControl.FParent:TWinControl
>004E602C    je          004E609E
 004E602E    push        0
 004E6030    xor         ecx,ecx
 004E6032    mov         edx,0B009
 004E6037    mov         eax,ebx
 004E6039    call        TControl.Perform
 004E603E    push        0
 004E6040    xor         ecx,ecx
 004E6042    mov         edx,0B008
 004E6047    mov         eax,ebx
 004E6049    call        TControl.Perform
 004E604E    push        0
 004E6050    xor         ecx,ecx
 004E6052    mov         edx,0B023
 004E6057    mov         eax,ebx
 004E6059    call        TControl.Perform
 004E605E    push        0
 004E6060    xor         ecx,ecx
 004E6062    mov         edx,0B035
 004E6067    mov         eax,ebx
 004E6069    call        TControl.Perform
 004E606E    push        0
 004E6070    xor         ecx,ecx
 004E6072    mov         edx,0B03D
 004E6077    mov         eax,ebx
 004E6079    call        TControl.Perform
 004E607E    push        0
 004E6080    xor         ecx,ecx
 004E6082    mov         edx,0B050
 004E6087    mov         eax,ebx
 004E6089    call        TControl.Perform
 004E608E    push        0
 004E6090    xor         ecx,ecx
 004E6092    mov         edx,0B058
 004E6097    mov         eax,ebx
 004E6099    call        TControl.Perform
 004E609E    pop         edi
 004E609F    pop         esi
 004E60A0    pop         ebx
 004E60A1    ret
*}
end;

//004E60A4
procedure TControl.Notification(AComponent:TComponent; Operation:TOperation);
begin
{*
 004E60A4    push        ebx
 004E60A5    push        esi
 004E60A6    push        edi
 004E60A7    mov         ebx,ecx
 004E60A9    mov         edi,edx
 004E60AB    mov         esi,eax
 004E60AD    mov         ecx,ebx
 004E60AF    mov         edx,edi
 004E60B1    mov         eax,esi
 004E60B3    call        TComponent.Notification
 004E60B8    cmp         bl,1
>004E60BB    jne         004E611E
 004E60BD    cmp         edi,dword ptr [esi+8C];TControl.FPopupMenu:TPopupMenu
>004E60C3    jne         004E60D0
 004E60C5    xor         edx,edx
 004E60C7    mov         eax,esi
 004E60C9    call        TControl.SetPopupMenu
>004E60CE    jmp         004E611E
 004E60D0    mov         eax,esi
 004E60D2    mov         edx,dword ptr [eax]
 004E60D4    call        dword ptr [edx+5C];TButton.GetAction
 004E60D7    cmp         edi,eax
>004E60D9    jne         004E60E6
 004E60DB    xor         edx,edx
 004E60DD    mov         eax,esi
 004E60DF    call        TButton.SetAction
>004E60E4    jmp         004E611E
 004E60E6    cmp         edi,dword ptr [esi+0A0];TControl.FHostDockSite:TWinControl
>004E60EC    jne         004E60F8
 004E60EE    xor         eax,eax
 004E60F0    mov         dword ptr [esi+0A0],eax;TControl.FHostDockSite:TWinControl
>004E60F6    jmp         004E611E
 004E60F8    cmp         edi,dword ptr [esi+17C];TControl.FCustomHint:TCustomHint
>004E60FE    jne         004E610A
 004E6100    xor         eax,eax
 004E6102    mov         dword ptr [esi+17C],eax;TControl.FCustomHint:TCustomHint
>004E6108    jmp         004E611E
 004E610A    mov         eax,dword ptr [esi+0BC];TControl.FTouchManager:TTouchManager
 004E6110    test        eax,eax
>004E6112    je          004E611E
 004E6114    cmp         edi,dword ptr [eax+0C];TTouchManager.FGestureManager:TCustomGestureManager
>004E6117    jne         004E611E
 004E6119    xor         edx,edx
 004E611B    mov         dword ptr [eax+0C],edx;TTouchManager.FGestureManager:TCustomGestureManager
 004E611E    pop         edi
 004E611F    pop         esi
 004E6120    pop         ebx
 004E6121    ret
*}
end;

//004E6124
procedure TGroupBox.SetAlign(Value:TAlign);
begin
{*
 004E6124    push        ebx
 004E6125    push        esi
 004E6126    push        edi
 004E6127    push        ecx
 004E6128    mov         ebx,edx
 004E612A    mov         edi,eax
 004E612C    movzx       eax,byte ptr [edi+6D];TGroupBox.FAlign:TAlign
 004E6130    cmp         bl,al
>004E6132    je          004E6200
 004E6138    mov         byte ptr [esp],al
 004E613B    mov         byte ptr [edi+6D],bl;TGroupBox.FAlign:TAlign
 004E613E    movzx       eax,bl
 004E6141    movzx       edx,byte ptr [eax+7A11AC]
 004E6148    mov         eax,edi
 004E614A    call        TGroupBox.SetAnchors
 004E614F    test        byte ptr [edi+1C],1;TGroupBox.FComponentState:TComponentState
>004E6153    jne         004E6200
 004E6159    test        byte ptr [edi+1C],10;TGroupBox.FComponentState:TComponentState
>004E615D    je          004E6169
 004E615F    cmp         dword ptr [edi+40],0;TGroupBox.FParent:TWinControl
>004E6163    je          004E6200
 004E6169    cmp         bl,6
>004E616C    je          004E6200
 004E6172    cmp         byte ptr [esp],6
>004E6176    je          004E6200
 004E617C    movzx       eax,byte ptr [esp]
 004E6180    dec         eax
 004E6181    sub         al,2
 004E6183    setb        al
 004E6186    mov         edx,ebx
 004E6188    add         dl,0FD
 004E618B    sub         dl,2
 004E618E    setb        dl
 004E6191    cmp         al,dl
>004E6193    jne         004E61C5
 004E6195    movzx       eax,byte ptr [esp]
 004E6199    test        al,al
>004E619B    je          004E61C5
 004E619D    sub         al,5
>004E619F    je          004E61C5
 004E61A1    mov         eax,ebx
 004E61A3    test        al,al
>004E61A5    je          004E61C5
 004E61A7    sub         al,5
>004E61A9    je          004E61C5
 004E61AB    mov         eax,dword ptr [edi+5C];TGroupBox.FHeight:Integer
 004E61AE    push        eax
 004E61AF    mov         eax,dword ptr [edi+58];TGroupBox.FWidth:Integer
 004E61B2    push        eax
 004E61B3    mov         ecx,dword ptr [edi+54];TGroupBox.FTop:Integer
 004E61B6    mov         edx,dword ptr [edi+50];TGroupBox.FLeft:Integer
 004E61B9    mov         eax,edi
 004E61BB    mov         ebx,dword ptr [eax]
 004E61BD    call        dword ptr [ebx+0B0];TWinControl.SetBounds
>004E61C3    jmp         004E6200
 004E61C5    cmp         byte ptr [esp],0
>004E61C9    je          004E61F5
 004E61CB    test        bl,bl
>004E61CD    jne         004E61F5
 004E61CF    mov         eax,dword ptr [edi+1AC];TGroupBox.FExplicitWidth:Integer
 004E61D5    push        eax
 004E61D6    mov         eax,dword ptr [edi+1B0];TGroupBox.FExplicitHeight:Integer
 004E61DC    push        eax
 004E61DD    mov         ecx,dword ptr [edi+1A8];TGroupBox.FExplicitTop:Integer
 004E61E3    mov         edx,dword ptr [edi+1A4];TGroupBox.FExplicitLeft:Integer
 004E61E9    mov         eax,edi
 004E61EB    mov         ebx,dword ptr [eax]
 004E61ED    call        dword ptr [ebx+0B0];TWinControl.SetBounds
>004E61F3    jmp         004E6200
 004E61F5    mov         eax,edi
 004E61F7    mov         si,0FFEE
 004E61FB    call        @CallDynaInst;TWinControl.sub_004E9C04
 004E6200    mov         eax,edi
 004E6202    mov         edx,dword ptr [eax]
 004E6204    call        dword ptr [edx+78];TGroupBox.sub_004EE248
 004E6207    pop         edx
 004E6208    pop         edi
 004E6209    pop         esi
 004E620A    pop         ebx
 004E620B    ret
*}
end;

//004E620C
procedure TControl.SetBounds(ALeft:Integer; ATop:Integer; AHeight:Integer; AWidth:Integer);
begin
{*
 004E620C    push        ebp
 004E620D    mov         ebp,esp
 004E620F    push        ebx
 004E6210    push        esi
 004E6211    push        edi
 004E6212    mov         edi,ecx
 004E6214    mov         ebx,edx
 004E6216    mov         esi,eax
 004E6218    lea         ecx,[ebp+8]
 004E621B    lea         edx,[ebp+0C]
 004E621E    mov         eax,esi
 004E6220    call        TControl.CheckNewSize
 004E6225    test        al,al
>004E6227    je          004E62A2
 004E6229    cmp         ebx,dword ptr [esi+50];TControl.FLeft:Integer
>004E622C    jne         004E6243
 004E622E    cmp         edi,dword ptr [esi+54];TControl.FTop:Integer
>004E6231    jne         004E6243
 004E6233    mov         eax,dword ptr [ebp+0C]
 004E6236    cmp         eax,dword ptr [esi+58];TControl.FWidth:Integer
>004E6239    jne         004E6243
 004E623B    mov         eax,dword ptr [ebp+8]
 004E623E    cmp         eax,dword ptr [esi+5C];TControl.FHeight:Integer
>004E6241    je          004E62A2
 004E6243    xor         ecx,ecx
 004E6245    movzx       edx,byte ptr [esi+69];TControl.FVisible:Boolean
 004E6249    mov         eax,esi
 004E624B    call        004E73DC
 004E6250    mov         dword ptr [esi+50],ebx;TControl.FLeft:Integer
 004E6253    mov         dword ptr [esi+54],edi;TControl.FTop:Integer
 004E6256    mov         eax,dword ptr [ebp+0C]
 004E6259    mov         dword ptr [esi+58],eax;TControl.FWidth:Integer
 004E625C    mov         eax,dword ptr [ebp+8]
 004E625F    mov         dword ptr [esi+5C],eax;TControl.FHeight:Integer
 004E6262    mov         eax,esi
 004E6264    call        004E62D0
 004E6269    mov         eax,esi
 004E626B    call        004EA028
 004E6270    mov         eax,esi
 004E6272    mov         edx,dword ptr [eax]
 004E6274    call        dword ptr [edx+0A8];TControl.Invalidate
 004E627A    push        0
 004E627C    xor         ecx,ecx
 004E627E    mov         edx,47
 004E6283    mov         eax,esi
 004E6285    call        TControl.Perform
 004E628A    mov         eax,esi
 004E628C    mov         edx,dword ptr [eax]
 004E628E    call        dword ptr [edx+78];TControl.sub_004E5FB8
 004E6291    test        byte ptr [esi+1C],1;TControl.FComponentState:TComponentState
>004E6295    jne         004E62A2
 004E6297    mov         eax,esi
 004E6299    mov         si,0FFCF
 004E629D    call        @CallDynaInst;TControl.sub_004E5FD0
 004E62A2    pop         edi
 004E62A3    pop         esi
 004E62A4    pop         ebx
 004E62A5    pop         ebp
 004E62A6    ret         8
*}
end;

//004E62AC
procedure TControl.SetTextBuf(Buffer:PWideChar);
begin
{*
 004E62AC    push        ebx
 004E62AD    mov         ebx,eax
 004E62AF    push        edx
 004E62B0    xor         ecx,ecx
 004E62B2    mov         eax,ebx
 004E62B4    mov         edx,0C
 004E62B9    call        TControl.Perform
 004E62BE    push        0
 004E62C0    xor         ecx,ecx
 004E62C2    mov         edx,0B012
 004E62C7    mov         eax,ebx
 004E62C9    call        TControl.Perform
 004E62CE    pop         ebx
 004E62CF    ret
*}
end;

//004E62D0
procedure sub_004E62D0(?:TControl);
begin
{*
 004E62D0    push        ebx
 004E62D1    push        esi
 004E62D2    push        edi
 004E62D3    push        ebp
 004E62D4    add         esp,0FFFFFFF8
 004E62D7    mov         esi,eax
 004E62D9    cmp         byte ptr [esi+189],0;TControl.FAnchorMove:Boolean
>004E62E0    jne         004E646A
 004E62E6    test        byte ptr [esi+1C],1;TControl.FComponentState:TComponentState
>004E62EA    jne         004E646A
 004E62F0    movzx       ebx,byte ptr [esi+73];TControl.FAnchors:TAnchors
 004E62F4    xor         edx,edx
 004E62F6    mov         eax,dword ptr [esi+84];TControl.FMargins:TMargins
 004E62FC    mov         ecx,dword ptr [eax]
 004E62FE    call        dword ptr [ecx+10];TMargins.sub_004F6C74
 004E6301    mov         edi,eax
 004E6303    mov         edx,2
 004E6308    mov         eax,dword ptr [esi+84];TControl.FMargins:TMargins
 004E630E    mov         ecx,dword ptr [eax]
 004E6310    call        dword ptr [ecx+10];TMargins.sub_004F6C74
 004E6313    sar         eax,1
>004E6315    jns         004E631A
 004E6317    adc         eax,0
 004E631A    add         edi,eax
 004E631C    mov         edx,1
 004E6321    mov         eax,dword ptr [esi+84];TControl.FMargins:TMargins
 004E6327    mov         ecx,dword ptr [eax]
 004E6329    call        dword ptr [ecx+10];TMargins.sub_004F6C74
 004E632C    mov         ebp,eax
 004E632E    mov         edx,3
 004E6333    mov         eax,dword ptr [esi+84];TControl.FMargins:TMargins
 004E6339    mov         ecx,dword ptr [eax]
 004E633B    call        dword ptr [ecx+10];TMargins.sub_004F6C74
 004E633E    sar         eax,1
>004E6340    jns         004E6345
 004E6342    adc         eax,0
 004E6345    add         ebp,eax
 004E6347    mov         eax,ebp
 004E6349    mov         dword ptr [esp],edi
 004E634C    mov         dword ptr [esp+4],eax
 004E6350    mov         eax,dword ptr [esp]
 004E6353    mov         dword ptr [esi+194],eax;TControl.FAnchorOrigin:TPoint
 004E6359    mov         eax,dword ptr [esp+4]
 004E635D    mov         dword ptr [esi+198],eax
 004E6363    movzx       eax,byte ptr ds:[4E6474];0x3 gvar_004E6474
 004E636A    cmp         al,bl
>004E636C    jne         004E6383
 004E636E    xor         eax,eax
 004E6370    mov         dword ptr [esi+19C],eax;TControl.FOriginalParentSize:TPoint
 004E6376    xor         eax,eax
 004E6378    mov         dword ptr [esi+1A0],eax;TControl.FExplicitTop:Integer
>004E637E    jmp         004E646A
 004E6383    test        bl,4
>004E6386    je          004E63BA
 004E6388    test        bl,1
>004E638B    je          004E63A5
 004E638D    mov         edx,2
 004E6392    mov         eax,dword ptr [esi+84];TControl.FMargins:TMargins
 004E6398    mov         ecx,dword ptr [eax]
 004E639A    call        dword ptr [ecx+10];TMargins.sub_004F6C74
 004E639D    mov         dword ptr [esi+18C],eax;TControl.FAnchorRules:TPoint
>004E63A3    jmp         004E63E8
 004E63A5    xor         edx,edx
 004E63A7    mov         eax,dword ptr [esi+84];TControl.FMargins:TMargins
 004E63AD    mov         ecx,dword ptr [eax]
 004E63AF    call        dword ptr [ecx+10];TMargins.sub_004F6C74
 004E63B2    mov         dword ptr [esi+18C],eax;TControl.FAnchorRules:TPoint
>004E63B8    jmp         004E63E8
 004E63BA    xor         edx,edx
 004E63BC    mov         eax,dword ptr [esi+84];TControl.FMargins:TMargins
 004E63C2    mov         ecx,dword ptr [eax]
 004E63C4    call        dword ptr [ecx+10];TMargins.sub_004F6C74
 004E63C7    mov         edi,eax
 004E63C9    mov         edx,2
 004E63CE    mov         eax,dword ptr [esi+84];TControl.FMargins:TMargins
 004E63D4    mov         ecx,dword ptr [eax]
 004E63D6    call        dword ptr [ecx+10];TMargins.sub_004F6C74
 004E63D9    sar         eax,1
>004E63DB    jns         004E63E0
 004E63DD    adc         eax,0
 004E63E0    add         edi,eax
 004E63E2    mov         dword ptr [esi+18C],edi;TControl.FAnchorRules:TPoint
 004E63E8    test        bl,8
>004E63EB    je          004E6422
 004E63ED    test        bl,2
>004E63F0    je          004E640A
 004E63F2    mov         edx,3
 004E63F7    mov         eax,dword ptr [esi+84];TControl.FMargins:TMargins
 004E63FD    mov         ecx,dword ptr [eax]
 004E63FF    call        dword ptr [ecx+10];TMargins.sub_004F6C74
 004E6402    mov         dword ptr [esi+190],eax
>004E6408    jmp         004E6453
 004E640A    mov         edx,1
 004E640F    mov         eax,dword ptr [esi+84];TControl.FMargins:TMargins
 004E6415    mov         ecx,dword ptr [eax]
 004E6417    call        dword ptr [ecx+10];TMargins.sub_004F6C74
 004E641A    mov         dword ptr [esi+190],eax
>004E6420    jmp         004E6453
 004E6422    mov         edx,1
 004E6427    mov         eax,dword ptr [esi+84];TControl.FMargins:TMargins
 004E642D    mov         ecx,dword ptr [eax]
 004E642F    call        dword ptr [ecx+10];TMargins.sub_004F6C74
 004E6432    mov         ebx,eax
 004E6434    mov         edx,3
 004E6439    mov         eax,dword ptr [esi+84];TControl.FMargins:TMargins
 004E643F    mov         ecx,dword ptr [eax]
 004E6441    call        dword ptr [ecx+10];TMargins.sub_004F6C74
 004E6444    sar         eax,1
>004E6446    jns         004E644B
 004E6448    adc         eax,0
 004E644B    add         ebx,eax
 004E644D    mov         dword ptr [esi+190],ebx
 004E6453    mov         eax,dword ptr [esi+40];TControl.FParent:TWinControl
 004E6456    test        eax,eax
>004E6458    je          004E646A
 004E645A    lea         ecx,[esi+19C];TControl.FOriginalParentSize:TPoint
 004E6460    mov         edx,esi
 004E6462    mov         ebx,dword ptr [eax]
 004E6464    call        dword ptr [ebx+0FC];TWinControl.sub_004F227C
 004E646A    pop         ecx
 004E646B    pop         edx
 004E646C    pop         ebp
 004E646D    pop         edi
 004E646E    pop         esi
 004E646F    pop         ebx
 004E6470    ret
*}
end;

//004E6478
procedure TControl.SetLeft(Value:Integer);
begin
{*
 004E6478    push        ebx
 004E6479    push        esi
 004E647A    push        edi
 004E647B    mov         edi,edx
 004E647D    mov         esi,eax
 004E647F    mov         eax,dword ptr [esi+58];TControl.FWidth:Integer
 004E6482    push        eax
 004E6483    mov         eax,dword ptr [esi+5C];TControl.FHeight:Integer
 004E6486    push        eax
 004E6487    mov         ecx,dword ptr [esi+54];TControl.FTop:Integer
 004E648A    mov         edx,edi
 004E648C    mov         eax,esi
 004E648E    mov         ebx,dword ptr [eax]
 004E6490    call        dword ptr [ebx+0B0];TControl.SetBounds
 004E6496    or          byte ptr [esi+98],1;TControl.FScalingFlags:TScalingFlags
 004E649D    test        byte ptr [esi+1C],2;TControl.FComponentState:TComponentState
>004E64A1    je          004E64AC
 004E64A3    mov         eax,dword ptr [esi+50];TControl.FLeft:Integer
 004E64A6    mov         dword ptr [esi+1A4],eax;TControl.FExplicitLeft:Integer
 004E64AC    pop         edi
 004E64AD    pop         esi
 004E64AE    pop         ebx
 004E64AF    ret
*}
end;

//004E64B0
procedure TControl.SetTop(Value:Integer);
begin
{*
 004E64B0    push        ebx
 004E64B1    push        esi
 004E64B2    push        edi
 004E64B3    mov         edi,edx
 004E64B5    mov         esi,eax
 004E64B7    mov         eax,dword ptr [esi+58];TControl.FWidth:Integer
 004E64BA    push        eax
 004E64BB    mov         eax,dword ptr [esi+5C];TControl.FHeight:Integer
 004E64BE    push        eax
 004E64BF    mov         ecx,edi
 004E64C1    mov         edx,dword ptr [esi+50];TControl.FLeft:Integer
 004E64C4    mov         eax,esi
 004E64C6    mov         ebx,dword ptr [eax]
 004E64C8    call        dword ptr [ebx+0B0];TControl.SetBounds
 004E64CE    or          byte ptr [esi+98],2;TControl.FScalingFlags:TScalingFlags
 004E64D5    test        byte ptr [esi+1C],2;TControl.FComponentState:TComponentState
>004E64D9    je          004E64E4
 004E64DB    mov         eax,dword ptr [esi+54];TControl.FTop:Integer
 004E64DE    mov         dword ptr [esi+1A8],eax;TControl.FExplicitTop:Integer
 004E64E4    pop         edi
 004E64E5    pop         esi
 004E64E6    pop         ebx
 004E64E7    ret
*}
end;

//004E64E8
procedure TControl.SetWidth(Value:Integer);
begin
{*
 004E64E8    push        ebx
 004E64E9    push        esi
 004E64EA    push        edi
 004E64EB    mov         edi,edx
 004E64ED    mov         esi,eax
 004E64EF    push        edi
 004E64F0    mov         eax,dword ptr [esi+5C];TControl.FHeight:Integer
 004E64F3    push        eax
 004E64F4    mov         ecx,dword ptr [esi+54];TControl.FTop:Integer
 004E64F7    mov         edx,dword ptr [esi+50];TControl.FLeft:Integer
 004E64FA    mov         eax,esi
 004E64FC    mov         ebx,dword ptr [eax]
 004E64FE    call        dword ptr [ebx+0B0];TControl.SetBounds
 004E6504    or          byte ptr [esi+98],4;TControl.FScalingFlags:TScalingFlags
 004E650B    test        byte ptr [esi+1C],2;TControl.FComponentState:TComponentState
>004E650F    je          004E651A
 004E6511    mov         eax,dword ptr [esi+58];TControl.FWidth:Integer
 004E6514    mov         dword ptr [esi+1AC],eax;TControl.FExplicitWidth:Integer
 004E651A    pop         edi
 004E651B    pop         esi
 004E651C    pop         ebx
 004E651D    ret
*}
end;

//004E6520
procedure TControl.SetHeight(Value:Integer);
begin
{*
 004E6520    push        ebx
 004E6521    push        esi
 004E6522    push        edi
 004E6523    mov         edi,edx
 004E6525    mov         esi,eax
 004E6527    mov         eax,dword ptr [esi+58];TControl.FWidth:Integer
 004E652A    push        eax
 004E652B    push        edi
 004E652C    mov         ecx,dword ptr [esi+54];TControl.FTop:Integer
 004E652F    mov         edx,dword ptr [esi+50];TControl.FLeft:Integer
 004E6532    mov         eax,esi
 004E6534    mov         ebx,dword ptr [eax]
 004E6536    call        dword ptr [ebx+0B0];TControl.SetBounds
 004E653C    or          byte ptr [esi+98],8;TControl.FScalingFlags:TScalingFlags
 004E6543    test        byte ptr [esi+1C],2;TControl.FComponentState:TComponentState
>004E6547    je          004E6552
 004E6549    mov         eax,dword ptr [esi+5C];TControl.FHeight:Integer
 004E654C    mov         dword ptr [esi+1B0],eax;TControl.FExplicitHeight:Integer
 004E6552    pop         edi
 004E6553    pop         esi
 004E6554    pop         ebx
 004E6555    ret
*}
end;

//004E6558
procedure TControl.Dock(NewDockSite:TWinControl; ARect:TRect);
begin
{*
 004E6558    push        ebp
 004E6559    mov         ebp,esp
 004E655B    add         esp,0FFFFFFE8
 004E655E    push        esi
 004E655F    push        edi
 004E6560    mov         esi,ecx
 004E6562    lea         edi,[ebp-18]
 004E6565    movs        dword ptr [edi],dword ptr [esi]
 004E6566    movs        dword ptr [edi],dword ptr [esi]
 004E6567    movs        dword ptr [edi],dword ptr [esi]
 004E6568    movs        dword ptr [edi],dword ptr [esi]
 004E6569    mov         edi,edx
 004E656B    mov         dword ptr [ebp-4],eax
 004E656E    mov         eax,dword ptr [ebp-4]
 004E6571    cmp         edi,dword ptr [eax+0A0];TControl.FHostDockSite:TWinControl
>004E6577    je          004E65D0
 004E6579    mov         eax,dword ptr [ebp-4]
 004E657C    mov         eax,dword ptr [eax+0A0];TControl.FHostDockSite:TWinControl
 004E6582    test        eax,eax
>004E6584    je          004E65B0
 004E6586    cmp         dword ptr [eax+1D4],0;TWinControl.FDockClients:TList
>004E658D    je          004E65B0
 004E658F    mov         eax,dword ptr [eax+1D4];TWinControl.FDockClients:TList
 004E6595    mov         edx,dword ptr [ebp-4]
 004E6598    xor         ecx,ecx
 004E659A    call        TList.RemoveItem
 004E659F    mov         eax,dword ptr [ebp-4]
 004E65A2    mov         eax,dword ptr [eax+0A0];TControl.FHostDockSite:TWinControl
 004E65A8    mov         edx,dword ptr [ebp-4]
 004E65AB    call        TComponent.RemoveFreeNotification
 004E65B0    test        edi,edi
>004E65B2    je          004E65D0
 004E65B4    cmp         edi,0FFFFFFFF
>004E65B7    je          004E65D0
 004E65B9    cmp         dword ptr [edi+1D4],0;TWinControl.FDockClients:TList
>004E65C0    je          004E65D0
 004E65C2    mov         eax,dword ptr [edi+1D4];TWinControl.FDockClients:TList
 004E65C8    mov         edx,dword ptr [ebp-4]
 004E65CB    call        TList.Add
 004E65D0    mov         eax,dword ptr [ebp-4]
 004E65D3    or          dword ptr [eax+64],400;TControl.FControlState:TControlState
 004E65DA    xor         edx,edx
 004E65DC    push        ebp
 004E65DD    push        4E667C
 004E65E2    push        dword ptr fs:[edx]
 004E65E5    mov         dword ptr fs:[edx],esp
 004E65E8    cmp         edi,0FFFFFFFF
>004E65EB    je          004E65FE
 004E65ED    lea         ecx,[ebp-18]
 004E65F0    mov         edx,edi
 004E65F2    mov         eax,dword ptr [ebp-4]
 004E65F5    mov         si,0FFE5
 004E65F9    call        @CallDynaInst;TControl.sub_004E668C
 004E65FE    mov         eax,dword ptr [ebp-4]
 004E6601    mov         eax,dword ptr [eax+0A0];TControl.FHostDockSite:TWinControl
 004E6607    cmp         edi,eax
>004E6609    je          004E6664
 004E660B    mov         dword ptr [ebp-8],eax
 004E660E    cmp         edi,0FFFFFFFF
>004E6611    je          004E6644
 004E6613    mov         eax,dword ptr [ebp-4]
 004E6616    mov         dword ptr [eax+0A0],edi;TControl.FHostDockSite:TWinControl
 004E661C    test        edi,edi
>004E661E    je          004E664F
 004E6620    lea         ecx,[ebp-18]
 004E6623    mov         edx,dword ptr [ebp-4]
 004E6626    mov         eax,edi
 004E6628    mov         si,0FFC3
 004E662C    call        @CallDynaInst;TWinControl.sub_004EE458
 004E6631    mov         eax,dword ptr [ebp-4]
 004E6634    mov         eax,dword ptr [eax+0A0];TControl.FHostDockSite:TWinControl
 004E663A    mov         edx,dword ptr [ebp-4]
 004E663D    call        TComponent.FreeNotification
>004E6642    jmp         004E664F
 004E6644    mov         eax,dword ptr [ebp-4]
 004E6647    xor         edx,edx
 004E6649    mov         dword ptr [eax+0A0],edx;TControl.FHostDockSite:TWinControl
 004E664F    cmp         dword ptr [ebp-8],0
>004E6653    je          004E6664
 004E6655    mov         edx,dword ptr [ebp-4]
 004E6658    mov         eax,dword ptr [ebp-8]
 004E665B    mov         si,0FFBC
 004E665F    call        @CallDynaInst;TWinControl.sub_004EE464
 004E6664    xor         eax,eax
 004E6666    pop         edx
 004E6667    pop         ecx
 004E6668    pop         ecx
 004E6669    mov         dword ptr fs:[eax],edx
 004E666C    push        4E6683
 004E6671    mov         eax,dword ptr [ebp-4]
 004E6674    and         dword ptr [eax+64],0FFFFFBFF;TControl.FControlState:TControlState
 004E667B    ret
>004E667C    jmp         @HandleFinally
>004E6681    jmp         004E6671
 004E6683    pop         edi
 004E6684    pop         esi
 004E6685    mov         esp,ebp
 004E6687    pop         ebp
 004E6688    ret
*}
end;

//004E668C
{*procedure TControl.sub_004E668C(?:?; ?:?);
begin
 004E668C    push        ebx
 004E668D    push        esi
 004E668E    push        edi
 004E668F    mov         edi,ecx
 004E6691    mov         esi,edx
 004E6693    mov         ebx,eax
 004E6695    mov         eax,ebx
 004E6697    mov         edx,dword ptr ds:[4DE8CC];TWinControl
 004E669D    call        @IsClass
 004E66A2    test        al,al
>004E66A4    jne         004E66B3
 004E66A6    xor         ecx,ecx
 004E66A8    movzx       edx,byte ptr [ebx+69];TControl.FVisible:Boolean
 004E66AC    mov         eax,ebx
 004E66AE    call        004E73DC
 004E66B3    cmp         esi,dword ptr [ebx+40];TControl.FParent:TWinControl
>004E66B6    je          004E66C3
 004E66B8    mov         edx,edi
 004E66BA    mov         eax,ebx
 004E66BC    call        004E83E8
>004E66C1    jmp         004E66CC
 004E66C3    mov         edx,edi
 004E66C5    mov         eax,ebx
 004E66C7    call        004E6768
 004E66CC    test        esi,esi
>004E66CE    je          004E66D5
 004E66D0    cmp         esi,0FFFFFFFF
>004E66D3    jne         004E66E1
 004E66D5    xor         edx,edx
 004E66D7    mov         eax,ebx
 004E66D9    mov         ecx,dword ptr [eax]
 004E66DB    call        dword ptr [ecx+8C];TControl.sub_004E6DA4
 004E66E1    pop         edi
 004E66E2    pop         esi
 004E66E3    pop         ebx
 004E66E4    ret
end;*}

//004E66E8
procedure TControl.SetHelpKeyword(const Value:UnicodeString);
begin
{*
 004E66E8    test        byte ptr [eax+1C],1
>004E66EC    jne         004E66F5
 004E66EE    mov         byte ptr [eax+170],1
 004E66F5    mov         dword ptr [eax+178],edx
 004E66FB    ret
*}
end;

//004E66FC
procedure TControl.SetHelpContext(const Value:Classes.THelpContext);
begin
{*
 004E66FC    push        ebx
 004E66FD    push        esi
 004E66FE    mov         esi,edx
 004E6700    mov         ebx,eax
 004E6702    test        byte ptr [ebx+1C],1
>004E6706    jne         004E670F
 004E6708    mov         byte ptr [ebx+170],0
 004E670F    lea         eax,[ebx+174]
 004E6715    mov         edx,esi
 004E6717    call        @UStrAsg
 004E671C    pop         esi
 004E671D    pop         ebx
 004E671E    ret
*}
end;

//004E6748
function TControl.GetBoundsRect:TRect;
begin
{*
 004E6748    mov         ecx,dword ptr [eax+50]
 004E674B    mov         dword ptr [edx],ecx
 004E674D    mov         ecx,dword ptr [eax+54]
 004E6750    mov         dword ptr [edx+4],ecx
 004E6753    mov         ecx,dword ptr [eax+50]
 004E6756    add         ecx,dword ptr [eax+58]
 004E6759    mov         dword ptr [edx+8],ecx
 004E675C    mov         ecx,dword ptr [eax+54]
 004E675F    add         ecx,dword ptr [eax+5C]
 004E6762    mov         dword ptr [edx+0C],ecx
 004E6765    ret
*}
end;

//004E6768
{*procedure sub_004E6768(?:TControl; ?:?);
begin
 004E6768    push        ebx
 004E6769    push        esi
 004E676A    push        edi
 004E676B    push        ebp
 004E676C    mov         esi,edx
 004E676E    mov         edi,eax
 004E6770    mov         eax,dword ptr [esi+8]
 004E6773    mov         ebp,dword ptr [esi]
 004E6775    sub         eax,ebp
 004E6777    push        eax
 004E6778    mov         eax,dword ptr [esi+0C]
 004E677B    sub         eax,dword ptr [esi+4]
 004E677E    push        eax
 004E677F    mov         ecx,dword ptr [esi+4]
 004E6782    mov         edx,ebp
 004E6784    mov         eax,edi
 004E6786    mov         ebx,dword ptr [eax]
 004E6788    call        dword ptr [ebx+0B0];TControl.SetBounds
 004E678E    pop         ebp
 004E678F    pop         edi
 004E6790    pop         esi
 004E6791    pop         ebx
 004E6792    ret
end;*}

//004E6794
{*procedure sub_004E6794(?:?);
begin
 004E6794    xor         ecx,ecx
 004E6796    mov         dword ptr [edx],ecx
 004E6798    xor         ecx,ecx
 004E679A    mov         dword ptr [edx+4],ecx
 004E679D    mov         ecx,dword ptr [eax+58];TControl.FWidth:Integer
 004E67A0    mov         dword ptr [edx+8],ecx
 004E67A3    mov         eax,dword ptr [eax+5C];TControl.FHeight:Integer
 004E67A6    mov         dword ptr [edx+0C],eax
 004E67A9    ret
end;*}

//004E67AC
function TControl.GetClientWidth:Integer;
begin
{*
 004E67AC    push        ebx
 004E67AD    add         esp,0FFFFFFF0
 004E67B0    mov         ebx,eax
 004E67B2    mov         edx,esp
 004E67B4    mov         eax,ebx
 004E67B6    mov         ecx,dword ptr [eax]
 004E67B8    call        dword ptr [ecx+64]
 004E67BB    mov         eax,dword ptr [esp+8]
 004E67BF    add         esp,10
 004E67C2    pop         ebx
 004E67C3    ret
*}
end;

//004E67C4
procedure TControl.SetClientWidth(Value:Integer);
begin
{*
 004E67C4    push        ebx
 004E67C5    push        esi
 004E67C6    add         esp,0FFFFFFF8
 004E67C9    mov         esi,edx
 004E67CB    mov         ebx,eax
 004E67CD    mov         eax,ebx
 004E67CF    call        TControl.GetClientHeight
 004E67D4    mov         dword ptr [esp],esi
 004E67D7    mov         dword ptr [esp+4],eax
 004E67DB    mov         edx,esp
 004E67DD    mov         eax,ebx
 004E67DF    call        TControl.SetClientSize
 004E67E4    pop         ecx
 004E67E5    pop         edx
 004E67E6    pop         esi
 004E67E7    pop         ebx
 004E67E8    ret
*}
end;

//004E67EC
function TControl.GetClientHeight:Integer;
begin
{*
 004E67EC    push        ebx
 004E67ED    add         esp,0FFFFFFF0
 004E67F0    mov         ebx,eax
 004E67F2    mov         edx,esp
 004E67F4    mov         eax,ebx
 004E67F6    mov         ecx,dword ptr [eax]
 004E67F8    call        dword ptr [ecx+64]
 004E67FB    mov         eax,dword ptr [esp+0C]
 004E67FF    add         esp,10
 004E6802    pop         ebx
 004E6803    ret
*}
end;

//004E6804
procedure TControl.SetClientHeight(Value:Integer);
begin
{*
 004E6804    push        ebx
 004E6805    push        esi
 004E6806    add         esp,0FFFFFFF8
 004E6809    mov         esi,edx
 004E680B    mov         ebx,eax
 004E680D    mov         eax,ebx
 004E680F    call        TControl.GetClientWidth
 004E6814    mov         dword ptr [esp],eax
 004E6817    mov         dword ptr [esp+4],esi
 004E681B    mov         edx,esp
 004E681D    mov         eax,ebx
 004E681F    call        TControl.SetClientSize
 004E6824    pop         ecx
 004E6825    pop         edx
 004E6826    pop         esi
 004E6827    pop         ebx
 004E6828    ret
*}
end;

//004E682C
{*procedure sub_004E682C(?:?);
begin
 004E682C    push        ebp
 004E682D    mov         ebp,esp
 004E682F    add         esp,0FFFFFFF4
 004E6832    push        ebx
 004E6833    push        esi
 004E6834    xor         ecx,ecx
 004E6836    mov         dword ptr [ebp-0C],ecx
 004E6839    mov         esi,edx
 004E683B    mov         ebx,eax
 004E683D    xor         eax,eax
 004E683F    push        ebp
 004E6840    push        4E68AD
 004E6845    push        dword ptr fs:[eax]
 004E6848    mov         dword ptr fs:[eax],esp
 004E684B    cmp         dword ptr [ebx+40],0;TControl.FParent:TWinControl
>004E684F    jne         004E6882
 004E6851    mov         eax,dword ptr [ebx+8];TControl.FName:TComponentName
 004E6854    mov         dword ptr [ebp-8],eax
 004E6857    mov         byte ptr [ebp-4],11
 004E685B    lea         eax,[ebp-8]
 004E685E    push        eax
 004E685F    push        0
 004E6861    lea         edx,[ebp-0C]
 004E6864    mov         eax,[007C4B08];^SResString231:TResStringRec
 004E6869    call        LoadResString
 004E686E    mov         ecx,dword ptr [ebp-0C]
 004E6871    mov         dl,1
 004E6873    mov         eax,[0046BE9C];EInvalidOperation
 004E6878    call        Exception.CreateFmt;EInvalidOperation.Create
 004E687D    call        @RaiseExcept
 004E6882    mov         edx,esi
 004E6884    mov         eax,dword ptr [ebx+40];TControl.FParent:TWinControl
 004E6887    mov         ecx,dword ptr [eax]
 004E6889    call        dword ptr [ecx+60];TWinControl.GetClientOrigin
 004E688C    mov         eax,dword ptr [ebx+50];TControl.FLeft:Integer
 004E688F    add         dword ptr [esi],eax
 004E6891    mov         eax,dword ptr [ebx+54];TControl.FTop:Integer
 004E6894    add         dword ptr [esi+4],eax
 004E6897    xor         eax,eax
 004E6899    pop         edx
 004E689A    pop         ecx
 004E689B    pop         ecx
 004E689C    mov         dword ptr fs:[eax],edx
 004E689F    push        4E68B4
 004E68A4    lea         eax,[ebp-0C]
 004E68A7    call        @UStrClr
 004E68AC    ret
>004E68AD    jmp         @HandleFinally
>004E68B2    jmp         004E68A4
 004E68B4    pop         esi
 004E68B5    pop         ebx
 004E68B6    mov         esp,ebp
 004E68B8    pop         ebp
 004E68B9    ret
end;*}

//004E68BC
{*procedure TControl.ClientToScreen(Point:TPoint; ?:?);
begin
 004E68BC    push        ebx
 004E68BD    push        esi
 004E68BE    push        edi
 004E68BF    add         esp,0FFFFFFF8
 004E68C2    mov         edi,ecx
 004E68C4    mov         esi,edx
 004E68C6    mov         ebx,eax
 004E68C8    mov         edx,esp
 004E68CA    mov         eax,ebx
 004E68CC    mov         ecx,dword ptr [eax]
 004E68CE    call        dword ptr [ecx+60];TControl.sub_004E682C
 004E68D1    mov         eax,dword ptr [esi]
 004E68D3    add         eax,dword ptr [esp]
 004E68D6    mov         dword ptr [edi],eax
 004E68D8    mov         eax,dword ptr [esi+4]
 004E68DB    add         eax,dword ptr [esp+4]
 004E68DF    mov         dword ptr [edi+4],eax
 004E68E2    pop         ecx
 004E68E3    pop         edx
 004E68E4    pop         edi
 004E68E5    pop         esi
 004E68E6    pop         ebx
 004E68E7    ret
end;*}

//004E68E8
{*procedure sub_004E68E8(?:TControl; ?:?; ?:Pointer);
begin
 004E68E8    push        ebx
 004E68E9    push        esi
 004E68EA    push        edi
 004E68EB    push        ebp
 004E68EC    mov         edi,ecx
 004E68EE    mov         esi,edx
 004E68F0    mov         ebx,dword ptr [eax+80]
 004E68F6    mov         ebp,dword ptr [ebx+14]
 004E68F9    test        ebp,ebp
>004E68FB    jbe         004E6913
 004E68FD    push        edi
 004E68FE    push        esi
 004E68FF    push        ebp
 004E6900    call        kernel32.MulDiv
 004E6905    mov         ecx,eax
 004E6907    mov         edx,3
 004E690C    mov         eax,ebx
 004E690E    call        TSizeConstraints.SetMaxHeight
 004E6913    mov         ebp,dword ptr [ebx+0C]
 004E6916    test        ebp,ebp
>004E6918    jbe         004E6930
 004E691A    push        edi
 004E691B    push        esi
 004E691C    push        ebp
 004E691D    call        kernel32.MulDiv
 004E6922    mov         ecx,eax
 004E6924    mov         edx,1
 004E6929    mov         eax,ebx
 004E692B    call        TSizeConstraints.SetMaxHeight
 004E6930    mov         ebp,dword ptr [ebx+10]
 004E6933    test        ebp,ebp
>004E6935    jbe         004E694D
 004E6937    push        edi
 004E6938    push        esi
 004E6939    push        ebp
 004E693A    call        kernel32.MulDiv
 004E693F    mov         ecx,eax
 004E6941    mov         edx,2
 004E6946    mov         eax,ebx
 004E6948    call        TSizeConstraints.SetMaxHeight
 004E694D    mov         ebp,dword ptr [ebx+8]
 004E6950    test        ebp,ebp
>004E6952    jbe         004E6967
 004E6954    push        edi
 004E6955    push        esi
 004E6956    push        ebp
 004E6957    call        kernel32.MulDiv
 004E695C    mov         ecx,eax
 004E695E    xor         edx,edx
 004E6960    mov         eax,ebx
 004E6962    call        TSizeConstraints.SetMaxHeight
 004E6967    pop         ebp
 004E6968    pop         edi
 004E6969    pop         esi
 004E696A    pop         ebx
 004E696B    ret
end;*}

//004E696C
{*procedure sub_004E696C(?:TControl; ?:?; ?:?);
begin
 004E696C    push        ebx
 004E696D    push        esi
 004E696E    push        edi
 004E696F    push        ebp
 004E6970    mov         edi,ecx
 004E6972    mov         esi,edx
 004E6974    mov         ebx,dword ptr [eax+84]
 004E697A    mov         ebp,dword ptr [ebx+8]
 004E697D    test        ebp,ebp
>004E697F    jbe         004E6994
 004E6981    push        edi
 004E6982    push        esi
 004E6983    push        ebp
 004E6984    call        kernel32.MulDiv
 004E6989    mov         ecx,eax
 004E698B    xor         edx,edx
 004E698D    mov         eax,ebx
 004E698F    call        TMargins.SetLeft
 004E6994    mov         ebp,dword ptr [ebx+0C]
 004E6997    test        ebp,ebp
>004E6999    jbe         004E69B1
 004E699B    push        edi
 004E699C    push        esi
 004E699D    push        ebp
 004E699E    call        kernel32.MulDiv
 004E69A3    mov         ecx,eax
 004E69A5    mov         edx,1
 004E69AA    mov         eax,ebx
 004E69AC    call        TMargins.SetLeft
 004E69B1    mov         ebp,dword ptr [ebx+10]
 004E69B4    test        ebp,ebp
>004E69B6    jbe         004E69CE
 004E69B8    push        edi
 004E69B9    push        esi
 004E69BA    push        ebp
 004E69BB    call        kernel32.MulDiv
 004E69C0    mov         ecx,eax
 004E69C2    mov         edx,2
 004E69C7    mov         eax,ebx
 004E69C9    call        TMargins.SetLeft
 004E69CE    mov         ebp,dword ptr [ebx+14]
 004E69D1    test        ebp,ebp
>004E69D3    jbe         004E69EB
 004E69D5    push        edi
 004E69D6    push        esi
 004E69D7    push        ebp
 004E69D8    call        kernel32.MulDiv
 004E69DD    mov         ecx,eax
 004E69DF    mov         edx,3
 004E69E4    mov         eax,ebx
 004E69E6    call        TMargins.SetLeft
 004E69EB    pop         ebp
 004E69EC    pop         edi
 004E69ED    pop         esi
 004E69EE    pop         ebx
 004E69EF    ret
end;*}

//004E69F0
{*function sub_004E69F0:?;
begin
 004E69F0    movzx       eax,byte ptr ds:[4E69F8];0x1F gvar_004E69F8
 004E69F7    ret
end;*}

//004E69FC
function TControl.ScreenToClient(Point:TPoint):TPoint;
begin
{*
 004E69FC    push        ebx
 004E69FD    push        esi
 004E69FE    push        edi
 004E69FF    add         esp,0FFFFFFF8
 004E6A02    mov         edi,ecx
 004E6A04    mov         esi,edx
 004E6A06    mov         ebx,eax
 004E6A08    mov         edx,esp
 004E6A0A    mov         eax,ebx
 004E6A0C    mov         ecx,dword ptr [eax]
 004E6A0E    call        dword ptr [ecx+60]
 004E6A11    mov         eax,dword ptr [esi]
 004E6A13    sub         eax,dword ptr [esp]
 004E6A16    mov         dword ptr [edi],eax
 004E6A18    mov         eax,dword ptr [esi+4]
 004E6A1B    sub         eax,dword ptr [esp+4]
 004E6A1F    mov         dword ptr [edi+4],eax
 004E6A22    pop         ecx
 004E6A23    pop         edx
 004E6A24    pop         edi
 004E6A25    pop         esi
 004E6A26    pop         ebx
 004E6A27    ret
*}
end;

//004E6A28
procedure TControl.SendCancelMode(Sender:TControl);
begin
{*
 004E6A28    push        ebx
 004E6A29    push        esi
 004E6A2A    mov         esi,edx
 004E6A2C    mov         ebx,eax
 004E6A2E    test        ebx,ebx
>004E6A30    je          004E6A53
 004E6A32    mov         eax,ebx
 004E6A34    mov         edx,dword ptr ds:[5B7120];TCustomForm
 004E6A3A    call        @IsClass
 004E6A3F    test        al,al
>004E6A41    je          004E6A4C
 004E6A43    mov         edx,esi
 004E6A45    mov         eax,ebx
 004E6A47    call        TCustomForm.SendCancelMode
 004E6A4C    mov         ebx,dword ptr [ebx+40]
 004E6A4F    test        ebx,ebx
>004E6A51    jne         004E6A32
 004E6A53    pop         esi
 004E6A54    pop         ebx
 004E6A55    ret
*}
end;

//004E6A58
{*procedure sub_004E6A58(?:TControl; ?:?; ?:TWinControl; ?:?);
begin
 004E6A58    push        ebp
 004E6A59    mov         ebp,esp
 004E6A5B    add         esp,0FFFFFFF0
 004E6A5E    push        ebx
 004E6A5F    push        esi
 004E6A60    push        edi
 004E6A61    mov         dword ptr [ebp-4],ecx
 004E6A64    mov         edi,edx
 004E6A66    mov         ebx,eax
 004E6A68    mov         esi,dword ptr [ebx+0A0]
 004E6A6E    test        esi,esi
>004E6A70    je          004E6AB3
 004E6A72    cmp         dword ptr ds:[7CA5FC],0;gvar_007CA5FC
>004E6A79    jne         004E6AB3
 004E6A7B    movzx       eax,word ptr ds:[4E6ABC];0x9 gvar_004E6ABC
 004E6A82    and         ax,word ptr [ebx+1C]
 004E6A86    movzx       edx,word ptr ds:[4E6AC0];0x0 gvar_004E6AC0
 004E6A8D    cmp         dx,ax
>004E6A90    jne         004E6AB3
 004E6A92    mov         dword ptr [ebp-10],edi
 004E6A95    mov         eax,dword ptr [ebp-4]
 004E6A98    mov         dword ptr [ebp-0C],eax
 004E6A9B    mov         eax,dword ptr [ebp+8]
 004E6A9E    mov         dword ptr [ebp-8],eax
 004E6AA1    lea         eax,[ebp-10]
 004E6AA4    push        eax
 004E6AA5    mov         ecx,ebx
 004E6AA7    mov         edx,0B042
 004E6AAC    mov         eax,esi
 004E6AAE    call        TControl.Perform
 004E6AB3    pop         edi
 004E6AB4    pop         esi
 004E6AB5    pop         ebx
 004E6AB6    mov         esp,ebp
 004E6AB8    pop         ebp
 004E6AB9    ret         4
end;*}

//004E6AC4
procedure TControl.Changed;
begin
{*
 004E6AC4    push        eax
 004E6AC5    xor         ecx,ecx
 004E6AC7    mov         edx,0B037
 004E6ACC    call        TControl.Perform
 004E6AD1    ret
*}
end;

//004E6AD4
{*procedure TControl.sub_004E6AD4(?:?; ?:?);
begin
 004E6AD4    push        ebx
 004E6AD5    push        esi
 004E6AD6    push        edi
 004E6AD7    push        ebp
 004E6AD8    add         esp,0FFFFFFEC
 004E6ADB    mov         ebp,ecx
 004E6ADD    mov         edi,edx
 004E6ADF    mov         esi,eax
 004E6AE1    cmp         ebp,edi
>004E6AE3    je          004E6C78
 004E6AE9    test        byte ptr [esi+1C],1;TControl.FComponentState:TComponentState
>004E6AED    je          004E6AFC
 004E6AEF    movzx       eax,byte ptr [esi+98];TControl.FScalingFlags:TScalingFlags
 004E6AF6    mov         byte ptr [esp+10],al
>004E6AFA    jmp         004E6B07
 004E6AFC    mov         eax,esi
 004E6AFE    mov         edx,dword ptr [eax]
 004E6B00    call        dword ptr [edx+7C];TControl.sub_004E69F0
 004E6B03    mov         byte ptr [esp+10],al
 004E6B07    test        byte ptr [esp+10],1
>004E6B0C    je          004E6B1E
 004E6B0E    push        ebp
 004E6B0F    push        edi
 004E6B10    mov         eax,dword ptr [esi+50];TControl.FLeft:Integer
 004E6B13    push        eax
 004E6B14    call        kernel32.MulDiv
 004E6B19    mov         dword ptr [esp],eax
>004E6B1C    jmp         004E6B24
 004E6B1E    mov         eax,dword ptr [esi+50];TControl.FLeft:Integer
 004E6B21    mov         dword ptr [esp],eax
 004E6B24    test        byte ptr [esp+10],2
>004E6B29    je          004E6B3C
 004E6B2B    push        ebp
 004E6B2C    push        edi
 004E6B2D    mov         eax,dword ptr [esi+54];TControl.FTop:Integer
 004E6B30    push        eax
 004E6B31    call        kernel32.MulDiv
 004E6B36    mov         dword ptr [esp+4],eax
>004E6B3A    jmp         004E6B43
 004E6B3C    mov         eax,dword ptr [esi+54];TControl.FTop:Integer
 004E6B3F    mov         dword ptr [esp+4],eax
 004E6B43    test        byte ptr [esp+10],4
>004E6B48    je          004E6B7F
 004E6B4A    test        byte ptr [esi+61],1;TControl.FVisible:Boolean
>004E6B4E    jne         004E6B7F
 004E6B50    test        byte ptr [esp+10],1
>004E6B55    je          004E6B6E
 004E6B57    push        ebp
 004E6B58    push        edi
 004E6B59    mov         eax,dword ptr [esi+50];TControl.FLeft:Integer
 004E6B5C    add         eax,dword ptr [esi+58];TControl.FWidth:Integer
 004E6B5F    push        eax
 004E6B60    call        kernel32.MulDiv
 004E6B65    sub         eax,dword ptr [esp]
 004E6B68    mov         dword ptr [esp+8],eax
>004E6B6C    jmp         004E6B86
 004E6B6E    push        ebp
 004E6B6F    push        edi
 004E6B70    mov         eax,dword ptr [esi+58];TControl.FWidth:Integer
 004E6B73    push        eax
 004E6B74    call        kernel32.MulDiv
 004E6B79    mov         dword ptr [esp+8],eax
>004E6B7D    jmp         004E6B86
 004E6B7F    mov         eax,dword ptr [esi+58];TControl.FWidth:Integer
 004E6B82    mov         dword ptr [esp+8],eax
 004E6B86    test        byte ptr [esp+10],8
>004E6B8B    je          004E6BC3
 004E6B8D    test        byte ptr [esi+61],2;TControl.FVisible:Boolean
>004E6B91    jne         004E6BC3
 004E6B93    test        byte ptr [esp+10],2
>004E6B98    je          004E6BB2
 004E6B9A    push        ebp
 004E6B9B    push        edi
 004E6B9C    mov         eax,dword ptr [esi+54];TControl.FTop:Integer
 004E6B9F    add         eax,dword ptr [esi+5C];TControl.FHeight:Integer
 004E6BA2    push        eax
 004E6BA3    call        kernel32.MulDiv
 004E6BA8    sub         eax,dword ptr [esp+4]
 004E6BAC    mov         dword ptr [esp+0C],eax
>004E6BB0    jmp         004E6BCA
 004E6BB2    push        ebp
 004E6BB3    push        edi
 004E6BB4    mov         eax,dword ptr [esi+5C];TControl.FHeight:Integer
 004E6BB7    push        eax
 004E6BB8    call        kernel32.MulDiv
 004E6BBD    mov         dword ptr [esp+0C],eax
>004E6BC1    jmp         004E6BCA
 004E6BC3    mov         eax,dword ptr [esi+5C];TControl.FHeight:Integer
 004E6BC6    mov         dword ptr [esp+0C],eax
 004E6BCA    mov         ecx,ebp
 004E6BCC    mov         edx,edi
 004E6BCE    mov         eax,esi
 004E6BD0    call        004E68E8
 004E6BD5    mov         ecx,ebp
 004E6BD7    mov         edx,edi
 004E6BD9    mov         eax,esi
 004E6BDB    call        004E696C
 004E6BE0    mov         eax,dword ptr [esp+8]
 004E6BE4    push        eax
 004E6BE5    mov         eax,dword ptr [esp+10]
 004E6BE9    push        eax
 004E6BEA    mov         ecx,dword ptr [esp+0C]
 004E6BEE    mov         edx,dword ptr [esp+8]
 004E6BF2    mov         eax,esi
 004E6BF4    mov         ebx,dword ptr [eax]
 004E6BF6    call        dword ptr [ebx+0B0];TControl.SetBounds
 004E6BFC    movzx       eax,byte ptr [esp+10]
 004E6C01    and         al,byte ptr ds:[4E6C90];0x5 gvar_004E6C90
 004E6C07    movzx       edx,byte ptr ds:[4E6C94];0x0 gvar_004E6C94
 004E6C0E    cmp         dl,al
>004E6C10    je          004E6C26
 004E6C12    push        ebp
 004E6C13    push        edi
 004E6C14    mov         eax,dword ptr [esi+19C];TControl.FOriginalParentSize:TPoint
 004E6C1A    push        eax
 004E6C1B    call        kernel32.MulDiv
 004E6C20    mov         dword ptr [esi+19C],eax;TControl.FOriginalParentSize:TPoint
 004E6C26    movzx       eax,byte ptr [esp+10]
 004E6C2B    and         al,byte ptr ds:[4E6C98];0xA gvar_004E6C98
 004E6C31    movzx       edx,byte ptr ds:[4E6C94];0x0 gvar_004E6C94
 004E6C38    cmp         dl,al
>004E6C3A    je          004E6C50
 004E6C3C    push        ebp
 004E6C3D    push        edi
 004E6C3E    mov         eax,dword ptr [esi+1A0];TControl.FExplicitTop:Integer
 004E6C44    push        eax
 004E6C45    call        kernel32.MulDiv
 004E6C4A    mov         dword ptr [esi+1A0],eax;TControl.FExplicitTop:Integer
 004E6C50    cmp         byte ptr [esi+6B],0;TControl.FParentFont:Boolean
>004E6C54    jne         004E6C78
 004E6C56    test        byte ptr [esp+10],10
>004E6C5B    je          004E6C78
 004E6C5D    mov         ebx,dword ptr [esi+74];TControl.FFont:TFont
 004E6C60    push        ebp
 004E6C61    push        edi
 004E6C62    mov         eax,dword ptr [ebx+10];TFont.FResource:PResource
 004E6C65    mov         eax,dword ptr [eax+18]
 004E6C68    push        eax
 004E6C69    call        kernel32.MulDiv
 004E6C6E    mov         edx,eax
 004E6C70    mov         eax,dword ptr [esi+74];TControl.FFont:TFont
 004E6C73    call        TFont.SetHeight
 004E6C78    movzx       eax,byte ptr ds:[4E6C94];0x0 gvar_004E6C94
 004E6C7F    mov         byte ptr [esi+98],al;TControl.FScalingFlags:TScalingFlags
 004E6C85    add         esp,14
 004E6C88    pop         ebp
 004E6C89    pop         edi
 004E6C8A    pop         esi
 004E6C8B    pop         ebx
 004E6C8C    ret
end;*}

//004E6C9C
procedure TImage.SetAutoSize(Value:Boolean);
begin
{*
 004E6C9C    push        esi
 004E6C9D    mov         esi,eax
 004E6C9F    cmp         dl,byte ptr [esi+6E];TImage.FAutoSize:Boolean
>004E6CA2    je          004E6CB6
 004E6CA4    mov         byte ptr [esi+6E],dl;TImage.FAutoSize:Boolean
 004E6CA7    test        dl,dl
>004E6CA9    je          004E6CB6
 004E6CAB    mov         eax,esi
 004E6CAD    mov         si,0FFEE
 004E6CB1    call        @CallDynaInst;TControl.sub_004E9C04
 004E6CB6    pop         esi
 004E6CB7    ret
*}
end;

//004E6CB8
{*procedure sub_004E6CB8(?:?);
begin
 004E6CB8    push        ebp
 004E6CB9    mov         ebp,esp
 004E6CBB    add         esp,0FFFFFFF8
 004E6CBE    push        ebx
 004E6CBF    push        esi
 004E6CC0    push        edi
 004E6CC1    xor         ecx,ecx
 004E6CC3    mov         dword ptr [ebp-8],ecx
 004E6CC6    mov         dword ptr [ebp-4],edx
 004E6CC9    mov         edi,eax
 004E6CCB    xor         eax,eax
 004E6CCD    push        ebp
 004E6CCE    push        4E6D4E
 004E6CD3    push        dword ptr fs:[eax]
 004E6CD6    mov         dword ptr fs:[eax],esp
 004E6CD9    test        byte ptr [edi+60],20;TMainForm.FControlStyle:TControlStyle
>004E6CDD    je          004E6D1A
 004E6CDF    test        byte ptr [edi+1C],1;TMainForm.FComponentState:TComponentState
>004E6CE3    jne         004E6D1A
 004E6CE5    lea         edx,[ebp-8]
 004E6CE8    mov         eax,edi
 004E6CEA    call        TControl.GetText
 004E6CEF    mov         edx,dword ptr [ebp-8]
 004E6CF2    mov         eax,dword ptr [edi+8];TMainForm.FName:TComponentName
 004E6CF5    call        @UStrEqual
>004E6CFA    jne         004E6D1A
 004E6CFC    mov         esi,dword ptr [edi+4];TMainForm.FOwner:TComponent
 004E6CFF    test        esi,esi
>004E6D01    je          004E6D1E
 004E6D03    mov         eax,esi
 004E6D05    mov         edx,dword ptr ds:[4DC470];TControl
 004E6D0B    call        @IsClass
 004E6D10    test        al,al
>004E6D12    je          004E6D1E
 004E6D14    test        byte ptr [esi+1C],1;TComponent.FComponentState:TComponentState
>004E6D18    je          004E6D1E
 004E6D1A    xor         ebx,ebx
>004E6D1C    jmp         004E6D20
 004E6D1E    mov         bl,1
 004E6D20    mov         edx,dword ptr [ebp-4]
 004E6D23    mov         eax,edi
 004E6D25    call        TComponent.SetName
 004E6D2A    test        bl,bl
>004E6D2C    je          004E6D38
 004E6D2E    mov         edx,dword ptr [ebp-4]
 004E6D31    mov         eax,edi
 004E6D33    call        TControl.SetText
 004E6D38    xor         eax,eax
 004E6D3A    pop         edx
 004E6D3B    pop         ecx
 004E6D3C    pop         ecx
 004E6D3D    mov         dword ptr fs:[eax],edx
 004E6D40    push        4E6D55
 004E6D45    lea         eax,[ebp-8]
 004E6D48    call        @UStrClr
 004E6D4D    ret
>004E6D4E    jmp         @HandleFinally
>004E6D53    jmp         004E6D45
 004E6D55    pop         edi
 004E6D56    pop         esi
 004E6D57    pop         ebx
 004E6D58    pop         ecx
 004E6D59    pop         ecx
 004E6D5A    pop         ebp
 004E6D5B    ret
end;*}

//004E6D5C
procedure TControl.SetClientSize(Value:Types.TPoint);
begin
{*
 004E6D5C    push        ebx
 004E6D5D    push        esi
 004E6D5E    push        edi
 004E6D5F    add         esp,0FFFFFFE8
 004E6D62    mov         esi,edx
 004E6D64    lea         edi,[esp]
 004E6D67    movs        dword ptr [edi],dword ptr [esi]
 004E6D68    movs        dword ptr [edi],dword ptr [esi]
 004E6D69    mov         esi,eax
 004E6D6B    lea         edx,[esp+8]
 004E6D6F    mov         eax,esi
 004E6D71    mov         ecx,dword ptr [eax]
 004E6D73    call        dword ptr [ecx+64]
 004E6D76    mov         eax,dword ptr [esi+58]
 004E6D79    sub         eax,dword ptr [esp+10]
 004E6D7D    add         eax,dword ptr [esp]
 004E6D80    push        eax
 004E6D81    mov         eax,dword ptr [esi+5C]
 004E6D84    sub         eax,dword ptr [esp+18]
 004E6D88    add         eax,dword ptr [esp+8]
 004E6D8C    push        eax
 004E6D8D    mov         ecx,dword ptr [esi+54]
 004E6D90    mov         edx,dword ptr [esi+50]
 004E6D93    mov         eax,esi
 004E6D95    mov         ebx,dword ptr [eax]
 004E6D97    call        dword ptr [ebx+0B0]
 004E6D9D    add         esp,18
 004E6DA0    pop         edi
 004E6DA1    pop         esi
 004E6DA2    pop         ebx
 004E6DA3    ret
*}
end;

//004E6DA4
{*procedure sub_004E6DA4(?:?);
begin
 004E6DA4    push        ebx
 004E6DA5    push        esi
 004E6DA6    mov         esi,edx
 004E6DA8    mov         ebx,eax
 004E6DAA    cmp         esi,dword ptr [ebx+40];TControl.FParent:TWinControl
>004E6DAD    je          004E6DEC
 004E6DAF    cmp         ebx,esi
>004E6DB1    jne         004E6DCA
 004E6DB3    mov         ecx,dword ptr ds:[7C4B0C];^SResString250:TResStringRec
 004E6DB9    mov         dl,1
 004E6DBB    mov         eax,[0046BE9C];EInvalidOperation
 004E6DC0    call        Exception.CreateRes;EInvalidOperation.Create
 004E6DC5    call        @RaiseExcept
 004E6DCA    mov         eax,dword ptr [ebx+40];TControl.FParent:TWinControl
 004E6DCD    test        eax,eax
>004E6DCF    je          004E6DD8
 004E6DD1    mov         edx,ebx
 004E6DD3    call        TWinControl.RemoveControl
 004E6DD8    test        esi,esi
>004E6DDA    je          004E6DEC
 004E6DDC    mov         edx,ebx
 004E6DDE    mov         eax,esi
 004E6DE0    call        TWinControl.InsertControl
 004E6DE5    mov         eax,ebx
 004E6DE7    call        004E62D0
 004E6DEC    pop         esi
 004E6DED    pop         ebx
 004E6DEE    ret
end;*}

//004E6DF0
procedure TControl.SetVisible(Value:Boolean);
begin
{*
 004E6DF0    push        ebx
 004E6DF1    push        esi
 004E6DF2    push        edi
 004E6DF3    mov         ebx,edx
 004E6DF5    mov         edi,eax
 004E6DF7    cmp         bl,byte ptr [edi+69]
>004E6DFA    je          004E6E39
 004E6DFC    mov         eax,edi
 004E6DFE    mov         si,0FFCD
 004E6E02    call        @CallDynaInst
 004E6E07    mov         byte ptr [edi+69],bl
 004E6E0A    push        0
 004E6E0C    movzx       ecx,bl
 004E6E0F    mov         edx,0B00B
 004E6E14    mov         eax,edi
 004E6E16    call        TControl.Perform
 004E6E1B    test        bl,bl
>004E6E1D    je          004E6E32
 004E6E1F    cmp         byte ptr [edi+6E],0
>004E6E23    je          004E6E32
 004E6E25    mov         eax,edi
 004E6E27    mov         si,0FFEE
 004E6E2B    call        @CallDynaInst
>004E6E30    jmp         004E6E39
 004E6E32    mov         eax,edi
 004E6E34    mov         edx,dword ptr [eax]
 004E6E36    call        dword ptr [edx+78]
 004E6E39    pop         edi
 004E6E3A    pop         esi
 004E6E3B    pop         ebx
 004E6E3C    ret
*}
end;

//004E6E40
procedure TGroupBox.SetEnabled(Value:Boolean);
begin
{*
 004E6E40    cmp         dl,byte ptr [eax+6A];TGroupBox.FEnabled:Boolean
>004E6E43    je          004E6E56
 004E6E45    mov         byte ptr [eax+6A],dl;TGroupBox.FEnabled:Boolean
 004E6E48    push        0
 004E6E4A    xor         ecx,ecx
 004E6E4C    mov         edx,0B00C
 004E6E51    call        TControl.Perform
 004E6E56    ret
*}
end;

//004E6E58
function TControl.GetTextLen:Integer;
begin
{*
 004E6E58    push        0
 004E6E5A    xor         ecx,ecx
 004E6E5C    mov         edx,0E
 004E6E61    call        TControl.Perform
 004E6E66    ret
*}
end;

//004E6E68
function TControl.GetTextBuf(Buffer:PWideChar; BufSize:Integer):Integer;
begin
{*
 004E6E68    push        edx
 004E6E69    mov         edx,0D
 004E6E6E    call        TControl.Perform
 004E6E73    ret
*}
end;

//004E6E74
{*function sub_004E6E74(?:TControl):?;
begin
 004E6E74    mov         edx,dword ptr [eax+0AC]
 004E6E7A    test        edx,edx
>004E6E7C    jle         004E6E81
 004E6E7E    mov         eax,edx
 004E6E80    ret
 004E6E81    mov         eax,dword ptr [eax+5C]
 004E6E84    ret
end;*}

//004E6E88
{*function sub_004E6E88(?:TControl):?;
begin
 004E6E88    mov         edx,dword ptr [eax+0A8]
 004E6E8E    test        edx,edx
>004E6E90    jle         004E6E95
 004E6E92    mov         eax,edx
 004E6E94    ret
 004E6E95    mov         eax,dword ptr [eax+58]
 004E6E98    ret
end;*}

//004E6EC4
procedure TControl.SetPopupMenu(Value:Menus.TPopupMenu);
begin
{*
 004E6EC4    push        ebx
 004E6EC5    push        esi
 004E6EC6    mov         esi,edx
 004E6EC8    mov         ebx,eax
 004E6ECA    mov         dword ptr [ebx+8C],esi
 004E6ED0    test        esi,esi
>004E6ED2    je          004E6EE6
 004E6ED4    mov         edx,ebx
 004E6ED6    mov         eax,esi
 004E6ED8    call        TMenu.ParentBiDiModeChanged
 004E6EDD    mov         edx,ebx
 004E6EDF    mov         eax,esi
 004E6EE1    call        TComponent.FreeNotification
 004E6EE6    pop         esi
 004E6EE7    pop         ebx
 004E6EE8    ret
*}
end;

//004E6EEC
function TControl.GetText:TCaption;
begin
{*
 004E6EEC    push        ebx
 004E6EED    push        esi
 004E6EEE    push        edi
 004E6EEF    mov         edi,edx
 004E6EF1    mov         esi,eax
 004E6EF3    mov         eax,esi
 004E6EF5    call        TControl.GetTextLen
 004E6EFA    mov         ebx,eax
 004E6EFC    mov         eax,edi
 004E6EFE    mov         ecx,ebx
 004E6F00    xor         edx,edx
 004E6F02    call        @UStrFromPWCharLen
 004E6F07    test        ebx,ebx
>004E6F09    je          004E6F3A
 004E6F0B    mov         eax,dword ptr [edi]
 004E6F0D    call        @UStrToPWChar
 004E6F12    mov         edx,eax
 004E6F14    lea         ecx,[ebx+1]
 004E6F17    mov         eax,esi
 004E6F19    call        TControl.GetTextBuf
 004E6F1E    sub         ebx,eax
 004E6F20    test        ebx,ebx
>004E6F22    jle         004E6F3A
 004E6F24    mov         eax,dword ptr [edi]
 004E6F26    test        eax,eax
>004E6F28    je          004E6F2F
 004E6F2A    sub         eax,4
 004E6F2D    mov         eax,dword ptr [eax]
 004E6F2F    mov         edx,eax
 004E6F31    sub         edx,ebx
 004E6F33    mov         eax,edi
 004E6F35    call        @UStrSetLength
 004E6F3A    pop         edi
 004E6F3B    pop         esi
 004E6F3C    pop         ebx
 004E6F3D    ret
*}
end;

//004E6F40
procedure TControl.SetText(const Value:TCaption);
begin
{*
 004E6F40    push        ebp
 004E6F41    mov         ebp,esp
 004E6F43    push        0
 004E6F45    push        ebx
 004E6F46    push        esi
 004E6F47    mov         esi,edx
 004E6F49    mov         ebx,eax
 004E6F4B    xor         eax,eax
 004E6F4D    push        ebp
 004E6F4E    push        4E6F95
 004E6F53    push        dword ptr fs:[eax]
 004E6F56    mov         dword ptr fs:[eax],esp
 004E6F59    lea         edx,[ebp-4]
 004E6F5C    mov         eax,ebx
 004E6F5E    call        TControl.GetText
 004E6F63    mov         eax,dword ptr [ebp-4]
 004E6F66    mov         edx,esi
 004E6F68    call        @UStrEqual
>004E6F6D    je          004E6F7F
 004E6F6F    mov         eax,esi
 004E6F71    call        @UStrToPWChar
 004E6F76    mov         edx,eax
 004E6F78    mov         eax,ebx
 004E6F7A    call        TControl.SetTextBuf
 004E6F7F    xor         eax,eax
 004E6F81    pop         edx
 004E6F82    pop         ecx
 004E6F83    pop         ecx
 004E6F84    mov         dword ptr fs:[eax],edx
 004E6F87    push        4E6F9C
 004E6F8C    lea         eax,[ebp-4]
 004E6F8F    call        @UStrClr
 004E6F94    ret
>004E6F95    jmp         @HandleFinally
>004E6F9A    jmp         004E6F8C
 004E6F9C    pop         esi
 004E6F9D    pop         ebx
 004E6F9E    pop         ecx
 004E6F9F    pop         ebp
 004E6FA0    ret
*}
end;

//004E6FA4
procedure TGroupBox.SetBiDiMode(Value:TBiDiMode);
begin
{*
 004E6FA4    cmp         dl,byte ptr [eax+71];TGroupBox.FBiDiMode:TBiDiMode
>004E6FA7    je          004E6FBE
 004E6FA9    mov         byte ptr [eax+71],dl;TGroupBox.FBiDiMode:TBiDiMode
 004E6FAC    mov         byte ptr [eax+72],0;TGroupBox.FParentBiDiMode:Boolean
 004E6FB0    push        0
 004E6FB2    xor         ecx,ecx
 004E6FB4    mov         edx,0B03C
 004E6FB9    call        TControl.Perform
 004E6FBE    ret
*}
end;

//004E6FC0
{*procedure sub_004E6FC0(?:?);
begin
 004E6FC0    push        ebx
 004E6FC1    mov         ebx,eax
 004E6FC3    mov         byte ptr [ebx+6B],0
 004E6FC7    mov         byte ptr [ebx+68],0
 004E6FCB    mov         eax,dword ptr [ebx+74]
 004E6FCE    mov         eax,dword ptr [eax+10]
 004E6FD1    mov         eax,dword ptr [eax+18]
 004E6FD4    cmp         eax,dword ptr [ebx+94]
>004E6FDA    je          004E6FF2
 004E6FDC    or          byte ptr [ebx+98],10
 004E6FE3    mov         eax,dword ptr [ebx+74]
 004E6FE6    mov         eax,dword ptr [eax+10]
 004E6FE9    mov         eax,dword ptr [eax+18]
 004E6FEC    mov         dword ptr [ebx+94],eax
 004E6FF2    push        0
 004E6FF4    xor         ecx,ecx
 004E6FF6    mov         edx,0B00E
 004E6FFB    mov         eax,ebx
 004E6FFD    call        TControl.Perform
 004E7002    pop         ebx
 004E7003    ret
end;*}

//004E7004
procedure TGroupBox.SetFont(Value:TFont);
begin
{*
 004E7004    mov         eax,dword ptr [eax+74];TGroupBox.FFont:TFont
 004E7007    mov         ecx,dword ptr [eax]
 004E7009    call        dword ptr [ecx+8];TFont.Assign
 004E700C    ret
*}
end;

//004E7010
function TGroupBox.IsStoredFont(Value:TFont):Boolean;
begin
{*
 004E7010    cmp         byte ptr [eax+6B],0;TGroupBox.FParentFont:Boolean
>004E7014    jne         004E701C
 004E7016    cmp         byte ptr [eax+68],0;TGroupBox.FDesktopFont:Boolean
>004E701A    je          004E701F
 004E701C    xor         eax,eax
 004E701E    ret
 004E701F    mov         al,1
 004E7021    ret
*}
end;

//004E7024
procedure TGroupBox.IsStoredShowHint(Value:Boolean);
begin
{*
 004E7024    movzx       eax,byte ptr [eax+9A];TGroupBox.FParentShowHint:Boolean
 004E702B    xor         al,1
 004E702D    ret
*}
end;

//004E7030
procedure TGroupBox.IsStoredBiDiMode(Value:TBiDiMode);
begin
{*
 004E7030    movzx       eax,byte ptr [eax+72];TGroupBox.FParentBiDiMode:Boolean
 004E7034    xor         al,1
 004E7036    ret
*}
end;

//004E7038
procedure TGroupBox.SetParentFont(Value:Boolean);
begin
{*
 004E7038    cmp         dl,byte ptr [eax+6B];TGroupBox.FParentFont:Boolean
>004E703B    je          004E705A
 004E703D    mov         byte ptr [eax+6B],dl;TGroupBox.FParentFont:Boolean
 004E7040    cmp         dword ptr [eax+40],0;TGroupBox.FParent:TWinControl
>004E7044    je          004E705A
 004E7046    test        byte ptr [eax+1C],2;TGroupBox.FComponentState:TComponentState
>004E704A    jne         004E705A
 004E704C    push        0
 004E704E    xor         ecx,ecx
 004E7050    mov         edx,0B008
 004E7055    call        TControl.Perform
 004E705A    ret
*}
end;

//004E705C
procedure TGroupBox.SetShowHint(Value:Boolean);
begin
{*
 004E705C    cmp         dl,byte ptr [eax+99];TGroupBox.FShowHint:Boolean
>004E7062    je          004E707F
 004E7064    mov         byte ptr [eax+99],dl;TGroupBox.FShowHint:Boolean
 004E706A    mov         byte ptr [eax+9A],0;TGroupBox.FParentShowHint:Boolean
 004E7071    push        0
 004E7073    xor         ecx,ecx
 004E7075    mov         edx,0B022
 004E707A    call        TControl.Perform
 004E707F    ret
*}
end;

//004E7080
procedure TGroupBox.SetParentShowHint(Value:Boolean);
begin
{*
 004E7080    cmp         dl,byte ptr [eax+9A];TGroupBox.FParentShowHint:Boolean
>004E7086    je          004E70A8
 004E7088    mov         byte ptr [eax+9A],dl;TGroupBox.FParentShowHint:Boolean
 004E708E    cmp         dword ptr [eax+40],0;TGroupBox.FParent:TWinControl
>004E7092    je          004E70A8
 004E7094    test        byte ptr [eax+1C],2;TGroupBox.FComponentState:TComponentState
>004E7098    jne         004E70A8
 004E709A    push        0
 004E709C    xor         ecx,ecx
 004E709E    mov         edx,0B023
 004E70A3    call        TControl.Perform
 004E70A8    ret
*}
end;

//004E70AC
procedure TControl.SetParentCustomHint(Value:Boolean);
begin
{*
 004E70AC    cmp         dl,byte ptr [eax+180];TControl.FParentCustomHint:Boolean
>004E70B2    je          004E70BA
 004E70B4    mov         byte ptr [eax+180],dl;TControl.FParentCustomHint:Boolean
 004E70BA    ret
*}
end;

//004E70BC
procedure TGroupBox.SetColor(Value:TColor);
begin
{*
 004E70BC    push        ebx
 004E70BD    mov         ebx,eax
 004E70BF    cmp         edx,dword ptr [ebx+7C];TGroupBox.FColor:TColor
>004E70C2    je          004E7104
 004E70C4    mov         dword ptr [ebx+7C],edx;TGroupBox.FColor:TColor
 004E70C7    mov         byte ptr [ebx+6C],0;TGroupBox.FParentColor:Boolean
 004E70CB    test        byte ptr [ebx+1C],10;TGroupBox.FComponentState:TComponentState
>004E70CF    je          004E70F4
 004E70D1    test        byte ptr [ebx+1C],2;TGroupBox.FComponentState:TComponentState
>004E70D5    jne         004E70F4
 004E70D7    mov         eax,ebx
 004E70D9    mov         edx,dword ptr ds:[4DE8CC];TWinControl
 004E70DF    call        @IsClass
 004E70E4    test        al,al
>004E70E6    je          004E70F4
 004E70E8    xor         edx,edx
 004E70EA    mov         eax,ebx
 004E70EC    mov         ecx,dword ptr [eax]
 004E70EE    call        dword ptr [ecx+0F0];TGroupBox.SetParentBackground
 004E70F4    push        0
 004E70F6    xor         ecx,ecx
 004E70F8    mov         edx,0B00D
 004E70FD    mov         eax,ebx
 004E70FF    call        TControl.Perform
 004E7104    pop         ebx
 004E7105    ret
*}
end;

//004E7108
procedure TGroupBox.IsStoredColor(Value:TColor);
begin
{*
 004E7108    movzx       eax,byte ptr [eax+6C];TGroupBox.FParentColor:Boolean
 004E710C    xor         al,1
 004E710E    ret
*}
end;

//004E7110
procedure TGroupBox.SetParentColor(Value:Boolean);
begin
{*
 004E7110    cmp         dl,byte ptr [eax+6C];TGroupBox.FParentColor:Boolean
>004E7113    je          004E7132
 004E7115    mov         byte ptr [eax+6C],dl;TGroupBox.FParentColor:Boolean
 004E7118    cmp         dword ptr [eax+40],0;TGroupBox.FParent:TWinControl
>004E711C    je          004E7132
 004E711E    test        byte ptr [eax+1C],2;TGroupBox.FComponentState:TComponentState
>004E7122    jne         004E7132
 004E7124    push        0
 004E7126    xor         ecx,ecx
 004E7128    mov         edx,0B009
 004E712D    call        TControl.Perform
 004E7132    ret
*}
end;

//004E7134
procedure TGroupBox.SetParentBiDiMode(Value:Boolean);
begin
{*
 004E7134    cmp         dl,byte ptr [eax+72];TGroupBox.FParentBiDiMode:Boolean
>004E7137    je          004E7156
 004E7139    mov         byte ptr [eax+72],dl;TGroupBox.FParentBiDiMode:Boolean
 004E713C    cmp         dword ptr [eax+40],0;TGroupBox.FParent:TWinControl
>004E7140    je          004E7156
 004E7142    test        byte ptr [eax+1C],2;TGroupBox.FComponentState:TComponentState
>004E7146    jne         004E7156
 004E7148    push        0
 004E714A    xor         ecx,ecx
 004E714C    mov         edx,0B03D
 004E7151    call        TControl.Perform
 004E7156    ret
*}
end;

//004E7158
procedure TControl.SetCursor(Value:TCursor);
begin
{*
 004E7158    cmp         dx,word ptr [eax+88];TControl.FCursor:TCursor
>004E715F    je          004E7176
 004E7161    mov         word ptr [eax+88],dx;TControl.FCursor:TCursor
 004E7168    push        0
 004E716A    xor         ecx,ecx
 004E716C    mov         edx,0B00F
 004E7171    call        TControl.Perform
 004E7176    ret
*}
end;

//004E7178
function TControl.GetMouseCapture:Boolean;
begin
{*
 004E7178    push        ebx
 004E7179    mov         ebx,eax
 004E717B    call        GetCaptureControl
 004E7180    cmp         ebx,eax
 004E7182    sete        al
 004E7185    pop         ebx
 004E7186    ret
*}
end;

//004E7188
procedure TControl.SetMouseCapture(Value:Boolean);
begin
{*
 004E7188    push        ebx
 004E7189    push        esi
 004E718A    mov         ebx,edx
 004E718C    mov         esi,eax
 004E718E    mov         eax,esi
 004E7190    call        TControl.GetMouseCapture
 004E7195    cmp         bl,al
>004E7197    je          004E71AD
 004E7199    test        bl,bl
>004E719B    je          004E71A6
 004E719D    mov         eax,esi
 004E719F    call        SetCaptureControl
>004E71A4    jmp         004E71AD
 004E71A6    xor         eax,eax
 004E71A8    call        SetCaptureControl
 004E71AD    pop         esi
 004E71AE    pop         ebx
 004E71AF    ret
*}
end;

//004E71B0
procedure TControl.BringToFront;
begin
{*
 004E71B0    push        esi
 004E71B1    mov         dl,1
 004E71B3    mov         si,0FFCE
 004E71B7    call        @CallDynaInst;TControl.sub_004E724C
 004E71BC    pop         esi
 004E71BD    ret
*}
end;

//004E71C0
procedure TControl.SetZOrderPosition(Position:Integer);
begin
{*
 004E71C0    push        ebx
 004E71C1    push        esi
 004E71C2    push        edi
 004E71C3    mov         esi,edx
 004E71C5    mov         ebx,eax
 004E71C7    mov         eax,dword ptr [ebx+40]
 004E71CA    test        eax,eax
>004E71CC    je          004E7247
 004E71CE    mov         eax,dword ptr [eax+1F0]
 004E71D4    mov         edx,ebx
 004E71D6    call        TList.IndexOf
 004E71DB    test        eax,eax
>004E71DD    jl          004E7247
 004E71DF    mov         edx,dword ptr [ebx+40]
 004E71E2    mov         edi,dword ptr [edx+1F0]
 004E71E8    mov         edx,dword ptr [edi+8]
 004E71EB    test        esi,esi
>004E71ED    jge         004E71F1
 004E71EF    xor         esi,esi
 004E71F1    cmp         edx,esi
>004E71F3    jg          004E71F8
 004E71F5    mov         esi,edx
 004E71F7    dec         esi
 004E71F8    cmp         eax,esi
>004E71FA    je          004E7247
 004E71FC    mov         edx,edi
 004E71FE    xchg        eax,edx
 004E71FF    call        TList.Delete
 004E7204    mov         eax,dword ptr [ebx+40]
 004E7207    mov         eax,dword ptr [eax+1F0]
 004E720D    mov         ecx,ebx
 004E720F    mov         edx,esi
 004E7211    call        TList.Insert
 004E7216    mov         cl,1
 004E7218    movzx       edx,byte ptr [ebx+69]
 004E721C    mov         eax,ebx
 004E721E    call        004E73DC
 004E7223    test        byte ptr [ebx+1C],1
>004E7227    jne         004E7247
 004E7229    mov         dl,1
 004E722B    mov         eax,ebx
 004E722D    call        ValidParentForm
 004E7232    mov         esi,eax
 004E7234    test        byte ptr [esi+64],4
>004E7238    je          004E7247
 004E723A    mov         dl,1
 004E723C    mov         eax,esi
 004E723E    mov         si,0FFD0
 004E7242    call        @CallDynaInst
 004E7247    pop         edi
 004E7248    pop         esi
 004E7249    pop         ebx
 004E724A    ret
*}
end;

//004E724C
{*procedure TControl.sub_004E724C(?:?);
begin
 004E724C    mov         ecx,dword ptr [eax+40];TControl.FParent:TWinControl
 004E724F    test        ecx,ecx
>004E7251    je          004E726F
 004E7253    test        dl,dl
>004E7255    je          004E7268
 004E7257    mov         edx,dword ptr [ecx+1F0];TWinControl.FControls:TList
 004E725D    mov         edx,dword ptr [edx+8];TList.FCount:Integer
 004E7260    dec         edx
 004E7261    call        TControl.SetZOrderPosition
>004E7266    jmp         004E726F
 004E7268    xor         edx,edx
 004E726A    call        TControl.SetZOrderPosition
 004E726F    ret
end;*}

//004E7270
procedure TControl.SetCustomHint(Value:TCustomHint);
begin
{*
 004E7270    push        ebx
 004E7271    mov         ebx,eax
 004E7273    mov         dword ptr [ebx+17C],edx;TControl.FCustomHint:TCustomHint
 004E7279    test        edx,edx
>004E727B    je          004E7286
 004E727D    mov         eax,edx
 004E727F    mov         edx,ebx
 004E7281    call        TComponent.FreeNotification
 004E7286    cmp         byte ptr [ebx+180],0;TControl.FParentCustomHint:Boolean
>004E728D    je          004E72A5
 004E728F    mov         eax,ebx
 004E7291    call        TControl.GetCustomHint
 004E7296    cmp         eax,dword ptr [ebx+17C];TControl.FCustomHint:TCustomHint
>004E729C    je          004E72A5
 004E729E    mov         byte ptr [ebx+180],0;TControl.FParentCustomHint:Boolean
 004E72A5    pop         ebx
 004E72A6    ret
*}
end;

//004E72A8
{*function sub_004E72A8(?:?):?;
begin
 004E72A8    push        ebp
 004E72A9    mov         ebp,esp
 004E72AB    add         esp,0FFFFFFF4
 004E72AE    push        ebx
 004E72AF    push        esi
 004E72B0    push        edi
 004E72B1    xor         ecx,ecx
 004E72B3    mov         dword ptr [ebp-0C],ecx
 004E72B6    mov         edi,edx
 004E72B8    mov         esi,eax
 004E72BA    xor         eax,eax
 004E72BC    push        ebp
 004E72BD    push        4E7343
 004E72C2    push        dword ptr fs:[eax]
 004E72C5    mov         dword ptr fs:[eax],esp
 004E72C8    cmp         dword ptr [esi+40],0;TControl.FParent:TWinControl
>004E72CC    jne         004E72FF
 004E72CE    mov         eax,dword ptr [esi+8];TControl.FName:TComponentName
 004E72D1    mov         dword ptr [ebp-8],eax
 004E72D4    mov         byte ptr [ebp-4],11
 004E72D8    lea         eax,[ebp-8]
 004E72DB    push        eax
 004E72DC    push        0
 004E72DE    lea         edx,[ebp-0C]
 004E72E1    mov         eax,[007C4B08];^SResString231:TResStringRec
 004E72E6    call        LoadResString
 004E72EB    mov         ecx,dword ptr [ebp-0C]
 004E72EE    mov         dl,1
 004E72F0    mov         eax,[0046BE9C];EInvalidOperation
 004E72F5    call        Exception.CreateFmt;EInvalidOperation.Create
 004E72FA    call        @RaiseExcept
 004E72FF    mov         edx,edi
 004E7301    mov         eax,dword ptr [esi+40];TControl.FParent:TWinControl
 004E7304    mov         ecx,dword ptr [eax]
 004E7306    call        dword ptr [ecx+68];TWinControl.sub_004EFB74
 004E7309    mov         ebx,eax
 004E730B    push        0
 004E730D    mov         eax,dword ptr [esi+54];TControl.FTop:Integer
 004E7310    push        eax
 004E7311    mov         eax,dword ptr [esi+50];TControl.FLeft:Integer
 004E7314    push        eax
 004E7315    push        ebx
 004E7316    call        gdi32.SetViewportOrgEx
 004E731B    mov         eax,dword ptr [esi+5C];TControl.FHeight:Integer
 004E731E    push        eax
 004E731F    mov         eax,dword ptr [esi+58];TControl.FWidth:Integer
 004E7322    push        eax
 004E7323    push        0
 004E7325    push        0
 004E7327    push        ebx
 004E7328    call        gdi32.IntersectClipRect
 004E732D    xor         eax,eax
 004E732F    pop         edx
 004E7330    pop         ecx
 004E7331    pop         ecx
 004E7332    mov         dword ptr fs:[eax],edx
 004E7335    push        4E734A
 004E733A    lea         eax,[ebp-0C]
 004E733D    call        @UStrClr
 004E7342    ret
>004E7343    jmp         @HandleFinally
>004E7348    jmp         004E733A
 004E734A    mov         eax,ebx
 004E734C    pop         edi
 004E734D    pop         esi
 004E734E    pop         ebx
 004E734F    mov         esp,ebp
 004E7351    pop         ebp
 004E7352    ret
end;*}

//004E7354
{*function sub_004E7354(?:?):?;
begin
 004E7354    push        ebp
 004E7355    mov         ebp,esp
 004E7357    add         esp,0FFFFFFDC
 004E735A    push        ebx
 004E735B    push        esi
 004E735C    push        edi
 004E735D    mov         byte ptr [ebp-1],1
 004E7361    mov         eax,dword ptr [ebp+8]
 004E7364    mov         eax,dword ptr [eax-14]
 004E7367    mov         eax,dword ptr [eax+40]
 004E736A    mov         edi,dword ptr [eax+1F0]
 004E7370    mov         eax,dword ptr [ebp+8]
 004E7373    mov         edx,dword ptr [eax-14]
 004E7376    mov         eax,edi
 004E7378    call        TList.IndexOf
 004E737D    mov         esi,eax
 004E737F    test        esi,esi
>004E7381    jle         004E73CC
 004E7383    dec         esi
 004E7384    mov         edx,esi
 004E7386    mov         eax,edi
 004E7388    call        TList.Get
 004E738D    mov         ebx,eax
 004E738F    cmp         byte ptr [ebx+69],0
>004E7393    je          004E73C8
 004E7395    test        byte ptr [ebx+60],40
>004E7399    je          004E73C8
 004E739B    lea         edx,[ebp-24]
 004E739E    mov         eax,ebx
 004E73A0    call        TControl.GetBoundsRect
 004E73A5    lea         ecx,[ebp-24]
 004E73A8    mov         eax,dword ptr [ebp+8]
 004E73AB    lea         edx,[eax-10]
 004E73AE    lea         eax,[ebp-14]
 004E73B1    call        IntersectRect
 004E73B6    mov         eax,dword ptr [ebp+8]
 004E73B9    lea         edx,[eax-10]
 004E73BC    lea         eax,[ebp-14]
 004E73BF    call        EqualRect
 004E73C4    test        al,al
>004E73C6    jne         004E73D0
 004E73C8    test        esi,esi
>004E73CA    jg          004E7383
 004E73CC    mov         byte ptr [ebp-1],0
 004E73D0    movzx       eax,byte ptr [ebp-1]
 004E73D4    pop         edi
 004E73D5    pop         esi
 004E73D6    pop         ebx
 004E73D7    mov         esp,ebp
 004E73D9    pop         ebp
 004E73DA    ret
end;*}

//004E73DC
{*procedure sub_004E73DC(?:TControl; ?:Boolean; ?:?);
begin
 004E73DC    push        ebp
 004E73DD    mov         ebp,esp
 004E73DF    add         esp,0FFFFFFE8
 004E73E2    push        ebx
 004E73E3    mov         byte ptr [ebp-15],cl
 004E73E6    mov         ebx,edx
 004E73E8    mov         dword ptr [ebp-14],eax
 004E73EB    test        bl,bl
>004E73ED    jne         004E740A
 004E73EF    mov         eax,dword ptr [ebp-14]
 004E73F2    test        byte ptr [eax+1C],10;TControl.FComponentState:TComponentState
>004E73F6    je          004E746A
 004E73F8    mov         eax,dword ptr [ebp-14]
 004E73FB    test        byte ptr [eax+65],8;TControl.FAlign:TAlign
>004E73FF    jne         004E746A
 004E7401    mov         eax,dword ptr [ebp-14]
 004E7404    test        byte ptr [eax+61],4;TControl.FVisible:Boolean
>004E7408    jne         004E746A
 004E740A    mov         eax,dword ptr [ebp-14]
 004E740D    cmp         dword ptr [eax+40],0;TControl.FParent:TWinControl
>004E7411    je          004E746A
 004E7413    mov         eax,dword ptr [ebp-14]
 004E7416    mov         eax,dword ptr [eax+40];TControl.FParent:TWinControl
 004E7419    call        TWinControl.HandleAllocated
 004E741E    test        al,al
>004E7420    je          004E746A
 004E7422    lea         edx,[ebp-10]
 004E7425    mov         eax,dword ptr [ebp-14]
 004E7428    call        TControl.GetBoundsRect
 004E742D    cmp         byte ptr [ebp-15],0
>004E7431    jne         004E744A
 004E7433    mov         eax,dword ptr [ebp-14]
 004E7436    mov         eax,dword ptr [eax+40];TControl.FParent:TWinControl
 004E7439    test        byte ptr [eax+60],40;TWinControl.FControlStyle:TControlStyle
>004E743D    jne         004E744A
 004E743F    push        ebp
 004E7440    call        004E7354
 004E7445    pop         ecx
 004E7446    test        al,al
>004E7448    je          004E744E
 004E744A    xor         eax,eax
>004E744C    jmp         004E7450
 004E744E    mov         al,1
 004E7450    neg         al
 004E7452    sbb         eax,eax
 004E7454    push        eax
 004E7455    lea         eax,[ebp-10]
 004E7458    push        eax
 004E7459    mov         eax,dword ptr [ebp-14]
 004E745C    mov         eax,dword ptr [eax+40];TControl.FParent:TWinControl
 004E745F    call        TWinControl.GetHandle
 004E7464    push        eax
 004E7465    call        user32.InvalidateRect
 004E746A    pop         ebx
 004E746B    mov         esp,ebp
 004E746D    pop         ebp
 004E746E    ret
end;*}

//004E7470
procedure TControl.Invalidate;
begin
{*
 004E7470    test        byte ptr [eax+60],40;TControl.FControlStyle:TControlStyle
 004E7474    setne       cl
 004E7477    movzx       edx,byte ptr [eax+69];TControl.FVisible:Boolean
 004E747B    call        004E73DC
 004E7480    ret
*}
end;

//004E7484
{*procedure TControl.sub_004E7484(?:?; ?:?; ?:?; ?:?; ?:?);
begin
 004E7484    push        ebp
 004E7485    mov         ebp,esp
 004E7487    push        ecx
 004E7488    push        ebx
 004E7489    mov         word ptr [ebp-2],cx
 004E748D    mov         byte ptr [ebp-3],0
 004E7491    cmp         word ptr [eax+13A],0;TControl.?f13A:word
>004E7499    je          004E74C2
 004E749B    movzx       ecx,word ptr [ebp-2]
 004E749F    push        ecx
 004E74A0    mov         ecx,dword ptr [ebp+10]
 004E74A3    push        ecx
 004E74A4    mov         ecx,dword ptr [ebp+0C]
 004E74A7    push        ecx
 004E74A8    mov         ecx,dword ptr [ebp+8]
 004E74AB    push        ecx
 004E74AC    lea         ecx,[ebp-3]
 004E74AF    push        ecx
 004E74B0    mov         ecx,edx
 004E74B2    mov         ebx,eax
 004E74B4    mov         edx,eax
 004E74B6    mov         eax,dword ptr [ebx+13C];TControl.?f13C:dword
 004E74BC    call        dword ptr [ebx+138];TControl.FOnMouseActivate
 004E74C2    movzx       eax,byte ptr [ebp-3]
 004E74C6    pop         ebx
 004E74C7    pop         ecx
 004E74C8    pop         ebp
 004E74C9    ret         0C
end;*}

//004E74CC
procedure TControl.MouseWheelHandler(var Message:TMessage);
begin
{*
 004E74CC    push        ebx
 004E74CD    push        esi
 004E74CE    push        edi
 004E74CF    mov         edi,edx
 004E74D1    mov         ebx,eax
 004E74D3    mov         dl,1
 004E74D5    mov         eax,ebx
 004E74D7    call        GetParentForm
 004E74DC    mov         esi,eax
 004E74DE    call        GetCaptureControl
 004E74E3    test        eax,eax
>004E74E5    je          004E74FF
 004E74E7    cmp         esi,eax
>004E74E9    je          004E74FF
 004E74EB    cmp         ebx,eax
>004E74ED    je          004E74FF
 004E74EF    cmp         dword ptr [eax+40],0;TControl.FParent:TWinControl
>004E74F3    jne         004E74FF
 004E74F5    mov         edx,edi
 004E74F7    mov         ecx,dword ptr [eax]
 004E74F9    call        dword ptr [ecx+98];TControl.sub_004E841C
 004E74FF    cmp         dword ptr [edi+0C],0
>004E7503    jne         004E7532
 004E7505    test        esi,esi
>004E7507    je          004E751C
 004E7509    cmp         ebx,esi
>004E750B    je          004E751C
 004E750D    mov         edx,edi
 004E750F    mov         eax,esi
 004E7511    mov         si,0FFC8
 004E7515    call        @CallDynaInst;TCustomForm.sub_004E74CC
>004E751A    jmp         004E7532
 004E751C    mov         eax,dword ptr [edi+8]
 004E751F    push        eax
 004E7520    mov         ecx,dword ptr [edi+4]
 004E7523    mov         edx,0B043
 004E7528    mov         eax,ebx
 004E752A    call        TControl.Perform
 004E752F    mov         dword ptr [edi+0C],eax
 004E7532    pop         edi
 004E7533    pop         esi
 004E7534    pop         ebx
 004E7535    ret
*}
end;

//004E7538
procedure TControl.Hide;
begin
{*
 004E7538    xor         edx,edx
 004E753A    call        TControl.SetVisible
 004E753F    ret
*}
end;

//004E7540
procedure TControl.Update;
begin
{*
 004E7540    push        esi
 004E7541    push        edi
 004E7542    mov         esi,eax
 004E7544    mov         edi,dword ptr [esi+40];TControl.FParent:TWinControl
 004E7547    test        edi,edi
>004E7549    je          004E7555
 004E754B    mov         eax,edi
 004E754D    mov         edx,dword ptr [eax]
 004E754F    call        dword ptr [edx+0B4];TWinControl.Update
 004E7555    pop         edi
 004E7556    pop         esi
 004E7557    ret
*}
end;

//004E7558
procedure TControl.Refresh;
begin
{*
 004E7558    push        esi
 004E7559    mov         esi,eax
 004E755B    mov         eax,esi
 004E755D    mov         edx,dword ptr [eax]
 004E755F    call        dword ptr [edx+0AC]
 004E7565    pop         esi
 004E7566    ret
*}
end;

//004E7568
procedure TControl.Repaint;
begin
{*
 004E7568    push        ebp
 004E7569    mov         ebp,esp
 004E756B    add         esp,0FFFFFFF8
 004E756E    push        ebx
 004E756F    mov         dword ptr [ebp-4],eax
 004E7572    mov         eax,dword ptr [ebp-4]
 004E7575    cmp         byte ptr [eax+69],0;TControl.FVisible:Boolean
>004E7579    jne         004E7595
 004E757B    mov         eax,dword ptr [ebp-4]
 004E757E    test        byte ptr [eax+1C],10;TControl.FComponentState:TComponentState
>004E7582    je          004E765E
 004E7588    mov         eax,dword ptr [ebp-4]
 004E758B    test        byte ptr [eax+61],4;TControl.FVisible:Boolean
>004E758F    jne         004E765E
 004E7595    mov         eax,dword ptr [ebp-4]
 004E7598    cmp         dword ptr [eax+40],0;TControl.FParent:TWinControl
>004E759C    je          004E765E
 004E75A2    mov         eax,dword ptr [ebp-4]
 004E75A5    mov         eax,dword ptr [eax+40];TControl.FParent:TWinControl
 004E75A8    call        TWinControl.HandleAllocated
 004E75AD    test        al,al
>004E75AF    je          004E765E
 004E75B5    mov         eax,dword ptr [ebp-4]
 004E75B8    test        byte ptr [eax+60],40;TControl.FControlStyle:TControlStyle
>004E75BC    je          004E7648
 004E75C2    mov         eax,dword ptr [ebp-4]
 004E75C5    mov         eax,dword ptr [eax+40];TControl.FParent:TWinControl
 004E75C8    call        TWinControl.GetHandle
 004E75CD    push        eax
 004E75CE    call        user32.GetDC
 004E75D3    mov         dword ptr [ebp-8],eax
 004E75D6    xor         ecx,ecx
 004E75D8    push        ebp
 004E75D9    push        4E7641
 004E75DE    push        dword ptr fs:[ecx]
 004E75E1    mov         dword ptr fs:[ecx],esp
 004E75E4    mov         edx,dword ptr [ebp-4]
 004E75E7    mov         edx,dword ptr [edx+54];TControl.FTop:Integer
 004E75EA    mov         ecx,edx
 004E75EC    mov         ebx,dword ptr [ebp-4]
 004E75EF    add         ecx,dword ptr [ebx+5C];TControl.FHeight:Integer
 004E75F2    push        ecx
 004E75F3    mov         eax,dword ptr [ebp-4]
 004E75F6    mov         eax,dword ptr [eax+50];TControl.FLeft:Integer
 004E75F9    mov         ecx,eax
 004E75FB    mov         ebx,dword ptr [ebp-4]
 004E75FE    add         ecx,dword ptr [ebx+58];TControl.FWidth:Integer
 004E7601    push        ecx
 004E7602    push        edx
 004E7603    push        eax
 004E7604    mov         eax,dword ptr [ebp-8]
 004E7607    push        eax
 004E7608    call        gdi32.IntersectClipRect
 004E760D    mov         eax,dword ptr [ebp-4]
 004E7610    mov         eax,dword ptr [eax+40];TControl.FParent:TWinControl
 004E7613    mov         ecx,dword ptr [ebp-4]
 004E7616    mov         edx,dword ptr [ebp-8]
 004E7619    call        004ED400
 004E761E    xor         eax,eax
 004E7620    pop         edx
 004E7621    pop         ecx
 004E7622    pop         ecx
 004E7623    mov         dword ptr fs:[eax],edx
 004E7626    push        4E765E
 004E762B    mov         eax,dword ptr [ebp-8]
 004E762E    push        eax
 004E762F    mov         eax,dword ptr [ebp-4]
 004E7632    mov         eax,dword ptr [eax+40];TControl.FParent:TWinControl
 004E7635    call        TWinControl.GetHandle
 004E763A    push        eax
 004E763B    call        user32.ReleaseDC
 004E7640    ret
>004E7641    jmp         @HandleFinally
>004E7646    jmp         004E762B
 004E7648    mov         eax,dword ptr [ebp-4]
 004E764B    mov         edx,dword ptr [eax]
 004E764D    call        dword ptr [edx+0A8];TControl.Invalidate
 004E7653    mov         eax,dword ptr [ebp-4]
 004E7656    mov         edx,dword ptr [eax]
 004E7658    call        dword ptr [edx+0B4];TControl.Update
 004E765E    pop         ebx
 004E765F    pop         ecx
 004E7660    pop         ecx
 004E7661    pop         ebp
 004E7662    ret
*}
end;

//004E7664
procedure TControl.GetControlsAlignment;
begin
{*
 004E7664    xor         eax,eax
 004E7666    ret
*}
end;

//004E7668
function TControl.IsRightToLeft:Boolean;
begin
{*
 004E7668    mov         edx,dword ptr ds:[7C4EF4];^gvar_007C7CB8:Cardinal
 004E766E    cmp         byte ptr [edx+0D],0
>004E7672    je          004E767A
 004E7674    cmp         byte ptr [eax+71],0;TControl.FBiDiMode:TBiDiMode
>004E7678    jne         004E767D
 004E767A    xor         eax,eax
 004E767C    ret
 004E767D    mov         al,1
 004E767F    ret
*}
end;

//004E7680
function TControl.UseRightToLeftReading:Boolean;
begin
{*
 004E7680    mov         edx,dword ptr ds:[7C4EF4];^gvar_007C7CB8:Cardinal
 004E7686    cmp         byte ptr [edx+0D],0
>004E768A    je          004E7692
 004E768C    cmp         byte ptr [eax+71],0
>004E7690    jne         004E7695
 004E7692    xor         eax,eax
 004E7694    ret
 004E7695    mov         al,1
 004E7697    ret
*}
end;

//004E7698
procedure TControl.UseRightToLeftAlignment;
begin
{*
 004E7698    mov         edx,dword ptr ds:[7C4EF4];^gvar_007C7CB8:Cardinal
 004E769E    cmp         byte ptr [edx+0D],0
>004E76A2    je          004E76AA
 004E76A4    cmp         byte ptr [eax+71],1;TControl.FBiDiMode:TBiDiMode
>004E76A8    je          004E76AD
 004E76AA    xor         eax,eax
 004E76AC    ret
 004E76AD    mov         al,1
 004E76AF    ret
*}
end;

//004E76B0
function TControl.UseRightToLeftScrollBar:Boolean;
begin
{*
 004E76B0    mov         edx,dword ptr ds:[7C4EF4];^gvar_007C7CB8:Cardinal
 004E76B6    cmp         byte ptr [edx+0D],0
>004E76BA    je          004E76C5
 004E76BC    movzx       eax,byte ptr [eax+71]
 004E76C0    dec         eax
 004E76C1    sub         al,2
>004E76C3    jb          004E76C8
 004E76C5    xor         eax,eax
 004E76C7    ret
 004E76C8    mov         al,1
 004E76CA    ret
*}
end;

//004E76CC
procedure TControl.BeginAutoDrag;
begin
{*
 004E76CC    mov         edx,dword ptr ds:[7CA5D4];gvar_007CA5D4
 004E76D2    mov         ecx,dword ptr [edx+8]
 004E76D5    mov         edx,dword ptr ds:[7CA5D4];gvar_007CA5D4
 004E76DB    movzx       edx,byte ptr [edx+4]
 004E76DF    call        TControl.BeginDrag
 004E76E4    ret
*}
end;

//004E76E8
procedure TControl.BeginDrag(Immediate:Boolean; Threshold:Integer);
begin
{*
 004E76E8    push        ebx
 004E76E9    push        esi
 004E76EA    push        edi
 004E76EB    add         esp,0FFFFFFF0
 004E76EE    mov         esi,ecx
 004E76F0    mov         ebx,edx
 004E76F2    mov         edi,eax
 004E76F4    mov         eax,[007CA5D4];gvar_007CA5D4
 004E76F9    call        004F63DC
 004E76FE    test        al,al
>004E7700    je          004E770E
 004E7702    xor         edx,edx
 004E7704    mov         eax,[007CA5D4];gvar_007CA5D4
 004E7709    call        TMouse.SetPanningWindow
 004E770E    mov         eax,edi
 004E7710    mov         edx,dword ptr ds:[5B7120];TCustomForm
 004E7716    call        @IsClass
 004E771B    test        al,al
>004E771D    je          004E773F
 004E771F    cmp         byte ptr [edi+9B],1
>004E7726    je          004E773F
 004E7728    mov         ecx,dword ptr ds:[7C4AE4];^SResString261:TResStringRec
 004E772E    mov         dl,1
 004E7730    mov         eax,[0046BE9C];EInvalidOperation
 004E7735    call        Exception.CreateRes
 004E773A    call        @RaiseExcept
 004E773F    mov         eax,edi
 004E7741    call        004E8374
 004E7746    cmp         dword ptr ds:[7CA5F8],0;gvar_007CA5F8
>004E774D    je          004E775C
 004E774F    mov         eax,[007CA5F8];gvar_007CA5F8
 004E7754    cmp         eax,dword ptr ds:[7CA630]
>004E775A    jne         004E77C1
 004E775C    xor         eax,eax
 004E775E    mov         [007CA5F8],eax;gvar_007CA5F8
 004E7763    test        byte ptr [edi+64],1
>004E7767    je          004E779D
 004E7769    push        esp
 004E776A    call        user32.GetCursorPos
 004E776F    lea         ecx,[esp+8]
 004E7773    mov         edx,esp
 004E7775    mov         eax,edi
 004E7777    call        TControl.ScreenToClient
 004E777C    mov         eax,dword ptr [esp+8]
 004E7780    and         eax,0FFFF
 004E7785    mov         edx,dword ptr [esp+0C]
 004E7789    shl         edx,10
 004E778C    or          eax,edx
 004E778E    push        eax
 004E778F    xor         ecx,ecx
 004E7791    mov         edx,202
 004E7796    mov         eax,edi
 004E7798    call        TControl.Perform
 004E779D    test        esi,esi
>004E779F    jge         004E77A9
 004E77A1    mov         eax,[007CA5D4];gvar_007CA5D4
 004E77A6    mov         esi,dword ptr [eax+8]
 004E77A9    mov         eax,[007CA5F8];gvar_007CA5F8
 004E77AE    cmp         eax,dword ptr ds:[7CA630]
>004E77B4    je          004E77C1
 004E77B6    mov         ecx,esi
 004E77B8    mov         edx,ebx
 004E77BA    mov         eax,edi
 004E77BC    call        004E4BC8
 004E77C1    add         esp,10
 004E77C4    pop         edi
 004E77C5    pop         esi
 004E77C6    pop         ebx
 004E77C7    ret
*}
end;

//004E77C8
procedure TControl.sub_004E77C8;
begin
{*
 004E77C8    ret
*}
end;

//004E77CC
function TControl.Dragging:Boolean;
begin
{*
 004E77CC    cmp         eax,dword ptr ds:[7CA5F8];gvar_007CA5F8
 004E77D2    sete        al
 004E77D5    ret
*}
end;

//004E77D8
{*procedure TControl.sub_004E77D8(?:?; ?:?; ?:?; ?:?);
begin
 004E77D8    push        ebp
 004E77D9    mov         ebp,esp
 004E77DB    push        ebx
 004E77DC    push        esi
 004E77DD    mov         esi,dword ptr [ebp+8]
 004E77E0    mov         byte ptr [esi],0
 004E77E3    cmp         word ptr [eax+0F2],0;TControl.?fF2:word
>004E77EB    je          004E780D
 004E77ED    mov         byte ptr [esi],1
 004E77F0    push        ecx
 004E77F1    mov         ecx,dword ptr [ebp+10]
 004E77F4    push        ecx
 004E77F5    movzx       ecx,byte ptr [ebp+0C]
 004E77F9    push        ecx
 004E77FA    push        esi
 004E77FB    mov         ebx,eax
 004E77FD    mov         ecx,edx
 004E77FF    mov         edx,eax
 004E7801    mov         eax,dword ptr [ebx+0F4];TControl.?fF4:dword
 004E7807    call        dword ptr [ebx+0F0];TControl.FOnDragOver
 004E780D    pop         esi
 004E780E    pop         ebx
 004E780F    pop         ebp
 004E7810    ret         0C
end;*}

//004E7814
procedure TControl.DragDrop(Source:TObject; X:Integer; Y:Integer);
begin
{*
 004E7814    push        ebp
 004E7815    mov         ebp,esp
 004E7817    push        ebx
 004E7818    cmp         word ptr [eax+0EA],0;TControl.?fEA:word
>004E7820    je          004E7839
 004E7822    push        ecx
 004E7823    mov         ecx,dword ptr [ebp+8]
 004E7826    push        ecx
 004E7827    mov         ebx,eax
 004E7829    mov         ecx,edx
 004E782B    mov         edx,eax
 004E782D    mov         eax,dword ptr [ebx+0EC];TControl.?fEC:dword
 004E7833    call        dword ptr [ebx+0E8];TControl.FOnDragDrop
 004E7839    pop         ebx
 004E783A    pop         ebp
 004E783B    ret         4
*}
end;

//004E7840
{*procedure TControl.sub_004E7840(?:?);
begin
 004E7840    push        ebx
 004E7841    cmp         word ptr [eax+112],0;TControl.?f112:word
>004E7849    je          004E785D
 004E784B    mov         ecx,edx
 004E784D    mov         ebx,eax
 004E784F    mov         edx,eax
 004E7851    mov         eax,dword ptr [ebx+114];TControl.?f114:dword
 004E7857    call        dword ptr [ebx+110];TControl.FOnStartDrag
 004E785D    pop         ebx
 004E785E    ret
end;*}

//004E7860
{*procedure sub_004E7860(?:?; ?:?);
begin
 004E7860    mov         byte ptr [ecx],0
 004E7863    ret
end;*}

//004E7864
{*procedure sub_004E7864(?:?; ?:?);
begin
 004E7864    push        ebx
 004E7865    push        esi
 004E7866    mov         esi,ecx
 004E7868    mov         ebx,dword ptr [eax+0BC];TSpeedButton.FTouchManager:TTouchManager
 004E786E    movzx       ecx,byte ptr [ebx+10];TTouchManager.FInteractiveGestures:TInteractiveGestures
 004E7872    mov         byte ptr [edx],cl
 004E7874    movzx       eax,byte ptr [ebx+11];TTouchManager.FInteractiveGestureOptions:TInteractiveGestureOption...
 004E7878    mov         byte ptr [esi],al
 004E787A    pop         esi
 004E787B    pop         ebx
 004E787C    ret
end;*}

//004E7880
{*procedure TControl.sub_004E7880(?:?; ?:?);
begin
 004E7880    push        ebp
 004E7881    mov         ebp,esp
 004E7883    push        ebx
 004E7884    cmp         word ptr [eax+11A],0;TControl.?f11A:word
>004E788C    je          004E78A5
 004E788E    push        ecx
 004E788F    mov         ecx,dword ptr [ebp+8]
 004E7892    push        ecx
 004E7893    mov         ebx,eax
 004E7895    mov         ecx,edx
 004E7897    mov         edx,eax
 004E7899    mov         eax,dword ptr [ebx+11C];TControl.?f11C:dword
 004E789F    call        dword ptr [ebx+118];TControl.FOnEndDrag
 004E78A5    pop         ebx
 004E78A6    pop         ebp
 004E78A7    ret         4
end;*}

//004E78AC
{*procedure TControl.sub_004E78AC(?:?);
begin
 004E78AC    push        ebx
 004E78AD    push        esi
 004E78AE    push        edi
 004E78AF    push        ebp
 004E78B0    add         esp,0FFFFFFEC
 004E78B3    mov         ebx,edx
 004E78B5    cmp         dword ptr [ebx+14],0
>004E78B9    je          004E78C7
 004E78BB    mov         eax,dword ptr [ebx+14]
 004E78BE    cmp         byte ptr [eax+206],0
>004E78C5    jne         004E7934
 004E78C7    mov         eax,dword ptr [ebx+40]
 004E78CA    call        004E6E88
 004E78CF    mov         edi,eax
 004E78D1    mov         eax,dword ptr [ebx+40]
 004E78D4    call        004E6E74
 004E78D9    mov         ebp,eax
 004E78DB    fild        dword ptr [ebx+0C]
 004E78DE    mov         dword ptr [esp+10],edi
 004E78E2    fild        dword ptr [esp+10]
 004E78E6    fmul        qword ptr [ebx+28]
 004E78E9    fsubp       st(1),st
 004E78EB    fstp        qword ptr [esp]
 004E78EE    wait
 004E78EF    fild        dword ptr [ebx+10]
 004E78F2    mov         dword ptr [esp+10],ebp
 004E78F6    fild        dword ptr [esp+10]
 004E78FA    fmul        qword ptr [ebx+30]
 004E78FD    fsubp       st(1),st
 004E78FF    fstp        qword ptr [esp+8]
 004E7903    wait
 004E7904    lea         esi,[ebx+4C]
 004E7907    fld         qword ptr [esp]
 004E790A    call        @ROUND
 004E790F    mov         dword ptr [esi],eax
 004E7911    fld         qword ptr [esp+8]
 004E7915    call        @ROUND
 004E791A    mov         dword ptr [esi+4],eax
 004E791D    add         edi,dword ptr [esi]
 004E791F    mov         dword ptr [esi+8],edi
 004E7922    add         ebp,dword ptr [esi+4]
 004E7925    mov         dword ptr [esi+0C],ebp
 004E7928    lea         edx,[ebx+4C]
 004E792B    mov         eax,ebx
 004E792D    mov         ecx,dword ptr [eax]
 004E792F    call        dword ptr [ecx+2C]
>004E7932    jmp         004E7975
 004E7934    lea         eax,[ebx+4C]
 004E7937    push        eax
 004E7938    mov         eax,dword ptr [ebx+14]
 004E793B    call        TWinControl.GetHandle
 004E7940    push        eax
 004E7941    call        user32.GetWindowRect
 004E7946    mov         eax,dword ptr [ebx+14]
 004E7949    cmp         byte ptr [eax+206],0
>004E7950    je          004E7975
 004E7952    cmp         dword ptr [eax+1D8],0
>004E7959    je          004E7975
 004E795B    movzx       edx,byte ptr [ebx+5C]
 004E795F    push        edx
 004E7960    lea         edx,[ebx+4C]
 004E7963    push        edx
 004E7964    mov         eax,dword ptr [eax+1D8]
 004E796A    mov         ecx,dword ptr [ebx+60]
 004E796D    mov         edx,dword ptr [ebx+40]
 004E7970    mov         ebx,dword ptr [eax]
 004E7972    call        dword ptr [ebx+24]
 004E7975    add         esp,14
 004E7978    pop         ebp
 004E7979    pop         edi
 004E797A    pop         esi
 004E797B    pop         ebx
 004E797C    ret
end;*}

//004E7980
{*procedure TControl.sub_004E7980(?:?);
begin
 004E7980    push        ebp
 004E7981    mov         ebp,esp
 004E7983    push        esi
 004E7984    push        edi
 004E7985    mov         edi,edx
 004E7987    mov         esi,eax
 004E7989    mov         edx,edi
 004E798B    mov         eax,esi
 004E798D    mov         si,0FFD1
 004E7991    call        @CallDynaInst;TControl.sub_004E78AC
 004E7996    pop         edi
 004E7997    pop         esi
 004E7998    pop         ebp
 004E7999    ret         4
end;*}

//004E799C
{*procedure TControl.sub_004E799C(?:?; ?:?);
begin
 004E799C    push        ebp
 004E799D    mov         ebp,esp
 004E799F    push        ebx
 004E79A0    cmp         word ptr [eax+10A],0;TControl.?f10A:word
>004E79A8    je          004E79C1
 004E79AA    push        ecx
 004E79AB    mov         ecx,dword ptr [ebp+8]
 004E79AE    push        ecx
 004E79AF    mov         ebx,eax
 004E79B1    mov         ecx,edx
 004E79B3    mov         edx,eax
 004E79B5    mov         eax,dword ptr [ebx+10C];TControl.?f10C:dword
 004E79BB    call        dword ptr [ebx+108];TControl.FOnEndDock
 004E79C1    pop         ebx
 004E79C2    pop         ebp
 004E79C3    ret         4
end;*}

//004E79C8
{*procedure TControl.sub_004E79C8(?:?);
begin
 004E79C8    push        ebx
 004E79C9    push        esi
 004E79CA    push        ecx
 004E79CB    mov         ebx,edx
 004E79CD    cmp         word ptr [eax+102],0;TControl.?f102:word
>004E79D5    je          004E79F3
 004E79D7    mov         edx,dword ptr [ebx]
 004E79D9    mov         dword ptr [esp],edx
 004E79DC    mov         ecx,esp
 004E79DE    mov         esi,eax
 004E79E0    mov         edx,eax
 004E79E2    mov         eax,dword ptr [esi+104];TControl.?f104:dword
 004E79E8    call        dword ptr [esi+100];TControl.FOnStartDock
 004E79EE    mov         eax,dword ptr [esp]
 004E79F1    mov         dword ptr [ebx],eax
 004E79F3    pop         edx
 004E79F4    pop         esi
 004E79F5    pop         ebx
 004E79F6    ret
end;*}

//004E79F8
{*procedure sub_004E79F8(?:TControl; ?:?);
begin
 004E79F8    push        ebx
 004E79F9    push        esi
 004E79FA    push        edi
 004E79FB    push        ebp
 004E79FC    mov         ebx,edx
 004E79FE    mov         ebp,eax
 004E7A00    mov         edi,dword ptr [ebx+8]
 004E7A03    mov         eax,dword ptr [edi]
 004E7A05    push        eax
 004E7A06    mov         eax,dword ptr [edi+4]
 004E7A09    push        eax
 004E7A0A    mov         eax,dword ptr [edi+8]
 004E7A0D    push        eax
 004E7A0E    movzx       edx,byte ptr [edi+0C]
 004E7A12    movzx       ecx,word ptr [edi+0D]
 004E7A16    mov         eax,ebp
 004E7A18    mov         si,0FFD5
 004E7A1C    call        @CallDynaInst
 004E7A21    and         eax,7F
 004E7A24    mov         dword ptr [ebx+0C],eax
 004E7A27    pop         ebp
 004E7A28    pop         edi
 004E7A29    pop         esi
 004E7A2A    pop         ebx
 004E7A2B    ret
end;*}

//004E7A2C
{*procedure TControl.sub_004E7A2C(?:?; ?:?; ?:?);
begin
 004E7A2C    push        ebp
 004E7A2D    mov         ebp,esp
 004E7A2F    add         esp,0FFFFFFF0
 004E7A32    push        ebx
 004E7A33    push        esi
 004E7A34    push        edi
 004E7A35    mov         esi,dword ptr [ebp+8]
 004E7A38    lea         edi,[ebp-0C]
 004E7A3B    movs        dword ptr [edi],dword ptr [esi]
 004E7A3C    movs        dword ptr [edi],dword ptr [esi]
 004E7A3D    mov         esi,ecx
 004E7A3F    mov         word ptr [ebp-2],dx
 004E7A43    mov         ebx,eax
 004E7A45    mov         byte ptr [ebp-0D],0
 004E7A49    cmp         word ptr [ebx+152],0;TControl.?f152:word
>004E7A51    je          004E7A6E
 004E7A53    push        esi
 004E7A54    lea         eax,[ebp-0C]
 004E7A57    push        eax
 004E7A58    lea         eax,[ebp-0D]
 004E7A5B    push        eax
 004E7A5C    movzx       ecx,word ptr [ebp-2]
 004E7A60    mov         edx,ebx
 004E7A62    mov         eax,dword ptr [ebx+154];TControl.?f154:dword
 004E7A68    call        dword ptr [ebx+150];TControl.FOnMouseWheel
 004E7A6E    cmp         byte ptr [ebp-0D],0
>004E7A72    jne         004E7AED
 004E7A74    add         dword ptr [ebx+0A4],esi;TControl.FWheelAccumulator:Integer
>004E7A7A    jmp         004E7ADB
 004E7A7C    test        edi,edi
 004E7A7E    setl        byte ptr [ebp-0E]
 004E7A82    mov         eax,edi
 004E7A84    cdq
 004E7A85    xor         eax,edx
 004E7A87    sub         eax,edx
 004E7A89    sub         eax,78
 004E7A8C    mov         dword ptr [ebx+0A4],eax;TControl.FWheelAccumulator:Integer
 004E7A92    cmp         byte ptr [ebp-0E],0
>004E7A96    je          004E7AC6
 004E7A98    cmp         dword ptr [ebx+0A4],0;TControl.FWheelAccumulator:Integer
>004E7A9F    je          004E7AAF
 004E7AA1    mov         eax,dword ptr [ebx+0A4];TControl.FWheelAccumulator:Integer
 004E7AA7    neg         eax
 004E7AA9    mov         dword ptr [ebx+0A4],eax;TControl.FWheelAccumulator:Integer
 004E7AAF    lea         ecx,[ebp-0C]
 004E7AB2    movzx       edx,word ptr [ebp-2]
 004E7AB6    mov         eax,ebx
 004E7AB8    mov         si,0FFE2
 004E7ABC    call        @CallDynaInst;TControl.DoMouseWheelUp
 004E7AC1    mov         byte ptr [ebp-0D],al
>004E7AC4    jmp         004E7ADB
 004E7AC6    lea         ecx,[ebp-0C]
 004E7AC9    movzx       edx,word ptr [ebp-2]
 004E7ACD    mov         eax,ebx
 004E7ACF    mov         si,0FFE1
 004E7AD3    call        @CallDynaInst;TControl.sub_004E7B48
 004E7AD8    mov         byte ptr [ebp-0D],al
 004E7ADB    mov         edi,dword ptr [ebx+0A4];TControl.FWheelAccumulator:Integer
 004E7AE1    mov         eax,edi
 004E7AE3    cdq
 004E7AE4    xor         eax,edx
 004E7AE6    sub         eax,edx
 004E7AE8    cmp         eax,78
>004E7AEB    jge         004E7A7C
 004E7AED    movzx       eax,byte ptr [ebp-0D]
 004E7AF1    pop         edi
 004E7AF2    pop         esi
 004E7AF3    pop         ebx
 004E7AF4    mov         esp,ebp
 004E7AF6    pop         ebp
 004E7AF7    ret         4
end;*}

//004E7AFC
procedure TControl.DoMouseWheelUp(Shift:Classes.TShiftState; MousePos:Types.TPoint);
begin
{*
 004E7AFC    push        ebx
 004E7AFD    push        esi
 004E7AFE    push        edi
 004E7AFF    add         esp,0FFFFFFF0
 004E7B02    mov         esi,ecx
 004E7B04    lea         edi,[esp+4]
 004E7B08    movs        dword ptr [edi],dword ptr [esi]
 004E7B09    movs        dword ptr [edi],dword ptr [esi]
 004E7B0A    mov         word ptr [esp],dx
 004E7B0E    mov         byte ptr [esp+0C],0
 004E7B13    cmp         word ptr [eax+15A],0
>004E7B1B    je          004E7B3C
 004E7B1D    lea         edx,[esp+4]
 004E7B21    push        edx
 004E7B22    lea         edx,[esp+10]
 004E7B26    push        edx
 004E7B27    mov         ebx,eax
 004E7B29    movzx       ecx,word ptr [esp+8]
 004E7B2E    mov         edx,eax
 004E7B30    mov         eax,dword ptr [ebx+15C]
 004E7B36    call        dword ptr [ebx+158]
 004E7B3C    movzx       eax,byte ptr [esp+0C]
 004E7B41    add         esp,10
 004E7B44    pop         edi
 004E7B45    pop         esi
 004E7B46    pop         ebx
 004E7B47    ret
*}
end;

//004E7B48
{*procedure TControl.sub_004E7B48(?:?; ?:?);
begin
 004E7B48    push        ebx
 004E7B49    push        esi
 004E7B4A    push        edi
 004E7B4B    add         esp,0FFFFFFF0
 004E7B4E    mov         esi,ecx
 004E7B50    lea         edi,[esp+4]
 004E7B54    movs        dword ptr [edi],dword ptr [esi]
 004E7B55    movs        dword ptr [edi],dword ptr [esi]
 004E7B56    mov         word ptr [esp],dx
 004E7B5A    mov         byte ptr [esp+0C],0
 004E7B5F    cmp         word ptr [eax+162],0;TControl.?f162:word
>004E7B67    je          004E7B88
 004E7B69    lea         edx,[esp+4]
 004E7B6D    push        edx
 004E7B6E    lea         edx,[esp+10]
 004E7B72    push        edx
 004E7B73    mov         ebx,eax
 004E7B75    movzx       ecx,word ptr [esp+8]
 004E7B7A    mov         edx,eax
 004E7B7C    mov         eax,dword ptr [ebx+164];TControl.?f164:dword
 004E7B82    call        dword ptr [ebx+160];TControl.FOnMouseWheelUp
 004E7B88    movzx       eax,byte ptr [esp+0C]
 004E7B8D    add         esp,10
 004E7B90    pop         edi
 004E7B91    pop         esi
 004E7B92    pop         ebx
 004E7B93    ret
end;*}

//004E7B94
{*procedure TControl.sub_004E7B94(?:?; ?:?);
begin
 004E7B94    push        ebp
 004E7B95    mov         ebp,esp
 004E7B97    add         esp,0FFFFFFDC
 004E7B9A    push        ebx
 004E7B9B    push        esi
 004E7B9C    push        edi
 004E7B9D    mov         byte ptr [ebp-5],cl
 004E7BA0    mov         esi,edx
 004E7BA2    mov         dword ptr [ebp-4],eax
 004E7BA5    mov         eax,esi
 004E7BA7    mov         edx,dword ptr [eax]
 004E7BA9    call        dword ptr [edx+38]
 004E7BAC    mov         ebx,eax
 004E7BAE    cmp         byte ptr [ebp-5],0
>004E7BB2    je          004E7BC2
 004E7BB4    push        esi
 004E7BB5    add         esi,64
 004E7BB8    lea         edi,[ebp-24]
 004E7BBB    movs        dword ptr [edi],dword ptr [esi]
 004E7BBC    movs        dword ptr [edi],dword ptr [esi]
 004E7BBD    movs        dword ptr [edi],dword ptr [esi]
 004E7BBE    movs        dword ptr [edi],dword ptr [esi]
 004E7BBF    pop         esi
>004E7BC0    jmp         004E7BCE
 004E7BC2    push        esi
 004E7BC3    add         esi,4C
 004E7BC6    lea         edi,[ebp-24]
 004E7BC9    movs        dword ptr [edi],dword ptr [esi]
 004E7BCA    movs        dword ptr [edi],dword ptr [esi]
 004E7BCB    movs        dword ptr [edi],dword ptr [esi]
 004E7BCC    movs        dword ptr [edi],dword ptr [esi]
 004E7BCD    pop         esi
 004E7BCE    call        user32.GetDesktopWindow
 004E7BD3    mov         dword ptr [ebp-0C],eax
 004E7BD6    push        402
 004E7BDB    push        0
 004E7BDD    mov         eax,dword ptr [ebp-0C]
 004E7BE0    push        eax
 004E7BE1    call        user32.GetDCEx
 004E7BE6    mov         dword ptr [ebp-10],eax
 004E7BE9    xor         eax,eax
 004E7BEB    push        ebp
 004E7BEC    push        4E7CB0
 004E7BF1    push        dword ptr fs:[eax]
 004E7BF4    mov         dword ptr fs:[eax],esp
 004E7BF7    mov         eax,dword ptr [esi+48]
 004E7BFA    call        TBrush.GetHandle
 004E7BFF    push        eax
 004E7C00    mov         eax,dword ptr [ebp-10]
 004E7C03    push        eax
 004E7C04    call        gdi32.SelectObject
 004E7C09    mov         dword ptr [ebp-14],eax
 004E7C0C    push        5A0049
 004E7C11    push        ebx
 004E7C12    mov         eax,dword ptr [ebp-1C]
 004E7C15    mov         esi,dword ptr [ebp-24]
 004E7C18    sub         eax,esi
 004E7C1A    sub         eax,ebx
 004E7C1C    push        eax
 004E7C1D    mov         edi,dword ptr [ebp-20]
 004E7C20    push        edi
 004E7C21    mov         eax,esi
 004E7C23    add         eax,ebx
 004E7C25    push        eax
 004E7C26    mov         eax,dword ptr [ebp-10]
 004E7C29    push        eax
 004E7C2A    call        gdi32.PatBlt
 004E7C2F    push        5A0049
 004E7C34    mov         eax,dword ptr [ebp-18]
 004E7C37    sub         eax,edi
 004E7C39    sub         eax,ebx
 004E7C3B    push        eax
 004E7C3C    push        ebx
 004E7C3D    mov         eax,edi
 004E7C3F    add         eax,ebx
 004E7C41    push        eax
 004E7C42    mov         eax,dword ptr [ebp-1C]
 004E7C45    sub         eax,ebx
 004E7C47    push        eax
 004E7C48    mov         eax,dword ptr [ebp-10]
 004E7C4B    push        eax
 004E7C4C    call        gdi32.PatBlt
 004E7C51    push        5A0049
 004E7C56    push        ebx
 004E7C57    mov         eax,dword ptr [ebp-1C]
 004E7C5A    sub         eax,esi
 004E7C5C    sub         eax,ebx
 004E7C5E    push        eax
 004E7C5F    mov         eax,dword ptr [ebp-18]
 004E7C62    sub         eax,ebx
 004E7C64    push        eax
 004E7C65    push        esi
 004E7C66    mov         eax,dword ptr [ebp-10]
 004E7C69    push        eax
 004E7C6A    call        gdi32.PatBlt
 004E7C6F    push        5A0049
 004E7C74    mov         eax,dword ptr [ebp-18]
 004E7C77    sub         eax,edi
 004E7C79    sub         eax,ebx
 004E7C7B    push        eax
 004E7C7C    push        ebx
 004E7C7D    push        edi
 004E7C7E    push        esi
 004E7C7F    mov         eax,dword ptr [ebp-10]
 004E7C82    push        eax
 004E7C83    call        gdi32.PatBlt
 004E7C88    mov         eax,dword ptr [ebp-14]
 004E7C8B    push        eax
 004E7C8C    mov         eax,dword ptr [ebp-10]
 004E7C8F    push        eax
 004E7C90    call        gdi32.SelectObject
 004E7C95    xor         eax,eax
 004E7C97    pop         edx
 004E7C98    pop         ecx
 004E7C99    pop         ecx
 004E7C9A    mov         dword ptr fs:[eax],edx
 004E7C9D    push        4E7CB7
 004E7CA2    mov         eax,dword ptr [ebp-10]
 004E7CA5    push        eax
 004E7CA6    mov         eax,dword ptr [ebp-0C]
 004E7CA9    push        eax
 004E7CAA    call        user32.ReleaseDC
 004E7CAF    ret
>004E7CB0    jmp         @HandleFinally
>004E7CB5    jmp         004E7CA2
 004E7CB7    pop         edi
 004E7CB8    pop         esi
 004E7CB9    pop         ebx
 004E7CBA    mov         esp,ebp
 004E7CBC    pop         ebp
 004E7CBD    ret
end;*}

//004E7CC0
{*procedure TControl.sub_004E7CC0(?:?);
begin
 004E7CC0    push        esi
 004E7CC1    push        edi
 004E7CC2    mov         edi,edx
 004E7CC4    mov         esi,eax
 004E7CC6    xor         ecx,ecx
 004E7CC8    mov         edx,edi
 004E7CCA    mov         eax,esi
 004E7CCC    mov         si,0FFE9
 004E7CD0    call        @CallDynaInst;TControl.sub_004E7B94
 004E7CD5    pop         edi
 004E7CD6    pop         esi
 004E7CD7    ret
end;*}

//004E7CD8
{*procedure TControl.sub_004E7CD8(?:?);
begin
 004E7CD8    push        esi
 004E7CD9    push        edi
 004E7CDA    mov         edi,edx
 004E7CDC    mov         esi,eax
 004E7CDE    mov         cl,1
 004E7CE0    mov         edx,edi
 004E7CE2    mov         eax,esi
 004E7CE4    mov         si,0FFE9
 004E7CE8    call        @CallDynaInst;TControl.sub_004E7B94
 004E7CED    pop         edi
 004E7CEE    pop         esi
 004E7CEF    ret
end;*}

//004E7CF0
procedure TControl.DoDragMsg(var DragMsg:TCMDrag);
begin
{*
 004E7CF0    push        ebx
 004E7CF1    push        esi
 004E7CF2    push        edi
 004E7CF3    push        ebp
 004E7CF4    add         esp,0FFFFFFF0
 004E7CF7    mov         ebp,edx
 004E7CF9    mov         dword ptr [esp],eax
 004E7CFC    mov         edi,dword ptr [ebp+8]
 004E7CFF    mov         esi,dword ptr [edi+8]
 004E7D02    mov         eax,esi
 004E7D04    mov         edx,dword ptr ds:[4D8B9C];TDragDockObject
 004E7D0A    call        @IsClass
 004E7D0F    mov         ebx,eax
 004E7D11    cmp         byte ptr ds:[7CA600],0;gvar_007CA600
>004E7D18    je          004E7D2E
 004E7D1A    test        bl,bl
>004E7D1C    jne         004E7D2E
 004E7D1E    mov         eax,esi
 004E7D20    mov         edx,dword ptr ds:[4D8948];TDragControlObject
 004E7D26    call        @AsClass
 004E7D2B    mov         esi,dword ptr [eax+40]
 004E7D2E    lea         ecx,[esp+8]
 004E7D32    mov         edx,edi
 004E7D34    mov         eax,dword ptr [esp]
 004E7D37    call        TControl.ScreenToClient
 004E7D3C    movzx       eax,byte ptr [ebp+4]
 004E7D40    sub         al,3
>004E7D42    jb          004E7D4B
>004E7D44    je          004E7DA3
>004E7D46    jmp         004E7DD8
 004E7D4B    mov         byte ptr [esp+4],1
 004E7D50    test        bl,bl
>004E7D52    je          004E7D77
 004E7D54    mov         eax,dword ptr [esp+0C]
 004E7D58    push        eax
 004E7D59    movzx       eax,byte ptr [ebp+4]
 004E7D5D    push        eax
 004E7D5E    lea         eax,[esp+0C]
 004E7D62    push        eax
 004E7D63    mov         ecx,dword ptr [esp+14]
 004E7D67    mov         edx,esi
 004E7D69    mov         eax,dword ptr [edi+0C]
 004E7D6C    mov         si,0FFC2
 004E7D70    call        @CallDynaInst
>004E7D75    jmp         004E7D99
 004E7D77    mov         eax,dword ptr [esp+0C]
 004E7D7B    push        eax
 004E7D7C    movzx       eax,byte ptr [ebp+4]
 004E7D80    push        eax
 004E7D81    lea         eax,[esp+0C]
 004E7D85    push        eax
 004E7D86    mov         ecx,dword ptr [esp+14]
 004E7D8A    mov         edx,esi
 004E7D8C    mov         eax,dword ptr [esp+0C]
 004E7D90    mov         si,0FFDF
 004E7D94    call        @CallDynaInst
 004E7D99    movzx       eax,byte ptr [esp+4]
 004E7D9E    mov         dword ptr [ebp+0C],eax
>004E7DA1    jmp         004E7DD8
 004E7DA3    test        bl,bl
>004E7DA5    je          004E7DC0
 004E7DA7    mov         eax,dword ptr [esp+0C]
 004E7DAB    push        eax
 004E7DAC    mov         ecx,dword ptr [esp+0C]
 004E7DB0    mov         edx,esi
 004E7DB2    mov         eax,dword ptr [edi+0C]
 004E7DB5    mov         si,0FFB3
 004E7DB9    call        @CallDynaInst
>004E7DBE    jmp         004E7DD8
 004E7DC0    mov         eax,dword ptr [esp+0C]
 004E7DC4    push        eax
 004E7DC5    mov         ecx,dword ptr [esp+0C]
 004E7DC9    mov         edx,esi
 004E7DCB    mov         eax,dword ptr [esp+4]
 004E7DCF    mov         si,0FFCA
 004E7DD3    call        @CallDynaInst
 004E7DD8    add         esp,10
 004E7DDB    pop         ebp
 004E7DDC    pop         edi
 004E7DDD    pop         esi
 004E7DDE    pop         ebx
 004E7DDF    ret
*}
end;

//004E7DE0
function TControl.ManualDock(NewDockSite:TWinControl; DropControl:TControl; ControlSide:TAlign):Boolean;
begin
{*
 004E7DE0    push        ebp
 004E7DE1    mov         ebp,esp
 004E7DE3    add         esp,0FFFFFFC4
 004E7DE6    push        ebx
 004E7DE7    push        esi
 004E7DE8    push        edi
 004E7DE9    mov         dword ptr [ebp-4],ecx
 004E7DEC    mov         edi,edx
 004E7DEE    mov         ebx,eax
 004E7DF0    test        edi,edi
>004E7DF2    je          004E7DFD
 004E7DF4    cmp         edi,0FFFFFFFF
>004E7DF7    jne         004E7EAC
 004E7DFD    mov         eax,dword ptr [ebx+0A0];TControl.FHostDockSite:TWinControl
 004E7E03    test        eax,eax
>004E7E05    je          004E7E44
 004E7E07    cmp         byte ptr [eax+206],0;TWinControl.FUseDockManager:Boolean
>004E7E0E    je          004E7E44
 004E7E10    cmp         dword ptr [eax+1D8],0;TWinControl.FDockManager:IDockManager
>004E7E17    je          004E7E44
 004E7E19    lea         ecx,[ebp-24]
 004E7E1C    mov         eax,dword ptr [eax+1D8];TWinControl.FDockManager:IDockManager
 004E7E22    mov         edx,ebx
 004E7E24    mov         esi,dword ptr [eax]
 004E7E26    call        dword ptr [esi+14]
 004E7E29    push        2
 004E7E2B    lea         eax,[ebp-24]
 004E7E2E    push        eax
 004E7E2F    push        0
 004E7E31    mov         eax,dword ptr [ebx+0A0];TControl.FHostDockSite:TWinControl
 004E7E37    call        TWinControl.GetHandle
 004E7E3C    push        eax
 004E7E3D    call        user32.MapWindowPoints
>004E7E42    jmp         004E7E70
 004E7E44    mov         eax,dword ptr [ebx+50];TControl.FLeft:Integer
 004E7E47    mov         dword ptr [ebp-24],eax
 004E7E4A    mov         eax,dword ptr [ebx+54];TControl.FTop:Integer
 004E7E4D    mov         dword ptr [ebp-20],eax
 004E7E50    mov         esi,dword ptr [ebx+40];TControl.FParent:TWinControl
 004E7E53    test        esi,esi
>004E7E55    je          004E7E70
 004E7E57    lea         ecx,[ebp-2C]
 004E7E5A    lea         edx,[ebp-24]
 004E7E5D    mov         eax,esi
 004E7E5F    call        TControl.ClientToScreen
 004E7E64    mov         eax,dword ptr [ebp-2C]
 004E7E67    mov         dword ptr [ebp-24],eax
 004E7E6A    mov         eax,dword ptr [ebp-28]
 004E7E6D    mov         dword ptr [ebp-20],eax
 004E7E70    mov         eax,ebx
 004E7E72    call        004E6E74
 004E7E77    push        eax
 004E7E78    lea         eax,[ebp-3C]
 004E7E7B    push        eax
 004E7E7C    mov         eax,ebx
 004E7E7E    call        004E6E88
 004E7E83    mov         ecx,eax
 004E7E85    mov         edx,dword ptr [ebp-20]
 004E7E88    mov         eax,dword ptr [ebp-24]
 004E7E8B    call        Bounds
 004E7E90    lea         esi,[ebp-3C]
 004E7E93    lea         edi,[ebp-24]
 004E7E96    movs        dword ptr [edi],dword ptr [esi]
 004E7E97    movs        dword ptr [edi],dword ptr [esi]
 004E7E98    movs        dword ptr [edi],dword ptr [esi]
 004E7E99    movs        dword ptr [edi],dword ptr [esi]
 004E7E9A    lea         edx,[ebp-24]
 004E7E9D    mov         eax,ebx
 004E7E9F    call        TControl.ManualFloat
 004E7EA4    mov         byte ptr [ebp-5],al
>004E7EA7    jmp         004E7FE5
 004E7EAC    mov         eax,ebx
 004E7EAE    call        004E8374
 004E7EB3    cmp         dword ptr [ebx+0A0],0;TControl.FHostDockSite:TWinControl
>004E7EBA    je          004E7ED7
 004E7EBC    mov         eax,dword ptr [ebx+0A0];TControl.FHostDockSite:TWinControl
 004E7EC2    mov         ecx,ebx
 004E7EC4    mov         edx,edi
 004E7EC6    mov         si,0FFBB
 004E7ECA    call        @CallDynaInst;TWinControl.sub_004EE574
 004E7ECF    test        al,al
>004E7ED1    jne         004E7ED7
 004E7ED3    xor         eax,eax
>004E7ED5    jmp         004E7ED9
 004E7ED7    mov         al,1
 004E7ED9    mov         byte ptr [ebp-5],al
 004E7EDC    cmp         byte ptr [ebp-5],0
>004E7EE0    je          004E7FE5
 004E7EE6    mov         ecx,ebx
 004E7EE8    mov         dl,1
 004E7EEA    mov         eax,[004D8B9C];TDragDockObject
 004E7EEF    call        TDragDockObject.Create;TDragDockObject.Create
 004E7EF4    mov         dword ptr [ebp-0C],eax
 004E7EF7    xor         edx,edx
 004E7EF9    push        ebp
 004E7EFA    push        4E7FDE
 004E7EFF    push        dword ptr fs:[edx]
 004E7F02    mov         dword ptr fs:[edx],esp
 004E7F05    mov         eax,dword ptr [ebx+0A0];TControl.FHostDockSite:TWinControl
 004E7F0B    test        eax,eax
>004E7F0D    je          004E7F18
 004E7F0F    call        TWinControl.GetHandle
 004E7F14    mov         esi,eax
>004E7F16    jmp         004E7F1A
 004E7F18    xor         esi,esi
 004E7F1A    lea         edx,[ebp-24]
 004E7F1D    mov         eax,ebx
 004E7F1F    call        TControl.GetBoundsRect
 004E7F24    test        esi,esi
>004E7F26    je          004E7F36
 004E7F28    push        2
 004E7F2A    lea         eax,[ebp-24]
 004E7F2D    push        eax
 004E7F2E    push        0
 004E7F30    push        esi
 004E7F31    call        user32.MapWindowPoints
 004E7F36    mov         eax,dword ptr [ebp-0C]
 004E7F39    mov         dword ptr [eax+14],edi;TDragDockObject.FDragTarget:Pointer
 004E7F3C    movzx       eax,byte ptr [ebp+8]
 004E7F40    mov         edx,dword ptr [ebp-0C]
 004E7F43    mov         byte ptr [edx+5C],al;TDragDockObject.FDropAlign:TAlign
 004E7F46    mov         eax,dword ptr [ebp-0C]
 004E7F49    mov         edx,dword ptr [ebp-4]
 004E7F4C    mov         dword ptr [eax+60],edx;TDragDockObject.FDropOnControl:TControl
 004E7F4F    mov         eax,dword ptr [ebp-0C]
 004E7F52    push        edi
 004E7F53    lea         edi,[eax+4C];TDragDockObject.FDockRect:TRect
 004E7F56    lea         esi,[ebp-24]
 004E7F59    movs        dword ptr [edi],dword ptr [esi]
 004E7F5A    movs        dword ptr [edi],dword ptr [esi]
 004E7F5B    movs        dword ptr [edi],dword ptr [esi]
 004E7F5C    movs        dword ptr [edi],dword ptr [esi]
 004E7F5D    pop         edi
 004E7F5E    mov         eax,dword ptr [ebp-24]
 004E7F61    mov         dword ptr [ebp-14],eax
 004E7F64    mov         eax,dword ptr [ebp-20]
 004E7F67    mov         dword ptr [ebp-10],eax
 004E7F6A    push        1
 004E7F6C    lea         eax,[ebp-14]
 004E7F6F    push        eax
 004E7F70    mov         eax,edi
 004E7F72    call        TWinControl.GetHandle
 004E7F77    push        eax
 004E7F78    push        0
 004E7F7A    call        user32.MapWindowPoints
 004E7F7F    mov         eax,dword ptr [ebp-14]
 004E7F82    cmp         eax,7FFF
>004E7F87    jg          004E7F90
 004E7F89    cmp         eax,0FFFF8000
>004E7F8E    jge         004E7F99
 004E7F90    shr         eax,10
 004E7F93    movsx       eax,ax
 004E7F96    mov         dword ptr [ebp-14],eax
 004E7F99    mov         eax,dword ptr [ebp-10]
 004E7F9C    cmp         eax,7FFF
>004E7FA1    jg          004E7FAA
 004E7FA3    cmp         eax,0FFFF8000
>004E7FA8    jge         004E7FB3
 004E7FAA    shr         eax,10
 004E7FAD    movsx       eax,ax
 004E7FB0    mov         dword ptr [ebp-10],eax
 004E7FB3    mov         eax,dword ptr [ebp-10]
 004E7FB6    push        eax
 004E7FB7    mov         ecx,dword ptr [ebp-14]
 004E7FBA    mov         edx,dword ptr [ebp-0C]
 004E7FBD    mov         eax,edi
 004E7FBF    mov         si,0FFB3
 004E7FC3    call        @CallDynaInst;TWinControl.sub_004EE4A8
 004E7FC8    xor         eax,eax
 004E7FCA    pop         edx
 004E7FCB    pop         ecx
 004E7FCC    pop         ecx
 004E7FCD    mov         dword ptr fs:[eax],edx
 004E7FD0    push        4E7FE5
 004E7FD5    mov         eax,dword ptr [ebp-0C]
 004E7FD8    call        TObject.Free
 004E7FDD    ret
>004E7FDE    jmp         @HandleFinally
>004E7FE3    jmp         004E7FD5
 004E7FE5    movzx       eax,byte ptr [ebp-5]
 004E7FE9    pop         edi
 004E7FEA    pop         esi
 004E7FEB    pop         ebx
 004E7FEC    mov         esp,ebp
 004E7FEE    pop         ebp
 004E7FEF    ret         4
*}
end;

//004E7FF4
function TControl.ManualFloat(ScreenPos:TRect):Boolean;
begin
{*
 004E7FF4    push        ebx
 004E7FF5    push        esi
 004E7FF6    push        edi
 004E7FF7    add         esp,0FFFFFFDC
 004E7FFA    mov         esi,edx
 004E7FFC    lea         edi,[esp+4]
 004E8000    movs        dword ptr [edi],dword ptr [esi]
 004E8001    movs        dword ptr [edi],dword ptr [esi]
 004E8002    movs        dword ptr [edi],dword ptr [esi]
 004E8003    movs        dword ptr [edi],dword ptr [esi]
 004E8004    mov         edi,eax
 004E8006    mov         ebx,dword ptr [edi+0A0];TControl.FHostDockSite:TWinControl
 004E800C    test        ebx,ebx
>004E800E    je          004E8027
 004E8010    mov         ecx,edi
 004E8012    xor         edx,edx
 004E8014    mov         eax,ebx
 004E8016    mov         si,0FFBB
 004E801A    call        @CallDynaInst;TWinControl.sub_004EE574
 004E801F    test        al,al
>004E8021    jne         004E8027
 004E8023    xor         eax,eax
>004E8025    jmp         004E8029
 004E8027    mov         al,1
 004E8029    mov         byte ptr [esp],al
 004E802C    cmp         byte ptr [esp],0
>004E8030    je          004E8086
 004E8032    lea         edx,[esp+4]
 004E8036    mov         eax,edi
 004E8038    call        004E962C
 004E803D    mov         esi,eax
 004E803F    test        esi,esi
>004E8041    je          004E8075
 004E8043    mov         eax,esi
 004E8045    call        TControl.GetClientHeight
 004E804A    push        eax
 004E804B    lea         eax,[esp+18]
 004E804F    push        eax
 004E8050    mov         eax,esi
 004E8052    call        TControl.GetClientWidth
 004E8057    mov         ecx,eax
 004E8059    xor         edx,edx
 004E805B    xor         eax,eax
 004E805D    call        Rect
 004E8062    lea         ecx,[esp+14]
 004E8066    mov         edx,esi
 004E8068    mov         eax,edi
 004E806A    mov         si,0FFCB
 004E806E    call        @CallDynaInst;TControl.sub_004E6558
>004E8073    jmp         004E8086
 004E8075    lea         ecx,[esp+4]
 004E8079    mov         edx,esi
 004E807B    mov         eax,edi
 004E807D    mov         si,0FFCB
 004E8081    call        @CallDynaInst;TControl.sub_004E6558
 004E8086    movzx       eax,byte ptr [esp]
 004E808A    add         esp,24
 004E808D    pop         edi
 004E808E    pop         esi
 004E808F    pop         ebx
 004E8090    ret
*}
end;

//004E8094
{*procedure sub_004E8094(?:?);
begin
 004E8094    push        esi
 004E8095    mov         esi,eax
 004E8097    mov         eax,esi
 004E8099    mov         si,0FFEE
 004E809D    call        @CallDynaInst
 004E80A2    pop         esi
 004E80A3    ret
end;*}

//004E80A4
{*function sub_004E80A4:?;
begin
 004E80A4    mov         al,1
 004E80A6    ret
end;*}

//004E80A8
{*function sub_004E80A8(?:?):?;
begin
 004E80A8    push        ebx
 004E80A9    push        ecx
 004E80AA    mov         byte ptr [esp],1
 004E80AE    cmp         word ptr [eax+0C2],0;TControl.?fC2:word
>004E80B6    je          004E80D0
 004E80B8    push        ecx
 004E80B9    lea         ecx,[esp+4]
 004E80BD    push        ecx
 004E80BE    mov         ecx,edx
 004E80C0    mov         ebx,eax
 004E80C2    mov         edx,eax
 004E80C4    mov         eax,dword ptr [ebx+0C4];TControl.?fC4:dword
 004E80CA    call        dword ptr [ebx+0C0];TControl.FOnCanResize
 004E80D0    movzx       eax,byte ptr [esp]
 004E80D4    pop         edx
 004E80D5    pop         ebx
 004E80D6    ret
end;*}

//004E80D8
{*function sub_004E80D8(?:?; ?:?; ?:?):?;
begin
 004E80D8    push        ebx
 004E80D9    push        esi
 004E80DA    add         esp,0FFFFFFF0
 004E80DD    mov         dword ptr [esp+4],ecx
 004E80E1    mov         dword ptr [esp],edx
 004E80E4    mov         esi,eax
 004E80E6    cmp         byte ptr [esi+6D],5
>004E80EA    je          004E813A
 004E80EC    mov         eax,dword ptr [esp]
 004E80EF    mov         eax,dword ptr [eax]
 004E80F1    mov         dword ptr [esp+8],eax
 004E80F5    mov         eax,dword ptr [esp+4]
 004E80F9    mov         eax,dword ptr [eax]
 004E80FB    mov         dword ptr [esp+0C],eax
 004E80FF    lea         ecx,[esp+0C]
 004E8103    lea         edx,[esp+8]
 004E8107    mov         eax,esi
 004E8109    mov         ebx,dword ptr [eax]
 004E810B    call        dword ptr [ebx+48]
 004E810E    movzx       edx,byte ptr [esi+6D]
 004E8112    mov         ecx,edx
 004E8114    test        cl,cl
>004E8116    je          004E8120
 004E8118    add         cl,0FD
 004E811B    sub         cl,2
>004E811E    jae         004E8129
 004E8120    mov         ecx,dword ptr [esp]
 004E8123    mov         ebx,dword ptr [esp+8]
 004E8127    mov         dword ptr [ecx],ebx
 004E8129    sub         dl,3
>004E812C    jae         004E813C
 004E812E    mov         edx,dword ptr [esp+4]
 004E8132    mov         ecx,dword ptr [esp+0C]
 004E8136    mov         dword ptr [edx],ecx
>004E8138    jmp         004E813C
 004E813A    mov         al,1
 004E813C    add         esp,10
 004E813F    pop         esi
 004E8140    pop         ebx
 004E8141    ret
end;*}

//004E8144
{*function sub_004E8144(?:?; ?:?; ?:?):?;
begin
 004E8144    push        ebx
 004E8145    push        esi
 004E8146    push        edi
 004E8147    push        ecx
 004E8148    mov         dword ptr [esp],ecx
 004E814B    mov         edi,edx
 004E814D    mov         esi,eax
 004E814F    mov         ecx,dword ptr [esp]
 004E8152    mov         edx,edi
 004E8154    mov         eax,esi
 004E8156    mov         ebx,dword ptr [eax]
 004E8158    call        dword ptr [ebx+44]
 004E815B    mov         ebx,eax
 004E815D    test        bl,bl
>004E815F    je          004E816D
 004E8161    mov         ecx,dword ptr [esp]
 004E8164    mov         edx,edi
 004E8166    mov         eax,esi
 004E8168    call        004E8204
 004E816D    mov         eax,ebx
 004E816F    pop         edx
 004E8170    pop         edi
 004E8171    pop         esi
 004E8172    pop         ebx
 004E8173    ret
end;*}

//004E8174
procedure TControl.ConstrainedResize(var MinWidth:Integer; var MinHeight:Integer; var MaxWidth:Integer; var MaxHeight:Integer);
begin
{*
 004E8174    push        ebp
 004E8175    mov         ebp,esp
 004E8177    push        ebx
 004E8178    cmp         word ptr [eax+0CA],0
>004E8180    je          004E819D
 004E8182    push        ecx
 004E8183    mov         ecx,dword ptr [ebp+0C]
 004E8186    push        ecx
 004E8187    mov         ecx,dword ptr [ebp+8]
 004E818A    push        ecx
 004E818B    mov         ecx,edx
 004E818D    mov         ebx,eax
 004E818F    mov         edx,eax
 004E8191    mov         eax,dword ptr [ebx+0CC]
 004E8197    call        dword ptr [ebx+0C8]
 004E819D    pop         ebx
 004E819E    pop         ebp
 004E819F    ret         8
*}
end;

//004E81A4
function TControl.CalcCursorPos:TPoint;
begin
{*
 004E81A4    push        ebx
 004E81A5    push        esi
 004E81A6    add         esp,0FFFFFFF8
 004E81A9    mov         ebx,edx
 004E81AB    mov         esi,eax
 004E81AD    push        ebx
 004E81AE    call        user32.GetCursorPos
 004E81B3    mov         ecx,esp
 004E81B5    mov         edx,ebx
 004E81B7    mov         eax,esi
 004E81B9    call        TControl.ScreenToClient
 004E81BE    mov         eax,dword ptr [esp]
 004E81C1    mov         dword ptr [ebx],eax
 004E81C3    mov         eax,dword ptr [esp+4]
 004E81C7    mov         dword ptr [ebx+4],eax
 004E81CA    pop         ecx
 004E81CB    pop         edx
 004E81CC    pop         esi
 004E81CD    pop         ebx
 004E81CE    ret
*}
end;

//004E81D0
{*procedure TControl.sub_004E81D0(?:?);
begin
 004E81D0    push        esi
 004E81D1    test        byte ptr [eax+60],4;TControl.FControlStyle:TControlStyle
>004E81D5    je          004E81F9
 004E81D7    mov         esi,dword ptr [edx]
 004E81D9    cmp         esi,204
>004E81DF    je          004E81FD
 004E81E1    cmp         esi,205
>004E81E7    je          004E81FD
 004E81E9    cmp         esi,200
>004E81EF    je          004E81FD
 004E81F1    cmp         esi,206
>004E81F7    je          004E81FD
 004E81F9    xor         eax,eax
 004E81FB    pop         esi
 004E81FC    ret
 004E81FD    mov         al,1
 004E81FF    pop         esi
 004E8200    ret
end;*}

//004E8204
{*procedure sub_004E8204(?:?; ?:?; ?:?);
begin
 004E8204    push        ebx
 004E8205    push        esi
 004E8206    push        edi
 004E8207    push        ebp
 004E8208    add         esp,0FFFFFFF0
 004E820B    mov         ebp,ecx
 004E820D    mov         edi,edx
 004E820F    mov         esi,eax
 004E8211    mov         eax,dword ptr [esi+80]
 004E8217    mov         eax,dword ptr [eax+14]
 004E821A    test        eax,eax
>004E821C    jbe         004E8223
 004E821E    mov         dword ptr [esp],eax
>004E8221    jmp         004E8228
 004E8223    xor         eax,eax
 004E8225    mov         dword ptr [esp],eax
 004E8228    mov         eax,dword ptr [esi+80]
 004E822E    mov         eax,dword ptr [eax+10]
 004E8231    test        eax,eax
>004E8233    jbe         004E823B
 004E8235    mov         dword ptr [esp+4],eax
>004E8239    jmp         004E8241
 004E823B    xor         eax,eax
 004E823D    mov         dword ptr [esp+4],eax
 004E8241    mov         eax,dword ptr [esi+80]
 004E8247    mov         eax,dword ptr [eax+0C]
 004E824A    test        eax,eax
>004E824C    jbe         004E8254
 004E824E    mov         dword ptr [esp+8],eax
>004E8252    jmp         004E825A
 004E8254    xor         eax,eax
 004E8256    mov         dword ptr [esp+8],eax
 004E825A    mov         eax,dword ptr [esi+80]
 004E8260    mov         eax,dword ptr [eax+8]
 004E8263    test        eax,eax
>004E8265    jbe         004E826D
 004E8267    mov         dword ptr [esp+0C],eax
>004E826B    jmp         004E8273
 004E826D    xor         eax,eax
 004E826F    mov         dword ptr [esp+0C],eax
 004E8273    lea         eax,[esp+8]
 004E8277    push        eax
 004E8278    lea         eax,[esp+10]
 004E827C    push        eax
 004E827D    lea         ecx,[esp+0C]
 004E8281    lea         edx,[esp+8]
 004E8285    mov         eax,esi
 004E8287    mov         ebx,dword ptr [eax]
 004E8289    call        dword ptr [ebx+4C]
 004E828C    cmp         dword ptr [esp+8],0
>004E8291    jle         004E82A3
 004E8293    mov         eax,dword ptr [edi]
 004E8295    cmp         eax,dword ptr [esp+8]
>004E8299    jle         004E82A3
 004E829B    mov         eax,dword ptr [esp+8]
 004E829F    mov         dword ptr [edi],eax
>004E82A1    jmp         004E82B5
 004E82A3    cmp         dword ptr [esp],0
>004E82A7    jle         004E82B5
 004E82A9    mov         eax,dword ptr [edi]
 004E82AB    cmp         eax,dword ptr [esp]
>004E82AE    jge         004E82B5
 004E82B0    mov         eax,dword ptr [esp]
 004E82B3    mov         dword ptr [edi],eax
 004E82B5    cmp         dword ptr [esp+0C],0
>004E82BA    jle         004E82CE
 004E82BC    mov         eax,dword ptr [ebp]
 004E82BF    cmp         eax,dword ptr [esp+0C]
>004E82C3    jle         004E82CE
 004E82C5    mov         eax,dword ptr [esp+0C]
 004E82C9    mov         dword ptr [ebp],eax
>004E82CC    jmp         004E82E5
 004E82CE    cmp         dword ptr [esp+4],0
>004E82D3    jle         004E82E5
 004E82D5    mov         eax,dword ptr [ebp]
 004E82D8    cmp         eax,dword ptr [esp+4]
>004E82DC    jge         004E82E5
 004E82DE    mov         eax,dword ptr [esp+4]
 004E82E2    mov         dword ptr [ebp],eax
 004E82E5    add         esp,10
 004E82E8    pop         ebp
 004E82E9    pop         edi
 004E82EA    pop         esi
 004E82EB    pop         ebx
 004E82EC    ret
end;*}

//004E82F0
function TControl.Perform(Msg:Cardinal; WParam:NativeUInt; LParam:NativeInt):NativeInt;
begin
{*
 004E82F0    push        ebp
 004E82F1    mov         ebp,esp
 004E82F3    add         esp,0FFFFFFF0
 004E82F6    push        ebx
 004E82F7    mov         dword ptr [ebp-10],edx
 004E82FA    mov         dword ptr [ebp-0C],ecx
 004E82FD    mov         edx,dword ptr [ebp+8]
 004E8300    mov         dword ptr [ebp-8],edx
 004E8303    xor         edx,edx
 004E8305    mov         dword ptr [ebp-4],edx
 004E8308    test        eax,eax
>004E830A    je          004E8317
 004E830C    lea         edx,[ebp-10]
 004E830F    mov         ebx,eax
 004E8311    mov         eax,dword ptr [ebx+4C]
 004E8314    call        dword ptr [ebx+48]
 004E8317    mov         eax,dword ptr [ebp-4]
 004E831A    pop         ebx
 004E831B    mov         esp,ebp
 004E831D    pop         ebp
 004E831E    ret         4
*}
end;

//004E8324
function TControl.Perform(Msg:Cardinal; WParam:NativeUInt; LParam:PWideChar):NativeInt;
begin
{*
 004E8324    push        ebp
 004E8325    mov         ebp,esp
 004E8327    push        ebx
 004E8328    mov         ebx,dword ptr [ebp+8]
 004E832B    push        ebx
 004E832C    call        TControl.Perform
 004E8331    pop         ebx
 004E8332    pop         ebp
 004E8333    ret         4
*}
end;

//004E8338
procedure TControl.Perform(Msg:Cardinal; WParam:NativeUInt; var LParam:TRect);
begin
{*
 004E8338    push        ebp
 004E8339    mov         ebp,esp
 004E833B    push        ebx
 004E833C    mov         ebx,dword ptr [ebp+8]
 004E833F    push        ebx
 004E8340    call        TControl.Perform
 004E8345    pop         ebx
 004E8346    pop         ebp
 004E8347    ret         4
*}
end;

//004E834C
{*function TControl.GetCustomHint:?;
begin
 004E834C    mov         edx,dword ptr [eax+17C];TControl.FCustomHint:TCustomHint
 004E8352    cmp         byte ptr [eax+180],0;TControl.FParentCustomHint:Boolean
>004E8359    je          004E836F
 004E835B    test        edx,edx
>004E835D    jne         004E836F
 004E835F    mov         ecx,dword ptr [eax+40];TControl.FParent:TWinControl
 004E8362    test        ecx,ecx
>004E8364    je          004E836F
 004E8366    mov         eax,ecx
 004E8368    call        TControl.GetCustomHint
 004E836D    mov         edx,eax
 004E836F    mov         eax,edx
 004E8371    ret
end;*}

//004E8374
procedure sub_004E8374(?:TControl);
begin
{*
 004E8374    push        ebx
 004E8375    mov         ebx,eax
 004E8377    mov         eax,ebx
 004E8379    mov         edx,dword ptr [eax]
 004E837B    call        dword ptr [edx+70];TControl.sub_004E9BD0
 004E837E    test        al,al
>004E8380    je          004E8396
 004E8382    mov         eax,dword ptr [ebx+5C];TControl.FHeight:Integer
 004E8385    mov         dword ptr [ebx+0AC],eax;TControl.FUndockHeight:Integer
 004E838B    mov         eax,dword ptr [ebx+58];TControl.FWidth:Integer
 004E838E    mov         dword ptr [ebx+0A8],eax;TControl.FUndockWidth:Integer
 004E8394    pop         ebx
 004E8395    ret
 004E8396    cmp         dword ptr [ebx+0A0],0;TControl.FHostDockSite:TWinControl
>004E839D    je          004E83E4
 004E839F    cmp         byte ptr [ebx+9C],2;TControl.FDockOrientation:TDockOrientation
>004E83A6    je          004E83B7
 004E83A8    mov         eax,dword ptr [ebx+0A0];TControl.FHostDockSite:TWinControl
 004E83AE    movzx       eax,byte ptr [eax+6D];TWinControl.FAlign:TAlign
 004E83B2    dec         eax
 004E83B3    sub         al,2
>004E83B5    jae         004E83C2
 004E83B7    mov         eax,dword ptr [ebx+5C];TControl.FHeight:Integer
 004E83BA    mov         dword ptr [ebx+0B4],eax;TControl.FTBDockHeight:Integer
>004E83C0    jmp         004E83E4
 004E83C2    cmp         byte ptr [ebx+9C],1;TControl.FDockOrientation:TDockOrientation
>004E83C9    je          004E83DB
 004E83CB    mov         eax,dword ptr [ebx+0A0];TControl.FHostDockSite:TWinControl
 004E83D1    movzx       eax,byte ptr [eax+6D];TWinControl.FAlign:TAlign
 004E83D5    add         al,0FD
 004E83D7    sub         al,2
>004E83D9    jae         004E83E4
 004E83DB    mov         eax,dword ptr [ebx+58];TControl.FWidth:Integer
 004E83DE    mov         dword ptr [ebx+0B0],eax;TControl.FLRDockWidth:Integer
 004E83E4    pop         ebx
 004E83E5    ret
*}
end;

//004E83E8
{*procedure sub_004E83E8(?:TControl; ?:?);
begin
 004E83E8    push        ebx
 004E83E9    mov         ebx,eax
 004E83EB    mov         eax,dword ptr [edx]
 004E83ED    mov         dword ptr [ebx+50],eax;TControl.FLeft:Integer
 004E83F0    mov         eax,dword ptr [edx+4]
 004E83F3    mov         dword ptr [ebx+54],eax;TControl.FTop:Integer
 004E83F6    mov         eax,dword ptr [edx+8]
 004E83F9    sub         eax,dword ptr [edx]
 004E83FB    mov         dword ptr [ebx+58],eax;TControl.FWidth:Integer
 004E83FE    mov         eax,dword ptr [edx+0C]
 004E8401    sub         eax,dword ptr [edx+4]
 004E8404    mov         dword ptr [ebx+5C],eax;TControl.FHeight:Integer
 004E8407    mov         eax,ebx
 004E8409    call        004E62D0
 004E840E    mov         eax,ebx
 004E8410    call        004EA028
 004E8415    pop         ebx
 004E8416    ret
end;*}

//004E8418
procedure TControl.sub_004E8418;
begin
{*
 004E8418    ret
*}
end;

//004E841C
{*procedure sub_004E841C(?:?);
begin
 004E841C    push        ebp
 004E841D    mov         ebp,esp
 004E841F    add         esp,0FFFFFEE8
 004E8425    push        ebx
 004E8426    push        esi
 004E8427    push        edi
 004E8428    mov         ebx,edx
 004E842A    mov         esi,eax
 004E842C    test        byte ptr [esi+1C],10;TControl.FComponentState:TComponentState
>004E8430    je          004E846A
 004E8432    xor         edx,edx
 004E8434    mov         eax,esi
 004E8436    call        GetParentForm
 004E843B    mov         dword ptr [ebp-14],eax
 004E843E    cmp         dword ptr [ebp-14],0
>004E8442    je          004E846A
 004E8444    mov         eax,dword ptr [ebp-14]
 004E8447    cmp         dword ptr [eax+2E0],0;TCustomForm.FDesigner:IDesignerHook
>004E844E    je          004E846A
 004E8450    mov         ecx,ebx
 004E8452    mov         eax,dword ptr [ebp-14]
 004E8455    mov         eax,dword ptr [eax+2E0];TCustomForm.FDesigner:IDesignerHook
 004E845B    mov         edx,esi
 004E845D    mov         edi,dword ptr [eax]
 004E845F    call        dword ptr [edi+28]
 004E8462    test        al,al
>004E8464    jne         004E86DC
 004E846A    mov         eax,dword ptr [ebx]
 004E846C    cmp         eax,100
>004E8471    jb          004E84AC
 004E8473    cmp         eax,109
>004E8478    ja          004E84AC
 004E847A    mov         dl,1
 004E847C    mov         eax,esi
 004E847E    call        GetParentForm
 004E8483    mov         dword ptr [ebp-14],eax
 004E8486    cmp         dword ptr [ebp-14],0
>004E848A    je          004E86D3
 004E8490    mov         ecx,ebx
 004E8492    mov         edx,esi
 004E8494    mov         eax,dword ptr [ebp-14]
 004E8497    mov         edi,dword ptr [eax]
 004E8499    call        dword ptr [edi+140];TCustomForm.WantChildKey
 004E849F    test        al,al
>004E84A1    jne         004E86DC
>004E84A7    jmp         004E86D3
 004E84AC    mov         eax,dword ptr [ebx]
 004E84AE    cmp         eax,200
>004E84B3    jb          004E86BC
 004E84B9    cmp         eax,20E
>004E84BE    ja          004E86BC
 004E84C4    test        byte ptr [esi+60],80;TControl.FControlStyle:TControlStyle
>004E84C8    jne         004E84DE
 004E84CA    sub         eax,203
>004E84CF    je          004E84DB
 004E84D1    sub         eax,3
>004E84D4    je          004E84DB
 004E84D6    sub         eax,3
>004E84D9    jne         004E84DE
 004E84DB    sub         dword ptr [ebx],2
 004E84DE    mov         eax,dword ptr [ebx]
 004E84E0    add         eax,0FFFFFE00
 004E84E5    cmp         eax,7
>004E84E8    ja          004E8656
 004E84EE    jmp         dword ptr [eax*4+4E84F5]
 004E84EE    dd          004E8515
 004E84EE    dd          004E8631
 004E84EE    dd          004E8650
 004E84EE    dd          004E8631
 004E84EE    dd          004E8656
 004E84EE    dd          004E8656
 004E84EE    dd          004E8656
 004E84EE    dd          004E852A
 004E8515    mov         ecx,ebx
 004E8517    mov         eax,[007C4A18];^Application:TApplication
 004E851C    mov         eax,dword ptr [eax]
 004E851E    mov         edx,esi
 004E8520    call        TApplication.HintMouseMessage
>004E8525    jmp         004E86D3
 004E852A    test        byte ptr [esi+62],8;TControl.FEnabled:Boolean
>004E852E    je          004E86D3
 004E8534    mov         eax,[004E86E4];0x1200 gvar_004E86E4
 004E8539    and         eax,dword ptr [esi+64];TControl.FControlState:TControlState
 004E853C    mov         edx,dword ptr ds:[4E86E8];0x0 gvar_004E86E8
 004E8542    cmp         edx,eax
>004E8544    jne         004E86D3
 004E854A    mov         eax,[007CA5D4];gvar_007CA5D4
 004E854F    call        TMouse.GetIsDragging
 004E8554    test        al,al
>004E8556    jne         004E86D3
 004E855C    mov         eax,[007CA5D4];gvar_007CA5D4
 004E8561    call        TMouse.CreatePanningWindow
 004E8566    mov         byte ptr [ebp-15],0
 004E856A    mov         eax,[007CA5D4];gvar_007CA5D4
 004E856F    mov         edi,dword ptr [eax+28]
 004E8572    test        edi,edi
>004E8574    je          004E85F3
 004E8576    mov         eax,esi
 004E8578    mov         edx,dword ptr ds:[4DE8CC];TWinControl
 004E857E    call        @IsClass
 004E8583    test        al,al
>004E8585    je          004E85A1
 004E8587    mov         eax,esi
 004E8589    call        TWinControl.GetHandle
 004E858E    mov         edx,eax
 004E8590    mov         eax,edi
 004E8592    mov         ecx,esi
 004E8594    mov         edi,dword ptr [eax]
 004E8596    call        dword ptr [edi+110]
 004E859C    mov         byte ptr [ebp-15],al
>004E859F    jmp         004E85F3
 004E85A1    cmp         dword ptr [esi+40],0;TControl.FParent:TWinControl
>004E85A5    je          004E85C2
 004E85A7    mov         eax,dword ptr [esi+40];TControl.FParent:TWinControl
 004E85AA    call        TWinControl.GetHandle
 004E85AF    mov         edx,eax
 004E85B1    mov         eax,edi
 004E85B3    mov         ecx,esi
 004E85B5    mov         edi,dword ptr [eax]
 004E85B7    call        dword ptr [edi+110]
 004E85BD    mov         byte ptr [ebp-15],al
>004E85C0    jmp         004E85F3
 004E85C2    xor         edx,edx
 004E85C4    mov         eax,esi
 004E85C6    call        GetParentForm
 004E85CB    mov         dword ptr [ebp-14],eax
 004E85CE    cmp         dword ptr [ebp-14],0
>004E85D2    je          004E85F3
 004E85D4    mov         eax,dword ptr [ebp-14]
 004E85D7    call        TWinControl.GetHandle
 004E85DC    mov         edx,eax
 004E85DE    mov         eax,[007CA5D4];gvar_007CA5D4
 004E85E3    mov         eax,dword ptr [eax+28]
 004E85E6    mov         ecx,esi
 004E85E8    mov         edi,dword ptr [eax]
 004E85EA    call        dword ptr [edi+110]
 004E85F0    mov         byte ptr [ebp-15],al
 004E85F3    cmp         byte ptr [ebp-15],0
>004E85F7    je          004E8611
 004E85F9    mov         dword ptr [ebx+0C],1
 004E8600    mov         eax,[007C4A18];^Application:TApplication
 004E8605    mov         eax,dword ptr [eax]
 004E8607    call        TApplication.HideHint
>004E860C    jmp         004E86D3
 004E8611    mov         eax,[007CA5D4];gvar_007CA5D4
 004E8616    cmp         dword ptr [eax+28],0
>004E861A    je          004E86D3
 004E8620    xor         edx,edx
 004E8622    mov         eax,[007CA5D4];gvar_007CA5D4
 004E8627    call        TMouse.SetPanningWindow
>004E862C    jmp         004E86D3
 004E8631    cmp         byte ptr [esi+6F],1;TControl.FDragMode:TDragMode
>004E8635    jne         004E8647
 004E8637    mov         eax,esi
 004E8639    mov         si,0FFED
 004E863D    call        @CallDynaInst;TControl.BeginAutoDrag
>004E8642    jmp         004E86DC
 004E8647    or          dword ptr [esi+64],1;TControl.FControlState:TControlState
>004E864B    jmp         004E86D3
 004E8650    and         dword ptr [esi+64],0FFFFFFFE;TControl.FControlState:TControlState
>004E8654    jmp         004E86D3
 004E8656    mov         eax,[007CA5D4];gvar_007CA5D4
 004E865B    cmp         byte ptr [eax+20],0
>004E865F    je          004E86D3
 004E8661    mov         eax,[007CA5D4];gvar_007CA5D4
 004E8666    cmp         dword ptr [eax+1C],0
>004E866A    je          004E86D3
 004E866C    mov         eax,dword ptr [ebx]
 004E866E    mov         edx,dword ptr ds:[7CA5D4];gvar_007CA5D4
 004E8674    cmp         eax,dword ptr [edx+1C]
>004E8677    jne         004E86D3
 004E8679    lea         eax,[ebp-115]
 004E867F    push        eax
 004E8680    call        user32.GetKeyboardState
 004E8685    mov         eax,dword ptr [ebx]
 004E8687    mov         dword ptr [ebp-10],eax
 004E868A    lea         eax,[ebp-115]
 004E8690    call        KeyboardStateToShiftState
 004E8695    mov         word ptr [ebp-0C],ax
 004E8699    movzx       eax,word ptr [ebx+4]
 004E869D    mov         word ptr [ebp-0A],ax
 004E86A1    mov         eax,dword ptr [ebx+8]
 004E86A4    call        SmallPoint
 004E86A9    mov         dword ptr [ebp-8],eax
 004E86AC    lea         edx,[ebp-10]
 004E86AF    mov         eax,esi
 004E86B1    mov         si,0FFC8
 004E86B5    call        @CallDynaInst;TControl.sub_004E74CC
>004E86BA    jmp         004E86DC
 004E86BC    cmp         eax,0B00B
>004E86C1    jne         004E86D3
 004E86C3    mov         edx,dword ptr [ebx+8]
 004E86C6    push        edx
 004E86C7    mov         ecx,dword ptr [ebx+4]
 004E86CA    mov         edx,eax
 004E86CC    mov         eax,esi
 004E86CE    call        004E6A58
 004E86D3    mov         edx,ebx
 004E86D5    mov         eax,esi
 004E86D7    mov         ecx,dword ptr [eax]
 004E86D9    call        dword ptr [ecx-14];TObject.Dispatch
 004E86DC    pop         edi
 004E86DD    pop         esi
 004E86DE    pop         ebx
 004E86DF    mov         esp,ebp
 004E86E1    pop         ebp
 004E86E2    ret
end;*}

//004E86EC
{*procedure TControl.DefaultHandler(var Message:?);
begin
 004E86EC    push        ebx
 004E86ED    push        esi
 004E86EE    push        edi
 004E86EF    add         esp,0FFFFFFF8
 004E86F2    mov         ebx,edx
 004E86F4    mov         esi,eax
 004E86F6    mov         eax,dword ptr [ebx]
 004E86F8    sub         eax,0C
>004E86FB    je          004E8759
 004E86FD    dec         eax
>004E86FE    je          004E8705
 004E8700    dec         eax
>004E8701    je          004E8736
>004E8703    jmp         004E8784
 004E8705    mov         eax,dword ptr [esi+184]
 004E870B    test        eax,eax
>004E870D    je          004E8713
 004E870F    mov         edi,eax
>004E8711    jmp         004E8718
 004E8713    mov         edi,4E878C
 004E8718    mov         ecx,dword ptr [ebx+4]
 004E871B    dec         ecx
 004E871C    mov         eax,dword ptr [ebx+8]
 004E871F    mov         edx,edi
 004E8721    call        StrLCopy
 004E8726    mov         dword ptr [esp],eax
 004E8729    mov         eax,dword ptr [esp]
 004E872C    call        @PWCharLen
 004E8731    mov         dword ptr [ebx+0C],eax
>004E8734    jmp         004E8784
 004E8736    mov         eax,dword ptr [esi+184]
 004E873C    test        eax,eax
>004E873E    jne         004E8747
 004E8740    xor         eax,eax
 004E8742    mov         dword ptr [ebx+0C],eax
>004E8745    jmp         004E8784
 004E8747    mov         dword ptr [esp+4],eax
 004E874B    mov         eax,dword ptr [esp+4];{StrNew}
 004E874F    call        @PWCharLen
 004E8754    mov         dword ptr [ebx+0C],eax
>004E8757    jmp         004E8784
 004E8759    mov         eax,dword ptr [ebx+8]
 004E875C    call        StrNew
 004E8761    mov         edi,eax
 004E8763    mov         eax,dword ptr [esi+184]
 004E8769    call        0041F4FC
 004E876E    mov         dword ptr [esi+184],edi
 004E8774    mov         eax,dword ptr [ebx+8]
 004E8777    push        eax
 004E8778    mov         ecx,dword ptr [ebx+4]
 004E877B    mov         edx,dword ptr [ebx]
 004E877D    mov         eax,esi
 004E877F    call        004E6A58
 004E8784    pop         ecx
 004E8785    pop         edx
 004E8786    pop         edi
 004E8787    pop         esi
 004E8788    pop         ebx
 004E8789    ret
end;*}

//004E8790
procedure TControl.ReadIsControl(Reader:Classes.TReader);
begin
{*
 004E8790    push        ebx
 004E8791    push        esi
 004E8792    mov         esi,edx
 004E8794    mov         ebx,eax
 004E8796    mov         eax,esi
 004E8798    call        TReader.ReadBoolean
 004E879D    mov         byte ptr [ebx+70],al
 004E87A0    pop         esi
 004E87A1    pop         ebx
 004E87A2    ret
*}
end;

//004E87A4
procedure TControl.WriteIsControl(Writer:Classes.TWriter);
begin
{*
 004E87A4    movzx       eax,byte ptr [eax+70]
 004E87A8    xchg        eax,edx
 004E87A9    call        TWriter.WriteBoolean
 004E87AE    ret
*}
end;

//004E87B0
function DoWriteIsControl:Boolean;
begin
{*
 004E87B0    push        ebp
 004E87B1    mov         ebp,esp
 004E87B3    mov         eax,dword ptr [ebp+8]
 004E87B6    mov         eax,dword ptr [eax-4]
 004E87B9    mov         eax,dword ptr [eax+20]
 004E87BC    test        eax,eax
>004E87BE    je          004E87D2
 004E87C0    movzx       eax,byte ptr [eax+70]
 004E87C4    mov         edx,dword ptr [ebp+8]
 004E87C7    mov         edx,dword ptr [edx-8]
 004E87CA    cmp         al,byte ptr [edx+70]
 004E87CD    setne       al
 004E87D0    pop         ebp
 004E87D1    ret
 004E87D2    mov         eax,dword ptr [ebp+8]
 004E87D5    mov         eax,dword ptr [eax-8]
 004E87D8    movzx       eax,byte ptr [eax+70]
 004E87DC    pop         ebp
 004E87DD    ret
*}
end;

//004E87E0
function DoWriteExplicit(Dim:TExplicitDimension):Boolean;
begin
{*
 004E87E0    push        ebp
 004E87E1    mov         ebp,esp
 004E87E3    push        ebx
 004E87E4    sub         al,1
>004E87E6    jb          004E8803
>004E87E8    je          004E887A
 004E87EE    dec         al
>004E87F0    je          004E88F1
 004E87F6    dec         al
>004E87F8    je          004E8965
>004E87FE    jmp         004E89D9
 004E8803    mov         eax,dword ptr [ebp+8]
 004E8806    mov         eax,dword ptr [eax-4]
 004E8809    mov         ebx,dword ptr [eax+20]
 004E880C    test        ebx,ebx
>004E880E    je          004E8824
 004E8810    mov         eax,dword ptr [ebx+1A4]
 004E8816    mov         edx,dword ptr [ebp+8]
 004E8819    mov         edx,dword ptr [edx-8]
 004E881C    cmp         eax,dword ptr [edx+1A4]
>004E8822    jne         004E8875
 004E8824    mov         eax,dword ptr [ebp+8]
 004E8827    mov         eax,dword ptr [eax-4]
 004E882A    cmp         dword ptr [eax+20],0
>004E882E    jne         004E886E
 004E8830    mov         eax,dword ptr [ebp+8]
 004E8833    mov         eax,dword ptr [eax-8]
 004E8836    cmp         byte ptr [eax+6D],0
>004E883A    jne         004E8857
 004E883C    mov         eax,dword ptr [ebp+8]
 004E883F    mov         eax,dword ptr [eax-8]
 004E8842    movzx       eax,byte ptr [eax+73]
 004E8846    and         al,byte ptr ds:[4E89E0]
 004E884C    movzx       edx,byte ptr ds:[4E89E4]
 004E8853    cmp         dl,al
>004E8855    jne         004E886E
 004E8857    mov         eax,dword ptr [ebp+8]
 004E885A    mov         eax,dword ptr [eax-8]
 004E885D    mov         eax,dword ptr [eax+1A4]
 004E8863    mov         edx,dword ptr [ebp+8]
 004E8866    mov         edx,dword ptr [edx-8]
 004E8869    cmp         eax,dword ptr [edx+50]
>004E886C    jne         004E8875
 004E886E    xor         eax,eax
>004E8870    jmp         004E89DB
 004E8875    mov         al,1
 004E8877    pop         ebx
 004E8878    pop         ebp
 004E8879    ret
 004E887A    mov         eax,dword ptr [ebp+8]
 004E887D    mov         eax,dword ptr [eax-4]
 004E8880    mov         ebx,dword ptr [eax+20]
 004E8883    test        ebx,ebx
>004E8885    je          004E889B
 004E8887    mov         eax,dword ptr [ebx+1A8]
 004E888D    mov         edx,dword ptr [ebp+8]
 004E8890    mov         edx,dword ptr [edx-8]
 004E8893    cmp         eax,dword ptr [edx+1A8]
>004E8899    jne         004E88EC
 004E889B    mov         eax,dword ptr [ebp+8]
 004E889E    mov         eax,dword ptr [eax-4]
 004E88A1    cmp         dword ptr [eax+20],0
>004E88A5    jne         004E88E5
 004E88A7    mov         eax,dword ptr [ebp+8]
 004E88AA    mov         eax,dword ptr [eax-8]
 004E88AD    cmp         byte ptr [eax+6D],0
>004E88B1    jne         004E88CE
 004E88B3    mov         eax,dword ptr [ebp+8]
 004E88B6    mov         eax,dword ptr [eax-8]
 004E88B9    movzx       eax,byte ptr [eax+73]
 004E88BD    and         al,byte ptr ds:[4E89E8]
 004E88C3    movzx       edx,byte ptr ds:[4E89E4]
 004E88CA    cmp         dl,al
>004E88CC    jne         004E88E5
 004E88CE    mov         eax,dword ptr [ebp+8]
 004E88D1    mov         eax,dword ptr [eax-8]
 004E88D4    mov         eax,dword ptr [eax+1A8]
 004E88DA    mov         edx,dword ptr [ebp+8]
 004E88DD    mov         edx,dword ptr [edx-8]
 004E88E0    cmp         eax,dword ptr [edx+54]
>004E88E3    jne         004E88EC
 004E88E5    xor         eax,eax
>004E88E7    jmp         004E89DB
 004E88EC    mov         al,1
 004E88EE    pop         ebx
 004E88EF    pop         ebp
 004E88F0    ret
 004E88F1    mov         eax,dword ptr [ebp+8]
 004E88F4    mov         eax,dword ptr [eax-4]
 004E88F7    mov         ebx,dword ptr [eax+20]
 004E88FA    test        ebx,ebx
>004E88FC    je          004E8912
 004E88FE    mov         eax,dword ptr [ebx+1AC]
 004E8904    mov         edx,dword ptr [ebp+8]
 004E8907    mov         edx,dword ptr [edx-8]
 004E890A    cmp         eax,dword ptr [edx+1AC]
>004E8910    jne         004E8960
 004E8912    mov         eax,dword ptr [ebp+8]
 004E8915    mov         eax,dword ptr [eax-4]
 004E8918    cmp         dword ptr [eax+20],0
>004E891C    jne         004E895C
 004E891E    mov         eax,dword ptr [ebp+8]
 004E8921    mov         eax,dword ptr [eax-8]
 004E8924    cmp         byte ptr [eax+6D],0
>004E8928    jne         004E8945
 004E892A    mov         eax,dword ptr [ebp+8]
 004E892D    mov         eax,dword ptr [eax-8]
 004E8930    movzx       eax,byte ptr [eax+73]
 004E8934    and         al,byte ptr ds:[4E89EC]
 004E893A    movzx       edx,byte ptr ds:[4E89EC]
 004E8941    cmp         dl,al
>004E8943    jne         004E895C
 004E8945    mov         eax,dword ptr [ebp+8]
 004E8948    mov         eax,dword ptr [eax-8]
 004E894B    mov         eax,dword ptr [eax+1AC]
 004E8951    mov         edx,dword ptr [ebp+8]
 004E8954    mov         edx,dword ptr [edx-8]
 004E8957    cmp         eax,dword ptr [edx+58]
>004E895A    jne         004E8960
 004E895C    xor         eax,eax
>004E895E    jmp         004E89DB
 004E8960    mov         al,1
 004E8962    pop         ebx
 004E8963    pop         ebp
 004E8964    ret
 004E8965    mov         eax,dword ptr [ebp+8]
 004E8968    mov         eax,dword ptr [eax-4]
 004E896B    mov         ebx,dword ptr [eax+20]
 004E896E    test        ebx,ebx
>004E8970    je          004E8986
 004E8972    mov         eax,dword ptr [ebx+1B0]
 004E8978    mov         edx,dword ptr [ebp+8]
 004E897B    mov         edx,dword ptr [edx-8]
 004E897E    cmp         eax,dword ptr [edx+1B0]
>004E8984    jne         004E89D4
 004E8986    mov         eax,dword ptr [ebp+8]
 004E8989    mov         eax,dword ptr [eax-4]
 004E898C    cmp         dword ptr [eax+20],0
>004E8990    jne         004E89D0
 004E8992    mov         eax,dword ptr [ebp+8]
 004E8995    mov         eax,dword ptr [eax-8]
 004E8998    cmp         byte ptr [eax+6D],0
>004E899C    jne         004E89B9
 004E899E    mov         eax,dword ptr [ebp+8]
 004E89A1    mov         eax,dword ptr [eax-8]
 004E89A4    movzx       eax,byte ptr [eax+73]
 004E89A8    and         al,byte ptr ds:[4E89F0]
 004E89AE    movzx       edx,byte ptr ds:[4E89F0]
 004E89B5    cmp         dl,al
>004E89B7    jne         004E89D0
 004E89B9    mov         eax,dword ptr [ebp+8]
 004E89BC    mov         eax,dword ptr [eax-8]
 004E89BF    mov         eax,dword ptr [eax+1B0]
 004E89C5    mov         edx,dword ptr [ebp+8]
 004E89C8    mov         edx,dword ptr [edx-8]
 004E89CB    cmp         eax,dword ptr [edx+5C]
>004E89CE    jne         004E89D4
 004E89D0    xor         eax,eax
>004E89D2    jmp         004E89DB
 004E89D4    mov         al,1
 004E89D6    pop         ebx
 004E89D7    pop         ebp
 004E89D8    ret
 004E89D9    xor         eax,eax
 004E89DB    pop         ebx
 004E89DC    pop         ebp
 004E89DD    ret
*}
end;

//004E89F4
procedure TControl.DefineProperties(Filer:Classes.TFiler);
begin
{*
 004E89F4    push        ebp
 004E89F5    mov         ebp,esp
 004E89F7    add         esp,0FFFFFFF8
 004E89FA    push        ebx
 004E89FB    push        esi
 004E89FC    mov         dword ptr [ebp-4],edx
 004E89FF    mov         dword ptr [ebp-8],eax
 004E8A02    lea         ebx,[ebp-8]
 004E8A05    mov         eax,dword ptr [ebx]
 004E8A07    push        eax
 004E8A08    push        4E8790;TControl.ReadIsControl
 004E8A0D    mov         eax,dword ptr [ebx]
 004E8A0F    push        eax
 004E8A10    push        4E87A4;TControl.WriteIsControl
 004E8A15    push        ebp
 004E8A16    call        DoWriteIsControl
 004E8A1B    pop         ecx
 004E8A1C    mov         ecx,eax
 004E8A1E    mov         edx,4E8B20;'IsControl'
 004E8A23    mov         eax,dword ptr [ebp-4]
 004E8A26    mov         esi,dword ptr [eax]
 004E8A28    call        dword ptr [esi+4]
 004E8A2B    mov         eax,dword ptr [ebx]
 004E8A2D    push        eax
 004E8A2E    push        4EA0E4;TControl.ReadExplicitLeft
 004E8A33    mov         eax,dword ptr [ebx]
 004E8A35    push        eax
 004E8A36    push        4EA07C;TControl.WriteExplicitLeft
 004E8A3B    mov         eax,dword ptr [ebx]
 004E8A3D    test        byte ptr [eax+1C],2
>004E8A41    jne         004E8A50
 004E8A43    push        ebp
 004E8A44    xor         eax,eax
 004E8A46    call        DoWriteExplicit
 004E8A4B    pop         ecx
 004E8A4C    test        al,al
>004E8A4E    jne         004E8A54
 004E8A50    xor         ecx,ecx
>004E8A52    jmp         004E8A56
 004E8A54    mov         cl,1
 004E8A56    mov         edx,4E8B40;'ExplicitLeft'
 004E8A5B    mov         eax,dword ptr [ebp-4]
 004E8A5E    mov         esi,dword ptr [eax]
 004E8A60    call        dword ptr [esi+4]
 004E8A63    mov         eax,dword ptr [ebx]
 004E8A65    push        eax
 004E8A66    push        4EA0B4;TControl.ReadExplicitTop
 004E8A6B    mov         eax,dword ptr [ebx]
 004E8A6D    push        eax
 004E8A6E    push        4EA05C;TControl.WriteExplicitTop
 004E8A73    mov         eax,dword ptr [ebx]
 004E8A75    test        byte ptr [eax+1C],2
>004E8A79    jne         004E8A88
 004E8A7B    push        ebp
 004E8A7C    mov         al,1
 004E8A7E    call        DoWriteExplicit
 004E8A83    pop         ecx
 004E8A84    test        al,al
>004E8A86    jne         004E8A8C
 004E8A88    xor         ecx,ecx
>004E8A8A    jmp         004E8A8E
 004E8A8C    mov         cl,1
 004E8A8E    mov         edx,4E8B68;'ExplicitTop'
 004E8A93    mov         eax,dword ptr [ebp-4]
 004E8A96    mov         esi,dword ptr [eax]
 004E8A98    call        dword ptr [esi+4]
 004E8A9B    mov         eax,dword ptr [ebx]
 004E8A9D    push        eax
 004E8A9E    push        4EA08C;TControl.ReadExplicitWidth
 004E8AA3    mov         eax,dword ptr [ebx]
 004E8AA5    push        eax
 004E8AA6    push        4EA0A4;TControl.WriteExplicitWidth
 004E8AAB    mov         eax,dword ptr [ebx]
 004E8AAD    test        byte ptr [eax+1C],2
>004E8AB1    jne         004E8AC0
 004E8AB3    push        ebp
 004E8AB4    mov         al,2
 004E8AB6    call        DoWriteExplicit
 004E8ABB    pop         ecx
 004E8ABC    test        al,al
>004E8ABE    jne         004E8AC4
 004E8AC0    xor         ecx,ecx
>004E8AC2    jmp         004E8AC6
 004E8AC4    mov         cl,1
 004E8AC6    mov         edx,4E8B8C;'ExplicitWidth'
 004E8ACB    mov         eax,dword ptr [ebp-4]
 004E8ACE    mov         esi,dword ptr [eax]
 004E8AD0    call        dword ptr [esi+4]
 004E8AD3    mov         eax,dword ptr [ebx]
 004E8AD5    push        eax
 004E8AD6    push        4EA0CC;TControl.ReadExplicitHeight
 004E8ADB    mov         eax,dword ptr [ebx]
 004E8ADD    push        eax
 004E8ADE    push        4EA06C;TControl.WriteExplicitHeight
 004E8AE3    mov         eax,dword ptr [ebx]
 004E8AE5    test        byte ptr [eax+1C],2
>004E8AE9    jne         004E8AF8
 004E8AEB    push        ebp
 004E8AEC    mov         al,3
 004E8AEE    call        DoWriteExplicit
 004E8AF3    pop         ecx
 004E8AF4    test        al,al
>004E8AF6    jne         004E8AFC
 004E8AF8    xor         ecx,ecx
>004E8AFA    jmp         004E8AFE
 004E8AFC    mov         cl,1
 004E8AFE    mov         edx,4E8BB4;'ExplicitHeight'
 004E8B03    mov         eax,dword ptr [ebp-4]
 004E8B06    mov         ebx,dword ptr [eax]
 004E8B08    call        dword ptr [ebx+4]
 004E8B0B    pop         esi
 004E8B0C    pop         ebx
 004E8B0D    pop         ecx
 004E8B0E    pop         ecx
 004E8B0F    pop         ebp
 004E8B10    ret
*}
end;

//004E8BD4
procedure TControl.Click;
begin
{*
 004E8BD4    push        ebx
 004E8BD5    push        esi
 004E8BD6    mov         ebx,eax
 004E8BD8    cmp         word ptr [ebx+122],0
>004E8BE0    je          004E8C06
 004E8BE2    mov         eax,ebx
 004E8BE4    mov         edx,dword ptr [eax]
 004E8BE6    call        dword ptr [edx+5C]
 004E8BE9    test        eax,eax
>004E8BEB    je          004E8C06
 004E8BED    mov         esi,dword ptr [ebx+120]
 004E8BF3    mov         eax,ebx
 004E8BF5    mov         edx,dword ptr [eax]
 004E8BF7    call        dword ptr [edx+5C]
 004E8BFA    mov         eax,dword ptr [eax+50]
 004E8BFD    cmp         eax,esi
 004E8BFF    sete        al
 004E8C02    xor         al,1
>004E8C04    jmp         004E8C08
 004E8C06    xor         eax,eax
 004E8C08    test        al,al
>004E8C0A    je          004E8C1D
 004E8C0C    mov         edx,ebx
 004E8C0E    mov         eax,dword ptr [ebx+124]
 004E8C14    call        dword ptr [ebx+120]
 004E8C1A    pop         esi
 004E8C1B    pop         ebx
 004E8C1C    ret
 004E8C1D    test        byte ptr [ebx+1C],10
>004E8C21    jne         004E8C35
 004E8C23    cmp         dword ptr [ebx+78],0
>004E8C27    je          004E8C35
 004E8C29    mov         edx,ebx
 004E8C2B    mov         eax,dword ptr [ebx+78]
 004E8C2E    mov         ecx,dword ptr [eax]
 004E8C30    call        dword ptr [ecx+18]
>004E8C33    jmp         004E8C4D
 004E8C35    cmp         word ptr [ebx+122],0
>004E8C3D    je          004E8C4D
 004E8C3F    mov         edx,ebx
 004E8C41    mov         eax,dword ptr [ebx+124]
 004E8C47    call        dword ptr [ebx+120]
 004E8C4D    pop         esi
 004E8C4E    pop         ebx
 004E8C4F    ret
*}
end;

//004E8C50
procedure TControl.sub_004E8C50;
begin
{*
 004E8C50    push        ebx
 004E8C51    cmp         word ptr [eax+12A],0;TControl.?f12A:word
>004E8C59    je          004E8C6B
 004E8C5B    mov         ebx,eax
 004E8C5D    mov         edx,eax
 004E8C5F    mov         eax,dword ptr [ebx+12C];TControl.?f12C:dword
 004E8C65    call        dword ptr [ebx+128];TControl.FOnDblClick
 004E8C6B    pop         ebx
 004E8C6C    ret
*}
end;

//004E8C70
{*procedure TControl.sub_004E8C70(?:?; ?:?; ?:?; ?:?);
begin
 004E8C70    push        ebp
 004E8C71    mov         ebp,esp
 004E8C73    push        ecx
 004E8C74    push        ebx
 004E8C75    mov         word ptr [ebp-2],cx
 004E8C79    cmp         word ptr [eax+0D2],0;TControl.?fD2:word
>004E8C81    je          004E8CA2
 004E8C83    movzx       ecx,word ptr [ebp-2]
 004E8C87    push        ecx
 004E8C88    mov         ecx,dword ptr [ebp+0C]
 004E8C8B    push        ecx
 004E8C8C    mov         ecx,dword ptr [ebp+8]
 004E8C8F    push        ecx
 004E8C90    mov         ecx,edx
 004E8C92    mov         ebx,eax
 004E8C94    mov         edx,eax
 004E8C96    mov         eax,dword ptr [ebx+0D4];TControl.?fD4:TSpinButton
 004E8C9C    call        dword ptr [ebx+0D0];TControl.FOnMouseDown
 004E8CA2    pop         ebx
 004E8CA3    pop         ecx
 004E8CA4    pop         ebp
 004E8CA5    ret         8
end;*}

//004E8CA8
procedure TControl.DoMouseDown(var Message:Messages.TWMMouse; Button:UITypes.TMouseButton; Shift:Classes.TShiftState);
begin
{*
 004E8CA8    push        ebp
 004E8CA9    mov         ebp,esp
 004E8CAB    add         esp,0FFFFFFF4
 004E8CAE    push        esi
 004E8CAF    push        edi
 004E8CB0    mov         byte ptr [ebp-1],cl
 004E8CB3    mov         edi,edx
 004E8CB5    mov         esi,eax
 004E8CB7    test        byte ptr [esi+61],10
>004E8CBB    jne         004E8D39
 004E8CBD    cmp         dword ptr [esi+58],8000
>004E8CC4    jg          004E8CCF
 004E8CC6    cmp         dword ptr [esi+5C],8000
>004E8CCD    jle         004E8D09
 004E8CCF    lea         edx,[ebp-0C]
 004E8CD2    mov         eax,esi
 004E8CD4    call        TControl.CalcCursorPos
 004E8CD9    mov         eax,dword ptr [ebp-0C]
 004E8CDC    push        eax
 004E8CDD    mov         eax,dword ptr [ebp-8]
 004E8CE0    push        eax
 004E8CE1    movzx       eax,word ptr [edi+4]
 004E8CE5    call        KeysToShiftState
 004E8CEA    or          ax,word ptr [ebp+8]
 004E8CEE    push        eax
 004E8CEF    call        MouseOriginToShiftState
 004E8CF4    pop         ecx
 004E8CF5    or          cx,ax
 004E8CF8    movzx       edx,byte ptr [ebp-1]
 004E8CFC    mov         eax,esi
 004E8CFE    mov         si,0FFD4
 004E8D02    call        @CallDynaInst
>004E8D07    jmp         004E8D39
 004E8D09    movsx       eax,word ptr [edi+8]
 004E8D0D    push        eax
 004E8D0E    movsx       eax,word ptr [edi+0A]
 004E8D12    push        eax
 004E8D13    movzx       eax,word ptr [edi+4]
 004E8D17    call        KeysToShiftState
 004E8D1C    or          ax,word ptr [ebp+8]
 004E8D20    push        eax
 004E8D21    call        MouseOriginToShiftState
 004E8D26    pop         ecx
 004E8D27    or          cx,ax
 004E8D2A    movzx       edx,byte ptr [ebp-1]
 004E8D2E    mov         eax,esi
 004E8D30    mov         si,0FFD4
 004E8D34    call        @CallDynaInst
 004E8D39    pop         edi
 004E8D3A    pop         esi
 004E8D3B    mov         esp,ebp
 004E8D3D    pop         ebp
 004E8D3E    ret         4
*}
end;

//004E8D44
{*procedure TControl.WMLButtonDown(?:?);
begin
 004E8D44    push        ebx
 004E8D45    push        esi
 004E8D46    mov         esi,edx
 004E8D48    mov         ebx,eax
 004E8D4A    mov         edx,ebx
 004E8D4C    mov         eax,ebx
 004E8D4E    call        TControl.SendCancelMode
 004E8D53    mov         edx,esi
 004E8D55    mov         eax,ebx
 004E8D57    mov         ecx,dword ptr [eax]
 004E8D59    call        dword ptr [ecx-10];TControl.DefaultHandler
 004E8D5C    test        byte ptr [ebx+60],2;TControl.FControlStyle:TControlStyle
>004E8D60    je          004E8D6B
 004E8D62    mov         dl,1
 004E8D64    mov         eax,ebx
 004E8D66    call        TControl.SetMouseCapture
 004E8D6B    test        byte ptr [ebx+60],8;TControl.FControlStyle:TControlStyle
>004E8D6F    je          004E8D75
 004E8D71    or          dword ptr [ebx+64],2;TControl.FControlState:TControlState
 004E8D75    movzx       eax,word ptr ds:[4E8D8C];0x0 gvar_004E8D8C
 004E8D7C    push        eax
 004E8D7D    mov         edx,esi
 004E8D7F    xor         ecx,ecx
 004E8D81    mov         eax,ebx
 004E8D83    call        TControl.DoMouseDown
 004E8D88    pop         esi
 004E8D89    pop         ebx
 004E8D8A    ret
end;*}

//004E8D90
procedure TControl.WMNCLButtonDown(var Message:Messages.TWMNCLButtonDown);
begin
{*
 004E8D90    push        ebx
 004E8D91    push        esi
 004E8D92    mov         esi,edx
 004E8D94    mov         ebx,eax
 004E8D96    mov         edx,ebx
 004E8D98    mov         eax,ebx
 004E8D9A    call        TControl.SendCancelMode
 004E8D9F    mov         edx,esi
 004E8DA1    mov         eax,ebx
 004E8DA3    mov         ecx,dword ptr [eax]
 004E8DA5    call        dword ptr [ecx-10]
 004E8DA8    pop         esi
 004E8DA9    pop         ebx
 004E8DAA    ret
*}
end;

//004E8DAC
{*procedure TControl.WMLButtonDblClk(?:?);
begin
 004E8DAC    push        ebx
 004E8DAD    push        esi
 004E8DAE    push        edi
 004E8DAF    mov         edi,edx
 004E8DB1    mov         ebx,eax
 004E8DB3    mov         edx,ebx
 004E8DB5    mov         eax,ebx
 004E8DB7    call        TControl.SendCancelMode
 004E8DBC    mov         edx,edi
 004E8DBE    mov         eax,ebx
 004E8DC0    mov         ecx,dword ptr [eax]
 004E8DC2    call        dword ptr [ecx-10];TControl.DefaultHandler
 004E8DC5    test        byte ptr [ebx+60],2;TControl.FControlStyle:TControlStyle
>004E8DC9    je          004E8DD4
 004E8DCB    mov         dl,1
 004E8DCD    mov         eax,ebx
 004E8DCF    call        TControl.SetMouseCapture
 004E8DD4    test        byte ptr [ebx+60],8;TControl.FControlStyle:TControlStyle
>004E8DD8    je          004E8DE5
 004E8DDA    mov         eax,ebx
 004E8DDC    mov         si,0FFEA
 004E8DE0    call        @CallDynaInst;TControl.sub_004E8C50
 004E8DE5    movzx       eax,word ptr ds:[4E8DFC];0x40 gvar_004E8DFC
 004E8DEC    push        eax
 004E8DED    mov         edx,edi
 004E8DEF    xor         ecx,ecx
 004E8DF1    mov         eax,ebx
 004E8DF3    call        TControl.DoMouseDown
 004E8DF8    pop         edi
 004E8DF9    pop         esi
 004E8DFA    pop         ebx
 004E8DFB    ret
end;*}

//004E8E00
procedure TControl.sub_004E8E00;
begin
{*
 004E8E00    mov         eax,dword ptr [eax+8C];TControl.FPopupMenu:TPopupMenu
 004E8E06    ret
*}
end;

//004E8E08
function TControl.CheckNewSize(var NewWidth:Integer; var NewHeight:Integer):Boolean;
begin
{*
 004E8E08    push        ebx
 004E8E09    push        esi
 004E8E0A    push        edi
 004E8E0B    push        ebp
 004E8E0C    add         esp,0FFFFFFF0
 004E8E0F    mov         ebp,ecx
 004E8E11    mov         edi,edx
 004E8E13    mov         esi,eax
 004E8E15    xor         ebx,ebx
 004E8E17    mov         eax,dword ptr [edi]
 004E8E19    mov         dword ptr [esp],eax
 004E8E1C    mov         eax,dword ptr [ebp]
 004E8E1F    mov         dword ptr [esp+4],eax
 004E8E23    lea         ecx,[esp+4]
 004E8E27    mov         edx,esp
 004E8E29    mov         eax,esi
 004E8E2B    call        004E8144
 004E8E30    test        al,al
>004E8E32    je          004E8E99
 004E8E34    mov         eax,dword ptr [esp]
 004E8E37    mov         dword ptr [esp+8],eax
 004E8E3B    mov         eax,dword ptr [esp+4]
 004E8E3F    mov         dword ptr [esp+0C],eax
 004E8E43    cmp         byte ptr [esi+6E],0
>004E8E47    je          004E8E86
 004E8E49    lea         ecx,[esp+0C]
 004E8E4D    lea         edx,[esp+8]
 004E8E51    mov         eax,esi
 004E8E53    call        004E80D8
 004E8E58    test        al,al
>004E8E5A    je          004E8E6F
 004E8E5C    mov         eax,dword ptr [esp+8]
 004E8E60    cmp         eax,dword ptr [esp]
>004E8E63    jne         004E8E6F
 004E8E65    mov         eax,dword ptr [esp+0C]
 004E8E69    cmp         eax,dword ptr [esp+4]
>004E8E6D    je          004E8E86
 004E8E6F    lea         ecx,[esp+0C]
 004E8E73    lea         edx,[esp+8]
 004E8E77    mov         eax,esi
 004E8E79    call        004E8144
 004E8E7E    test        al,al
>004E8E80    jne         004E8E86
 004E8E82    xor         ebx,ebx
>004E8E84    jmp         004E8E88
 004E8E86    mov         bl,1
 004E8E88    test        bl,bl
>004E8E8A    je          004E8E99
 004E8E8C    mov         eax,dword ptr [esp+8]
 004E8E90    mov         dword ptr [edi],eax
 004E8E92    mov         eax,dword ptr [esp+0C]
 004E8E96    mov         dword ptr [ebp],eax
 004E8E99    mov         eax,ebx
 004E8E9B    add         esp,10
 004E8E9E    pop         ebp
 004E8E9F    pop         edi
 004E8EA0    pop         esi
 004E8EA1    pop         ebx
 004E8EA2    ret
*}
end;

//004E8EA4
procedure TControl.WMRButtonDown(var Message:Messages.TWMRButtonDown);
begin
{*
 004E8EA4    push        ebx
 004E8EA5    push        esi
 004E8EA6    mov         esi,edx
 004E8EA8    mov         ebx,eax
 004E8EAA    mov         edx,esi
 004E8EAC    mov         eax,ebx
 004E8EAE    mov         ecx,dword ptr [eax]
 004E8EB0    call        dword ptr [ecx-10]
 004E8EB3    movzx       eax,word ptr ds:[4E8ECC]
 004E8EBA    push        eax
 004E8EBB    mov         edx,esi
 004E8EBD    mov         cl,1
 004E8EBF    mov         eax,ebx
 004E8EC1    call        TControl.DoMouseDown
 004E8EC6    pop         esi
 004E8EC7    pop         ebx
 004E8EC8    ret
*}
end;

//004E8ED0
procedure TControl.WMRButtonDblClk(var Message:Messages.TWMRButtonDblClk);
begin
{*
 004E8ED0    push        ebx
 004E8ED1    push        esi
 004E8ED2    mov         esi,edx
 004E8ED4    mov         ebx,eax
 004E8ED6    mov         edx,esi
 004E8ED8    mov         eax,ebx
 004E8EDA    mov         ecx,dword ptr [eax]
 004E8EDC    call        dword ptr [ecx-10]
 004E8EDF    movzx       eax,word ptr ds:[4E8EF8]
 004E8EE6    push        eax
 004E8EE7    mov         edx,esi
 004E8EE9    mov         cl,1
 004E8EEB    mov         eax,ebx
 004E8EED    call        TControl.DoMouseDown
 004E8EF2    pop         esi
 004E8EF3    pop         ebx
 004E8EF4    ret
*}
end;

//004E8EFC
procedure TControl.WMMButtonDown(var Message:Messages.TWMMButtonDown);
begin
{*
 004E8EFC    push        ebx
 004E8EFD    push        esi
 004E8EFE    mov         esi,edx
 004E8F00    mov         ebx,eax
 004E8F02    mov         edx,esi
 004E8F04    mov         eax,ebx
 004E8F06    mov         ecx,dword ptr [eax]
 004E8F08    call        dword ptr [ecx-10]
 004E8F0B    movzx       eax,word ptr ds:[4E8F24]
 004E8F12    push        eax
 004E8F13    mov         edx,esi
 004E8F15    mov         cl,2
 004E8F17    mov         eax,ebx
 004E8F19    call        TControl.DoMouseDown
 004E8F1E    pop         esi
 004E8F1F    pop         ebx
 004E8F20    ret
*}
end;

//004E8F28
procedure TControl.WMMButtonDblClk(var Message:Messages.TWMMButtonDblClk);
begin
{*
 004E8F28    push        ebx
 004E8F29    push        esi
 004E8F2A    mov         esi,edx
 004E8F2C    mov         ebx,eax
 004E8F2E    mov         edx,esi
 004E8F30    mov         eax,ebx
 004E8F32    mov         ecx,dword ptr [eax]
 004E8F34    call        dword ptr [ecx-10]
 004E8F37    movzx       eax,word ptr ds:[4E8F50]
 004E8F3E    push        eax
 004E8F3F    mov         edx,esi
 004E8F41    mov         cl,2
 004E8F43    mov         eax,ebx
 004E8F45    call        TControl.DoMouseDown
 004E8F4A    pop         esi
 004E8F4B    pop         ebx
 004E8F4C    ret
*}
end;

//004E8F54
{*procedure TControl.sub_004E8F54(?:?; ?:?);
begin
 004E8F54    push        ebp
 004E8F55    mov         ebp,esp
 004E8F57    push        ecx
 004E8F58    push        ebx
 004E8F59    mov         word ptr [ebp-2],dx
 004E8F5D    cmp         word ptr [eax+0DA],0;TControl.?fDA:word
>004E8F65    je          004E8F80
 004E8F67    push        ecx
 004E8F68    mov         edx,dword ptr [ebp+8]
 004E8F6B    push        edx
 004E8F6C    mov         ebx,eax
 004E8F6E    mov         edx,eax
 004E8F70    movzx       ecx,word ptr [ebp-2]
 004E8F74    mov         eax,dword ptr [ebx+0DC];TControl.?fDC:dword
 004E8F7A    call        dword ptr [ebx+0D8];TControl.FOnMouseMove
 004E8F80    pop         ebx
 004E8F81    pop         ecx
 004E8F82    pop         ebp
 004E8F83    ret         4
end;*}

//004E8F88
{*procedure TControl.WMMouseMove(?:?);
begin
 004E8F88    push        esi
 004E8F89    push        edi
 004E8F8A    add         esp,0FFFFFFF8
 004E8F8D    mov         edi,edx
 004E8F8F    mov         esi,eax
 004E8F91    mov         edx,edi
 004E8F93    mov         eax,esi
 004E8F95    mov         ecx,dword ptr [eax]
 004E8F97    call        dword ptr [ecx-10];TControl.DefaultHandler
 004E8F9A    test        byte ptr [esi+61],10;TControl.FVisible:Boolean
>004E8F9E    jne         004E900B
 004E8FA0    cmp         dword ptr [esi+58],8000;TControl.FWidth:Integer
>004E8FA7    jg          004E8FB2
 004E8FA9    cmp         dword ptr [esi+5C],8000;TControl.FHeight:Integer
>004E8FB0    jle         004E8FE4
 004E8FB2    mov         edx,esp
 004E8FB4    mov         eax,esi
 004E8FB6    call        TControl.CalcCursorPos
 004E8FBB    mov         eax,dword ptr [esp+4]
 004E8FBF    push        eax
 004E8FC0    movzx       eax,word ptr [edi+4]
 004E8FC4    call        KeysToShiftState
 004E8FC9    push        eax
 004E8FCA    call        MouseOriginToShiftState
 004E8FCF    pop         edx
 004E8FD0    or          dx,ax
 004E8FD3    mov         ecx,dword ptr [esp+4]
 004E8FD7    mov         eax,esi
 004E8FD9    mov         si,0FFD3
 004E8FDD    call        @CallDynaInst;TControl.sub_004E8F54
>004E8FE2    jmp         004E900B
 004E8FE4    movsx       eax,word ptr [edi+0A]
 004E8FE8    push        eax
 004E8FE9    movzx       eax,word ptr [edi+4]
 004E8FED    call        KeysToShiftState
 004E8FF2    push        eax
 004E8FF3    call        MouseOriginToShiftState
 004E8FF8    pop         edx
 004E8FF9    or          dx,ax
 004E8FFC    movsx       ecx,word ptr [edi+8]
 004E9000    mov         eax,esi
 004E9002    mov         si,0FFD3
 004E9006    call        @CallDynaInst;TControl.sub_004E8F54
 004E900B    pop         ecx
 004E900C    pop         edx
 004E900D    pop         edi
 004E900E    pop         esi
 004E900F    ret
end;*}

//004E9010
{*procedure TControl.sub_004E9010(?:?; ?:?; ?:?; ?:?);
begin
 004E9010    push        ebp
 004E9011    mov         ebp,esp
 004E9013    push        ecx
 004E9014    push        ebx
 004E9015    mov         word ptr [ebp-2],cx
 004E9019    cmp         word ptr [eax+0E2],0;TControl.?fE2:word
>004E9021    je          004E9042
 004E9023    movzx       ecx,word ptr [ebp-2]
 004E9027    push        ecx
 004E9028    mov         ecx,dword ptr [ebp+0C]
 004E902B    push        ecx
 004E902C    mov         ecx,dword ptr [ebp+8]
 004E902F    push        ecx
 004E9030    mov         ecx,edx
 004E9032    mov         ebx,eax
 004E9034    mov         edx,eax
 004E9036    mov         eax,dword ptr [ebx+0E4];TControl.?fE4:dword
 004E903C    call        dword ptr [ebx+0E0];TControl.FOnMouseUp
 004E9042    pop         ebx
 004E9043    pop         ecx
 004E9044    pop         ebp
 004E9045    ret         8
end;*}

//004E9048
procedure TControl.DoMouseUp(var Message:Messages.TWMMouse; Button:UITypes.TMouseButton);
begin
{*
 004E9048    push        esi
 004E9049    push        edi
 004E904A    push        ecx
 004E904B    mov         byte ptr [esp],cl
 004E904E    mov         edi,edx
 004E9050    mov         esi,eax
 004E9052    test        byte ptr [esi+61],10
>004E9056    jne         004E9085
 004E9058    movsx       eax,word ptr [edi+8]
 004E905C    push        eax
 004E905D    movsx       eax,word ptr [edi+0A]
 004E9061    push        eax
 004E9062    movzx       eax,word ptr [edi+4]
 004E9066    call        KeysToShiftState
 004E906B    push        eax
 004E906C    call        MouseOriginToShiftState
 004E9071    pop         ecx
 004E9072    or          cx,ax
 004E9075    movzx       edx,byte ptr [esp+8]
 004E907A    mov         eax,esi
 004E907C    mov         si,0FFD2
 004E9080    call        @CallDynaInst
 004E9085    pop         edx
 004E9086    pop         edi
 004E9087    pop         esi
 004E9088    ret
*}
end;

//004E908C
{*procedure TControl.WMLButtonUp(?:?);
begin
 004E908C    push        ebx
 004E908D    push        esi
 004E908E    push        edi
 004E908F    add         esp,0FFFFFFE4
 004E9092    mov         edi,edx
 004E9094    mov         ebx,eax
 004E9096    mov         edx,edi
 004E9098    mov         eax,ebx
 004E909A    mov         ecx,dword ptr [eax]
 004E909C    call        dword ptr [ecx-10];TControl.DefaultHandler
 004E909F    test        byte ptr [ebx+60],2;TControl.FControlStyle:TControlStyle
>004E90A3    je          004E90AE
 004E90A5    xor         edx,edx
 004E90A7    mov         eax,ebx
 004E90A9    call        TControl.SetMouseCapture
 004E90AE    test        byte ptr [ebx+64],2;TControl.FControlState:TControlState
>004E90B2    je          004E90FA
 004E90B4    and         dword ptr [ebx+64],0FFFFFFFD;TControl.FControlState:TControlState
 004E90B8    lea         eax,[edi+8]
 004E90BB    mov         dword ptr [esp],eax
 004E90BE    mov         eax,dword ptr [esp]
 004E90C1    movsx       eax,word ptr [eax]
 004E90C4    mov         dword ptr [esp+4],eax
 004E90C8    mov         eax,dword ptr [esp]
 004E90CB    movsx       eax,word ptr [eax+2]
 004E90CF    mov         dword ptr [esp+8],eax
 004E90D3    lea         edx,[esp+0C]
 004E90D7    mov         eax,ebx
 004E90D9    mov         ecx,dword ptr [eax]
 004E90DB    call        dword ptr [ecx+64];TControl.sub_004E6794
 004E90DE    lea         eax,[esp+0C]
 004E90E2    lea         edx,[esp+4]
 004E90E6    call        TRect.Contains
 004E90EB    test        al,al
>004E90ED    je          004E90FA
 004E90EF    mov         eax,ebx
 004E90F1    mov         si,0FFEB
 004E90F5    call        @CallDynaInst;TControl.Click
 004E90FA    mov         edx,edi
 004E90FC    xor         ecx,ecx
 004E90FE    mov         eax,ebx
 004E9100    call        TControl.DoMouseUp
 004E9105    add         esp,1C
 004E9108    pop         edi
 004E9109    pop         esi
 004E910A    pop         ebx
 004E910B    ret
end;*}

//004E910C
procedure TControl.WMRButtonUp(var Message:Messages.TWMRButtonUp);
begin
{*
 004E910C    push        ebx
 004E910D    push        esi
 004E910E    mov         esi,edx
 004E9110    mov         ebx,eax
 004E9112    mov         edx,esi
 004E9114    mov         eax,ebx
 004E9116    mov         ecx,dword ptr [eax]
 004E9118    call        dword ptr [ecx-10]
 004E911B    mov         edx,esi
 004E911D    mov         cl,1
 004E911F    mov         eax,ebx
 004E9121    call        TControl.DoMouseUp
 004E9126    pop         esi
 004E9127    pop         ebx
 004E9128    ret
*}
end;

//004E912C
procedure TControl.WMMButtonUp(var Message:Messages.TWMMButtonUp);
begin
{*
 004E912C    push        ebx
 004E912D    push        esi
 004E912E    mov         esi,edx
 004E9130    mov         ebx,eax
 004E9132    mov         edx,esi
 004E9134    mov         eax,ebx
 004E9136    mov         ecx,dword ptr [eax]
 004E9138    call        dword ptr [ecx-10]
 004E913B    mov         edx,esi
 004E913D    mov         cl,2
 004E913F    mov         eax,ebx
 004E9141    call        TControl.DoMouseUp
 004E9146    pop         esi
 004E9147    pop         ebx
 004E9148    ret
*}
end;

//004E914C
{*procedure TControl.WMMouseWheel(?:?);
begin
 004E914C    push        ebx
 004E914D    push        esi
 004E914E    push        edi
 004E914F    mov         ebx,edx
 004E9151    mov         edi,eax
 004E9153    mov         eax,[007CA5D4];gvar_007CA5D4
 004E9158    cmp         byte ptr [eax+20],0
>004E915C    jne         004E9176
 004E915E    mov         eax,[007CA5D4];gvar_007CA5D4
 004E9163    mov         byte ptr [eax+20],1
 004E9167    mov         edx,68
 004E916C    mov         eax,[007CA5D4];gvar_007CA5D4
 004E9171    call        TMouse.SettingChanged
 004E9176    movzx       eax,word ptr [ebx+4]
 004E917A    call        KeysToShiftState
 004E917F    mov         word ptr [ebx+4],ax
 004E9183    mov         edx,ebx
 004E9185    mov         eax,edi
 004E9187    mov         si,0FFC8
 004E918B    call        @CallDynaInst;TControl.sub_004E74CC
 004E9190    cmp         dword ptr [ebx+0C],0
>004E9194    jne         004E919F
 004E9196    mov         edx,ebx
 004E9198    mov         eax,edi
 004E919A    mov         ecx,dword ptr [eax]
 004E919C    call        dword ptr [ecx-10];TControl.DefaultHandler
 004E919F    pop         edi
 004E91A0    pop         esi
 004E91A1    pop         ebx
 004E91A2    ret
end;*}

//004E91A4
procedure TWinControl.CMCtl3DChanged(var Message:Messages.TMessage);
begin
{*
 004E91A4    push        ebx
 004E91A5    mov         ebx,eax
 004E91A7    mov         eax,ebx
 004E91A9    mov         ecx,dword ptr [eax]
 004E91AB    call        dword ptr [ecx-10]
 004E91AE    mov         eax,ebx
 004E91B0    call        TControl.GetMouseCapture
 004E91B5    test        al,al
>004E91B7    je          004E91DA
 004E91B9    xor         edx,edx
 004E91BB    mov         eax,ebx
 004E91BD    call        TControl.SetMouseCapture
 004E91C2    test        byte ptr [ebx+64],1
>004E91C6    je          004E91DE
 004E91C8    push        0FF
 004E91CA    xor         ecx,ecx
 004E91CC    mov         edx,202
 004E91D1    mov         eax,ebx
 004E91D3    call        TControl.Perform
 004E91D8    pop         ebx
 004E91D9    ret
 004E91DA    and         dword ptr [ebx+64],0FFFFFFFE
 004E91DE    pop         ebx
 004E91DF    ret
*}
end;

//004E91E0
{*procedure TControl.WMWindowPosChangedMsg(?:?);
begin
 004E91E0    push        ebx
 004E91E1    push        esi
 004E91E2    mov         esi,edx
 004E91E4    mov         ebx,eax
 004E91E6    mov         edx,esi
 004E91E8    mov         eax,ebx
 004E91EA    mov         ecx,dword ptr [eax]
 004E91EC    call        dword ptr [ecx-10];TControl.DefaultHandler
 004E91EF    movzx       eax,word ptr ds:[4E9290];0x3 gvar_004E9290
 004E91F6    and         ax,word ptr [ebx+1C];TControl.FComponentState:TComponentState
 004E91FA    movzx       edx,word ptr ds:[4E9294];0x0 gvar_004E9294
 004E9201    cmp         dx,ax
>004E9204    jne         004E928B
 004E920A    mov         eax,dword ptr [ebx+80];TControl.FConstraints:TSizeConstraints
 004E9210    mov         edx,dword ptr [eax+0C];TSizeConstraints.FMaxWidth:TConstraintSize
 004E9213    test        edx,edx
>004E9215    jbe         004E9224
 004E9217    cmp         edx,dword ptr [ebx+58];TControl.FWidth:Integer
>004E921A    jge         004E9224
 004E921C    mov         edx,dword ptr [ebx+58];TControl.FWidth:Integer
 004E921F    mov         dword ptr [eax+0C],edx;TSizeConstraints.FMaxWidth:TConstraintSize
>004E9222    jmp         004E9236
 004E9224    mov         edx,dword ptr [eax+14];TSizeConstraints.FMinWidth:TConstraintSize
 004E9227    test        edx,edx
>004E9229    jbe         004E9236
 004E922B    cmp         edx,dword ptr [ebx+58];TControl.FWidth:Integer
>004E922E    jle         004E9236
 004E9230    mov         edx,dword ptr [ebx+58];TControl.FWidth:Integer
 004E9233    mov         dword ptr [eax+14],edx;TSizeConstraints.FMinWidth:TConstraintSize
 004E9236    mov         edx,dword ptr [eax+8];TSizeConstraints.FMaxHeight:TConstraintSize
 004E9239    test        edx,edx
>004E923B    jbe         004E924A
 004E923D    cmp         edx,dword ptr [ebx+5C];TControl.FHeight:Integer
>004E9240    jge         004E924A
 004E9242    mov         edx,dword ptr [ebx+5C];TControl.FHeight:Integer
 004E9245    mov         dword ptr [eax+8],edx;TSizeConstraints.FMaxHeight:TConstraintSize
>004E9248    jmp         004E925C
 004E924A    mov         edx,dword ptr [eax+10];TSizeConstraints.FMinHeight:TConstraintSize
 004E924D    test        edx,edx
>004E924F    jbe         004E925C
 004E9251    cmp         edx,dword ptr [ebx+5C];TControl.FHeight:Integer
>004E9254    jle         004E925C
 004E9256    mov         edx,dword ptr [ebx+5C];TControl.FHeight:Integer
 004E9259    mov         dword ptr [eax+10],edx;TSizeConstraints.FMinHeight:TConstraintSize
 004E925C    mov         eax,dword ptr [esi+8]
 004E925F    test        eax,eax
>004E9261    je          004E928B
 004E9263    cmp         dword ptr [ebx+0A0],0;TControl.FHostDockSite:TWinControl
>004E926A    je          004E928B
 004E926C    test        byte ptr [ebx+65],4;TControl.FAlign:TAlign
>004E9270    jne         004E928B
 004E9272    test        byte ptr [eax+18],1
>004E9276    jne         004E928B
 004E9278    cmp         dword ptr [eax+10],0
>004E927C    je          004E928B
 004E927E    cmp         dword ptr [eax+14],0
>004E9282    je          004E928B
 004E9284    mov         eax,ebx
 004E9286    call        004E8374
 004E928B    pop         esi
 004E928C    pop         ebx
 004E928D    ret
end;*}

//004E9298
procedure TControl.CMVisibleChanged;
begin
{*
 004E9298    test        byte ptr [eax+1C],10;TControl.FComponentState:TComponentState
>004E929C    je          004E92A4
 004E929E    test        byte ptr [eax+61],4;TControl.FVisible:Boolean
>004E92A2    je          004E92BD
 004E92A4    cmp         byte ptr [eax+69],0;TControl.FVisible:Boolean
>004E92A8    je          004E92B0
 004E92AA    test        byte ptr [eax+60],40;TControl.FControlStyle:TControlStyle
>004E92AE    jne         004E92B4
 004E92B0    xor         ecx,ecx
>004E92B2    jmp         004E92B6
 004E92B4    mov         cl,1
 004E92B6    mov         dl,1
 004E92B8    call        004E73DC
 004E92BD    ret
*}
end;

//004E92C0
procedure TControl.CMEnabledChanged;
begin
{*
 004E92C0    push        esi
 004E92C1    mov         esi,eax
 004E92C3    mov         eax,esi
 004E92C5    mov         edx,dword ptr [eax]
 004E92C7    call        dword ptr [edx+0A8];TControl.Invalidate
 004E92CD    pop         esi
 004E92CE    ret
*}
end;

//004E92D0
procedure TControl.CMFontChanged;
begin
{*
 004E92D0    push        esi
 004E92D1    mov         esi,eax
 004E92D3    mov         eax,esi
 004E92D5    mov         edx,dword ptr [eax]
 004E92D7    call        dword ptr [edx+0A8];TControl.Invalidate
 004E92DD    pop         esi
 004E92DE    ret
*}
end;

//004E92E0
procedure TControl.CMColorChanged;
begin
{*
 004E92E0    push        esi
 004E92E1    mov         esi,eax
 004E92E3    mov         eax,esi
 004E92E5    mov         edx,dword ptr [eax]
 004E92E7    call        dword ptr [edx+0A8];TControl.Invalidate
 004E92ED    pop         esi
 004E92EE    ret
*}
end;

//004E92F0
{*procedure sub_004E92F0(?:TColor; ?:?);
begin
 004E92F0    push        ebp
 004E92F1    mov         ebp,esp
 004E92F3    mov         edx,dword ptr [ebp+8]
 004E92F6    mov         edx,dword ptr [edx-4]
 004E92F9    cmp         eax,dword ptr [edx+7C]
>004E92FC    je          004E9325
 004E92FE    mov         edx,dword ptr [ebp+8]
 004E9301    mov         edx,dword ptr [edx-4]
 004E9304    mov         dword ptr [edx+7C],eax
 004E9307    mov         eax,dword ptr [ebp+8]
 004E930A    mov         eax,dword ptr [eax-4]
 004E930D    mov         byte ptr [eax+6C],0
 004E9311    push        0
 004E9313    mov         eax,dword ptr [ebp+8]
 004E9316    mov         eax,dword ptr [eax-4]
 004E9319    xor         ecx,ecx
 004E931B    mov         edx,0B00D
 004E9320    call        TControl.Perform
 004E9325    pop         ebp
 004E9326    ret
end;*}

//004E9328
{*procedure TControl.CMParentColorChanged(?:?);
begin
 004E9328    push        ebp
 004E9329    mov         ebp,esp
 004E932B    push        ecx
 004E932C    mov         dword ptr [ebp-4],eax
 004E932F    mov         eax,dword ptr [ebp-4]
 004E9332    cmp         byte ptr [eax+6C],0;TControl.FParentColor:Boolean
>004E9336    je          004E9361
 004E9338    cmp         dword ptr [edx+4],0
>004E933C    je          004E934A
 004E933E    push        ebp
 004E933F    mov         eax,dword ptr [edx+8]
 004E9342    call        004E92F0
 004E9347    pop         ecx
>004E9348    jmp         004E935A
 004E934A    push        ebp
 004E934B    mov         eax,dword ptr [ebp-4]
 004E934E    mov         eax,dword ptr [eax+40];TControl.FParent:TWinControl
 004E9351    mov         eax,dword ptr [eax+7C];TWinControl.FColor:TColor
 004E9354    call        004E92F0
 004E9359    pop         ecx
 004E935A    mov         eax,dword ptr [ebp-4]
 004E935D    mov         byte ptr [eax+6C],1;TControl.FParentColor:Boolean
 004E9361    pop         ecx
 004E9362    pop         ebp
 004E9363    ret
end;*}

//004E9364
procedure TControl.CMParentBiDiModeChanged;
begin
{*
 004E9364    push        ebx
 004E9365    mov         ebx,eax
 004E9367    cmp         byte ptr [ebx+72],0;TControl.FParentBiDiMode:Boolean
>004E936B    je          004E9386
 004E936D    mov         eax,dword ptr [ebx+40];TControl.FParent:TWinControl
 004E9370    test        eax,eax
>004E9372    je          004E9382
 004E9374    movzx       edx,byte ptr [eax+71];TWinControl.FBiDiMode:TBiDiMode
 004E9378    mov         eax,ebx
 004E937A    mov         ecx,dword ptr [eax]
 004E937C    call        dword ptr [ecx+94];TGroupBox.SetBiDiMode
 004E9382    mov         byte ptr [ebx+72],1;TControl.FParentBiDiMode:Boolean
 004E9386    pop         ebx
 004E9387    ret
*}
end;

//004E9388
{*procedure TControl.CMMouseWheel(?:?);
begin
 004E9388    push        ebx
 004E9389    push        esi
 004E938A    push        edi
 004E938B    add         esp,0FFFFFFF4
 004E938E    mov         ebx,edx
 004E9390    mov         edi,eax
 004E9392    xor         eax,eax
 004E9394    mov         dword ptr [ebx+0C],eax
 004E9397    lea         eax,[ebx+8]
 004E939A    mov         dword ptr [esp],eax
 004E939D    mov         eax,dword ptr [esp]
 004E93A0    movsx       eax,word ptr [eax]
 004E93A3    mov         dword ptr [esp+4],eax
 004E93A7    mov         eax,dword ptr [esp]
 004E93AA    movsx       eax,word ptr [eax+2]
 004E93AE    mov         dword ptr [esp+8],eax
 004E93B2    lea         eax,[esp+4]
 004E93B6    push        eax
 004E93B7    movsx       ecx,word ptr [ebx+6]
 004E93BB    movzx       edx,word ptr [ebx+4]
 004E93BF    mov         eax,edi
 004E93C1    mov         si,0FFE3
 004E93C5    call        @CallDynaInst;TControl.sub_004E7A2C
 004E93CA    test        al,al
>004E93CC    je          004E93D7
 004E93CE    mov         dword ptr [ebx+0C],1
>004E93D5    jmp         004E93F4
 004E93D7    mov         esi,dword ptr [edi+40];TControl.FParent:TWinControl
 004E93DA    test        esi,esi
>004E93DC    je          004E93F4
 004E93DE    mov         eax,dword ptr [ebx+8]
 004E93E1    push        eax
 004E93E2    mov         ecx,dword ptr [ebx+4]
 004E93E5    mov         edx,0B043
 004E93EA    mov         eax,esi
 004E93EC    call        TControl.Perform
 004E93F1    mov         dword ptr [ebx+0C],eax
 004E93F4    add         esp,0C
 004E93F7    pop         edi
 004E93F8    pop         esi
 004E93F9    pop         ebx
 004E93FA    ret
end;*}

//004E93FC
{*procedure TControl.sub_004E93FC(?:?);
begin
 004E93FC    push        ebx
 004E93FD    push        esi
 004E93FE    push        edi
 004E93FF    push        ecx
 004E9400    mov         esi,edx
 004E9402    mov         ebx,eax
 004E9404    mov         byte ptr [esp],0
 004E9408    cmp         word ptr [ebx+16A],0;TControl.?f16A:word
>004E9410    je          004E9426
 004E9412    push        esp
 004E9413    mov         eax,dword ptr [esi+8]
 004E9416    mov         ecx,eax
 004E9418    mov         edx,ebx
 004E941A    mov         eax,dword ptr [ebx+16C];TControl.FHelpKeyword:UnicodeString
 004E9420    call        dword ptr [ebx+168];TControl.FOnGesture
 004E9426    cmp         byte ptr [esp],0
>004E942A    jne         004E943A
 004E942C    mov         ecx,esp
 004E942E    mov         eax,dword ptr [esi+8]
 004E9431    mov         edx,eax
 004E9433    mov         eax,ebx
 004E9435    mov         edi,dword ptr [eax]
 004E9437    call        dword ptr [edi+54];TControl.sub_004E7860
 004E943A    cmp         byte ptr [esp],0
>004E943E    je          004E9449
 004E9440    mov         dword ptr [esi+0C],1
>004E9447    jmp         004E946B
 004E9449    mov         eax,dword ptr [esi+8]
 004E944C    cmp         word ptr [eax],0
>004E9450    jne         004E946B
 004E9452    cmp         dword ptr [ebx+40],0;TControl.FParent:TWinControl
>004E9456    je          004E946B
 004E9458    mov         eax,dword ptr [esi+8]
 004E945B    push        eax
 004E945C    xor         ecx,ecx
 004E945E    mov         edx,0B052
 004E9463    mov         eax,dword ptr [ebx+40];TControl.FParent:TWinControl
 004E9466    call        TControl.Perform
 004E946B    pop         edx
 004E946C    pop         edi
 004E946D    pop         esi
 004E946E    pop         ebx
 004E946F    ret
end;*}

//004E9470
procedure TControl.CMBiDiModeChanged(var Message:Messages.TMessage);
begin
{*
 004E9470    push        esi
 004E9471    mov         esi,eax
 004E9473    mov         eax,[007C4EF4];^gvar_007C7CB8:Cardinal
 004E9478    cmp         byte ptr [eax+0D],0
>004E947C    je          004E948E
 004E947E    cmp         dword ptr [edx+4],0
>004E9482    jne         004E948E
 004E9484    mov         eax,esi
 004E9486    mov         edx,dword ptr [eax]
 004E9488    call        dword ptr [edx+0A8]
 004E948E    pop         esi
 004E948F    ret
*}
end;

//004E9490
procedure TControl.CMParentShowHintChanged;
begin
{*
 004E9490    push        ebx
 004E9491    mov         ebx,eax
 004E9493    cmp         byte ptr [ebx+9A],0;TControl.FParentShowHint:Boolean
>004E949A    je          004E94C9
 004E949C    test        byte ptr [ebx+1C],10;TControl.FComponentState:TComponentState
 004E94A0    setne       al
 004E94A3    mov         edx,dword ptr [ebx+40];TControl.FParent:TWinControl
 004E94A6    test        byte ptr [edx+1C],10;TWinControl.FComponentState:TComponentState
 004E94AA    setne       dl
 004E94AD    cmp         al,dl
>004E94AF    jne         004E94C9
 004E94B1    mov         eax,dword ptr [ebx+40];TControl.FParent:TWinControl
 004E94B4    movzx       edx,byte ptr [eax+99];TWinControl.FShowHint:Boolean
 004E94BB    mov         eax,ebx
 004E94BD    call        TGroupBox.SetShowHint
 004E94C2    mov         byte ptr [ebx+9A],1;TControl.FParentShowHint:Boolean
 004E94C9    pop         ebx
 004E94CA    ret
*}
end;

//004E94CC
{*procedure TControl.CMParentFontChanged(?:?);
begin
 004E94CC    push        ebx
 004E94CD    mov         ebx,eax
 004E94CF    cmp         byte ptr [ebx+6B],0;TControl.FParentFont:Boolean
>004E94D3    je          004E94F8
 004E94D5    cmp         dword ptr [edx+4],0
>004E94D9    je          004E94E7
 004E94DB    mov         edx,dword ptr [edx+8]
 004E94DE    mov         eax,ebx
 004E94E0    call        TGroupBox.SetFont
>004E94E5    jmp         004E94F4
 004E94E7    mov         eax,dword ptr [ebx+40];TControl.FParent:TWinControl
 004E94EA    mov         edx,dword ptr [eax+74];TWinControl.FFont:TFont
 004E94ED    mov         eax,ebx
 004E94EF    call        TGroupBox.SetFont
 004E94F4    mov         byte ptr [ebx+6B],1;TControl.FParentFont:Boolean
 004E94F8    pop         ebx
 004E94F9    ret
end;*}

//004E94FC
procedure TControl.CMSysFontChanged(var Message:Messages.TMessage);
begin
{*
 004E94FC    push        ebx
 004E94FD    mov         ebx,eax
 004E94FF    cmp         byte ptr [ebx+68],0
>004E9503    je          004E951D
 004E9505    mov         eax,[007C4E78];^Screen:TScreen
 004E950A    mov         eax,dword ptr [eax]
 004E950C    mov         edx,dword ptr [eax+8C]
 004E9512    mov         eax,ebx
 004E9514    call        TGroupBox.SetFont
 004E9519    mov         byte ptr [ebx+68],1
 004E951D    pop         ebx
 004E951E    ret
*}
end;

//004E9520
procedure TControl.CMHitTest(var Message:Messages.TWMNCHitTest);
begin
{*
 004E9520    mov         dword ptr [edx+0C],1
 004E9527    ret
*}
end;

//004E9528
{*procedure TControl.CMMouseEnter(?:?);
begin
 004E9528    push        ebx
 004E9529    push        esi
 004E952A    mov         esi,edx
 004E952C    mov         ebx,eax
 004E952E    mov         eax,dword ptr [ebx+40];TControl.FParent:TWinControl
 004E9531    test        eax,eax
>004E9533    je          004E9542
 004E9535    push        ebx
 004E9536    xor         ecx,ecx
 004E9538    mov         edx,0B013
 004E953D    call        TControl.Perform
 004E9542    cmp         dword ptr [esi+8],0
>004E9546    jne         004E9588
 004E9548    cmp         word ptr [ebx+14A],0;TControl.?f14A:word
>004E9550    je          004E9560
 004E9552    mov         edx,ebx
 004E9554    mov         eax,dword ptr [ebx+14C];TControl.?f14C:dword
 004E955A    call        dword ptr [ebx+148];TControl.FOnMouseEnter
 004E9560    cmp         byte ptr [ebx+99],0;TControl.FShowHint:Boolean
>004E9567    je          004E9588
 004E9569    test        byte ptr [ebx+1C],10;TControl.FComponentState:TComponentState
>004E956D    jne         004E9588
 004E956F    mov         eax,ebx
 004E9571    call        TControl.GetCustomHint
 004E9576    test        eax,eax
>004E9578    je          004E9588
 004E957A    mov         eax,ebx
 004E957C    call        TControl.GetCustomHint
 004E9581    mov         edx,ebx
 004E9583    call        TCustomHint.ShowHint
 004E9588    pop         esi
 004E9589    pop         ebx
 004E958A    ret
end;*}

//004E958C
{*procedure TControl.CMMouseLeave(?:?);
begin
 004E958C    push        ebx
 004E958D    push        esi
 004E958E    mov         esi,edx
 004E9590    mov         ebx,eax
 004E9592    mov         eax,dword ptr [ebx+40];TControl.FParent:TWinControl
 004E9595    test        eax,eax
>004E9597    je          004E95A6
 004E9599    push        ebx
 004E959A    xor         ecx,ecx
 004E959C    mov         edx,0B014
 004E95A1    call        TControl.Perform
 004E95A6    cmp         dword ptr [esi+8],0
>004E95AA    jne         004E95EC
 004E95AC    cmp         word ptr [ebx+142],0;TControl.?f142:word
>004E95B4    je          004E95C4
 004E95B6    mov         edx,ebx
 004E95B8    mov         eax,dword ptr [ebx+144];TControl.?f144:dword
 004E95BE    call        dword ptr [ebx+140];TControl.FOnMouseLeave
 004E95C4    cmp         byte ptr [ebx+99],0;TControl.FShowHint:Boolean
>004E95CB    je          004E95EC
 004E95CD    test        byte ptr [ebx+1C],10;TControl.FComponentState:TComponentState
>004E95D1    jne         004E95EC
 004E95D3    mov         eax,ebx
 004E95D5    call        TControl.GetCustomHint
 004E95DA    test        eax,eax
>004E95DC    je          004E95EC
 004E95DE    mov         eax,ebx
 004E95E0    call        TControl.GetCustomHint
 004E95E5    mov         edx,ebx
 004E95E7    call        TCustomHint.HideHint
 004E95EC    pop         esi
 004E95ED    pop         ebx
 004E95EE    ret
end;*}

//004E95F0
procedure TControl.CMDesignHitTest(var Message:Messages.TWMMouse);
begin
{*
 004E95F0    xor         eax,eax
 004E95F2    mov         dword ptr [edx+0C],eax
 004E95F5    ret
*}
end;

//004E95F8
procedure TControl.sub_004E95F8;
begin
{*
 004E95F8    push        ebx
 004E95F9    mov         ebx,eax
 004E95FB    mov         eax,dword ptr [ebx+0BC];TControl.FTouchManager:TTouchManager
 004E9601    cmp         byte ptr [eax+18],0;TTouchManager.FParentTabletOptions:Boolean
>004E9605    je          004E9627
 004E9607    mov         edx,dword ptr [ebx+40];TControl.FParent:TWinControl
 004E960A    test        edx,edx
>004E960C    je          004E961D
 004E960E    mov         edx,dword ptr [edx+0BC];TWinControl.FTouchManager:TTouchManager
 004E9614    movzx       edx,word ptr [edx+1E];TTouchManager.FTabletOptions:TTabletOptions
 004E9618    call        TCustomTouchManager.SetTabletOptions
 004E961D    mov         eax,dword ptr [ebx+0BC];TControl.FTouchManager:TTouchManager
 004E9623    mov         byte ptr [eax+18],1;TTouchManager.FParentTabletOptions:Boolean
 004E9627    pop         ebx
 004E9628    ret
*}
end;

//004E962C
{*function sub_004E962C(?:TControl; ?:?):?;
begin
 004E962C    push        esi
 004E962D    push        edi
 004E962E    add         esp,0FFFFFFF0
 004E9631    mov         esi,edx
 004E9633    lea         edi,[esp]
 004E9636    movs        dword ptr [edi],dword ptr [esi]
 004E9637    movs        dword ptr [edi],dword ptr [esi]
 004E9638    movs        dword ptr [edi],dword ptr [esi]
 004E9639    movs        dword ptr [edi],dword ptr [esi]
 004E963A    mov         esi,eax
 004E963C    xor         edi,edi
 004E963E    mov         eax,esi
 004E9640    mov         edx,dword ptr [eax]
 004E9642    call        dword ptr [edx+74];TControl.sub_004E9BFC
 004E9645    test        eax,eax
>004E9647    je          004E96A0
 004E9649    mov         eax,esi
 004E964B    mov         edx,dword ptr [eax]
 004E964D    call        dword ptr [edx+74];TControl.sub_004E9BFC
 004E9650    mov         ecx,dword ptr [esi]
 004E9652    mov         edx,ecx
 004E9654    cmp         eax,edx
>004E9656    je          004E96A0
 004E9658    mov         eax,esi
 004E965A    mov         edx,dword ptr [eax]
 004E965C    call        dword ptr [edx+74];TControl.sub_004E9BFC
 004E965F    mov         ecx,dword ptr ds:[7C4A18];^Application:TApplication
 004E9665    mov         ecx,dword ptr [ecx]
 004E9667    mov         dl,1
 004E9669    call        dword ptr [eax+3C]
 004E966C    mov         edi,eax
 004E966E    mov         edx,dword ptr [esp+4]
 004E9672    mov         eax,edi
 004E9674    call        TControl.SetTop
 004E9679    mov         edx,dword ptr [esp]
 004E967C    mov         eax,edi
 004E967E    call        TControl.SetLeft
 004E9683    mov         edx,dword ptr [esp+8]
 004E9687    sub         edx,dword ptr [esp]
 004E968A    mov         eax,edi
 004E968C    call        TControl.SetClientWidth
 004E9691    mov         edx,dword ptr [esp+0C]
 004E9695    sub         edx,dword ptr [esp+4]
 004E9699    mov         eax,edi
 004E969B    call        TControl.SetClientHeight
 004E96A0    mov         eax,edi
 004E96A2    add         esp,10
 004E96A5    pop         edi
 004E96A6    pop         esi
 004E96A7    ret
end;*}

//004E96A8
procedure sub_004E96A8;
begin
{*
 004E96A8    push        ebx
 004E96A9    mov         ebx,eax
 004E96AB    mov         ecx,ebx
 004E96AD    mov         dl,1
 004E96AF    mov         eax,[004DB4AC];TTouchManager
 004E96B4    call        TCustomTouchManager.Create;TTouchManager.Create
 004E96B9    mov         dword ptr [ebx+0BC],eax;TMainForm.FTouchManager:TTouchManager
 004E96BF    pop         ebx
 004E96C0    ret
*}
end;

//004E96C4
{*procedure sub_004E96C4(?:?);
begin
 004E96C4    push        ebp
 004E96C5    mov         ebp,esp
 004E96C7    add         esp,0FFFFFFE0
 004E96CA    push        ebx
 004E96CB    push        esi
 004E96CC    push        edi
 004E96CD    mov         eax,dword ptr [ebp+8]
 004E96D0    mov         eax,dword ptr [eax-4]
 004E96D3    mov         eax,dword ptr [eax+50]
 004E96D6    mov         edx,dword ptr [ebp+8]
 004E96D9    mov         edx,dword ptr [edx-4]
 004E96DC    mov         edx,dword ptr [edx+54]
 004E96DF    mov         dword ptr [ebp-10],eax
 004E96E2    mov         dword ptr [ebp-0C],edx
 004E96E5    lea         ecx,[ebp-8]
 004E96E8    lea         edx,[ebp-10]
 004E96EB    mov         eax,dword ptr [ebp+8]
 004E96EE    mov         eax,dword ptr [eax-4]
 004E96F1    mov         eax,dword ptr [eax+40]
 004E96F4    call        TControl.ClientToScreen
 004E96F9    mov         eax,dword ptr [ebp+8]
 004E96FC    mov         eax,dword ptr [eax-8]
 004E96FF    mov         eax,dword ptr [eax+8]
 004E9702    lea         ebx,[eax+4C]
 004E9705    mov         eax,ebx
 004E9707    call        RectHeight
 004E970C    mov         edx,dword ptr [ebx+0C]
 004E970F    sub         edx,dword ptr [ebx+4]
 004E9712    mov         ecx,dword ptr [ebp+8]
 004E9715    mov         ecx,dword ptr [ecx-4]
 004E9718    mov         ecx,dword ptr [ecx+40]
 004E971B    add         edx,dword ptr [ecx+5C]
 004E971E    sub         edx,eax
 004E9720    push        edx
 004E9721    lea         eax,[ebp-20]
 004E9724    push        eax
 004E9725    mov         eax,ebx
 004E9727    call        RectWidth
 004E972C    mov         ecx,dword ptr [ebx+8]
 004E972F    mov         edi,dword ptr [ebx]
 004E9731    sub         ecx,edi
 004E9733    mov         edx,dword ptr [ebp+8]
 004E9736    mov         edx,dword ptr [edx-4]
 004E9739    mov         esi,dword ptr [edx+40]
 004E973C    add         ecx,dword ptr [esi+58]
 004E973F    sub         ecx,eax
 004E9741    mov         edx,dword ptr [esi+54]
 004E9744    add         edx,dword ptr [ebx+4]
 004E9747    sub         edx,dword ptr [ebp-4]
 004E974A    mov         eax,dword ptr [esi+50]
 004E974D    add         eax,edi
 004E974F    sub         eax,dword ptr [ebp-8]
 004E9752    call        Bounds
 004E9757    lea         edx,[ebp-20]
 004E975A    mov         eax,esi
 004E975C    call        004E6768
 004E9761    pop         edi
 004E9762    pop         esi
 004E9763    pop         ebx
 004E9764    mov         esp,ebp
 004E9766    pop         ebp
 004E9767    ret
end;*}

//004E9768
{*procedure TControl.CMFloat(?:?);
begin
 004E9768    push        ebp
 004E9769    mov         ebp,esp
 004E976B    add         esp,0FFFFFFF8
 004E976E    push        ebx
 004E976F    mov         dword ptr [ebp-8],edx
 004E9772    mov         dword ptr [ebp-4],eax
 004E9775    mov         eax,dword ptr [ebp-4]
 004E9778    mov         edx,dword ptr [eax]
 004E977A    call        dword ptr [edx+70];TControl.sub_004E9BD0
 004E977D    test        al,al
>004E977F    je          004E9793
 004E9781    mov         eax,dword ptr [ebp-4]
 004E9784    cmp         dword ptr [eax+40],0;TControl.FParent:TWinControl
>004E9788    je          004E9793
 004E978A    push        ebp
 004E978B    call        004E96C4
 004E9790    pop         ecx
>004E9791    jmp         004E97C3
 004E9793    mov         eax,dword ptr [ebp-8]
 004E9796    mov         eax,dword ptr [eax+8]
 004E9799    lea         edx,[eax+4C]
 004E979C    mov         eax,dword ptr [ebp-4]
 004E979F    call        004E962C
 004E97A4    mov         ebx,eax
 004E97A6    test        ebx,ebx
>004E97A8    je          004E97C3
 004E97AA    mov         eax,dword ptr [ebp-8]
 004E97AD    mov         eax,dword ptr [eax+8]
 004E97B0    mov         dword ptr [eax+14],ebx
 004E97B3    mov         eax,ebx
 004E97B5    call        TWinControl.GetHandle
 004E97BA    mov         edx,dword ptr [ebp-8]
 004E97BD    mov         edx,dword ptr [edx+8]
 004E97C0    mov         dword ptr [edx+8],eax
 004E97C3    pop         ebx
 004E97C4    pop         ecx
 004E97C5    pop         ecx
 004E97C6    pop         ebp
 004E97C7    ret
end;*}

//004E97C8
{*procedure sub_004E97C8(?:?);
begin
 004E97C8    push        ebx
 004E97C9    push        esi
 004E97CA    mov         esi,edx
 004E97CC    mov         ebx,dword ptr [eax+40];TControl.FParent:TWinControl
>004E97CF    jmp         004E97D4
 004E97D1    mov         ebx,dword ptr [ebx+40];TWinControl.FParent:TWinControl
 004E97D4    test        ebx,ebx
>004E97D6    je          004E97E3
 004E97D8    mov         eax,ebx
 004E97DA    call        TWinControl.HandleAllocated
 004E97DF    test        al,al
>004E97E1    je          004E97D1
 004E97E3    test        ebx,ebx
>004E97E5    jne         004E97FE
 004E97E7    mov         ecx,dword ptr ds:[7C4538];^SResString345:TResStringRec
 004E97ED    mov         dl,1
 004E97EF    mov         eax,[0046BE9C];EInvalidOperation
 004E97F4    call        Exception.CreateRes;EInvalidOperation.Create
 004E97F9    call        @RaiseExcept
 004E97FE    mov         edx,esi
 004E9800    mov         eax,ebx
 004E9802    mov         ecx,dword ptr [eax]
 004E9804    call        dword ptr [ecx+0C];TWinControl.sub_004F0C34
 004E9807    pop         esi
 004E9808    pop         ebx
 004E9809    ret
end;*}

//004E980C
{*procedure TControl.sub_004E980C(?:?; ?:?);
begin
 004E980C    push        ebp
 004E980D    mov         ebp,esp
 004E980F    push        0
 004E9811    push        0
 004E9813    push        ebx
 004E9814    push        esi
 004E9815    push        edi
 004E9816    mov         ebx,ecx
 004E9818    mov         edi,edx
 004E981A    mov         esi,eax
 004E981C    xor         eax,eax
 004E981E    push        ebp
 004E981F    push        4E9901
 004E9824    push        dword ptr fs:[eax]
 004E9827    mov         dword ptr fs:[eax],esp
 004E982A    mov         eax,edi
 004E982C    mov         edx,dword ptr ds:[4D55AC];TCustomAction
 004E9832    call        @IsClass
 004E9837    test        al,al
>004E9839    je          004E98E6
 004E983F    test        bl,bl
>004E9841    je          004E986A
 004E9843    lea         edx,[ebp-4]
 004E9846    mov         eax,esi
 004E9848    call        TControl.GetText
 004E984D    cmp         dword ptr [ebp-4],0
>004E9851    je          004E986A
 004E9853    lea         edx,[ebp-8]
 004E9856    mov         eax,esi
 004E9858    call        TControl.GetText
 004E985D    mov         eax,dword ptr [ebp-8]
 004E9860    mov         edx,dword ptr [esi+8];TControl.FName:TComponentName
 004E9863    call        @UStrEqual
>004E9868    jne         004E9874
 004E986A    mov         edx,dword ptr [edi+6C]
 004E986D    mov         eax,esi
 004E986F    call        TControl.SetText
 004E9874    test        bl,bl
>004E9876    je          004E9883
 004E9878    mov         eax,esi
 004E987A    mov         edx,dword ptr [eax]
 004E987C    call        dword ptr [edx+6C];TGroupBox.GetEnabled
 004E987F    cmp         al,1
>004E9881    jne         004E9891
 004E9883    movzx       edx,byte ptr [edi+71]
 004E9887    mov         eax,esi
 004E9889    mov         ecx,dword ptr [eax]
 004E988B    call        dword ptr [ecx+88];TGroupBox.SetEnabled
 004E9891    test        bl,bl
>004E9893    je          004E989E
 004E9895    cmp         dword ptr [esi+90],0;TControl.FHint:string
>004E989C    jne         004E98AF
 004E989E    lea         eax,[esi+90];TControl.FHint:string
 004E98A4    mov         edx,dword ptr [edi+84]
 004E98AA    call        @UStrAsg
 004E98AF    test        bl,bl
>004E98B1    je          004E98B9
 004E98B3    cmp         byte ptr [esi+69],1;TControl.FVisible:Boolean
>004E98B7    jne         004E98C7
 004E98B9    movzx       edx,byte ptr [edi+88]
 004E98C0    mov         eax,esi
 004E98C2    call        TControl.SetVisible
 004E98C7    test        bl,bl
>004E98C9    je          004E98D4
 004E98CB    cmp         dword ptr [esi+120],0;TControl.FOnClick:TNotifyEvent
>004E98D2    jne         004E98E6
 004E98D4    mov         eax,dword ptr [edi+50]
 004E98D7    mov         dword ptr [esi+120],eax;TControl.FOnClick:TNotifyEvent
 004E98DD    mov         eax,dword ptr [edi+54]
 004E98E0    mov         dword ptr [esi+124],eax;TControl.?f124:TMessageForm
 004E98E6    xor         eax,eax
 004E98E8    pop         edx
 004E98E9    pop         ecx
 004E98EA    pop         ecx
 004E98EB    mov         dword ptr fs:[eax],edx
 004E98EE    push        4E9908
 004E98F3    lea         eax,[ebp-8]
 004E98F6    mov         edx,2
 004E98FB    call        @UStrArrayClr
 004E9900    ret
>004E9901    jmp         @HandleFinally
>004E9906    jmp         004E98F3
 004E9908    pop         edi
 004E9909    pop         esi
 004E990A    pop         ebx
 004E990B    pop         ecx
 004E990C    pop         ecx
 004E990D    pop         ebp
 004E990E    ret
end;*}

//004E9910
{*procedure sub_004E9910(?:?; ?:?);
begin
 004E9910    push        esi
 004E9911    push        edi
 004E9912    mov         edi,edx
 004E9914    mov         esi,eax
 004E9916    mov         eax,esi
 004E9918    mov         edx,dword ptr [eax]
 004E991A    call        dword ptr [edx+5C]
 004E991D    cmp         edi,eax
>004E991F    jne         004E9930
 004E9921    xor         ecx,ecx
 004E9923    mov         edx,edi
 004E9925    mov         eax,esi
 004E9927    mov         si,0FFEF
 004E992B    call        @CallDynaInst
 004E9930    pop         edi
 004E9931    pop         esi
 004E9932    ret
end;*}

//004E9934
procedure TControl.sub_004E9934;
begin
{*
 004E9934    mov         eax,[004D9294];TControlActionLink
 004E9939    ret
*}
end;

//004E993C
function TGroupBox.IsStoredCaption(Value:TCaption):Boolean;
begin
{*
 004E993C    push        ebx
 004E993D    push        esi
 004E993E    mov         ebx,eax
 004E9940    mov         esi,dword ptr [ebx+78];TGroupBox.FActionLink:TControlActionLink
 004E9943    test        esi,esi
>004E9945    je          004E9957
 004E9947    mov         eax,esi
 004E9949    mov         edx,dword ptr [eax]
 004E994B    call        dword ptr [edx+24];TControlActionLink.IsCaptionLinked
 004E994E    test        al,al
>004E9950    je          004E9957
 004E9952    xor         eax,eax
 004E9954    pop         esi
 004E9955    pop         ebx
 004E9956    ret
 004E9957    mov         al,1
 004E9959    pop         esi
 004E995A    pop         ebx
 004E995B    ret
*}
end;

//004E995C
function TGroupBox.IsStoredEnabled(Value:Boolean):Boolean;
begin
{*
 004E995C    push        ebx
 004E995D    push        esi
 004E995E    mov         ebx,eax
 004E9960    mov         esi,dword ptr [ebx+78];TGroupBox.FActionLink:TControlActionLink
 004E9963    test        esi,esi
>004E9965    je          004E9977
 004E9967    mov         eax,esi
 004E9969    mov         edx,dword ptr [eax]
 004E996B    call        dword ptr [edx+2C];TControlActionLink.IsEnabledLinked
 004E996E    test        al,al
>004E9970    je          004E9977
 004E9972    xor         eax,eax
 004E9974    pop         esi
 004E9975    pop         ebx
 004E9976    ret
 004E9977    mov         al,1
 004E9979    pop         esi
 004E997A    pop         ebx
 004E997B    ret
*}
end;

//004E997C
function TControl.IsStoredHint(Value:string):Boolean;
begin
{*
 004E997C    push        ebx
 004E997D    push        esi
 004E997E    mov         ebx,eax
 004E9980    mov         esi,dword ptr [ebx+78];TControl.FActionLink:TControlActionLink
 004E9983    test        esi,esi
>004E9985    je          004E9997
 004E9987    mov         eax,esi
 004E9989    mov         edx,dword ptr [eax]
 004E998B    call        dword ptr [edx+3C];TControlActionLink.IsHintLinked
 004E998E    test        al,al
>004E9990    je          004E9997
 004E9992    xor         eax,eax
 004E9994    pop         esi
 004E9995    pop         ebx
 004E9996    ret
 004E9997    mov         al,1
 004E9999    pop         esi
 004E999A    pop         ebx
 004E999B    ret
*}
end;

//004E999C
function TControl.IsStoredHelpKeyword(Value:string):Boolean;
begin
{*
 004E999C    push        ebx
 004E999D    push        esi
 004E999E    mov         ebx,eax
 004E99A0    mov         esi,dword ptr [ebx+78];TControl.FActionLink:TControlActionLink
 004E99A3    test        esi,esi
>004E99A5    je          004E99B7
 004E99A7    mov         eax,esi
 004E99A9    mov         edx,dword ptr [eax]
 004E99AB    call        dword ptr [edx+34];TContainedActionLink.IsHelpContextLinked
 004E99AE    test        al,al
>004E99B0    je          004E99B7
 004E99B2    xor         eax,eax
 004E99B4    pop         esi
 004E99B5    pop         ebx
 004E99B6    ret
 004E99B7    mov         al,1
 004E99B9    pop         esi
 004E99BA    pop         ebx
 004E99BB    ret
*}
end;

//004E99BC
function TGroupBox.IsStoredVisible(Value:Boolean):Boolean;
begin
{*
 004E99BC    push        ebx
 004E99BD    push        esi
 004E99BE    mov         ebx,eax
 004E99C0    mov         esi,dword ptr [ebx+78];TGroupBox.FActionLink:TControlActionLink
 004E99C3    test        esi,esi
>004E99C5    je          004E99D7
 004E99C7    mov         eax,esi
 004E99C9    mov         edx,dword ptr [eax]
 004E99CB    call        dword ptr [edx+48];TControlActionLink.IsStatusActionLinked
 004E99CE    test        al,al
>004E99D0    je          004E99D7
 004E99D2    xor         eax,eax
 004E99D4    pop         esi
 004E99D5    pop         ebx
 004E99D6    ret
 004E99D7    mov         al,1
 004E99D9    pop         esi
 004E99DA    pop         ebx
 004E99DB    ret
*}
end;

//004E99DC
function TGroupBox.IsStoredOnClick(Value:TNotifyEvent):Boolean;
begin
{*
 004E99DC    push        ebx
 004E99DD    push        esi
 004E99DE    mov         ebx,eax
 004E99E0    mov         esi,dword ptr [ebx+78];TGroupBox.FActionLink:TControlActionLink
 004E99E3    test        esi,esi
>004E99E5    je          004E99F7
 004E99E7    mov         eax,esi
 004E99E9    mov         edx,dword ptr [eax]
 004E99EB    call        dword ptr [edx+8];TControlActionLink.sub_004E58B8
 004E99EE    test        al,al
>004E99F0    je          004E99F7
 004E99F2    xor         eax,eax
 004E99F4    pop         esi
 004E99F5    pop         ebx
 004E99F6    ret
 004E99F7    mov         al,1
 004E99F9    pop         esi
 004E99FA    pop         ebx
 004E99FB    ret
*}
end;

//004E99FC
procedure TWinControl.CMFontChanged(var Message:Messages.TMessage);
begin
{*
 004E99FC    push        ebx
 004E99FD    push        esi
 004E99FE    mov         ebx,eax
 004E9A00    mov         eax,ebx
 004E9A02    call        TComponent.Loaded
 004E9A07    mov         eax,ebx
 004E9A09    mov         edx,dword ptr [eax]
 004E9A0B    call        dword ptr [edx+5C]
 004E9A0E    test        eax,eax
>004E9A10    je          004E9A28
 004E9A12    mov         eax,ebx
 004E9A14    mov         edx,dword ptr [eax]
 004E9A16    call        dword ptr [edx+5C]
 004E9A19    mov         edx,eax
 004E9A1B    mov         cl,1
 004E9A1D    mov         eax,ebx
 004E9A1F    mov         si,0FFEF
 004E9A23    call        @CallDynaInst
 004E9A28    mov         eax,ebx
 004E9A2A    call        004E62D0
 004E9A2F    pop         esi
 004E9A30    pop         ebx
 004E9A31    ret
*}
end;

//004E9A34
procedure TControl.AssignTo(Dest:TPersistent);
begin
{*
 004E9A34    push        ebp
 004E9A35    mov         ebp,esp
 004E9A37    push        0
 004E9A39    push        ebx
 004E9A3A    push        esi
 004E9A3B    push        edi
 004E9A3C    mov         esi,edx
 004E9A3E    mov         ebx,eax
 004E9A40    xor         eax,eax
 004E9A42    push        ebp
 004E9A43    push        4E9AD7
 004E9A48    push        dword ptr fs:[eax]
 004E9A4B    mov         dword ptr fs:[eax],esp
 004E9A4E    mov         eax,esi
 004E9A50    mov         edx,dword ptr ds:[4D55AC];TCustomAction
 004E9A56    call        @IsClass
 004E9A5B    test        al,al
>004E9A5D    je          004E9AB8
 004E9A5F    mov         eax,ebx
 004E9A61    mov         edx,dword ptr [eax]
 004E9A63    call        dword ptr [edx+6C];TGroupBox.GetEnabled
 004E9A66    mov         edx,eax
 004E9A68    mov         edi,esi
 004E9A6A    mov         eax,edi
 004E9A6C    mov         ecx,dword ptr [eax]
 004E9A6E    call        dword ptr [ecx+74]
 004E9A71    mov         edx,dword ptr [ebx+90];TControl.FHint:string
 004E9A77    mov         eax,edi
 004E9A79    mov         ecx,dword ptr [eax]
 004E9A7B    call        dword ptr [ecx+88]
 004E9A81    lea         edx,[ebp-4]
 004E9A84    mov         eax,ebx
 004E9A86    call        TControl.GetText
 004E9A8B    mov         edx,dword ptr [ebp-4]
 004E9A8E    mov         eax,edi
 004E9A90    mov         ecx,dword ptr [eax]
 004E9A92    call        dword ptr [ecx+6C]
 004E9A95    movzx       edx,byte ptr [ebx+69];TControl.FVisible:Boolean
 004E9A99    mov         eax,edi
 004E9A9B    mov         ecx,dword ptr [eax]
 004E9A9D    call        dword ptr [ecx+8C]
 004E9AA3    push        dword ptr [ebx+124];TControl.?f124:TMessageForm
 004E9AA9    push        dword ptr [ebx+120];TControl.FOnClick:TNotifyEvent
 004E9AAF    mov         eax,edi
 004E9AB1    mov         edx,dword ptr [eax]
 004E9AB3    call        dword ptr [edx+48]
>004E9AB6    jmp         004E9AC1
 004E9AB8    mov         edx,esi
 004E9ABA    mov         eax,ebx
 004E9ABC    call        TPersistent.AssignTo
 004E9AC1    xor         eax,eax
 004E9AC3    pop         edx
 004E9AC4    pop         ecx
 004E9AC5    pop         ecx
 004E9AC6    mov         dword ptr fs:[eax],edx
 004E9AC9    push        4E9ADE
 004E9ACE    lea         eax,[ebp-4]
 004E9AD1    call        @UStrClr
 004E9AD6    ret
>004E9AD7    jmp         @HandleFinally
>004E9ADC    jmp         004E9ACE
 004E9ADE    pop         edi
 004E9ADF    pop         esi
 004E9AE0    pop         ebx
 004E9AE1    pop         ecx
 004E9AE2    pop         ebp
 004E9AE3    ret
*}
end;

//004E9AE4
{*function sub_004E9AE4(?:?; ?:?):?;
begin
 004E9AE4    push        ebp
 004E9AE5    mov         ebp,esp
 004E9AE7    push        ecx
 004E9AE8    push        ebx
 004E9AE9    push        esi
 004E9AEA    mov         dword ptr [ebp-4],eax
 004E9AED    xor         ebx,ebx
 004E9AEF    mov         ecx,edx
 004E9AF1    test        ecx,ecx
>004E9AF3    jle         004E9B17
 004E9AF5    mov         esi,1
 004E9AFA    mov         edx,dword ptr [ebp-4]
 004E9AFD    add         edx,8
 004E9B00    mov         eax,dword ptr [ebp-4]
 004E9B03    fld         qword ptr [edx]
 004E9B05    fcomp       qword ptr [eax+ebx*8]
 004E9B08    wait
 004E9B09    fnstsw      al
 004E9B0B    sahf
>004E9B0C    jae         004E9B10
 004E9B0E    mov         ebx,esi
 004E9B10    inc         esi
 004E9B11    add         edx,8
 004E9B14    dec         ecx
>004E9B15    jne         004E9B00
 004E9B17    mov         eax,ebx
 004E9B19    pop         esi
 004E9B1A    pop         ebx
 004E9B1B    pop         ecx
 004E9B1C    pop         ebp
 004E9B1D    ret
end;*}

//004E9B20
{*procedure TControl.sub_004E9B20(?:?);
begin
 004E9B20    push        ebx
 004E9B21    push        esi
 004E9B22    push        edi
 004E9B23    push        ebp
 004E9B24    add         esp,0FFFFFFC8
 004E9B27    mov         esi,edx
 004E9B29    lea         edi,[esp]
 004E9B2C    movs        dword ptr [edi],dword ptr [esi]
 004E9B2D    movs        dword ptr [edi],dword ptr [esi]
 004E9B2E    xor         ebx,ebx
 004E9B30    mov         esi,dword ptr [eax+58];TControl.FWidth:Integer
 004E9B33    mov         edi,dword ptr [eax+5C];TControl.FHeight:Integer
 004E9B36    mov         eax,dword ptr [esp]
 004E9B39    test        eax,eax
>004E9B3B    jg          004E9B44
 004E9B3D    mov         bl,3
>004E9B3F    jmp         004E9BC5
 004E9B44    cmp         esi,eax
>004E9B46    jg          004E9B4C
 004E9B48    mov         bl,4
>004E9B4A    jmp         004E9BC5
 004E9B4C    mov         edx,dword ptr [esp+4]
 004E9B50    test        edx,edx
>004E9B52    jg          004E9B58
 004E9B54    mov         bl,1
>004E9B56    jmp         004E9BC5
 004E9B58    cmp         edi,edx
>004E9B5A    jg          004E9B60
 004E9B5C    mov         bl,2
>004E9B5E    jmp         004E9BC5
 004E9B60    mov         ebp,edx
 004E9B62    sub         edi,edx
 004E9B64    mov         dword ptr [esp+8],eax
 004E9B68    sub         esi,eax
 004E9B6A    fild        dword ptr [esp+8]
 004E9B6E    fstp        qword ptr [esp+0C]
 004E9B72    wait
 004E9B73    mov         dword ptr [esp+2C],esi
 004E9B77    fild        dword ptr [esp+2C]
 004E9B7B    fstp        qword ptr [esp+14]
 004E9B7F    wait
 004E9B80    mov         dword ptr [esp+30],ebp
 004E9B84    fild        dword ptr [esp+30]
 004E9B88    fstp        qword ptr [esp+1C]
 004E9B8C    wait
 004E9B8D    mov         dword ptr [esp+34],edi
 004E9B91    fild        dword ptr [esp+34]
 004E9B95    fstp        qword ptr [esp+24]
 004E9B99    wait
 004E9B9A    lea         eax,[esp+0C]
 004E9B9E    mov         edx,3
 004E9BA3    call        004E9AE4
 004E9BA8    sub         eax,1
>004E9BAB    jb          004E9BB7
>004E9BAD    je          004E9BBB
 004E9BAF    dec         eax
>004E9BB0    je          004E9BBF
 004E9BB2    dec         eax
>004E9BB3    je          004E9BC3
>004E9BB5    jmp         004E9BC5
 004E9BB7    mov         bl,3
>004E9BB9    jmp         004E9BC5
 004E9BBB    mov         bl,4
>004E9BBD    jmp         004E9BC5
 004E9BBF    mov         bl,1
>004E9BC1    jmp         004E9BC5
 004E9BC3    mov         bl,2
 004E9BC5    mov         eax,ebx
 004E9BC7    add         esp,38
 004E9BCA    pop         ebp
 004E9BCB    pop         edi
 004E9BCC    pop         esi
 004E9BCD    pop         ebx
 004E9BCE    ret
end;*}

//004E9BD0
{*function sub_004E9BD0:?;
begin
 004E9BD0    push        ebx
 004E9BD1    mov         ebx,eax
 004E9BD3    cmp         dword ptr [ebx+0A0],0;TSpeedButton.FHostDockSite:TWinControl
>004E9BDA    je          004E9BF4
 004E9BDC    mov         eax,ebx
 004E9BDE    mov         edx,dword ptr [eax]
 004E9BE0    call        dword ptr [edx+74];TSpeedButton.sub_004E9BFC
 004E9BE3    mov         edx,eax
 004E9BE5    mov         eax,dword ptr [ebx+0A0];TSpeedButton.FHostDockSite:TWinControl
 004E9BEB    call        @IsClass
 004E9BF0    test        al,al
>004E9BF2    jne         004E9BF8
 004E9BF4    xor         eax,eax
 004E9BF6    pop         ebx
 004E9BF7    ret
 004E9BF8    mov         al,1
 004E9BFA    pop         ebx
 004E9BFB    ret
end;*}

//004E9BFC
{*function sub_004E9BFC:?;
begin
 004E9BFC    mov         eax,dword ptr [eax+0B8];TMainForm.FFloatingDockSiteClass:TWinControlClass
 004E9C02    ret
end;*}

//004E9C04
procedure TControl.sub_004E9C04;
begin
{*
 004E9C04    push        ebx
 004E9C05    push        esi
 004E9C06    mov         esi,eax
 004E9C08    test        byte ptr [esi+1C],1;TControl.FComponentState:TComponentState
>004E9C0C    jne         004E9C26
 004E9C0E    mov         eax,dword ptr [esi+58];TControl.FWidth:Integer
 004E9C11    push        eax
 004E9C12    mov         eax,dword ptr [esi+5C];TControl.FHeight:Integer
 004E9C15    push        eax
 004E9C16    mov         ecx,dword ptr [esi+54];TControl.FTop:Integer
 004E9C19    mov         edx,dword ptr [esi+50];TControl.FLeft:Integer
 004E9C1C    mov         eax,esi
 004E9C1E    mov         ebx,dword ptr [eax]
 004E9C20    call        dword ptr [ebx+0B0];TControl.SetBounds
 004E9C26    pop         esi
 004E9C27    pop         ebx
 004E9C28    ret
*}
end;

//004E9C2C
function TControl.DrawTextBiDiModeFlags(Flags:Integer):Integer;
begin
{*
 004E9C2C    push        ebx
 004E9C2D    push        esi
 004E9C2E    push        edi
 004E9C2F    mov         edi,eax
 004E9C31    mov         ebx,edx
 004E9C33    mov         eax,edi
 004E9C35    mov         si,0FFC6
 004E9C39    call        @CallDynaInst;TControl.sub_004E7698
 004E9C3E    test        al,al
>004E9C40    je          004E9C60
 004E9C42    mov         eax,2
 004E9C47    and         eax,ebx
 004E9C49    cmp         eax,2
>004E9C4C    jne         004E9C53
 004E9C4E    and         ebx,0FFFFFFFD
>004E9C51    jmp         004E9C60
 004E9C53    mov         eax,1
 004E9C58    and         eax,ebx
 004E9C5A    dec         eax
>004E9C5B    je          004E9C60
 004E9C5D    or          ebx,2
 004E9C60    mov         eax,edi
 004E9C62    call        TControl.DrawTextBiDiModeFlagsReadingOnly
 004E9C67    or          ebx,eax
 004E9C69    mov         eax,ebx
 004E9C6B    pop         edi
 004E9C6C    pop         esi
 004E9C6D    pop         ebx
 004E9C6E    ret
*}
end;

//004E9C70
function TControl.DrawTextBiDiModeFlagsReadingOnly:Integer;
begin
{*
 004E9C70    push        ebx
 004E9C71    mov         ebx,eax
 004E9C73    mov         eax,ebx
 004E9C75    call        TControl.UseRightToLeftReading
 004E9C7A    test        al,al
>004E9C7C    je          004E9C85
 004E9C7E    mov         eax,20000
 004E9C83    pop         ebx
 004E9C84    ret
 004E9C85    xor         eax,eax
 004E9C87    pop         ebx
 004E9C88    ret
*}
end;

//004E9C8C
procedure TControl.InitiateAction;
begin
{*
 004E9C8C    mov         edx,dword ptr [eax+78];TControl.FActionLink:TControlActionLink
 004E9C8F    test        edx,edx
>004E9C91    je          004E9C9A
 004E9C93    mov         eax,edx
 004E9C95    mov         edx,dword ptr [eax]
 004E9C97    call        dword ptr [edx+1C];TBasicActionLink.Update
 004E9C9A    ret
*}
end;

//004E9C9C
{*procedure TControl.CMHintShow(?:?);
begin
 004E9C9C    push        ebx
 004E9C9D    push        esi
 004E9C9E    push        edi
 004E9C9F    push        ebp
 004E9CA0    mov         ebp,edx
 004E9CA2    mov         ebx,eax
 004E9CA4    mov         edi,dword ptr [ebx+78];TControl.FActionLink:TControlActionLink
 004E9CA7    test        edi,edi
>004E9CA9    je          004E9CC6
 004E9CAB    mov         esi,dword ptr [ebp+8]
 004E9CAE    lea         edx,[esi+38]
 004E9CB1    mov         eax,edi
 004E9CB3    mov         ecx,dword ptr [eax]
 004E9CB5    call        dword ptr [ecx+90];TControlActionLink.sub_004E5674
 004E9CBB    test        al,al
>004E9CBD    jne         004E9CC6
 004E9CBF    mov         dword ptr [ebp+0C],1
 004E9CC6    pop         ebp
 004E9CC7    pop         edi
 004E9CC8    pop         esi
 004E9CC9    pop         ebx
 004E9CCA    ret
end;*}

//004E9CCC
{*procedure TControl.WMContextMenu(?:?);
begin
 004E9CCC    push        ebx
 004E9CCD    push        esi
 004E9CCE    push        edi
 004E9CCF    push        ebp
 004E9CD0    add         esp,0FFFFFFC8
 004E9CD3    mov         ebp,edx
 004E9CD5    mov         edi,eax
 004E9CD7    cmp         dword ptr [ebp+0C],0
>004E9CDB    jne         004E9E07
 004E9CE1    test        byte ptr [edi+1C],10;TControl.FComponentState:TComponentState
>004E9CE5    je          004E9CF5
 004E9CE7    mov         edx,ebp
 004E9CE9    mov         eax,edi
 004E9CEB    mov         ecx,dword ptr [eax]
 004E9CED    call        dword ptr [ecx-10];TControl.DefaultHandler
>004E9CF0    jmp         004E9E07
 004E9CF5    lea         eax,[ebp+8]
 004E9CF8    mov         dword ptr [esp+14],eax
 004E9CFC    mov         eax,dword ptr [esp+14]
 004E9D00    movsx       eax,word ptr [eax]
 004E9D03    mov         dword ptr [esp+18],eax
 004E9D07    mov         eax,dword ptr [esp+14]
 004E9D0B    movsx       eax,word ptr [eax+2]
 004E9D0F    mov         dword ptr [esp+1C],eax
 004E9D13    mov         eax,dword ptr [esp+18]
 004E9D17    mov         dword ptr [esp],eax
 004E9D1A    mov         eax,dword ptr [esp+1C]
 004E9D1E    mov         dword ptr [esp+4],eax
 004E9D22    mov         eax,esp
 004E9D24    call        InvalidPoint
 004E9D29    test        al,al
>004E9D2B    je          004E9D3E
 004E9D2D    mov         eax,dword ptr [esp]
 004E9D30    mov         dword ptr [esp+8],eax
 004E9D34    mov         eax,dword ptr [esp+4]
 004E9D38    mov         dword ptr [esp+0C],eax
>004E9D3C    jmp         004E9D75
 004E9D3E    lea         ecx,[esp+8]
 004E9D42    mov         edx,esp
 004E9D44    mov         eax,edi
 004E9D46    call        TControl.ScreenToClient
 004E9D4B    lea         edx,[esp+28]
 004E9D4F    mov         eax,edi
 004E9D51    mov         ecx,dword ptr [eax]
 004E9D53    call        dword ptr [ecx+64];TControl.sub_004E6794
 004E9D56    lea         eax,[esp+28]
 004E9D5A    lea         edx,[esp+8]
 004E9D5E    call        TRect.Contains
 004E9D63    test        al,al
>004E9D65    jne         004E9D75
 004E9D67    mov         edx,ebp
 004E9D69    mov         eax,edi
 004E9D6B    mov         ecx,dword ptr [eax]
 004E9D6D    call        dword ptr [ecx-10];TControl.DefaultHandler
>004E9D70    jmp         004E9E07
 004E9D75    mov         byte ptr [esp+10],0
 004E9D7A    lea         ecx,[esp+10]
 004E9D7E    lea         edx,[esp+8]
 004E9D82    mov         eax,edi
 004E9D84    mov         si,0FFE7
 004E9D88    call        @CallDynaInst;TControl.sub_004E9E10
 004E9D8D    movzx       eax,byte ptr [esp+10]
 004E9D92    mov         dword ptr [ebp+0C],eax
 004E9D95    cmp         byte ptr [esp+10],0
>004E9D9A    jne         004E9E07
 004E9D9C    mov         eax,edi
 004E9D9E    mov         si,0FFD7
 004E9DA2    call        @CallDynaInst;TControl.sub_004E8E00
 004E9DA7    mov         ebx,eax
 004E9DA9    test        ebx,ebx
>004E9DAB    je          004E9DF8
 004E9DAD    cmp         byte ptr [ebx+71],0
>004E9DB1    je          004E9DF8
 004E9DB3    mov         edx,edi
 004E9DB5    mov         eax,edi
 004E9DB7    call        TControl.SendCancelMode
 004E9DBC    mov         dword ptr [ebx+74],edi
 004E9DBF    mov         eax,esp
 004E9DC1    call        InvalidPoint
 004E9DC6    test        al,al
>004E9DC8    je          004E9DE3
 004E9DCA    xor         eax,eax
 004E9DCC    mov         dword ptr [esp+20],eax
 004E9DD0    xor         eax,eax
 004E9DD2    mov         dword ptr [esp+24],eax
 004E9DD6    mov         ecx,esp
 004E9DD8    lea         edx,[esp+20]
 004E9DDC    mov         eax,edi
 004E9DDE    call        TControl.ClientToScreen
 004E9DE3    mov         ecx,dword ptr [esp+4]
 004E9DE7    mov         edx,dword ptr [esp]
 004E9DEA    mov         eax,ebx
 004E9DEC    mov         ebx,dword ptr [eax]
 004E9DEE    call        dword ptr [ebx+54]
 004E9DF1    mov         dword ptr [ebp+0C],1
 004E9DF8    cmp         dword ptr [ebp+0C],0
>004E9DFC    jne         004E9E07
 004E9DFE    mov         edx,ebp
 004E9E00    mov         eax,edi
 004E9E02    mov         ecx,dword ptr [eax]
 004E9E04    call        dword ptr [ecx-10];TControl.DefaultHandler
 004E9E07    add         esp,38
 004E9E0A    pop         ebp
 004E9E0B    pop         edi
 004E9E0C    pop         esi
 004E9E0D    pop         ebx
 004E9E0E    ret
end;*}

//004E9E10
{*procedure TControl.sub_004E9E10(?:?);
begin
 004E9E10    push        ebx
 004E9E11    push        esi
 004E9E12    push        edi
 004E9E13    add         esp,0FFFFFFF8
 004E9E16    mov         esi,edx
 004E9E18    lea         edi,[esp]
 004E9E1B    movs        dword ptr [edi],dword ptr [esi]
 004E9E1C    movs        dword ptr [edi],dword ptr [esi]
 004E9E1D    cmp         word ptr [eax+132],0;TControl.?f132:word
>004E9E25    je          004E9E3C
 004E9E27    push        ecx
 004E9E28    mov         ebx,eax
 004E9E2A    mov         edx,eax
 004E9E2C    lea         ecx,[esp+4]
 004E9E30    mov         eax,dword ptr [ebx+134];TControl.?f134:dword
 004E9E36    call        dword ptr [ebx+130];TControl.FOnContextPopup
 004E9E3C    pop         ecx
 004E9E3D    pop         edx
 004E9E3E    pop         edi
 004E9E3F    pop         esi
 004E9E40    pop         ebx
 004E9E41    ret
end;*}

//004E9E44
procedure TGroupBox.SetConstraints(Value:TSizeConstraints);
begin
{*
 004E9E44    mov         eax,dword ptr [eax+80];TGroupBox.FConstraints:TSizeConstraints
 004E9E4A    mov         ecx,dword ptr [eax]
 004E9E4C    call        dword ptr [ecx+8];TPersistent.Assign
 004E9E4F    ret
*}
end;

//004E9E50
{*procedure TControl.ClientToParent(Point:TPoint; AParent:TWinControl; ?:?);
begin
 004E9E50    push        ebp
 004E9E51    mov         ebp,esp
 004E9E53    add         esp,0FFFFFFE8
 004E9E56    push        ebx
 004E9E57    push        esi
 004E9E58    xor         ebx,ebx
 004E9E5A    mov         dword ptr [ebp-18],ebx
 004E9E5D    mov         dword ptr [ebp-14],ebx
 004E9E60    mov         esi,ecx
 004E9E62    mov         dword ptr [ebp-8],edx
 004E9E65    mov         dword ptr [ebp-4],eax
 004E9E68    mov         ebx,dword ptr [ebp+8]
 004E9E6B    xor         eax,eax
 004E9E6D    push        ebp
 004E9E6E    push        4E9F50
 004E9E73    push        dword ptr fs:[eax]
 004E9E76    mov         dword ptr fs:[eax],esp
 004E9E79    test        esi,esi
>004E9E7B    jne         004E9E83
 004E9E7D    mov         eax,dword ptr [ebp-4]
 004E9E80    mov         esi,dword ptr [eax+40];TControl.FParent:TWinControl
 004E9E83    test        esi,esi
>004E9E85    jne         004E9EBB
 004E9E87    mov         eax,dword ptr [ebp-4]
 004E9E8A    mov         eax,dword ptr [eax+8];TControl.FName:TComponentName
 004E9E8D    mov         dword ptr [ebp-10],eax
 004E9E90    mov         byte ptr [ebp-0C],11
 004E9E94    lea         eax,[ebp-10]
 004E9E97    push        eax
 004E9E98    push        0
 004E9E9A    lea         edx,[ebp-14]
 004E9E9D    mov         eax,[007C4B08];^SResString231:TResStringRec
 004E9EA2    call        LoadResString
 004E9EA7    mov         ecx,dword ptr [ebp-14]
 004E9EAA    mov         dl,1
 004E9EAC    mov         eax,[0046BE9C];EInvalidOperation
 004E9EB1    call        Exception.CreateFmt;EInvalidOperation.Create
 004E9EB6    call        @RaiseExcept
 004E9EBB    mov         eax,dword ptr [ebp-8]
 004E9EBE    mov         edx,dword ptr [eax]
 004E9EC0    mov         dword ptr [ebx],edx
 004E9EC2    mov         edx,dword ptr [eax+4]
 004E9EC5    mov         dword ptr [ebx+4],edx
 004E9EC8    mov         eax,dword ptr [ebp-4]
 004E9ECB    mov         eax,dword ptr [eax+50];TControl.FLeft:Integer
 004E9ECE    add         dword ptr [ebx],eax
 004E9ED0    mov         eax,dword ptr [ebp-4]
 004E9ED3    mov         eax,dword ptr [eax+54];TControl.FTop:Integer
 004E9ED6    add         dword ptr [ebx+4],eax
 004E9ED9    mov         eax,dword ptr [ebp-4]
 004E9EDC    mov         eax,dword ptr [eax+40];TControl.FParent:TWinControl
>004E9EDF    jmp         004E9EF5
 004E9EE1    cmp         dword ptr [eax+40],0;TWinControl.FParent:TWinControl
>004E9EE5    je          004E9EF2
 004E9EE7    mov         edx,dword ptr [eax+50];TWinControl.FLeft:Integer
 004E9EEA    add         dword ptr [ebx],edx
 004E9EEC    mov         edx,dword ptr [eax+54];TWinControl.FTop:Integer
 004E9EEF    add         dword ptr [ebx+4],edx
 004E9EF2    mov         eax,dword ptr [eax+40];TWinControl.FParent:TWinControl
 004E9EF5    test        eax,eax
>004E9EF7    je          004E9EFD
 004E9EF9    cmp         esi,eax
>004E9EFB    jne         004E9EE1
 004E9EFD    test        eax,eax
>004E9EFF    jne         004E9F35
 004E9F01    mov         eax,dword ptr [ebp-4]
 004E9F04    mov         eax,dword ptr [eax+8];TControl.FName:TComponentName
 004E9F07    mov         dword ptr [ebp-10],eax
 004E9F0A    mov         byte ptr [ebp-0C],11
 004E9F0E    lea         eax,[ebp-10]
 004E9F11    push        eax
 004E9F12    push        0
 004E9F14    lea         edx,[ebp-18]
 004E9F17    mov         eax,[007C46C0];^SResString232:TResStringRec
 004E9F1C    call        LoadResString
 004E9F21    mov         ecx,dword ptr [ebp-18]
 004E9F24    mov         dl,1
 004E9F26    mov         eax,[0046BE9C];EInvalidOperation
 004E9F2B    call        Exception.CreateFmt;EInvalidOperation.Create
 004E9F30    call        @RaiseExcept
 004E9F35    xor         eax,eax
 004E9F37    pop         edx
 004E9F38    pop         ecx
 004E9F39    pop         ecx
 004E9F3A    mov         dword ptr fs:[eax],edx
 004E9F3D    push        4E9F57
 004E9F42    lea         eax,[ebp-18]
 004E9F45    mov         edx,2
 004E9F4A    call        @UStrArrayClr
 004E9F4F    ret
>004E9F50    jmp         @HandleFinally
>004E9F55    jmp         004E9F42
 004E9F57    pop         esi
 004E9F58    pop         ebx
 004E9F59    mov         esp,ebp
 004E9F5B    pop         ebp
 004E9F5C    ret         4
end;*}

//004E9F60
{*procedure TControl.sub_004E9F60(?:?);
begin
 004E9F60    push        esi
 004E9F61    push        edi
 004E9F62    mov         edi,edx
 004E9F64    mov         esi,eax
 004E9F66    mov         edx,edi
 004E9F68    mov         eax,esi
 004E9F6A    call        004E79F8
 004E9F6F    cmp         dword ptr [edi+0C],0
>004E9F73    jne         004E9F7E
 004E9F75    mov         edx,edi
 004E9F77    mov         eax,esi
 004E9F79    mov         ecx,dword ptr [eax]
 004E9F7B    call        dword ptr [ecx-10];TControl.DefaultHandler
 004E9F7E    pop         edi
 004E9F7F    pop         esi
 004E9F80    ret
end;*}

//004E9F84
{*procedure sub_004E9F84(?:?);
begin
 004E9F84    push        esi
 004E9F85    mov         esi,eax
 004E9F87    mov         eax,esi
 004E9F89    mov         edx,dword ptr [eax]
 004E9F8B    call        dword ptr [edx+78]
 004E9F8E    pop         esi
 004E9F8F    ret
end;*}

//004E9F90
procedure TControl.SetMargins(Value:TMargins);
begin
{*
 004E9F90    mov         eax,dword ptr [eax+84];TControl.FMargins:TMargins
 004E9F96    mov         ecx,dword ptr [eax]
 004E9F98    call        dword ptr [ecx+8];TPersistent.Assign
 004E9F9B    ret
*}
end;

//004E9F9C
procedure TGroupBox.SetTouch(Value:TTouchManager);
begin
{*
 004E9F9C    mov         eax,dword ptr [eax+0BC];TGroupBox.FTouchManager:TTouchManager
 004E9FA2    mov         ecx,dword ptr [eax]
 004E9FA4    call        dword ptr [ecx+8];TPersistent.Assign
 004E9FA7    ret
*}
end;

//004E9FA8
procedure sub_004E9FA8;
begin
{*
 004E9FA8    push        esi
 004E9FA9    mov         esi,eax
 004E9FAB    mov         eax,esi
 004E9FAD    mov         edx,dword ptr [eax]
 004E9FAF    call        dword ptr [edx+0A8];TControl.Invalidate
 004E9FB5    pop         esi
 004E9FB6    ret
*}
end;

//004E9FB8
procedure TGroupBox.SetStyleElements(Value:TStyleElements);
begin
{*
 004E9FB8    push        ebx
 004E9FB9    push        ecx
 004E9FBA    mov         byte ptr [esp],dl
 004E9FBD    mov         ebx,eax
 004E9FBF    movzx       eax,byte ptr [esp]
 004E9FC3    cmp         al,byte ptr [ebx+188];TGroupBox.FStyleElements:TStyleElements
>004E9FC9    je          004E9FEE
 004E9FCB    movzx       eax,byte ptr [esp]
 004E9FCF    mov         byte ptr [ebx+188],al;TGroupBox.FStyleElements:TStyleElements
 004E9FD5    test        byte ptr [ebx+1C],10;TGroupBox.FComponentState:TComponentState
>004E9FD9    jne         004E9FEE
 004E9FDB    call        TStyleManager.GetIsCustomStyleActive
 004E9FE0    test        al,al
>004E9FE2    je          004E9FEE
 004E9FE4    mov         eax,ebx
 004E9FE6    mov         edx,dword ptr [eax]
 004E9FE8    call        dword ptr [edx+9C];TGroupBox.sub_00506174
 004E9FEE    pop         edx
 004E9FEF    pop         ebx
 004E9FF0    ret
*}
end;

//004E9FF4
function TControl.GetAlignWithMargins:Boolean;
begin
{*
 004E9FF4    test        byte ptr [eax+62],10;TControl.FEnabled:Boolean
 004E9FF8    setne       al
 004E9FFB    ret
*}
end;

//004E9FFC
procedure TControl.SetAlignWithMargins(Value:Boolean);
begin
{*
 004E9FFC    push        esi
 004E9FFD    mov         esi,eax
 004E9FFF    test        byte ptr [esi+62],10;TControl.FEnabled:Boolean
 004EA003    setne       al
 004EA006    cmp         dl,al
>004EA008    je          004EA025
 004EA00A    test        dl,dl
>004EA00C    je          004EA017
 004EA00E    or          dword ptr [esi+60],100000;TControl.FControlStyle:TControlStyle
>004EA015    jmp         004EA01E
 004EA017    and         dword ptr [esi+60],0FFEFFFFF;TControl.FControlStyle:TControlStyle
 004EA01E    mov         eax,esi
 004EA020    mov         edx,dword ptr [eax]
 004EA022    call        dword ptr [edx+78];TControl.sub_004E5FB8
 004EA025    pop         esi
 004EA026    ret
*}
end;

//004EA028
procedure sub_004EA028(?:TControl);
begin
{*
 004EA028    test        byte ptr [eax+65],40;TControl.FAlign:TAlign
>004EA02C    jne         004EA058
 004EA02E    test        byte ptr [eax+1C],2;TControl.FComponentState:TComponentState
>004EA032    jne         004EA058
 004EA034    mov         edx,dword ptr [eax+50];TControl.FLeft:Integer
 004EA037    mov         dword ptr [eax+1A4],edx;TControl.FExplicitLeft:Integer
 004EA03D    mov         edx,dword ptr [eax+54];TControl.FTop:Integer
 004EA040    mov         dword ptr [eax+1A8],edx;TControl.FExplicitTop:Integer
 004EA046    mov         edx,dword ptr [eax+58];TControl.FWidth:Integer
 004EA049    mov         dword ptr [eax+1AC],edx;TControl.FExplicitWidth:Integer
 004EA04F    mov         edx,dword ptr [eax+5C];TControl.FHeight:Integer
 004EA052    mov         dword ptr [eax+1B0],edx;TControl.FExplicitHeight:Integer
 004EA058    ret
*}
end;

//004EA05C
procedure TControl.WriteExplicitTop(Writer:Classes.TWriter);
begin
{*
 004EA05C    mov         eax,dword ptr [eax+1A8]
 004EA062    xchg        eax,edx
 004EA063    call        TWriter.WriteInteger
 004EA068    ret
*}
end;

//004EA06C
procedure TControl.WriteExplicitHeight(Writer:Classes.TWriter);
begin
{*
 004EA06C    mov         eax,dword ptr [eax+1B0]
 004EA072    xchg        eax,edx
 004EA073    call        TWriter.WriteInteger
 004EA078    ret
*}
end;

//004EA07C
procedure TControl.WriteExplicitLeft(Writer:Classes.TWriter);
begin
{*
 004EA07C    mov         eax,dword ptr [eax+1A4]
 004EA082    xchg        eax,edx
 004EA083    call        TWriter.WriteInteger
 004EA088    ret
*}
end;

//004EA08C
procedure TControl.ReadExplicitWidth(Reader:Classes.TReader);
begin
{*
 004EA08C    push        ebx
 004EA08D    push        esi
 004EA08E    mov         esi,edx
 004EA090    mov         ebx,eax
 004EA092    mov         eax,esi
 004EA094    call        TReader.ReadInteger
 004EA099    mov         dword ptr [ebx+1AC],eax
 004EA09F    pop         esi
 004EA0A0    pop         ebx
 004EA0A1    ret
*}
end;

//004EA0A4
procedure TControl.WriteExplicitWidth(Writer:Classes.TWriter);
begin
{*
 004EA0A4    mov         eax,dword ptr [eax+1AC]
 004EA0AA    xchg        eax,edx
 004EA0AB    call        TWriter.WriteInteger
 004EA0B0    ret
*}
end;

//004EA0B4
procedure TControl.ReadExplicitTop(Reader:Classes.TReader);
begin
{*
 004EA0B4    push        ebx
 004EA0B5    push        esi
 004EA0B6    mov         esi,edx
 004EA0B8    mov         ebx,eax
 004EA0BA    mov         eax,esi
 004EA0BC    call        TReader.ReadInteger
 004EA0C1    mov         dword ptr [ebx+1A8],eax
 004EA0C7    pop         esi
 004EA0C8    pop         ebx
 004EA0C9    ret
*}
end;

//004EA0CC
procedure TControl.ReadExplicitHeight(Reader:Classes.TReader);
begin
{*
 004EA0CC    push        ebx
 004EA0CD    push        esi
 004EA0CE    mov         esi,edx
 004EA0D0    mov         ebx,eax
 004EA0D2    mov         eax,esi
 004EA0D4    call        TReader.ReadInteger
 004EA0D9    mov         dword ptr [ebx+1B0],eax
 004EA0DF    pop         esi
 004EA0E0    pop         ebx
 004EA0E1    ret
*}
end;

//004EA0E4
procedure TControl.ReadExplicitLeft(Reader:Classes.TReader);
begin
{*
 004EA0E4    push        ebx
 004EA0E5    push        esi
 004EA0E6    mov         esi,edx
 004EA0E8    mov         ebx,eax
 004EA0EA    mov         eax,esi
 004EA0EC    call        TReader.ReadInteger
 004EA0F1    mov         dword ptr [ebx+1A4],eax
 004EA0F7    pop         esi
 004EA0F8    pop         ebx
 004EA0F9    ret
*}
end;

//004EA0FC
procedure TWinControlActionLink.AssignClient(AClient:TObject);
begin
{*
 004EA0FC    push        ebx
 004EA0FD    push        esi
 004EA0FE    mov         esi,edx
 004EA100    mov         ebx,eax
 004EA102    mov         edx,esi
 004EA104    mov         eax,ebx
 004EA106    call        TControlActionLink.AssignClient
 004EA10B    mov         eax,esi
 004EA10D    mov         edx,dword ptr ds:[4DE8CC];TWinControl
 004EA113    call        @AsClass
 004EA118    mov         dword ptr [ebx+20],eax
 004EA11B    pop         esi
 004EA11C    pop         ebx
 004EA11D    ret
*}
end;

//004EA120
procedure TWinControlActionLink.IsHelpContextLinked;
begin
{*
 004EA120    mov         edx,dword ptr [eax]
 004EA122    call        dword ptr [edx+38];TControlActionLink.IsHelpLinked
 004EA125    ret
*}
end;

//004EA128
procedure TWinControlActionLink.SetHelpKeyword(const Value:UnicodeString);
begin
{*
 004EA128    call        TControlActionLink.SetHelpKeyword
 004EA12D    ret
*}
end;

//004EA130
constructor TWinControl.Create(AOwner:TComponent);
begin
{*
 004EA130    push        ebp
 004EA131    mov         ebp,esp
 004EA133    push        ecx
 004EA134    push        ebx
 004EA135    push        esi
 004EA136    test        dl,dl
>004EA138    je          004EA142
 004EA13A    add         esp,0FFFFFFF0
 004EA13D    call        @ClassCreate
 004EA142    mov         byte ptr [ebp-1],dl
 004EA145    mov         ebx,eax
 004EA147    xor         edx,edx
 004EA149    mov         eax,ebx
 004EA14B    call        TControl.Create
 004EA150    push        ebx
 004EA151    push        4EC6D8
 004EA156    call        MakeObjectInstance
 004EA15B    mov         dword ptr [ebx+27C],eax;TWinControl.FObjectInstance:Pointer
 004EA161    mov         dl,1
 004EA163    mov         eax,[004BE308];TBrush
 004EA168    call        TBrush.Create;TBrush.Create
 004EA16D    mov         esi,eax
 004EA16F    mov         dword ptr [ebx+1D0],esi;TWinControl.FBrush:TBrush
 004EA175    mov         edx,dword ptr [ebx+7C];TWinControl.FColor:TColor
 004EA178    mov         eax,esi
 004EA17A    call        TBrush.SetColor
 004EA17F    mov         byte ptr [ebx+280],0;TWinControl.FDoubleBuffered:Boolean
 004EA186    mov         byte ptr [ebx+209],1;TWinControl.FParentDoubleBuffered:Boolean
 004EA18D    mov         byte ptr [ebx+208],1;TWinControl.FParentCtl3D:Boolean
 004EA194    mov         dword ptr [ebx+1F8],0FFFFFFFF;TWinControl.FTabOrder:Integer
 004EA19E    mov         byte ptr [ebx+1DC],3;TWinControl.FImeMode:TImeMode
 004EA1A5    mov         byte ptr [ebx+206],0;TWinControl.FUseDockManager:Boolean
 004EA1AC    movzx       eax,byte ptr ds:[4EA224];0xF gvar_004EA224
 004EA1B3    mov         byte ptr [ebx+1BE],al;TWinControl.FBevelEdges:TBevelEdges
 004EA1B9    mov         byte ptr [ebx+1BF],2;TWinControl.FBevelInner:TBevelCut
 004EA1C0    mov         byte ptr [ebx+1C0],1;TWinControl.FBevelOuter:TBevelCut
 004EA1C7    mov         dword ptr [ebx+1C4],1;TWinControl.FBevelWidth:TBevelWidth
 004EA1D1    mov         byte ptr [ebx+170],1;TWinControl.FHelpType:THelpType
 004EA1D8    mov         ecx,ebx
 004EA1DA    mov         dl,1
 004EA1DC    mov         eax,[004D9ED8];TPadding
 004EA1E1    call        TMargins.Create;TPadding.Create
 004EA1E6    mov         esi,eax
 004EA1E8    mov         dword ptr [ebx+1CC],esi;TWinControl.FPadding:TPadding
 004EA1EE    mov         dword ptr [esi+1C],ebx;TPadding.?f1C:TWinControl
 004EA1F1    mov         dword ptr [esi+18],4F20F0;TPadding.FOnChange:TNotifyEvent TWinControl.Realign
 004EA1F8    mov         byte ptr [ebx+20A],0;TWinControl.FPerformingShowingChanged:Boolean
 004EA1FF    mov         byte ptr [ebx+1EC],2;TWinControl.FTipMode:TTipMode
 004EA206    mov         eax,ebx
 004EA208    cmp         byte ptr [ebp-1],0
>004EA20C    je          004EA21D
 004EA20E    call        @AfterConstruction
 004EA213    pop         dword ptr fs:[0]
 004EA21A    add         esp,0C
 004EA21D    mov         eax,ebx
 004EA21F    pop         esi
 004EA220    pop         ebx
 004EA221    pop         ecx
 004EA222    pop         ebp
 004EA223    ret
*}
end;

//004EA234
constructor TScrollBar.Create(ParentWindow:HWND);
begin
{*
 004EA234    push        ebp
 004EA235    mov         ebp,esp
 004EA237    push        ecx
 004EA238    push        ebx
 004EA239    push        esi
 004EA23A    test        dl,dl
>004EA23C    je          004EA246
 004EA23E    add         esp,0FFFFFFF0
 004EA241    call        @ClassCreate
 004EA246    mov         byte ptr [ebp-1],dl
 004EA249    mov         ebx,eax
 004EA24B    mov         dword ptr [ebx+1E4],ecx;TWinControl.FParentWindow:HWND
 004EA251    xor         ecx,ecx
 004EA253    xor         edx,edx
 004EA255    mov         eax,ebx
 004EA257    mov         esi,dword ptr [eax]
 004EA259    call        dword ptr [esi+3C];TWinControl.Create
 004EA25C    mov         eax,ebx
 004EA25E    cmp         byte ptr [ebp-1],0
>004EA262    je          004EA273
 004EA264    call        @AfterConstruction
 004EA269    pop         dword ptr fs:[0]
 004EA270    add         esp,0C
 004EA273    mov         eax,ebx
 004EA275    pop         esi
 004EA276    pop         ebx
 004EA277    pop         ecx
 004EA278    pop         ebp
 004EA279    ret
*}
end;

//004EA27C
destructor TWinControl.Destroy();
begin
{*
 004EA27C    push        ebx
 004EA27D    push        esi
 004EA27E    push        edi
 004EA27F    push        ebp
 004EA280    add         esp,0FFFFFFF4
 004EA283    call        @BeforeDestruction
 004EA288    mov         ebx,edx
 004EA28A    mov         ebp,eax
 004EA28C    mov         eax,ebp
 004EA28E    call        TComponent.Destroying
 004EA293    mov         eax,ebp
 004EA295    call        004F0BF8
 004EA29A    mov         eax,dword ptr [ebp+28C];TWinControl.FAsyncList:TList
 004EA2A0    call        TObject.Free
 004EA2A5    cmp         byte ptr [ebp+207],0;TWinControl.FDockSite:Boolean
>004EA2AC    je          004EA2BE
 004EA2AE    mov         byte ptr [ebp+207],0;TWinControl.FDockSite:Boolean
 004EA2B5    xor         edx,edx
 004EA2B7    mov         eax,ebp
 004EA2B9    call        RegisterDockSite
 004EA2BE    lea         eax,[ebp+1D8];TWinControl.FDockManager:IDockManager
 004EA2C4    call        @IntfClear
 004EA2C9    lea         eax,[ebp+1D4];TWinControl.FDockClients:TList
 004EA2CF    mov         dword ptr [esp],eax
 004EA2D2    mov         eax,dword ptr [esp]
 004EA2D5    mov         eax,dword ptr [eax]
 004EA2D7    mov         edx,dword ptr [esp]
 004EA2DA    xor         ecx,ecx
 004EA2DC    mov         dword ptr [edx],ecx
 004EA2DE    call        TObject.Free
 004EA2E3    mov         eax,dword ptr [ebp+0BC];TWinControl.FTouchManager:TTouchManager
 004EA2E9    test        eax,eax
>004EA2EB    je          004EA308
 004EA2ED    cmp         dword ptr [eax+8],0;TTouchManager.FGestureEngine:TCustomGestureEngine
>004EA2F1    je          004EA308
 004EA2F3    mov         eax,dword ptr [eax+8];TTouchManager.FGestureEngine:TCustomGestureEngine
 004EA2F6    call        TObject.Free
 004EA2FB    mov         eax,dword ptr [ebp+0BC];TWinControl.FTouchManager:TTouchManager
 004EA301    xor         edx,edx
 004EA303    call        004F8074
 004EA308    cmp         dword ptr [ebp+40],0;TWinControl.FParent:TWinControl
>004EA30C    je          004EA317
 004EA30E    mov         dl,1
 004EA310    mov         eax,ebp
 004EA312    call        TWinControl.RemoveFocus
 004EA317    cmp         dword ptr [ebp+278],0;TWinControl.FHandle:HWND
>004EA31E    je          004EA32A
 004EA320    mov         eax,ebp
 004EA322    mov         edx,dword ptr [eax]
 004EA324    call        dword ptr [edx+0DC];TWinControl.sub_004EC074
 004EA32A    mov         eax,ebp
 004EA32C    call        TWinControl.GetControlCount
 004EA331    mov         esi,eax
 004EA333    test        esi,esi
>004EA335    je          004EA362
 004EA337    mov         edx,esi
 004EA339    dec         edx
 004EA33A    mov         eax,ebp
 004EA33C    call        TWinControl.GetControl
 004EA341    mov         edi,eax
 004EA343    mov         edx,edi
 004EA345    mov         eax,ebp
 004EA347    call        004EB630
 004EA34C    mov         dl,1
 004EA34E    mov         eax,edi
 004EA350    mov         ecx,dword ptr [eax]
 004EA352    call        dword ptr [ecx-4];TControl.Destroy
 004EA355    mov         eax,ebp
 004EA357    call        TWinControl.GetControlCount
 004EA35C    mov         esi,eax
 004EA35E    test        esi,esi
>004EA360    jne         004EA337
 004EA362    lea         eax,[ebp+1D0];TWinControl.FBrush:TBrush
 004EA368    mov         dword ptr [esp+4],eax
 004EA36C    mov         eax,dword ptr [esp+4]
 004EA370    mov         eax,dword ptr [eax]
 004EA372    mov         edx,dword ptr [esp+4]
 004EA376    xor         ecx,ecx
 004EA378    mov         dword ptr [edx],ecx
 004EA37A    call        TObject.Free
 004EA37F    mov         eax,dword ptr [ebp+27C];TWinControl.FObjectInstance:Pointer
 004EA385    test        eax,eax
>004EA387    je          004EA38E
 004EA389    call        FreeObjectInstance
 004EA38E    lea         eax,[ebp+1CC];TWinControl.FPadding:TPadding
 004EA394    mov         dword ptr [esp+8],eax
 004EA398    mov         eax,dword ptr [esp+8]
 004EA39C    mov         eax,dword ptr [eax]
 004EA39E    mov         edx,dword ptr [esp+8]
 004EA3A2    xor         ecx,ecx
 004EA3A4    mov         dword ptr [edx],ecx
 004EA3A6    call        TObject.Free
 004EA3AB    mov         eax,[007C4A7C];^gvar_007CA74C
 004EA3B0    test        byte ptr [eax],1
>004EA3B3    je          004EA3C3
 004EA3B5    mov         ecx,ebp
 004EA3B7    xor         edx,edx
 004EA3B9    mov         eax,[00573D6C];TStyleManager
 004EA3BE    call        TStyleManager.Notification
 004EA3C3    mov         dl,0FC
 004EA3C5    and         dl,bl
 004EA3C7    mov         eax,ebp
 004EA3C9    call        TControl.Destroy
 004EA3CE    test        bl,bl
>004EA3D0    jle         004EA3D9
 004EA3D2    mov         eax,ebp
 004EA3D4    call        @ClassDestroy
 004EA3D9    add         esp,0C
 004EA3DC    pop         ebp
 004EA3DD    pop         edi
 004EA3DE    pop         esi
 004EA3DF    pop         ebx
 004EA3E0    ret
*}
end;

//004EA3E4
procedure sub_004EA3E4(?:TWinControl);
begin
{*
 004EA3E4    push        ebp
 004EA3E5    mov         ebp,esp
 004EA3E7    add         esp,0FFFFFFF4
 004EA3EA    push        ebx
 004EA3EB    push        esi
 004EA3EC    mov         dword ptr [ebp-4],eax
 004EA3EF    mov         eax,dword ptr [ebp-4]
 004EA3F2    cmp         dword ptr [eax+1F4],0
>004EA3F9    je          004EA4AF
 004EA3FF    mov         dl,1
 004EA401    mov         eax,[0046C204];TList
 004EA406    call        TObject.Create;TList.Create
 004EA40B    mov         dword ptr [ebp-0C],eax
 004EA40E    xor         ecx,ecx
 004EA410    push        ebp
 004EA411    push        4EA4A8
 004EA416    push        dword ptr fs:[ecx]
 004EA419    mov         dword ptr fs:[ecx],esp
 004EA41C    mov         eax,dword ptr [ebp-4]
 004EA41F    mov         eax,dword ptr [eax+1F4]
 004EA425    mov         eax,dword ptr [eax+8]
 004EA428    mov         dword ptr [ebp-8],eax
 004EA42B    mov         edx,dword ptr [ebp-8]
 004EA42E    mov         eax,dword ptr [ebp-0C]
 004EA431    call        TList.SetCount
 004EA436    mov         ebx,dword ptr [ebp-8]
 004EA439    dec         ebx
 004EA43A    test        ebx,ebx
>004EA43C    jl          004EA46E
 004EA43E    inc         ebx
 004EA43F    xor         esi,esi
 004EA441    mov         eax,dword ptr [ebp-4]
 004EA444    mov         eax,dword ptr [eax+1F4]
 004EA44A    mov         edx,esi
 004EA44C    call        TList.Get
 004EA451    mov         edx,dword ptr [eax+1F8]
 004EA457    test        edx,edx
>004EA459    jl          004EA46A
 004EA45B    cmp         edx,dword ptr [ebp-8]
>004EA45E    jge         004EA46A
 004EA460    mov         ecx,eax
 004EA462    mov         eax,dword ptr [ebp-0C]
 004EA465    call        TList.Put
 004EA46A    inc         esi
 004EA46B    dec         ebx
>004EA46C    jne         004EA441
 004EA46E    mov         ebx,dword ptr [ebp-8]
 004EA471    dec         ebx
 004EA472    test        ebx,ebx
>004EA474    jl          004EA492
 004EA476    inc         ebx
 004EA477    xor         esi,esi
 004EA479    mov         edx,esi
 004EA47B    mov         eax,dword ptr [ebp-0C]
 004EA47E    call        TList.Get
 004EA483    test        eax,eax
>004EA485    je          004EA48E
 004EA487    mov         edx,esi
 004EA489    call        004F008C
 004EA48E    inc         esi
 004EA48F    dec         ebx
>004EA490    jne         004EA479
 004EA492    xor         eax,eax
 004EA494    pop         edx
 004EA495    pop         ecx
 004EA496    pop         ecx
 004EA497    mov         dword ptr fs:[eax],edx
 004EA49A    push        4EA4AF
 004EA49F    mov         eax,dword ptr [ebp-0C]
 004EA4A2    call        TObject.Free
 004EA4A7    ret
>004EA4A8    jmp         @HandleFinally
>004EA4AD    jmp         004EA49F
 004EA4AF    pop         esi
 004EA4B0    pop         ebx
 004EA4B1    mov         esp,ebp
 004EA4B3    pop         ebp
 004EA4B4    ret
*}
end;

//004EA4B8
procedure TWinControl.ReadState(Reader:TReader);
begin
{*
 004EA4B8    push        ebp
 004EA4B9    mov         ebp,esp
 004EA4BB    push        ecx
 004EA4BC    push        ebx
 004EA4BD    mov         ebx,edx
 004EA4BF    mov         dword ptr [ebp-4],eax
 004EA4C2    mov         eax,dword ptr [ebp-4]
 004EA4C5    call        TWinControl.DisableAlign
 004EA4CA    xor         eax,eax
 004EA4CC    push        ebp
 004EA4CD    push        4EA4F8
 004EA4D2    push        dword ptr fs:[eax]
 004EA4D5    mov         dword ptr fs:[eax],esp
 004EA4D8    mov         edx,ebx
 004EA4DA    mov         eax,dword ptr [ebp-4]
 004EA4DD    call        TControl.ReadState
 004EA4E2    xor         eax,eax
 004EA4E4    pop         edx
 004EA4E5    pop         ecx
 004EA4E6    pop         ecx
 004EA4E7    mov         dword ptr fs:[eax],edx
 004EA4EA    push        4EA4FF
 004EA4EF    mov         eax,dword ptr [ebp-4]
 004EA4F2    call        TWinControl.EnableAlign
 004EA4F7    ret
>004EA4F8    jmp         @HandleFinally
>004EA4FD    jmp         004EA4EF
 004EA4FF    mov         eax,dword ptr [ebp-4]
 004EA502    call        004EA3E4
 004EA507    mov         eax,dword ptr [ebp-4]
 004EA50A    cmp         dword ptr [eax+40],0;TWinControl.FParent:TWinControl
>004EA50E    je          004EA521
 004EA510    push        0
 004EA512    xor         ecx,ecx
 004EA514    mov         edx,0B011
 004EA519    mov         eax,dword ptr [ebp-4]
 004EA51C    call        TControl.Perform
 004EA521    mov         eax,dword ptr [ebp-4]
 004EA524    call        TWinControl.UpdateControlState
 004EA529    pop         ebx
 004EA52A    pop         ecx
 004EA52B    pop         ebp
 004EA52C    ret
*}
end;

//004EA530
{*procedure sub_004EA530(?:?);
begin
 004EA530    mov         ecx,dword ptr [eax+1CC];TStringGrid.FPadding:TPadding
 004EA536    mov         ecx,dword ptr [ecx+8];TPadding.FLeft:TMarginSize
 004EA539    add         dword ptr [edx],ecx
 004EA53B    mov         ecx,dword ptr [eax+1CC];TStringGrid.FPadding:TPadding
 004EA541    mov         ecx,dword ptr [ecx+0C];TPadding.FTop:TMarginSize
 004EA544    add         dword ptr [edx+4],ecx
 004EA547    mov         ecx,dword ptr [eax+1CC];TStringGrid.FPadding:TPadding
 004EA54D    mov         ecx,dword ptr [ecx+10];TPadding.FRight:TMarginSize
 004EA550    sub         dword ptr [edx+8],ecx
 004EA553    mov         eax,dword ptr [eax+1CC];TStringGrid.FPadding:TPadding
 004EA559    mov         eax,dword ptr [eax+14];TPadding.FBottom:TMarginSize
 004EA55C    sub         dword ptr [edx+0C],eax
 004EA55F    ret
end;*}

//004EA560
{*procedure sub_004EA560(?:?; ?:?; ?:?; ?:?; ?:?; ?:?; ?:?);
begin
 004EA560    push        ebp
 004EA561    mov         ebp,esp
 004EA563    add         esp,0FFFFFFDC
 004EA566    push        ebx
 004EA567    push        esi
 004EA568    push        edi
 004EA569    mov         esi,dword ptr [ebp+10]
 004EA56C    lea         edi,[ebp-24]
 004EA56F    movs        dword ptr [edi],dword ptr [esi]
 004EA570    movs        dword ptr [edi],dword ptr [esi]
 004EA571    movs        dword ptr [edi],dword ptr [esi]
 004EA572    movs        dword ptr [edi],dword ptr [esi]
 004EA573    mov         ebx,ecx
 004EA575    mov         esi,edx
 004EA577    mov         dword ptr [ebp-4],eax
 004EA57A    mov         edi,dword ptr [ebp+0C]
 004EA57D    cmp         byte ptr [ebp+14],0
>004EA581    je          004EA597
 004EA583    movzx       eax,byte ptr [ebp+14]
 004EA587    movzx       eax,byte ptr [eax+7A11AC]
 004EA58E    cmp         al,byte ptr [esi+73]
>004EA591    je          004EA75F
 004EA597    cmp         dword ptr [esi+19C],0
>004EA59E    je          004EA755
 004EA5A4    cmp         dword ptr [esi+1A0],0
>004EA5AB    je          004EA755
 004EA5B1    xor         edx,edx
 004EA5B3    mov         eax,dword ptr [esi+84]
 004EA5B9    mov         ecx,dword ptr [eax]
 004EA5BB    call        dword ptr [ecx+10]
 004EA5BE    mov         dword ptr [ebp-8],eax
 004EA5C1    mov         edx,1
 004EA5C6    mov         eax,dword ptr [esi+84]
 004EA5CC    mov         ecx,dword ptr [eax]
 004EA5CE    call        dword ptr [ecx+10]
 004EA5D1    mov         dword ptr [ebp-0C],eax
 004EA5D4    mov         edx,2
 004EA5D9    mov         eax,dword ptr [esi+84]
 004EA5DF    mov         ecx,dword ptr [eax]
 004EA5E1    call        dword ptr [ecx+10]
 004EA5E4    mov         dword ptr [ebp-10],eax
 004EA5E7    mov         edx,3
 004EA5EC    mov         eax,dword ptr [esi+84]
 004EA5F2    mov         ecx,dword ptr [eax]
 004EA5F4    call        dword ptr [ecx+10]
 004EA5F7    mov         dword ptr [ebp-14],eax
 004EA5FA    test        byte ptr [esi+73],4
>004EA5FE    je          004EA630
 004EA600    test        byte ptr [esi+73],1
>004EA604    je          004EA61B
 004EA606    mov         eax,dword ptr [ebx]
 004EA608    mov         edx,dword ptr [esi+19C]
 004EA60E    sub         edx,dword ptr [esi+18C]
 004EA614    sub         eax,edx
 004EA616    mov         dword ptr [ebp-10],eax
>004EA619    jmp         004EA65B
 004EA61B    mov         eax,dword ptr [ebx]
 004EA61D    mov         edx,dword ptr [esi+19C]
 004EA623    sub         edx,dword ptr [esi+18C]
 004EA629    sub         eax,edx
 004EA62B    mov         dword ptr [ebp-8],eax
>004EA62E    jmp         004EA65B
 004EA630    test        byte ptr [esi+73],1
>004EA634    jne         004EA65B
 004EA636    mov         eax,dword ptr [esi+19C]
 004EA63C    push        eax
 004EA63D    mov         eax,dword ptr [ebx]
 004EA63F    push        eax
 004EA640    mov         eax,dword ptr [esi+18C]
 004EA646    push        eax
 004EA647    call        kernel32.MulDiv
 004EA64C    mov         edx,dword ptr [ebp-10]
 004EA64F    sar         edx,1
>004EA651    jns         004EA656
 004EA653    adc         edx,0
 004EA656    sub         eax,edx
 004EA658    mov         dword ptr [ebp-8],eax
 004EA65B    test        byte ptr [esi+73],8
>004EA65F    je          004EA693
 004EA661    test        byte ptr [esi+73],2
>004EA665    je          004EA67D
 004EA667    mov         eax,dword ptr [ebx+4]
 004EA66A    mov         edx,dword ptr [esi+1A0]
 004EA670    sub         edx,dword ptr [esi+190]
 004EA676    sub         eax,edx
 004EA678    mov         dword ptr [ebp-14],eax
>004EA67B    jmp         004EA6BF
 004EA67D    mov         eax,dword ptr [ebx+4]
 004EA680    mov         edx,dword ptr [esi+1A0]
 004EA686    sub         edx,dword ptr [esi+190]
 004EA68C    sub         eax,edx
 004EA68E    mov         dword ptr [ebp-0C],eax
>004EA691    jmp         004EA6BF
 004EA693    test        byte ptr [esi+73],2
>004EA697    jne         004EA6BF
 004EA699    mov         eax,dword ptr [esi+1A0]
 004EA69F    push        eax
 004EA6A0    mov         eax,dword ptr [ebx+4]
 004EA6A3    push        eax
 004EA6A4    mov         eax,dword ptr [esi+190]
 004EA6AA    push        eax
 004EA6AB    call        kernel32.MulDiv
 004EA6B0    mov         edx,dword ptr [ebp-14]
 004EA6B3    sar         edx,1
>004EA6B5    jns         004EA6BA
 004EA6B7    adc         edx,0
 004EA6BA    sub         eax,edx
 004EA6BC    mov         dword ptr [ebp-0C],eax
 004EA6BF    cmp         byte ptr [ebp+8],0
>004EA6C3    je          004EA73A
 004EA6C5    movzx       eax,byte ptr ds:[4EA964];0x5 gvar_004EA964
 004EA6CC    and         al,byte ptr [esi+73]
 004EA6CF    movzx       edx,byte ptr ds:[4EA968];0x0 gvar_004EA968
 004EA6D6    cmp         dl,al
>004EA6D8    je          004EA6FF
 004EA6DA    mov         eax,dword ptr [esi+19C]
 004EA6E0    push        eax
 004EA6E1    mov         eax,dword ptr [ebx]
 004EA6E3    push        eax
 004EA6E4    mov         eax,dword ptr [esi+194]
 004EA6EA    push        eax
 004EA6EB    call        kernel32.MulDiv
 004EA6F0    mov         edx,dword ptr [ebp-10]
 004EA6F3    sar         edx,1
>004EA6F5    jns         004EA6FA
 004EA6F7    adc         edx,0
 004EA6FA    sub         eax,edx
 004EA6FC    mov         dword ptr [ebp-8],eax
 004EA6FF    movzx       eax,byte ptr ds:[4EA96C];0xA gvar_004EA96C
 004EA706    and         al,byte ptr [esi+73]
 004EA709    movzx       edx,byte ptr ds:[4EA968];0x0 gvar_004EA968
 004EA710    cmp         dl,al
>004EA712    je          004EA73A
 004EA714    mov         eax,dword ptr [esi+1A0]
 004EA71A    push        eax
 004EA71B    mov         eax,dword ptr [ebx+4]
 004EA71E    push        eax
 004EA71F    mov         eax,dword ptr [esi+198]
 004EA725    push        eax
 004EA726    call        kernel32.MulDiv
 004EA72B    mov         edx,dword ptr [ebp-14]
 004EA72E    sar         edx,1
>004EA730    jns         004EA735
 004EA732    adc         edx,0
 004EA735    sub         eax,edx
 004EA737    mov         dword ptr [ebp-0C],eax
 004EA73A    mov         eax,dword ptr [ebp-10]
 004EA73D    push        eax
 004EA73E    mov         eax,dword ptr [ebp-14]
 004EA741    push        eax
 004EA742    push        1
 004EA744    mov         ecx,dword ptr [ebp-0C]
 004EA747    mov         edx,dword ptr [ebp-8]
 004EA74A    mov         eax,dword ptr [esi+84]
 004EA750    call        TMargins.SetControlBounds
 004EA755    cmp         byte ptr [ebp+14],0
>004EA759    je          004EA958
 004EA75F    mov         eax,dword ptr [edi+8]
 004EA762    sub         eax,dword ptr [edi]
 004EA764    mov         dword ptr [ebp-10],eax
 004EA767    cmp         dword ptr [ebp-10],0
>004EA76B    jl          004EA77B
 004EA76D    movzx       eax,byte ptr [ebp+14]
 004EA771    add         al,0FD
 004EA773    sub         al,2
>004EA775    jb          004EA77B
 004EA777    sub         al,1
>004EA779    jne         004EA78E
 004EA77B    mov         edx,2
 004EA780    mov         eax,dword ptr [esi+84]
 004EA786    mov         ecx,dword ptr [eax]
 004EA788    call        dword ptr [ecx+10]
 004EA78B    mov         dword ptr [ebp-10],eax
 004EA78E    mov         eax,dword ptr [edi+0C]
 004EA791    sub         eax,dword ptr [edi+4]
 004EA794    mov         dword ptr [ebp-14],eax
 004EA797    cmp         dword ptr [ebp-14],0
>004EA79B    jl          004EA7AA
 004EA79D    movzx       eax,byte ptr [ebp+14]
 004EA7A1    dec         eax
 004EA7A2    sub         al,2
>004EA7A4    jb          004EA7AA
 004EA7A6    sub         al,3
>004EA7A8    jne         004EA7BD
 004EA7AA    mov         edx,3
 004EA7AF    mov         eax,dword ptr [esi+84]
 004EA7B5    mov         ecx,dword ptr [eax]
 004EA7B7    call        dword ptr [ecx+10]
 004EA7BA    mov         dword ptr [ebp-14],eax
 004EA7BD    mov         eax,dword ptr [edi]
 004EA7BF    mov         dword ptr [ebp-8],eax
 004EA7C2    mov         eax,dword ptr [edi+4]
 004EA7C5    mov         dword ptr [ebp-0C],eax
 004EA7C8    movzx       eax,byte ptr [ebp+14]
 004EA7CC    cmp         eax,6
>004EA7CF    ja          004EA84C
 004EA7D1    jmp         dword ptr [eax*4+4EA7D8]
 004EA7D1    dd          004EA84C
 004EA7D1    dd          004EA7F4
 004EA7D1    dd          004EA7FC
 004EA7D1    dd          004EA80A
 004EA7D1    dd          004EA811
 004EA7D1    dd          004EA84C
 004EA7D1    dd          004EA81F
 004EA7F4    mov         eax,dword ptr [ebp-14]
 004EA7F7    add         dword ptr [edi+4],eax
>004EA7FA    jmp         004EA84C
 004EA7FC    mov         eax,dword ptr [ebp-14]
 004EA7FF    sub         dword ptr [edi+0C],eax
 004EA802    mov         eax,dword ptr [edi+0C]
 004EA805    mov         dword ptr [ebp-0C],eax
>004EA808    jmp         004EA84C
 004EA80A    mov         eax,dword ptr [ebp-10]
 004EA80D    add         dword ptr [edi],eax
>004EA80F    jmp         004EA84C
 004EA811    mov         eax,dword ptr [ebp-10]
 004EA814    sub         dword ptr [edi+8],eax
 004EA817    mov         eax,dword ptr [edi+8]
 004EA81A    mov         dword ptr [ebp-8],eax
>004EA81D    jmp         004EA84C
 004EA81F    mov         eax,dword ptr [esi+50]
 004EA822    mov         dword ptr [ebp-8],eax
 004EA825    mov         eax,dword ptr [esi+54]
 004EA828    mov         dword ptr [ebp-0C],eax
 004EA82B    lea         eax,[ebp-0C]
 004EA82E    push        eax
 004EA82F    lea         eax,[ebp-10]
 004EA832    push        eax
 004EA833    lea         eax,[ebp-14]
 004EA836    push        eax
 004EA837    push        edi
 004EA838    lea         eax,[ebp-24]
 004EA83B    push        eax
 004EA83C    lea         ecx,[ebp-8]
 004EA83F    mov         edx,esi
 004EA841    mov         eax,dword ptr [ebp-4]
 004EA844    mov         ebx,dword ptr [eax]
 004EA846    call        dword ptr [ebx+0D4]
 004EA84C    mov         eax,dword ptr [ebp-10]
 004EA84F    push        eax
 004EA850    mov         eax,dword ptr [ebp-14]
 004EA853    push        eax
 004EA854    push        1
 004EA856    mov         ecx,dword ptr [ebp-0C]
 004EA859    mov         edx,dword ptr [ebp-8]
 004EA85C    mov         eax,dword ptr [esi+84]
 004EA862    call        TMargins.SetControlBounds
 004EA867    mov         edx,2
 004EA86C    mov         eax,dword ptr [esi+84]
 004EA872    mov         ecx,dword ptr [eax]
 004EA874    call        dword ptr [ecx+10]
 004EA877    cmp         eax,dword ptr [ebp-10]
>004EA87A    jne         004EA895
 004EA87C    mov         edx,3
 004EA881    mov         eax,dword ptr [esi+84]
 004EA887    mov         ecx,dword ptr [eax]
 004EA889    call        dword ptr [ecx+10]
 004EA88C    cmp         eax,dword ptr [ebp-14]
>004EA88F    je          004EA958
 004EA895    movzx       eax,byte ptr [ebp+14]
 004EA899    cmp         eax,5
>004EA89C    ja          004EA958
 004EA8A2    jmp         dword ptr [eax*4+4EA8A9]
 004EA8A2    dd          004EA958
 004EA8A2    dd          004EA8C1
 004EA8A2    dd          004EA8DB
 004EA8A2    dd          004EA8F5
 004EA8A2    dd          004EA90E
 004EA8A2    dd          004EA928
 004EA8C1    mov         edx,3
 004EA8C6    mov         eax,dword ptr [esi+84]
 004EA8CC    mov         ecx,dword ptr [eax]
 004EA8CE    call        dword ptr [ecx+10]
 004EA8D1    mov         edx,dword ptr [ebp-14]
 004EA8D4    sub         edx,eax
 004EA8D6    sub         dword ptr [edi+4],edx
>004EA8D9    jmp         004EA958
 004EA8DB    mov         edx,3
 004EA8E0    mov         eax,dword ptr [esi+84]
 004EA8E6    mov         ecx,dword ptr [eax]
 004EA8E8    call        dword ptr [ecx+10]
 004EA8EB    mov         edx,dword ptr [ebp-14]
 004EA8EE    sub         edx,eax
 004EA8F0    add         dword ptr [edi+0C],edx
>004EA8F3    jmp         004EA958
 004EA8F5    mov         edx,2
 004EA8FA    mov         eax,dword ptr [esi+84]
 004EA900    mov         ecx,dword ptr [eax]
 004EA902    call        dword ptr [ecx+10]
 004EA905    mov         edx,dword ptr [ebp-10]
 004EA908    sub         edx,eax
 004EA90A    sub         dword ptr [edi],edx
>004EA90C    jmp         004EA958
 004EA90E    mov         edx,2
 004EA913    mov         eax,dword ptr [esi+84]
 004EA919    mov         ecx,dword ptr [eax]
 004EA91B    call        dword ptr [ecx+10]
 004EA91E    mov         edx,dword ptr [ebp-10]
 004EA921    sub         edx,eax
 004EA923    add         dword ptr [edi+8],edx
>004EA926    jmp         004EA958
 004EA928    mov         edx,2
 004EA92D    mov         eax,dword ptr [esi+84]
 004EA933    mov         ecx,dword ptr [eax]
 004EA935    call        dword ptr [ecx+10]
 004EA938    mov         edx,dword ptr [ebp-10]
 004EA93B    sub         edx,eax
 004EA93D    add         dword ptr [edi+8],edx
 004EA940    mov         edx,3
 004EA945    mov         eax,dword ptr [esi+84]
 004EA94B    mov         ecx,dword ptr [eax]
 004EA94D    call        dword ptr [ecx+10]
 004EA950    mov         edx,dword ptr [ebp-14]
 004EA953    sub         edx,eax
 004EA955    add         dword ptr [edi+0C],edx
 004EA958    pop         edi
 004EA959    pop         esi
 004EA95A    pop         ebx
 004EA95B    mov         esp,ebp
 004EA95D    pop         ebp
 004EA95E    ret         10
end;*}

//004EA9A8
{*procedure sub_004EA9A8(?:?; ?:?);
begin
 004EA9A8    push        ebp
 004EA9A9    mov         ebp,esp
 004EA9AB    add         esp,0FFFFFFE8
 004EA9AE    push        ebx
 004EA9AF    push        esi
 004EA9B0    mov         esi,edx
 004EA9B2    mov         ebx,eax
 004EA9B4    mov         eax,ebx
 004EA9B6    call        TWinControl.HandleAllocated
 004EA9BB    test        al,al
>004EA9BD    je          004EA9D6
 004EA9BF    lea         edx,[ebp-18]
 004EA9C2    mov         eax,ebx
 004EA9C4    mov         ecx,dword ptr [eax]
 004EA9C6    call        dword ptr [ecx+64]
 004EA9C9    mov         eax,dword ptr [ebp-10]
 004EA9CC    mov         dword ptr [esi],eax
 004EA9CE    mov         eax,dword ptr [ebp-0C]
 004EA9D1    mov         dword ptr [esi+4],eax
>004EA9D4    jmp         004EA9ED
 004EA9D6    mov         eax,dword ptr [ebx+58]
 004EA9D9    mov         edx,dword ptr [ebx+5C]
 004EA9DC    mov         dword ptr [ebp-8],eax
 004EA9DF    mov         dword ptr [ebp-4],edx
 004EA9E2    mov         eax,dword ptr [ebp-8]
 004EA9E5    mov         dword ptr [esi],eax
 004EA9E7    mov         eax,dword ptr [ebp-4]
 004EA9EA    mov         dword ptr [esi+4],eax
 004EA9ED    mov         eax,dword ptr [ebx+1CC]
 004EA9F3    mov         edx,dword ptr [eax+8]
 004EA9F6    add         edx,dword ptr [eax+10]
 004EA9F9    sub         dword ptr [esi],edx
 004EA9FB    mov         eax,dword ptr [ebx+1CC]
 004EAA01    mov         edx,dword ptr [eax+0C]
 004EAA04    add         edx,dword ptr [eax+14]
 004EAA07    sub         dword ptr [esi+4],edx
 004EAA0A    pop         esi
 004EAA0B    pop         ebx
 004EAA0C    mov         esp,ebp
 004EAA0E    pop         ebp
 004EAA0F    ret
end;*}

//004EAA10
{*function sub_004EAA10(?:TControl; ?:Pointer; ?:?; ?:?):?;
begin
 004EAA10    push        ebp
 004EAA11    mov         ebp,esp
 004EAA13    add         esp,0FFFFFFF8
 004EAA16    push        ebx
 004EAA17    push        esi
 004EAA18    mov         byte ptr [ebp-5],cl
 004EAA1B    mov         dword ptr [ebp-4],edx
 004EAA1E    mov         esi,eax
 004EAA20    xor         eax,eax
 004EAA22    movzx       edx,byte ptr [ebp-5]
 004EAA26    cmp         edx,6
>004EAA29    ja          004EAB61
 004EAA2F    jmp         dword ptr [edx*4+4EAA36]
 004EAA2F    dd          004EAB61
 004EAA2F    dd          004EAA52
 004EAA2F    dd          004EAA81
 004EAA2F    dd          004EAAD9
 004EAA2F    dd          004EAAFF
 004EAA2F    dd          004EAB61
 004EAA2F    dd          004EAB4E
 004EAA52    mov         edx,1
 004EAA57    mov         eax,dword ptr [esi+84]
 004EAA5D    mov         ecx,dword ptr [eax]
 004EAA5F    call        dword ptr [ecx+10]
 004EAA62    mov         ebx,eax
 004EAA64    mov         eax,dword ptr [ebp-4]
 004EAA67    mov         eax,dword ptr [eax+84]
 004EAA6D    mov         edx,1
 004EAA72    mov         ecx,dword ptr [eax]
 004EAA74    call        dword ptr [ecx+10]
 004EAA77    cmp         ebx,eax
 004EAA79    setl        al
>004EAA7C    jmp         004EAB61
 004EAA81    mov         edx,1
 004EAA86    mov         eax,dword ptr [esi+84]
 004EAA8C    mov         ecx,dword ptr [eax]
 004EAA8E    call        dword ptr [ecx+10]
 004EAA91    mov         ebx,eax
 004EAA93    mov         edx,3
 004EAA98    mov         eax,dword ptr [esi+84]
 004EAA9E    mov         ecx,dword ptr [eax]
 004EAAA0    call        dword ptr [ecx+10]
 004EAAA3    add         ebx,eax
 004EAAA5    mov         eax,dword ptr [ebp-4]
 004EAAA8    mov         eax,dword ptr [eax+84]
 004EAAAE    mov         edx,1
 004EAAB3    mov         ecx,dword ptr [eax]
 004EAAB5    call        dword ptr [ecx+10]
 004EAAB8    mov         esi,eax
 004EAABA    mov         eax,dword ptr [ebp-4]
 004EAABD    mov         eax,dword ptr [eax+84]
 004EAAC3    mov         edx,3
 004EAAC8    mov         ecx,dword ptr [eax]
 004EAACA    call        dword ptr [ecx+10]
 004EAACD    add         esi,eax
 004EAACF    cmp         ebx,esi
 004EAAD1    setge       al
>004EAAD4    jmp         004EAB61
 004EAAD9    xor         edx,edx
 004EAADB    mov         eax,dword ptr [esi+84]
 004EAAE1    mov         ecx,dword ptr [eax]
 004EAAE3    call        dword ptr [ecx+10]
 004EAAE6    mov         ebx,eax
 004EAAE8    mov         eax,dword ptr [ebp-4]
 004EAAEB    mov         eax,dword ptr [eax+84]
 004EAAF1    xor         edx,edx
 004EAAF3    mov         ecx,dword ptr [eax]
 004EAAF5    call        dword ptr [ecx+10]
 004EAAF8    cmp         ebx,eax
 004EAAFA    setl        al
>004EAAFD    jmp         004EAB61
 004EAAFF    xor         edx,edx
 004EAB01    mov         eax,dword ptr [esi+84]
 004EAB07    mov         ecx,dword ptr [eax]
 004EAB09    call        dword ptr [ecx+10]
 004EAB0C    mov         ebx,eax
 004EAB0E    mov         edx,2
 004EAB13    mov         eax,dword ptr [esi+84]
 004EAB19    mov         ecx,dword ptr [eax]
 004EAB1B    call        dword ptr [ecx+10]
 004EAB1E    add         ebx,eax
 004EAB20    mov         eax,dword ptr [ebp-4]
 004EAB23    mov         eax,dword ptr [eax+84]
 004EAB29    xor         edx,edx
 004EAB2B    mov         ecx,dword ptr [eax]
 004EAB2D    call        dword ptr [ecx+10]
 004EAB30    mov         esi,eax
 004EAB32    mov         eax,dword ptr [ebp-4]
 004EAB35    mov         eax,dword ptr [eax+84]
 004EAB3B    mov         edx,2
 004EAB40    mov         ecx,dword ptr [eax]
 004EAB42    call        dword ptr [ecx+10]
 004EAB45    add         esi,eax
 004EAB47    cmp         ebx,esi
 004EAB49    setge       al
>004EAB4C    jmp         004EAB61
 004EAB4E    mov         eax,dword ptr [ebp+8]
 004EAB51    mov         eax,dword ptr [eax-4]
 004EAB54    mov         ecx,dword ptr [ebp-4]
 004EAB57    mov         edx,esi
 004EAB59    mov         ebx,dword ptr [eax]
 004EAB5B    call        dword ptr [ebx+0D0]
 004EAB61    pop         esi
 004EAB62    pop         ebx
 004EAB63    pop         ecx
 004EAB64    pop         ecx
 004EAB65    pop         ebp
 004EAB66    ret
end;*}

//004EAB68
{*procedure sub_004EAB68(?:Pointer; ?:?; ?:?; ?:?);
begin
 004EAB68    push        ebp
 004EAB69    mov         ebp,esp
 004EAB6B    add         esp,0FFFFFFE8
 004EAB6E    push        ebx
 004EAB6F    push        esi
 004EAB70    push        edi
 004EAB71    mov         esi,ecx
 004EAB73    lea         edi,[ebp-10]
 004EAB76    movs        dword ptr [edi],dword ptr [esi]
 004EAB77    movs        dword ptr [edi],dword ptr [esi]
 004EAB78    movs        dword ptr [edi],dword ptr [esi]
 004EAB79    movs        dword ptr [edi],dword ptr [esi]
 004EAB7A    mov         ebx,edx
 004EAB7C    mov         esi,eax
 004EAB7E    push        ebx
 004EAB7F    lea         eax,[ebp-10]
 004EAB82    push        eax
 004EAB83    mov         eax,dword ptr [ebp+8]
 004EAB86    mov         eax,dword ptr [eax-8]
 004EAB89    push        eax
 004EAB8A    push        0
 004EAB8C    lea         edx,[ebp-18]
 004EAB8F    mov         eax,dword ptr [esi+40]
 004EAB92    call        004EA9A8
 004EAB97    lea         ecx,[ebp-18]
 004EAB9A    mov         eax,dword ptr [ebp+8]
 004EAB9D    mov         eax,dword ptr [eax-4]
 004EABA0    mov         edx,esi
 004EABA2    call        004EA560
 004EABA7    pop         edi
 004EABA8    pop         esi
 004EABA9    pop         ebx
 004EABAA    mov         esp,ebp
 004EABAC    pop         ebp
 004EABAD    ret
end;*}

//004EABB0
{*procedure sub_004EABB0(?:?; ?:?);
begin
 004EABB0    push        ebp
 004EABB1    mov         ebp,esp
 004EABB3    add         esp,0FFFFFFE8
 004EABB6    push        ebx
 004EABB7    push        esi
 004EABB8    push        edi
 004EABB9    mov         ebx,eax
 004EABBB    mov         eax,dword ptr [ebp+8]
 004EABBE    mov         eax,dword ptr [eax-0C]
 004EABC1    mov         edx,dword ptr [eax]
 004EABC3    call        dword ptr [edx+8]
 004EABC6    mov         eax,dword ptr [ebp+8]
 004EABC9    cmp         dword ptr [eax-10],0
>004EABCD    je          004EAC13
 004EABCF    test        bl,bl
>004EABD1    je          004EABF7
 004EABD3    mov         eax,dword ptr [ebp+8]
 004EABD6    mov         eax,dword ptr [eax-10]
 004EABD9    cmp         byte ptr [eax+69],0
>004EABDD    jne         004EABF7
 004EABDF    mov         eax,dword ptr [ebp+8]
 004EABE2    mov         eax,dword ptr [eax-10]
 004EABE5    test        byte ptr [eax+1C],10
>004EABE9    je          004EAC13
 004EABEB    mov         eax,dword ptr [ebp+8]
 004EABEE    mov         eax,dword ptr [eax-10]
 004EABF1    test        byte ptr [eax+61],4
>004EABF5    jne         004EAC13
 004EABF7    mov         eax,dword ptr [ebp+8]
 004EABFA    mov         eax,dword ptr [eax-10]
 004EABFD    cmp         bl,byte ptr [eax+6D]
>004EAC00    jne         004EAC13
 004EAC02    mov         eax,dword ptr [ebp+8]
 004EAC05    mov         edx,dword ptr [eax-10]
 004EAC08    mov         eax,dword ptr [ebp+8]
 004EAC0B    mov         eax,dword ptr [eax-0C]
 004EAC0E    call        TList.Add
 004EAC13    mov         eax,dword ptr [ebp+8]
 004EAC16    mov         eax,dword ptr [eax-4]
 004EAC19    call        TWinControl.GetControlCount
 004EAC1E    dec         eax
 004EAC1F    test        eax,eax
>004EAC21    jl          004EACDE
 004EAC27    inc         eax
 004EAC28    mov         dword ptr [ebp-8],eax
 004EAC2B    mov         dword ptr [ebp-4],0
 004EAC32    mov         eax,dword ptr [ebp+8]
 004EAC35    mov         eax,dword ptr [eax-4]
 004EAC38    mov         edx,dword ptr [ebp-4]
 004EAC3B    call        TWinControl.GetControl
 004EAC40    mov         edi,eax
 004EAC42    cmp         bl,byte ptr [edi+6D];TControl.FAlign:TAlign
>004EAC45    jne         004EACD2
 004EAC4B    test        bl,bl
>004EAC4D    je          004EAC73
 004EAC4F    cmp         byte ptr [edi+69],0;TControl.FVisible:Boolean
>004EAC53    jne         004EAC73
 004EAC55    mov         eax,[004EAD38];0x401 gvar_004EAD38
 004EAC5A    and         eax,dword ptr [edi+60];TControl.FControlStyle:TControlStyle
 004EAC5D    mov         edx,dword ptr ds:[4EAD38];0x401 gvar_004EAD38
 004EAC63    cmp         edx,eax
>004EAC65    je          004EAC73
 004EAC67    test        byte ptr [edi+1C],10;TControl.FComponentState:TComponentState
>004EAC6B    je          004EACD2
 004EAC6D    test        byte ptr [edi+61],4;TControl.FVisible:Boolean
>004EAC71    jne         004EACD2
 004EAC73    mov         eax,edi
 004EAC75    mov         edx,dword ptr ds:[5B7120];TCustomForm
 004EAC7B    call        @IsClass
 004EAC80    test        al,al
>004EAC82    je          004EAC8A
 004EAC84    test        byte ptr [edi+1C],10;TControl.FComponentState:TComponentState
>004EAC88    jne         004EACD2
 004EAC8A    mov         eax,dword ptr [ebp+8]
 004EAC8D    cmp         edi,dword ptr [eax-10]
>004EAC90    je          004EACD2
 004EAC92    xor         esi,esi
>004EAC94    jmp         004EAC97
 004EAC96    inc         esi
 004EAC97    mov         eax,dword ptr [ebp+8]
 004EAC9A    mov         eax,dword ptr [eax-0C]
 004EAC9D    cmp         esi,dword ptr [eax+8]
>004EACA0    jge         004EACC3
 004EACA2    mov         eax,dword ptr [ebp+8]
 004EACA5    push        eax
 004EACA6    mov         eax,dword ptr [ebp+8]
 004EACA9    mov         eax,dword ptr [eax-0C]
 004EACAC    mov         edx,esi
 004EACAE    call        TList.Get
 004EACB3    mov         edx,eax
 004EACB5    mov         ecx,ebx
 004EACB7    mov         eax,edi
 004EACB9    call        004EAA10
 004EACBE    pop         ecx
 004EACBF    test        al,al
>004EACC1    je          004EAC96
 004EACC3    mov         eax,dword ptr [ebp+8]
 004EACC6    mov         eax,dword ptr [eax-0C]
 004EACC9    mov         ecx,edi
 004EACCB    mov         edx,esi
 004EACCD    call        TList.Insert
 004EACD2    inc         dword ptr [ebp-4]
 004EACD5    dec         dword ptr [ebp-8]
>004EACD8    jne         004EAC32
 004EACDE    mov         eax,dword ptr [ebp+8]
 004EACE1    mov         eax,dword ptr [eax-0C]
 004EACE4    mov         eax,dword ptr [eax+8]
 004EACE7    dec         eax
 004EACE8    test        eax,eax
>004EACEA    jl          004EAD2E
 004EACEC    inc         eax
 004EACED    mov         dword ptr [ebp-8],eax
 004EACF0    mov         dword ptr [ebp-4],0
 004EACF7    mov         eax,dword ptr [ebp+8]
 004EACFA    mov         eax,dword ptr [eax-0C]
 004EACFD    mov         dword ptr [ebp-18],eax
 004EAD00    mov         eax,dword ptr [ebp-4]
 004EAD03    mov         dword ptr [ebp-14],eax
 004EAD06    mov         byte ptr [ebp-10],bl
 004EAD09    mov         eax,dword ptr [ebp+8]
 004EAD0C    push        eax
 004EAD0D    mov         eax,dword ptr [ebp+8]
 004EAD10    mov         eax,dword ptr [eax-0C]
 004EAD13    mov         edx,dword ptr [ebp-4]
 004EAD16    call        TList.Get
 004EAD1B    mov         edx,ebx
 004EAD1D    lea         ecx,[ebp-18]
 004EAD20    call        004EAB68
 004EAD25    pop         ecx
 004EAD26    inc         dword ptr [ebp-4]
 004EAD29    dec         dword ptr [ebp-8]
>004EAD2C    jne         004EACF7
 004EAD2E    pop         edi
 004EAD2F    pop         esi
 004EAD30    pop         ebx
 004EAD31    mov         esp,ebp
 004EAD33    pop         ebp
 004EAD34    ret
end;*}

//004EAD3C
{*function sub_004EAD3C(?:?):?;
begin
 004EAD3C    push        ebp
 004EAD3D    mov         ebp,esp
 004EAD3F    push        ebx
 004EAD40    push        esi
 004EAD41    push        edi
 004EAD42    mov         edi,dword ptr [ebp+8]
 004EAD45    add         edi,0FFFFFFFC
 004EAD48    mov         bl,1
 004EAD4A    mov         eax,dword ptr [edi]
 004EAD4C    call        TWinControl.GetControlCount
 004EAD51    mov         esi,eax
 004EAD53    dec         esi
 004EAD54    cmp         esi,0
>004EAD57    jl          004EAD83
 004EAD59    mov         eax,dword ptr [edi]
 004EAD5B    mov         edx,esi
 004EAD5D    call        TWinControl.GetControl
 004EAD62    cmp         byte ptr [eax+6D],0;TControl.FAlign:TAlign
>004EAD66    jne         004EAD85
 004EAD68    mov         eax,dword ptr [edi]
 004EAD6A    mov         edx,esi
 004EAD6C    call        TWinControl.GetControl
 004EAD71    movzx       edx,byte ptr ds:[4EAD8C];0x3 gvar_004EAD8C
 004EAD78    cmp         dl,byte ptr [eax+73];TControl.FAnchors:TAnchors
>004EAD7B    jne         004EAD85
 004EAD7D    dec         esi
 004EAD7E    cmp         esi,0FFFFFFFF
>004EAD81    jne         004EAD59
 004EAD83    xor         ebx,ebx
 004EAD85    mov         eax,ebx
 004EAD87    pop         edi
 004EAD88    pop         esi
 004EAD89    pop         ebx
 004EAD8A    pop         ebp
 004EAD8B    ret
end;*}

//004EAD90
{*procedure sub_004EAD90(?:?);
begin
 004EAD90    push        ebp
 004EAD91    mov         ebp,esp
 004EAD93    add         esp,0FFFFFFE8
 004EAD96    push        ebx
 004EAD97    push        esi
 004EAD98    xor         eax,eax
 004EAD9A    mov         dword ptr [ebp-4],eax
 004EAD9D    xor         eax,eax
 004EAD9F    push        ebp
 004EADA0    push        4EAFFB
 004EADA5    push        dword ptr fs:[eax]
 004EADA8    mov         dword ptr fs:[eax],esp
 004EADAB    mov         dl,1
 004EADAD    mov         eax,[0046C204];TList
 004EADB2    call        TObject.Create;TList.Create
 004EADB7    mov         dword ptr [ebp-8],eax
 004EADBA    lea         eax,[ebp-4]
 004EADBD    mov         edx,dword ptr ds:[4EA970];:TWinControl.:1
 004EADC3    call        @DynArrayClear
 004EADC8    xor         edx,edx
 004EADCA    push        ebp
 004EADCB    push        4EAFD8
 004EADD0    push        dword ptr fs:[edx]
 004EADD3    mov         dword ptr fs:[edx],esp
 004EADD6    mov         dl,1
 004EADD8    mov         eax,[0046C204];TList
 004EADDD    call        TObject.Create;TList.Create
 004EADE2    mov         edx,dword ptr [ebp+8]
 004EADE5    mov         edx,dword ptr [edx-4]
 004EADE8    mov         dword ptr [edx+1B8],eax
 004EADEE    xor         edx,edx
 004EADF0    push        ebp
 004EADF1    push        4EAF80
 004EADF6    push        dword ptr fs:[edx]
 004EADF9    mov         dword ptr fs:[edx],esp
 004EADFC    xor         edx,edx
 004EADFE    push        ebp
 004EADFF    push        4EAF3C
 004EAE04    push        dword ptr fs:[edx]
 004EAE07    mov         dword ptr fs:[edx],esp
 004EAE0A    mov         eax,dword ptr [ebp+8]
 004EAE0D    mov         eax,dword ptr [eax-14]
 004EAE10    mov         eax,dword ptr [eax+8]
 004EAE13    dec         eax
 004EAE14    cmp         eax,0
>004EAE17    jl          004EAEFF
 004EAE1D    mov         dword ptr [ebp-10],eax
 004EAE20    mov         eax,dword ptr [ebp+8]
 004EAE23    mov         eax,dword ptr [eax-14]
 004EAE26    mov         edx,dword ptr [ebp-10]
 004EAE29    call        TList.Get
 004EAE2E    mov         dword ptr [ebp-0C],eax
 004EAE31    mov         edx,dword ptr [ebp-0C]
 004EAE34    mov         eax,dword ptr [ebp-8]
 004EAE37    call        TList.IndexOf
 004EAE3C    mov         dword ptr [ebp-14],eax
 004EAE3F    cmp         dword ptr [ebp-14],0FFFFFFFF
>004EAE43    je          004EAE55
 004EAE45    mov         eax,dword ptr [ebp-4]
 004EAE48    mov         edx,dword ptr [ebp-14]
 004EAE4B    cmp         dword ptr [eax+edx*4],0A
>004EAE4F    jge         004EAEF2
 004EAE55    mov         eax,dword ptr [ebp+8]
 004EAE58    mov         eax,dword ptr [eax-4]
 004EAE5B    mov         eax,dword ptr [eax+1B8]
 004EAE61    mov         edx,dword ptr [ebp-0C]
 004EAE64    mov         dword ptr [edx+1B8],eax
 004EAE6A    xor         eax,eax
 004EAE6C    push        ebp
 004EAE6D    push        4EAEA4
 004EAE72    push        dword ptr fs:[eax]
 004EAE75    mov         dword ptr fs:[eax],esp
 004EAE78    mov         eax,dword ptr [ebp-0C]
 004EAE7B    call        TWinControl.Realign
 004EAE80    xor         eax,eax
 004EAE82    pop         edx
 004EAE83    pop         ecx
 004EAE84    pop         ecx
 004EAE85    mov         dword ptr fs:[eax],edx
 004EAE88    push        4EAEAB
 004EAE8D    mov         eax,dword ptr [ebp+8]
 004EAE90    mov         eax,dword ptr [eax-4]
 004EAE93    cmp         eax,dword ptr [ebp-0C]
>004EAE96    je          004EAEA3
 004EAE98    mov         eax,dword ptr [ebp-0C]
 004EAE9B    xor         edx,edx
 004EAE9D    mov         dword ptr [eax+1B8],edx
 004EAEA3    ret
>004EAEA4    jmp         @HandleFinally
>004EAEA9    jmp         004EAE8D
 004EAEAB    cmp         dword ptr [ebp-14],0FFFFFFFF
>004EAEAF    je          004EAEBA
 004EAEB1    mov         eax,dword ptr [ebp-4]
 004EAEB4    mov         edx,dword ptr [ebp-14]
 004EAEB7    inc         dword ptr [eax+edx*4]
 004EAEBA    mov         edx,dword ptr [ebp-0C]
 004EAEBD    mov         eax,dword ptr [ebp-8]
 004EAEC0    call        TList.Add
 004EAEC5    mov         eax,dword ptr [ebp-4]
 004EAEC8    test        eax,eax
>004EAECA    je          004EAED1
 004EAECC    sub         eax,4
 004EAECF    mov         eax,dword ptr [eax]
 004EAED1    mov         edx,dword ptr [ebp-8]
 004EAED4    mov         ebx,dword ptr [edx+0C];TList.FCapacity:Integer
 004EAED7    cmp         eax,ebx
>004EAED9    je          004EAEF2
 004EAEDB    push        ebx
 004EAEDC    lea         eax,[ebp-4]
 004EAEDF    mov         ecx,1
 004EAEE4    mov         edx,dword ptr ds:[4EA970];:TWinControl.:1
 004EAEEA    call        @DynArraySetLength
 004EAEEF    add         esp,4
 004EAEF2    dec         dword ptr [ebp-10]
 004EAEF5    cmp         dword ptr [ebp-10],0FFFFFFFF
>004EAEF9    jne         004EAE20
 004EAEFF    xor         eax,eax
 004EAF01    pop         edx
 004EAF02    pop         ecx
 004EAF03    pop         ecx
 004EAF04    mov         dword ptr fs:[eax],edx
 004EAF07    push        4EAF43
 004EAF0C    mov         eax,dword ptr [ebp+8]
 004EAF0F    mov         eax,dword ptr [eax-14]
 004EAF12    mov         edx,dword ptr [eax]
 004EAF14    call        dword ptr [edx+8]
 004EAF17    mov         eax,dword ptr [ebp+8]
 004EAF1A    mov         eax,dword ptr [eax-4]
 004EAF1D    mov         eax,dword ptr [eax+1B8]
 004EAF23    mov         edx,dword ptr [ebp+8]
 004EAF26    mov         edx,dword ptr [edx-14]
 004EAF29    mov         ecx,dword ptr [ebp+8]
 004EAF2C    mov         ecx,dword ptr [ecx-4]
 004EAF2F    mov         dword ptr [ecx+1B8],edx
 004EAF35    mov         edx,dword ptr [ebp+8]
 004EAF38    mov         dword ptr [edx-14],eax
 004EAF3B    ret
>004EAF3C    jmp         @HandleFinally
>004EAF41    jmp         004EAF0C
 004EAF43    mov         eax,dword ptr [ebp+8]
 004EAF46    mov         eax,dword ptr [eax-14]
 004EAF49    cmp         dword ptr [eax+8],0
>004EAF4D    jne         004EADFC
 004EAF53    xor         eax,eax
 004EAF55    pop         edx
 004EAF56    pop         ecx
 004EAF57    pop         ecx
 004EAF58    mov         dword ptr fs:[eax],edx
 004EAF5B    push        4EAF87
 004EAF60    mov         eax,dword ptr [ebp+8]
 004EAF63    mov         eax,dword ptr [eax-4]
 004EAF66    add         eax,1B8
 004EAF6B    mov         dword ptr [ebp-18],eax
 004EAF6E    mov         eax,dword ptr [ebp-18]
 004EAF71    mov         eax,dword ptr [eax]
 004EAF73    mov         edx,dword ptr [ebp-18]
 004EAF76    xor         ecx,ecx
 004EAF78    mov         dword ptr [edx],ecx
 004EAF7A    call        TObject.Free
 004EAF7F    ret
>004EAF80    jmp         @HandleFinally
>004EAF85    jmp         004EAF60
 004EAF87    mov         eax,dword ptr [ebp-8]
 004EAF8A    mov         eax,dword ptr [eax+8];TList.FCount:Integer
 004EAF8D    dec         eax
 004EAF8E    cmp         eax,0
>004EAF91    jl          004EAFC2
 004EAF93    mov         dword ptr [ebp-10],eax
 004EAF96    mov         edx,dword ptr [ebp-10]
 004EAF99    mov         eax,dword ptr [ebp-8]
 004EAF9C    call        TList.Get
 004EAFA1    mov         dword ptr [ebp-0C],eax
 004EAFA4    mov         eax,dword ptr [ebp-0C]
 004EAFA7    test        byte ptr [eax+1C],1
>004EAFAB    jne         004EAFB9
 004EAFAD    mov         eax,dword ptr [ebp-0C]
 004EAFB0    mov         si,0FFCF
 004EAFB4    call        @CallDynaInst
 004EAFB9    dec         dword ptr [ebp-10]
 004EAFBC    cmp         dword ptr [ebp-10],0FFFFFFFF
>004EAFC0    jne         004EAF96
 004EAFC2    xor         eax,eax
 004EAFC4    pop         edx
 004EAFC5    pop         ecx
 004EAFC6    pop         ecx
 004EAFC7    mov         dword ptr fs:[eax],edx
 004EAFCA    push        4EAFDF
 004EAFCF    mov         eax,dword ptr [ebp-8]
 004EAFD2    call        TObject.Free
 004EAFD7    ret
>004EAFD8    jmp         @HandleFinally
>004EAFDD    jmp         004EAFCF
 004EAFDF    xor         eax,eax
 004EAFE1    pop         edx
 004EAFE2    pop         ecx
 004EAFE3    pop         ecx
 004EAFE4    mov         dword ptr fs:[eax],edx
 004EAFE7    push        4EB002
 004EAFEC    lea         eax,[ebp-4]
 004EAFEF    mov         edx,dword ptr ds:[4EA970];:TWinControl.:1
 004EAFF5    call        @DynArrayClear
 004EAFFA    ret
>004EAFFB    jmp         @HandleFinally
>004EB000    jmp         004EAFEC
 004EB002    pop         esi
 004EB003    pop         ebx
 004EB004    mov         esp,ebp
 004EB006    pop         ebp
 004EB007    ret
end;*}

//004EB008
{*procedure sub_004EB008(?:?);
begin
 004EB008    push        ebp
 004EB009    mov         ebp,esp
 004EB00B    add         esp,0FFFFFFE8
 004EB00E    push        esi
 004EB00F    mov         esi,dword ptr [ebp+8]
 004EB012    add         esi,0FFFFFFFC
 004EB015    mov         eax,dword ptr [esi]
 004EB017    call        TWinControl.GetHandle
 004EB01C    push        eax
 004EB01D    call        user32.IsZoomed
 004EB022    test        eax,eax
>004EB024    je          004EB0C9
 004EB02A    mov         eax,dword ptr [esi]
 004EB02C    call        TWinControl.GetHandle
 004EB031    push        eax
 004EB032    call        user32.GetParent
 004EB037    test        eax,eax
>004EB039    jne         004EB0C9
 004EB03F    lea         eax,[ebp-18]
 004EB042    push        eax
 004EB043    mov         eax,dword ptr [esi]
 004EB045    call        TWinControl.GetHandle
 004EB04A    push        eax
 004EB04B    call        user32.GetWindowRect
 004EB050    mov         eax,dword ptr [esi]
 004EB052    mov         eax,dword ptr [eax+58]
 004EB055    mov         dword ptr [ebp-4],eax
 004EB058    mov         eax,dword ptr [esi]
 004EB05A    mov         eax,dword ptr [eax+5C]
 004EB05D    mov         dword ptr [ebp-8],eax
 004EB060    lea         ecx,[ebp-8]
 004EB063    lea         edx,[ebp-4]
 004EB066    mov         eax,dword ptr [esi]
 004EB068    call        TControl.CheckNewSize
 004EB06D    mov         eax,dword ptr [esi]
 004EB06F    mov         eax,dword ptr [eax+58]
 004EB072    mov         edx,dword ptr [ebp-10]
 004EB075    sub         edx,dword ptr [ebp-18]
 004EB078    cmp         eax,edx
>004EB07A    jne         004EB0C0
 004EB07C    mov         eax,dword ptr [esi]
 004EB07E    mov         eax,dword ptr [eax+5C]
 004EB081    mov         edx,dword ptr [ebp-0C]
 004EB084    sub         edx,dword ptr [ebp-14]
 004EB087    cmp         eax,edx
>004EB089    jne         004EB0C0
 004EB08B    mov         eax,dword ptr [esi]
 004EB08D    mov         eax,dword ptr [eax+58]
 004EB090    cmp         eax,dword ptr [ebp-4]
>004EB093    jne         004EB09F
 004EB095    mov         eax,dword ptr [esi]
 004EB097    mov         eax,dword ptr [eax+5C]
 004EB09A    cmp         eax,dword ptr [ebp-8]
>004EB09D    je          004EB0C0
 004EB09F    push        16
 004EB0A1    mov         eax,dword ptr [esi]
 004EB0A3    mov         eax,dword ptr [eax+5C]
 004EB0A6    push        eax
 004EB0A7    mov         eax,dword ptr [esi]
 004EB0A9    mov         eax,dword ptr [eax+58]
 004EB0AC    push        eax
 004EB0AD    push        0
 004EB0AF    push        0
 004EB0B1    push        0
 004EB0B3    mov         eax,dword ptr [esi]
 004EB0B5    call        TWinControl.GetHandle
 004EB0BA    push        eax
 004EB0BB    call        user32.SetWindowPos
 004EB0C0    mov         eax,dword ptr [esi]
 004EB0C2    mov         edx,dword ptr [eax]
 004EB0C4    call        dword ptr [edx+78]
>004EB0C7    jmp         004EB0D4
 004EB0C9    mov         eax,dword ptr [esi]
 004EB0CB    mov         si,0FFEE
 004EB0CF    call        @CallDynaInst
 004EB0D4    pop         esi
 004EB0D5    mov         esp,ebp
 004EB0D7    pop         ebp
 004EB0D8    ret
end;*}

//004EB0DC
procedure TWinControl.AlignControls(AControl:TControl; var Rect:Types.TRect);
begin
{*
 004EB0DC    push        ebp
 004EB0DD    mov         ebp,esp
 004EB0DF    add         esp,0FFFFFFE8
 004EB0E2    push        esi
 004EB0E3    mov         dword ptr [ebp-8],ecx
 004EB0E6    mov         dword ptr [ebp-10],edx
 004EB0E9    mov         dword ptr [ebp-4],eax
 004EB0EC    mov         eax,dword ptr [ebp-4]
 004EB0EF    cmp         byte ptr [eax+207],0
>004EB0F6    je          004EB120
 004EB0F8    mov         eax,dword ptr [ebp-4]
 004EB0FB    cmp         byte ptr [eax+206],0
>004EB102    je          004EB120
 004EB104    mov         eax,dword ptr [ebp-4]
 004EB107    cmp         dword ptr [eax+1D8],0
>004EB10E    je          004EB120
 004EB110    mov         eax,dword ptr [ebp-4]
 004EB113    mov         eax,dword ptr [eax+1D8]
 004EB119    xor         edx,edx
 004EB11B    mov         ecx,dword ptr [eax]
 004EB11D    call        dword ptr [ecx+2C]
 004EB120    push        ebp
 004EB121    call        004EAD3C
 004EB126    pop         ecx
 004EB127    test        al,al
>004EB129    je          004EB297
 004EB12F    mov         byte ptr [ebp-15],0
 004EB133    xor         eax,eax
 004EB135    mov         dword ptr [ebp-14],eax
 004EB138    xor         edx,edx
 004EB13A    push        ebp
 004EB13B    push        4EB290
 004EB140    push        dword ptr fs:[edx]
 004EB143    mov         dword ptr fs:[edx],esp
 004EB146    mov         eax,dword ptr [ebp-4]
 004EB149    cmp         dword ptr [eax+1B8],0
>004EB150    jne         004EB195
 004EB152    mov         eax,dword ptr [ebp-4]
 004EB155    mov         eax,dword ptr [eax+40]
 004EB158    test        eax,eax
>004EB15A    je          004EB17A
 004EB15C    cmp         dword ptr [eax+1B8],0
>004EB163    je          004EB17A
 004EB165    mov         byte ptr [ebp-15],1
 004EB169    mov         eax,dword ptr [eax+1B8]
 004EB16F    mov         edx,dword ptr [ebp-4]
 004EB172    mov         dword ptr [edx+1B8],eax
>004EB178    jmp         004EB195
 004EB17A    mov         dl,1
 004EB17C    mov         eax,[0046C204];TList
 004EB181    call        TObject.Create
 004EB186    mov         dword ptr [ebp-14],eax
 004EB189    mov         eax,dword ptr [ebp-4]
 004EB18C    mov         edx,dword ptr [ebp-14]
 004EB18F    mov         dword ptr [eax+1B8],edx
 004EB195    mov         edx,dword ptr [ebp-8]
 004EB198    mov         eax,dword ptr [ebp-4]
 004EB19B    mov         ecx,dword ptr [eax]
 004EB19D    call        dword ptr [ecx+0B8]
 004EB1A3    mov         dl,1
 004EB1A5    mov         eax,[0046C204];TList
 004EB1AA    call        TObject.Create
 004EB1AF    mov         dword ptr [ebp-0C],eax
 004EB1B2    xor         eax,eax
 004EB1B4    push        ebp
 004EB1B5    push        4EB221
 004EB1BA    push        dword ptr fs:[eax]
 004EB1BD    mov         dword ptr fs:[eax],esp
 004EB1C0    push        ebp
 004EB1C1    mov         al,1
 004EB1C3    call        004EABB0
 004EB1C8    pop         ecx
 004EB1C9    push        ebp
 004EB1CA    mov         al,2
 004EB1CC    call        004EABB0
 004EB1D1    pop         ecx
 004EB1D2    push        ebp
 004EB1D3    mov         al,3
 004EB1D5    call        004EABB0
 004EB1DA    pop         ecx
 004EB1DB    push        ebp
 004EB1DC    mov         al,4
 004EB1DE    call        004EABB0
 004EB1E3    pop         ecx
 004EB1E4    push        ebp
 004EB1E5    mov         al,5
 004EB1E7    call        004EABB0
 004EB1EC    pop         ecx
 004EB1ED    push        ebp
 004EB1EE    mov         al,6
 004EB1F0    call        004EABB0
 004EB1F5    pop         ecx
 004EB1F6    push        ebp
 004EB1F7    xor         eax,eax
 004EB1F9    call        004EABB0
 004EB1FE    pop         ecx
 004EB1FF    mov         eax,dword ptr [ebp-4]
 004EB202    mov         si,0FFC5
 004EB206    call        @CallDynaInst
 004EB20B    xor         eax,eax
 004EB20D    pop         edx
 004EB20E    pop         ecx
 004EB20F    pop         ecx
 004EB210    mov         dword ptr fs:[eax],edx
 004EB213    push        4EB228
 004EB218    mov         eax,dword ptr [ebp-0C]
 004EB21B    call        TObject.Free
 004EB220    ret
>004EB221    jmp         @HandleFinally
>004EB226    jmp         004EB218
 004EB228    mov         eax,dword ptr [ebp-4]
 004EB22B    cmp         byte ptr [eax+205],0
>004EB232    je          004EB23B
 004EB234    push        ebp
 004EB235    call        004EB008
 004EB23A    pop         ecx
 004EB23B    cmp         dword ptr [ebp-14],0
>004EB23F    je          004EB251
 004EB241    mov         eax,dword ptr [ebp-14]
 004EB244    cmp         dword ptr [eax+8],0
>004EB248    jle         004EB251
 004EB24A    push        ebp
 004EB24B    call        004EAD90
 004EB250    pop         ecx
 004EB251    xor         eax,eax
 004EB253    pop         edx
 004EB254    pop         ecx
 004EB255    pop         ecx
 004EB256    mov         dword ptr fs:[eax],edx
 004EB259    push        4EB2B3
 004EB25E    cmp         dword ptr [ebp-14],0
>004EB262    je          004EB27E
 004EB264    mov         eax,dword ptr [ebp-4]
 004EB267    xor         edx,edx
 004EB269    mov         dword ptr [eax+1B8],edx
 004EB26F    mov         eax,dword ptr [ebp-14]
 004EB272    xor         edx,edx
 004EB274    mov         dword ptr [ebp-14],edx
 004EB277    call        TObject.Free
>004EB27C    jmp         004EB28F
 004EB27E    cmp         byte ptr [ebp-15],0
>004EB282    je          004EB28F
 004EB284    mov         eax,dword ptr [ebp-4]
 004EB287    xor         edx,edx
 004EB289    mov         dword ptr [eax+1B8],edx
 004EB28F    ret
>004EB290    jmp         @HandleFinally
>004EB295    jmp         004EB25E
 004EB297    mov         eax,dword ptr [ebp-4]
 004EB29A    cmp         byte ptr [eax+6E],0
>004EB29E    je          004EB2B3
 004EB2A0    mov         eax,dword ptr [ebp-4]
 004EB2A3    cmp         byte ptr [eax+205],0
>004EB2AA    je          004EB2B3
 004EB2AC    push        ebp
 004EB2AD    call        004EB008
 004EB2B2    pop         ecx
 004EB2B3    pop         esi
 004EB2B4    mov         esp,ebp
 004EB2B6    pop         ebp
 004EB2B7    ret
*}
end;

//004EB2B8
procedure TWinControl.AlignControl(AControl:TControl);
begin
{*
 004EB2B8    push        ebp
 004EB2B9    mov         ebp,esp
 004EB2BB    add         esp,0FFFFFFEC
 004EB2BE    push        ebx
 004EB2BF    mov         ebx,edx
 004EB2C1    mov         dword ptr [ebp-4],eax
 004EB2C4    mov         eax,dword ptr [ebp-4]
 004EB2C7    call        TWinControl.HandleAllocated
 004EB2CC    test        al,al
>004EB2CE    je          004EB344
 004EB2D0    mov         eax,dword ptr [ebp-4]
 004EB2D3    test        byte ptr [eax+1C],8
>004EB2D7    jne         004EB344
 004EB2D9    mov         eax,dword ptr [ebp-4]
 004EB2DC    cmp         word ptr [eax+1BC],0
>004EB2E4    je          004EB2EF
 004EB2E6    mov         eax,dword ptr [ebp-4]
 004EB2E9    or          dword ptr [eax+64],10
>004EB2ED    jmp         004EB344
 004EB2EF    mov         eax,dword ptr [ebp-4]
 004EB2F2    call        TWinControl.DisableAlign
 004EB2F7    xor         eax,eax
 004EB2F9    push        ebp
 004EB2FA    push        4EB33D
 004EB2FF    push        dword ptr fs:[eax]
 004EB302    mov         dword ptr fs:[eax],esp
 004EB305    lea         edx,[ebp-14]
 004EB308    mov         eax,dword ptr [ebp-4]
 004EB30B    mov         ecx,dword ptr [eax]
 004EB30D    call        dword ptr [ecx+64]
 004EB310    lea         ecx,[ebp-14]
 004EB313    mov         edx,ebx
 004EB315    mov         eax,dword ptr [ebp-4]
 004EB318    mov         ebx,dword ptr [eax]
 004EB31A    call        dword ptr [ebx+0BC]
 004EB320    xor         eax,eax
 004EB322    pop         edx
 004EB323    pop         ecx
 004EB324    pop         ecx
 004EB325    mov         dword ptr fs:[eax],edx
 004EB328    push        4EB344
 004EB32D    mov         eax,dword ptr [ebp-4]
 004EB330    and         dword ptr [eax+64],0FFFFFFEF
 004EB334    mov         eax,dword ptr [ebp-4]
 004EB337    call        TWinControl.EnableAlign
 004EB33C    ret
>004EB33D    jmp         @HandleFinally
>004EB342    jmp         004EB32D
 004EB344    pop         ebx
 004EB345    mov         esp,ebp
 004EB347    pop         ebp
 004EB348    ret
*}
end;

//004EB34C
procedure TWinControl.DisableAlign;
begin
{*
 004EB34C    inc         word ptr [eax+1BC];TWinControl.FAlignLevel:Word
 004EB353    ret
*}
end;

//004EB354
procedure TWinControl.EnableAlign;
begin
{*
 004EB354    dec         word ptr [eax+1BC];TWinControl.FAlignLevel:Word
 004EB35B    cmp         word ptr [eax+1BC],0;TWinControl.FAlignLevel:Word
>004EB363    jne         004EB370
 004EB365    test        byte ptr [eax+64],10;TWinControl.FControlState:TControlState
>004EB369    je          004EB370
 004EB36B    call        TWinControl.Realign
 004EB370    ret
*}
end;

//004EB374
procedure TWinControl.Realign;
begin
{*
 004EB374    xor         edx,edx
 004EB376    call        TWinControl.AlignControl
 004EB37B    ret
*}
end;

//004EB37C
procedure TWinControl.sub_004EB37C;
begin
{*
 004EB37C    push        ebp
 004EB37D    mov         ebp,esp
 004EB37F    add         esp,0FFFFFFF4
 004EB382    push        ebx
 004EB383    push        esi
 004EB384    push        edi
 004EB385    mov         dword ptr [ebp-4],eax
 004EB388    mov         dl,1
 004EB38A    mov         eax,[0046C204];TList
 004EB38F    call        TObject.Create;TList.Create
 004EB394    mov         dword ptr [ebp-0C],eax
 004EB397    xor         eax,eax
 004EB399    push        ebp
 004EB39A    push        4EB441
 004EB39F    push        dword ptr fs:[eax]
 004EB3A2    mov         dword ptr fs:[eax],esp
 004EB3A5    mov         eax,dword ptr [ebp-4]
 004EB3A8    call        TControl.GetClientWidth
 004EB3AD    mov         dword ptr [ebp-8],eax
 004EB3B0    mov         eax,dword ptr [ebp-4]
 004EB3B3    call        TWinControl.GetControlCount
 004EB3B8    mov         ebx,eax
 004EB3BA    dec         ebx
 004EB3BB    test        ebx,ebx
>004EB3BD    jl          004EB401
 004EB3BF    inc         ebx
 004EB3C0    xor         esi,esi
 004EB3C2    mov         edx,esi
 004EB3C4    mov         eax,dword ptr [ebp-4]
 004EB3C7    call        TWinControl.GetControl
 004EB3CC    mov         edi,eax
 004EB3CE    mov         eax,dword ptr [edi+4];TControl.FOwner:TComponent
 004EB3D1    mov         edx,dword ptr [ebp-4]
 004EB3D4    cmp         eax,dword ptr [edx+4];TWinControl.FOwner:TComponent
>004EB3D7    jne         004EB3FD
 004EB3D9    mov         edx,esi
 004EB3DB    mov         eax,dword ptr [ebp-4]
 004EB3DE    call        TWinControl.GetControl
 004EB3E3    mov         edx,eax
 004EB3E5    mov         eax,dword ptr [ebp-0C]
 004EB3E8    call        TList.Add
 004EB3ED    mov         edx,dword ptr [ebp-8]
 004EB3F0    sub         edx,dword ptr [edi+58]
 004EB3F3    sub         edx,dword ptr [edi+50]
 004EB3F6    mov         eax,edi
 004EB3F8    call        TControl.SetLeft
 004EB3FD    inc         esi
 004EB3FE    dec         ebx
>004EB3FF    jne         004EB3C2
 004EB401    mov         eax,dword ptr [ebp-0C]
 004EB404    mov         ebx,dword ptr [eax+8];TList.FCount:Integer
 004EB407    dec         ebx
 004EB408    test        ebx,ebx
>004EB40A    jl          004EB42B
 004EB40C    inc         ebx
 004EB40D    xor         esi,esi
 004EB40F    push        0
 004EB411    mov         edx,esi
 004EB413    mov         eax,dword ptr [ebp-0C]
 004EB416    call        TList.Get
 004EB41B    xor         ecx,ecx
 004EB41D    mov         edx,0B03E
 004EB422    call        TControl.Perform
 004EB427    inc         esi
 004EB428    dec         ebx
>004EB429    jne         004EB40F
 004EB42B    xor         eax,eax
 004EB42D    pop         edx
 004EB42E    pop         ecx
 004EB42F    pop         ecx
 004EB430    mov         dword ptr fs:[eax],edx
 004EB433    push        4EB448
 004EB438    mov         eax,dword ptr [ebp-0C]
 004EB43B    call        TObject.Free
 004EB440    ret
>004EB441    jmp         @HandleFinally
>004EB446    jmp         004EB438
 004EB448    pop         edi
 004EB449    pop         esi
 004EB44A    pop         ebx
 004EB44B    mov         esp,ebp
 004EB44D    pop         ebp
 004EB44E    ret
*}
end;

//004EB450
{*procedure TWinControl.sub_004EB450(?:?);
begin
 004EB450    push        dword ptr [eax+4C];TWinControl.FTop:Integer
 004EB453    push        dword ptr [eax+48];TWinControl.FWindowProc:TWndMethod
 004EB456    mov         ecx,edx
 004EB458    mov         edx,dword ptr ds:[573D6C];TStyleManager
 004EB45E    xchg        eax,edx
 004EB45F    call        TStyleManager.HandleMessage
 004EB464    ret
end;*}

//004EB468
procedure TWinControl.FlipChildren(AllLevels:Boolean);
begin
{*
 004EB468    push        ebp
 004EB469    mov         ebp,esp
 004EB46B    add         esp,0FFFFFFF4
 004EB46E    push        ebx
 004EB46F    push        esi
 004EB470    push        edi
 004EB471    mov         byte ptr [ebp-5],dl
 004EB474    mov         dword ptr [ebp-4],eax
 004EB477    mov         eax,dword ptr [ebp-4]
 004EB47A    call        TWinControl.GetControlCount
 004EB47F    test        eax,eax
>004EB481    je          004EB5A9
 004EB487    mov         dl,1
 004EB489    mov         eax,[0046C204];TList
 004EB48E    call        TObject.Create;TList.Create
 004EB493    mov         dword ptr [ebp-0C],eax
 004EB496    mov         eax,dword ptr [ebp-4]
 004EB499    inc         word ptr [eax+1BC];TWinControl.FAlignLevel:Word
 004EB4A0    xor         edx,edx
 004EB4A2    push        ebp
 004EB4A3    push        4EB558
 004EB4A8    push        dword ptr fs:[edx]
 004EB4AB    mov         dword ptr fs:[edx],esp
 004EB4AE    mov         eax,dword ptr [ebp-4]
 004EB4B1    call        TWinControl.GetControlCount
 004EB4B6    mov         edi,eax
 004EB4B8    dec         edi
 004EB4B9    test        edi,edi
>004EB4BB    jl          004EB4EC
 004EB4BD    inc         edi
 004EB4BE    xor         ebx,ebx
 004EB4C0    mov         edx,ebx
 004EB4C2    mov         eax,dword ptr [ebp-4]
 004EB4C5    call        TWinControl.GetControl
 004EB4CA    movzx       eax,byte ptr [eax+6D];TControl.FAlign:TAlign
 004EB4CE    add         al,0FD
 004EB4D0    sub         al,2
>004EB4D2    jae         004EB4E8
 004EB4D4    mov         edx,ebx
 004EB4D6    mov         eax,dword ptr [ebp-4]
 004EB4D9    call        TWinControl.GetControl
 004EB4DE    mov         edx,eax
 004EB4E0    mov         eax,dword ptr [ebp-0C]
 004EB4E3    call        TList.Add
 004EB4E8    inc         ebx
 004EB4E9    dec         edi
>004EB4EA    jne         004EB4C0
 004EB4EC    mov         eax,dword ptr [ebp-4]
 004EB4EF    mov         si,0FFBE
 004EB4F3    call        @CallDynaInst;TWinControl.sub_004EB37C
 004EB4F8    xor         eax,eax
 004EB4FA    pop         edx
 004EB4FB    pop         ecx
 004EB4FC    pop         ecx
 004EB4FD    mov         dword ptr fs:[eax],edx
 004EB500    push        4EB55F
>004EB505    jmp         004EB53D
 004EB507    mov         edx,esi
 004EB509    dec         edx
 004EB50A    mov         eax,dword ptr [ebp-0C]
 004EB50D    call        TList.Get
 004EB512    mov         ebx,eax
 004EB514    cmp         byte ptr [ebx+6D],3
>004EB518    jne         004EB525
 004EB51A    mov         dl,4
 004EB51C    mov         eax,ebx
 004EB51E    call        TGroupBox.SetAlign
>004EB523    jmp         004EB52E
 004EB525    mov         dl,3
 004EB527    mov         eax,ebx
 004EB529    call        TGroupBox.SetAlign
 004EB52E    mov         eax,dword ptr [ebp-0C]
 004EB531    mov         edx,dword ptr [eax+8];TList.FCount:Integer
 004EB534    dec         edx
 004EB535    mov         eax,dword ptr [ebp-0C]
 004EB538    call        TList.Delete
 004EB53D    mov         eax,dword ptr [ebp-0C]
 004EB540    mov         esi,dword ptr [eax+8];TList.FCount:Integer
 004EB543    test        esi,esi
>004EB545    jg          004EB507
 004EB547    mov         eax,dword ptr [ebp-0C]
 004EB54A    call        TObject.Free
 004EB54F    mov         eax,dword ptr [ebp-4]
 004EB552    call        TWinControl.EnableAlign
 004EB557    ret
>004EB558    jmp         @HandleFinally
>004EB55D    jmp         004EB53D
 004EB55F    cmp         byte ptr [ebp-5],0
>004EB563    je          004EB5A9
 004EB565    mov         eax,dword ptr [ebp-4]
 004EB568    call        TWinControl.GetControlCount
 004EB56D    mov         edi,eax
 004EB56F    dec         edi
 004EB570    test        edi,edi
>004EB572    jl          004EB5A9
 004EB574    inc         edi
 004EB575    xor         ebx,ebx
 004EB577    mov         edx,ebx
 004EB579    mov         eax,dword ptr [ebp-4]
 004EB57C    call        TWinControl.GetControl
 004EB581    mov         edx,dword ptr ds:[4DE8CC];TWinControl
 004EB587    call        @IsClass
 004EB58C    test        al,al
>004EB58E    je          004EB5A5
 004EB590    mov         edx,ebx
 004EB592    mov         eax,dword ptr [ebp-4]
 004EB595    call        TWinControl.GetControl
 004EB59A    mov         dl,1
 004EB59C    mov         si,0FFB2
 004EB5A0    call        @CallDynaInst
 004EB5A5    inc         ebx
 004EB5A6    dec         edi
>004EB5A7    jne         004EB577
 004EB5A9    pop         edi
 004EB5AA    pop         esi
 004EB5AB    pop         ebx
 004EB5AC    mov         esp,ebp
 004EB5AE    pop         ebp
 004EB5AF    ret
*}
end;

//004EB5B0
function TWinControl.ContainsControl(Control:TControl):Boolean;
begin
{*
>004EB5B0    jmp         004EB5B5
*}
end;

//004EB5C4
procedure TWinControl.RemoveFocus(Removing:Boolean);
begin
{*
 004EB5C4    push        ebx
 004EB5C5    push        esi
 004EB5C6    mov         ebx,edx
 004EB5C8    mov         esi,eax
 004EB5CA    mov         dl,1
 004EB5CC    mov         eax,esi
 004EB5CE    call        GetParentForm
 004EB5D3    test        eax,eax
>004EB5D5    je          004EB5E0
 004EB5D7    mov         ecx,ebx
 004EB5D9    mov         edx,esi
 004EB5DB    call        TCustomForm.DefocusControl
 004EB5E0    pop         esi
 004EB5E1    pop         ebx
 004EB5E2    ret
*}
end;

//004EB5E4
procedure sub_004EB5E4(?:TWinControl; ?:TControl);
begin
{*
 004EB5E4    push        ebx
 004EB5E5    push        esi
 004EB5E6    mov         ebx,edx
 004EB5E8    mov         esi,eax
 004EB5EA    test        ebx,ebx
>004EB5EC    je          004EB62B
 004EB5EE    mov         eax,ebx
 004EB5F0    mov         edx,dword ptr ds:[4DE8CC];TWinControl
 004EB5F6    call        @IsClass
 004EB5FB    test        al,al
>004EB5FD    je          004EB61B
 004EB5FF    lea         eax,[esi+1F4]
 004EB605    mov         edx,ebx
 004EB607    call        ListAdd
 004EB60C    lea         eax,[esi+1E8]
 004EB612    mov         edx,ebx
 004EB614    call        ListAdd
>004EB619    jmp         004EB628
 004EB61B    lea         eax,[esi+1F0]
 004EB621    mov         edx,ebx
 004EB623    call        ListAdd
 004EB628    mov         dword ptr [ebx+40],esi
 004EB62B    pop         esi
 004EB62C    pop         ebx
 004EB62D    ret
*}
end;

//004EB630
procedure sub_004EB630(?:TWinControl; ?:TControl);
begin
{*
 004EB630    push        ebx
 004EB631    push        esi
 004EB632    mov         ebx,edx
 004EB634    mov         esi,eax
 004EB636    mov         eax,ebx
 004EB638    mov         edx,dword ptr ds:[4DE8CC];TWinControl
 004EB63E    call        @IsClass
 004EB643    test        al,al
>004EB645    je          004EB663
 004EB647    lea         eax,[esi+1E8];TWinControl.FTabList:TList
 004EB64D    mov         edx,ebx
 004EB64F    call        004E51E0
 004EB654    lea         eax,[esi+1F4];TWinControl.FWinControls:TList
 004EB65A    mov         edx,ebx
 004EB65C    call        004E51E0
>004EB661    jmp         004EB670
 004EB663    lea         eax,[esi+1F0];TWinControl.FControls:TList
 004EB669    mov         edx,ebx
 004EB66B    call        004E51E0
 004EB670    xor         eax,eax
 004EB672    mov         dword ptr [ebx+40],eax;TControl.FParent:TWinControl
 004EB675    pop         esi
 004EB676    pop         ebx
 004EB677    ret
*}
end;

//004EB678
procedure TWinControl.InsertControl(AControl:TControl);
begin
{*
 004EB678    push        ebx
 004EB679    push        esi
 004EB67A    push        edi
 004EB67B    add         esp,0FFFFFFF8
 004EB67E    mov         ebx,edx
 004EB680    mov         edi,eax
 004EB682    mov         edx,edi
 004EB684    mov         eax,ebx
 004EB686    mov         si,0FFF4
 004EB68A    call        @CallDynaInst;TComponent.sub_0049EDB0
 004EB68F    mov         dword ptr [esp],ebx
 004EB692    mov         dword ptr [esp+4],edi
 004EB696    push        1
 004EB698    lea         ecx,[esp+4]
 004EB69C    mov         edx,0B04C
 004EB6A1    mov         eax,edi
 004EB6A3    call        TControl.Perform
 004EB6A8    cmp         edi,dword ptr [esp+4]
>004EB6AC    jne         004EB78F
 004EB6B2    push        1
 004EB6B4    mov         esi,ebx
 004EB6B6    mov         ecx,esi
 004EB6B8    mov         edx,0B02C
 004EB6BD    mov         eax,edi
 004EB6BF    call        TControl.Perform
 004EB6C4    mov         edx,ebx
 004EB6C6    mov         eax,edi
 004EB6C8    call        004EB5E4
 004EB6CD    test        byte ptr [ebx+1C],2;TControl.FComponentState:TComponentState
>004EB6D1    jne         004EB77F
 004EB6D7    push        0
 004EB6D9    xor         ecx,ecx
 004EB6DB    mov         edx,0B009
 004EB6E0    mov         eax,ebx
 004EB6E2    call        TControl.Perform
 004EB6E7    push        0
 004EB6E9    xor         ecx,ecx
 004EB6EB    mov         edx,0B008
 004EB6F0    mov         eax,ebx
 004EB6F2    call        TControl.Perform
 004EB6F7    push        0
 004EB6F9    xor         ecx,ecx
 004EB6FB    mov         edx,0B023
 004EB700    mov         eax,ebx
 004EB702    call        TControl.Perform
 004EB707    push        0
 004EB709    xor         ecx,ecx
 004EB70B    mov         edx,0B03D
 004EB710    mov         eax,ebx
 004EB712    call        TControl.Perform
 004EB717    push        0
 004EB719    xor         ecx,ecx
 004EB71B    mov         edx,0B050
 004EB720    mov         eax,ebx
 004EB722    call        TControl.Perform
 004EB727    push        0
 004EB729    xor         ecx,ecx
 004EB72B    mov         edx,0B058
 004EB730    mov         eax,ebx
 004EB732    call        TControl.Perform
 004EB737    mov         eax,ebx
 004EB739    mov         edx,dword ptr ds:[4DE8CC];TWinControl
 004EB73F    call        @IsClass
 004EB744    test        al,al
>004EB746    je          004EB761
 004EB748    push        0
 004EB74A    xor         ecx,ecx
 004EB74C    mov         edx,0B011
 004EB751    mov         eax,ebx
 004EB753    call        TControl.Perform
 004EB758    mov         eax,edi
 004EB75A    call        TWinControl.UpdateControlState
>004EB75F    jmp         004EB776
 004EB761    mov         eax,edi
 004EB763    call        TWinControl.HandleAllocated
 004EB768    test        al,al
>004EB76A    je          004EB776
 004EB76C    mov         eax,ebx
 004EB76E    mov         edx,dword ptr [eax]
 004EB770    call        dword ptr [edx+0A8];TControl.Invalidate
 004EB776    mov         edx,ebx
 004EB778    mov         eax,edi
 004EB77A    call        TWinControl.AlignControl
 004EB77F    push        1
 004EB781    mov         ecx,esi
 004EB783    mov         edx,0B036
 004EB788    mov         eax,edi
 004EB78A    call        TControl.Perform
 004EB78F    pop         ecx
 004EB790    pop         edx
 004EB791    pop         edi
 004EB792    pop         esi
 004EB793    pop         ebx
 004EB794    ret
*}
end;

//004EB798
procedure TWinControl.RemoveControl(AControl:TControl);
begin
{*
 004EB798    push        esi
 004EB799    push        edi
 004EB79A    push        ebp
 004EB79B    add         esp,0FFFFFFF8
 004EB79E    mov         edi,edx
 004EB7A0    mov         esi,eax
 004EB7A2    mov         dword ptr [esp],edi
 004EB7A5    mov         dword ptr [esp+4],esi
 004EB7A9    push        0
 004EB7AB    mov         ebp,edi
 004EB7AD    mov         ecx,ebp
 004EB7AF    mov         edx,0B036
 004EB7B4    mov         eax,esi
 004EB7B6    call        TControl.Perform
 004EB7BB    mov         eax,edi
 004EB7BD    mov         edx,dword ptr ds:[4DE8CC];TWinControl
 004EB7C3    call        @IsClass
 004EB7C8    test        al,al
>004EB7CA    je          004EB7E1
 004EB7CC    mov         dl,1
 004EB7CE    mov         eax,edi
 004EB7D0    call        TWinControl.RemoveFocus
 004EB7D5    mov         eax,edi
 004EB7D7    mov         edx,dword ptr [eax]
 004EB7D9    call        dword ptr [edx+0D8]
>004EB7DF    jmp         004EB7F9
 004EB7E1    mov         eax,esi
 004EB7E3    call        TWinControl.HandleAllocated
 004EB7E8    test        al,al
>004EB7EA    je          004EB7F9
 004EB7EC    xor         ecx,ecx
 004EB7EE    movzx       edx,byte ptr [edi+69];TControl.FVisible:Boolean
 004EB7F2    mov         eax,edi
 004EB7F4    call        004E73DC
 004EB7F9    mov         edx,edi
 004EB7FB    mov         eax,esi
 004EB7FD    call        004EB630
 004EB802    push        0
 004EB804    mov         ecx,ebp
 004EB806    mov         edx,0B02C
 004EB80B    mov         eax,esi
 004EB80D    call        TControl.Perform
 004EB812    push        0
 004EB814    lea         ecx,[esp+4]
 004EB818    mov         edx,0B04C
 004EB81D    mov         eax,esi
 004EB81F    call        TControl.Perform
 004EB824    xor         edx,edx
 004EB826    mov         eax,esi
 004EB828    call        TWinControl.AlignControl
 004EB82D    pop         ecx
 004EB82E    pop         edx
 004EB82F    pop         ebp
 004EB830    pop         edi
 004EB831    pop         esi
 004EB832    ret
*}
end;

//004EB834
function TWinControl.GetControl(Index:Integer):TControl;
begin
{*
 004EB834    push        ebx
 004EB835    push        esi
 004EB836    push        edi
 004EB837    push        ebp
 004EB838    mov         edi,edx
 004EB83A    mov         ebx,eax
 004EB83C    mov         ebp,dword ptr [ebx+1F0]
 004EB842    test        ebp,ebp
>004EB844    je          004EB84B
 004EB846    mov         esi,dword ptr [ebp+8]
>004EB849    jmp         004EB84D
 004EB84B    xor         esi,esi
 004EB84D    cmp         esi,edi
>004EB84F    jle         004EB85C
 004EB851    mov         edx,edi
 004EB853    mov         eax,ebp
 004EB855    call        TList.Get
>004EB85A    jmp         004EB86B
 004EB85C    mov         edx,edi
 004EB85E    sub         edx,esi
 004EB860    mov         eax,dword ptr [ebx+1F4]
 004EB866    call        TList.Get
 004EB86B    pop         ebp
 004EB86C    pop         edi
 004EB86D    pop         esi
 004EB86E    pop         ebx
 004EB86F    ret
*}
end;

//004EB870
function TWinControl.GetControlCount:Integer;
begin
{*
 004EB870    xor         edx,edx
 004EB872    mov         ecx,dword ptr [eax+1F0]
 004EB878    test        ecx,ecx
>004EB87A    je          004EB87F
 004EB87C    add         edx,dword ptr [ecx+8]
 004EB87F    mov         ecx,dword ptr [eax+1F4]
 004EB885    test        ecx,ecx
>004EB887    je          004EB88C
 004EB889    add         edx,dword ptr [ecx+8]
 004EB88C    mov         eax,edx
 004EB88E    ret
*}
end;

//004EB890
{*procedure TWinControl.Broadcast(var Message:?);
begin
 004EB890    push        ebx
 004EB891    push        esi
 004EB892    push        edi
 004EB893    push        ebp
 004EB894    push        ecx
 004EB895    mov         esi,edx
 004EB897    mov         dword ptr [esp],eax
 004EB89A    mov         eax,dword ptr [esp]
 004EB89D    call        TWinControl.GetControlCount
 004EB8A2    mov         ebx,eax
 004EB8A4    dec         ebx
 004EB8A5    test        ebx,ebx
>004EB8A7    jl          004EB8CA
 004EB8A9    inc         ebx
 004EB8AA    xor         edi,edi
 004EB8AC    mov         edx,edi
 004EB8AE    mov         eax,dword ptr [esp]
 004EB8B1    call        TWinControl.GetControl
 004EB8B6    mov         ebp,eax
 004EB8B8    mov         edx,esi
 004EB8BA    mov         eax,dword ptr [ebp+4C]
 004EB8BD    call        dword ptr [ebp+48]
 004EB8C0    cmp         dword ptr [esi+0C],0
>004EB8C4    jne         004EB8CA
 004EB8C6    inc         edi
 004EB8C7    dec         ebx
>004EB8C8    jne         004EB8AC
 004EB8CA    pop         edx
 004EB8CB    pop         ebp
 004EB8CC    pop         edi
 004EB8CD    pop         esi
 004EB8CE    pop         ebx
 004EB8CF    ret
end;*}

//004EB8D0
procedure TWinControl.Notification(AComponent:TComponent; Operation:TOperation);
begin
{*
 004EB8D0    push        ebx
 004EB8D1    push        esi
 004EB8D2    push        edi
 004EB8D3    mov         ebx,ecx
 004EB8D5    mov         esi,edx
 004EB8D7    mov         edi,eax
 004EB8D9    mov         ecx,ebx
 004EB8DB    mov         edx,esi
 004EB8DD    mov         eax,edi
 004EB8DF    call        TControl.Notification
 004EB8E4    cmp         esi,dword ptr [edi+26C];TWinControl.FMouseControl:TControl
>004EB8EA    jne         004EB8F9
 004EB8EC    cmp         bl,1
>004EB8EF    jne         004EB8F9
 004EB8F1    xor         eax,eax
 004EB8F3    mov         dword ptr [edi+26C],eax;TWinControl.FMouseControl:TControl
 004EB8F9    pop         edi
 004EB8FA    pop         esi
 004EB8FB    pop         ebx
 004EB8FC    ret
*}
end;

//004EB900
procedure TWinControl.NotifyControls(Msg:Word);
begin
{*
 004EB900    add         esp,0FFFFFFF0
 004EB903    movzx       edx,dx
 004EB906    mov         dword ptr [esp],edx
 004EB909    xor         edx,edx
 004EB90B    mov         dword ptr [esp+4],edx
 004EB90F    xor         edx,edx
 004EB911    mov         dword ptr [esp+8],edx
 004EB915    xor         edx,edx
 004EB917    mov         dword ptr [esp+0C],edx
 004EB91B    mov         edx,esp
 004EB91D    call        TWinControl.Broadcast
 004EB922    add         esp,10
 004EB925    ret
*}
end;

//004EB928
procedure TWinControl.CreateSubClass(var Params:TCreateParams; ControlClassName:PChar);
begin
{*
 004EB928    push        ebx
 004EB929    push        esi
 004EB92A    push        edi
 004EB92B    mov         esi,ecx
 004EB92D    mov         ebx,edx
 004EB92F    test        esi,esi
>004EB931    je          004EB98F
 004EB933    mov         edi,dword ptr [ebx+34]
 004EB936    lea         eax,[ebx+24]
 004EB939    push        eax
 004EB93A    push        esi
 004EB93B    mov         eax,[007C7C54];gvar_007C7C54
 004EB940    push        eax
 004EB941    call        user32.GetClassInfoW
 004EB946    test        eax,eax
>004EB948    jne         004EB97E
 004EB94A    lea         eax,[ebx+24]
 004EB94D    push        eax
 004EB94E    push        esi
 004EB94F    mov         eax,[007C458C];MainInstance:NativeUInt
 004EB954    mov         eax,dword ptr [eax]
 004EB956    push        eax
 004EB957    call        user32.GetClassInfoW
 004EB95C    test        eax,eax
>004EB95E    jne         004EB97E
 004EB960    lea         eax,[ebx+24]
 004EB963    push        eax
 004EB964    push        esi
 004EB965    push        0
 004EB967    call        user32.GetClassInfoW
 004EB96C    test        eax,eax
>004EB96E    jne         004EB97E
 004EB970    lea         eax,[ebx+24]
 004EB973    push        eax
 004EB974    push        esi
 004EB975    mov         eax,dword ptr [ebx+34]
 004EB978    push        eax
 004EB979    call        user32.GetClassInfoW
 004EB97E    mov         dword ptr [ebx+34],edi
 004EB981    mov         eax,dword ptr [ebx+24]
 004EB984    and         eax,0FFFFBF1F
 004EB989    or          eax,3
 004EB98C    mov         dword ptr [ebx+24],eax
 004EB98F    pop         edi
 004EB990    pop         esi
 004EB991    pop         ebx
 004EB992    ret
*}
end;

//004EB994
procedure TWinControl.AddBiDiModeExStyle(var ExStyle:Types.DWORD);
begin
{*
 004EB994    push        ebx
 004EB995    push        esi
 004EB996    push        edi
 004EB997    mov         edi,edx
 004EB999    mov         ebx,eax
 004EB99B    mov         eax,ebx
 004EB99D    call        TControl.UseRightToLeftReading
 004EB9A2    test        al,al
>004EB9A4    je          004EB9AC
 004EB9A6    or          dword ptr [edi],2000
 004EB9AC    mov         eax,ebx
 004EB9AE    call        TControl.UseRightToLeftScrollBar
 004EB9B3    test        al,al
>004EB9B5    je          004EB9BD
 004EB9B7    or          dword ptr [edi],4000
 004EB9BD    mov         eax,ebx
 004EB9BF    mov         si,0FFC6
 004EB9C3    call        @CallDynaInst
 004EB9C8    test        al,al
>004EB9CA    je          004EB9F5
 004EB9CC    mov         eax,ebx
 004EB9CE    mov         si,0FFC9
 004EB9D2    call        @CallDynaInst
 004EB9D7    test        al,al
>004EB9D9    jne         004EB9E3
 004EB9DB    or          dword ptr [edi],1000
>004EB9E1    jmp         004EB9F5
 004EB9E3    mov         eax,ebx
 004EB9E5    mov         si,0FFC9
 004EB9E9    call        @CallDynaInst
 004EB9EE    cmp         al,1
>004EB9F0    jne         004EB9F5
 004EB9F2    or          dword ptr [edi],0
 004EB9F5    pop         edi
 004EB9F6    pop         esi
 004EB9F7    pop         ebx
 004EB9F8    ret
*}
end;

//004EB9FC
procedure TWinControl.CreateParams(var Params:TCreateParams);
begin
{*
 004EB9FC    push        ebp
 004EB9FD    mov         ebp,esp
 004EB9FF    push        0
 004EBA01    push        ebx
 004EBA02    push        esi
 004EBA03    push        edi
 004EBA04    mov         ebx,edx
 004EBA06    mov         esi,eax
 004EBA08    xor         eax,eax
 004EBA0A    push        ebp
 004EBA0B    push        4EBB03
 004EBA10    push        dword ptr fs:[eax]
 004EBA13    mov         dword ptr fs:[eax],esp
 004EBA16    mov         eax,ebx
 004EBA18    xor         ecx,ecx
 004EBA1A    mov         edx,0CC
 004EBA1F    call        @FillChar
 004EBA24    mov         eax,dword ptr [esi+184]
 004EBA2A    mov         dword ptr [ebx],eax
 004EBA2C    mov         dword ptr [ebx+4],44000000
 004EBA33    lea         edx,[ebx+8]
 004EBA36    mov         eax,esi
 004EBA38    call        TWinControl.AddBiDiModeExStyle
 004EBA3D    test        byte ptr [esi+60],1
>004EBA41    je          004EBA51
 004EBA43    or          dword ptr [ebx+4],2000000
 004EBA4A    or          dword ptr [ebx+8],10000
 004EBA51    test        byte ptr [esi+1C],10
>004EBA55    jne         004EBA69
 004EBA57    mov         eax,esi
 004EBA59    mov         edx,dword ptr [eax]
 004EBA5B    call        dword ptr [edx+6C]
 004EBA5E    test        al,al
>004EBA60    jne         004EBA69
 004EBA62    or          dword ptr [ebx+4],8000000
 004EBA69    cmp         byte ptr [esi+1FC],0
>004EBA70    je          004EBA79
 004EBA72    or          dword ptr [ebx+4],10000
 004EBA79    mov         eax,dword ptr [esi+50]
 004EBA7C    mov         dword ptr [ebx+0C],eax
 004EBA7F    mov         eax,dword ptr [esi+54]
 004EBA82    mov         dword ptr [ebx+10],eax
 004EBA85    mov         eax,dword ptr [esi+58]
 004EBA88    mov         dword ptr [ebx+14],eax
 004EBA8B    mov         eax,dword ptr [esi+5C]
 004EBA8E    mov         dword ptr [ebx+18],eax
 004EBA91    mov         edi,dword ptr [esi+40]
 004EBA94    test        edi,edi
>004EBA96    je          004EBAA4
 004EBA98    mov         eax,edi
 004EBA9A    call        TWinControl.GetHandle
 004EBA9F    mov         dword ptr [ebx+1C],eax
>004EBAA2    jmp         004EBAAD
 004EBAA4    mov         eax,dword ptr [esi+1E4]
 004EBAAA    mov         dword ptr [ebx+1C],eax
 004EBAAD    mov         dword ptr [ebx+24],0B
 004EBAB4    push        7F00
 004EBAB9    push        0
 004EBABB    call        user32.LoadCursorW
 004EBAC0    mov         dword ptr [ebx+3C],eax
 004EBAC3    xor         eax,eax
 004EBAC5    mov         dword ptr [ebx+40],eax
 004EBAC8    mov         eax,[007C7C54];gvar_007C7C54
 004EBACD    mov         dword ptr [ebx+34],eax
 004EBAD0    mov         eax,410E98;user32.DefWindowProcW:IntPtr
 004EBAD5    mov         dword ptr [ebx+28],eax
 004EBAD8    lea         edx,[ebp-4]
 004EBADB    mov         eax,dword ptr [esi]
 004EBADD    call        TObject.ClassName
 004EBAE2    mov         edx,dword ptr [ebp-4]
 004EBAE5    lea         eax,[ebx+4C]
 004EBAE8    call        0041F258
 004EBAED    xor         eax,eax
 004EBAEF    pop         edx
 004EBAF0    pop         ecx
 004EBAF1    pop         ecx
 004EBAF2    mov         dword ptr fs:[eax],edx
 004EBAF5    push        4EBB0A
 004EBAFA    lea         eax,[ebp-4]
 004EBAFD    call        @UStrClr
 004EBB02    ret
>004EBB03    jmp         @HandleFinally
>004EBB08    jmp         004EBAFA
 004EBB0A    pop         edi
 004EBB0B    pop         esi
 004EBB0C    pop         ebx
 004EBB0D    pop         ecx
 004EBB0E    pop         ebp
 004EBB0F    ret
*}
end;

//004EBB10
procedure TWinControl.CreateWnd;
begin
{*
 004EBB10    push        ebp
 004EBB11    mov         ebp,esp
 004EBB13    add         esp,0FFFFFEFC
 004EBB19    push        ebx
 004EBB1A    push        esi
 004EBB1B    push        edi
 004EBB1C    xor         edx,edx
 004EBB1E    mov         dword ptr [ebp-104],edx
 004EBB24    mov         dword ptr [ebp-100],edx
 004EBB2A    mov         edi,eax
 004EBB2C    xor         eax,eax
 004EBB2E    push        ebp
 004EBB2F    push        4EBDB4
 004EBB34    push        dword ptr fs:[eax]
 004EBB37    mov         dword ptr fs:[eax],esp
 004EBB3A    lea         edx,[ebp-0CC]
 004EBB40    mov         eax,edi
 004EBB42    mov         ecx,dword ptr [eax]
 004EBB44    call        dword ptr [ecx+0C4]
 004EBB4A    cmp         dword ptr [ebp-0B0],0
>004EBB51    jne         004EBBC9
 004EBB53    test        byte ptr [ebp-0C5],40
>004EBB5A    je          004EBBC9
 004EBB5C    mov         ebx,dword ptr [edi+4]
 004EBB5F    test        ebx,ebx
>004EBB61    je          004EBB89
 004EBB63    test        byte ptr [ebx+1C],2
>004EBB67    je          004EBB89
 004EBB69    mov         eax,ebx
 004EBB6B    mov         edx,dword ptr ds:[4DE8CC];TWinControl
 004EBB71    call        @IsClass
 004EBB76    test        al,al
>004EBB78    je          004EBB89
 004EBB7A    mov         eax,ebx
 004EBB7C    call        TWinControl.GetHandle
 004EBB81    mov         dword ptr [ebp-0B0],eax
>004EBB87    jmp         004EBBC9
 004EBB89    mov         eax,dword ptr [edi+8]
 004EBB8C    mov         dword ptr [ebp-0FC],eax
 004EBB92    mov         byte ptr [ebp-0F8],11
 004EBB99    lea         eax,[ebp-0FC]
 004EBB9F    push        eax
 004EBBA0    push        0
 004EBBA2    lea         edx,[ebp-100]
 004EBBA8    mov         eax,[007C4B08];^SResString231:TResStringRec
 004EBBAD    call        LoadResString
 004EBBB2    mov         ecx,dword ptr [ebp-100]
 004EBBB8    mov         dl,1
 004EBBBA    mov         eax,[0046BE9C];EInvalidOperation
 004EBBBF    call        Exception.CreateFmt
 004EBBC4    call        @RaiseExcept
 004EBBC9    mov         eax,dword ptr [ebp-0A4]
 004EBBCF    mov         dword ptr [edi+274],eax
 004EBBD5    lea         eax,[ebp-0F4]
 004EBBDB    push        eax
 004EBBDC    lea         eax,[ebp-80]
 004EBBDF    push        eax
 004EBBE0    mov         eax,dword ptr [ebp-98]
 004EBBE6    push        eax
 004EBBE7    call        user32.GetClassInfoW
 004EBBEC    cmp         eax,1
 004EBBEF    sbb         eax,eax
 004EBBF1    inc         eax
 004EBBF2    test        al,al
>004EBBF4    je          004EBC03
 004EBBF6    mov         edx,4E34B8;sub_004E34B8
 004EBBFB    cmp         edx,dword ptr [ebp-0F0]
>004EBC01    je          004EBC40
 004EBC03    test        al,al
>004EBC05    je          004EBC17
 004EBC07    mov         eax,dword ptr [ebp-98]
 004EBC0D    push        eax
 004EBC0E    lea         eax,[ebp-80]
 004EBC11    push        eax
 004EBC12    call        user32.UnregisterClassW
 004EBC17    mov         dword ptr [ebp-0A4],4E34B8;sub_004E34B8
 004EBC21    lea         eax,[ebp-80]
 004EBC24    mov         dword ptr [ebp-84],eax
 004EBC2A    lea         eax,[ebp-0A8]
 004EBC30    push        eax
 004EBC31    call        user32.RegisterClassW
 004EBC36    test        ax,ax
>004EBC39    jne         004EBC40
 004EBC3B    call        RaiseLastOSError
 004EBC40    mov         dword ptr ds:[7A11A8],edi;gvar_007A11A8
 004EBC46    lea         edx,[ebp-0CC]
 004EBC4C    mov         eax,edi
 004EBC4E    mov         ecx,dword ptr [eax]
 004EBC50    call        dword ptr [ecx+0C8]
 004EBC56    cmp         dword ptr [edi+278],0
>004EBC5D    jne         004EBC64
 004EBC5F    call        RaiseLastOSError
 004EBC64    mov         eax,dword ptr [edi+278]
 004EBC6A    push        0F0
 004EBC6C    push        eax
 004EBC6D    call        user32.GetWindowLongW
 004EBC72    test        eax,40000000
>004EBC77    je          004EBC9C
 004EBC79    mov         eax,dword ptr [edi+278]
 004EBC7F    push        0F4
 004EBC81    push        eax
 004EBC82    call        user32.GetWindowLongW
 004EBC87    test        eax,eax
>004EBC89    jne         004EBC9C
 004EBC8B    mov         edx,dword ptr [edi+278]
 004EBC91    mov         eax,edx
 004EBC93    push        edx
 004EBC94    push        0F4
 004EBC96    push        eax
 004EBC97    call        user32.SetWindowLongW
 004EBC9C    mov         eax,dword ptr [edi+184]
 004EBCA2    call        0041F4FC
 004EBCA7    xor         eax,eax
 004EBCA9    mov         dword ptr [edi+184],eax
 004EBCAF    mov         eax,edi
 004EBCB1    call        004F01DC
 004EBCB6    push        1
 004EBCB8    mov         eax,dword ptr [edi+74]
 004EBCBB    call        TFont.GetHandle
 004EBCC0    mov         ecx,eax
 004EBCC2    mov         edx,30
 004EBCC7    mov         eax,edi
 004EBCC9    call        TControl.Perform
 004EBCCE    cmp         byte ptr [edi+6E],0
>004EBCD2    je          004EBCDF
 004EBCD4    mov         eax,edi
 004EBCD6    mov         si,0FFEE
 004EBCDA    call        @CallDynaInst
 004EBCDF    mov         eax,dword ptr [edi+0BC]
 004EBCE5    mov         eax,dword ptr [eax+8]
 004EBCE8    test        eax,eax
>004EBCEA    je          004EBCF9
 004EBCEC    test        byte ptr [edi+62],20
>004EBCF0    je          004EBCF9
 004EBCF2    mov         dl,1
 004EBCF4    mov         ecx,dword ptr [eax]
 004EBCF6    call        dword ptr [ecx+8]
 004EBCF9    mov         eax,[007C4A18];^Application:TApplication
 004EBCFE    mov         eax,dword ptr [eax]
 004EBD00    cmp         byte ptr [eax+195],0
>004EBD07    je          004EBD90
 004EBD0D    cmp         dword ptr [edi+278],0
>004EBD14    je          004EBD90
 004EBD16    test        byte ptr [edi+1C],10
>004EBD1A    jne         004EBD90
 004EBD1C    lea         eax,[edi+200]
 004EBD22    call        @IntfClear
 004EBD27    lea         eax,[edi+200]
 004EBD2D    call        @IntfClear
 004EBD32    push        eax
 004EBD33    push        4EBDC4
 004EBD38    push        5
 004EBD3A    push        0
 004EBD3C    mov         eax,[007C46EC]
 004EBD41    push        eax
 004EBD42    call        ole32.CoCreateInstance
 004EBD47    test        eax,80000000
 004EBD4C    sete        al
 004EBD4F    test        al,al
>004EBD51    je          004EBD90
 004EBD53    mov         edx,4EBDD4
 004EBD58    mov         eax,dword ptr [edi+200]
 004EBD5E    call        Supports
 004EBD63    test        al,al
>004EBD65    je          004EBD90
 004EBD67    mov         eax,dword ptr [edi+278]
 004EBD6D    push        eax
 004EBD6E    lea         eax,[ebp-104]
 004EBD74    mov         edx,dword ptr [edi+200]
 004EBD7A    mov         ecx,4EBDD4
 004EBD7F    call        @IntfCast
 004EBD84    mov         eax,dword ptr [ebp-104]
 004EBD8A    push        eax
 004EBD8B    mov         eax,dword ptr [eax]
 004EBD8D    call        dword ptr [eax+10]
 004EBD90    xor         eax,eax
 004EBD92    pop         edx
 004EBD93    pop         ecx
 004EBD94    pop         ecx
 004EBD95    mov         dword ptr fs:[eax],edx
 004EBD98    push        4EBDBB
 004EBD9D    lea         eax,[ebp-104]
 004EBDA3    call        @IntfClear
 004EBDA8    lea         eax,[ebp-100]
 004EBDAE    call        @UStrClr
 004EBDB3    ret
>004EBDB4    jmp         @HandleFinally
>004EBDB9    jmp         004EBD9D
 004EBDBB    pop         edi
 004EBDBC    pop         esi
 004EBDBD    pop         ebx
 004EBDBE    mov         esp,ebp
 004EBDC0    pop         ebp
 004EBDC1    ret
*}
end;

//004EBDE4
{*procedure sub_004EBDE4(?:?);
begin
 004EBDE4    push        ebx
 004EBDE5    push        esi
 004EBDE6    mov         ebx,edx
 004EBDE8    mov         esi,eax
 004EBDEA    mov         eax,dword ptr [ebx+4]
 004EBDED    push        eax
 004EBDEE    mov         eax,dword ptr [ebx+0C]
 004EBDF1    push        eax
 004EBDF2    mov         eax,dword ptr [ebx+10]
 004EBDF5    push        eax
 004EBDF6    mov         eax,dword ptr [ebx+14]
 004EBDF9    push        eax
 004EBDFA    mov         eax,dword ptr [ebx+18]
 004EBDFD    push        eax
 004EBDFE    mov         eax,dword ptr [ebx+1C]
 004EBE01    push        eax
 004EBE02    push        0
 004EBE04    mov         eax,dword ptr [ebx+34]
 004EBE07    push        eax
 004EBE08    mov         eax,dword ptr [ebx+20]
 004EBE0B    push        eax
 004EBE0C    mov         ecx,dword ptr [ebx]
 004EBE0E    lea         edx,[ebx+4C]
 004EBE11    mov         eax,dword ptr [ebx+8]
 004EBE14    call        CreateWindowEx
 004EBE19    mov         dword ptr [esi+278],eax;TStringGrid.FHandle:HWND
 004EBE1F    pop         esi
 004EBE20    pop         ebx
 004EBE21    ret
end;*}

//004EBE24
procedure TWinControl.ReadDesignSize(Reader:Classes.TReader);
begin
{*
 004EBE24    push        ebx
 004EBE25    push        esi
 004EBE26    mov         esi,edx
 004EBE28    mov         ebx,eax
 004EBE2A    mov         dl,1
 004EBE2C    mov         eax,esi
 004EBE2E    call        TReader.CheckValue
 004EBE33    mov         eax,esi
 004EBE35    call        TReader.ReadInteger
 004EBE3A    mov         dword ptr [ebx+284],eax
 004EBE40    mov         eax,esi
 004EBE42    call        TReader.ReadInteger
 004EBE47    mov         dword ptr [ebx+288],eax
 004EBE4D    or          byte ptr [ebx+98],20
 004EBE54    xor         edx,edx
 004EBE56    mov         eax,esi
 004EBE58    call        TReader.CheckValue
 004EBE5D    pop         esi
 004EBE5E    pop         ebx
 004EBE5F    ret
*}
end;

//004EBE60
procedure TWinControl.WriteDesignSize(Writer:Classes.TWriter);
begin
{*
 004EBE60    push        ebx
 004EBE61    push        esi
 004EBE62    add         esp,0FFFFFFF0
 004EBE65    mov         esi,edx
 004EBE67    mov         ebx,eax
 004EBE69    mov         edx,esp
 004EBE6B    mov         eax,ebx
 004EBE6D    mov         ecx,dword ptr [eax]
 004EBE6F    call        dword ptr [ecx+64]
 004EBE72    mov         eax,dword ptr [esp+8]
 004EBE76    mov         dword ptr [ebx+284],eax
 004EBE7C    mov         eax,dword ptr [esp+0C]
 004EBE80    mov         dword ptr [ebx+288],eax
 004EBE86    mov         dl,1
 004EBE88    mov         eax,esi
 004EBE8A    call        TWriter.WriteValue
 004EBE8F    mov         edx,dword ptr [ebx+284]
 004EBE95    mov         eax,esi
 004EBE97    call        TWriter.WriteInteger
 004EBE9C    mov         edx,dword ptr [ebx+288]
 004EBEA2    mov         eax,esi
 004EBEA4    call        TWriter.WriteInteger
 004EBEA9    xor         edx,edx
 004EBEAB    mov         eax,esi
 004EBEAD    call        TWriter.WriteValue
 004EBEB2    add         esp,10
 004EBEB5    pop         esi
 004EBEB6    pop         ebx
 004EBEB7    ret
*}
end;

//004EBEB8
function PointsEqual(const P1:Types.TPoint; const P2:Types.TPoint):Boolean;
begin
{*
 004EBEB8    mov         ecx,dword ptr [eax]
 004EBEBA    cmp         ecx,dword ptr [edx]
>004EBEBC    jne         004EBEC6
 004EBEBE    mov         eax,dword ptr [eax+4]
 004EBEC1    cmp         eax,dword ptr [edx+4]
>004EBEC4    je          004EBEC9
 004EBEC6    xor         eax,eax
 004EBEC8    ret
 004EBEC9    mov         al,1
 004EBECB    ret
*}
end;

//004EBECC
function DoWriteDesignSize:Boolean;
begin
{*
 004EBECC    push        ebp
 004EBECD    mov         ebp,esp
 004EBECF    push        ecx
 004EBED0    push        ebx
 004EBED1    push        esi
 004EBED2    push        edi
 004EBED3    mov         byte ptr [ebp-1],1
 004EBED7    mov         eax,dword ptr [ebp+8]
 004EBEDA    mov         eax,dword ptr [eax-4]
 004EBEDD    mov         ebx,dword ptr [eax+20]
 004EBEE0    test        ebx,ebx
>004EBEE2    je          004EBF02
 004EBEE4    lea         edx,[ebx+284]
 004EBEEA    mov         eax,dword ptr [ebp+8]
 004EBEED    mov         eax,dword ptr [eax-8]
 004EBEF0    add         eax,284
 004EBEF5    call        PointsEqual
 004EBEFA    test        al,al
>004EBEFC    jne         004EBF8E
 004EBF02    mov         eax,dword ptr [ebp+8]
 004EBF05    mov         eax,dword ptr [eax-8]
 004EBF08    mov         eax,dword ptr [eax+1F0]
 004EBF0E    test        eax,eax
>004EBF10    je          004EBF48
 004EBF12    mov         ebx,dword ptr [eax+8]
 004EBF15    dec         ebx
 004EBF16    test        ebx,ebx
>004EBF18    jl          004EBF48
 004EBF1A    inc         ebx
 004EBF1B    xor         esi,esi
 004EBF1D    mov         eax,dword ptr [ebp+8]
 004EBF20    mov         eax,dword ptr [eax-8]
 004EBF23    mov         eax,dword ptr [eax+1F0]
 004EBF29    mov         edx,esi
 004EBF2B    call        TList.Get
 004EBF30    mov         edi,eax
 004EBF32    cmp         byte ptr [edi+6D],0
>004EBF36    jne         004EBF44
 004EBF38    movzx       eax,byte ptr ds:[4EBF9C]
 004EBF3F    cmp         al,byte ptr [edi+73]
>004EBF42    jne         004EBF92
 004EBF44    inc         esi
 004EBF45    dec         ebx
>004EBF46    jne         004EBF1D
 004EBF48    mov         eax,dword ptr [ebp+8]
 004EBF4B    mov         eax,dword ptr [eax-8]
 004EBF4E    mov         eax,dword ptr [eax+1F4]
 004EBF54    test        eax,eax
>004EBF56    je          004EBF8E
 004EBF58    mov         ebx,dword ptr [eax+8]
 004EBF5B    dec         ebx
 004EBF5C    test        ebx,ebx
>004EBF5E    jl          004EBF8E
 004EBF60    inc         ebx
 004EBF61    xor         esi,esi
 004EBF63    mov         eax,dword ptr [ebp+8]
 004EBF66    mov         eax,dword ptr [eax-8]
 004EBF69    mov         eax,dword ptr [eax+1F4]
 004EBF6F    mov         edx,esi
 004EBF71    call        TList.Get
 004EBF76    mov         edi,eax
 004EBF78    cmp         byte ptr [edi+6D],0
>004EBF7C    jne         004EBF8A
 004EBF7E    movzx       eax,byte ptr ds:[4EBF9C]
 004EBF85    cmp         al,byte ptr [edi+73]
>004EBF88    jne         004EBF92
 004EBF8A    inc         esi
 004EBF8B    dec         ebx
>004EBF8C    jne         004EBF63
 004EBF8E    mov         byte ptr [ebp-1],0
 004EBF92    movzx       eax,byte ptr [ebp-1]
 004EBF96    pop         edi
 004EBF97    pop         esi
 004EBF98    pop         ebx
 004EBF99    pop         ecx
 004EBF9A    pop         ebp
 004EBF9B    ret
*}
end;

//004EBFA0
procedure TWinControl.DefineProperties(Filer:TFiler);
begin
{*
 004EBFA0    push        ebp
 004EBFA1    mov         ebp,esp
 004EBFA3    add         esp,0FFFFFFF8
 004EBFA6    push        ebx
 004EBFA7    mov         dword ptr [ebp-4],edx
 004EBFAA    mov         dword ptr [ebp-8],eax
 004EBFAD    mov         edx,dword ptr [ebp-4]
 004EBFB0    mov         eax,dword ptr [ebp-8]
 004EBFB3    call        TControl.DefineProperties
 004EBFB8    mov         eax,dword ptr [ebp-8]
 004EBFBB    push        eax
 004EBFBC    push        4EBE24;TWinControl.ReadDesignSize
 004EBFC1    mov         eax,dword ptr [ebp-8]
 004EBFC4    push        eax
 004EBFC5    push        4EBE60;TWinControl.WriteDesignSize
 004EBFCA    push        ebp
 004EBFCB    call        DoWriteDesignSize
 004EBFD0    pop         ecx
 004EBFD1    mov         ecx,eax
 004EBFD3    mov         edx,4EBFF4;'DesignSize'
 004EBFD8    mov         eax,dword ptr [ebp-4]
 004EBFDB    mov         ebx,dword ptr [eax]
 004EBFDD    call        dword ptr [ebx+4]
 004EBFE0    pop         ebx
 004EBFE1    pop         ecx
 004EBFE2    pop         ecx
 004EBFE3    pop         ebp
 004EBFE4    ret
*}
end;

//004EC00C
procedure sub_004EC00C;
begin
{*
 004EC00C    push        ebx
 004EC00D    push        esi
 004EC00E    push        edi
 004EC00F    mov         esi,eax
 004EC011    cmp         dword ptr [esi+184],0;TMainForm.FText:PWideChar
>004EC018    jne         004EC05C
 004EC01A    mov         eax,esi
 004EC01C    call        TControl.GetTextLen
 004EC021    mov         ebx,eax
 004EC023    cmp         ebx,1
>004EC026    jge         004EC03A
 004EC028    mov         eax,4EC070
 004EC02D    call        StrNew
 004EC032    mov         dword ptr [esi+184],eax;TMainForm.FText:PWideChar
>004EC038    jmp         004EC05C
 004EC03A    lea         eax,[ebx+1]
 004EC03D    call        0041F4BC
 004EC042    mov         edi,eax
 004EC044    mov         dword ptr [esi+184],edi;TMainForm.FText:PWideChar
 004EC04A    mov         eax,edi
 004EC04C    call        0041F4C4
 004EC051    mov         ecx,eax
 004EC053    mov         edx,edi
 004EC055    mov         eax,esi
 004EC057    call        TControl.GetTextBuf
 004EC05C    call        004E5320
 004EC061    mov         eax,esi
 004EC063    mov         edx,dword ptr [eax]
 004EC065    call        dword ptr [edx+0DC];TMainForm.sub_005C4574
 004EC06B    pop         edi
 004EC06C    pop         esi
 004EC06D    pop         ebx
 004EC06E    ret
*}
end;

//004EC074
procedure sub_004EC074;
begin
{*
 004EC074    push        ebp
 004EC075    mov         ebp,esp
 004EC077    push        ecx
 004EC078    mov         dword ptr [ebp-4],eax
 004EC07B    mov         eax,dword ptr [ebp-4]
 004EC07E    mov         eax,dword ptr [eax+0BC];TStringGrid.FTouchManager:TTouchManager
 004EC084    mov         eax,dword ptr [eax+8];TTouchManager.FGestureEngine:TCustomGestureEngine
 004EC087    test        eax,eax
>004EC089    je          004EC092
 004EC08B    xor         edx,edx
 004EC08D    mov         ecx,dword ptr [eax]
 004EC08F    call        dword ptr [ecx+8];@AbstractError
 004EC092    mov         eax,dword ptr [ebp-4]
 004EC095    or          dword ptr [eax+64],200;TStringGrid.FControlState:TControlState
 004EC09C    xor         eax,eax
 004EC09E    push        ebp
 004EC09F    push        4EC0DA
 004EC0A4    push        dword ptr fs:[eax]
 004EC0A7    mov         dword ptr fs:[eax],esp
 004EC0AA    mov         eax,dword ptr [ebp-4]
 004EC0AD    mov         eax,dword ptr [eax+278];TStringGrid.FHandle:HWND
 004EC0B3    push        eax
 004EC0B4    call        user32.DestroyWindow
 004EC0B9    test        eax,eax
>004EC0BB    jne         004EC0C2
 004EC0BD    call        RaiseLastOSError
 004EC0C2    xor         eax,eax
 004EC0C4    pop         edx
 004EC0C5    pop         ecx
 004EC0C6    pop         ecx
 004EC0C7    mov         dword ptr fs:[eax],edx
 004EC0CA    push        4EC0E1
 004EC0CF    mov         eax,dword ptr [ebp-4]
 004EC0D2    and         dword ptr [eax+64],0FFFFFDFF;TStringGrid.FControlState:TControlState
 004EC0D9    ret
>004EC0DA    jmp         @HandleFinally
>004EC0DF    jmp         004EC0CF
 004EC0E1    mov         eax,dword ptr [ebp-4]
 004EC0E4    xor         edx,edx
 004EC0E6    mov         dword ptr [eax+278],edx;TStringGrid.FHandle:HWND
 004EC0EC    pop         ecx
 004EC0ED    pop         ebp
 004EC0EE    ret
*}
end;

//004EC0F0
{*function sub_004EC0F0(?:TWinControl; ?:TMainForm):?;
begin
 004EC0F0    push        ebx
 004EC0F1    push        esi
 004EC0F2    push        edi
 004EC0F3    mov         ebx,edx
 004EC0F5    mov         edi,eax
 004EC0F7    mov         eax,dword ptr [edi+1F4]
 004EC0FD    mov         edx,ebx
 004EC0FF    call        TList.IndexOf
 004EC104    mov         esi,eax
 004EC106    inc         esi
 004EC107    mov         eax,dword ptr [edi+1F4]
 004EC10D    mov         ebx,dword ptr [eax+8]
 004EC110    dec         ebx
 004EC111    sub         ebx,esi
>004EC113    jl          004EC131
 004EC115    inc         ebx
 004EC116    mov         eax,dword ptr [edi+1F4]
 004EC11C    mov         edx,esi
 004EC11E    call        TList.Get
 004EC123    mov         eax,dword ptr [eax+278]
 004EC129    test        eax,eax
>004EC12B    jne         004EC133
 004EC12D    inc         esi
 004EC12E    dec         ebx
>004EC12F    jne         004EC116
 004EC131    xor         eax,eax
 004EC133    pop         edi
 004EC134    pop         esi
 004EC135    pop         ebx
 004EC136    ret
end;*}

//004EC138
procedure sub_004EC138;
begin
{*
 004EC138    push        ebx
 004EC139    push        esi
 004EC13A    push        edi
 004EC13B    mov         ebx,eax
 004EC13D    cmp         dword ptr [ebx+278],0;TMainForm.FHandle:HWND
>004EC144    jne         004EC1CA
 004EC14A    mov         eax,ebx
 004EC14C    mov         edx,dword ptr [eax]
 004EC14E    call        dword ptr [edx+0CC];TCustomForm.CreateWnd
 004EC154    mov         esi,ebx
 004EC156    push        esi
 004EC157    movzx       eax,word ptr ds:[7CA5EA];gvar_007CA5EA
 004EC15E    push        eax
 004EC15F    mov         eax,dword ptr [ebx+278];TMainForm.FHandle:HWND
 004EC165    push        eax
 004EC166    call        user32.SetPropW
 004EC16B    push        esi
 004EC16C    movzx       eax,word ptr ds:[7CA5E8];gvar_007CA5E8
 004EC173    push        eax
 004EC174    mov         eax,dword ptr [ebx+278];TMainForm.FHandle:HWND
 004EC17A    push        eax
 004EC17B    call        user32.SetPropW
 004EC180    mov         esi,dword ptr [ebx+40];TMainForm.FParent:TWinControl
 004EC183    test        esi,esi
>004EC185    je          004EC1A7
 004EC187    push        13
 004EC189    push        0
 004EC18B    push        0
 004EC18D    push        0
 004EC18F    push        0
 004EC191    mov         edx,ebx
 004EC193    mov         eax,esi
 004EC195    call        004EC0F0
 004EC19A    push        eax
 004EC19B    mov         eax,dword ptr [ebx+278];TMainForm.FHandle:HWND
 004EC1A1    push        eax
 004EC1A2    call        user32.SetWindowPos
 004EC1A7    mov         eax,ebx
 004EC1A9    call        TWinControl.GetControlCount
 004EC1AE    mov         esi,eax
 004EC1B0    dec         esi
 004EC1B1    test        esi,esi
>004EC1B3    jl          004EC1CA
 004EC1B5    inc         esi
 004EC1B6    xor         edi,edi
 004EC1B8    mov         edx,edi
 004EC1BA    mov         eax,ebx
 004EC1BC    call        TWinControl.GetControl
 004EC1C1    call        004E62D0
 004EC1C6    inc         edi
 004EC1C7    dec         esi
>004EC1C8    jne         004EC1B8
 004EC1CA    pop         edi
 004EC1CB    pop         esi
 004EC1CC    pop         ebx
 004EC1CD    ret
*}
end;

//004EC1D0
{*function sub_004EC1D0(?:?):?;
begin
 004EC1D0    push        ebx
 004EC1D1    cmp         word ptr [eax+25A],0;TMainForm.?f25A:word
>004EC1D9    je          004EC1F0
 004EC1DB    push        ecx
 004EC1DC    mov         ebx,eax
 004EC1DE    mov         ecx,edx
 004EC1E0    mov         edx,eax
 004EC1E2    mov         eax,dword ptr [ebx+25C];TMainForm.?f25C:dword
 004EC1E8    call        dword ptr [ebx+258];TMainForm.FOnAlignInsertBefore
 004EC1EE    pop         ebx
 004EC1EF    ret
 004EC1F0    xor         eax,eax
 004EC1F2    pop         ebx
 004EC1F3    ret
end;*}

//004EC1F4
{*procedure sub_004EC1F4(?:?; ?:?; ?:?; ?:?; ?:?; ?:?);
begin
 004EC1F4    push        ebp
 004EC1F5    mov         ebp,esp
 004EC1F7    add         esp,0FFFFFFF0
 004EC1FA    push        esi
 004EC1FB    push        edi
 004EC1FC    mov         esi,dword ptr [ebp+8]
 004EC1FF    lea         edi,[ebp-10]
 004EC202    movs        dword ptr [edi],dword ptr [esi]
 004EC203    movs        dword ptr [edi],dword ptr [esi]
 004EC204    movs        dword ptr [edi],dword ptr [esi]
 004EC205    movs        dword ptr [edi],dword ptr [esi]
 004EC206    mov         esi,eax
 004EC208    cmp         word ptr [esi+262],0;TMainForm.?f262:word
>004EC210    je          004EC239
 004EC212    push        ecx
 004EC213    mov         eax,dword ptr [ebp+18]
 004EC216    push        eax
 004EC217    mov         eax,dword ptr [ebp+14]
 004EC21A    push        eax
 004EC21B    mov         eax,dword ptr [ebp+10]
 004EC21E    push        eax
 004EC21F    mov         eax,dword ptr [ebp+0C]
 004EC222    push        eax
 004EC223    lea         eax,[ebp-10]
 004EC226    push        eax
 004EC227    mov         eax,esi
 004EC229    mov         ecx,edx
 004EC22B    mov         edx,eax
 004EC22D    mov         eax,dword ptr [esi+264];TMainForm.FMouseControl:TControl
 004EC233    call        dword ptr [esi+260];TMainForm.FOnAlignPosition
 004EC239    pop         edi
 004EC23A    pop         esi
 004EC23B    mov         esp,ebp
 004EC23D    pop         ebp
 004EC23E    ret         14
end;*}

//004EC288
procedure sub_004EC288;
begin
{*
 004EC288    push        ebx
 004EC289    push        esi
 004EC28A    push        edi
 004EC28B    add         esp,0FFFFFFF8
 004EC28E    mov         esi,eax
 004EC290    cmp         dword ptr [esi+278],0;TStringGrid.FHandle:HWND
>004EC297    je          004EC2F3
 004EC299    mov         eax,dword ptr [esi+1F4];TStringGrid.FWinControls:TList
 004EC29F    test        eax,eax
>004EC2A1    je          004EC2C7
 004EC2A3    mov         ebx,dword ptr [eax+8];TList.FCount:Integer
 004EC2A6    dec         ebx
 004EC2A7    test        ebx,ebx
>004EC2A9    jl          004EC2C7
 004EC2AB    inc         ebx
 004EC2AC    xor         edi,edi
 004EC2AE    mov         edx,edi
 004EC2B0    mov         eax,dword ptr [esi+1F4];TStringGrid.FWinControls:TList
 004EC2B6    call        TList.Get
 004EC2BB    mov         edx,dword ptr [eax]
 004EC2BD    call        dword ptr [edx+0D8]
 004EC2C3    inc         edi
 004EC2C4    dec         ebx
>004EC2C5    jne         004EC2AE
 004EC2C7    mov         eax,dword ptr [esi+278];TStringGrid.FHandle:HWND
 004EC2CD    mov         dword ptr [esp],eax
 004EC2D0    test        byte ptr [esi+65],20;TStringGrid.FAlign:TAlign
 004EC2D4    setne       dl
 004EC2D7    mov         byte ptr [esp+4],dl
 004EC2DB    mov         edx,esp
 004EC2DD    push        edx
 004EC2DE    push        4EC244
 004EC2E3    push        eax
 004EC2E4    call        user32.EnumChildWindows
 004EC2E9    mov         eax,esi
 004EC2EB    mov         edx,dword ptr [eax]
 004EC2ED    call        dword ptr [edx+0E0];TStringGrid.sub_004EC00C
 004EC2F3    pop         ecx
 004EC2F4    pop         edx
 004EC2F5    pop         edi
 004EC2F6    pop         esi
 004EC2F7    pop         ebx
 004EC2F8    ret
*}
end;

//004EC2FC
procedure TWinControl.RecreateWnd;
begin
{*
 004EC2FC    cmp         dword ptr [eax+278],0
>004EC303    je          004EC313
 004EC305    push        0
 004EC307    xor         ecx,ecx
 004EC309    mov         edx,0B033
 004EC30E    call        TControl.Perform
 004EC313    ret
*}
end;

//004EC314
procedure TWinControl.CMRecreateWnd;
begin
{*
 004EC314    push        ebp
 004EC315    mov         ebp,esp
 004EC317    add         esp,0FFFFFFF8
 004EC31A    push        esi
 004EC31B    mov         dword ptr [ebp-4],eax
 004EC31E    mov         eax,dword ptr [ebp-4]
 004EC321    mov         si,0FFB1
 004EC325    call        @CallDynaInst;TWinControl.sub_004EFDB8
 004EC32A    mov         byte ptr [ebp-5],al
 004EC32D    mov         dl,1
 004EC32F    mov         eax,dword ptr [ebp-4]
 004EC332    call        004F2104
 004EC337    xor         eax,eax
 004EC339    push        ebp
 004EC33A    push        4EC370
 004EC33F    push        dword ptr fs:[eax]
 004EC342    mov         dword ptr fs:[eax],esp
 004EC345    mov         eax,dword ptr [ebp-4]
 004EC348    mov         edx,dword ptr [eax]
 004EC34A    call        dword ptr [edx+0D8];TWinControl.sub_004EC288
 004EC350    mov         eax,dword ptr [ebp-4]
 004EC353    call        TWinControl.UpdateControlState
 004EC358    xor         eax,eax
 004EC35A    pop         edx
 004EC35B    pop         ecx
 004EC35C    pop         ecx
 004EC35D    mov         dword ptr fs:[eax],edx
 004EC360    push        4EC377
 004EC365    xor         edx,edx
 004EC367    mov         eax,dword ptr [ebp-4]
 004EC36A    call        004F2104
 004EC36F    ret
>004EC370    jmp         @HandleFinally
>004EC375    jmp         004EC365
 004EC377    cmp         byte ptr [ebp-5],0
>004EC37B    je          004EC398
 004EC37D    mov         eax,dword ptr [ebp-4]
 004EC380    cmp         dword ptr [eax+278],0;TWinControl.FHandle:HWND
>004EC387    je          004EC398
 004EC389    mov         eax,dword ptr [ebp-4]
 004EC38C    mov         eax,dword ptr [eax+278];TWinControl.FHandle:HWND
 004EC392    push        eax
 004EC393    call        user32.SetFocus
 004EC398    pop         esi
 004EC399    pop         ecx
 004EC39A    pop         ecx
 004EC39B    pop         ebp
 004EC39C    ret
*}
end;

//004EC3A0
procedure sub_004EC3A0(?:Pointer);
begin
{*
 004EC3A0    push        ebp
 004EC3A1    mov         ebp,esp
 004EC3A3    add         esp,0FFFFFFF8
 004EC3A6    push        ebx
 004EC3A7    push        esi
 004EC3A8    push        edi
 004EC3A9    mov         dword ptr [ebp-4],eax
 004EC3AC    mov         eax,dword ptr [ebp-4]
 004EC3AF    cmp         byte ptr [eax+69],0
>004EC3B3    je          004EC3C7
 004EC3B5    mov         eax,dword ptr [ebp-4]
 004EC3B8    test        byte ptr [eax+1C],10
>004EC3BC    je          004EC3E2
 004EC3BE    mov         eax,dword ptr [ebp-4]
 004EC3C1    test        byte ptr [eax+65],8
>004EC3C5    je          004EC3E2
 004EC3C7    mov         eax,dword ptr [ebp-4]
 004EC3CA    test        byte ptr [eax+1C],10
>004EC3CE    je          004EC3F4
 004EC3D0    mov         eax,dword ptr [ebp-4]
 004EC3D3    test        byte ptr [eax+65],8
>004EC3D7    jne         004EC3F4
 004EC3D9    mov         eax,dword ptr [ebp-4]
 004EC3DC    test        byte ptr [eax+61],4
>004EC3E0    jne         004EC3F4
 004EC3E2    mov         eax,dword ptr [ebp-4]
 004EC3E5    test        byte ptr [eax+64],8
>004EC3E9    jne         004EC3F4
 004EC3EB    mov         eax,dword ptr [ebp-4]
 004EC3EE    test        byte ptr [eax+1C],8
>004EC3F2    je          004EC3F8
 004EC3F4    xor         eax,eax
>004EC3F6    jmp         004EC3FA
 004EC3F8    mov         al,1
 004EC3FA    mov         byte ptr [ebp-5],al
 004EC3FD    cmp         byte ptr [ebp-5],0
>004EC401    je          004EC44B
 004EC403    mov         eax,dword ptr [ebp-4]
 004EC406    cmp         dword ptr [eax+278],0
>004EC40D    jne         004EC41A
 004EC40F    mov         eax,dword ptr [ebp-4]
 004EC412    mov         edx,dword ptr [eax]
 004EC414    call        dword ptr [edx+0C0]
 004EC41A    mov         eax,dword ptr [ebp-4]
 004EC41D    mov         eax,dword ptr [eax+1F4]
 004EC423    test        eax,eax
>004EC425    je          004EC44B
 004EC427    mov         ebx,dword ptr [eax+8]
 004EC42A    dec         ebx
 004EC42B    test        ebx,ebx
>004EC42D    jl          004EC44B
 004EC42F    inc         ebx
 004EC430    xor         esi,esi
 004EC432    mov         eax,dword ptr [ebp-4]
 004EC435    mov         eax,dword ptr [eax+1F4]
 004EC43B    mov         edx,esi
 004EC43D    call        TList.Get
 004EC442    call        004EC3A0
 004EC447    inc         esi
 004EC448    dec         ebx
>004EC449    jne         004EC432
 004EC44B    mov         eax,dword ptr [ebp-4]
 004EC44E    cmp         dword ptr [eax+278],0
>004EC455    je          004EC4F9
 004EC45B    mov         eax,dword ptr [ebp-4]
 004EC45E    movzx       eax,byte ptr [eax+205]
 004EC465    cmp         al,byte ptr [ebp-5]
>004EC468    je          004EC4F9
 004EC46E    mov         eax,dword ptr [ebp-4]
 004EC471    movzx       edx,byte ptr [ebp-5]
 004EC475    mov         byte ptr [eax+205],dl
 004EC47B    xor         eax,eax
 004EC47D    push        ebp
 004EC47E    push        4EC4DB
 004EC483    push        dword ptr fs:[eax]
 004EC486    mov         dword ptr fs:[eax],esp
 004EC489    mov         eax,dword ptr [ebp-4]
 004EC48C    mov         byte ptr [eax+20A],1
 004EC493    xor         eax,eax
 004EC495    push        ebp
 004EC496    push        4EC4CA
 004EC49B    push        dword ptr fs:[eax]
 004EC49E    mov         dword ptr fs:[eax],esp
 004EC4A1    push        0
 004EC4A3    xor         ecx,ecx
 004EC4A5    mov         edx,0B019
 004EC4AA    mov         eax,dword ptr [ebp-4]
 004EC4AD    call        TControl.Perform
 004EC4B2    xor         eax,eax
 004EC4B4    pop         edx
 004EC4B5    pop         ecx
 004EC4B6    pop         ecx
 004EC4B7    mov         dword ptr fs:[eax],edx
 004EC4BA    push        4EC4D1
 004EC4BF    mov         eax,dword ptr [ebp-4]
 004EC4C2    mov         byte ptr [eax+20A],0
 004EC4C9    ret
>004EC4CA    jmp         @HandleFinally
>004EC4CF    jmp         004EC4BF
 004EC4D1    xor         eax,eax
 004EC4D3    pop         edx
 004EC4D4    pop         ecx
 004EC4D5    pop         ecx
 004EC4D6    mov         dword ptr fs:[eax],edx
>004EC4D9    jmp         004EC4F9
>004EC4DB    jmp         @HandleAnyException
 004EC4E0    movzx       eax,byte ptr [ebp-5]
 004EC4E4    xor         al,1
 004EC4E6    mov         edx,dword ptr [ebp-4]
 004EC4E9    mov         byte ptr [edx+205],al
 004EC4EF    call        @RaiseAgain
 004EC4F4    call        @DoneExcept
 004EC4F9    pop         edi
 004EC4FA    pop         esi
 004EC4FB    pop         ebx
 004EC4FC    pop         ecx
 004EC4FD    pop         ecx
 004EC4FE    pop         ebp
 004EC4FF    ret
*}
end;

//004EC500
procedure TWinControl.UpdateControlState;
begin
{*
 004EC500    push        ebp
 004EC501    mov         ebp,esp
 004EC503    push        ecx
 004EC504    push        ebx
 004EC505    push        esi
 004EC506    mov         dword ptr [ebp-4],eax
 004EC509    mov         ebx,dword ptr [ebp-4]
>004EC50C    jmp         004EC58B
 004EC50E    mov         ebx,esi
 004EC510    cmp         byte ptr [ebx+205],0
>004EC517    jne         004EC58B
 004EC519    mov         eax,dword ptr [ebp-4]
 004EC51C    cmp         byte ptr [eax+205],0;TWinControl.FShowing:Boolean
>004EC523    je          004EC5C1
 004EC529    mov         eax,dword ptr [ebp-4]
 004EC52C    cmp         byte ptr [eax+20A],0;TWinControl.FPerformingShowingChanged:Boolean
>004EC533    jne         004EC5C1
 004EC539    mov         eax,dword ptr [ebp-4]
 004EC53C    mov         byte ptr [eax+20A],1;TWinControl.FPerformingShowingChanged:Boolean
 004EC543    xor         eax,eax
 004EC545    push        ebp
 004EC546    push        4EC584
 004EC54B    push        dword ptr fs:[eax]
 004EC54E    mov         dword ptr fs:[eax],esp
 004EC551    mov         eax,dword ptr [ebp-4]
 004EC554    mov         byte ptr [eax+205],0;TWinControl.FShowing:Boolean
 004EC55B    push        0
 004EC55D    xor         ecx,ecx
 004EC55F    mov         edx,0B019
 004EC564    mov         eax,dword ptr [ebp-4]
 004EC567    call        TControl.Perform
 004EC56C    xor         eax,eax
 004EC56E    pop         edx
 004EC56F    pop         ecx
 004EC570    pop         ecx
 004EC571    mov         dword ptr fs:[eax],edx
 004EC574    push        4EC5C1
 004EC579    mov         eax,dword ptr [ebp-4]
 004EC57C    mov         byte ptr [eax+20A],0;TWinControl.FPerformingShowingChanged:Boolean
 004EC583    ret
>004EC584    jmp         @HandleFinally
>004EC589    jmp         004EC579
 004EC58B    mov         esi,dword ptr [ebx+40]
 004EC58E    test        esi,esi
>004EC590    jne         004EC50E
 004EC596    mov         eax,ebx
 004EC598    mov         edx,dword ptr ds:[5B7120];TCustomForm
 004EC59E    call        @IsClass
 004EC5A3    test        al,al
>004EC5A5    jne         004EC5B9
 004EC5A7    mov         eax,dword ptr [ebp-4]
 004EC5AA    test        byte ptr [eax+1C],8;TWinControl.FComponentState:TComponentState
>004EC5AE    jne         004EC5C1
 004EC5B0    cmp         dword ptr [ebx+1E4],0
>004EC5B7    je          004EC5C1
 004EC5B9    mov         eax,dword ptr [ebp-4]
 004EC5BC    call        004EC3A0
 004EC5C1    pop         esi
 004EC5C2    pop         ebx
 004EC5C3    pop         ecx
 004EC5C4    pop         ebp
 004EC5C5    ret
*}
end;

//004EC5C8
procedure TGroupBox.SetParentDoubleBuffered(Value:Boolean);
begin
{*
 004EC5C8    cmp         dl,byte ptr [eax+209];TGroupBox.FParentDoubleBuffered:Boolean
>004EC5CE    je          004EC5F0
 004EC5D0    mov         byte ptr [eax+209],dl;TGroupBox.FParentDoubleBuffered:Boolean
 004EC5D6    cmp         dword ptr [eax+40],0;TGroupBox.FParent:TWinControl
>004EC5DA    je          004EC5F0
 004EC5DC    test        byte ptr [eax+1C],2;TGroupBox.FComponentState:TComponentState
>004EC5E0    jne         004EC5F0
 004EC5E2    push        0
 004EC5E4    xor         ecx,ecx
 004EC5E6    mov         edx,0B050
 004EC5EB    call        TControl.Perform
 004EC5F0    ret
*}
end;

//004EC5F4
procedure sub_004EC5F4(?:THintWindow; ?:HWND);
begin
{*
 004EC5F4    push        ebp
 004EC5F5    mov         ebp,esp
 004EC5F7    push        ecx
 004EC5F8    push        ebx
 004EC5F9    mov         ebx,edx
 004EC5FB    mov         dword ptr [ebp-4],eax
 004EC5FE    mov         eax,dword ptr [ebp-4]
 004EC601    cmp         dword ptr [eax+40],0
>004EC605    jne         004EC6D4
 004EC60B    mov         eax,dword ptr [ebp-4]
 004EC60E    cmp         ebx,dword ptr [eax+1E4]
>004EC614    je          004EC6D4
 004EC61A    mov         eax,dword ptr [ebp-4]
 004EC61D    cmp         dword ptr [eax+278],0
>004EC624    je          004EC681
 004EC626    mov         eax,dword ptr [ebp-4]
 004EC629    cmp         dword ptr [eax+1E4],0
>004EC630    je          004EC681
 004EC632    test        ebx,ebx
>004EC634    je          004EC681
 004EC636    mov         eax,dword ptr [ebp-4]
 004EC639    mov         dword ptr [eax+1E4],ebx
 004EC63F    push        ebx
 004EC640    mov         eax,dword ptr [ebp-4]
 004EC643    mov         eax,dword ptr [eax+278]
 004EC649    push        eax
 004EC64A    call        user32.SetParent
 004EC64F    mov         eax,[007C4590];^gvar_0079EDE0
 004EC654    cmp         dword ptr [eax],5
>004EC657    jl          004EC677
 004EC659    mov         eax,[007C4EC4];^gvar_0079EDDC
 004EC65E    cmp         dword ptr [eax],2
>004EC661    jne         004EC677
 004EC663    push        0
 004EC665    mov         ecx,30003
 004EC66A    mov         edx,127
 004EC66F    mov         eax,dword ptr [ebp-4]
 004EC672    call        TControl.Perform
 004EC677    mov         eax,dword ptr [ebp-4]
 004EC67A    call        TWinControl.UpdateControlState
>004EC67F    jmp         004EC6D4
 004EC681    mov         dl,1
 004EC683    mov         eax,dword ptr [ebp-4]
 004EC686    call        004F2104
 004EC68B    xor         eax,eax
 004EC68D    push        ebp
 004EC68E    push        4EC6CD
 004EC693    push        dword ptr fs:[eax]
 004EC696    mov         dword ptr fs:[eax],esp
 004EC699    mov         eax,dword ptr [ebp-4]
 004EC69C    mov         edx,dword ptr [eax]
 004EC69E    call        dword ptr [edx+0D8]
 004EC6A4    mov         eax,dword ptr [ebp-4]
 004EC6A7    mov         dword ptr [eax+1E4],ebx
 004EC6AD    mov         eax,dword ptr [ebp-4]
 004EC6B0    call        TWinControl.UpdateControlState
 004EC6B5    xor         eax,eax
 004EC6B7    pop         edx
 004EC6B8    pop         ecx
 004EC6B9    pop         ecx
 004EC6BA    mov         dword ptr fs:[eax],edx
 004EC6BD    push        4EC6D4
 004EC6C2    xor         edx,edx
 004EC6C4    mov         eax,dword ptr [ebp-4]
 004EC6C7    call        004F2104
 004EC6CC    ret
>004EC6CD    jmp         @HandleFinally
>004EC6D2    jmp         004EC6C2
 004EC6D4    pop         ebx
 004EC6D5    pop         ecx
 004EC6D6    pop         ebp
 004EC6D7    ret
*}
end;

//004EC750
{*function sub_004EC750(?:?; ?:?):?;
begin
 004EC750    push        ebp
 004EC751    mov         ebp,esp
 004EC753    add         esp,0FFFFFFE0
 004EC756    push        ebx
 004EC757    mov         ebx,eax
 004EC759    mov         eax,dword ptr [ebp+8]
 004EC75C    mov         eax,dword ptr [eax-0C]
 004EC75F    mov         eax,dword ptr [eax]
 004EC761    sub         eax,dword ptr [ebx+50]
 004EC764    mov         edx,dword ptr [ebp+8]
 004EC767    mov         edx,dword ptr [edx-0C]
 004EC76A    mov         edx,dword ptr [edx+4]
 004EC76D    sub         edx,dword ptr [ebx+54]
 004EC770    mov         dword ptr [ebp-8],eax
 004EC773    mov         dword ptr [ebp-4],edx
 004EC776    mov         eax,dword ptr [ebp+8]
 004EC779    mov         edx,dword ptr [ebp-8]
 004EC77C    mov         dword ptr [eax-8],edx
 004EC77F    mov         edx,dword ptr [ebp-4]
 004EC782    mov         dword ptr [eax-4],edx
 004EC785    lea         edx,[ebp-20]
 004EC788    mov         eax,ebx
 004EC78A    mov         ecx,dword ptr [eax]
 004EC78C    call        dword ptr [ecx+64]
 004EC78F    lea         eax,[ebp-20]
 004EC792    mov         edx,dword ptr [ebp+8]
 004EC795    add         edx,0FFFFFFF8
 004EC798    call        TRect.Contains
 004EC79D    test        al,al
>004EC79F    je          004EC80A
 004EC7A1    test        byte ptr [ebx+1C],10
>004EC7A5    je          004EC7B7
 004EC7A7    cmp         byte ptr [ebx+69],0
>004EC7AB    jne         004EC7B3
 004EC7AD    test        byte ptr [ebx+61],4
>004EC7B1    jne         004EC7B7
 004EC7B3    mov         al,1
>004EC7B5    jmp         004EC80C
 004EC7B7    cmp         byte ptr [ebx+69],0
>004EC7BB    je          004EC806
 004EC7BD    mov         eax,ebx
 004EC7BF    mov         edx,dword ptr [eax]
 004EC7C1    call        dword ptr [edx+6C]
 004EC7C4    test        al,al
>004EC7C6    jne         004EC7D1
 004EC7C8    mov         eax,dword ptr [ebp+8]
 004EC7CB    cmp         byte ptr [eax-0D],0
>004EC7CF    je          004EC806
 004EC7D1    mov         eax,dword ptr [ebp+8]
 004EC7D4    mov         edx,dword ptr [eax-8]
 004EC7D7    mov         dword ptr [ebp-10],edx
 004EC7DA    mov         edx,dword ptr [eax-4]
 004EC7DD    mov         dword ptr [ebp-0C],edx
 004EC7E0    mov         eax,dword ptr [ebp-10]
 004EC7E3    and         eax,0FFFF
 004EC7E8    mov         edx,dword ptr [ebp-0C]
 004EC7EB    shl         edx,10
 004EC7EE    or          eax,edx
 004EC7F0    push        eax
 004EC7F1    xor         ecx,ecx
 004EC7F3    mov         edx,0B00A
 004EC7F8    mov         eax,ebx
 004EC7FA    call        TControl.Perform
 004EC7FF    test        eax,eax
 004EC801    setne       al
>004EC804    jmp         004EC80C
 004EC806    xor         eax,eax
>004EC808    jmp         004EC80C
 004EC80A    xor         eax,eax
 004EC80C    test        al,al
>004EC80E    je          004EC816
 004EC810    mov         edx,dword ptr [ebp+8]
 004EC813    mov         dword ptr [edx-14],ebx
 004EC816    pop         ebx
 004EC817    mov         esp,ebp
 004EC819    pop         ebp
 004EC81A    ret
end;*}

//004EC81C
function TWinControl.ControlAtPos(Pos:TPoint; AllowDisabled:Boolean; AllLevels:Boolean; AllowWinControls:Boolean):TControl;
begin
{*
 004EC81C    push        ebp
 004EC81D    mov         ebp,esp
 004EC81F    add         esp,0FFFFFFEC
 004EC822    push        ebx
 004EC823    push        esi
 004EC824    push        edi
 004EC825    mov         byte ptr [ebp-0D],cl
 004EC828    mov         dword ptr [ebp-0C],edx
 004EC82B    mov         esi,eax
 004EC82D    mov         ebx,dword ptr [ebp+8]
 004EC830    xor         eax,eax
 004EC832    mov         dword ptr [ebp-14],eax
 004EC835    cmp         byte ptr [ebp+0C],0
>004EC839    je          004EC89B
 004EC83B    cmp         dword ptr [esi+1F4],0
>004EC842    je          004EC89B
 004EC844    mov         eax,dword ptr [esi+1F4]
 004EC84A    mov         edi,dword ptr [eax+8]
 004EC84D    dec         edi
 004EC84E    cmp         edi,0
>004EC851    jl          004EC89B
 004EC853    test        bl,bl
>004EC855    je          004EC877
 004EC857    push        1
 004EC859    push        1
 004EC85B    mov         edx,edi
 004EC85D    mov         eax,dword ptr [esi+1F4]
 004EC863    call        TList.Get
 004EC868    mov         edx,dword ptr [ebp-0C]
 004EC86B    movzx       ecx,byte ptr [ebp-0D]
 004EC86F    call        TWinControl.ControlAtPos
 004EC874    mov         dword ptr [ebp-14],eax
 004EC877    cmp         dword ptr [ebp-14],0
>004EC87B    jne         004EC895
 004EC87D    push        ebp
 004EC87E    mov         edx,edi
 004EC880    mov         eax,dword ptr [esi+1F4]
 004EC886    call        TList.Get
 004EC88B    call        004EC750
 004EC890    pop         ecx
 004EC891    test        al,al
>004EC893    jne         004EC89B
 004EC895    dec         edi
 004EC896    cmp         edi,0FFFFFFFF
>004EC899    jne         004EC853
 004EC89B    mov         eax,dword ptr [esi+1F0]
 004EC8A1    test        eax,eax
>004EC8A3    je          004EC8D2
 004EC8A5    cmp         dword ptr [ebp-14],0
>004EC8A9    jne         004EC8D2
 004EC8AB    mov         edi,dword ptr [eax+8]
 004EC8AE    dec         edi
 004EC8AF    cmp         edi,0
>004EC8B2    jl          004EC8D2
 004EC8B4    push        ebp
 004EC8B5    mov         edx,edi
 004EC8B7    mov         eax,dword ptr [esi+1F0]
 004EC8BD    call        TList.Get
 004EC8C2    call        004EC750
 004EC8C7    pop         ecx
 004EC8C8    test        al,al
>004EC8CA    jne         004EC8D2
 004EC8CC    dec         edi
 004EC8CD    cmp         edi,0FFFFFFFF
>004EC8D0    jne         004EC8B4
 004EC8D2    mov         eax,dword ptr [ebp-14]
 004EC8D5    pop         edi
 004EC8D6    pop         esi
 004EC8D7    pop         ebx
 004EC8D8    mov         esp,ebp
 004EC8DA    pop         ebp
 004EC8DB    ret         8
*}
end;

//004EC8E0
function TWinControl.IsControlMouseMsg(var Message:Messages.TWMMouse):Boolean;
begin
{*
 004EC8E0    push        ebx
 004EC8E1    push        esi
 004EC8E2    push        edi
 004EC8E3    add         esp,0FFFFFFE4
 004EC8E6    mov         esi,edx
 004EC8E8    mov         ebx,eax
 004EC8EA    mov         eax,ebx
 004EC8EC    call        TWinControl.GetHandle
 004EC8F1    mov         edi,eax
 004EC8F3    call        user32.GetCapture
 004EC8F8    cmp         edi,eax
>004EC8FA    jne         004EC91B
 004EC8FC    cmp         dword ptr ds:[7A11B4],0;gvar_007A11B4:TControl
>004EC903    je          004EC917
 004EC905    mov         eax,[007A11B4];gvar_007A11B4:TControl
 004EC90A    cmp         ebx,dword ptr [eax+40]
>004EC90D    jne         004EC917
 004EC90F    mov         ebx,dword ptr ds:[7A11B4];gvar_007A11B4:TControl
>004EC915    jmp         004EC94C
 004EC917    xor         ebx,ebx
>004EC919    jmp         004EC94C
 004EC91B    lea         eax,[esi+8]
 004EC91E    mov         dword ptr [esp+8],eax
 004EC922    mov         eax,dword ptr [esp+8]
 004EC926    movsx       eax,word ptr [eax]
 004EC929    mov         dword ptr [esp+0C],eax
 004EC92D    mov         eax,dword ptr [esp+8]
 004EC931    movsx       eax,word ptr [eax+2]
 004EC935    mov         dword ptr [esp+10],eax
 004EC939    push        0
 004EC93B    push        0
 004EC93D    lea         edx,[esp+14]
 004EC941    xor         ecx,ecx
 004EC943    mov         eax,ebx
 004EC945    call        TWinControl.ControlAtPos
 004EC94A    mov         ebx,eax
 004EC94C    xor         eax,eax
 004EC94E    test        ebx,ebx
>004EC950    je          004EC99A
 004EC952    movsx       eax,word ptr [esi+8]
 004EC956    sub         eax,dword ptr [ebx+50]
 004EC959    mov         dword ptr [esp],eax
 004EC95C    movsx       eax,word ptr [esi+0A]
 004EC960    sub         eax,dword ptr [ebx+54]
 004EC963    mov         dword ptr [esp+4],eax
 004EC967    mov         eax,dword ptr [esp]
 004EC96A    mov         dword ptr [esp+14],eax
 004EC96E    mov         eax,dword ptr [esp+4]
 004EC972    mov         dword ptr [esp+18],eax
 004EC976    mov         eax,dword ptr [esp+14]
 004EC97A    and         eax,0FFFF
 004EC97F    mov         edx,dword ptr [esp+18]
 004EC983    shl         edx,10
 004EC986    or          eax,edx
 004EC988    push        eax
 004EC989    mov         ecx,dword ptr [esi+4]
 004EC98C    mov         edx,dword ptr [esi]
 004EC98E    mov         eax,ebx
 004EC990    call        TControl.Perform
 004EC995    mov         dword ptr [esi+0C],eax
 004EC998    mov         al,1
 004EC99A    add         esp,1C
 004EC99D    pop         edi
 004EC99E    pop         esi
 004EC99F    pop         ebx
 004EC9A0    ret
*}
end;

//004EC9A4
function TWinControl.IsControlActivateMsg(var Message:Messages.TWMMouseActivate; Control:TControl):Boolean;
begin
{*
 004EC9A4    push        ebx
 004EC9A5    push        esi
 004EC9A6    push        edi
 004EC9A7    add         esp,0FFFFFED8
 004EC9AD    mov         ebx,ecx
 004EC9AF    mov         edi,edx
 004EC9B1    mov         esi,eax
 004EC9B3    call        user32.GetMessagePos
 004EC9B8    call        SmallPoint
 004EC9BD    mov         dword ptr [esp+8],eax
 004EC9C1    movsx       eax,word ptr [esp+8]
 004EC9C6    mov         dword ptr [esp+0C],eax
 004EC9CA    movsx       eax,word ptr [esp+0A]
 004EC9CF    mov         dword ptr [esp+10],eax
 004EC9D3    mov         ecx,esp
 004EC9D5    lea         edx,[esp+0C]
 004EC9D9    mov         eax,esi
 004EC9DB    call        TControl.ScreenToClient
 004EC9E0    test        ebx,ebx
>004EC9E2    jne         004EC9F7
 004EC9E4    push        0
 004EC9E6    push        0
 004EC9E8    lea         edx,[esp+8]
 004EC9EC    xor         ecx,ecx
 004EC9EE    mov         eax,esi
 004EC9F0    call        TWinControl.ControlAtPos
 004EC9F5    mov         ebx,eax
 004EC9F7    test        ebx,ebx
>004EC9F9    je          004ECAED
 004EC9FF    cmp         esi,ebx
>004ECA01    je          004ECA20
 004ECA03    mov         eax,dword ptr [esp]
 004ECA06    sub         eax,dword ptr [ebx+50]
 004ECA09    mov         dword ptr [esp+114],eax
 004ECA10    mov         eax,dword ptr [esp+4]
 004ECA14    sub         eax,dword ptr [ebx+54]
 004ECA17    mov         dword ptr [esp+118],eax
>004ECA1E    jmp         004ECA35
 004ECA20    mov         eax,dword ptr [esp]
 004ECA23    mov         dword ptr [esp+114],eax
 004ECA2A    mov         eax,dword ptr [esp+4]
 004ECA2E    mov         dword ptr [esp+118],eax
 004ECA35    movzx       eax,word ptr [edi+8]
 004ECA39    mov         dword ptr [esp+11C],eax
 004ECA40    mov         eax,dword ptr [edi+4]
 004ECA43    mov         dword ptr [esp+124],eax
 004ECA4A    movzx       eax,word ptr [edi+0A]
 004ECA4E    cmp         eax,201
>004ECA53    jge         004ECA6D
 004ECA55    add         eax,0FFFFFF5F
 004ECA5A    sub         eax,2
>004ECA5D    jb          004ECA85
 004ECA5F    dec         eax
 004ECA60    sub         eax,2
>004ECA63    jb          004ECA99
 004ECA65    dec         eax
 004ECA66    sub         eax,2
>004ECA69    jb          004ECA8F
>004ECA6B    jmp         004ECAA3
 004ECA6D    add         eax,0FFFFFDFF
 004ECA72    sub         eax,2
>004ECA75    jb          004ECA85
 004ECA77    dec         eax
 004ECA78    sub         eax,2
>004ECA7B    jb          004ECA99
 004ECA7D    dec         eax
 004ECA7E    sub         eax,2
>004ECA81    jb          004ECA8F
>004ECA83    jmp         004ECAA3
 004ECA85    mov         byte ptr [esp+120],0
>004ECA8D    jmp         004ECAAB
 004ECA8F    mov         byte ptr [esp+120],2
>004ECA97    jmp         004ECAAB
 004ECA99    mov         byte ptr [esp+120],1
>004ECAA1    jmp         004ECAAB
 004ECAA3    mov         byte ptr [esp+120],0
 004ECAAB    lea         eax,[esp+14]
 004ECAAF    push        eax
 004ECAB0    call        user32.GetKeyboardState
 004ECAB5    lea         eax,[esp+14]
 004ECAB9    call        KeyboardStateToShiftState
 004ECABE    mov         esi,eax
 004ECAC0    call        MouseOriginToShiftState
 004ECAC5    or          si,ax
 004ECAC8    mov         word ptr [esp+121],si
 004ECAD0    lea         eax,[esp+114]
 004ECAD7    push        eax
 004ECAD8    xor         ecx,ecx
 004ECADA    mov         edx,0B04B
 004ECADF    mov         eax,ebx
 004ECAE1    call        TControl.Perform
 004ECAE6    mov         dword ptr [edi+0C],eax
 004ECAE9    mov         al,1
>004ECAEB    jmp         004ECAEF
 004ECAED    xor         eax,eax
 004ECAEF    add         esp,128
 004ECAF5    pop         edi
 004ECAF6    pop         esi
 004ECAF7    pop         ebx
 004ECAF8    ret
*}
end;

//004ECAFC
{*procedure sub_004ECAFC(?:?);
begin
 004ECAFC    push        ebp
 004ECAFD    mov         ebp,esp
 004ECAFF    add         esp,0FFFFFFC4
 004ECB02    push        ebx
 004ECB03    push        esi
 004ECB04    mov         dword ptr [ebp-8],edx
 004ECB07    mov         dword ptr [ebp-4],eax
 004ECB0A    mov         eax,dword ptr [ebp-4]
 004ECB0D    cmp         dword ptr [eax+278],0;TWinControl.FHandle:HWND
>004ECB14    je          004ECB64
 004ECB16    mov         eax,[007C4A7C];^gvar_007CA74C
 004ECB1B    test        byte ptr [eax],1
>004ECB1E    je          004ECB64
 004ECB20    mov         eax,dword ptr [ebp-4]
 004ECB23    test        byte ptr [eax+1C],8;TWinControl.FComponentState:TComponentState
>004ECB27    jne         004ECB64
 004ECB29    mov         eax,dword ptr [ebp-4]
 004ECB2C    test        byte ptr [eax+65],2;TWinControl.FAlign:TAlign
>004ECB30    jne         004ECB64
 004ECB32    mov         eax,dword ptr [ebp-4]
 004ECB35    test        byte ptr [eax+62],80;TWinControl.FEnabled:Boolean
>004ECB39    jne         004ECB64
 004ECB3B    mov         eax,dword ptr [ebp-4]
 004ECB3E    movzx       edx,byte ptr ds:[4ED108];0x0 gvar_004ED108
 004ECB45    cmp         dl,byte ptr [eax+188];TWinControl.FStyleElements:TStyleElements
>004ECB4B    je          004ECB64
 004ECB4D    mov         edx,dword ptr [ebp-8]
 004ECB50    mov         eax,dword ptr [ebp-4]
 004ECB53    mov         si,0FFBD
 004ECB57    call        @CallDynaInst;TWinControl.sub_004EB450
 004ECB5C    test        al,al
>004ECB5E    jne         004ED100
 004ECB64    mov         eax,dword ptr [ebp-8]
 004ECB67    mov         eax,dword ptr [eax]
 004ECB69    cmp         eax,200
>004ECB6E    jge         004ECBB5
 004ECB70    cmp         eax,21
>004ECB73    jg          004ECB99
>004ECB75    je          004ECF97
 004ECB7B    sub         eax,7
>004ECB7E    je          004ECC9E
 004ECB84    dec         eax
>004ECB85    je          004ECCDC
 004ECB8B    sub         eax,17
>004ECB8E    je          004ECFEE
>004ECB94    jmp         004ED0C4
 004ECB99    sub         eax,84
>004ECB9E    je          004ECCEE
 004ECBA4    add         eax,0FFFFFF84
 004ECBA7    sub         eax,0A
>004ECBAA    jb          004ECFD9
>004ECBB0    jmp         004ED0C4
 004ECBB5    cmp         eax,0B047
>004ECBBA    jg          004ECBE7
>004ECBBC    je          004ECC63
 004ECBC2    add         eax,0FFFFFE00
 004ECBC7    sub         eax,0F
>004ECBCA    jb          004ECDA0
 004ECBD0    sub         eax,31
>004ECBD3    je          004ED09E
 004ECBD9    sub         eax,63
>004ECBDC    je          004ECD58
>004ECBE2    jmp         004ED0C4
 004ECBE7    sub         eax,0B04A
>004ECBEC    je          004ED03B
 004ECBF2    sub         eax,4
>004ECBF5    je          004ECC05
 004ECBF7    sub         eax,3
>004ECBFA    je          004ED091
>004ECC00    jmp         004ED0C4
 004ECC05    mov         eax,dword ptr [ebp-4]
 004ECC08    test        byte ptr [eax+1C],10;TWinControl.FComponentState:TComponentState
>004ECC0C    je          004ED0C4
 004ECC12    call        TStyleManager.GetActiveStyle
 004ECC17    mov         ebx,eax
 004ECC19    mov         eax,ebx
 004ECC1B    mov         edx,dword ptr [eax]
 004ECC1D    call        dword ptr [edx+48];@AbstractError
 004ECC20    test        al,al
>004ECC22    je          004ED0C4
 004ECC28    push        4ED10C
 004ECC2D    push        4ED10C
 004ECC32    mov         eax,dword ptr [ebp-4]
 004ECC35    call        TWinControl.GetHandle
 004ECC3A    push        eax
 004ECC3B    mov         eax,[007C4EF0];^gvar_007CA554:Pointer
 004ECC40    mov         eax,dword ptr [eax]
 004ECC42    call        eax
 004ECC44    push        77
 004ECC46    push        0
 004ECC48    push        0
 004ECC4A    push        0
 004ECC4C    push        0
 004ECC4E    push        0
 004ECC50    mov         eax,dword ptr [ebp-4]
 004ECC53    call        TWinControl.GetHandle
 004ECC58    push        eax
 004ECC59    call        user32.SetWindowPos
>004ECC5E    jmp         004ED0C4
 004ECC63    mov         dl,1
 004ECC65    mov         eax,dword ptr [ebp-4]
 004ECC68    call        GetParentForm
 004ECC6D    mov         ebx,eax
 004ECC6F    test        ebx,ebx
>004ECC71    je          004ED0C4
 004ECC77    cmp         ebx,dword ptr [ebp-4]
>004ECC7A    je          004ED0C4
 004ECC80    mov         eax,dword ptr [ebp-8]
 004ECC83    mov         eax,dword ptr [eax+8]
 004ECC86    push        eax
 004ECC87    mov         ecx,dword ptr [ebp-8]
 004ECC8A    mov         ecx,dword ptr [ecx+4]
 004ECC8D    mov         edx,0B047
 004ECC92    mov         eax,ebx
 004ECC94    call        TControl.Perform
>004ECC99    jmp         004ED0C4
 004ECC9E    mov         dl,1
 004ECCA0    mov         eax,dword ptr [ebp-4]
 004ECCA3    call        GetParentForm
 004ECCA8    mov         ebx,eax
 004ECCAA    test        ebx,ebx
>004ECCAC    je          004ED0C4
 004ECCB2    test        byte ptr [ebx+1C],10;TCustomForm.FComponentState:TComponentState
>004ECCB6    je          004ECCC2
 004ECCB8    cmp         dword ptr [ebx+40],0;TCustomForm.FParent:TWinControl
>004ECCBC    jne         004ED0C4
 004ECCC2    mov         edx,dword ptr [ebp-4]
 004ECCC5    mov         eax,ebx
 004ECCC7    mov         ecx,dword ptr [eax]
 004ECCC9    call        dword ptr [ecx+138];TCustomForm.SetFocusedControl
 004ECCCF    test        al,al
>004ECCD1    je          004ED100
>004ECCD7    jmp         004ED0C4
 004ECCDC    mov         eax,dword ptr [ebp-4]
 004ECCDF    test        byte ptr [eax+64],20;TWinControl.FControlState:TControlState
>004ECCE3    jne         004ED100
>004ECCE9    jmp         004ED0C4
 004ECCEE    mov         edx,dword ptr [ebp-8]
 004ECCF1    mov         eax,dword ptr [ebp-4]
 004ECCF4    call        004E841C
 004ECCF9    mov         eax,dword ptr [ebp-8]
 004ECCFC    cmp         dword ptr [eax+0C],0FFFFFFFF
>004ECD00    jne         004ED100
 004ECD06    mov         eax,dword ptr [ebp-8]
 004ECD09    add         eax,8
 004ECD0C    mov         dword ptr [ebp-14],eax
 004ECD0F    mov         eax,dword ptr [ebp-14]
 004ECD12    movsx       eax,word ptr [eax]
 004ECD15    mov         dword ptr [ebp-1C],eax
 004ECD18    mov         eax,dword ptr [ebp-14]
 004ECD1B    movsx       eax,word ptr [eax+2]
 004ECD1F    mov         dword ptr [ebp-18],eax
 004ECD22    push        0
 004ECD24    push        0
 004ECD26    lea         ecx,[ebp-3C]
 004ECD29    lea         edx,[ebp-1C]
 004ECD2C    mov         eax,dword ptr [ebp-4]
 004ECD2F    call        TControl.ScreenToClient
 004ECD34    lea         edx,[ebp-3C]
 004ECD37    xor         ecx,ecx
 004ECD39    mov         eax,dword ptr [ebp-4]
 004ECD3C    call        TWinControl.ControlAtPos
 004ECD41    test        eax,eax
>004ECD43    je          004ED100
 004ECD49    mov         eax,dword ptr [ebp-8]
 004ECD4C    mov         dword ptr [eax+0C],1
>004ECD53    jmp         004ED100
 004ECD58    mov         eax,dword ptr [ebp-4]
 004ECD5B    mov         byte ptr [eax+268],0;TWinControl.FMouseInClient:Boolean
 004ECD62    mov         eax,dword ptr [ebp-4]
 004ECD65    mov         eax,dword ptr [eax+26C];TWinControl.FMouseControl:TControl
 004ECD6B    test        eax,eax
>004ECD6D    je          004ECD7F
 004ECD6F    push        0
 004ECD71    xor         ecx,ecx
 004ECD73    mov         edx,0B014
 004ECD78    call        TControl.Perform
>004ECD7D    jmp         004ECD90
 004ECD7F    push        0
 004ECD81    xor         ecx,ecx
 004ECD83    mov         edx,0B014
 004ECD88    mov         eax,dword ptr [ebp-4]
 004ECD8B    call        TControl.Perform
 004ECD90    mov         eax,dword ptr [ebp-4]
 004ECD93    xor         edx,edx
 004ECD95    mov         dword ptr [eax+26C],edx;TWinControl.FMouseControl:TControl
>004ECD9B    jmp         004ED0C4
 004ECDA0    mov         eax,dword ptr [ebp-4]
 004ECDA3    mov         ebx,dword ptr [eax+0BC];TWinControl.FTouchManager:TTouchManager
 004ECDA9    mov         esi,dword ptr [ebx+8];TTouchManager.FGestureEngine:TCustomGestureEngine
 004ECDAC    test        esi,esi
>004ECDAE    je          004ECDC6
 004ECDB0    mov         eax,esi
 004ECDB2    mov         edx,dword ptr [eax]
 004ECDB4    call        dword ptr [edx+4];@AbstractError
 004ECDB7    test        al,1
>004ECDB9    je          004ECDC6
 004ECDBB    mov         edx,dword ptr [ebp-8]
 004ECDBE    mov         eax,dword ptr [ebx+8];TTouchManager.FGestureEngine:TCustomGestureEngine
 004ECDC1    mov         ecx,dword ptr [eax]
 004ECDC3    call        dword ptr [ecx+10];@AbstractError
 004ECDC6    mov         eax,dword ptr [ebp-8]
 004ECDC9    cmp         dword ptr [eax],200
>004ECDCF    jne         004ECF40
 004ECDD5    mov         eax,dword ptr [ebp-8]
 004ECDD8    movsx       eax,word ptr [eax+8]
 004ECDDC    mov         edx,dword ptr [ebp-8]
 004ECDDF    movsx       edx,word ptr [edx+0A]
 004ECDE3    mov         dword ptr [ebp-24],eax
 004ECDE6    mov         dword ptr [ebp-20],edx
 004ECDE9    lea         ecx,[ebp-10]
 004ECDEC    lea         edx,[ebp-24]
 004ECDEF    mov         eax,dword ptr [ebp-4]
 004ECDF2    call        TControl.ClientToScreen
 004ECDF7    call        GetCaptureControl
 004ECDFC    mov         [007A11B4],eax;gvar_007A11B4:TControl
 004ECE01    cmp         dword ptr ds:[7A11B4],0;gvar_007A11B4:TControl
>004ECE08    jne         004ECE18
 004ECE0A    lea         eax,[ebp-10]
 004ECE0D    mov         dl,1
 004ECE0F    call        FindDragTarget
 004ECE14    mov         ebx,eax
>004ECE16    jmp         004ECE1E
 004ECE18    mov         ebx,dword ptr ds:[7A11B4];0x0 gvar_007A11B4:TControl
 004ECE1E    mov         eax,dword ptr [ebp-4]
 004ECE21    cmp         ebx,dword ptr [eax+26C];TWinControl.FMouseControl:TControl
>004ECE27    je          004ECF01
 004ECE2D    mov         eax,dword ptr [ebp-4]
 004ECE30    cmp         dword ptr [eax+26C],0;TWinControl.FMouseControl:TControl
>004ECE37    je          004ECE42
 004ECE39    cmp         dword ptr ds:[7A11B4],0;gvar_007A11B4:TControl
>004ECE40    je          004ECE78
 004ECE42    cmp         dword ptr ds:[7A11B4],0;gvar_007A11B4:TControl
>004ECE49    je          004ECE5C
 004ECE4B    mov         eax,dword ptr [ebp-4]
 004ECE4E    mov         eax,dword ptr [eax+26C];TWinControl.FMouseControl:TControl
 004ECE54    cmp         eax,dword ptr ds:[7A11B4];0x0 gvar_007A11B4:TControl
>004ECE5A    je          004ECE78
 004ECE5C    cmp         dword ptr ds:[7A11B4],0;gvar_007A11B4:TControl
>004ECE63    je          004ECE8F
 004ECE65    mov         eax,[007A11B4];0x0 gvar_007A11B4:TControl
 004ECE6A    mov         eax,dword ptr [eax+40];TControl.FParent:TWinControl
 004ECE6D    mov         edx,dword ptr [ebp-4]
 004ECE70    cmp         eax,dword ptr [edx+26C];TWinControl.FMouseControl:TControl
>004ECE76    jne         004ECE8F
 004ECE78    push        0
 004ECE7A    mov         eax,dword ptr [ebp-4]
 004ECE7D    mov         eax,dword ptr [eax+26C];TWinControl.FMouseControl:TControl
 004ECE83    xor         ecx,ecx
 004ECE85    mov         edx,0B014
 004ECE8A    call        TControl.Perform
 004ECE8F    mov         eax,dword ptr [ebp-4]
 004ECE92    mov         eax,dword ptr [eax+26C];TWinControl.FMouseControl:TControl
 004ECE98    test        eax,eax
>004ECE9A    je          004ECEA4
 004ECE9C    mov         edx,dword ptr [ebp-4]
 004ECE9F    call        TComponent.RemoveFreeNotification
 004ECEA4    mov         edx,dword ptr [ebp-4]
 004ECEA7    mov         eax,ebx
 004ECEA9    mov         dword ptr [edx+26C],eax;TWinControl.FMouseControl:TControl
 004ECEAF    test        eax,eax
>004ECEB1    je          004ECEBB
 004ECEB3    mov         edx,dword ptr [ebp-4]
 004ECEB6    call        TComponent.FreeNotification
 004ECEBB    mov         eax,dword ptr [ebp-4]
 004ECEBE    cmp         dword ptr [eax+26C],0;TWinControl.FMouseControl:TControl
>004ECEC5    je          004ECED0
 004ECEC7    cmp         dword ptr ds:[7A11B4],0;gvar_007A11B4:TControl
>004ECECE    je          004ECEEA
 004ECED0    cmp         dword ptr ds:[7A11B4],0;gvar_007A11B4:TControl
>004ECED7    je          004ECF01
 004ECED9    mov         eax,dword ptr [ebp-4]
 004ECEDC    mov         eax,dword ptr [eax+26C];TWinControl.FMouseControl:TControl
 004ECEE2    cmp         eax,dword ptr ds:[7A11B4];0x0 gvar_007A11B4:TControl
>004ECEE8    jne         004ECF01
 004ECEEA    push        0
 004ECEEC    mov         eax,dword ptr [ebp-4]
 004ECEEF    mov         eax,dword ptr [eax+26C];TWinControl.FMouseControl:TControl
 004ECEF5    xor         ecx,ecx
 004ECEF7    mov         edx,0B013
 004ECEFC    call        TControl.Perform
 004ECF01    mov         eax,dword ptr [ebp-4]
 004ECF04    cmp         byte ptr [eax+268],0;TWinControl.FMouseInClient:Boolean
>004ECF0B    jne         004ECF40
 004ECF0D    mov         eax,dword ptr [ebp-4]
 004ECF10    mov         byte ptr [eax+268],1;TWinControl.FMouseInClient:Boolean
 004ECF17    mov         dword ptr [ebp-30],2
 004ECF1E    mov         eax,dword ptr [ebp-4]
 004ECF21    call        TWinControl.GetHandle
 004ECF26    mov         dword ptr [ebp-2C],eax
 004ECF29    mov         dword ptr [ebp-28],0FFFFFFFF
 004ECF30    mov         dword ptr [ebp-34],10
 004ECF37    lea         eax,[ebp-34]
 004ECF3A    push        eax
 004ECF3B    call        comctl32._TrackMouseEvent
 004ECF40    mov         edx,dword ptr [ebp-8]
 004ECF43    mov         eax,dword ptr [ebp-4]
 004ECF46    call        TWinControl.IsControlMouseMsg
 004ECF4B    test        al,al
>004ECF4D    je          004ED0C4
 004ECF53    mov         eax,dword ptr [ebp-8]
 004ECF56    cmp         dword ptr [eax+0C],0
>004ECF5A    jne         004ED100
 004ECF60    mov         eax,dword ptr [ebp-4]
 004ECF63    call        TWinControl.HandleAllocated
 004ECF68    test        al,al
>004ECF6A    je          004ED100
 004ECF70    mov         eax,dword ptr [ebp-8]
 004ECF73    mov         eax,dword ptr [eax+8]
 004ECF76    push        eax
 004ECF77    mov         eax,dword ptr [ebp-8]
 004ECF7A    mov         eax,dword ptr [eax+4]
 004ECF7D    push        eax
 004ECF7E    mov         eax,dword ptr [ebp-8]
 004ECF81    mov         eax,dword ptr [eax]
 004ECF83    push        eax
 004ECF84    mov         eax,dword ptr [ebp-4]
 004ECF87    call        TWinControl.GetHandle
 004ECF8C    push        eax
 004ECF8D    call        user32.DefWindowProcW
>004ECF92    jmp         004ED100
 004ECF97    mov         edx,dword ptr [ebp-8]
 004ECF9A    xor         ecx,ecx
 004ECF9C    mov         eax,dword ptr [ebp-4]
 004ECF9F    call        TWinControl.IsControlActivateMsg
 004ECFA4    test        al,al
>004ECFA6    je          004ED0C4
 004ECFAC    mov         eax,dword ptr [ebp-8]
 004ECFAF    cmp         dword ptr [eax+0C],0
>004ECFB3    jne         004ED100
 004ECFB9    mov         eax,dword ptr [ebp-4]
 004ECFBC    call        TWinControl.HandleAllocated
 004ECFC1    test        al,al
>004ECFC3    je          004ED100
 004ECFC9    mov         edx,dword ptr [ebp-8]
 004ECFCC    mov         eax,dword ptr [ebp-4]
 004ECFCF    call        004E841C
>004ECFD4    jmp         004ED100
 004ECFD9    mov         eax,dword ptr [ebp-4]
 004ECFDC    call        TControl.Dragging
 004ECFE1    test        al,al
>004ECFE3    jne         004ED100
>004ECFE9    jmp         004ED0C4
 004ECFEE    mov         eax,dword ptr [ebp-4]
 004ECFF1    call        TWinControl.GetHandle
 004ECFF6    mov         ebx,eax
 004ECFF8    call        user32.GetCapture
 004ECFFD    cmp         ebx,eax
>004ECFFF    jne         004ED0C4
 004ED005    cmp         dword ptr ds:[7A11B4],0;gvar_007A11B4:TControl
>004ED00C    je          004ED0C4
 004ED012    mov         eax,[007A11B4];0x0 gvar_007A11B4:TControl
 004ED017    mov         eax,dword ptr [eax+40];TControl.FParent:TWinControl
 004ED01A    cmp         eax,dword ptr [ebp-4]
>004ED01D    jne         004ED0C4
 004ED023    push        0
 004ED025    xor         ecx,ecx
 004ED027    mov         edx,1F
 004ED02C    mov         eax,[007A11B4];0x0 gvar_007A11B4:TControl
 004ED031    call        TControl.Perform
>004ED036    jmp         004ED0C4
 004ED03B    mov         eax,dword ptr [ebp-8]
 004ED03E    mov         eax,dword ptr [eax+4]
 004ED041    test        al,al
>004ED043    je          004ED04F
 004ED045    mov         dl,1
 004ED047    mov         eax,dword ptr [ebp-4]
 004ED04A    call        004F2104
 004ED04F    xor         eax,eax
 004ED051    push        ebp
 004ED052    push        4ED08A
 004ED057    push        dword ptr fs:[eax]
 004ED05A    mov         dword ptr fs:[eax],esp
 004ED05D    mov         eax,dword ptr [ebp-4]
 004ED060    mov         edx,dword ptr [eax]
 004ED062    call        dword ptr [edx+0D8];TWinControl.sub_004EC288
 004ED068    xor         eax,eax
 004ED06A    pop         edx
 004ED06B    pop         ecx
 004ED06C    pop         ecx
 004ED06D    mov         dword ptr fs:[eax],edx
 004ED070    push        4ED100
 004ED075    mov         eax,dword ptr [ebp-8]
 004ED078    mov         eax,dword ptr [eax+4]
 004ED07B    test        al,al
>004ED07D    je          004ED089
 004ED07F    xor         edx,edx
 004ED081    mov         eax,dword ptr [ebp-4]
 004ED084    call        004F2104
 004ED089    ret
>004ED08A    jmp         @HandleFinally
>004ED08F    jmp         004ED075
 004ED091    mov         edx,dword ptr [ebp-8]
 004ED094    mov         eax,dword ptr [ebp-4]
 004ED097    call        TWinControl.Broadcast
>004ED09C    jmp         004ED0C4
 004ED09E    mov         eax,dword ptr [ebp-4]
 004ED0A1    mov         ebx,dword ptr [eax+0BC];TWinControl.FTouchManager:TTouchManager
 004ED0A7    mov         esi,dword ptr [ebx+8];TTouchManager.FGestureEngine:TCustomGestureEngine
 004ED0AA    test        esi,esi
>004ED0AC    je          004ED0C4
 004ED0AE    mov         eax,esi
 004ED0B0    mov         edx,dword ptr [eax]
 004ED0B2    call        dword ptr [edx+4];@AbstractError
 004ED0B5    test        al,2
>004ED0B7    je          004ED0C4
 004ED0B9    mov         edx,dword ptr [ebp-8]
 004ED0BC    mov         eax,dword ptr [ebx+8];TTouchManager.FGestureEngine:TCustomGestureEngine
 004ED0BF    mov         ecx,dword ptr [eax]
 004ED0C1    call        dword ptr [ecx+10];@AbstractError
 004ED0C4    mov         eax,dword ptr [ebp-8]
 004ED0C7    mov         eax,dword ptr [eax]
 004ED0C9    cmp         eax,dword ptr ds:[7CA5D0];gvar_007CA5D0:LongWord
>004ED0CF    jne         004ED0DF
 004ED0D1    test        eax,eax
>004ED0D3    je          004ED0DF
 004ED0D5    mov         eax,dword ptr [ebp-4]
 004ED0D8    call        004F0BF8
>004ED0DD    jmp         004ED100
 004ED0DF    mov         edx,dword ptr [ebp-8]
 004ED0E2    mov         eax,dword ptr [ebp-4]
 004ED0E5    call        004E841C
 004ED0EA    mov         eax,dword ptr [ebp-8]
 004ED0ED    cmp         dword ptr [eax],128
>004ED0F3    jne         004ED100
 004ED0F5    mov         eax,dword ptr [ebp-4]
 004ED0F8    mov         edx,dword ptr [eax]
 004ED0FA    call        dword ptr [edx+0A8];TWinControl.Invalidate
 004ED100    pop         esi
 004ED101    pop         ebx
 004ED102    mov         esp,ebp
 004ED104    pop         ebp
 004ED105    ret
end;*}

//004ED110
{*procedure TWinControl.DefaultHandler(var Message:?);
begin
 004ED110    push        ebx
 004ED111    push        esi
 004ED112    push        edi
 004ED113    push        ebp
 004ED114    mov         ebx,edx
 004ED116    mov         esi,eax
 004ED118    cmp         dword ptr [esi+278],0
>004ED11F    je          004ED217
 004ED125    mov         edi,dword ptr [ebx]
 004ED127    cmp         edi,7B
>004ED12A    jne         004ED150
 004ED12C    cmp         dword ptr [esi+40],0
>004ED130    je          004ED150
 004ED132    mov         eax,dword ptr [ebx+8]
 004ED135    push        eax
 004ED136    mov         ecx,dword ptr [ebx+4]
 004ED139    mov         edx,edi
 004ED13B    mov         eax,dword ptr [esi+40]
 004ED13E    call        TControl.Perform
 004ED143    mov         ebp,eax
 004ED145    mov         dword ptr [ebx+0C],ebp
 004ED148    test        ebp,ebp
>004ED14A    jne         004ED220
 004ED150    mov         edi,dword ptr [ebx]
 004ED152    mov         eax,edi
 004ED154    add         eax,0FFFFFECE
 004ED159    sub         eax,7
>004ED15C    jb          004ED16A
 004ED15E    add         eax,0FFFF4407
 004ED163    sub         eax,7
>004ED166    jb          004ED184
>004ED168    jmp         004ED1C4
 004ED16A    mov         ebp,dword ptr [ebx+8]
 004ED16D    push        ebp
 004ED16E    mov         eax,dword ptr [ebx+4]
 004ED171    push        eax
 004ED172    add         edi,0BC00
 004ED178    push        edi
 004ED179    push        ebp
 004ED17A    call        user32.SendMessageW
 004ED17F    mov         dword ptr [ebx+0C],eax
>004ED182    jmp         004ED1FE
 004ED184    mov         eax,dword ptr [esi+74]
 004ED187    mov         eax,dword ptr [eax+18]
 004ED18A    call        ColorToRGB
 004ED18F    push        eax
 004ED190    mov         eax,dword ptr [ebx+4]
 004ED193    push        eax
 004ED194    call        gdi32.SetTextColor
 004ED199    mov         edi,dword ptr [esi+1D0]
 004ED19F    mov         eax,dword ptr [edi+10]
 004ED1A2    mov         eax,dword ptr [eax+18]
 004ED1A5    call        ColorToRGB
 004ED1AA    push        eax
 004ED1AB    mov         eax,dword ptr [ebx+4]
 004ED1AE    push        eax
 004ED1AF    call        gdi32.SetBkColor
 004ED1B4    mov         eax,dword ptr [esi+1D0]
 004ED1BA    call        TBrush.GetHandle
 004ED1BF    mov         dword ptr [ebx+0C],eax
>004ED1C2    jmp         004ED1FE
 004ED1C4    mov         eax,dword ptr [ebx]
 004ED1C6    cmp         eax,dword ptr ds:[7CA5F4]
>004ED1CC    jne         004ED1DD
 004ED1CE    call        kernel32.GetCurrentProcessId
 004ED1D3    cmp         eax,dword ptr [ebx+4]
>004ED1D6    jne         004ED1DD
 004ED1D8    mov         dword ptr [ebx+0C],esi
>004ED1DB    jmp         004ED1FE
 004ED1DD    mov         eax,dword ptr [ebx+8]
 004ED1E0    push        eax
 004ED1E1    mov         eax,dword ptr [ebx+4]
 004ED1E4    push        eax
 004ED1E5    mov         eax,dword ptr [ebx]
 004ED1E7    push        eax
 004ED1E8    mov         eax,dword ptr [esi+278]
 004ED1EE    push        eax
 004ED1EF    mov         eax,dword ptr [esi+274]
 004ED1F5    push        eax
 004ED1F6    call        user32.CallWindowProcW
 004ED1FB    mov         dword ptr [ebx+0C],eax
 004ED1FE    mov         eax,dword ptr [ebx]
 004ED200    cmp         eax,0C
>004ED203    jne         004ED220
 004ED205    mov         edx,dword ptr [ebx+8]
 004ED208    push        edx
 004ED209    mov         ecx,dword ptr [ebx+4]
 004ED20C    mov         edx,eax
 004ED20E    mov         eax,esi
 004ED210    call        004E6A58
>004ED215    jmp         004ED220
 004ED217    mov         edx,ebx
 004ED219    mov         eax,esi
 004ED21B    call        TControl.DefaultHandler
 004ED220    pop         ebp
 004ED221    pop         edi
 004ED222    pop         esi
 004ED223    pop         ebx
 004ED224    ret
end;*}

//004ED228
function DoControlMsg(ControlHandle:Windows.HWND; var Message:void ):Boolean;
begin
{*
 004ED228    push        ebx
 004ED229    push        esi
 004ED22A    push        edi
 004ED22B    mov         esi,edx
 004ED22D    xor         ebx,ebx
 004ED22F    call        FindControl
 004ED234    mov         edi,eax
 004ED236    test        edi,edi
>004ED238    je          004ED255
 004ED23A    mov         eax,dword ptr [esi+8]
 004ED23D    push        eax
 004ED23E    mov         ecx,dword ptr [esi+4]
 004ED241    mov         edx,dword ptr [esi]
 004ED243    add         edx,0BC00
 004ED249    mov         eax,edi
 004ED24B    call        TControl.Perform
 004ED250    mov         dword ptr [esi+0C],eax
 004ED253    mov         bl,1
 004ED255    mov         eax,ebx
 004ED257    pop         edi
 004ED258    pop         esi
 004ED259    pop         ebx
 004ED25A    ret
*}
end;

//004ED25C
{*procedure sub_004ED25C(?:TWinControl; ?:?);
begin
 004ED25C    push        ebp
 004ED25D    mov         ebp,esp
 004ED25F    add         esp,0FFFFFFB0
 004ED262    push        ebx
 004ED263    push        esi
 004ED264    push        edi
 004ED265    mov         dword ptr [ebp-8],edx
 004ED268    mov         dword ptr [ebp-4],eax
 004ED26B    mov         eax,dword ptr [ebp-8]
 004ED26E    mov         eax,dword ptr [eax+4]
 004ED271    mov         dword ptr [ebp-10],eax
 004ED274    cmp         dword ptr [ebp-10],0
>004ED278    jne         004ED28F
 004ED27A    lea         eax,[ebp-50]
 004ED27D    push        eax
 004ED27E    mov         eax,dword ptr [ebp-4]
 004ED281    call        TWinControl.GetHandle
 004ED286    push        eax
 004ED287    call        user32.BeginPaint
 004ED28C    mov         dword ptr [ebp-10],eax
 004ED28F    xor         ecx,ecx
 004ED291    push        ebp
 004ED292    push        4ED3BB
 004ED297    push        dword ptr fs:[ecx]
 004ED29A    mov         dword ptr fs:[ecx],esp
 004ED29D    mov         eax,dword ptr [ebp-4]
 004ED2A0    cmp         dword ptr [eax+1F0],0
>004ED2A7    jne         004ED2BC
 004ED2A9    mov         edx,dword ptr [ebp-10]
 004ED2AC    mov         eax,dword ptr [ebp-4]
 004ED2AF    mov         ecx,dword ptr [eax]
 004ED2B1    call        dword ptr [ecx+0EC]
>004ED2B7    jmp         004ED385
 004ED2BC    mov         eax,dword ptr [ebp-10]
 004ED2BF    push        eax
 004ED2C0    call        gdi32.SaveDC
 004ED2C5    mov         dword ptr [ebp-0C],eax
 004ED2C8    xor         ecx,ecx
 004ED2CA    push        ebp
 004ED2CB    push        4ED37E
 004ED2D0    push        dword ptr fs:[ecx]
 004ED2D3    mov         dword ptr fs:[ecx],esp
 004ED2D6    mov         edi,2
 004ED2DB    mov         eax,dword ptr [ebp-4]
 004ED2DE    mov         eax,dword ptr [eax+1F0]
 004ED2E4    mov         ebx,dword ptr [eax+8]
 004ED2E7    dec         ebx
 004ED2E8    test        ebx,ebx
>004ED2EA    jl          004ED352
 004ED2EC    inc         ebx
 004ED2ED    xor         esi,esi
 004ED2EF    mov         eax,dword ptr [ebp-4]
 004ED2F2    mov         eax,dword ptr [eax+1F0]
 004ED2F8    mov         edx,esi
 004ED2FA    call        TList.Get
 004ED2FF    cmp         byte ptr [eax+69],0
>004ED303    je          004ED311
 004ED305    test        byte ptr [eax+1C],10
>004ED309    je          004ED323
 004ED30B    test        byte ptr [eax+65],8
>004ED30F    je          004ED323
 004ED311    test        byte ptr [eax+1C],10
>004ED315    je          004ED34E
 004ED317    test        byte ptr [eax+65],8
>004ED31B    jne         004ED34E
 004ED31D    test        byte ptr [eax+61],4
>004ED321    jne         004ED34E
 004ED323    test        byte ptr [eax+60],40
>004ED327    je          004ED34E
 004ED329    mov         ecx,dword ptr [eax+54]
 004ED32C    add         ecx,dword ptr [eax+5C]
 004ED32F    push        ecx
 004ED330    mov         edx,dword ptr [eax+50]
 004ED333    mov         ecx,edx
 004ED335    add         ecx,dword ptr [eax+58]
 004ED338    push        ecx
 004ED339    mov         ecx,dword ptr [eax+54]
 004ED33C    push        ecx
 004ED33D    push        edx
 004ED33E    mov         eax,dword ptr [ebp-10]
 004ED341    push        eax
 004ED342    call        gdi32.ExcludeClipRect
 004ED347    mov         edi,eax
 004ED349    cmp         edi,1
>004ED34C    je          004ED352
 004ED34E    inc         esi
 004ED34F    dec         ebx
>004ED350    jne         004ED2EF
 004ED352    dec         edi
>004ED353    je          004ED363
 004ED355    mov         edx,dword ptr [ebp-10]
 004ED358    mov         eax,dword ptr [ebp-4]
 004ED35B    mov         ecx,dword ptr [eax]
 004ED35D    call        dword ptr [ecx+0EC]
 004ED363    xor         eax,eax
 004ED365    pop         edx
 004ED366    pop         ecx
 004ED367    pop         ecx
 004ED368    mov         dword ptr fs:[eax],edx
 004ED36B    push        4ED385
 004ED370    mov         eax,dword ptr [ebp-0C]
 004ED373    push        eax
 004ED374    mov         eax,dword ptr [ebp-10]
 004ED377    push        eax
 004ED378    call        gdi32.RestoreDC
 004ED37D    ret
>004ED37E    jmp         @HandleFinally
>004ED383    jmp         004ED370
 004ED385    xor         ecx,ecx
 004ED387    mov         edx,dword ptr [ebp-10]
 004ED38A    mov         eax,dword ptr [ebp-4]
 004ED38D    call        004ED400
 004ED392    xor         eax,eax
 004ED394    pop         edx
 004ED395    pop         ecx
 004ED396    pop         ecx
 004ED397    mov         dword ptr fs:[eax],edx
 004ED39A    push        4ED3C2
 004ED39F    mov         eax,dword ptr [ebp-8]
 004ED3A2    cmp         dword ptr [eax+4],0
>004ED3A6    jne         004ED3BA
 004ED3A8    lea         eax,[ebp-50]
 004ED3AB    push        eax
 004ED3AC    mov         eax,dword ptr [ebp-4]
 004ED3AF    call        TWinControl.GetHandle
 004ED3B4    push        eax
 004ED3B5    call        user32.EndPaint
 004ED3BA    ret
>004ED3BB    jmp         @HandleFinally
>004ED3C0    jmp         004ED39F
 004ED3C2    pop         edi
 004ED3C3    pop         esi
 004ED3C4    pop         ebx
 004ED3C5    mov         esp,ebp
 004ED3C7    pop         ebp
 004ED3C8    ret
end;*}

//004ED3CC
{*procedure sub_004ED3CC(?:?);
begin
 004ED3CC    add         esp,0FFFFFFF0
 004ED3CF    test        byte ptr [eax+66],1;TMaskEdit.FAutoSize:Boolean
 004ED3D3    setne       cl
 004ED3D6    and         ecx,7F
 004ED3D9    mov         ecx,dword ptr [ecx*4+7A11B8]
 004ED3E0    mov         dword ptr [esp],ecx
 004ED3E3    mov         dword ptr [esp+4],edx
 004ED3E7    xor         edx,edx
 004ED3E9    mov         dword ptr [esp+8],edx
 004ED3ED    xor         edx,edx
 004ED3EF    mov         dword ptr [esp+0C],edx
 004ED3F3    mov         edx,esp
 004ED3F5    mov         ecx,dword ptr [eax]
 004ED3F7    call        dword ptr [ecx-10];TCustomEdit.DefaultHandler
 004ED3FA    add         esp,10
 004ED3FD    ret
end;*}

//004ED400
{*procedure sub_004ED400(?:TWinControl; ?:HDC; ?:?);
begin
 004ED400    push        ebp
 004ED401    mov         ebp,esp
 004ED403    add         esp,0FFFFFFD8
 004ED406    push        ebx
 004ED407    push        esi
 004ED408    push        edi
 004ED409    mov         ebx,ecx
 004ED40B    mov         dword ptr [ebp-8],edx
 004ED40E    mov         dword ptr [ebp-4],eax
 004ED411    mov         eax,dword ptr [ebp-4]
 004ED414    cmp         byte ptr [eax+207],0;TWinControl.FDockSite:Boolean
>004ED41B    je          004ED446
 004ED41D    mov         eax,dword ptr [ebp-4]
 004ED420    cmp         byte ptr [eax+206],0;TWinControl.FUseDockManager:Boolean
>004ED427    je          004ED446
 004ED429    mov         eax,dword ptr [ebp-4]
 004ED42C    cmp         dword ptr [eax+1D8],0;TWinControl.FDockManager:IDockManager
>004ED433    je          004ED446
 004ED435    mov         eax,dword ptr [ebp-4]
 004ED438    mov         eax,dword ptr [eax+1D8];TWinControl.FDockManager:IDockManager
 004ED43E    mov         edx,dword ptr [ebp-8]
 004ED441    mov         ecx,dword ptr [eax]
 004ED443    call        dword ptr [ecx+20]
 004ED446    mov         eax,dword ptr [ebp-4]
 004ED449    mov         eax,dword ptr [eax+1F0];TWinControl.FControls:TList
 004ED44F    test        eax,eax
>004ED451    je          004ED5CE
 004ED457    xor         edx,edx
 004ED459    mov         dword ptr [ebp-0C],edx
 004ED45C    test        ebx,ebx
>004ED45E    je          004ED475
 004ED460    mov         edx,ebx
 004ED462    call        TList.IndexOf
 004ED467    mov         dword ptr [ebp-0C],eax
 004ED46A    cmp         dword ptr [ebp-0C],0
>004ED46E    jge         004ED475
 004ED470    xor         eax,eax
 004ED472    mov         dword ptr [ebp-0C],eax
 004ED475    mov         eax,dword ptr [ebp-4]
 004ED478    mov         eax,dword ptr [eax+1F0];TWinControl.FControls:TList
 004ED47E    mov         eax,dword ptr [eax+8];TList.FCount:Integer
 004ED481    mov         dword ptr [ebp-10],eax
 004ED484    mov         eax,dword ptr [ebp-0C]
 004ED487    cmp         eax,dword ptr [ebp-10]
>004ED48A    jge         004ED5CE
 004ED490    mov         eax,dword ptr [ebp-4]
 004ED493    mov         eax,dword ptr [eax+1F0];TWinControl.FControls:TList
 004ED499    mov         edx,dword ptr [ebp-0C]
 004ED49C    call        TList.Get
 004ED4A1    mov         dword ptr [ebp-18],eax
 004ED4A4    mov         eax,dword ptr [ebp-18]
 004ED4A7    cmp         byte ptr [eax+69],0
>004ED4AB    je          004ED4BF
 004ED4AD    mov         eax,dword ptr [ebp-18]
 004ED4B0    test        byte ptr [eax+1C],10
>004ED4B4    je          004ED4E6
 004ED4B6    mov         eax,dword ptr [ebp-18]
 004ED4B9    test        byte ptr [eax+65],8
>004ED4BD    je          004ED4E6
 004ED4BF    mov         eax,dword ptr [ebp-18]
 004ED4C2    test        byte ptr [eax+1C],10
>004ED4C6    je          004ED5BF
 004ED4CC    mov         eax,dword ptr [ebp-18]
 004ED4CF    test        byte ptr [eax+65],8
>004ED4D3    jne         004ED5BF
 004ED4D9    mov         eax,dword ptr [ebp-18]
 004ED4DC    test        byte ptr [eax+61],4
>004ED4E0    jne         004ED5BF
 004ED4E6    mov         eax,dword ptr [ebp-18]
 004ED4E9    mov         esi,dword ptr [eax+54]
 004ED4EC    mov         eax,esi
 004ED4EE    mov         edx,dword ptr [ebp-18]
 004ED4F1    add         eax,dword ptr [edx+5C]
 004ED4F4    push        eax
 004ED4F5    lea         eax,[ebp-28]
 004ED4F8    push        eax
 004ED4F9    mov         eax,dword ptr [ebp-18]
 004ED4FC    mov         ebx,dword ptr [eax+50]
 004ED4FF    mov         ecx,ebx
 004ED501    mov         eax,dword ptr [ebp-18]
 004ED504    add         ecx,dword ptr [eax+58]
 004ED507    mov         edx,esi
 004ED509    mov         eax,ebx
 004ED50B    call        Rect
 004ED510    lea         eax,[ebp-28]
 004ED513    push        eax
 004ED514    mov         eax,dword ptr [ebp-8]
 004ED517    push        eax
 004ED518    call        gdi32.RectVisible
 004ED51D    test        eax,eax
>004ED51F    je          004ED5BF
 004ED525    mov         eax,dword ptr [ebp-4]
 004ED528    test        byte ptr [eax+64],80;TWinControl.FControlState:TControlState
>004ED52C    je          004ED538
 004ED52E    mov         eax,dword ptr [ebp-18]
 004ED531    or          dword ptr [eax+64],80
 004ED538    mov         eax,dword ptr [ebp-8]
 004ED53B    push        eax
 004ED53C    call        gdi32.SaveDC
 004ED541    mov         dword ptr [ebp-14],eax
 004ED544    xor         eax,eax
 004ED546    push        ebp
 004ED547    push        4ED5AE
 004ED54C    push        dword ptr fs:[eax]
 004ED54F    mov         dword ptr fs:[eax],esp
 004ED552    mov         eax,dword ptr [ebp-18]
 004ED555    mov         ecx,dword ptr [eax+54]
 004ED558    mov         eax,dword ptr [ebp-18]
 004ED55B    mov         edx,dword ptr [eax+50]
 004ED55E    mov         eax,dword ptr [ebp-8]
 004ED561    call        MoveWindowOrg
 004ED566    mov         eax,dword ptr [ebp-18]
 004ED569    mov         eax,dword ptr [eax+5C]
 004ED56C    push        eax
 004ED56D    mov         eax,dword ptr [ebp-18]
 004ED570    mov         eax,dword ptr [eax+58]
 004ED573    push        eax
 004ED574    push        0
 004ED576    push        0
 004ED578    mov         eax,dword ptr [ebp-8]
 004ED57B    push        eax
 004ED57C    call        gdi32.IntersectClipRect
 004ED581    push        0
 004ED583    mov         ecx,dword ptr [ebp-8]
 004ED586    mov         edx,0F
 004ED58B    mov         eax,dword ptr [ebp-18]
 004ED58E    call        TControl.Perform
 004ED593    xor         eax,eax
 004ED595    pop         edx
 004ED596    pop         ecx
 004ED597    pop         ecx
 004ED598    mov         dword ptr fs:[eax],edx
 004ED59B    push        4ED5B5
 004ED5A0    mov         eax,dword ptr [ebp-14]
 004ED5A3    push        eax
 004ED5A4    mov         eax,dword ptr [ebp-8]
 004ED5A7    push        eax
 004ED5A8    call        gdi32.RestoreDC
 004ED5AD    ret
>004ED5AE    jmp         @HandleFinally
>004ED5B3    jmp         004ED5A0
 004ED5B5    mov         eax,dword ptr [ebp-18]
 004ED5B8    and         dword ptr [eax+64],0FFFFFF7F
 004ED5BF    inc         dword ptr [ebp-0C]
 004ED5C2    mov         eax,dword ptr [ebp-0C]
 004ED5C5    cmp         eax,dword ptr [ebp-10]
>004ED5C8    jl          004ED490
 004ED5CE    mov         eax,dword ptr [ebp-4]
 004ED5D1    mov         eax,dword ptr [eax+1F4];TWinControl.FWinControls:TList
 004ED5D7    test        eax,eax
>004ED5D9    je          004ED6D9
 004ED5DF    mov         edi,dword ptr [eax+8];TList.FCount:Integer
 004ED5E2    dec         edi
 004ED5E3    test        edi,edi
>004ED5E5    jl          004ED6D9
 004ED5EB    inc         edi
 004ED5EC    mov         dword ptr [ebp-0C],0
 004ED5F3    mov         eax,dword ptr [ebp-4]
 004ED5F6    mov         eax,dword ptr [eax+1F4];TWinControl.FWinControls:TList
 004ED5FC    mov         edx,dword ptr [ebp-0C]
 004ED5FF    call        TList.Get
 004ED604    mov         ebx,eax
 004ED606    cmp         byte ptr [ebx+204],0
>004ED60D    je          004ED6CF
 004ED613    test        byte ptr [ebx+60],10
>004ED617    je          004ED6CF
 004ED61D    test        byte ptr [ebx+1C],10
>004ED621    jne         004ED629
 004ED623    cmp         byte ptr [ebx+69],0
>004ED627    jne         004ED647
 004ED629    test        byte ptr [ebx+1C],10
>004ED62D    je          004ED6CF
 004ED633    test        byte ptr [ebx+61],4
>004ED637    jne         004ED6CF
 004ED63D    test        byte ptr [ebx+65],8
>004ED641    jne         004ED6CF
 004ED647    mov         eax,0FF000010
 004ED64C    call        ColorToRGB
 004ED651    push        eax
 004ED652    call        gdi32.CreateSolidBrush
 004ED657    mov         esi,eax
 004ED659    push        esi
 004ED65A    mov         eax,dword ptr [ebx+54]
 004ED65D    add         eax,dword ptr [ebx+5C]
 004ED660    push        eax
 004ED661    lea         eax,[ebp-28]
 004ED664    push        eax
 004ED665    mov         ecx,dword ptr [ebx+50]
 004ED668    add         ecx,dword ptr [ebx+58]
 004ED66B    mov         edx,dword ptr [ebx+54]
 004ED66E    dec         edx
 004ED66F    mov         eax,dword ptr [ebx+50]
 004ED672    dec         eax
 004ED673    call        Rect
 004ED678    lea         eax,[ebp-28]
 004ED67B    push        eax
 004ED67C    mov         eax,dword ptr [ebp-8]
 004ED67F    push        eax
 004ED680    call        user32.FrameRect
 004ED685    push        esi
 004ED686    call        gdi32.DeleteObject
 004ED68B    mov         eax,0FF000014
 004ED690    call        ColorToRGB
 004ED695    push        eax
 004ED696    call        gdi32.CreateSolidBrush
 004ED69B    mov         esi,eax
 004ED69D    push        esi
 004ED69E    mov         eax,dword ptr [ebx+54]
 004ED6A1    add         eax,dword ptr [ebx+5C]
 004ED6A4    inc         eax
 004ED6A5    push        eax
 004ED6A6    lea         eax,[ebp-28]
 004ED6A9    push        eax
 004ED6AA    mov         ecx,dword ptr [ebx+50]
 004ED6AD    add         ecx,dword ptr [ebx+58]
 004ED6B0    inc         ecx
 004ED6B1    mov         edx,dword ptr [ebx+54]
 004ED6B4    mov         eax,dword ptr [ebx+50]
 004ED6B7    call        Rect
 004ED6BC    lea         eax,[ebp-28]
 004ED6BF    push        eax
 004ED6C0    mov         eax,dword ptr [ebp-8]
 004ED6C3    push        eax
 004ED6C4    call        user32.FrameRect
 004ED6C9    push        esi
 004ED6CA    call        gdi32.DeleteObject
 004ED6CF    inc         dword ptr [ebp-0C]
 004ED6D2    dec         edi
>004ED6D3    jne         004ED5F3
 004ED6D9    pop         edi
 004ED6DA    pop         esi
 004ED6DB    pop         ebx
 004ED6DC    mov         esp,ebp
 004ED6DE    pop         ebp
 004ED6DF    ret
end;*}

//004ED6E0
{*procedure sub_004ED6E0(?:HDC; ?:?);
begin
 004ED6E0    push        ebp
 004ED6E1    mov         ebp,esp
 004ED6E3    add         esp,0FFFFFFE8
 004ED6E6    push        ebx
 004ED6E7    mov         dword ptr [ebp-8],edx
 004ED6EA    mov         dword ptr [ebp-4],eax
 004ED6ED    mov         eax,dword ptr [ebp-4]
 004ED6F0    push        eax
 004ED6F1    call        gdi32.SaveDC
 004ED6F6    mov         dword ptr [ebp-0C],eax
 004ED6F9    xor         edx,edx
 004ED6FB    push        ebp
 004ED6FC    push        4ED77E
 004ED701    push        dword ptr fs:[edx]
 004ED704    mov         dword ptr fs:[edx],esp
 004ED707    mov         eax,dword ptr [ebp-8]
 004ED70A    mov         eax,dword ptr [eax+0C]
 004ED70D    sub         eax,2
 004ED710    push        eax
 004ED711    mov         eax,dword ptr [ebp-8]
 004ED714    mov         eax,dword ptr [eax+8]
 004ED717    sub         eax,2
 004ED71A    push        eax
 004ED71B    mov         eax,dword ptr [ebp-8]
 004ED71E    mov         eax,dword ptr [eax+4]
 004ED721    add         eax,2
 004ED724    push        eax
 004ED725    mov         eax,dword ptr [ebp-8]
 004ED728    mov         eax,dword ptr [eax]
 004ED72A    add         eax,2
 004ED72D    push        eax
 004ED72E    mov         eax,dword ptr [ebp-4]
 004ED731    push        eax
 004ED732    call        gdi32.ExcludeClipRect
 004ED737    call        TStyleManager.GetActiveStyle
 004ED73C    mov         ebx,eax
 004ED73E    lea         ecx,[ebp-18]
 004ED741    mov         dl,2
 004ED743    mov         eax,ebx
 004ED745    mov         ebx,dword ptr [eax]
 004ED747    call        dword ptr [ebx+84];TCustomStyleServices.GetElementDetails
 004ED74D    call        TStyleManager.GetActiveStyle
 004ED752    mov         edx,dword ptr [ebp-8]
 004ED755    push        edx
 004ED756    push        0
 004ED758    lea         ecx,[ebp-18]
 004ED75B    mov         edx,dword ptr [ebp-4]
 004ED75E    call        TCustomStyleServices.DrawElement
 004ED763    xor         eax,eax
 004ED765    pop         edx
 004ED766    pop         ecx
 004ED767    pop         ecx
 004ED768    mov         dword ptr fs:[eax],edx
 004ED76B    push        4ED785
 004ED770    mov         eax,dword ptr [ebp-0C]
 004ED773    push        eax
 004ED774    mov         eax,dword ptr [ebp-4]
 004ED777    push        eax
 004ED778    call        gdi32.RestoreDC
 004ED77D    ret
>004ED77E    jmp         @HandleFinally
>004ED783    jmp         004ED770
 004ED785    mov         eax,dword ptr [ebp-8]
 004ED788    mov         ecx,0FFFFFFFE
 004ED78D    mov         edx,0FFFFFFFE
 004ED792    call        InflateRect
 004ED797    pop         ebx
 004ED798    mov         esp,ebp
 004ED79A    pop         ebp
 004ED79B    ret
end;*}

//004ED79C
procedure TWinControl.PaintTo(DC:HDC; X:Integer; Y:Integer);
begin
{*
 004ED79C    push        ebp
 004ED79D    mov         ebp,esp
 004ED79F    add         esp,0FFFFFFE4
 004ED7A2    push        ebx
 004ED7A3    push        esi
 004ED7A4    mov         ebx,ecx
 004ED7A6    mov         dword ptr [ebp-8],edx
 004ED7A9    mov         dword ptr [ebp-4],eax
 004ED7AC    mov         eax,dword ptr [ebp-4]
 004ED7AF    or          dword ptr [eax+64],80;TWinControl.FControlState:TControlState
 004ED7B6    mov         eax,dword ptr [ebp-8]
 004ED7B9    push        eax
 004ED7BA    call        gdi32.SaveDC
 004ED7BF    mov         dword ptr [ebp-0C],eax
 004ED7C2    xor         edx,edx
 004ED7C4    push        ebp
 004ED7C5    push        4ED9D4
 004ED7CA    push        dword ptr fs:[edx]
 004ED7CD    mov         dword ptr fs:[edx],esp
 004ED7D0    mov         ecx,dword ptr [ebp+8]
 004ED7D3    mov         edx,ebx
 004ED7D5    mov         eax,dword ptr [ebp-8]
 004ED7D8    call        MoveWindowOrg
 004ED7DD    mov         eax,dword ptr [ebp-4]
 004ED7E0    mov         eax,dword ptr [eax+5C];TWinControl.FHeight:Integer
 004ED7E3    push        eax
 004ED7E4    mov         eax,dword ptr [ebp-4]
 004ED7E7    mov         eax,dword ptr [eax+58];TWinControl.FWidth:Integer
 004ED7EA    push        eax
 004ED7EB    push        0
 004ED7ED    push        0
 004ED7EF    mov         eax,dword ptr [ebp-8]
 004ED7F2    push        eax
 004ED7F3    call        gdi32.IntersectClipRect
 004ED7F8    xor         esi,esi
 004ED7FA    xor         ebx,ebx
 004ED7FC    mov         eax,dword ptr [ebp-4]
 004ED7FF    call        TWinControl.GetHandle
 004ED804    push        0EC
 004ED806    push        eax
 004ED807    call        user32.GetWindowLongW
 004ED80C    test        ah,2
>004ED80F    je          004ED81D
 004ED811    mov         ebx,0A
 004ED816    mov         esi,200F
>004ED81B    jmp         004ED83E
 004ED81D    mov         eax,dword ptr [ebp-4]
 004ED820    call        TWinControl.GetHandle
 004ED825    push        0F0
 004ED827    push        eax
 004ED828    call        user32.GetWindowLongW
 004ED82D    test        eax,800000;gvar_00800000
>004ED832    je          004ED83E
 004ED834    mov         ebx,3
 004ED839    mov         esi,0A00F
 004ED83E    cmp         ebx,0A
>004ED841    jne         004ED84F
 004ED843    call        TStyleManager.GetActiveStyle
 004ED848    mov         edx,dword ptr [eax]
 004ED84A    call        dword ptr [edx+4C];TCustomStyleServices.GetEnabled
>004ED84D    jmp         004ED851
 004ED84F    xor         eax,eax
 004ED851    test        al,al
>004ED853    je          004ED872
 004ED855    mov         eax,dword ptr [ebp-4]
 004ED858    test        byte ptr [eax+1C],10;TWinControl.FComponentState:TComponentState
>004ED85C    je          004ED86E
 004ED85E    mov         eax,dword ptr [ebp-4]
 004ED861    call        UnthemedDesigner
 004ED866    test        al,al
>004ED868    je          004ED86E
 004ED86A    xor         eax,eax
>004ED86C    jmp         004ED874
 004ED86E    mov         al,1
>004ED870    jmp         004ED874
 004ED872    xor         eax,eax
 004ED874    test        al,al
>004ED876    je          004ED8FD
 004ED87C    mov         eax,dword ptr [ebp-4]
 004ED87F    mov         eax,dword ptr [eax+5C];TWinControl.FHeight:Integer
 004ED882    push        eax
 004ED883    mov         eax,dword ptr [ebp-4]
 004ED886    mov         eax,dword ptr [eax+58];TWinControl.FWidth:Integer
 004ED889    push        eax
 004ED88A    push        0
 004ED88C    push        0
 004ED88E    lea         eax,[ebp-1C]
 004ED891    push        eax
 004ED892    call        user32.SetRect
 004ED897    mov         eax,dword ptr [ebp-4]
 004ED89A    test        byte ptr [eax+62],2;TWinControl.FEnabled:Boolean
>004ED89E    je          004ED8AD
 004ED8A0    lea         edx,[ebp-1C]
 004ED8A3    mov         eax,dword ptr [ebp-8]
 004ED8A6    call        004ED6E0
>004ED8AB    jmp         004ED8D2
 004ED8AD    mov         eax,dword ptr [ebp-4]
 004ED8B0    mov         edx,dword ptr ds:[4ED9F0];0x20000 gvar_004ED9F0
 004ED8B6    or          dword ptr [eax+60],edx;TWinControl.FControlStyle:TControlStyle
 004ED8B9    lea         edx,[ebp-1C]
 004ED8BC    mov         eax,dword ptr [ebp-8]
 004ED8BF    call        004ED6E0
 004ED8C4    mov         eax,dword ptr [ebp-4]
 004ED8C7    mov         edx,dword ptr ds:[4ED9F0];0x20000 gvar_004ED9F0
 004ED8CD    not         edx
 004ED8CF    and         dword ptr [eax+60],edx;TWinControl.FControlStyle:TControlStyle
 004ED8D2    mov         ecx,dword ptr [ebp-18]
 004ED8D5    mov         edx,dword ptr [ebp-1C]
 004ED8D8    mov         eax,dword ptr [ebp-8]
 004ED8DB    call        MoveWindowOrg
 004ED8E0    mov         eax,dword ptr [ebp-10]
 004ED8E3    sub         eax,dword ptr [ebp-18]
 004ED8E6    push        eax
 004ED8E7    mov         eax,dword ptr [ebp-14]
 004ED8EA    sub         eax,dword ptr [ebp-1C]
 004ED8ED    push        eax
 004ED8EE    push        0
 004ED8F0    push        0
 004ED8F2    mov         eax,dword ptr [ebp-8]
 004ED8F5    push        eax
 004ED8F6    call        gdi32.IntersectClipRect
>004ED8FB    jmp         004ED954
 004ED8FD    test        esi,esi
>004ED8FF    je          004ED954
 004ED901    mov         eax,dword ptr [ebp-4]
 004ED904    mov         eax,dword ptr [eax+5C];TWinControl.FHeight:Integer
 004ED907    push        eax
 004ED908    mov         eax,dword ptr [ebp-4]
 004ED90B    mov         eax,dword ptr [eax+58];TWinControl.FWidth:Integer
 004ED90E    push        eax
 004ED90F    push        0
 004ED911    push        0
 004ED913    lea         eax,[ebp-1C]
 004ED916    push        eax
 004ED917    call        user32.SetRect
 004ED91C    push        esi
 004ED91D    push        ebx
 004ED91E    lea         eax,[ebp-1C]
 004ED921    push        eax
 004ED922    mov         eax,dword ptr [ebp-8]
 004ED925    push        eax
 004ED926    call        user32.DrawEdge
 004ED92B    mov         ecx,dword ptr [ebp-18]
 004ED92E    mov         edx,dword ptr [ebp-1C]
 004ED931    mov         eax,dword ptr [ebp-8]
 004ED934    call        MoveWindowOrg
 004ED939    mov         eax,dword ptr [ebp-10]
 004ED93C    sub         eax,dword ptr [ebp-18]
 004ED93F    push        eax
 004ED940    mov         eax,dword ptr [ebp-14]
 004ED943    sub         eax,dword ptr [ebp-1C]
 004ED946    push        eax
 004ED947    push        0
 004ED949    push        0
 004ED94B    mov         eax,dword ptr [ebp-8]
 004ED94E    push        eax
 004ED94F    call        gdi32.IntersectClipRect
 004ED954    push        0
 004ED956    mov         ecx,dword ptr [ebp-8]
 004ED959    mov         edx,14
 004ED95E    mov         eax,dword ptr [ebp-4]
 004ED961    call        TControl.Perform
 004ED966    push        0
 004ED968    mov         ecx,dword ptr [ebp-8]
 004ED96B    mov         edx,0F
 004ED970    mov         eax,dword ptr [ebp-4]
 004ED973    call        TControl.Perform
 004ED978    mov         eax,dword ptr [ebp-4]
 004ED97B    mov         eax,dword ptr [eax+1F4];TWinControl.FWinControls:TList
 004ED981    test        eax,eax
>004ED983    je          004ED9B9
 004ED985    mov         ebx,dword ptr [eax+8];TList.FCount:Integer
 004ED988    dec         ebx
 004ED989    test        ebx,ebx
>004ED98B    jl          004ED9B9
 004ED98D    inc         ebx
 004ED98E    xor         esi,esi
 004ED990    mov         eax,dword ptr [ebp-4]
 004ED993    mov         eax,dword ptr [eax+1F4];TWinControl.FWinControls:TList
 004ED999    mov         edx,esi
 004ED99B    call        TList.Get
 004ED9A0    cmp         byte ptr [eax+69],0
>004ED9A4    je          004ED9B5
 004ED9A6    mov         edx,dword ptr [eax+54]
 004ED9A9    push        edx
 004ED9AA    mov         ecx,dword ptr [eax+50]
 004ED9AD    mov         edx,dword ptr [ebp-8]
 004ED9B0    call        TWinControl.PaintTo
 004ED9B5    inc         esi
 004ED9B6    dec         ebx
>004ED9B7    jne         004ED990
 004ED9B9    xor         eax,eax
 004ED9BB    pop         edx
 004ED9BC    pop         ecx
 004ED9BD    pop         ecx
 004ED9BE    mov         dword ptr fs:[eax],edx
 004ED9C1    push        4ED9DB
 004ED9C6    mov         eax,dword ptr [ebp-0C]
 004ED9C9    push        eax
 004ED9CA    mov         eax,dword ptr [ebp-8]
 004ED9CD    push        eax
 004ED9CE    call        gdi32.RestoreDC
 004ED9D3    ret
>004ED9D4    jmp         @HandleFinally
>004ED9D9    jmp         004ED9C6
 004ED9DB    mov         eax,dword ptr [ebp-4]
 004ED9DE    and         dword ptr [eax+64],0FFFFFF7F;TWinControl.FControlState:TControlState
 004ED9E5    pop         esi
 004ED9E6    pop         ebx
 004ED9E7    mov         esp,ebp
 004ED9E9    pop         ebp
 004ED9EA    ret         4
*}
end;

//004ED9F4
{*procedure TWinControl.WMPaint(?:?);
begin
 004ED9F4    push        ebp
 004ED9F5    mov         ebp,esp
 004ED9F7    add         esp,0FFFFFFA8
 004ED9FA    push        ebx
 004ED9FB    push        esi
 004ED9FC    mov         ebx,edx
 004ED9FE    mov         dword ptr [ebp-4],eax
 004EDA01    mov         eax,dword ptr [ebp-4]
 004EDA04    cmp         byte ptr [eax+280],0;TWinControl.FDoubleBuffered:Boolean
>004EDA0B    je          004EDA13
 004EDA0D    cmp         dword ptr [ebx+4],0
>004EDA11    je          004EDA46
 004EDA13    mov         eax,dword ptr [ebp-4]
 004EDA16    test        byte ptr [eax+65],1;TWinControl.FAlign:TAlign
>004EDA1A    jne         004EDA37
 004EDA1C    mov         eax,dword ptr [ebp-4]
 004EDA1F    call        TWinControl.GetControlCount
 004EDA24    test        eax,eax
>004EDA26    jne         004EDA37
 004EDA28    mov         edx,ebx
 004EDA2A    mov         eax,dword ptr [ebp-4]
 004EDA2D    mov         ecx,dword ptr [eax]
 004EDA2F    call        dword ptr [ecx-10];TWinControl.DefaultHandler
>004EDA32    jmp         004EDC60
 004EDA37    mov         edx,ebx
 004EDA39    mov         eax,dword ptr [ebp-4]
 004EDA3C    call        004ED25C
>004EDA41    jmp         004EDC60
 004EDA46    call        004D7288
 004EDA4B    test        al,al
>004EDA4D    je          004EDB2C
 004EDA53    lea         eax,[ebp-58]
 004EDA56    push        eax
 004EDA57    mov         eax,dword ptr [ebp-4]
 004EDA5A    call        TWinControl.GetHandle
 004EDA5F    push        eax
 004EDA60    call        user32.BeginPaint
 004EDA65    mov         esi,eax
 004EDA67    xor         edx,edx
 004EDA69    push        ebp
 004EDA6A    push        4EDB25
 004EDA6F    push        dword ptr fs:[edx]
 004EDA72    mov         dword ptr fs:[edx],esp
 004EDA75    lea         eax,[ebp-8]
 004EDA78    push        eax
 004EDA79    push        0
 004EDA7B    push        2
 004EDA7D    lea         eax,[ebp-50]
 004EDA80    push        eax
 004EDA81    push        esi
 004EDA82    call        004D426C
 004EDA87    mov         dword ptr [ebp-14],eax
 004EDA8A    cmp         dword ptr [ebp-14],0
>004EDA8E    je          004EDB05
 004EDA90    xor         edx,edx
 004EDA92    push        ebp
 004EDA93    push        4EDAFE
 004EDA98    push        dword ptr fs:[edx]
 004EDA9B    mov         dword ptr fs:[edx],esp
 004EDA9E    mov         eax,dword ptr [ebp-8]
 004EDAA1    push        eax
 004EDAA2    mov         ecx,dword ptr [ebp-8]
 004EDAA5    mov         edx,14
 004EDAAA    mov         eax,dword ptr [ebp-4]
 004EDAAD    call        TControl.Perform
 004EDAB2    push        4
 004EDAB4    mov         ecx,dword ptr [ebp-8]
 004EDAB7    mov         edx,318
 004EDABC    mov         eax,dword ptr [ebp-4]
 004EDABF    call        TControl.Perform
 004EDAC4    mov         eax,dword ptr [ebp-4]
 004EDAC7    test        byte ptr [eax+62],40;TWinControl.FEnabled:Boolean
>004EDACB    jne         004EDAE5
 004EDACD    lea         eax,[ebp-50]
 004EDAD0    mov         dword ptr [ebp-18],eax
 004EDAD3    push        0FF
 004EDAD8    mov         eax,dword ptr [ebp-18]
 004EDADB    push        eax
 004EDADC    mov         eax,dword ptr [ebp-14]
 004EDADF    push        eax
 004EDAE0    call        004D429C
 004EDAE5    xor         eax,eax
 004EDAE7    pop         edx
 004EDAE8    pop         ecx
 004EDAE9    pop         ecx
 004EDAEA    mov         dword ptr fs:[eax],edx
 004EDAED    push        4EDB05
 004EDAF2    push        0FF
 004EDAF4    mov         eax,dword ptr [ebp-14]
 004EDAF7    push        eax
 004EDAF8    call        004D4284
 004EDAFD    ret
>004EDAFE    jmp         @HandleFinally
>004EDB03    jmp         004EDAF2
 004EDB05    xor         eax,eax
 004EDB07    pop         edx
 004EDB08    pop         ecx
 004EDB09    pop         ecx
 004EDB0A    mov         dword ptr fs:[eax],edx
 004EDB0D    push        4EDC60
 004EDB12    lea         eax,[ebp-58]
 004EDB15    push        eax
 004EDB16    mov         eax,dword ptr [ebp-4]
 004EDB19    call        TWinControl.GetHandle
 004EDB1E    push        eax
 004EDB1F    call        user32.EndPaint
 004EDB24    ret
>004EDB25    jmp         @HandleFinally
>004EDB2A    jmp         004EDB12
 004EDB2C    lea         eax,[ebp-58]
 004EDB2F    push        eax
 004EDB30    mov         eax,dword ptr [ebp-4]
 004EDB33    call        TWinControl.GetHandle
 004EDB38    push        eax
 004EDB39    call        user32.BeginPaint
 004EDB3E    mov         esi,eax
 004EDB40    mov         eax,dword ptr [ebp-44]
 004EDB43    sub         eax,dword ptr [ebp-4C]
 004EDB46    push        eax
 004EDB47    mov         eax,dword ptr [ebp-48]
 004EDB4A    sub         eax,dword ptr [ebp-50]
 004EDB4D    push        eax
 004EDB4E    push        esi
 004EDB4F    call        gdi32.CreateCompatibleBitmap
 004EDB54    mov         dword ptr [ebp-0C],eax
 004EDB57    xor         ecx,ecx
 004EDB59    push        ebp
 004EDB5A    push        4EDC59
 004EDB5F    push        dword ptr fs:[ecx]
 004EDB62    mov         dword ptr fs:[ecx],esp
 004EDB65    push        esi
 004EDB66    call        gdi32.CreateCompatibleDC
 004EDB6B    mov         dword ptr [ebp-8],eax
 004EDB6E    mov         eax,dword ptr [ebp-0C]
 004EDB71    push        eax
 004EDB72    mov         eax,dword ptr [ebp-8]
 004EDB75    push        eax
 004EDB76    call        gdi32.SelectObject
 004EDB7B    mov         dword ptr [ebp-10],eax
 004EDB7E    xor         ecx,ecx
 004EDB80    push        ebp
 004EDB81    push        4EDC20
 004EDB86    push        dword ptr fs:[ecx]
 004EDB89    mov         dword ptr fs:[ecx],esp
 004EDB8C    push        0
 004EDB8E    mov         eax,dword ptr [ebp-4C]
 004EDB91    push        eax
 004EDB92    mov         eax,dword ptr [ebp-50]
 004EDB95    push        eax
 004EDB96    mov         eax,dword ptr [ebp-8]
 004EDB99    push        eax
 004EDB9A    call        gdi32.SetWindowOrgEx
 004EDB9F    mov         eax,dword ptr [ebp-8]
 004EDBA2    push        eax
 004EDBA3    mov         ecx,dword ptr [ebp-8]
 004EDBA6    mov         edx,14
 004EDBAB    mov         eax,dword ptr [ebp-4]
 004EDBAE    call        TControl.Perform
 004EDBB3    mov         eax,dword ptr [ebp-8]
 004EDBB6    mov         dword ptr [ebx+4],eax
 004EDBB9    call        TStyleManager.GetIsCustomStyleActive
 004EDBBE    test        al,al
>004EDBC0    je          004EDBD1
 004EDBC2    mov         edx,ebx
 004EDBC4    mov         eax,dword ptr [ebp-4]
 004EDBC7    mov         ecx,dword ptr [eax]
 004EDBC9    call        dword ptr [ecx+98];TWinControl.sub_004ECAFC
>004EDBCF    jmp         004EDBDB
 004EDBD1    mov         edx,ebx
 004EDBD3    mov         eax,dword ptr [ebp-4]
 004EDBD6    call        TWinControl.WMPaint
 004EDBDB    xor         eax,eax
 004EDBDD    mov         dword ptr [ebx+4],eax
 004EDBE0    push        0CC0020
 004EDBE5    mov         edx,dword ptr [ebp-4C]
 004EDBE8    push        edx
 004EDBE9    mov         eax,dword ptr [ebp-50]
 004EDBEC    push        eax
 004EDBED    mov         ecx,dword ptr [ebp-8]
 004EDBF0    push        ecx
 004EDBF1    mov         ecx,dword ptr [ebp-44]
 004EDBF4    sub         ecx,edx
 004EDBF6    push        ecx
 004EDBF7    mov         ecx,dword ptr [ebp-48]
 004EDBFA    sub         ecx,eax
 004EDBFC    push        ecx
 004EDBFD    push        edx
 004EDBFE    push        eax
 004EDBFF    push        esi
 004EDC00    call        gdi32.BitBlt
 004EDC05    xor         eax,eax
 004EDC07    pop         edx
 004EDC08    pop         ecx
 004EDC09    pop         ecx
 004EDC0A    mov         dword ptr fs:[eax],edx
 004EDC0D    push        4EDC27
 004EDC12    mov         eax,dword ptr [ebp-10]
 004EDC15    push        eax
 004EDC16    mov         eax,dword ptr [ebp-8]
 004EDC19    push        eax
 004EDC1A    call        gdi32.SelectObject
 004EDC1F    ret
>004EDC20    jmp         @HandleFinally
>004EDC25    jmp         004EDC12
 004EDC27    xor         eax,eax
 004EDC29    pop         edx
 004EDC2A    pop         ecx
 004EDC2B    pop         ecx
 004EDC2C    mov         dword ptr fs:[eax],edx
 004EDC2F    push        4EDC60
 004EDC34    lea         eax,[ebp-58]
 004EDC37    push        eax
 004EDC38    mov         eax,dword ptr [ebp-4]
 004EDC3B    call        TWinControl.GetHandle
 004EDC40    push        eax
 004EDC41    call        user32.EndPaint
 004EDC46    mov         eax,dword ptr [ebp-8]
 004EDC49    push        eax
 004EDC4A    call        gdi32.DeleteDC
 004EDC4F    mov         eax,dword ptr [ebp-0C]
 004EDC52    push        eax
 004EDC53    call        gdi32.DeleteObject
 004EDC58    ret
>004EDC59    jmp         @HandleFinally
>004EDC5E    jmp         004EDC34
 004EDC60    pop         esi
 004EDC61    pop         ebx
 004EDC62    mov         esp,ebp
 004EDC64    pop         ebp
 004EDC65    ret
end;*}

//004EDC68
procedure TWinControl.WMCharToItem(var Message:Messages.TWMCharToItem);
begin
{*
 004EDC68    push        ebx
 004EDC69    push        esi
 004EDC6A    mov         ebx,edx
 004EDC6C    mov         esi,eax
 004EDC6E    mov         edx,ebx
 004EDC70    mov         eax,dword ptr [ebx+8]
 004EDC73    call        DoControlMsg
 004EDC78    test        al,al
>004EDC7A    jne         004EDC85
 004EDC7C    mov         edx,ebx
 004EDC7E    mov         eax,esi
 004EDC80    mov         ecx,dword ptr [eax]
 004EDC82    call        dword ptr [ecx-10]
 004EDC85    pop         esi
 004EDC86    pop         ebx
 004EDC87    ret
*}
end;

//004EDC88
procedure TWinControl.WMNotify(var Message:Messages.TWMNotify);
begin
{*
 004EDC88    push        ebx
 004EDC89    push        esi
 004EDC8A    mov         ebx,edx
 004EDC8C    mov         esi,eax
 004EDC8E    mov         edx,ebx
 004EDC90    mov         eax,dword ptr [ebx+8]
 004EDC93    mov         eax,dword ptr [eax]
 004EDC95    call        DoControlMsg
 004EDC9A    test        al,al
>004EDC9C    jne         004EDCA7
 004EDC9E    mov         edx,ebx
 004EDCA0    mov         eax,esi
 004EDCA2    mov         ecx,dword ptr [eax]
 004EDCA4    call        dword ptr [ecx-10]
 004EDCA7    pop         esi
 004EDCA8    pop         ebx
 004EDCA9    ret
*}
end;

//004EDCAC
procedure TWinControl.WMSysColorChange(var Message:Messages.TWMSysColorChange);
begin
{*
 004EDCAC    push        ebx
 004EDCAD    mov         ebx,eax
 004EDCAF    call        PaletteChanged
 004EDCB4    push        0
 004EDCB6    xor         ecx,ecx
 004EDCB8    mov         edx,0B024
 004EDCBD    mov         eax,ebx
 004EDCBF    call        TControl.Perform
 004EDCC4    pop         ebx
 004EDCC5    ret
*}
end;

//004EDCC8
procedure TWinControl.WMWinIniChange(var Message:Messages.TMessage);
begin
{*
 004EDCC8    mov         ecx,dword ptr [edx+8]
 004EDCCB    push        ecx
 004EDCCC    mov         ecx,dword ptr [edx+4]
 004EDCCF    mov         edx,0B025
 004EDCD4    call        TControl.Perform
 004EDCD9    ret
*}
end;

//004EDCDC
procedure TWinControl.WMFontChange(var Message:Messages.TMessage);
begin
{*
 004EDCDC    push        0
 004EDCDE    xor         ecx,ecx
 004EDCE0    mov         edx,0B026
 004EDCE5    call        TControl.Perform
 004EDCEA    ret
*}
end;

//004EDCEC
procedure TWinControl.WMTimeChange(var Message:Messages.TMessage);
begin
{*
 004EDCEC    push        0
 004EDCEE    xor         ecx,ecx
 004EDCF0    mov         edx,0B027
 004EDCF5    call        TControl.Perform
 004EDCFA    ret
*}
end;

//004EDCFC
procedure TWinControl.WMCommand(var Message:Messages.TWMCommand);
begin
{*
 004EDCFC    push        ebx
 004EDCFD    push        esi
 004EDCFE    mov         ebx,edx
 004EDD00    mov         esi,eax
 004EDD02    mov         edx,ebx
 004EDD04    mov         eax,dword ptr [ebx+8]
 004EDD07    call        DoControlMsg
 004EDD0C    test        al,al
>004EDD0E    jne         004EDD19
 004EDD10    mov         edx,ebx
 004EDD12    mov         eax,esi
 004EDD14    mov         ecx,dword ptr [eax]
 004EDD16    call        dword ptr [ecx-10]
 004EDD19    pop         esi
 004EDD1A    pop         ebx
 004EDD1B    ret
*}
end;

//004EDD1C
procedure TWinControl.WMHScroll(var Message:Messages.TWMHScroll);
begin
{*
 004EDD1C    push        ebx
 004EDD1D    push        esi
 004EDD1E    mov         ebx,edx
 004EDD20    mov         esi,eax
 004EDD22    mov         edx,ebx
 004EDD24    mov         eax,dword ptr [ebx+8]
 004EDD27    call        DoControlMsg
 004EDD2C    test        al,al
>004EDD2E    jne         004EDD39
 004EDD30    mov         edx,ebx
 004EDD32    mov         eax,esi
 004EDD34    mov         ecx,dword ptr [eax]
 004EDD36    call        dword ptr [ecx-10]
 004EDD39    pop         esi
 004EDD3A    pop         ebx
 004EDD3B    ret
*}
end;

//004EDD3C
procedure TWinControl.WMCompareItem(var Message:Messages.TWMCompareItem);
begin
{*
 004EDD3C    push        ebx
 004EDD3D    push        esi
 004EDD3E    mov         ebx,edx
 004EDD40    mov         esi,eax
 004EDD42    mov         edx,ebx
 004EDD44    mov         eax,dword ptr [ebx+8]
 004EDD47    mov         eax,dword ptr [eax+8]
 004EDD4A    call        DoControlMsg
 004EDD4F    test        al,al
>004EDD51    jne         004EDD5C
 004EDD53    mov         edx,ebx
 004EDD55    mov         eax,esi
 004EDD57    mov         ecx,dword ptr [eax]
 004EDD59    call        dword ptr [ecx-10]
 004EDD5C    pop         esi
 004EDD5D    pop         ebx
 004EDD5E    ret
*}
end;

//004EDD60
procedure TWinControl.WMDeleteItem(var Message:Messages.TWMDeleteItem);
begin
{*
 004EDD60    push        ebx
 004EDD61    push        esi
 004EDD62    mov         ebx,edx
 004EDD64    mov         esi,eax
 004EDD66    mov         edx,ebx
 004EDD68    mov         eax,dword ptr [ebx+8]
 004EDD6B    mov         eax,dword ptr [eax+0C]
 004EDD6E    call        DoControlMsg
 004EDD73    test        al,al
>004EDD75    jne         004EDD80
 004EDD77    mov         edx,ebx
 004EDD79    mov         eax,esi
 004EDD7B    mov         ecx,dword ptr [eax]
 004EDD7D    call        dword ptr [ecx-10]
 004EDD80    pop         esi
 004EDD81    pop         ebx
 004EDD82    ret
*}
end;

//004EDD84
procedure TWinControl.WMDrawItem(var Message:Messages.TWMDrawItem);
begin
{*
 004EDD84    push        ebx
 004EDD85    push        esi
 004EDD86    mov         ebx,edx
 004EDD88    mov         esi,eax
 004EDD8A    mov         edx,ebx
 004EDD8C    mov         eax,dword ptr [ebx+8]
 004EDD8F    mov         eax,dword ptr [eax+14]
 004EDD92    call        DoControlMsg
 004EDD97    test        al,al
>004EDD99    jne         004EDDA4
 004EDD9B    mov         edx,ebx
 004EDD9D    mov         eax,esi
 004EDD9F    mov         ecx,dword ptr [eax]
 004EDDA1    call        dword ptr [ecx-10]
 004EDDA4    pop         esi
 004EDDA5    pop         ebx
 004EDDA6    ret
*}
end;

//004EDDA8
procedure TWinControl.WMMeasureItem(var Message:Messages.TWMMeasureItem);
begin
{*
 004EDDA8    push        ebx
 004EDDA9    push        esi
 004EDDAA    mov         ebx,edx
 004EDDAC    mov         esi,eax
 004EDDAE    mov         edx,ebx
 004EDDB0    mov         eax,dword ptr [ebx+4]
 004EDDB3    call        DoControlMsg
 004EDDB8    test        al,al
>004EDDBA    jne         004EDDC5
 004EDDBC    mov         edx,ebx
 004EDDBE    mov         eax,esi
 004EDDC0    mov         ecx,dword ptr [eax]
 004EDDC2    call        dword ptr [ecx-10]
 004EDDC5    pop         esi
 004EDDC6    pop         ebx
 004EDDC7    ret
*}
end;

//004EDDC8
procedure TWinControl.WMMouseActivate(var Message:Messages.TWMMouseActivate);
begin
{*
 004EDDC8    push        ebx
 004EDDC9    push        esi
 004EDDCA    mov         esi,edx
 004EDDCC    mov         ebx,eax
 004EDDCE    mov         edx,esi
 004EDDD0    mov         ecx,ebx
 004EDDD2    mov         eax,ebx
 004EDDD4    call        TWinControl.IsControlActivateMsg
 004EDDD9    test        al,al
>004EDDDB    je          004EDDF7
 004EDDDD    cmp         dword ptr [esi+0C],0
>004EDDE1    jne         004EDDF7
 004EDDE3    mov         eax,ebx
 004EDDE5    call        TWinControl.HandleAllocated
 004EDDEA    test        al,al
>004EDDEC    je          004EDDF7
 004EDDEE    mov         edx,esi
 004EDDF0    mov         eax,ebx
 004EDDF2    mov         ecx,dword ptr [eax]
 004EDDF4    call        dword ptr [ecx-10]
 004EDDF7    pop         esi
 004EDDF8    pop         ebx
 004EDDF9    ret
*}
end;

//004EDDFC
{*procedure TWinControl.WMEraseBkgnd(?:?);
begin
 004EDDFC    push        ebx
 004EDDFD    push        esi
 004EDDFE    push        edi
 004EDDFF    add         esp,0FFFFFFF0
 004EDE02    mov         esi,edx
 004EDE04    mov         ebx,eax
 004EDE06    call        TStyleManager.GetActiveStyle
 004EDE0B    mov         edi,eax
 004EDE0D    mov         eax,edi
 004EDE0F    mov         edx,dword ptr [eax]
 004EDE11    call        dword ptr [edx+4C];TCustomStyleServices.GetEnabled
 004EDE14    test        al,al
>004EDE16    je          004EDE21
 004EDE18    cmp         dword ptr [ebx+40],0;TWinControl.FParent:TWinControl
 004EDE1C    setne       al
>004EDE1F    jmp         004EDE23
 004EDE21    xor         eax,eax
 004EDE23    test        al,al
>004EDE25    je          004EDE30
 004EDE27    test        byte ptr [ebx+62],4;TWinControl.FEnabled:Boolean
 004EDE2B    setne       al
>004EDE2E    jmp         004EDE32
 004EDE30    xor         eax,eax
 004EDE32    test        al,al
>004EDE34    je          004EDE70
 004EDE36    mov         eax,dword ptr [ebx+40];TWinControl.FParent:TWinControl
 004EDE39    cmp         byte ptr [eax+280],0;TWinControl.FDoubleBuffered:Boolean
>004EDE40    je          004EDE4E
 004EDE42    mov         edx,dword ptr [esi+4]
 004EDE45    mov         eax,ebx
 004EDE47    call        004E3750
>004EDE4C    jmp         004EDEA6
 004EDE4E    call        TStyleManager.GetActiveStyle
 004EDE53    mov         edi,eax
 004EDE55    push        0
 004EDE57    push        0
 004EDE59    push        0
 004EDE5B    mov         eax,ebx
 004EDE5D    call        TWinControl.GetHandle
 004EDE62    mov         edx,eax
 004EDE64    mov         ecx,dword ptr [esi+4]
 004EDE67    mov         eax,edi
 004EDE69    call        TCustomStyleServices.DrawParentBackground
>004EDE6E    jmp         004EDEA6
 004EDE70    cmp         byte ptr [ebx+280],0;TWinControl.FDoubleBuffered:Boolean
>004EDE77    je          004EDE81
 004EDE79    mov         eax,dword ptr [esi+4]
 004EDE7C    cmp         eax,dword ptr [esi+8]
>004EDE7F    jne         004EDEA6
 004EDE81    mov         eax,dword ptr [ebx+1D0];TWinControl.FBrush:TBrush
 004EDE87    call        TBrush.GetHandle
 004EDE8C    push        eax
 004EDE8D    lea         edx,[esp+4]
 004EDE91    mov         eax,ebx
 004EDE93    mov         ecx,dword ptr [eax]
 004EDE95    call        dword ptr [ecx+64];TWinControl.GetClientRect
 004EDE98    lea         eax,[esp+4]
 004EDE9C    push        eax
 004EDE9D    mov         eax,dword ptr [esi+4]
 004EDEA0    push        eax
 004EDEA1    call        user32.FillRect
 004EDEA6    mov         dword ptr [esi+0C],1
 004EDEAD    add         esp,10
 004EDEB0    pop         edi
 004EDEB1    pop         esi
 004EDEB2    pop         ebx
 004EDEB3    ret
end;*}

//004EDEB4
{*procedure TWinControl.WMWindowPosChangedMsg(?:?);
begin
 004EDEB4    push        ebx
 004EDEB5    push        esi
 004EDEB6    push        edi
 004EDEB7    push        ebp
 004EDEB8    push        ecx
 004EDEB9    mov         ebp,edx
 004EDEBB    mov         edi,eax
 004EDEBD    mov         esi,dword ptr [ebp+8]
 004EDEC0    cmp         byte ptr [edi+204],0;TWinControl.FCtl3D:Boolean
>004EDEC7    je          004EDEDB
 004EDEC9    test        byte ptr [edi+60],10;TWinControl.FControlStyle:TControlStyle
>004EDECD    je          004EDEDB
 004EDECF    cmp         dword ptr [edi+40],0;TWinControl.FParent:TWinControl
>004EDED3    je          004EDEDB
 004EDED5    test        byte ptr [esi+18],8
>004EDED9    je          004EDEDF
 004EDEDB    xor         ebx,ebx
>004EDEDD    jmp         004EDEE1
 004EDEDF    mov         bl,1
 004EDEE1    test        byte ptr [esi+18],2
>004EDEE5    jne         004EDEF7
 004EDEE7    mov         eax,dword ptr [edi+278];TWinControl.FHandle:HWND
 004EDEED    push        eax
 004EDEEE    call        user32.IsWindowVisible
 004EDEF3    test        eax,eax
>004EDEF5    jne         004EDEFB
 004EDEF7    xor         eax,eax
>004EDEF9    jmp         004EDEFD
 004EDEFB    mov         al,1
 004EDEFD    mov         byte ptr [esp],al
 004EDF00    test        byte ptr [esi+18],1
>004EDF04    jne         004EDF16
 004EDF06    mov         eax,dword ptr [edi+278];TWinControl.FHandle:HWND
 004EDF0C    push        eax
 004EDF0D    call        user32.IsWindowVisible
 004EDF12    test        eax,eax
>004EDF14    jne         004EDF1A
 004EDF16    xor         eax,eax
>004EDF18    jmp         004EDF1C
 004EDF1A    mov         al,1
 004EDF1C    mov         byte ptr [esp+1],al
 004EDF20    test        bl,bl
>004EDF22    je          004EDF35
 004EDF24    movzx       eax,byte ptr [esp]
 004EDF28    or          al,byte ptr [esp+1]
>004EDF2C    je          004EDF35
 004EDF2E    mov         eax,edi
 004EDF30    call        004EFD00
 004EDF35    test        byte ptr [edi+65],2;TWinControl.FAlign:TAlign
>004EDF39    jne         004EDF42
 004EDF3B    mov         eax,edi
 004EDF3D    call        004F01DC
 004EDF42    mov         edx,ebp
 004EDF44    mov         eax,edi
 004EDF46    call        TControl.WMWindowPosChangedMsg
 004EDF4B    test        bl,bl
>004EDF4D    je          004EDF66
 004EDF4F    movzx       eax,byte ptr [esp]
 004EDF53    or          al,byte ptr [esp+1]
>004EDF57    jne         004EDF5F
 004EDF59    test        byte ptr [esi+18],0C0
>004EDF5D    je          004EDF66
 004EDF5F    mov         eax,edi
 004EDF61    call        004EFD00
 004EDF66    pop         edx
 004EDF67    pop         ebp
 004EDF68    pop         edi
 004EDF69    pop         esi
 004EDF6A    pop         ebx
 004EDF6B    ret
end;*}

//004EDF6C
procedure TWinControl.WMWindowPosChanging(var Message:Messages.TWMWindowPosChanging);
begin
{*
 004EDF6C    push        ebx
 004EDF6D    push        esi
 004EDF6E    push        edi
 004EDF6F    mov         edi,edx
 004EDF71    mov         ebx,eax
 004EDF73    movzx       eax,word ptr ds:[4EDFB8]
 004EDF7A    and         ax,word ptr [ebx+1C]
 004EDF7E    movzx       edx,word ptr ds:[4EDFBC]
 004EDF85    cmp         dx,ax
>004EDF88    jne         004EDFAA
 004EDF8A    mov         eax,dword ptr [edi+8]
 004EDF8D    mov         esi,eax
 004EDF8F    test        byte ptr [esi+18],1
>004EDF93    jne         004EDFAA
 004EDF95    lea         ecx,[esi+14]
 004EDF98    lea         edx,[esi+10]
 004EDF9B    mov         eax,ebx
 004EDF9D    call        TControl.CheckNewSize
 004EDFA2    test        al,al
>004EDFA4    jne         004EDFAA
 004EDFA6    or          dword ptr [esi+18],1
 004EDFAA    mov         edx,edi
 004EDFAC    mov         eax,ebx
 004EDFAE    mov         ecx,dword ptr [eax]
 004EDFB0    call        dword ptr [ecx-10]
 004EDFB3    pop         edi
 004EDFB4    pop         esi
 004EDFB5    pop         ebx
 004EDFB6    ret
*}
end;

//004EDFC0
{*procedure TWinControl.WMSize(?:?);
begin
 004EDFC0    push        ebx
 004EDFC1    push        esi
 004EDFC2    mov         ebx,edx
 004EDFC4    mov         esi,eax
 004EDFC6    mov         eax,esi
 004EDFC8    call        004F01DC
 004EDFCD    mov         eax,esi
 004EDFCF    call        004EA028
 004EDFD4    mov         edx,ebx
 004EDFD6    mov         eax,esi
 004EDFD8    mov         ecx,dword ptr [eax]
 004EDFDA    call        dword ptr [ecx-10];TWinControl.DefaultHandler
 004EDFDD    xor         ebx,ebx
 004EDFDF    mov         eax,dword ptr [esi+40];TWinControl.FParent:TWinControl
 004EDFE2    test        eax,eax
>004EDFE4    je          004EDFF7
 004EDFE6    cmp         dword ptr [eax+1B8],0;TWinControl.FAlignControlList:TList
>004EDFED    je          004EDFF7
 004EDFEF    mov         ebx,dword ptr [eax+1B8];TWinControl.FAlignControlList:TList
>004EDFF5    jmp         004EE003
 004EDFF7    mov         eax,dword ptr [esi+1B8];TWinControl.FAlignControlList:TList
 004EDFFD    test        eax,eax
>004EDFFF    je          004EE003
 004EE001    mov         ebx,eax
 004EE003    test        ebx,ebx
>004EE005    je          004EE01F
 004EE007    mov         edx,esi
 004EE009    mov         eax,ebx
 004EE00B    call        TList.IndexOf
 004EE010    inc         eax
>004EE011    jne         004EE039
 004EE013    mov         edx,esi
 004EE015    mov         eax,ebx
 004EE017    call        TList.Add
 004EE01C    pop         esi
 004EE01D    pop         ebx
 004EE01E    ret
 004EE01F    xor         edx,edx
 004EE021    mov         eax,esi
 004EE023    call        TWinControl.AlignControl
 004EE028    test        byte ptr [esi+1C],1;TWinControl.FComponentState:TComponentState
>004EE02C    jne         004EE039
 004EE02E    mov         eax,esi
 004EE030    mov         si,0FFCF
 004EE034    call        @CallDynaInst;TControl.sub_004E5FD0
 004EE039    pop         esi
 004EE03A    pop         ebx
 004EE03B    ret
end;*}

//004EE03C
procedure TWinControl.WMMove;
begin
{*
 004EE03C    push        ebx
 004EE03D    mov         ebx,eax
 004EE03F    mov         eax,ebx
 004EE041    mov         ecx,dword ptr [eax]
 004EE043    call        dword ptr [ecx-10];TWinControl.DefaultHandler
 004EE046    mov         eax,ebx
 004EE048    call        004F01DC
 004EE04D    mov         eax,ebx
 004EE04F    call        004EA028
 004EE054    pop         ebx
 004EE055    ret
*}
end;

//004EE058
{*procedure TWinControl.WMSetCursor(?:?);
begin
 004EE058    push        ebx
 004EE059    push        esi
 004EE05A    push        edi
 004EE05B    add         esp,0FFFFFFF0
 004EE05E    mov         esi,edx
 004EE060    mov         ebx,eax
 004EE062    mov         eax,dword ptr [esi+4]
 004EE065    cmp         eax,dword ptr [ebx+278];TWinControl.FHandle:HWND
>004EE06B    jne         004EE153
 004EE071    movzx       eax,word ptr [esi+8]
 004EE075    sub         ax,0FFFFFFFE
>004EE079    je          004EE111
 004EE07F    sub         ax,3
>004EE083    jne         004EE153
 004EE089    mov         eax,[007C4E78];^Screen:TScreen
 004EE08E    mov         eax,dword ptr [eax]
 004EE090    movzx       edi,word ptr [eax+54];TScreen.FCursor:TCursor
 004EE094    test        di,di
>004EE097    jne         004EE0EE
 004EE099    push        esp
 004EE09A    call        user32.GetCursorPos
 004EE09F    push        0
 004EE0A1    push        0
 004EE0A3    lea         ecx,[esp+10]
 004EE0A7    lea         edx,[esp+8]
 004EE0AB    mov         eax,ebx
 004EE0AD    call        TControl.ScreenToClient
 004EE0B2    lea         edx,[esp+10]
 004EE0B6    xor         ecx,ecx
 004EE0B8    mov         eax,ebx
 004EE0BA    call        TWinControl.ControlAtPos
 004EE0BF    test        eax,eax
>004EE0C1    je          004EE0D6
 004EE0C3    test        byte ptr [eax+1C],10;TControl.FComponentState:TComponentState
>004EE0C7    je          004EE0CF
 004EE0C9    mov         di,0FFFE
>004EE0CD    jmp         004EE0D6
 004EE0CF    movzx       edi,word ptr [eax+88];TControl.FCursor:TCursor
 004EE0D6    test        di,di
>004EE0D9    jne         004EE0EE
 004EE0DB    test        byte ptr [ebx+1C],10;TWinControl.FComponentState:TComponentState
>004EE0DF    je          004EE0E7
 004EE0E1    mov         di,0FFFE
>004EE0E5    jmp         004EE0EE
 004EE0E7    movzx       edi,word ptr [ebx+88];TWinControl.FCursor:TCursor
 004EE0EE    test        di,di
>004EE0F1    je          004EE153
 004EE0F3    movsx       edx,di
 004EE0F6    mov         eax,[007C4E78];^Screen:TScreen
 004EE0FB    mov         eax,dword ptr [eax]
 004EE0FD    call        TScreen.GetCursors
 004EE102    push        eax
 004EE103    call        user32.SetCursor
 004EE108    mov         dword ptr [esi+0C],1
>004EE10F    jmp         004EE15C
 004EE111    cmp         word ptr [esi+0A],201
>004EE117    jne         004EE153
 004EE119    mov         eax,[007C4A18];^Application:TApplication
 004EE11E    mov         eax,dword ptr [eax]
 004EE120    cmp         dword ptr [eax+188],0;TApplication.FHandle:HWND
>004EE127    je          004EE153
 004EE129    mov         eax,[007C4A18];^Application:TApplication
 004EE12E    mov         eax,dword ptr [eax]
 004EE130    mov         eax,dword ptr [eax+188];TApplication.FHandle:HWND
 004EE136    push        eax
 004EE137    call        user32.GetLastActivePopup
 004EE13C    mov         edi,eax
 004EE13E    call        user32.GetForegroundWindow
 004EE143    cmp         edi,eax
>004EE145    je          004EE153
 004EE147    mov         eax,[007C4A18];^Application:TApplication
 004EE14C    mov         eax,dword ptr [eax]
 004EE14E    call        TApplication.BringToFront
 004EE153    mov         edx,esi
 004EE155    mov         eax,ebx
 004EE157    mov         ecx,dword ptr [eax]
 004EE159    call        dword ptr [ecx-10];TWinControl.DefaultHandler
 004EE15C    add         esp,10
 004EE15F    pop         edi
 004EE160    pop         esi
 004EE161    pop         ebx
 004EE162    ret
end;*}

//004EE164
procedure TWinControl.WMSetFocus(var Message:Messages.TWMSetFocus);
begin
{*
 004EE164    push        ebx
 004EE165    mov         ebx,eax
 004EE167    mov         eax,ebx
 004EE169    mov         ecx,dword ptr [eax]
 004EE16B    call        dword ptr [ecx-10]
 004EE16E    mov         eax,ebx
 004EE170    call        004EE2D0
 004EE175    mov         eax,ebx
 004EE177    mov         edx,dword ptr [eax]
 004EE179    call        dword ptr [edx+100]
 004EE17F    xor         edx,edx
 004EE181    mov         eax,ebx
 004EE183    call        004F2058
 004EE188    pop         ebx
 004EE189    ret
*}
end;

//004EE18C
procedure TWinControl.WMKillFocus;
begin
{*
 004EE18C    push        ebx
 004EE18D    mov         ebx,eax
 004EE18F    mov         eax,ebx
 004EE191    mov         ecx,dword ptr [eax]
 004EE193    call        dword ptr [ecx-10];TWinControl.DefaultHandler
 004EE196    mov         eax,ebx
 004EE198    call        004EE3C0
 004EE19D    mov         dl,1
 004EE19F    mov         eax,ebx
 004EE1A1    call        004F2058
 004EE1A6    pop         ebx
 004EE1A7    ret
*}
end;

//004EE1A8
procedure TWinControl.sub_004EE1A8;
begin
{*
 004EE1A8    mov         byte ptr [eax+281],1;TWinControl.FInImeComposition:Boolean
 004EE1AF    mov         ecx,dword ptr [eax]
 004EE1B1    call        dword ptr [ecx-10];TWinControl.DefaultHandler
 004EE1B4    ret
*}
end;

//004EE1B8
{*procedure TWinControl.sub_004EE1B8(?:?);
begin
 004EE1B8    push        ebx
 004EE1B9    push        esi
 004EE1BA    mov         ebx,edx
 004EE1BC    mov         esi,eax
 004EE1BE    mov         eax,[007C4A18];^Application:TApplication
 004EE1C3    cmp         dword ptr [eax],0
>004EE1C6    je          004EE20C
 004EE1C8    mov         eax,dword ptr [ebx+8]
 004EE1CB    push        eax
 004EE1CC    mov         eax,dword ptr [ebx+4]
 004EE1CF    push        eax
 004EE1D0    mov         eax,dword ptr [ebx]
 004EE1D2    push        eax
 004EE1D3    mov         eax,dword ptr [esi+278];TWinControl.FHandle:HWND
 004EE1D9    push        eax
 004EE1DA    mov         eax,dword ptr [esi+274];TWinControl.FDefWndProc:Pointer
 004EE1E0    push        eax
 004EE1E1    call        user32.CallWindowProcW
 004EE1E6    mov         dword ptr [ebx+0C],eax
 004EE1E9    mov         eax,dword ptr [ebx+8]
 004EE1EC    push        eax
 004EE1ED    mov         eax,dword ptr [ebx+4]
 004EE1F0    push        eax
 004EE1F1    push        0B056
 004EE1F6    mov         eax,[007C4A18];^Application:TApplication
 004EE1FB    mov         eax,dword ptr [eax]
 004EE1FD    mov         eax,dword ptr [eax+188];TApplication.FHandle:HWND
 004EE203    push        eax
 004EE204    call        user32.PostMessageW
 004EE209    pop         esi
 004EE20A    pop         ebx
 004EE20B    ret
 004EE20C    mov         eax,dword ptr [esi+40];TWinControl.FParent:TWinControl
 004EE20F    test        eax,eax
>004EE211    je          004EE220
 004EE213    mov         edx,dword ptr [eax+40];TWinControl.FParent:TWinControl
 004EE216    test        edx,edx
>004EE218    je          004EE220
 004EE21A    mov         eax,edx
 004EE21C    test        eax,eax
>004EE21E    jne         004EE213
 004EE220    test        eax,eax
>004EE222    je          004EE235
 004EE224    mov         edx,dword ptr [ebx+8]
 004EE227    push        edx
 004EE228    mov         ecx,dword ptr [ebx+4]
 004EE22B    mov         edx,0B056
 004EE230    call        TControl.Perform
 004EE235    pop         esi
 004EE236    pop         ebx
 004EE237    ret
end;*}

//004EE238
procedure TWinControl.sub_004EE238;
begin
{*
 004EE238    mov         byte ptr [eax+281],0;TWinControl.FInImeComposition:Boolean
 004EE23F    mov         ecx,dword ptr [eax]
 004EE241    call        dword ptr [ecx-10];TWinControl.DefaultHandler
 004EE244    ret
*}
end;

//004EE248
procedure sub_004EE248;
begin
{*
 004EE248    push        ebp
 004EE249    mov         ebp,esp
 004EE24B    add         esp,0FFFFFFF8
 004EE24E    mov         dword ptr [ebp-4],eax
 004EE251    mov         eax,dword ptr [ebp-4]
 004EE254    cmp         dword ptr [eax+40],0;TStringGrid.FParent:TWinControl
>004EE258    je          004EE2C9
 004EE25A    mov         byte ptr [ebp-5],0
 004EE25E    mov         eax,dword ptr [ebp-4]
 004EE261    mov         eax,dword ptr [eax+1B8];TStringGrid.FAlignControlList:TList
 004EE267    test        eax,eax
>004EE269    je          004EE28A
 004EE26B    mov         edx,dword ptr [ebp-4]
 004EE26E    mov         edx,dword ptr [edx+40];TStringGrid.FParent:TWinControl
 004EE271    cmp         dword ptr [edx+1B8],0;TWinControl.FAlignControlList:TList
>004EE278    jne         004EE28A
 004EE27A    mov         edx,dword ptr [ebp-4]
 004EE27D    mov         edx,dword ptr [edx+40];TStringGrid.FParent:TWinControl
 004EE280    mov         dword ptr [edx+1B8],eax;TWinControl.FAlignControlList:TList
 004EE286    mov         byte ptr [ebp-5],1
 004EE28A    xor         eax,eax
 004EE28C    push        ebp
 004EE28D    push        4EE2C2
 004EE292    push        dword ptr fs:[eax]
 004EE295    mov         dword ptr fs:[eax],esp
 004EE298    mov         eax,dword ptr [ebp-4]
 004EE29B    call        004E5FB8
 004EE2A0    xor         eax,eax
 004EE2A2    pop         edx
 004EE2A3    pop         ecx
 004EE2A4    pop         ecx
 004EE2A5    mov         dword ptr fs:[eax],edx
 004EE2A8    push        4EE2C9
 004EE2AD    cmp         byte ptr [ebp-5],0
>004EE2B1    je          004EE2C1
 004EE2B3    mov         eax,dword ptr [ebp-4]
 004EE2B6    mov         eax,dword ptr [eax+40];TStringGrid.FParent:TWinControl
 004EE2B9    xor         edx,edx
 004EE2BB    mov         dword ptr [eax+1B8],edx;TWinControl.FAlignControlList:TList
 004EE2C1    ret
>004EE2C2    jmp         @HandleFinally
>004EE2C7    jmp         004EE2AD
 004EE2C9    pop         ecx
 004EE2CA    pop         ecx
 004EE2CB    pop         ebp
 004EE2CC    ret
*}
end;

//004EE2D0
procedure sub_004EE2D0(?:TCustomCombo);
begin
{*
 004EE2D0    push        ebp
 004EE2D1    mov         ebp,esp
 004EE2D3    push        0
 004EE2D5    push        ebx
 004EE2D6    push        esi
 004EE2D7    push        edi
 004EE2D8    mov         esi,eax
 004EE2DA    xor         eax,eax
 004EE2DC    push        ebp
 004EE2DD    push        4EE3B0
 004EE2E2    push        dword ptr fs:[eax]
 004EE2E5    mov         dword ptr fs:[eax],esp
 004EE2E8    mov         eax,[007C4EF4];^gvar_007C7CB8:Cardinal
 004EE2ED    cmp         byte ptr [eax+0C],0;TSysLocale.FarEast:Boolean
>004EE2F1    je          004EE39A
 004EE2F7    cmp         dword ptr [esi+1E0],0
>004EE2FE    je          004EE387
 004EE304    lea         edx,[ebp-4]
 004EE307    mov         eax,[007C4E78];^Screen:TScreen
 004EE30C    mov         eax,dword ptr [eax]
 004EE30E    call        005C8638
 004EE313    mov         edx,dword ptr [ebp-4]
 004EE316    mov         eax,dword ptr [esi+1E0]
 004EE31C    call        AnsiCompareText
 004EE321    test        eax,eax
>004EE323    je          004EE387
 004EE325    mov         eax,[007C4E78];^Screen:TScreen
 004EE32A    mov         eax,dword ptr [eax]
 004EE32C    call        005C83F4
 004EE331    mov         edx,dword ptr [eax]
 004EE333    call        dword ptr [edx+14]
 004EE336    test        eax,eax
>004EE338    je          004EE387
 004EE33A    mov         eax,[007C4E78];^Screen:TScreen
 004EE33F    mov         eax,dword ptr [eax]
 004EE341    mov         edi,dword ptr [eax+4C];TScreen.FDefaultKbLayout:HKL
 004EE344    cmp         byte ptr [esi+1DC],0
>004EE34B    je          004EE37F
 004EE34D    mov         eax,[007C4E78];^Screen:TScreen
 004EE352    mov         eax,dword ptr [eax]
 004EE354    call        005C83F4
 004EE359    mov         edx,dword ptr [esi+1E0]
 004EE35F    mov         ecx,dword ptr [eax]
 004EE361    call        dword ptr [ecx+58]
 004EE364    mov         ebx,eax
 004EE366    test        ebx,ebx
>004EE368    jl          004EE37F
 004EE36A    mov         eax,[007C4E78];^Screen:TScreen
 004EE36F    mov         eax,dword ptr [eax]
 004EE371    call        005C83F4
 004EE376    mov         edx,ebx
 004EE378    mov         ecx,dword ptr [eax]
 004EE37A    call        dword ptr [ecx+18]
 004EE37D    mov         edi,eax
 004EE37F    push        1
 004EE381    push        edi
 004EE382    call        user32.ActivateKeyboardLayout
 004EE387    mov         eax,esi
 004EE389    call        TWinControl.GetHandle
 004EE38E    movzx       edx,byte ptr [esi+1DC]
 004EE395    call        004F6584
 004EE39A    xor         eax,eax
 004EE39C    pop         edx
 004EE39D    pop         ecx
 004EE39E    pop         ecx
 004EE39F    mov         dword ptr fs:[eax],edx
 004EE3A2    push        4EE3B7
 004EE3A7    lea         eax,[ebp-4]
 004EE3AA    call        @UStrClr
 004EE3AF    ret
>004EE3B0    jmp         @HandleFinally
>004EE3B5    jmp         004EE3A7
 004EE3B7    pop         edi
 004EE3B8    pop         esi
 004EE3B9    pop         ebx
 004EE3BA    pop         ecx
 004EE3BB    pop         ebp
 004EE3BC    ret
*}
end;

//004EE3C0
procedure sub_004EE3C0(?:TWinControl);
begin
{*
 004EE3C0    push        ebp
 004EE3C1    mov         ebp,esp
 004EE3C3    push        0
 004EE3C5    push        ebx
 004EE3C6    mov         ebx,eax
 004EE3C8    xor         eax,eax
 004EE3CA    push        ebp
 004EE3CB    push        4EE44D
 004EE3D0    push        dword ptr fs:[eax]
 004EE3D3    mov         dword ptr fs:[eax],esp
 004EE3D6    mov         eax,[007C4EF4];^gvar_007C7CB8:Cardinal
 004EE3DB    cmp         byte ptr [eax+0C],0;TSysLocale.FarEast:Boolean
>004EE3DF    je          004EE437
 004EE3E1    cmp         dword ptr [ebx+1E0],0;TWinControl.FImeName:TImeName
>004EE3E8    je          004EE41D
 004EE3EA    lea         edx,[ebp-4]
 004EE3ED    mov         eax,[007C4E78];^Screen:TScreen
 004EE3F2    mov         eax,dword ptr [eax]
 004EE3F4    call        005C8638
 004EE3F9    mov         edx,dword ptr [ebp-4]
 004EE3FC    mov         eax,dword ptr [ebx+1E0];TWinControl.FImeName:TImeName
 004EE402    call        AnsiCompareText
 004EE407    test        eax,eax
>004EE409    je          004EE41D
 004EE40B    push        1
 004EE40D    mov         eax,[007C4E78];^Screen:TScreen
 004EE412    mov         eax,dword ptr [eax]
 004EE414    mov         eax,dword ptr [eax+4C];TScreen.FDefaultKbLayout:HKL
 004EE417    push        eax
 004EE418    call        user32.ActivateKeyboardLayout
 004EE41D    cmp         byte ptr [ebx+1DC],0;TWinControl.FImeMode:TImeMode
>004EE424    jne         004EE437
 004EE426    push        10
 004EE428    push        0
 004EE42A    mov         eax,ebx
 004EE42C    call        TWinControl.GetHandle
 004EE431    push        eax
 004EE432    call        004D50B0
 004EE437    xor         eax,eax
 004EE439    pop         edx
 004EE43A    pop         ecx
 004EE43B    pop         ecx
 004EE43C    mov         dword ptr fs:[eax],edx
 004EE43F    push        4EE454
 004EE444    lea         eax,[ebp-4]
 004EE447    call        @UStrClr
 004EE44C    ret
>004EE44D    jmp         @HandleFinally
>004EE452    jmp         004EE444
 004EE454    pop         ebx
 004EE455    pop         ecx
 004EE456    pop         ebp
 004EE457    ret
*}
end;

//004EE458
{*procedure TWinControl.sub_004EE458(?:?);
begin
 004EE458    xchg        eax,edx
 004EE459    mov         ecx,dword ptr [eax]
 004EE45B    call        dword ptr [ecx+8C]
 004EE461    ret
end;*}

//004EE464
procedure TWinControl.sub_004EE464;
begin
{*
 004EE464    ret
*}
end;

//004EE468
procedure TWinControl.DoExit;
begin
{*
 004EE468    push        ebx
 004EE469    cmp         word ptr [eax+222],0
>004EE471    je          004EE483
 004EE473    mov         ebx,eax
 004EE475    mov         edx,eax
 004EE477    mov         eax,dword ptr [ebx+224]
 004EE47D    call        dword ptr [ebx+220]
 004EE483    pop         ebx
 004EE484    ret
*}
end;

//004EE488
procedure TWinControl.sub_004EE488;
begin
{*
 004EE488    push        ebx
 004EE489    cmp         word ptr [eax+22A],0;TWinControl.?f22A:word
>004EE491    je          004EE4A3
 004EE493    mov         ebx,eax
 004EE495    mov         edx,eax
 004EE497    mov         eax,dword ptr [ebx+22C];TWinControl.?f22C:dword
 004EE49D    call        dword ptr [ebx+228];TWinControl.FOnExit
 004EE4A3    pop         ebx
 004EE4A4    ret
*}
end;

//004EE4A8
procedure TWinControl.DockDrop(Source:TDragDockObject; X:Integer; Y:Integer);
begin
{*
 004EE4A8    push        ebp
 004EE4A9    mov         ebp,esp
 004EE4AB    push        ebx
 004EE4AC    push        esi
 004EE4AD    push        edi
 004EE4AE    mov         edi,ecx
 004EE4B0    mov         esi,edx
 004EE4B2    mov         ebx,eax
 004EE4B4    movzx       eax,di
 004EE4B7    movzx       edx,word ptr [ebp+8]
 004EE4BB    shl         edx,10
 004EE4BE    or          eax,edx
 004EE4C0    push        eax
 004EE4C1    mov         ecx,esi
 004EE4C3    mov         edx,0B038
 004EE4C8    mov         eax,ebx
 004EE4CA    call        TControl.Perform
 004EE4CF    test        eax,eax
>004EE4D1    jl          004EE4F2
 004EE4D3    cmp         word ptr [ebx+212],0;TWinControl.?f212:word
>004EE4DB    je          004EE4F2
 004EE4DD    push        edi
 004EE4DE    mov         eax,dword ptr [ebp+8]
 004EE4E1    push        eax
 004EE4E2    mov         ecx,esi
 004EE4E4    mov         edx,ebx
 004EE4E6    mov         eax,dword ptr [ebx+214];TWinControl.?f214:dword
 004EE4EC    call        dword ptr [ebx+210];TWinControl.FOnDockDrop
 004EE4F2    pop         edi
 004EE4F3    pop         esi
 004EE4F4    pop         ebx
 004EE4F5    pop         ebp
 004EE4F6    ret         4
*}
end;

//004EE4FC
{*procedure TWinControl.sub_004EE4FC(?:?; ?:?; ?:?; ?:?);
begin
 004EE4FC    push        ebp
 004EE4FD    mov         ebp,esp
 004EE4FF    push        ebx
 004EE500    cmp         word ptr [eax+21A],0;TWinControl.?f21A:word
>004EE508    je          004EE52A
 004EE50A    push        ecx
 004EE50B    mov         ecx,dword ptr [ebp+10]
 004EE50E    push        ecx
 004EE50F    movzx       ecx,byte ptr [ebp+0C]
 004EE513    push        ecx
 004EE514    mov         ecx,dword ptr [ebp+8]
 004EE517    push        ecx
 004EE518    mov         ebx,eax
 004EE51A    mov         ecx,edx
 004EE51C    mov         edx,eax
 004EE51E    mov         eax,dword ptr [ebx+21C];TWinControl.?f21C:dword
 004EE524    call        dword ptr [ebx+218];TWinControl.FOnDockOver
 004EE52A    pop         ebx
 004EE52B    pop         ebp
 004EE52C    ret         0C
end;*}

//004EE530
{*procedure TWinControl.sub_004EE530(?:?; ?:?; ?:?; ?:?; ?:?);
begin
 004EE530    push        ebp
 004EE531    mov         ebp,esp
 004EE533    add         esp,0FFFFFFF8
 004EE536    push        esi
 004EE537    push        edi
 004EE538    mov         dword ptr [ebp-8],ecx
 004EE53B    mov         dword ptr [ebp-4],edx
 004EE53E    mov         edi,eax
 004EE540    mov         edx,dword ptr [ebp-4]
 004EE543    mov         eax,edi
 004EE545    mov         si,0FFD1
 004EE549    call        @CallDynaInst;TControl.sub_004E78AC
 004EE54E    mov         eax,dword ptr [ebp+10]
 004EE551    push        eax
 004EE552    movzx       eax,byte ptr [ebp+0C]
 004EE556    push        eax
 004EE557    mov         eax,dword ptr [ebp+8]
 004EE55A    push        eax
 004EE55B    mov         ecx,dword ptr [ebp-8]
 004EE55E    mov         edx,dword ptr [ebp-4]
 004EE561    mov         eax,edi
 004EE563    mov         si,0FFC1
 004EE567    call        @CallDynaInst;TWinControl.sub_004EE4FC
 004EE56C    pop         edi
 004EE56D    pop         esi
 004EE56E    pop         ecx
 004EE56F    pop         ecx
 004EE570    pop         ebp
 004EE571    ret         0C
end;*}

//004EE574
{*procedure TWinControl.sub_004EE574(?:?; ?:?);
begin
 004EE574    push        ebx
 004EE575    push        esi
 004EE576    push        edi
 004EE577    push        ecx
 004EE578    mov         edi,ecx
 004EE57A    mov         esi,edx
 004EE57C    mov         ebx,eax
 004EE57E    mov         byte ptr [esp],1
 004EE582    cmp         word ptr [ebx+252],0;TWinControl.?f252:word
>004EE58A    je          004EE5A2
 004EE58C    push        esi
 004EE58D    lea         eax,[esp+4]
 004EE591    push        eax
 004EE592    mov         ecx,edi
 004EE594    mov         edx,ebx
 004EE596    mov         eax,dword ptr [ebx+254];TWinControl.?f254:dword
 004EE59C    call        dword ptr [ebx+250];TWinControl.FOnUnDock
 004EE5A2    cmp         byte ptr [esp],0
>004EE5A6    je          004EE5BB
 004EE5A8    push        edi
 004EE5A9    mov         ecx,esi
 004EE5AB    mov         edx,0B039
 004EE5B0    mov         eax,ebx
 004EE5B2    call        TControl.Perform
 004EE5B7    test        eax,eax
>004EE5B9    je          004EE5BF
 004EE5BB    xor         eax,eax
>004EE5BD    jmp         004EE5C1
 004EE5BF    mov         al,1
 004EE5C1    mov         byte ptr [esp],al
 004EE5C4    movzx       eax,byte ptr [esp]
 004EE5C8    pop         edx
 004EE5C9    pop         edi
 004EE5CA    pop         esi
 004EE5CB    pop         ebx
 004EE5CC    ret
end;*}

//004EE5D0
procedure TWinControl.ReloadDockedControl(const AControlName:UnicodeString; var AControl:TControl);
begin
{*
 004EE5D0    push        ebx
 004EE5D1    push        esi
 004EE5D2    push        edi
 004EE5D3    mov         edi,ecx
 004EE5D5    mov         esi,edx
 004EE5D7    mov         ebx,eax
 004EE5D9    mov         edx,esi
 004EE5DB    mov         eax,dword ptr [ebx+4]
 004EE5DE    call        TComponent.FindComponent
 004EE5E3    mov         edx,dword ptr ds:[4DC470];TControl
 004EE5E9    call        @AsClass
 004EE5EE    mov         dword ptr [edi],eax
 004EE5F0    pop         edi
 004EE5F1    pop         esi
 004EE5F2    pop         ebx
 004EE5F3    ret
*}
end;

//004EE5F4
function TWinControl.GetDockClientCount:Integer;
begin
{*
 004EE5F4    mov         edx,dword ptr [eax+1D4]
 004EE5FA    test        edx,edx
>004EE5FC    je          004EE602
 004EE5FE    mov         eax,dword ptr [edx+8]
 004EE601    ret
 004EE602    xor         eax,eax
 004EE604    ret
*}
end;

//004EE608
function TWinControl.GetDockClients(Index:Integer):TControl;
begin
{*
 004EE608    push        ebx
 004EE609    push        esi
 004EE60A    push        edi
 004EE60B    mov         edi,edx
 004EE60D    mov         ebx,eax
 004EE60F    mov         esi,dword ptr [ebx+1D4];TWinControl.FDockClients:TList
 004EE615    test        esi,esi
>004EE617    je          004EE624
 004EE619    mov         edx,edi
 004EE61B    mov         eax,esi
 004EE61D    call        TList.Get
>004EE622    jmp         004EE626
 004EE624    xor         eax,eax
 004EE626    pop         edi
 004EE627    pop         esi
 004EE628    pop         ebx
 004EE629    ret
*}
end;

//004EE62C
{*procedure TWinControl.sub_004EE62C(?:?; ?:?; ?:?; ?:?);
begin
 004EE62C    push        ebp
 004EE62D    mov         ebp,esp
 004EE62F    add         esp,0FFFFFFF8
 004EE632    push        ebx
 004EE633    push        esi
 004EE634    push        edi
 004EE635    mov         esi,dword ptr [ebp+0C]
 004EE638    lea         edi,[ebp-8]
 004EE63B    movs        dword ptr [edi],dword ptr [esi]
 004EE63C    movs        dword ptr [edi],dword ptr [esi]
 004EE63D    mov         esi,ecx
 004EE63F    mov         edi,edx
 004EE641    mov         ebx,eax
 004EE643    push        esi
 004EE644    mov         eax,ebx
 004EE646    call        TWinControl.GetHandle
 004EE64B    push        eax
 004EE64C    call        user32.GetWindowRect
 004EE651    mov         eax,esi
 004EE653    mov         ecx,0A
 004EE658    mov         edx,0A
 004EE65D    call        InflateRect
 004EE662    cmp         word ptr [ebx+232],0;TWinControl.?f232:word
>004EE66A    je          004EE685
 004EE66C    push        esi
 004EE66D    lea         eax,[ebp-8]
 004EE670    push        eax
 004EE671    mov         eax,dword ptr [ebp+8]
 004EE674    push        eax
 004EE675    mov         ecx,edi
 004EE677    mov         edx,ebx
 004EE679    mov         eax,dword ptr [ebx+234];TWinControl.?f234:dword
 004EE67F    call        dword ptr [ebx+230];TWinControl.FOnGetSiteInfo
 004EE685    pop         edi
 004EE686    pop         esi
 004EE687    pop         ebx
 004EE688    pop         ecx
 004EE689    pop         ecx
 004EE68A    pop         ebp
 004EE68B    ret         8
end;*}

//004EE690
{*function sub_004EE690(?:TWinControl):?;
begin
 004EE690    push        ebx
 004EE691    push        esi
 004EE692    push        edi
 004EE693    mov         esi,eax
 004EE695    mov         eax,esi
 004EE697    call        TWinControl.GetDockClientCount
 004EE69C    mov         edi,eax
 004EE69E    test        edi,edi
>004EE6A0    jle         004EE6C4
 004EE6A2    mov         ebx,edi
 004EE6A4    dec         ebx
 004EE6A5    cmp         ebx,0
>004EE6A8    jl          004EE6C4
 004EE6AA    mov         edx,ebx
 004EE6AC    mov         eax,dword ptr [esi+1D4]
 004EE6B2    call        TList.Get
 004EE6B7    cmp         byte ptr [eax+69],0
>004EE6BB    jne         004EE6BE
 004EE6BD    dec         edi
 004EE6BE    dec         ebx
 004EE6BF    cmp         ebx,0FFFFFFFF
>004EE6C2    jne         004EE6AA
 004EE6C4    mov         eax,edi
 004EE6C6    pop         edi
 004EE6C7    pop         esi
 004EE6C8    pop         ebx
 004EE6C9    ret
end;*}

//004EE6CC
procedure TWinControl.sub_004EE6CC;
begin
{*
 004EE6CC    ret
*}
end;

//004EE6D0
{*procedure TWinControl.sub_004EE6D0(?:?);
begin
 004EE6D0    push        ebx
 004EE6D1    push        esi
 004EE6D2    mov         esi,edx
 004EE6D4    mov         ebx,eax
 004EE6D6    cmp         dword ptr [ebx+1D8],0;TWinControl.FDockManager:IDockManager
>004EE6DD    jne         004EE70F
 004EE6DF    cmp         byte ptr [ebx+207],0;TWinControl.FDockSite:Boolean
>004EE6E6    je          004EE70F
 004EE6E8    cmp         byte ptr [ebx+206],0;TWinControl.FUseDockManager:Boolean
>004EE6EF    je          004EE70F
 004EE6F1    mov         ecx,ebx
 004EE6F3    mov         dl,1
 004EE6F5    mov         eax,[007A11A4];^gvar_004E15D8
 004EE6FA    call        dword ptr [eax+44]
 004EE6FD    mov         edx,eax
 004EE6FF    test        edx,edx
>004EE701    je          004EE706
 004EE703    sub         edx,0FFFFFF88
 004EE706    mov         eax,esi
 004EE708    call        @IntfCopy
>004EE70D    jmp         004EE71C
 004EE70F    mov         eax,esi
 004EE711    mov         edx,dword ptr [ebx+1D8];TWinControl.FDockManager:IDockManager
 004EE717    call        @IntfCopy
 004EE71C    cmp         byte ptr [ebx+280],0;TWinControl.FDoubleBuffered:Boolean
>004EE723    jne         004EE72E
 004EE725    cmp         dword ptr [esi],0
>004EE728    jne         004EE72E
 004EE72A    xor         edx,edx
>004EE72C    jmp         004EE730
 004EE72E    mov         dl,1
 004EE730    mov         eax,ebx
 004EE732    call        TWinControl.SetDoubleBuffered
 004EE737    pop         esi
 004EE738    pop         ebx
 004EE739    ret
end;*}

//004EE73C
procedure TWinControl.SetDesignVisible(Value:Boolean);
begin
{*
 004EE73C    push        ebx
 004EE73D    mov         ebx,eax
 004EE73F    test        byte ptr [ebx+1C],10;TWinControl.FComponentState:TComponentState
>004EE743    je          004EE76D
 004EE745    test        byte ptr [ebx+65],8;TWinControl.FAlign:TAlign
 004EE749    setne       al
 004EE74C    xor         al,1
 004EE74E    cmp         dl,al
>004EE750    je          004EE76D
 004EE752    test        dl,dl
>004EE754    jne         004EE75F
 004EE756    or          dword ptr [ebx+64],800;TWinControl.FControlState:TControlState
>004EE75D    jmp         004EE766
 004EE75F    and         dword ptr [ebx+64],0FFFFF7FF;TWinControl.FControlState:TControlState
 004EE766    mov         eax,ebx
 004EE768    call        004EC3A0
 004EE76D    pop         ebx
 004EE76E    ret
*}
end;

//004EE770
procedure TGroupBox.SetDockSite(Value:Boolean);
begin
{*
 004EE770    push        ebp
 004EE771    mov         ebp,esp
 004EE773    push        0
 004EE775    push        ebx
 004EE776    push        esi
 004EE777    push        edi
 004EE778    mov         ebx,edx
 004EE77A    mov         edi,eax
 004EE77C    xor         eax,eax
 004EE77E    push        ebp
 004EE77F    push        4EE818
 004EE784    push        dword ptr fs:[eax]
 004EE787    mov         dword ptr fs:[eax],esp
 004EE78A    cmp         bl,byte ptr [edi+207];TGroupBox.FDockSite:Boolean
>004EE790    je          004EE802
 004EE792    mov         byte ptr [edi+207],bl;TGroupBox.FDockSite:Boolean
 004EE798    test        byte ptr [edi+1C],10;TGroupBox.FComponentState:TComponentState
>004EE79C    jne         004EE802
 004EE79E    mov         edx,ebx
 004EE7A0    mov         eax,edi
 004EE7A2    call        RegisterDockSite
 004EE7A7    test        bl,bl
>004EE7A9    jne         004EE7CB
 004EE7AB    mov         eax,dword ptr [edi+1D4];TGroupBox.FDockClients:TList
 004EE7B1    call        TObject.Free
 004EE7B6    xor         eax,eax
 004EE7B8    mov         dword ptr [edi+1D4],eax;TGroupBox.FDockClients:TList
 004EE7BE    lea         eax,[edi+1D8];TGroupBox.FDockManager:IDockManager
 004EE7C4    call        @IntfClear
>004EE7C9    jmp         004EE802
 004EE7CB    cmp         dword ptr [edi+1D4],0;TGroupBox.FDockClients:TList
>004EE7D2    jne         004EE7E6
 004EE7D4    mov         dl,1
 004EE7D6    mov         eax,[0046C204];TList
 004EE7DB    call        TObject.Create;TList.Create
 004EE7E0    mov         dword ptr [edi+1D4],eax;TGroupBox.FDockClients:TList
 004EE7E6    lea         edx,[ebp-4]
 004EE7E9    mov         eax,edi
 004EE7EB    mov         si,0FFC4
 004EE7EF    call        @CallDynaInst;TWinControl.sub_004EE6D0
 004EE7F4    mov         edx,dword ptr [ebp-4]
 004EE7F7    lea         eax,[edi+1D8];TGroupBox.FDockManager:IDockManager
 004EE7FD    call        @IntfCopy
 004EE802    xor         eax,eax
 004EE804    pop         edx
 004EE805    pop         ecx
 004EE806    pop         ecx
 004EE807    mov         dword ptr fs:[eax],edx
 004EE80A    push        4EE81F
 004EE80F    lea         eax,[ebp-4]
 004EE812    call        @IntfClear
 004EE817    ret
>004EE818    jmp         @HandleFinally
>004EE81D    jmp         004EE80F
 004EE81F    pop         edi
 004EE820    pop         esi
 004EE821    pop         ebx
 004EE822    pop         ecx
 004EE823    pop         ebp
 004EE824    ret
*}
end;

//004EE828
procedure TWinControl.SetDoubleBuffered(Value:Boolean);
begin
{*
 004EE828    cmp         dl,byte ptr [eax+280]
>004EE82E    je          004EE84B
 004EE830    mov         byte ptr [eax+280],dl
 004EE836    mov         byte ptr [eax+209],0
 004EE83D    push        0
 004EE83F    xor         ecx,ecx
 004EE841    mov         edx,0B04F
 004EE846    call        TControl.Perform
 004EE84B    ret
*}
end;

//004EE84C
{*procedure TWinControl.CMDockClient(?:?);
begin
 004EE84C    push        ebp
 004EE84D    mov         ebp,esp
 004EE84F    add         esp,0FFFFFFE8
 004EE852    push        ebx
 004EE853    push        esi
 004EE854    push        edi
 004EE855    mov         dword ptr [ebp-8],edx
 004EE858    mov         dword ptr [ebp-4],eax
 004EE85B    mov         eax,dword ptr [ebp-8]
 004EE85E    cmp         dword ptr [eax+0C],0
>004EE862    jne         004EE92F
 004EE868    mov         eax,dword ptr [ebp-8]
 004EE86B    mov         eax,dword ptr [eax+4]
 004EE86E    lea         esi,[eax+4C]
 004EE871    lea         edi,[ebp-18]
 004EE874    movs        dword ptr [edi],dword ptr [esi]
 004EE875    movs        dword ptr [edi],dword ptr [esi]
 004EE876    movs        dword ptr [edi],dword ptr [esi]
 004EE877    movs        dword ptr [edi],dword ptr [esi]
 004EE878    push        2
 004EE87A    lea         eax,[ebp-18]
 004EE87D    push        eax
 004EE87E    mov         eax,dword ptr [ebp-4]
 004EE881    call        TWinControl.GetHandle
 004EE886    push        eax
 004EE887    push        0
 004EE889    call        user32.MapWindowPoints
 004EE88E    mov         eax,dword ptr [ebp-4]
 004EE891    inc         word ptr [eax+1BC];TWinControl.FAlignLevel:Word
 004EE898    xor         edx,edx
 004EE89A    push        ebp
 004EE89B    push        4EE90B
 004EE8A0    push        dword ptr fs:[edx]
 004EE8A3    mov         dword ptr fs:[edx],esp
 004EE8A6    mov         eax,dword ptr [ebp-8]
 004EE8A9    mov         eax,dword ptr [eax+4]
 004EE8AC    mov         eax,dword ptr [eax+40]
 004EE8AF    lea         ecx,[ebp-18]
 004EE8B2    mov         edx,dword ptr [ebp-4]
 004EE8B5    mov         si,0FFCB
 004EE8B9    call        @CallDynaInst
 004EE8BE    mov         eax,dword ptr [ebp-4]
 004EE8C1    cmp         byte ptr [eax+206],0;TWinControl.FUseDockManager:Boolean
>004EE8C8    je          004EE8F5
 004EE8CA    mov         eax,dword ptr [ebp-4]
 004EE8CD    cmp         dword ptr [eax+1D8],0;TWinControl.FDockManager:IDockManager
>004EE8D4    je          004EE8F5
 004EE8D6    mov         eax,dword ptr [ebp-8]
 004EE8D9    mov         eax,dword ptr [eax+4]
 004EE8DC    mov         edx,dword ptr [eax+60]
 004EE8DF    push        edx
 004EE8E0    movzx       ecx,byte ptr [eax+5C]
 004EE8E4    mov         edx,dword ptr [eax+40]
 004EE8E7    mov         eax,dword ptr [ebp-4]
 004EE8EA    mov         eax,dword ptr [eax+1D8];TWinControl.FDockManager:IDockManager
 004EE8F0    mov         ebx,dword ptr [eax]
 004EE8F2    call        dword ptr [ebx+18]
 004EE8F5    xor         eax,eax
 004EE8F7    pop         edx
 004EE8F8    pop         ecx
 004EE8F9    pop         ecx
 004EE8FA    mov         dword ptr fs:[eax],edx
 004EE8FD    push        4EE912
 004EE902    mov         eax,dword ptr [ebp-4]
 004EE905    call        TWinControl.EnableAlign
 004EE90A    ret
>004EE90B    jmp         @HandleFinally
>004EE910    jmp         004EE902
 004EE912    mov         dl,1
 004EE914    mov         eax,dword ptr [ebp-4]
 004EE917    call        GetParentForm
 004EE91C    test        eax,eax
>004EE91E    je          004EE925
 004EE920    call        TControl.BringToFront
 004EE925    mov         eax,dword ptr [ebp-8]
 004EE928    mov         dword ptr [eax+0C],1
 004EE92F    pop         edi
 004EE930    pop         esi
 004EE931    pop         ebx
 004EE932    mov         esp,ebp
 004EE934    pop         ebp
 004EE935    ret
end;*}

//004EE938
{*procedure TWinControl.CMUndockClient(?:?);
begin
 004EE938    xor         ecx,ecx
 004EE93A    mov         dword ptr [edx+0C],ecx
 004EE93D    cmp         byte ptr [eax+206],0;TWinControl.FUseDockManager:Boolean
>004EE944    je          004EE95D
 004EE946    cmp         dword ptr [eax+1D8],0;TWinControl.FDockManager:IDockManager
>004EE94D    je          004EE95D
 004EE94F    mov         edx,dword ptr [edx+8]
 004EE952    mov         eax,dword ptr [eax+1D8];TWinControl.FDockManager:IDockManager
 004EE958    mov         ecx,dword ptr [eax]
 004EE95A    call        dword ptr [ecx+28]
 004EE95D    ret
end;*}

//004EE960
{*procedure TWinControl.CMFloat(?:?);
begin
 004EE960    push        ebp
 004EE961    mov         ebp,esp
 004EE963    add         esp,0FFFFFFF8
 004EE966    push        esi
 004EE967    mov         esi,edx
 004EE969    mov         dword ptr [ebp-4],eax
 004EE96C    mov         eax,dword ptr [ebp-4]
 004EE96F    mov         edx,dword ptr [eax]
 004EE971    call        dword ptr [edx+74];TWinControl.sub_004E9BFC
 004EE974    mov         ecx,dword ptr [ebp-4]
 004EE977    mov         ecx,dword ptr [ecx]
 004EE979    mov         edx,ecx
 004EE97B    cmp         edx,eax
>004EE97D    jne         004EE9CE
 004EE97F    mov         eax,dword ptr [ebp-4]
 004EE982    movzx       eax,byte ptr [eax+69];TWinControl.FVisible:Boolean
 004EE986    mov         byte ptr [ebp-5],al
 004EE989    xor         eax,eax
 004EE98B    push        ebp
 004EE98C    push        4EE9C7
 004EE991    push        dword ptr fs:[eax]
 004EE994    mov         dword ptr fs:[eax],esp
 004EE997    mov         eax,dword ptr [esi+8]
 004EE99A    lea         ecx,[eax+4C]
 004EE99D    xor         edx,edx
 004EE99F    mov         eax,dword ptr [ebp-4]
 004EE9A2    mov         si,0FFCB
 004EE9A6    call        @CallDynaInst;TControl.sub_004E6558
 004EE9AB    xor         eax,eax
 004EE9AD    pop         edx
 004EE9AE    pop         ecx
 004EE9AF    pop         ecx
 004EE9B0    mov         dword ptr fs:[eax],edx
 004EE9B3    push        4EE9D8
 004EE9B8    cmp         byte ptr [ebp-5],0
>004EE9BC    je          004EE9C6
 004EE9BE    mov         eax,dword ptr [ebp-4]
 004EE9C1    call        TControl.BringToFront
 004EE9C6    ret
>004EE9C7    jmp         @HandleFinally
>004EE9CC    jmp         004EE9B8
 004EE9CE    mov         edx,esi
 004EE9D0    mov         eax,dword ptr [ebp-4]
 004EE9D3    call        TControl.CMFloat
 004EE9D8    pop         esi
 004EE9D9    pop         ecx
 004EE9DA    pop         ecx
 004EE9DB    pop         ebp
 004EE9DC    ret
end;*}

//004EE9E0
{*procedure TWinControl.sub_004EE9E0(?:?; ?:?);
begin
 004EE9E0    push        ebx
 004EE9E1    push        ecx
 004EE9E2    mov         word ptr [esp],cx
 004EE9E6    cmp         word ptr [eax+23A],0;TWinControl.?f23A:word
>004EE9EE    je          004EEA07
 004EE9F0    movzx       ecx,word ptr [esp]
 004EE9F4    push        ecx
 004EE9F5    mov         ecx,edx
 004EE9F7    mov         ebx,eax
 004EE9F9    mov         edx,eax
 004EE9FB    mov         eax,dword ptr [ebx+23C];TWinControl.?f23C:TMessageForm
 004EEA01    call        dword ptr [ebx+238];TWinControl.FOnKeyDown
 004EEA07    pop         edx
 004EEA08    pop         ebx
 004EEA09    ret
end;*}

//004EEA0C
function TWinControl.DoKeyDown(var Message:Messages.TWMKey):Boolean;
begin
{*
 004EEA0C    push        ebx
 004EEA0D    push        esi
 004EEA0E    push        edi
 004EEA0F    push        ebp
 004EEA10    push        ecx
 004EEA11    mov         edi,edx
 004EEA13    mov         esi,eax
 004EEA15    mov         byte ptr [esp],1
 004EEA19    xor         edx,edx
 004EEA1B    mov         eax,esi
 004EEA1D    call        GetParentForm
 004EEA22    mov         ebx,eax
 004EEA24    test        ebx,ebx
>004EEA26    je          004EEA71
 004EEA28    cmp         esi,ebx
>004EEA2A    je          004EEA71
 004EEA2C    cmp         byte ptr [ebx+2C0],0
>004EEA33    je          004EEA42
 004EEA35    mov         edx,edi
 004EEA37    mov         eax,ebx
 004EEA39    call        TWinControl.DoKeyDown
 004EEA3E    test        al,al
>004EEA40    jne         004EEAB0
 004EEA42    cmp         dword ptr [ebx+40],0
>004EEA46    je          004EEA71
 004EEA48    mov         dl,1
 004EEA4A    mov         eax,ebx
 004EEA4C    call        GetParentForm
 004EEA51    mov         ebp,eax
 004EEA53    test        ebp,ebp
>004EEA55    je          004EEA71
 004EEA57    cmp         ebx,ebp
>004EEA59    je          004EEA71
 004EEA5B    cmp         byte ptr [ebp+2C0],0
>004EEA62    je          004EEA71
 004EEA64    mov         edx,edi
 004EEA66    mov         eax,ebp
 004EEA68    call        TWinControl.DoKeyDown
 004EEA6D    test        al,al
>004EEA6F    jne         004EEAB0
 004EEA71    mov         eax,dword ptr [edi+8]
 004EEA74    call        KeyDataToShiftState
 004EEA79    mov         ebp,eax
 004EEA7B    test        byte ptr [esi+61],10
>004EEA7F    jne         004EEAAC
 004EEA81    movzx       eax,word ptr [edi+4]
 004EEA85    mov         word ptr [esp+2],ax
 004EEA8A    lea         edx,[esp+2]
 004EEA8E    mov         ecx,ebp
 004EEA90    mov         eax,esi
 004EEA92    mov         si,0FFB8
 004EEA96    call        @CallDynaInst
 004EEA9B    movzx       eax,word ptr [esp+2]
 004EEAA0    mov         word ptr [edi+4],ax
 004EEAA4    cmp         word ptr [esp+2],0
>004EEAAA    je          004EEAB0
 004EEAAC    mov         byte ptr [esp],0
 004EEAB0    movzx       eax,byte ptr [esp]
 004EEAB4    pop         edx
 004EEAB5    pop         ebp
 004EEAB6    pop         edi
 004EEAB7    pop         esi
 004EEAB8    pop         ebx
 004EEAB9    ret
*}
end;

//004EEABC
procedure TWinControl.WMKeyDown(var Message:Messages.TWMKeyDown);
begin
{*
 004EEABC    push        ebx
 004EEABD    push        esi
 004EEABE    mov         esi,edx
 004EEAC0    mov         ebx,eax
 004EEAC2    mov         edx,esi
 004EEAC4    mov         eax,ebx
 004EEAC6    call        TWinControl.DoKeyDown
 004EEACB    test        al,al
>004EEACD    jne         004EEAD8
 004EEACF    mov         edx,esi
 004EEAD1    mov         eax,ebx
 004EEAD3    mov         ecx,dword ptr [eax]
 004EEAD5    call        dword ptr [ecx-10]
 004EEAD8    movzx       edx,word ptr [esi+4]
 004EEADC    mov         eax,ebx
 004EEADE    call        TWinControl.UpdateUIState
 004EEAE3    pop         esi
 004EEAE4    pop         ebx
 004EEAE5    ret
*}
end;

//004EEAE8
procedure TWinControl.WMSysKeyDown(var Message:Messages.TWMSysKeyDown);
begin
{*
 004EEAE8    push        ebx
 004EEAE9    push        esi
 004EEAEA    mov         esi,edx
 004EEAEC    mov         ebx,eax
 004EEAEE    mov         edx,esi
 004EEAF0    mov         eax,ebx
 004EEAF2    call        TWinControl.DoKeyDown
 004EEAF7    test        al,al
>004EEAF9    jne         004EEB04
 004EEAFB    mov         edx,esi
 004EEAFD    mov         eax,ebx
 004EEAFF    mov         ecx,dword ptr [eax]
 004EEB01    call        dword ptr [ecx-10]
 004EEB04    movzx       edx,word ptr [esi+4]
 004EEB08    mov         eax,ebx
 004EEB0A    call        TWinControl.UpdateUIState
 004EEB0F    pop         esi
 004EEB10    pop         ebx
 004EEB11    ret
*}
end;

//004EEB14
{*procedure TWinControl.sub_004EEB14(?:?; ?:?);
begin
 004EEB14    push        ebx
 004EEB15    push        ecx
 004EEB16    mov         word ptr [esp],cx
 004EEB1A    cmp         word ptr [eax+24A],0;TWinControl.?f24A:word
>004EEB22    je          004EEB3B
 004EEB24    movzx       ecx,word ptr [esp]
 004EEB28    push        ecx
 004EEB29    mov         ecx,edx
 004EEB2B    mov         ebx,eax
 004EEB2D    mov         edx,eax
 004EEB2F    mov         eax,dword ptr [ebx+24C];TWinControl.?f24C:dword
 004EEB35    call        dword ptr [ebx+248];TWinControl.FOnKeyUp
 004EEB3B    pop         edx
 004EEB3C    pop         ebx
 004EEB3D    ret
end;*}

//004EEB40
function TWinControl.DoKeyPress(var Message:Messages.TWMKey):Boolean;
begin
{*
 004EEB40    push        ebx
 004EEB41    push        esi
 004EEB42    push        edi
 004EEB43    push        ebp
 004EEB44    push        ecx
 004EEB45    mov         edi,edx
 004EEB47    mov         esi,eax
 004EEB49    mov         byte ptr [esp],1
 004EEB4D    xor         edx,edx
 004EEB4F    mov         eax,esi
 004EEB51    call        GetParentForm
 004EEB56    mov         ebx,eax
 004EEB58    test        ebx,ebx
>004EEB5A    je          004EEBA5
 004EEB5C    cmp         esi,ebx
>004EEB5E    je          004EEBA5
 004EEB60    cmp         byte ptr [ebx+2C0],0
>004EEB67    je          004EEB76
 004EEB69    mov         edx,edi
 004EEB6B    mov         eax,ebx
 004EEB6D    call        TWinControl.DoKeyPress
 004EEB72    test        al,al
>004EEB74    jne         004EEBE4
 004EEB76    cmp         dword ptr [ebx+40],0
>004EEB7A    je          004EEBA5
 004EEB7C    mov         dl,1
 004EEB7E    mov         eax,ebx
 004EEB80    call        GetParentForm
 004EEB85    mov         ebp,eax
 004EEB87    test        ebp,ebp
>004EEB89    je          004EEBA5
 004EEB8B    cmp         ebx,ebp
>004EEB8D    je          004EEBA5
 004EEB8F    cmp         byte ptr [ebp+2C0],0
>004EEB96    je          004EEBA5
 004EEB98    mov         edx,edi
 004EEB9A    mov         eax,ebp
 004EEB9C    call        TWinControl.DoKeyPress
 004EEBA1    test        al,al
>004EEBA3    jne         004EEBE4
 004EEBA5    mov         eax,dword ptr [edi+8]
 004EEBA8    call        KeyDataToShiftState
 004EEBAD    mov         ebp,eax
 004EEBAF    test        byte ptr [esi+61],10
>004EEBB3    jne         004EEBE0
 004EEBB5    movzx       eax,word ptr [edi+4]
 004EEBB9    mov         word ptr [esp+2],ax
 004EEBBE    lea         edx,[esp+2]
 004EEBC2    mov         ecx,ebp
 004EEBC4    mov         eax,esi
 004EEBC6    mov         si,0FFB7
 004EEBCA    call        @CallDynaInst
 004EEBCF    movzx       eax,word ptr [esp+2]
 004EEBD4    mov         word ptr [edi+4],ax
 004EEBD8    cmp         word ptr [esp+2],0
>004EEBDE    je          004EEBE4
 004EEBE0    mov         byte ptr [esp],0
 004EEBE4    movzx       eax,byte ptr [esp]
 004EEBE8    pop         edx
 004EEBE9    pop         ebp
 004EEBEA    pop         edi
 004EEBEB    pop         esi
 004EEBEC    pop         ebx
 004EEBED    ret
*}
end;

//004EEBF0
procedure TWinControl.WMChar(var Message:Messages.TWMChar);
begin
{*
 004EEBF0    push        ebx
 004EEBF1    push        esi
 004EEBF2    mov         esi,edx
 004EEBF4    mov         ebx,eax
 004EEBF6    mov         edx,esi
 004EEBF8    mov         eax,ebx
 004EEBFA    call        TWinControl.DoKeyPress
 004EEBFF    test        al,al
>004EEC01    jne         004EEC0C
 004EEC03    mov         edx,esi
 004EEC05    mov         eax,ebx
 004EEC07    mov         ecx,dword ptr [eax]
 004EEC09    call        dword ptr [ecx-10]
 004EEC0C    pop         esi
 004EEC0D    pop         ebx
 004EEC0E    ret
*}
end;

//004EEC10
{*procedure TWinControl.WMSysKeyUp(?:?);
begin
 004EEC10    push        ebx
 004EEC11    push        esi
 004EEC12    mov         esi,edx
 004EEC14    mov         ebx,eax
 004EEC16    mov         edx,esi
 004EEC18    mov         eax,ebx
 004EEC1A    call        TWinControl.DoKeyPress
 004EEC1F    test        al,al
>004EEC21    jne         004EEC2C
 004EEC23    mov         edx,esi
 004EEC25    mov         eax,ebx
 004EEC27    mov         ecx,dword ptr [eax]
 004EEC29    call        dword ptr [ecx-10];TWinControl.DefaultHandler
 004EEC2C    pop         esi
 004EEC2D    pop         ebx
 004EEC2E    ret
end;*}

//004EEC30
{*procedure TWinControl.sub_004EEC30(?:?);
begin
 004EEC30    push        ebx
 004EEC31    cmp         word ptr [eax+242],0;TWinControl.?f242:word
>004EEC39    je          004EEC4D
 004EEC3B    mov         ecx,edx
 004EEC3D    mov         ebx,eax
 004EEC3F    mov         edx,eax
 004EEC41    mov         eax,dword ptr [ebx+244];TWinControl.?f244:dword
 004EEC47    call        dword ptr [ebx+240];TWinControl.FOnKeyPress
 004EEC4D    pop         ebx
 004EEC4E    ret
end;*}

//004EEC50
function TWinControl.DoKeyUp(var Message:Messages.TWMKey):Boolean;
begin
{*
 004EEC50    push        ebx
 004EEC51    push        esi
 004EEC52    push        edi
 004EEC53    push        ecx
 004EEC54    mov         edi,edx
 004EEC56    mov         esi,eax
 004EEC58    mov         byte ptr [esp],1
 004EEC5C    mov         dl,1
 004EEC5E    mov         eax,esi
 004EEC60    call        GetParentForm
 004EEC65    mov         ebx,eax
 004EEC67    test        ebx,ebx
>004EEC69    je          004EEC85
 004EEC6B    cmp         esi,ebx
>004EEC6D    je          004EEC85
 004EEC6F    cmp         byte ptr [ebx+2C0],0
>004EEC76    je          004EEC85
 004EEC78    mov         edx,edi
 004EEC7A    mov         eax,ebx
 004EEC7C    call        TWinControl.DoKeyUp
 004EEC81    test        al,al
>004EEC83    jne         004EECB7
 004EEC85    test        byte ptr [esi+61],10
>004EEC89    jne         004EECB3
 004EEC8B    movzx       eax,word ptr [edi+4]
 004EEC8F    mov         word ptr [esp+2],ax
 004EEC94    lea         edx,[esp+2]
 004EEC98    mov         eax,esi
 004EEC9A    mov         si,0FFB6
 004EEC9E    call        @CallDynaInst
 004EECA3    movzx       eax,word ptr [esp+2]
 004EECA8    mov         word ptr [edi+4],ax
 004EECAC    cmp         word ptr [edi+4],0
>004EECB1    je          004EECB7
 004EECB3    mov         byte ptr [esp],0
 004EECB7    movzx       eax,byte ptr [esp]
 004EECBB    pop         edx
 004EECBC    pop         edi
 004EECBD    pop         esi
 004EECBE    pop         ebx
 004EECBF    ret
*}
end;

//004EECC0
procedure TWinControl.WMKeyUp(var Message:Messages.TWMKeyUp);
begin
{*
 004EECC0    push        ebx
 004EECC1    push        esi
 004EECC2    mov         esi,edx
 004EECC4    mov         ebx,eax
 004EECC6    mov         edx,esi
 004EECC8    mov         eax,ebx
 004EECCA    call        TWinControl.DoKeyUp
 004EECCF    test        al,al
>004EECD1    jne         004EECDC
 004EECD3    mov         edx,esi
 004EECD5    mov         eax,ebx
 004EECD7    mov         ecx,dword ptr [eax]
 004EECD9    call        dword ptr [ecx-10]
 004EECDC    pop         esi
 004EECDD    pop         ebx
 004EECDE    ret
*}
end;

//004EECE0
{*function sub_004EECE0(?:TControl; ?:?):?;
begin
 004EECE0    push        ebp
 004EECE1    mov         ebp,esp
 004EECE3    add         esp,0FFFFFFF8
 004EECE6    push        ebx
 004EECE7    push        esi
 004EECE8    push        edi
 004EECE9    mov         dword ptr [ebp-4],eax
 004EECEC    mov         byte ptr [ebp-5],0
 004EECF0    mov         eax,dword ptr [ebp-4]
 004EECF3    cmp         byte ptr [eax+205],0
>004EECFA    je          004EED83
 004EED00    mov         eax,dword ptr [ebp-4]
 004EED03    call        TWinControl.GetControlCount
 004EED08    mov         esi,eax
 004EED0A    dec         esi
 004EED0B    test        esi,esi
>004EED0D    jl          004EED83
 004EED0F    inc         esi
 004EED10    xor         edi,edi
 004EED12    mov         edx,edi
 004EED14    mov         eax,dword ptr [ebp-4]
 004EED17    call        TWinControl.GetControl
 004EED1C    mov         ebx,eax
 004EED1E    cmp         byte ptr [ebx+69],0;TControl.FVisible:Boolean
>004EED22    je          004EED7F
 004EED24    mov         eax,ebx
 004EED26    mov         edx,dword ptr [eax]
 004EED28    call        dword ptr [edx+6C];TGroupBox.GetEnabled
 004EED2B    test        al,al
>004EED2D    je          004EED7F
 004EED2F    test        byte ptr [ebx+62],1;TControl.FEnabled:Boolean
>004EED33    je          004EED58
 004EED35    mov         eax,dword ptr [ebp+8]
 004EED38    mov         eax,dword ptr [eax-4]
 004EED3B    mov         eax,dword ptr [eax+8]
 004EED3E    push        eax
 004EED3F    mov         eax,dword ptr [ebp+8]
 004EED42    mov         ecx,dword ptr [eax-4]
 004EED45    mov         ecx,dword ptr [ecx+4]
 004EED48    mov         edx,112
 004EED4D    mov         eax,ebx
 004EED4F    call        TControl.Perform
 004EED54    test        eax,eax
>004EED56    jne         004EED79
 004EED58    mov         eax,ebx
 004EED5A    mov         edx,dword ptr ds:[4DE8CC];TWinControl
 004EED60    call        @IsClass
 004EED65    test        al,al
>004EED67    je          004EED7F
 004EED69    mov         eax,dword ptr [ebp+8]
 004EED6C    push        eax
 004EED6D    mov         eax,ebx
 004EED6F    call        004EECE0
 004EED74    pop         ecx
 004EED75    test        al,al
>004EED77    je          004EED7F
 004EED79    mov         byte ptr [ebp-5],1
>004EED7D    jmp         004EED83
 004EED7F    inc         edi
 004EED80    dec         esi
>004EED81    jne         004EED12
 004EED83    movzx       eax,byte ptr [ebp-5]
 004EED87    pop         edi
 004EED88    pop         esi
 004EED89    pop         ebx
 004EED8A    pop         ecx
 004EED8B    pop         ecx
 004EED8C    pop         ebp
 004EED8D    ret
end;*}

//004EED90
{*procedure TWinControl.WMSysCommand(?:?);
begin
 004EED90    push        ebp
 004EED91    mov         ebp,esp
 004EED93    push        ecx
 004EED94    push        ebx
 004EED95    push        esi
 004EED96    mov         dword ptr [ebp-4],edx
 004EED99    mov         ebx,eax
 004EED9B    mov         eax,dword ptr [ebp-4]
 004EED9E    mov         eax,dword ptr [eax+4]
 004EEDA1    and         eax,0FFF0
 004EEDA6    cmp         eax,0F100
>004EEDAB    jne         004EEE0B
 004EEDAD    mov         eax,dword ptr [ebp-4]
 004EEDB0    cmp         word ptr [eax+8],20
>004EEDB5    je          004EEE0B
 004EEDB7    mov         eax,dword ptr [ebp-4]
 004EEDBA    cmp         word ptr [eax+8],2D
>004EEDBF    je          004EEE0B
 004EEDC1    mov         eax,dword ptr [ebx+278];TWinControl.FHandle:HWND
 004EEDC7    push        eax
 004EEDC8    call        user32.IsIconic
 004EEDCD    test        eax,eax
>004EEDCF    jne         004EEE0B
 004EEDD1    call        user32.GetCapture
 004EEDD6    test        eax,eax
>004EEDD8    jne         004EEE0B
 004EEDDA    mov         eax,[007C4A18];^Application:TApplication
 004EEDDF    mov         eax,dword ptr [eax]
 004EEDE1    cmp         ebx,dword ptr [eax+58];TApplication.FMainForm:TForm
>004EEDE4    je          004EEE0B
 004EEDE6    mov         dl,1
 004EEDE8    mov         eax,ebx
 004EEDEA    call        GetParentForm
 004EEDEF    mov         esi,eax
 004EEDF1    test        esi,esi
>004EEDF3    je          004EEE0B
 004EEDF5    mov         eax,dword ptr [ebp-4]
 004EEDF8    push        eax
 004EEDF9    xor         ecx,ecx
 004EEDFB    mov         edx,0B017
 004EEE00    mov         eax,esi
 004EEE02    call        TControl.Perform
 004EEE07    test        eax,eax
>004EEE09    jne         004EEE34
 004EEE0B    mov         eax,dword ptr [ebp-4]
 004EEE0E    mov         eax,dword ptr [eax+4]
 004EEE11    and         eax,0FFF0
 004EEE16    cmp         eax,0F100
>004EEE1B    jne         004EEE2A
 004EEE1D    push        ebp
 004EEE1E    mov         eax,ebx
 004EEE20    call        004EECE0
 004EEE25    pop         ecx
 004EEE26    test        al,al
>004EEE28    jne         004EEE34
 004EEE2A    mov         edx,dword ptr [ebp-4]
 004EEE2D    mov         eax,ebx
 004EEE2F    mov         ecx,dword ptr [eax]
 004EEE31    call        dword ptr [ecx-10];TWinControl.DefaultHandler
 004EEE34    pop         esi
 004EEE35    pop         ebx
 004EEE36    pop         ecx
 004EEE37    pop         ebp
 004EEE38    ret
end;*}

//004EEE3C
procedure TWinControl.WMVKeyToItem(var Message:Messages.TWMVKeyToItem);
begin
{*
 004EEE3C    push        ebx
 004EEE3D    push        esi
 004EEE3E    mov         ebx,edx
 004EEE40    mov         esi,eax
 004EEE42    mov         edx,ebx
 004EEE44    mov         eax,dword ptr [ebx+8]
 004EEE47    call        DoControlMsg
 004EEE4C    test        al,al
>004EEE4E    jne         004EEE59
 004EEE50    mov         edx,ebx
 004EEE52    mov         eax,esi
 004EEE54    mov         ecx,dword ptr [eax]
 004EEE56    call        dword ptr [ecx-10]
 004EEE59    pop         esi
 004EEE5A    pop         ebx
 004EEE5B    ret
*}
end;

//004EEE5C
procedure TWinControl.WMParentNotify(var Message:Messages.TWMParentNotify);
begin
{*
 004EEE5C    push        ebx
 004EEE5D    push        esi
 004EEE5E    push        edi
 004EEE5F    mov         ebx,edx
 004EEE61    mov         edi,eax
 004EEE63    movzx       esi,word ptr [ebx+4]
 004EEE67    cmp         si,1
>004EEE6B    je          004EEE73
 004EEE6D    cmp         si,2
>004EEE71    jne         004EEE81
 004EEE73    mov         edx,ebx
 004EEE75    mov         eax,dword ptr [ebx+8]
 004EEE78    call        DoControlMsg
 004EEE7D    test        al,al
>004EEE7F    jne         004EEE8A
 004EEE81    mov         edx,ebx
 004EEE83    mov         eax,edi
 004EEE85    mov         ecx,dword ptr [eax]
 004EEE87    call        dword ptr [ecx-10]
 004EEE8A    pop         edi
 004EEE8B    pop         esi
 004EEE8C    pop         ebx
 004EEE8D    ret
*}
end;

//004EEE90
procedure TWinControl.WMVScroll(var Message:Messages.TWMVScroll);
begin
{*
 004EEE90    push        ebx
 004EEE91    push        esi
 004EEE92    mov         ebx,edx
 004EEE94    mov         esi,eax
 004EEE96    mov         edx,ebx
 004EEE98    mov         eax,dword ptr [ebx+8]
 004EEE9B    call        DoControlMsg
 004EEEA0    test        al,al
>004EEEA2    jne         004EEEAD
 004EEEA4    mov         edx,ebx
 004EEEA6    mov         eax,esi
 004EEEA8    mov         ecx,dword ptr [eax]
 004EEEAA    call        dword ptr [ecx-10]
 004EEEAD    pop         esi
 004EEEAE    pop         ebx
 004EEEAF    ret
*}
end;

//004EEEB0
{*procedure TWinControl.WMDestroy(?:?);
begin
 004EEEB0    push        ebx
 004EEEB1    push        esi
 004EEEB2    push        edi
 004EEEB3    push        ebp
 004EEEB4    mov         edi,edx
 004EEEB6    mov         ebx,eax
 004EEEB8    cmp         dword ptr [ebx+184],0;TWinControl.FText:PWideChar
>004EEEBF    jne         004EEF03
 004EEEC1    mov         eax,ebx
 004EEEC3    call        TControl.GetTextLen
 004EEEC8    mov         esi,eax
 004EEECA    cmp         esi,1
>004EEECD    jge         004EEEE1
 004EEECF    mov         eax,4EEF30
 004EEED4    call        StrNew
 004EEED9    mov         dword ptr [ebx+184],eax;TWinControl.FText:PWideChar
>004EEEDF    jmp         004EEF03
 004EEEE1    lea         eax,[esi+1]
 004EEEE4    call        0041F4BC
 004EEEE9    mov         ebp,eax
 004EEEEB    mov         dword ptr [ebx+184],ebp;TWinControl.FText:PWideChar
 004EEEF1    mov         eax,ebp
 004EEEF3    call        0041F4C4
 004EEEF8    mov         ecx,eax
 004EEEFA    mov         edx,ebp
 004EEEFC    mov         eax,ebx
 004EEEFE    call        TControl.GetTextBuf
 004EEF03    mov         eax,[007C4A7C];^gvar_007CA74C
 004EEF08    test        byte ptr [eax],1
>004EEF0B    je          004EEF1B
 004EEF0D    mov         ecx,ebx
 004EEF0F    xor         edx,edx
 004EEF11    mov         eax,[00573D6C];TStyleManager
 004EEF16    call        TStyleManager.Notification
 004EEF1B    mov         edx,edi
 004EEF1D    mov         eax,ebx
 004EEF1F    mov         ecx,dword ptr [eax]
 004EEF21    call        dword ptr [ecx-10];TWinControl.DefaultHandler
 004EEF24    mov         eax,ebx
 004EEF26    call        004F209C
 004EEF2B    pop         ebp
 004EEF2C    pop         edi
 004EEF2D    pop         esi
 004EEF2E    pop         ebx
 004EEF2F    ret
end;*}

//004EEF34
procedure TWinControl.WMNCDestroy;
begin
{*
 004EEF34    push        ebx
 004EEF35    mov         ebx,eax
 004EEF37    mov         eax,ebx
 004EEF39    mov         ecx,dword ptr [eax]
 004EEF3B    call        dword ptr [ecx-10];TWinControl.DefaultHandler
 004EEF3E    xor         eax,eax
 004EEF40    mov         dword ptr [ebx+278],eax;TWinControl.FHandle:HWND
 004EEF46    mov         byte ptr [ebx+205],0;TWinControl.FShowing:Boolean
 004EEF4D    pop         ebx
 004EEF4E    ret
*}
end;

//004EEF50
{*procedure TWinControl.WMNCHitTest(?:?);
begin
 004EEF50    test        byte ptr [eax+1C],10;TWinControl.FComponentState:TComponentState
>004EEF54    je          004EEF64
 004EEF56    cmp         dword ptr [eax+40],0;TWinControl.FParent:TWinControl
>004EEF5A    je          004EEF64
 004EEF5C    mov         dword ptr [edx+0C],1
 004EEF63    ret
 004EEF64    mov         ecx,dword ptr [eax]
 004EEF66    call        dword ptr [ecx-10];TWinControl.DefaultHandler
 004EEF69    ret
end;*}

//004EEF6C
{*procedure TWinControl.sub_004E5D58(?:?);
begin
 004EEF6C    push        ebx
 004EEF6D    push        esi
 004EEF6E    push        edi
 004EEF6F    push        ebp
 004EEF70    push        ecx
 004EEF71    mov         byte ptr [esp],dl
 004EEF74    mov         ebp,eax
 004EEF76    movzx       edx,byte ptr [esp]
 004EEF7A    mov         eax,ebp
 004EEF7C    call        TControl.sub_004E5D58
 004EEF81    mov         ebx,eax
 004EEF83    cmp         byte ptr [ebp+69],0;TWinControl.FVisible:Boolean
>004EEF87    je          004EEFBB
 004EEF89    mov         eax,ebp
 004EEF8B    call        TWinControl.GetControlCount
 004EEF90    mov         edi,eax
 004EEF92    dec         edi
 004EEF93    cmp         edi,0
>004EEF96    jl          004EEFBB
 004EEF98    test        byte ptr [esp],bl
>004EEF9B    jne         004EEFBB
 004EEF9D    mov         edx,edi
 004EEF9F    mov         eax,ebp
 004EEFA1    call        TWinControl.GetControl
 004EEFA6    movzx       edx,byte ptr [esp]
 004EEFAA    mov         si,0FFD0
 004EEFAE    call        @CallDynaInst;TControl.sub_004E5D58
 004EEFB3    or          bl,al
 004EEFB5    dec         edi
 004EEFB6    cmp         edi,0FFFFFFFF
>004EEFB9    jne         004EEF98
 004EEFBB    mov         eax,ebx
 004EEFBD    pop         edx
 004EEFBE    pop         ebp
 004EEFBF    pop         edi
 004EEFC0    pop         esi
 004EEFC1    pop         ebx
 004EEFC2    ret
end;*}

//004EEFC4
{*procedure TWinControl.WMQueryNewPalette(?:?);
begin
 004EEFC4    push        ebx
 004EEFC5    push        esi
 004EEFC6    push        edi
 004EEFC7    mov         edi,edx
 004EEFC9    mov         ebx,eax
 004EEFCB    or          dword ptr [ebx+64],4;TWinControl.FControlState:TControlState
 004EEFCF    mov         dl,1
 004EEFD1    mov         eax,ebx
 004EEFD3    mov         si,0FFD0
 004EEFD7    call        @CallDynaInst;TWinControl.sub_004E5D58
 004EEFDC    and         eax,7F
 004EEFDF    mov         dword ptr [edi+0C],eax
 004EEFE2    pop         edi
 004EEFE3    pop         esi
 004EEFE4    pop         ebx
 004EEFE5    ret
end;*}

//004EEFE8
{*procedure TWinControl.WMPaletteChanged(?:?);
begin
 004EEFE8    push        ebx
 004EEFE9    push        esi
 004EEFEA    push        edi
 004EEFEB    mov         edi,edx
 004EEFED    mov         ebx,eax
 004EEFEF    xor         edx,edx
 004EEFF1    mov         eax,ebx
 004EEFF3    mov         si,0FFD0
 004EEFF7    call        @CallDynaInst;TWinControl.sub_004E5D58
 004EEFFC    and         eax,7F
 004EEFFF    mov         dword ptr [edi+0C],eax
 004EF002    pop         edi
 004EF003    pop         esi
 004EF004    pop         ebx
 004EF005    ret
end;*}

//004EF008
procedure TWinControl.CMShowHintChanged;
begin
{*
 004EF008    push        ebx
 004EF009    mov         ebx,eax
 004EF00B    mov         eax,ebx
 004EF00D    mov         ecx,dword ptr [eax]
 004EF00F    call        dword ptr [ecx-10];TWinControl.DefaultHandler
 004EF012    mov         dx,0B023
 004EF016    mov         eax,ebx
 004EF018    call        TWinControl.NotifyControls
 004EF01D    pop         ebx
 004EF01E    ret
*}
end;

//004EF020
procedure TWinControl.CMBiDiModeChanged(var Message:Messages.TMessage);
begin
{*
 004EF020    push        ebx
 004EF021    push        esi
 004EF022    mov         esi,edx
 004EF024    mov         ebx,eax
 004EF026    mov         edx,esi
 004EF028    mov         eax,ebx
 004EF02A    call        TControl.CMBiDiModeChanged
 004EF02F    mov         eax,[007C4EF4];^gvar_007C7CB8:Cardinal
 004EF034    cmp         byte ptr [eax+0D],0
>004EF038    je          004EF047
 004EF03A    cmp         dword ptr [esi+4],0
>004EF03E    jne         004EF047
 004EF040    mov         eax,ebx
 004EF042    call        TWinControl.RecreateWnd
 004EF047    mov         dx,0B03D
 004EF04B    mov         eax,ebx
 004EF04D    call        TWinControl.NotifyControls
 004EF052    pop         esi
 004EF053    pop         ebx
 004EF054    ret
*}
end;

//004EF058
procedure TWinControl.sub_004EF058;
begin
{*
 004EF058    push        esi
 004EF059    mov         esi,eax
 004EF05B    mov         eax,esi
 004EF05D    mov         ecx,dword ptr [eax]
 004EF05F    call        dword ptr [ecx-10];TWinControl.DefaultHandler
 004EF062    mov         dx,0B050
 004EF066    mov         eax,esi
 004EF068    call        TWinControl.NotifyControls
 004EF06D    mov         eax,esi
 004EF06F    mov         edx,dword ptr [eax]
 004EF071    call        dword ptr [edx+0A8];TWinControl.Invalidate
 004EF077    pop         esi
 004EF078    ret
*}
end;

//004EF07C
procedure TWinControl.CMEnter;
begin
{*
 004EF07C    push        esi
 004EF07D    mov         esi,eax
 004EF07F    mov         eax,[007C4EF4];^gvar_007C7CB8:Cardinal
 004EF084    cmp         byte ptr [eax+0D],0
>004EF088    je          004EF0AF
 004EF08A    mov         eax,esi
 004EF08C    call        TControl.UseRightToLeftReading
 004EF091    test        al,al
>004EF093    je          004EF0A3
 004EF095    mov         eax,[007C4A18];^Application:TApplication
 004EF09A    mov         eax,dword ptr [eax]
 004EF09C    call        TApplication.ApplyBiDiKeyboardLayout
>004EF0A1    jmp         004EF0AF
 004EF0A3    mov         eax,[007C4A18];^Application:TApplication
 004EF0A8    mov         eax,dword ptr [eax]
 004EF0AA    call        TApplication.ApplyNonBiDiKeyboardLayout
 004EF0AF    mov         eax,esi
 004EF0B1    mov         si,0FFC0
 004EF0B5    call        @CallDynaInst;TWinControl.DoExit
 004EF0BA    pop         esi
 004EF0BB    ret
*}
end;

//004EF0BC
procedure TWinControl.CMExit;
begin
{*
 004EF0BC    push        esi
 004EF0BD    mov         esi,eax
 004EF0BF    mov         eax,esi
 004EF0C1    mov         si,0FFBF
 004EF0C5    call        @CallDynaInst;TWinControl.sub_004EE488
 004EF0CA    pop         esi
 004EF0CB    ret
*}
end;

//004EF0CC
procedure TWinControl.CMDesignHitTest(var Message:Messages.TWMMouse);
begin
{*
 004EF0CC    push        ebx
 004EF0CD    push        esi
 004EF0CE    mov         esi,edx
 004EF0D0    mov         ebx,eax
 004EF0D2    mov         edx,esi
 004EF0D4    mov         eax,ebx
 004EF0D6    call        TWinControl.IsControlMouseMsg
 004EF0DB    test        al,al
>004EF0DD    jne         004EF0E8
 004EF0DF    mov         edx,esi
 004EF0E1    mov         eax,ebx
 004EF0E3    call        TControl.CMDesignHitTest
 004EF0E8    pop         esi
 004EF0E9    pop         ebx
 004EF0EA    ret
*}
end;

//004EF0EC
procedure TWinControl.CMChanged;
begin
{*
 004EF0EC    push        ebx
 004EF0ED    mov         ecx,dword ptr [eax+40];TWinControl.FParent:TWinControl
 004EF0F0    test        ecx,ecx
>004EF0F2    je          004EF0FC
 004EF0F4    mov         ebx,ecx
 004EF0F6    mov         eax,dword ptr [ebx+4C];TWinControl.FTop:Integer
 004EF0F9    call        dword ptr [ebx+48];TWinControl.FWindowProc
 004EF0FC    pop         ebx
 004EF0FD    ret
*}
end;

//004EF100
procedure TWinControl.CMChildKey;
begin
{*
 004EF100    push        ebx
 004EF101    mov         ecx,dword ptr [eax+40];TWinControl.FParent:TWinControl
 004EF104    test        ecx,ecx
>004EF106    je          004EF110
 004EF108    mov         ebx,ecx
 004EF10A    mov         eax,dword ptr [ebx+4C];TWinControl.FTop:Integer
 004EF10D    call        dword ptr [ebx+48];TWinControl.FWindowProc
 004EF110    pop         ebx
 004EF111    ret
*}
end;

//004EF114
procedure TWinControl.CMDialogKey;
begin
{*
 004EF114    call        TWinControl.Broadcast
 004EF119    ret
*}
end;

//004EF11C
procedure TWinControl.CMDialogChar;
begin
{*
 004EF11C    call        TWinControl.Broadcast
 004EF121    ret
*}
end;

//004EF124
procedure TWinControl.CMFocusChenged;
begin
{*
 004EF124    call        TWinControl.Broadcast
 004EF129    ret
*}
end;

//004EF12C
procedure TWinControl.CMVisibleChanged;
begin
{*
 004EF12C    push        ebx
 004EF12D    mov         ebx,eax
 004EF12F    cmp         byte ptr [ebx+69],0;TWinControl.FVisible:Boolean
>004EF133    jne         004EF144
 004EF135    cmp         dword ptr [ebx+40],0;TWinControl.FParent:TWinControl
>004EF139    je          004EF144
 004EF13B    xor         edx,edx
 004EF13D    mov         eax,ebx
 004EF13F    call        TWinControl.RemoveFocus
 004EF144    test        byte ptr [ebx+1C],10;TWinControl.FComponentState:TComponentState
>004EF148    je          004EF150
 004EF14A    test        byte ptr [ebx+61],4;TWinControl.FVisible:Boolean
>004EF14E    je          004EF157
 004EF150    mov         eax,ebx
 004EF152    call        TWinControl.UpdateControlState
 004EF157    pop         ebx
 004EF158    ret
*}
end;

//004EF15C
procedure TWinControl.CMShowingChanged;
begin
{*
 004EF15C    movzx       edx,byte ptr [eax+205];TWinControl.FShowing:Boolean
 004EF163    movzx       edx,word ptr [edx*2+7A11C0]
 004EF16B    push        edx
 004EF16C    push        0
 004EF16E    push        0
 004EF170    push        0
 004EF172    push        0
 004EF174    push        0
 004EF176    mov         eax,dword ptr [eax+278];TWinControl.FHandle:HWND
 004EF17C    push        eax
 004EF17D    call        user32.SetWindowPos
 004EF182    ret
*}
end;

//004EF184
procedure TWinControl.CMEnabledChanged;
begin
{*
 004EF184    push        ebx
 004EF185    mov         ebx,eax
 004EF187    mov         eax,ebx
 004EF189    mov         edx,dword ptr [eax]
 004EF18B    call        dword ptr [edx+6C];TGroupBox.GetEnabled
 004EF18E    test        al,al
>004EF190    jne         004EF1A1
 004EF192    cmp         dword ptr [ebx+40],0;TWinControl.FParent:TWinControl
>004EF196    je          004EF1A1
 004EF198    xor         edx,edx
 004EF19A    mov         eax,ebx
 004EF19C    call        TWinControl.RemoveFocus
 004EF1A1    mov         eax,ebx
 004EF1A3    call        TWinControl.HandleAllocated
 004EF1A8    test        al,al
>004EF1AA    je          004EF1CA
 004EF1AC    test        byte ptr [ebx+1C],10;TWinControl.FComponentState:TComponentState
>004EF1B0    jne         004EF1CA
 004EF1B2    mov         eax,ebx
 004EF1B4    mov         edx,dword ptr [eax]
 004EF1B6    call        dword ptr [edx+6C];TGroupBox.GetEnabled
 004EF1B9    neg         al
 004EF1BB    sbb         eax,eax
 004EF1BD    push        eax
 004EF1BE    mov         eax,dword ptr [ebx+278];TWinControl.FHandle:HWND
 004EF1C4    push        eax
 004EF1C5    call        user32.EnableWindow
 004EF1CA    pop         ebx
 004EF1CB    ret
*}
end;

//004EF1CC
procedure TWinControl.CMColorChanged(var Message:Messages.TMessage);
begin
{*
 004EF1CC    push        ebx
 004EF1CD    mov         ebx,eax
 004EF1CF    mov         eax,ebx
 004EF1D1    call        TControl.CMColorChanged
 004EF1D6    mov         edx,dword ptr [ebx+7C]
 004EF1D9    mov         eax,dword ptr [ebx+1D0]
 004EF1DF    call        TBrush.SetColor
 004EF1E4    mov         dx,0B009
 004EF1E8    mov         eax,ebx
 004EF1EA    call        TWinControl.NotifyControls
 004EF1EF    pop         ebx
 004EF1F0    ret
*}
end;

//004EF1F4
procedure TWinControl.CMFontChanged;
begin
{*
 004EF1F4    push        ebx
 004EF1F5    mov         ebx,eax
 004EF1F7    mov         eax,ebx
 004EF1F9    call        TControl.CMFontChanged
 004EF1FE    mov         eax,ebx
 004EF200    call        TWinControl.HandleAllocated
 004EF205    test        al,al
>004EF207    je          004EF221
 004EF209    push        0
 004EF20B    mov         eax,dword ptr [ebx+74];TWinControl.FFont:TFont
 004EF20E    call        TFont.GetHandle
 004EF213    mov         ecx,eax
 004EF215    mov         edx,30
 004EF21A    mov         eax,ebx
 004EF21C    call        TControl.Perform
 004EF221    mov         dx,0B008
 004EF225    mov         eax,ebx
 004EF227    call        TWinControl.NotifyControls
 004EF22C    pop         ebx
 004EF22D    ret
*}
end;

//004EF230
procedure TWinControl.CMCursorChanged(var Message:Messages.TMessage);
begin
{*
 004EF230    push        ebx
 004EF231    add         esp,0FFFFFFF8
 004EF234    mov         ebx,eax
 004EF236    call        user32.GetCapture
 004EF23B    test        eax,eax
>004EF23D    jne         004EF269
 004EF23F    push        esp
 004EF240    call        user32.GetCursorPos
 004EF245    mov         eax,esp
 004EF247    xor         edx,edx
 004EF249    call        FindDragTarget
 004EF24E    cmp         ebx,eax
>004EF250    jne         004EF269
 004EF252    push        1
 004EF254    mov         eax,ebx
 004EF256    call        TWinControl.GetHandle
 004EF25B    mov         ecx,eax
 004EF25D    mov         edx,20
 004EF262    mov         eax,ebx
 004EF264    call        TControl.Perform
 004EF269    pop         ecx
 004EF26A    pop         edx
 004EF26B    pop         ebx
 004EF26C    ret
*}
end;

//004EF270
procedure TWinControl.CMBorderChanged;
begin
{*
 004EF270    push        esi
 004EF271    mov         esi,eax
 004EF273    mov         eax,esi
 004EF275    mov         ecx,dword ptr [eax]
 004EF277    call        dword ptr [ecx-10];TWinControl.DefaultHandler
 004EF27A    mov         eax,esi
 004EF27C    call        TWinControl.HandleAllocated
 004EF281    test        al,al
>004EF283    je          004EF2AE
 004EF285    push        37
 004EF287    push        0
 004EF289    push        0
 004EF28B    push        0
 004EF28D    push        0
 004EF28F    push        0
 004EF291    mov         eax,esi
 004EF293    call        TWinControl.GetHandle
 004EF298    push        eax
 004EF299    call        user32.SetWindowPos
 004EF29E    cmp         byte ptr [esi+69],0;TWinControl.FVisible:Boolean
>004EF2A2    je          004EF2AE
 004EF2A4    mov         eax,esi
 004EF2A6    mov         edx,dword ptr [eax]
 004EF2A8    call        dword ptr [edx+0A8];TWinControl.Invalidate
 004EF2AE    pop         esi
 004EF2AF    ret
*}
end;

//004EF2B0
procedure TWinControl.CMCtl3DChanged;
begin
{*
 004EF2B0    push        ebx
 004EF2B1    mov         ebx,eax
 004EF2B3    test        byte ptr [ebx+60],10;TWinControl.FControlStyle:TControlStyle
>004EF2B7    je          004EF2E1
 004EF2B9    cmp         dword ptr [ebx+40],0;TWinControl.FParent:TWinControl
>004EF2BD    je          004EF2E1
 004EF2BF    mov         eax,ebx
 004EF2C1    call        TWinControl.HandleAllocated
 004EF2C6    test        al,al
>004EF2C8    je          004EF2E1
 004EF2CA    mov         eax,dword ptr [ebx+278];TWinControl.FHandle:HWND
 004EF2D0    push        eax
 004EF2D1    call        user32.IsWindowVisible
 004EF2D6    test        eax,eax
>004EF2D8    je          004EF2E1
 004EF2DA    mov         eax,ebx
 004EF2DC    call        004EFD00
 004EF2E1    mov         dx,0B011
 004EF2E5    mov         eax,ebx
 004EF2E7    call        TWinControl.NotifyControls
 004EF2EC    pop         ebx
 004EF2ED    ret
*}
end;

//004EF2F0
{*procedure TWinControl.CMParentCtl3DChanged(?:?);
begin
 004EF2F0    push        ebx
 004EF2F1    mov         ebx,eax
 004EF2F3    cmp         byte ptr [ebx+208],0;TWinControl.FParentCtl3D:Boolean
>004EF2FA    je          004EF32C
 004EF2FC    cmp         dword ptr [edx+4],0
>004EF300    je          004EF314
 004EF302    cmp         dword ptr [edx+8],0
 004EF306    setne       al
 004EF309    mov         edx,eax
 004EF30B    mov         eax,ebx
 004EF30D    call        TWinControl.SetCtl3D
>004EF312    jmp         004EF325
 004EF314    mov         eax,dword ptr [ebx+40];TWinControl.FParent:TWinControl
 004EF317    movzx       edx,byte ptr [eax+204];TWinControl.FCtl3D:Boolean
 004EF31E    mov         eax,ebx
 004EF320    call        TWinControl.SetCtl3D
 004EF325    mov         byte ptr [ebx+208],1;TWinControl.FParentCtl3D:Boolean
 004EF32C    pop         ebx
 004EF32D    ret
end;*}

//004EF330
procedure TWinControl.sub_004EF330;
begin
{*
 004EF330    push        ebx
 004EF331    mov         ebx,eax
 004EF333    cmp         byte ptr [ebx+209],0;TWinControl.FParentDoubleBuffered:Boolean
>004EF33A    je          004EF358
 004EF33C    mov         eax,dword ptr [ebx+40];TWinControl.FParent:TWinControl
 004EF33F    test        eax,eax
>004EF341    je          004EF351
 004EF343    movzx       edx,byte ptr [eax+280];TWinControl.FDoubleBuffered:Boolean
 004EF34A    mov         eax,ebx
 004EF34C    call        TWinControl.SetDoubleBuffered
 004EF351    mov         byte ptr [ebx+209],1;TWinControl.FParentDoubleBuffered:Boolean
 004EF358    pop         ebx
 004EF359    ret
*}
end;

//004EF35C
procedure TWinControl.CMSysColorChange;
begin
{*
 004EF35C    call        TWinControl.Broadcast
 004EF361    ret
*}
end;

//004EF364
procedure TWinControl.CMWinIniChange;
begin
{*
 004EF364    call        TWinControl.Broadcast
 004EF369    ret
*}
end;

//004EF36C
procedure TWinControl.CMFontChange;
begin
{*
 004EF36C    call        TWinControl.Broadcast
 004EF371    ret
*}
end;

//004EF374
procedure TWinControl.sub_004EF374;
begin
{*
 004EF374    push        esi
 004EF375    mov         esi,eax
 004EF377    mov         dx,0B058
 004EF37B    mov         eax,esi
 004EF37D    call        TWinControl.NotifyControls
 004EF382    mov         eax,esi
 004EF384    mov         edx,dword ptr [eax]
 004EF386    call        dword ptr [edx+0A8];TWinControl.Invalidate
 004EF38C    pop         esi
 004EF38D    ret
*}
end;

//004EF390
procedure TWinControl.CMTimeChange;
begin
{*
 004EF390    call        TWinControl.Broadcast
 004EF395    ret
*}
end;

//004EF398
procedure TWinControl.CMDrag(var Message:TCMDrag);
begin
{*
 004EF398    push        ebx
 004EF399    push        esi
 004EF39A    push        edi
 004EF39B    push        ebp
 004EF39C    add         esp,0FFFFFFF8
 004EF39F    mov         ebx,edx
 004EF3A1    mov         esi,eax
 004EF3A3    mov         edi,dword ptr [ebx+8]
 004EF3A6    movzx       eax,byte ptr [ebx+4]
 004EF3AA    sub         al,4
>004EF3AC    jb          004EF3B4
 004EF3AE    dec         al
>004EF3B0    je          004EF3C6
>004EF3B2    jmp         004EF3F0
 004EF3B4    cmp         dword ptr [edi+0C],0
>004EF3B8    je          004EF3F0
 004EF3BA    mov         edx,ebx
 004EF3BC    mov         eax,dword ptr [edi+0C]
 004EF3BF    call        TControl.DoDragMsg
>004EF3C4    jmp         004EF3F0
 004EF3C6    push        0
 004EF3C8    push        0
 004EF3CA    lea         ecx,[esp+8]
 004EF3CE    mov         edx,edi
 004EF3D0    mov         eax,esi
 004EF3D2    call        TControl.ScreenToClient
 004EF3D7    lea         edx,[esp+8]
 004EF3DB    xor         ecx,ecx
 004EF3DD    mov         eax,esi
 004EF3DF    call        TWinControl.ControlAtPos
 004EF3E4    mov         ebp,eax
 004EF3E6    mov         dword ptr [ebx+0C],ebp
 004EF3E9    test        ebp,ebp
>004EF3EB    jne         004EF3F0
 004EF3ED    mov         dword ptr [ebx+0C],esi
 004EF3F0    pop         ecx
 004EF3F1    pop         edx
 004EF3F2    pop         ebp
 004EF3F3    pop         edi
 004EF3F4    pop         esi
 004EF3F5    pop         ebx
 004EF3F6    ret
*}
end;

//004EF3F8
procedure TWinControl.CMControlLIstChange;
begin
{*
 004EF3F8    push        ebx
 004EF3F9    mov         ecx,dword ptr [eax+40];TWinControl.FParent:TWinControl
 004EF3FC    test        ecx,ecx
>004EF3FE    je          004EF408
 004EF400    mov         ebx,ecx
 004EF402    mov         eax,dword ptr [ebx+4C];TWinControl.FTop:Integer
 004EF405    call        dword ptr [ebx+48];TWinControl.FWindowProc
 004EF408    pop         ebx
 004EF409    ret
*}
end;

//004EF40C
procedure TWinControl.sub_004EF40C;
begin
{*
 004EF40C    push        ebx
 004EF40D    mov         ecx,dword ptr [eax+40];TWinControl.FParent:TWinControl
 004EF410    test        ecx,ecx
>004EF412    je          004EF41C
 004EF414    mov         ebx,ecx
 004EF416    mov         eax,dword ptr [ebx+4C];TWinControl.FTop:Integer
 004EF419    call        dword ptr [ebx+48];TWinControl.FWindowProc
 004EF41C    pop         ebx
 004EF41D    ret
*}
end;

//004EF420
procedure TWinControl.CMSysFontChanged(var Message:Messages.TMessage);
begin
{*
 004EF420    push        ebx
 004EF421    push        esi
 004EF422    mov         esi,edx
 004EF424    mov         ebx,eax
 004EF426    mov         edx,esi
 004EF428    mov         eax,ebx
 004EF42A    call        TControl.CMSysFontChanged
 004EF42F    mov         edx,esi
 004EF431    mov         eax,ebx
 004EF433    call        TWinControl.Broadcast
 004EF438    pop         esi
 004EF439    pop         ebx
 004EF43A    ret
*}
end;

//004EF43C
function TWinControl.IsMenuKey(var Message:Messages.TWMKey):Boolean;
begin
{*
 004EF43C    push        ebx
 004EF43D    push        esi
 004EF43E    push        edi
 004EF43F    push        ebp
 004EF440    add         esp,0FFFFFFF8
 004EF443    mov         ebp,edx
 004EF445    mov         dword ptr [esp],eax
 004EF448    mov         byte ptr [esp+4],1
 004EF44D    mov         eax,dword ptr [esp]
 004EF450    test        byte ptr [eax+1C],10
>004EF454    jne         004EF4AD
 004EF456    mov         edi,dword ptr [esp]
 004EF459    test        edi,edi
>004EF45B    je          004EF48C
 004EF45D    mov         eax,edi
 004EF45F    mov         si,0FFD7
 004EF463    call        @CallDynaInst
 004EF468    mov         ebx,eax
 004EF46A    test        ebx,ebx
>004EF46C    je          004EF485
 004EF46E    cmp         dword ptr [ebx+48],0
>004EF472    je          004EF485
 004EF474    mov         edx,ebp
 004EF476    mov         eax,ebx
 004EF478    mov         si,0FFEE
 004EF47C    call        @CallDynaInst
 004EF481    test        al,al
>004EF483    jne         004EF4C7
 004EF485    mov         edi,dword ptr [edi+40]
 004EF488    test        edi,edi
>004EF48A    jne         004EF45D
 004EF48C    mov         dl,1
 004EF48E    mov         eax,dword ptr [esp]
 004EF491    call        GetParentForm
 004EF496    mov         ebx,eax
 004EF498    test        ebx,ebx
>004EF49A    je          004EF4AD
 004EF49C    mov         edx,ebp
 004EF49E    mov         eax,ebx
 004EF4A0    mov         si,0FFA1
 004EF4A4    call        @CallDynaInst
 004EF4A9    test        al,al
>004EF4AB    jne         004EF4C7
 004EF4AD    mov         ecx,dword ptr [ebp+8]
 004EF4B0    movzx       edx,word ptr [ebp+4]
 004EF4B4    mov         eax,0B016
 004EF4B9    call        004E3688
 004EF4BE    test        eax,eax
>004EF4C0    jne         004EF4C7
 004EF4C2    mov         byte ptr [esp+4],0
 004EF4C7    movzx       eax,byte ptr [esp+4]
 004EF4CC    pop         ecx
 004EF4CD    pop         edx
 004EF4CE    pop         ebp
 004EF4CF    pop         edi
 004EF4D0    pop         esi
 004EF4D1    pop         ebx
 004EF4D2    ret
*}
end;

//004EF4D4
procedure TWinControl.CNKeyDown(var Message:Messages.TWMKeyDown);
begin
{*
 004EF4D4    push        ebx
 004EF4D5    push        esi
 004EF4D6    push        edi
 004EF4D7    mov         esi,edx
 004EF4D9    mov         ebx,eax
 004EF4DB    mov         dword ptr [esi+0C],1
 004EF4E2    movzx       edx,word ptr [esi+4]
 004EF4E6    mov         eax,ebx
 004EF4E8    call        TWinControl.UpdateUIState
 004EF4ED    mov         edx,esi
 004EF4EF    mov         eax,ebx
 004EF4F1    call        TWinControl.IsMenuKey
 004EF4F6    test        al,al
>004EF4F8    jne         004EF5B3
 004EF4FE    test        byte ptr [ebx+1C],10
>004EF502    jne         004EF5AE
 004EF508    push        ebx
 004EF509    movzx       ecx,word ptr [esi+4]
 004EF50D    mov         edx,0B02E
 004EF512    mov         eax,ebx
 004EF514    call        TControl.Perform
 004EF519    test        eax,eax
>004EF51B    jne         004EF5B3
 004EF521    xor         edi,edi
 004EF523    movzx       eax,word ptr [esi+4]
 004EF527    cmp         eax,1B
>004EF52A    jg          004EF53F
>004EF52C    je          004EF55C
 004EF52E    sub         eax,3
>004EF531    je          004EF55C
 004EF533    sub         eax,6
>004EF536    je          004EF54E
 004EF538    sub         eax,4
>004EF53B    je          004EF55C
>004EF53D    jmp         004EF561
 004EF53F    add         eax,0FFFFFFDB
 004EF542    sub         eax,4
>004EF545    jb          004EF555
 004EF547    sub         eax,2
>004EF54A    je          004EF55C
>004EF54C    jmp         004EF561
 004EF54E    mov         edi,2
>004EF553    jmp         004EF561
 004EF555    mov         edi,1
>004EF55A    jmp         004EF561
 004EF55C    mov         edi,4
 004EF561    test        edi,edi
>004EF563    je          004EF5AE
 004EF565    push        0
 004EF567    movzx       ecx,word ptr [esi+4]
 004EF56B    mov         edx,0B01E
 004EF570    mov         eax,ebx
 004EF572    call        TControl.Perform
 004EF577    test        eax,eax
>004EF579    jne         004EF5AE
 004EF57B    push        0
 004EF57D    xor         ecx,ecx
 004EF57F    mov         edx,87
 004EF584    mov         eax,ebx
 004EF586    call        TControl.Perform
 004EF58B    test        eax,edi
>004EF58D    jne         004EF5AE
 004EF58F    mov         eax,dword ptr [esi+8]
 004EF592    push        eax
 004EF593    mov         dl,1
 004EF595    mov         eax,ebx
 004EF597    call        GetParentForm
 004EF59C    movzx       ecx,word ptr [esi+4]
 004EF5A0    mov         edx,0B005
 004EF5A5    call        TControl.Perform
 004EF5AA    test        eax,eax
>004EF5AC    jne         004EF5B3
 004EF5AE    xor         eax,eax
 004EF5B0    mov         dword ptr [esi+0C],eax
 004EF5B3    pop         edi
 004EF5B4    pop         esi
 004EF5B5    pop         ebx
 004EF5B6    ret
*}
end;

//004EF5B8
procedure TWinControl.CNKeyUp(var Message:Messages.TWMKeyUp);
begin
{*
 004EF5B8    push        ebx
 004EF5B9    push        esi
 004EF5BA    push        edi
 004EF5BB    mov         esi,edx
 004EF5BD    mov         ebx,eax
 004EF5BF    test        byte ptr [ebx+1C],10
>004EF5C3    jne         004EF605
 004EF5C5    movzx       edi,word ptr [esi+4]
 004EF5C9    movzx       eax,di
 004EF5CC    cmp         eax,1B
>004EF5CF    jg          004EF5E4
>004EF5D1    je          004EF5F1
 004EF5D3    sub         eax,3
>004EF5D6    je          004EF5F1
 004EF5D8    sub         eax,6
>004EF5DB    je          004EF5F1
 004EF5DD    sub         eax,4
>004EF5E0    je          004EF5F1
>004EF5E2    jmp         004EF605
 004EF5E4    add         eax,0FFFFFFDB
 004EF5E7    sub         eax,4
>004EF5EA    jb          004EF5F1
 004EF5EC    sub         eax,2
>004EF5EF    jne         004EF605
 004EF5F1    push        0
 004EF5F3    movzx       ecx,di
 004EF5F6    mov         edx,0B01E
 004EF5FB    mov         eax,ebx
 004EF5FD    call        TControl.Perform
 004EF602    mov         dword ptr [esi+0C],eax
 004EF605    pop         edi
 004EF606    pop         esi
 004EF607    pop         ebx
 004EF608    ret
*}
end;

//004EF60C
procedure TWinControl.CNChar(var Message:Messages.TWMChar);
begin
{*
 004EF60C    push        ebx
 004EF60D    push        esi
 004EF60E    mov         esi,edx
 004EF610    mov         ebx,eax
 004EF612    test        byte ptr [ebx+1C],10
>004EF616    jne         004EF657
 004EF618    mov         dword ptr [esi+0C],1
 004EF61F    push        0
 004EF621    xor         ecx,ecx
 004EF623    mov         edx,87
 004EF628    mov         eax,ebx
 004EF62A    call        TControl.Perform
 004EF62F    test        al,80
>004EF631    jne         004EF652
 004EF633    mov         eax,dword ptr [esi+8]
 004EF636    push        eax
 004EF637    mov         dl,1
 004EF639    mov         eax,ebx
 004EF63B    call        GetParentForm
 004EF640    movzx       ecx,word ptr [esi+4]
 004EF644    mov         edx,0B006
 004EF649    call        TControl.Perform
 004EF64E    test        eax,eax
>004EF650    jne         004EF657
 004EF652    xor         eax,eax
 004EF654    mov         dword ptr [esi+0C],eax
 004EF657    pop         esi
 004EF658    pop         ebx
 004EF659    ret
*}
end;

//004EF65C
procedure TWinControl.CNSysKeyDown(var Message:Messages.TWMKeyDown);
begin
{*
 004EF65C    push        ebx
 004EF65D    push        esi
 004EF65E    mov         esi,edx
 004EF660    mov         ebx,eax
 004EF662    mov         dword ptr [esi+0C],1
 004EF669    mov         edx,esi
 004EF66B    mov         eax,ebx
 004EF66D    call        TWinControl.IsMenuKey
 004EF672    test        al,al
>004EF674    jne         004EF6B5
 004EF676    test        byte ptr [ebx+1C],10
>004EF67A    jne         004EF6B0
 004EF67C    push        ebx
 004EF67D    movzx       ecx,word ptr [esi+4]
 004EF681    mov         edx,0B02E
 004EF686    mov         eax,ebx
 004EF688    call        TControl.Perform
 004EF68D    test        eax,eax
>004EF68F    jne         004EF6B5
 004EF691    mov         eax,dword ptr [esi+8]
 004EF694    push        eax
 004EF695    mov         dl,1
 004EF697    mov         eax,ebx
 004EF699    call        GetParentForm
 004EF69E    movzx       ecx,word ptr [esi+4]
 004EF6A2    mov         edx,0B005
 004EF6A7    call        TControl.Perform
 004EF6AC    test        eax,eax
>004EF6AE    jne         004EF6B5
 004EF6B0    xor         eax,eax
 004EF6B2    mov         dword ptr [esi+0C],eax
 004EF6B5    pop         esi
 004EF6B6    pop         ebx
 004EF6B7    ret
*}
end;

//004EF6B8
procedure TWinControl.CNSysChar(var Message:Messages.TWMChar);
begin
{*
 004EF6B8    push        ebx
 004EF6B9    push        esi
 004EF6BA    mov         esi,edx
 004EF6BC    mov         ebx,eax
 004EF6BE    test        byte ptr [ebx+1C],10
>004EF6C2    jne         004EF6E9
 004EF6C4    cmp         word ptr [esi+4],20
>004EF6C9    je          004EF6E9
 004EF6CB    mov         eax,dword ptr [esi+8]
 004EF6CE    push        eax
 004EF6CF    mov         dl,1
 004EF6D1    mov         eax,ebx
 004EF6D3    call        GetParentForm
 004EF6D8    movzx       ecx,word ptr [esi+4]
 004EF6DC    mov         edx,0B006
 004EF6E1    call        TControl.Perform
 004EF6E6    mov         dword ptr [esi+0C],eax
 004EF6E9    pop         esi
 004EF6EA    pop         ebx
 004EF6EB    ret
*}
end;

//004EF6EC
procedure TWinControl.SetBounds(ALeft:Integer; ATop:Integer; AHeight:Integer; AWidth:Integer);
begin
{*
 004EF6EC    push        ebp
 004EF6ED    mov         ebp,esp
 004EF6EF    add         esp,0FFFFFFC4
 004EF6F2    push        ebx
 004EF6F3    push        esi
 004EF6F4    push        edi
 004EF6F5    mov         edi,ecx
 004EF6F7    mov         ebx,edx
 004EF6F9    mov         esi,eax
 004EF6FB    cmp         ebx,dword ptr [esi+50]
>004EF6FE    jne         004EF719
 004EF700    cmp         edi,dword ptr [esi+54]
>004EF703    jne         004EF719
 004EF705    mov         eax,dword ptr [ebp+0C]
 004EF708    cmp         eax,dword ptr [esi+58]
>004EF70B    jne         004EF719
 004EF70D    mov         eax,dword ptr [ebp+8]
 004EF710    cmp         eax,dword ptr [esi+5C]
>004EF713    je          004EF7BF
 004EF719    mov         eax,esi
 004EF71B    call        TWinControl.HandleAllocated
 004EF720    test        al,al
>004EF722    je          004EF750
 004EF724    mov         eax,dword ptr [esi+278]
 004EF72A    push        eax
 004EF72B    call        user32.IsIconic
 004EF730    test        eax,eax
>004EF732    jne         004EF750
 004EF734    push        14
 004EF736    mov         eax,dword ptr [ebp+8]
 004EF739    push        eax
 004EF73A    mov         eax,dword ptr [ebp+0C]
 004EF73D    push        eax
 004EF73E    push        edi
 004EF73F    push        ebx
 004EF740    push        0
 004EF742    mov         eax,dword ptr [esi+278]
 004EF748    push        eax
 004EF749    call        user32.SetWindowPos
>004EF74E    jmp         004EF7AA
 004EF750    mov         dword ptr [esi+50],ebx
 004EF753    mov         dword ptr [esi+54],edi
 004EF756    mov         eax,dword ptr [ebp+0C]
 004EF759    mov         dword ptr [esi+58],eax
 004EF75C    mov         eax,dword ptr [ebp+8]
 004EF75F    mov         dword ptr [esi+5C],eax
 004EF762    mov         eax,esi
 004EF764    call        TWinControl.HandleAllocated
 004EF769    test        al,al
>004EF76B    je          004EF7AA
 004EF76D    mov         dword ptr [ebp-2C],2C
 004EF774    lea         eax,[ebp-2C]
 004EF777    push        eax
 004EF778    mov         eax,dword ptr [esi+278]
 004EF77E    push        eax
 004EF77F    call        user32.GetWindowPlacement
 004EF784    lea         edx,[ebp-3C]
 004EF787    mov         eax,esi
 004EF789    call        TControl.GetBoundsRect
 004EF78E    push        esi
 004EF78F    lea         esi,[ebp-3C]
 004EF792    lea         edi,[ebp-10]
 004EF795    movs        dword ptr [edi],dword ptr [esi]
 004EF796    movs        dword ptr [edi],dword ptr [esi]
 004EF797    movs        dword ptr [edi],dword ptr [esi]
 004EF798    movs        dword ptr [edi],dword ptr [esi]
 004EF799    pop         esi
 004EF79A    lea         eax,[ebp-2C]
 004EF79D    push        eax
 004EF79E    mov         eax,dword ptr [esi+278]
 004EF7A4    push        eax
 004EF7A5    call        user32.SetWindowPlacement
 004EF7AA    mov         eax,esi
 004EF7AC    call        004E62D0
 004EF7B1    mov         eax,esi
 004EF7B3    call        004EA028
 004EF7B8    mov         eax,esi
 004EF7BA    mov         edx,dword ptr [eax]
 004EF7BC    call        dword ptr [edx+78]
 004EF7BF    pop         edi
 004EF7C0    pop         esi
 004EF7C1    pop         ebx
 004EF7C2    mov         esp,ebp
 004EF7C4    pop         ebp
 004EF7C5    ret         8
*}
end;

//004EF7C8
{*procedure sub_004EF7C8(?:TCustomForm; ?:?; ?:Pointer);
begin
 004EF7C8    push        ebx
 004EF7C9    push        esi
 004EF7CA    push        edi
 004EF7CB    push        ebp
 004EF7CC    add         esp,0FFFFFFF8
 004EF7CF    mov         dword ptr [esp+4],ecx
 004EF7D3    mov         dword ptr [esp],edx
 004EF7D6    mov         ebp,eax
 004EF7D8    mov         eax,ebp
 004EF7DA    call        TWinControl.GetControlCount
 004EF7DF    mov         ebx,eax
 004EF7E1    dec         ebx
 004EF7E2    test        ebx,ebx
>004EF7E4    jl          004EF806
 004EF7E6    inc         ebx
 004EF7E7    xor         edi,edi
 004EF7E9    mov         edx,edi
 004EF7EB    mov         eax,ebp
 004EF7ED    call        TWinControl.GetControl
 004EF7F2    mov         ecx,dword ptr [esp+4]
 004EF7F6    mov         edx,dword ptr [esp]
 004EF7F9    mov         si,0FFEC
 004EF7FD    call        @CallDynaInst;TControl.sub_004E6AD4
 004EF802    inc         edi
 004EF803    dec         ebx
>004EF804    jne         004EF7E9
 004EF806    pop         ecx
 004EF807    pop         edx
 004EF808    pop         ebp
 004EF809    pop         edi
 004EF80A    pop         esi
 004EF80B    pop         ebx
 004EF80C    ret
end;*}

//004EF810
{*procedure sub_004EF810(?:?; ?:?; ?:?);
begin
 004EF810    push        ebx
 004EF811    push        esi
 004EF812    push        edi
 004EF813    push        ebp
 004EF814    mov         edi,ecx
 004EF816    mov         esi,edx
 004EF818    mov         ebx,dword ptr [eax+1CC]
 004EF81E    mov         ebp,dword ptr [ebx+8]
 004EF821    test        ebp,ebp
>004EF823    jbe         004EF838
 004EF825    push        edi
 004EF826    push        esi
 004EF827    push        ebp
 004EF828    call        kernel32.MulDiv
 004EF82D    mov         ecx,eax
 004EF82F    xor         edx,edx
 004EF831    mov         eax,ebx
 004EF833    call        TMargins.SetLeft
 004EF838    mov         ebp,dword ptr [ebx+0C]
 004EF83B    test        ebp,ebp
>004EF83D    jbe         004EF855
 004EF83F    push        edi
 004EF840    push        esi
 004EF841    push        ebp
 004EF842    call        kernel32.MulDiv
 004EF847    mov         ecx,eax
 004EF849    mov         edx,1
 004EF84E    mov         eax,ebx
 004EF850    call        TMargins.SetLeft
 004EF855    mov         ebp,dword ptr [ebx+10]
 004EF858    test        ebp,ebp
>004EF85A    jbe         004EF872
 004EF85C    push        edi
 004EF85D    push        esi
 004EF85E    push        ebp
 004EF85F    call        kernel32.MulDiv
 004EF864    mov         ecx,eax
 004EF866    mov         edx,2
 004EF86B    mov         eax,ebx
 004EF86D    call        TMargins.SetLeft
 004EF872    mov         ebp,dword ptr [ebx+14]
 004EF875    test        ebp,ebp
>004EF877    jbe         004EF88F
 004EF879    push        edi
 004EF87A    push        esi
 004EF87B    push        ebp
 004EF87C    call        kernel32.MulDiv
 004EF881    mov         ecx,eax
 004EF883    mov         edx,3
 004EF888    mov         eax,ebx
 004EF88A    call        TMargins.SetLeft
 004EF88F    pop         ebp
 004EF890    pop         edi
 004EF891    pop         esi
 004EF892    pop         ebx
 004EF893    ret
end;*}

//004EF894
procedure TWinControl.ChangeScale(M:Integer; D:Integer);
begin
{*
 004EF894    push        ebp
 004EF895    mov         ebp,esp
 004EF897    push        ecx
 004EF898    push        ebx
 004EF899    push        esi
 004EF89A    mov         esi,ecx
 004EF89C    mov         ebx,edx
 004EF89E    mov         dword ptr [ebp-4],eax
 004EF8A1    mov         eax,dword ptr [ebp-4]
 004EF8A4    inc         word ptr [eax+1BC]
 004EF8AB    xor         eax,eax
 004EF8AD    push        ebp
 004EF8AE    push        4EF940
 004EF8B3    push        dword ptr fs:[eax]
 004EF8B6    mov         dword ptr fs:[eax],esp
 004EF8B9    mov         ecx,esi
 004EF8BB    mov         edx,ebx
 004EF8BD    mov         eax,dword ptr [ebp-4]
 004EF8C0    call        004EF7C8
 004EF8C5    cmp         esi,ebx
>004EF8C7    je          004EF912
 004EF8C9    mov         eax,dword ptr [ebp-4]
 004EF8CC    test        byte ptr [eax+1C],2
>004EF8D0    je          004EF912
 004EF8D2    mov         eax,dword ptr [ebp-4]
 004EF8D5    test        byte ptr [eax+98],20
>004EF8DC    je          004EF912
 004EF8DE    push        esi
 004EF8DF    push        ebx
 004EF8E0    mov         eax,dword ptr [ebp-4]
 004EF8E3    mov         eax,dword ptr [eax+284]
 004EF8E9    push        eax
 004EF8EA    call        kernel32.MulDiv
 004EF8EF    mov         edx,dword ptr [ebp-4]
 004EF8F2    mov         dword ptr [edx+284],eax
 004EF8F8    push        esi
 004EF8F9    push        ebx
 004EF8FA    mov         eax,dword ptr [ebp-4]
 004EF8FD    mov         eax,dword ptr [eax+288]
 004EF903    push        eax
 004EF904    call        kernel32.MulDiv
 004EF909    mov         edx,dword ptr [ebp-4]
 004EF90C    mov         dword ptr [edx+288],eax
 004EF912    mov         ecx,esi
 004EF914    mov         edx,ebx
 004EF916    mov         eax,dword ptr [ebp-4]
 004EF919    call        TControl.sub_004E6AD4
 004EF91E    mov         ecx,esi
 004EF920    mov         edx,ebx
 004EF922    mov         eax,dword ptr [ebp-4]
 004EF925    call        004EF810
 004EF92A    xor         eax,eax
 004EF92C    pop         edx
 004EF92D    pop         ecx
 004EF92E    pop         ecx
 004EF92F    mov         dword ptr fs:[eax],edx
 004EF932    push        4EF947
 004EF937    mov         eax,dword ptr [ebp-4]
 004EF93A    call        TWinControl.EnableAlign
 004EF93F    ret
>004EF940    jmp         @HandleFinally
>004EF945    jmp         004EF937
 004EF947    pop         esi
 004EF948    pop         ebx
 004EF949    pop         ecx
 004EF94A    pop         ebp
 004EF94B    ret
*}
end;

//004EF94C
{*function TWinControl.ScrollBy(DeltaX:Integer; DeltaY:Integer):?;
begin
 004EF94C    push        ebx
 004EF94D    push        esi
 004EF94E    push        edi
 004EF94F    push        ebp
 004EF950    add         esp,0FFFFFFF4
 004EF953    mov         dword ptr [esp+4],ecx
 004EF957    mov         dword ptr [esp],edx
 004EF95A    mov         edi,eax
 004EF95C    mov         ebx,dword ptr [edi+278];TWinControl.FHandle:HWND
 004EF962    test        ebx,ebx
>004EF964    je          004EF970
 004EF966    push        ebx
 004EF967    call        user32.IsWindowVisible
 004EF96C    test        eax,eax
>004EF96E    jne         004EF974
 004EF970    xor         eax,eax
>004EF972    jmp         004EF976
 004EF974    mov         al,1
 004EF976    mov         byte ptr [esp+8],al
 004EF97A    cmp         byte ptr [esp+8],0
>004EF97F    je          004EF99B
 004EF981    push        0
 004EF983    push        0
 004EF985    mov         eax,dword ptr [esp+0C]
 004EF989    push        eax
 004EF98A    mov         eax,dword ptr [esp+0C]
 004EF98E    push        eax
 004EF98F    mov         eax,dword ptr [edi+278];TWinControl.FHandle:HWND
 004EF995    push        eax
 004EF996    call        user32.ScrollWindow
 004EF99B    mov         eax,edi
 004EF99D    call        TWinControl.GetControlCount
 004EF9A2    mov         esi,eax
 004EF9A4    dec         esi
 004EF9A5    test        esi,esi
>004EF9A7    jl          004EFA15
 004EF9A9    inc         esi
 004EF9AA    xor         ebp,ebp
 004EF9AC    mov         edx,ebp
 004EF9AE    mov         eax,edi
 004EF9B0    call        TWinControl.GetControl
 004EF9B5    mov         ebx,eax
 004EF9B7    mov         eax,ebx
 004EF9B9    mov         edx,dword ptr ds:[4DE8CC];TWinControl
 004EF9BF    call        @IsClass
 004EF9C4    test        al,al
>004EF9C6    je          004EF9D1
 004EF9C8    cmp         dword ptr [ebx+278],0
>004EF9CF    jne         004EF9E0
 004EF9D1    mov         eax,dword ptr [esp]
 004EF9D4    add         dword ptr [ebx+50],eax;TControl.FLeft:Integer
 004EF9D7    mov         eax,dword ptr [esp+4]
 004EF9DB    add         dword ptr [ebx+54],eax;TControl.FTop:Integer
>004EF9DE    jmp         004EFA11
 004EF9E0    cmp         byte ptr [esp+8],0
>004EF9E5    jne         004EFA11
 004EF9E7    push        14
 004EF9E9    mov         eax,ebx
 004EF9EB    mov         edx,dword ptr [eax+5C];TControl.FHeight:Integer
 004EF9EE    push        edx
 004EF9EF    mov         edx,dword ptr [eax+58];TControl.FWidth:Integer
 004EF9F2    push        edx
 004EF9F3    mov         edx,dword ptr [eax+54];TControl.FTop:Integer
 004EF9F6    add         edx,dword ptr [esp+10]
 004EF9FA    push        edx
 004EF9FB    mov         edx,dword ptr [eax+50];TControl.FLeft:Integer
 004EF9FE    add         edx,dword ptr [esp+10]
 004EFA02    push        edx
 004EFA03    push        0
 004EFA05    mov         eax,dword ptr [eax+278]
 004EFA0B    push        eax
 004EFA0C    call        user32.SetWindowPos
 004EFA11    inc         ebp
 004EFA12    dec         esi
>004EFA13    jne         004EF9AC
 004EFA15    xor         edx,edx
 004EFA17    mov         eax,edi
 004EFA19    call        TWinControl.AlignControl
 004EFA1E    add         esp,0C
 004EFA21    pop         ebp
 004EFA22    pop         edi
 004EFA23    pop         esi
 004EFA24    pop         ebx
 004EFA25    ret
end;*}

//004EFA28
procedure sub_004EFA28;
begin
{*
 004EFA28    mov         edx,dword ptr [eax+40];TMainForm.FParent:TWinControl
 004EFA2B    test        edx,edx
>004EFA2D    je          004EFA38
 004EFA2F    xchg        eax,edx
 004EFA30    mov         ecx,dword ptr [eax]
 004EFA32    call        dword ptr [ecx+0F8];TWinControl.sub_004EFA28
 004EFA38    ret
*}
end;

//004EFA3C
procedure TWinControl.SetZOrderPosition(Position:Integer);
begin
{*
 004EFA3C    push        ebx
 004EFA3D    push        esi
 004EFA3E    push        edi
 004EFA3F    push        ebp
 004EFA40    mov         esi,edx
 004EFA42    mov         ebx,eax
 004EFA44    mov         eax,dword ptr [ebx+40]
 004EFA47    test        eax,eax
>004EFA49    je          004EFB0E
 004EFA4F    mov         edx,dword ptr [eax+1F0]
 004EFA55    test        edx,edx
>004EFA57    je          004EFA5C
 004EFA59    sub         esi,dword ptr [edx+8]
 004EFA5C    mov         eax,dword ptr [eax+1F4]
 004EFA62    mov         edx,ebx
 004EFA64    call        TList.IndexOf
 004EFA69    mov         edi,eax
 004EFA6B    test        edi,edi
>004EFA6D    jl          004EFAA7
 004EFA6F    mov         eax,dword ptr [ebx+40]
 004EFA72    mov         edx,dword ptr [eax+1F4]
 004EFA78    mov         eax,dword ptr [edx+8]
 004EFA7B    test        esi,esi
>004EFA7D    jge         004EFA81
 004EFA7F    xor         esi,esi
 004EFA81    cmp         eax,esi
>004EFA83    jg          004EFA88
 004EFA85    mov         esi,eax
 004EFA87    dec         esi
 004EFA88    cmp         edi,esi
>004EFA8A    je          004EFAA7
 004EFA8C    mov         eax,edx
 004EFA8E    mov         edx,edi
 004EFA90    call        TList.Delete
 004EFA95    mov         eax,dword ptr [ebx+40]
 004EFA98    mov         eax,dword ptr [eax+1F4]
 004EFA9E    mov         ecx,ebx
 004EFAA0    mov         edx,esi
 004EFAA2    call        TList.Insert
 004EFAA7    cmp         dword ptr [ebx+278],0
>004EFAAE    je          004EFB0E
 004EFAB0    test        esi,esi
>004EFAB2    jne         004EFABB
 004EFAB4    mov         eax,1
>004EFAB9    jmp         004EFAF7
 004EFABB    mov         eax,dword ptr [ebx+40]
 004EFABE    mov         ebp,dword ptr [eax+1F4]
 004EFAC4    mov         eax,dword ptr [ebp+8]
 004EFAC7    dec         eax
 004EFAC8    cmp         esi,eax
>004EFACA    jne         004EFAD0
 004EFACC    xor         eax,eax
>004EFACE    jmp         004EFAF7
 004EFAD0    cmp         edi,esi
>004EFAD2    jge         004EFAE5
 004EFAD4    lea         edx,[esi+1]
 004EFAD7    mov         eax,ebp
 004EFAD9    call        TList.Get
 004EFADE    call        TWinControl.GetHandle
>004EFAE3    jmp         004EFAF7
 004EFAE5    cmp         edi,esi
>004EFAE7    jle         004EFB0E
 004EFAE9    mov         eax,ebp
 004EFAEB    mov         edx,esi
 004EFAED    call        TList.Get
 004EFAF2    call        TWinControl.GetHandle
 004EFAF7    push        3
 004EFAF9    push        0
 004EFAFB    push        0
 004EFAFD    push        0
 004EFAFF    push        0
 004EFB01    push        eax
 004EFB02    mov         eax,dword ptr [ebx+278]
 004EFB08    push        eax
 004EFB09    call        user32.SetWindowPos
 004EFB0E    pop         ebp
 004EFB0F    pop         edi
 004EFB10    pop         esi
 004EFB11    pop         ebx
 004EFB12    ret
*}
end;

//004EFB14
{*procedure TWinControl.sub_004E724C(?:?);
begin
 004EFB14    push        ebx
 004EFB15    push        esi
 004EFB16    mov         ecx,dword ptr [eax+40];TWinControl.FParent:TWinControl
 004EFB19    test        ecx,ecx
>004EFB1B    je          004EFB4A
 004EFB1D    test        dl,dl
>004EFB1F    je          004EFB2D
 004EFB21    mov         edx,dword ptr [ecx+1F4];TWinControl.FWinControls:TList
 004EFB27    mov         esi,dword ptr [edx+8];TList.FCount:Integer
 004EFB2A    dec         esi
>004EFB2B    jmp         004EFB2F
 004EFB2D    xor         esi,esi
 004EFB2F    xor         edx,edx
 004EFB31    mov         ebx,dword ptr [ecx+1F0];TWinControl.FControls:TList
 004EFB37    test        ebx,ebx
>004EFB39    je          004EFB3E
 004EFB3B    mov         edx,dword ptr [ebx+8];TList.FCount:Integer
 004EFB3E    add         esi,edx
 004EFB40    mov         edx,esi
 004EFB42    call        TWinControl.SetZOrderPosition
 004EFB47    pop         esi
 004EFB48    pop         ebx
 004EFB49    ret
 004EFB4A    mov         ecx,dword ptr [eax+278];TWinControl.FHandle:HWND
 004EFB50    test        ecx,ecx
>004EFB52    je          004EFB70
 004EFB54    push        3
 004EFB56    push        0
 004EFB58    push        0
 004EFB5A    push        0
 004EFB5C    push        0
 004EFB5E    and         edx,7F
 004EFB61    movzx       edx,word ptr [edx*2+7A11C4]
 004EFB69    push        edx
 004EFB6A    push        ecx
 004EFB6B    call        user32.SetWindowPos
 004EFB70    pop         esi
 004EFB71    pop         ebx
 004EFB72    ret
end;*}

//004EFB74
{*procedure sub_004EFB74(?:?);
begin
 004EFB74    push        ebx
 004EFB75    push        esi
 004EFB76    mov         esi,edx
 004EFB78    mov         ebx,eax
 004EFB7A    test        byte ptr [ebx+1C],10;TMainForm.FComponentState:TComponentState
>004EFB7E    je          004EFB93
 004EFB80    push        12
 004EFB82    push        0
 004EFB84    mov         eax,ebx
 004EFB86    call        TWinControl.GetHandle
 004EFB8B    push        eax
 004EFB8C    call        user32.GetDCEx
>004EFB91    jmp         004EFBA0
 004EFB93    mov         eax,ebx
 004EFB95    call        TWinControl.GetHandle
 004EFB9A    push        eax
 004EFB9B    call        user32.GetDC
 004EFBA0    test        eax,eax
>004EFBA2    jne         004EFBBB
 004EFBA4    mov         ecx,dword ptr ds:[7C49A4];^SResString228:TResStringRec
 004EFBAA    mov         dl,1
 004EFBAC    mov         eax,[0046BDEC];EOutOfResources
 004EFBB1    call        Exception.CreateRes;EOutOfResources.Create
 004EFBB6    call        @RaiseExcept
 004EFBBB    mov         edx,dword ptr [ebx+278];TMainForm.FHandle:HWND
 004EFBC1    mov         dword ptr [esi],edx
 004EFBC3    pop         esi
 004EFBC4    pop         ebx
 004EFBC5    ret
end;*}

//004EFBC8
procedure TWinControl.Invalidate;
begin
{*
 004EFBC8    push        0
 004EFBCA    xor         ecx,ecx
 004EFBCC    mov         edx,0B034
 004EFBD1    call        TControl.Perform
 004EFBD6    ret
*}
end;

//004EFBD8
procedure TWinControl.CMInputLangChange(var Message:Messages.TMessage);
begin
{*
 004EFBD8    push        ebx
 004EFBD9    push        esi
 004EFBDA    push        edi
 004EFBDB    push        ebp
 004EFBDC    mov         ebp,edx
 004EFBDE    mov         edi,eax
 004EFBE0    mov         eax,edi
 004EFBE2    call        TComponent.GetComponentCount
 004EFBE7    mov         esi,eax
 004EFBE9    dec         esi
 004EFBEA    test        esi,esi
>004EFBEC    jl          004EFC27
 004EFBEE    inc         esi
 004EFBEF    xor         ebx,ebx
 004EFBF1    mov         edx,ebx
 004EFBF3    mov         eax,edi
 004EFBF5    call        TComponent.GetComponent
 004EFBFA    mov         edx,dword ptr ds:[4DE8CC];TWinControl
 004EFC00    call        @IsClass
 004EFC05    test        al,al
>004EFC07    je          004EFC23
 004EFC09    mov         eax,dword ptr [ebp+8]
 004EFC0C    push        eax
 004EFC0D    mov         edx,ebx
 004EFC0F    mov         eax,edi
 004EFC11    call        TComponent.GetComponent
 004EFC16    mov         ecx,dword ptr [ebp+4]
 004EFC19    mov         edx,0B056
 004EFC1E    call        TControl.Perform
 004EFC23    inc         ebx
 004EFC24    dec         esi
>004EFC25    jne         004EFBF1
 004EFC27    pop         ebp
 004EFC28    pop         edi
 004EFC29    pop         esi
 004EFC2A    pop         ebx
 004EFC2B    ret
*}
end;

//004EFC2C
{*procedure TWinControl.CMInvalidate(?:?);
begin
 004EFC2C    push        ebx
 004EFC2D    push        esi
 004EFC2E    push        edi
 004EFC2F    mov         esi,edx
 004EFC31    mov         ebx,eax
 004EFC33    mov         eax,ebx
 004EFC35    call        TWinControl.HandleAllocated
 004EFC3A    test        al,al
>004EFC3C    je          004EFCC3
 004EFC42    mov         eax,dword ptr [ebx+40];TWinControl.FParent:TWinControl
 004EFC45    test        eax,eax
>004EFC47    je          004EFC5A
 004EFC49    push        0
 004EFC4B    mov         ecx,1
 004EFC50    mov         edx,0B034
 004EFC55    call        TControl.Perform
 004EFC5A    cmp         dword ptr [esi+4],0
>004EFC5E    jne         004EFCC3
 004EFC60    test        byte ptr [ebx+60],40;TWinControl.FControlStyle:TControlStyle
 004EFC64    setne       al
 004EFC67    xor         al,1
 004EFC69    neg         al
 004EFC6B    sbb         eax,eax
 004EFC6D    push        eax
 004EFC6E    push        0
 004EFC70    mov         eax,dword ptr [ebx+278];TWinControl.FHandle:HWND
 004EFC76    push        eax
 004EFC77    call        user32.InvalidateRect
 004EFC7C    call        TStyleManager.GetActiveStyle
 004EFC81    mov         esi,eax
 004EFC83    mov         eax,esi
 004EFC85    mov         edx,dword ptr [eax]
 004EFC87    call        dword ptr [edx+4C];TCustomStyleServices.GetEnabled
 004EFC8A    test        al,al
>004EFC8C    je          004EFCC3
 004EFC8E    mov         eax,ebx
 004EFC90    call        TWinControl.GetControlCount
 004EFC95    mov         edi,eax
 004EFC97    dec         edi
 004EFC98    test        edi,edi
>004EFC9A    jl          004EFCC3
 004EFC9C    inc         edi
 004EFC9D    xor         esi,esi
 004EFC9F    mov         edx,esi
 004EFCA1    mov         eax,ebx
 004EFCA3    call        TWinControl.GetControl
 004EFCA8    test        byte ptr [eax+62],4;TControl.FEnabled:Boolean
>004EFCAC    je          004EFCBF
 004EFCAE    mov         edx,esi
 004EFCB0    mov         eax,ebx
 004EFCB2    call        TWinControl.GetControl
 004EFCB7    mov         edx,dword ptr [eax]
 004EFCB9    call        dword ptr [edx+0A8];TControl.Invalidate
 004EFCBF    inc         esi
 004EFCC0    dec         edi
>004EFCC1    jne         004EFC9F
 004EFCC3    pop         edi
 004EFCC4    pop         esi
 004EFCC5    pop         ebx
 004EFCC6    ret
end;*}

//004EFCC8
procedure TWinControl.Update;
begin
{*
 004EFCC8    push        ebx
 004EFCC9    mov         ebx,eax
 004EFCCB    mov         eax,ebx
 004EFCCD    call        TWinControl.HandleAllocated
 004EFCD2    test        al,al
>004EFCD4    je          004EFCE2
 004EFCD6    mov         eax,dword ptr [ebx+278];TWinControl.FHandle:HWND
 004EFCDC    push        eax
 004EFCDD    call        user32.UpdateWindow
 004EFCE2    pop         ebx
 004EFCE3    ret
*}
end;

//004EFCE4
procedure TWinControl.Repaint;
begin
{*
 004EFCE4    push        esi
 004EFCE5    mov         esi,eax
 004EFCE7    mov         eax,esi
 004EFCE9    mov         edx,dword ptr [eax]
 004EFCEB    call        dword ptr [edx+0A8];TWinControl.Invalidate
 004EFCF1    mov         eax,esi
 004EFCF3    mov         edx,dword ptr [eax]
 004EFCF5    call        dword ptr [edx+0B4];TWinControl.Update
 004EFCFB    pop         esi
 004EFCFC    ret
*}
end;

//004EFD00
procedure sub_004EFD00(?:TWinControl);
begin
{*
 004EFD00    push        ebx
 004EFD01    add         esp,0FFFFFFF0
 004EFD04    mov         ebx,eax
 004EFD06    mov         edx,esp
 004EFD08    mov         eax,ebx
 004EFD0A    call        TControl.GetBoundsRect
 004EFD0F    mov         eax,esp
 004EFD11    mov         ecx,1
 004EFD16    mov         edx,1
 004EFD1B    call        InflateRect
 004EFD20    push        0FF
 004EFD22    lea         eax,[esp+4]
 004EFD26    push        eax
 004EFD27    mov         eax,dword ptr [ebx+40];TWinControl.FParent:TWinControl
 004EFD2A    mov         eax,dword ptr [eax+278];TWinControl.FHandle:HWND
 004EFD30    push        eax
 004EFD31    call        user32.InvalidateRect
 004EFD36    add         esp,10
 004EFD39    pop         ebx
 004EFD3A    ret
*}
end;

//004EFD3C
procedure TWinControl.CanFocus;
begin
{*
 004EFD3C    push        ebx
 004EFD3D    push        esi
 004EFD3E    push        ecx
 004EFD3F    mov         ebx,eax
 004EFD41    mov         byte ptr [esp],0
 004EFD45    mov         dl,1
 004EFD47    mov         eax,ebx
 004EFD49    call        GetParentForm
 004EFD4E    mov         esi,eax
 004EFD50    test        esi,esi
>004EFD52    je          004EFD74
 004EFD54    cmp         esi,ebx
>004EFD56    je          004EFD70
 004EFD58    cmp         byte ptr [ebx+69],0;TWinControl.FVisible:Boolean
>004EFD5C    je          004EFD74
 004EFD5E    mov         eax,ebx
 004EFD60    mov         edx,dword ptr [eax]
 004EFD62    call        dword ptr [edx+6C];TGroupBox.GetEnabled
 004EFD65    test        al,al
>004EFD67    je          004EFD74
 004EFD69    mov         ebx,dword ptr [ebx+40];TWinControl.FParent:TWinControl
 004EFD6C    cmp         esi,ebx
>004EFD6E    jne         004EFD58
 004EFD70    mov         byte ptr [esp],1
 004EFD74    movzx       eax,byte ptr [esp]
 004EFD78    pop         edx
 004EFD79    pop         esi
 004EFD7A    pop         ebx
 004EFD7B    ret
*}
end;

//004EFD7C
procedure TWinControl.SetFocus;
begin
{*
 004EFD7C    push        ebx
 004EFD7D    mov         ebx,eax
 004EFD7F    mov         dl,1
 004EFD81    mov         eax,ebx
 004EFD83    call        GetParentForm
 004EFD88    test        eax,eax
>004EFD8A    je          004EFD95
 004EFD8C    mov         edx,ebx
 004EFD8E    call        TCustomForm.FocusControl
 004EFD93    pop         ebx
 004EFD94    ret
 004EFD95    cmp         dword ptr [ebx+1E4],0;TWinControl.FParentWindow:HWND
>004EFD9C    je          004EFDAD
 004EFD9E    mov         eax,ebx
 004EFDA0    call        TWinControl.GetHandle
 004EFDA5    push        eax
 004EFDA6    call        user32.SetFocus
>004EFDAB    jmp         004EFDB6
 004EFDAD    mov         dl,1
 004EFDAF    mov         eax,ebx
 004EFDB1    call        ValidParentForm
 004EFDB6    pop         ebx
 004EFDB7    ret
*}
end;

//004EFDB8
procedure TWinControl.Focused;
begin
{*
 004EFDB8    push        ebx
 004EFDB9    mov         ebx,eax
 004EFDBB    cmp         dword ptr [ebx+278],0;TWinControl.FHandle:HWND
>004EFDC2    je          004EFDD1
 004EFDC4    call        user32.GetFocus
 004EFDC9    cmp         eax,dword ptr [ebx+278];TWinControl.FHandle:HWND
>004EFDCF    je          004EFDD5
 004EFDD1    xor         eax,eax
 004EFDD3    pop         ebx
 004EFDD4    ret
 004EFDD5    mov         al,1
 004EFDD7    pop         ebx
 004EFDD8    ret
*}
end;

//004EFDDC
procedure TWinControl.HandleNeeded;
begin
{*
 004EFDDC    push        esi
 004EFDDD    mov         esi,eax
 004EFDDF    cmp         dword ptr [esi+278],0;TWinControl.FHandle:HWND
>004EFDE6    jne         004EFDFE
 004EFDE8    mov         eax,dword ptr [esi+40];TWinControl.FParent:TWinControl
 004EFDEB    test        eax,eax
>004EFDED    je          004EFDF4
 004EFDEF    call        TWinControl.HandleNeeded
 004EFDF4    mov         eax,esi
 004EFDF6    mov         edx,dword ptr [eax]
 004EFDF8    call        dword ptr [edx+0C0];TWinControl.sub_004EC138
 004EFDFE    pop         esi
 004EFDFF    ret
*}
end;

//004EFE00
function TWinControl.GetHandle:HWND;
begin
{*
 004EFE00    push        ebx
 004EFE01    mov         ebx,eax
 004EFE03    mov         eax,ebx
 004EFE05    call        TWinControl.HandleNeeded
 004EFE0A    mov         eax,dword ptr [ebx+278]
 004EFE10    pop         ebx
 004EFE11    ret
*}
end;

//004EFE14
{*procedure sub_004EFE14(?:?);
begin
 004EFE14    push        ebx
 004EFE15    push        esi
 004EFE16    push        edi
 004EFE17    push        ebp
 004EFE18    add         esp,0FFFFFFF8
 004EFE1B    mov         esi,edx
 004EFE1D    mov         dword ptr [esp],eax
 004EFE20    push        0
 004EFE22    push        esi
 004EFE23    xor         ecx,ecx
 004EFE25    mov         edx,7FFFFFFF
 004EFE2A    mov         eax,7FFFFFFF
 004EFE2F    call        Rect
 004EFE34    mov         eax,dword ptr [esp]
 004EFE37    call        TWinControl.GetControlCount
 004EFE3C    mov         edi,eax
 004EFE3E    dec         edi
 004EFE3F    test        edi,edi
>004EFE41    jl          004EFF65
 004EFE47    inc         edi
 004EFE48    mov         dword ptr [esp+4],0
 004EFE50    mov         edx,dword ptr [esp+4]
 004EFE54    mov         eax,dword ptr [esp]
 004EFE57    call        TWinControl.GetControl
 004EFE5C    mov         ebx,eax
 004EFE5E    cmp         byte ptr [ebx+69],0;TControl.FVisible:Boolean
>004EFE62    jne         004EFE78
 004EFE64    test        byte ptr [ebx+1C],10;TControl.FComponentState:TComponentState
>004EFE68    je          004EFF5A
 004EFE6E    test        byte ptr [ebx+61],4;TControl.FVisible:Boolean
>004EFE72    jne         004EFF5A
 004EFE78    xor         edx,edx
 004EFE7A    mov         eax,dword ptr [ebx+84];TControl.FMargins:TMargins
 004EFE80    mov         ecx,dword ptr [eax]
 004EFE82    call        dword ptr [ecx+10];TMargins.sub_004F6C74
 004EFE85    cmp         eax,dword ptr [esi]
>004EFE87    jge         004EFE98
 004EFE89    xor         edx,edx
 004EFE8B    mov         eax,dword ptr [ebx+84];TControl.FMargins:TMargins
 004EFE91    mov         ecx,dword ptr [eax]
 004EFE93    call        dword ptr [ecx+10];TMargins.sub_004F6C74
 004EFE96    mov         dword ptr [esi],eax
 004EFE98    mov         edx,1
 004EFE9D    mov         eax,dword ptr [ebx+84];TControl.FMargins:TMargins
 004EFEA3    mov         ecx,dword ptr [eax]
 004EFEA5    call        dword ptr [ecx+10];TMargins.sub_004F6C74
 004EFEA8    cmp         eax,dword ptr [esi+4]
>004EFEAB    jge         004EFEC0
 004EFEAD    mov         edx,1
 004EFEB2    mov         eax,dword ptr [ebx+84];TControl.FMargins:TMargins
 004EFEB8    mov         ecx,dword ptr [eax]
 004EFEBA    call        dword ptr [ecx+10];TMargins.sub_004F6C74
 004EFEBD    mov         dword ptr [esi+4],eax
 004EFEC0    xor         edx,edx
 004EFEC2    mov         eax,dword ptr [ebx+84];TControl.FMargins:TMargins
 004EFEC8    mov         ecx,dword ptr [eax]
 004EFECA    call        dword ptr [ecx+10];TMargins.sub_004F6C74
 004EFECD    mov         ebp,eax
 004EFECF    mov         edx,2
 004EFED4    mov         eax,dword ptr [ebx+84];TControl.FMargins:TMargins
 004EFEDA    mov         ecx,dword ptr [eax]
 004EFEDC    call        dword ptr [ecx+10];TMargins.sub_004F6C74
 004EFEDF    add         ebp,eax
 004EFEE1    cmp         ebp,dword ptr [esi+8]
>004EFEE4    jle         004EFF0A
 004EFEE6    xor         edx,edx
 004EFEE8    mov         eax,dword ptr [ebx+84];TControl.FMargins:TMargins
 004EFEEE    mov         ecx,dword ptr [eax]
 004EFEF0    call        dword ptr [ecx+10];TMargins.sub_004F6C74
 004EFEF3    mov         ebp,eax
 004EFEF5    mov         edx,2
 004EFEFA    mov         eax,dword ptr [ebx+84];TControl.FMargins:TMargins
 004EFF00    mov         ecx,dword ptr [eax]
 004EFF02    call        dword ptr [ecx+10];TMargins.sub_004F6C74
 004EFF05    add         ebp,eax
 004EFF07    mov         dword ptr [esi+8],ebp
 004EFF0A    mov         edx,1
 004EFF0F    mov         eax,dword ptr [ebx+84];TControl.FMargins:TMargins
 004EFF15    mov         ecx,dword ptr [eax]
 004EFF17    call        dword ptr [ecx+10];TMargins.sub_004F6C74
 004EFF1A    mov         ebp,eax
 004EFF1C    mov         edx,3
 004EFF21    mov         eax,dword ptr [ebx+84];TControl.FMargins:TMargins
 004EFF27    mov         ecx,dword ptr [eax]
 004EFF29    call        dword ptr [ecx+10];TMargins.sub_004F6C74
 004EFF2C    add         ebp,eax
 004EFF2E    cmp         ebp,dword ptr [esi+0C]
>004EFF31    jle         004EFF5A
 004EFF33    mov         edx,1
 004EFF38    mov         eax,dword ptr [ebx+84];TControl.FMargins:TMargins
 004EFF3E    mov         ecx,dword ptr [eax]
 004EFF40    call        dword ptr [ecx+10];TMargins.sub_004F6C74
 004EFF43    mov         ebp,eax
 004EFF45    mov         edx,3
 004EFF4A    mov         eax,dword ptr [ebx+84];TControl.FMargins:TMargins
 004EFF50    mov         ecx,dword ptr [eax]
 004EFF52    call        dword ptr [ecx+10];TMargins.sub_004F6C74
 004EFF55    add         ebp,eax
 004EFF57    mov         dword ptr [esi+0C],ebp
 004EFF5A    inc         dword ptr [esp+4]
 004EFF5E    dec         edi
>004EFF5F    jne         004EFE50
 004EFF65    pop         ecx
 004EFF66    pop         edx
 004EFF67    pop         ebp
 004EFF68    pop         edi
 004EFF69    pop         esi
 004EFF6A    pop         ebx
 004EFF6B    ret
end;*}

//004EFF6C
function TWinControl.GetClientOrigin:TPoint;
begin
{*
 004EFF6C    push        ebx
 004EFF6D    push        esi
 004EFF6E    mov         ebx,edx
 004EFF70    mov         esi,eax
 004EFF72    xor         eax,eax
 004EFF74    mov         dword ptr [ebx],eax
 004EFF76    xor         eax,eax
 004EFF78    mov         dword ptr [ebx+4],eax
 004EFF7B    push        ebx
 004EFF7C    mov         eax,esi
 004EFF7E    call        TWinControl.GetHandle
 004EFF83    push        eax
 004EFF84    call        user32.ClientToScreen
 004EFF89    pop         esi
 004EFF8A    pop         ebx
 004EFF8B    ret
*}
end;

//004EFF8C
function TWinControl.GetClientRect:TRect;
begin
{*
 004EFF8C    push        ebx
 004EFF8D    push        esi
 004EFF8E    mov         esi,edx
 004EFF90    mov         ebx,eax
 004EFF92    push        esi
 004EFF93    mov         eax,ebx
 004EFF95    call        TWinControl.GetHandle
 004EFF9A    push        eax
 004EFF9B    call        user32.GetClientRect
 004EFFA0    pop         esi
 004EFFA1    pop         ebx
 004EFFA2    ret
*}
end;

//004EFFA4
procedure TWinControl.sub_004E9C04;
begin
{*
 004EFFA4    push        esi
 004EFFA5    mov         esi,eax
 004EFFA7    test        byte ptr [esi+1C],1;TWinControl.FComponentState:TComponentState
>004EFFAB    jne         004EFFDC
 004EFFAD    mov         eax,esi
 004EFFAF    call        TWinControl.HandleAllocated
 004EFFB4    test        al,al
>004EFFB6    je          004EFFDC
 004EFFB8    push        16
 004EFFBA    mov         eax,dword ptr [esi+5C];TWinControl.FHeight:Integer
 004EFFBD    push        eax
 004EFFBE    mov         eax,dword ptr [esi+58];TWinControl.FWidth:Integer
 004EFFC1    push        eax
 004EFFC2    push        0
 004EFFC4    push        0
 004EFFC6    push        0
 004EFFC8    mov         eax,esi
 004EFFCA    call        TWinControl.GetHandle
 004EFFCF    push        eax
 004EFFD0    call        user32.SetWindowPos
 004EFFD5    mov         eax,esi
 004EFFD7    mov         edx,dword ptr [eax]
 004EFFD9    call        dword ptr [edx+78];TWinControl.sub_004EE248
 004EFFDC    pop         esi
 004EFFDD    ret
*}
end;

//004EFFE0
procedure TTabSheet.SetBorderWidth(Value:TBorderWidth);
begin
{*
 004EFFE0    cmp         edx,dword ptr [eax+1C8];TTabSheet.FBorderWidth:TBorderWidth
>004EFFE6    je          004EFFFC
 004EFFE8    mov         dword ptr [eax+1C8],edx;TTabSheet.FBorderWidth:TBorderWidth
 004EFFEE    push        0
 004EFFF0    xor         ecx,ecx
 004EFFF2    mov         edx,0B03B
 004EFFF7    call        TControl.Perform
 004EFFFC    ret
*}
end;

//004F0000
procedure TWinControl.SetCtl3D(Value:Boolean);
begin
{*
 004F0000    cmp         dl,byte ptr [eax+204]
>004F0006    je          004F0023
 004F0008    mov         byte ptr [eax+204],dl
 004F000E    mov         byte ptr [eax+208],0
 004F0015    push        0
 004F0017    xor         ecx,ecx
 004F0019    mov         edx,0B010
 004F001E    call        TControl.Perform
 004F0023    ret
*}
end;

//004F0024
procedure TGroupBox.IsStoredCtl3D(Value:Boolean);
begin
{*
 004F0024    movzx       eax,byte ptr [eax+208];TGroupBox.FParentCtl3D:Boolean
 004F002B    xor         al,1
 004F002D    ret
*}
end;

//004F0030
procedure TGroupBox.IsStoredDoubleBuffered(Value:Boolean);
begin
{*
 004F0030    movzx       eax,byte ptr [eax+209];TGroupBox.FParentDoubleBuffered:Boolean
 004F0037    xor         al,1
 004F0039    ret
*}
end;

//004F003C
procedure TWinControl.SetParentCtl3D(Value:Boolean);
begin
{*
 004F003C    cmp         dl,byte ptr [eax+208]
>004F0042    je          004F0064
 004F0044    mov         byte ptr [eax+208],dl
 004F004A    cmp         dword ptr [eax+40],0
>004F004E    je          004F0064
 004F0050    test        byte ptr [eax+1C],2
>004F0054    jne         004F0064
 004F0056    push        0
 004F0058    xor         ecx,ecx
 004F005A    mov         edx,0B011
 004F005F    call        TControl.Perform
 004F0064    ret
*}
end;

//004F0068
{*function TGroupBox.GetTabOrder:?;
begin
 004F0068    push        ebx
 004F0069    push        esi
 004F006A    mov         ebx,eax
 004F006C    mov         esi,dword ptr [ebx+40];TGroupBox.FParent:TWinControl
 004F006F    test        esi,esi
>004F0071    je          004F0083
 004F0073    mov         eax,dword ptr [esi+1E8];TWinControl.FTabList:TList
 004F0079    mov         edx,ebx
 004F007B    call        TList.IndexOf
 004F0080    pop         esi
 004F0081    pop         ebx
 004F0082    ret
 004F0083    or          eax,0FFFFFFFF
 004F0086    pop         esi
 004F0087    pop         ebx
 004F0088    ret
end;*}

//004F008C
procedure sub_004F008C(?:Pointer; ?:TTabOrder);
begin
{*
 004F008C    push        ebx
 004F008D    push        esi
 004F008E    push        edi
 004F008F    push        ebp
 004F0090    mov         esi,edx
 004F0092    mov         ebx,eax
 004F0094    mov         eax,ebx
 004F0096    call        TGroupBox.GetTabOrder
 004F009B    movsx       eax,ax
 004F009E    test        eax,eax
>004F00A0    jl          004F00E0
 004F00A2    mov         edx,dword ptr [ebx+40]
 004F00A5    mov         ebp,dword ptr [edx+1E8]
 004F00AB    mov         edx,dword ptr [ebp+8]
 004F00AE    test        si,si
>004F00B1    jge         004F00B5
 004F00B3    xor         esi,esi
 004F00B5    movsx       ecx,si
 004F00B8    cmp         edx,ecx
>004F00BA    jg          004F00BF
 004F00BC    mov         esi,edx
 004F00BE    dec         esi
 004F00BF    movsx       edi,si
 004F00C2    cmp         eax,edi
>004F00C4    je          004F00E0
 004F00C6    mov         edx,ebp
 004F00C8    xchg        eax,edx
 004F00C9    call        TList.Delete
 004F00CE    mov         edx,edi
 004F00D0    mov         eax,dword ptr [ebx+40]
 004F00D3    mov         eax,dword ptr [eax+1E8]
 004F00D9    mov         ecx,ebx
 004F00DB    call        TList.Insert
 004F00E0    pop         ebp
 004F00E1    pop         edi
 004F00E2    pop         esi
 004F00E3    pop         ebx
 004F00E4    ret
*}
end;

//004F00E8
procedure TGroupBox.SetTabOrder(Value:TTabOrder);
begin
{*
 004F00E8    test        byte ptr [eax+64],8;TGroupBox.FControlState:TControlState
>004F00EC    je          004F00F8
 004F00EE    movsx       edx,dx
 004F00F1    mov         dword ptr [eax+1F8],edx;TGroupBox.FTabOrder:Integer
 004F00F7    ret
 004F00F8    call        004F008C
 004F00FD    ret
*}
end;

//004F0100
procedure TWinControl.SetTabStop(Value:Boolean);
begin
{*
 004F0100    push        ebx
 004F0101    push        esi
 004F0102    mov         ebx,edx
 004F0104    mov         esi,eax
 004F0106    cmp         bl,byte ptr [esi+1FC]
>004F010C    je          004F015A
 004F010E    mov         byte ptr [esi+1FC],bl
 004F0114    mov         eax,esi
 004F0116    call        TWinControl.HandleAllocated
 004F011B    test        al,al
>004F011D    je          004F014A
 004F011F    mov         eax,dword ptr [esi+278]
 004F0125    push        0F0
 004F0127    push        eax
 004F0128    call        user32.GetWindowLongW
 004F012D    and         eax,0FFFEFFFF
 004F0132    test        bl,bl
>004F0134    je          004F013B
 004F0136    or          eax,10000
 004F013B    mov         edx,dword ptr [esi+278]
 004F0141    push        eax
 004F0142    push        0F0
 004F0144    push        edx
 004F0145    call        user32.SetWindowLongW
 004F014A    push        0
 004F014C    xor         ecx,ecx
 004F014E    mov         edx,0B028
 004F0153    mov         eax,esi
 004F0155    call        TControl.Perform
 004F015A    pop         esi
 004F015B    pop         ebx
 004F015C    ret
*}
end;

//004F0160
procedure TPanel.SetUseDockManager(Value:Boolean);
begin
{*
 004F0160    push        ebp
 004F0161    mov         ebp,esp
 004F0163    push        0
 004F0165    push        ebx
 004F0166    push        esi
 004F0167    mov         ebx,eax
 004F0169    xor         eax,eax
 004F016B    push        ebp
 004F016C    push        4F01C4
 004F0171    push        dword ptr fs:[eax]
 004F0174    mov         dword ptr fs:[eax],esp
 004F0177    cmp         dl,byte ptr [ebx+206];TPanel.FUseDockManager:Boolean
>004F017D    je          004F01AE
 004F017F    mov         byte ptr [ebx+206],dl;TPanel.FUseDockManager:Boolean
 004F0185    test        byte ptr [ebx+1C],10;TPanel.FComponentState:TComponentState
 004F0189    setne       al
 004F018C    xor         al,1
 004F018E    test        al,dl
>004F0190    je          004F01AE
 004F0192    lea         edx,[ebp-4]
 004F0195    mov         eax,ebx
 004F0197    mov         si,0FFC4
 004F019B    call        @CallDynaInst;TWinControl.sub_004EE6D0
 004F01A0    mov         edx,dword ptr [ebp-4]
 004F01A3    lea         eax,[ebx+1D8];TPanel.FDockManager:IDockManager
 004F01A9    call        @IntfCopy
 004F01AE    xor         eax,eax
 004F01B0    pop         edx
 004F01B1    pop         ecx
 004F01B2    pop         ecx
 004F01B3    mov         dword ptr fs:[eax],edx
 004F01B6    push        4F01CB
 004F01BB    lea         eax,[ebp-4]
 004F01BE    call        @IntfClear
 004F01C3    ret
>004F01C4    jmp         @HandleFinally
>004F01C9    jmp         004F01BB
 004F01CB    pop         esi
 004F01CC    pop         ebx
 004F01CD    pop         ecx
 004F01CE    pop         ebp
 004F01CF    ret
*}
end;

//004F01D0
function TWinControl.HandleAllocated:Boolean;
begin
{*
 004F01D0    cmp         dword ptr [eax+278],0
 004F01D7    setne       al
 004F01DA    ret
*}
end;

//004F01DC
procedure sub_004F01DC(?:TWinControl);
begin
{*
 004F01DC    push        ebx
 004F01DD    push        esi
 004F01DE    push        edi
 004F01DF    add         esp,0FFFFFFBC
 004F01E2    mov         ebx,eax
 004F01E4    mov         eax,dword ptr [ebx+278];TWinControl.FHandle:HWND
 004F01EA    push        eax
 004F01EB    call        user32.IsIconic
 004F01F0    test        eax,eax
>004F01F2    je          004F021B
 004F01F4    mov         dword ptr [esp+18],2C
 004F01FC    lea         eax,[esp+18]
 004F0200    push        eax
 004F0201    mov         eax,dword ptr [ebx+278];TWinControl.FHandle:HWND
 004F0207    push        eax
 004F0208    call        user32.GetWindowPlacement
 004F020D    lea         esi,[esp+34]
 004F0211    lea         edi,[esp+8]
 004F0215    movs        dword ptr [edi],dword ptr [esi]
 004F0216    movs        dword ptr [edi],dword ptr [esi]
 004F0217    movs        dword ptr [edi],dword ptr [esi]
 004F0218    movs        dword ptr [edi],dword ptr [esi]
>004F0219    jmp         004F022C
 004F021B    lea         eax,[esp+8]
 004F021F    push        eax
 004F0220    mov         eax,dword ptr [ebx+278];TWinControl.FHandle:HWND
 004F0226    push        eax
 004F0227    call        user32.GetWindowRect
 004F022C    mov         eax,dword ptr [ebx+278];TWinControl.FHandle:HWND
 004F0232    push        0F0
 004F0234    push        eax
 004F0235    call        user32.GetWindowLongW
 004F023A    test        eax,40000000
>004F023F    je          004F02C5
 004F0245    mov         eax,dword ptr [ebx+278];TWinControl.FHandle:HWND
 004F024B    push        0F8
 004F024D    push        eax
 004F024E    call        user32.GetWindowLongW
 004F0253    mov         esi,eax
 004F0255    test        esi,esi
>004F0257    je          004F02C5
 004F0259    push        0EC
 004F025B    push        esi
 004F025C    call        user32.GetWindowLongW
 004F0261    test        eax,400000
>004F0266    je          004F027B
 004F0268    mov         eax,dword ptr [esp+8]
 004F026C    mov         dword ptr [esp],eax
 004F026F    mov         edx,dword ptr [esp+10]
 004F0273    mov         dword ptr [esp+8],edx
 004F0277    mov         dword ptr [esp+10],eax
 004F027B    mov         eax,dword ptr [esp+8]
 004F027F    mov         dword ptr [esp],eax
 004F0282    mov         eax,dword ptr [esp+0C]
 004F0286    mov         dword ptr [esp+4],eax
 004F028A    push        esp
 004F028B    push        esi
 004F028C    call        user32.ScreenToClient
 004F0291    mov         eax,dword ptr [esp]
 004F0294    mov         dword ptr [esp+8],eax
 004F0298    mov         eax,dword ptr [esp+4]
 004F029C    mov         dword ptr [esp+0C],eax
 004F02A0    mov         eax,dword ptr [esp+10]
 004F02A4    mov         dword ptr [esp],eax
 004F02A7    mov         eax,dword ptr [esp+14]
 004F02AB    mov         dword ptr [esp+4],eax
 004F02AF    push        esp
 004F02B0    push        esi
 004F02B1    call        user32.ScreenToClient
 004F02B6    mov         eax,dword ptr [esp]
 004F02B9    mov         dword ptr [esp+10],eax
 004F02BD    mov         eax,dword ptr [esp+4]
 004F02C1    mov         dword ptr [esp+14],eax
 004F02C5    mov         eax,dword ptr [esp+8]
 004F02C9    mov         dword ptr [ebx+50],eax;TWinControl.FLeft:Integer
 004F02CC    mov         eax,dword ptr [esp+0C]
 004F02D0    mov         dword ptr [ebx+54],eax;TWinControl.FTop:Integer
 004F02D3    mov         eax,dword ptr [esp+10]
 004F02D7    sub         eax,dword ptr [esp+8]
 004F02DB    mov         dword ptr [ebx+58],eax;TWinControl.FWidth:Integer
 004F02DE    mov         eax,dword ptr [esp+14]
 004F02E2    sub         eax,dword ptr [esp+0C]
 004F02E6    mov         dword ptr [ebx+5C],eax;TWinControl.FHeight:Integer
 004F02E9    mov         eax,ebx
 004F02EB    call        004E62D0
 004F02F0    add         esp,44
 004F02F3    pop         edi
 004F02F4    pop         esi
 004F02F5    pop         ebx
 004F02F6    ret
*}
end;

//004F02F8
procedure TWinControl.GetTabControlList(List:TList);
begin
{*
 004F02F8    push        ebx
 004F02F9    push        esi
 004F02FA    push        edi
 004F02FB    push        ebp
 004F02FC    mov         ebp,edx
 004F02FE    mov         esi,eax
 004F0300    mov         eax,dword ptr [esi+1E8];TWinControl.FTabList:TList
 004F0306    test        eax,eax
>004F0308    je          004F032F
 004F030A    mov         ebx,dword ptr [eax+8];TList.FCount:Integer
 004F030D    dec         ebx
 004F030E    test        ebx,ebx
>004F0310    jl          004F032F
 004F0312    inc         ebx
 004F0313    xor         edi,edi
 004F0315    mov         edx,edi
 004F0317    mov         eax,dword ptr [esi+1E8];TWinControl.FTabList:TList
 004F031D    call        TList.Get
 004F0322    mov         edx,eax
 004F0324    mov         eax,ebp
 004F0326    call        TList.Add
 004F032B    inc         edi
 004F032C    dec         ebx
>004F032D    jne         004F0315
 004F032F    pop         ebp
 004F0330    pop         edi
 004F0331    pop         esi
 004F0332    pop         ebx
 004F0333    ret
*}
end;

//004F0334
procedure TWinControl.GetTabOrderList(List:TList);
begin
{*
 004F0334    push        ebx
 004F0335    push        esi
 004F0336    push        edi
 004F0337    push        ebp
 004F0338    add         esp,0FFFFFFF8
 004F033B    mov         dword ptr [esp],edx
 004F033E    mov         ebp,eax
 004F0340    mov         eax,dword ptr [ebp+1E8];TWinControl.FTabList:TList
 004F0346    test        eax,eax
>004F0348    je          004F038B
 004F034A    mov         edi,dword ptr [eax+8];TList.FCount:Integer
 004F034D    dec         edi
 004F034E    test        edi,edi
>004F0350    jl          004F038B
 004F0352    inc         edi
 004F0353    mov         dword ptr [esp+4],0
 004F035B    mov         eax,dword ptr [ebp+1E8];TWinControl.FTabList:TList
 004F0361    mov         edx,dword ptr [esp+4]
 004F0365    call        TList.Get
 004F036A    mov         ebx,eax
 004F036C    mov         edx,ebx
 004F036E    mov         eax,dword ptr [esp]
 004F0371    call        TList.Add
 004F0376    mov         edx,dword ptr [esp]
 004F0379    mov         eax,ebx
 004F037B    mov         si,0FFAF
 004F037F    call        @CallDynaInst
 004F0384    inc         dword ptr [esp+4]
 004F0388    dec         edi
>004F0389    jne         004F035B
 004F038B    pop         ecx
 004F038C    pop         edx
 004F038D    pop         ebp
 004F038E    pop         edi
 004F038F    pop         esi
 004F0390    pop         ebx
 004F0391    ret
*}
end;

//004F0394
function TWinControl.FindNextControl(CurControl:TWinControl; GoForward:Boolean; CheckTabStop:Boolean; CheckParent:Boolean):TWinControl;
begin
{*
 004F0394    push        ebp
 004F0395    mov         ebp,esp
 004F0397    add         esp,0FFFFFFEC
 004F039A    push        ebx
 004F039B    push        esi
 004F039C    push        edi
 004F039D    mov         byte ptr [ebp-5],cl
 004F03A0    mov         edi,edx
 004F03A2    mov         dword ptr [ebp-4],eax
 004F03A5    xor         eax,eax
 004F03A7    mov         dword ptr [ebp-0C],eax
 004F03AA    mov         dl,1
 004F03AC    mov         eax,[0046C204];TList
 004F03B1    call        TObject.Create
 004F03B6    mov         dword ptr [ebp-14],eax
 004F03B9    xor         eax,eax
 004F03BB    push        ebp
 004F03BC    push        4F048A
 004F03C1    push        dword ptr fs:[eax]
 004F03C4    mov         dword ptr fs:[eax],esp
 004F03C7    mov         edx,dword ptr [ebp-14]
 004F03CA    mov         eax,dword ptr [ebp-4]
 004F03CD    mov         si,0FFAF
 004F03D1    call        @CallDynaInst
 004F03D6    mov         eax,dword ptr [ebp-14]
 004F03D9    cmp         dword ptr [eax+8],0
>004F03DD    jle         004F0474
 004F03E3    mov         edx,edi
 004F03E5    mov         eax,dword ptr [ebp-14]
 004F03E8    call        TList.IndexOf
 004F03ED    mov         dword ptr [ebp-10],eax
 004F03F0    cmp         dword ptr [ebp-10],0FFFFFFFF
>004F03F4    jne         004F040D
 004F03F6    cmp         byte ptr [ebp-5],0
>004F03FA    je          004F0408
 004F03FC    mov         eax,dword ptr [ebp-14]
 004F03FF    mov         eax,dword ptr [eax+8]
 004F0402    dec         eax
 004F0403    mov         dword ptr [ebp-10],eax
>004F0406    jmp         004F040D
 004F0408    xor         eax,eax
 004F040A    mov         dword ptr [ebp-10],eax
 004F040D    mov         ebx,dword ptr [ebp-10]
 004F0410    cmp         byte ptr [ebp-5],0
>004F0414    je          004F0423
 004F0416    inc         ebx
 004F0417    mov         eax,dword ptr [ebp-14]
 004F041A    cmp         ebx,dword ptr [eax+8]
>004F041D    jne         004F042E
 004F041F    xor         ebx,ebx
>004F0421    jmp         004F042E
 004F0423    test        ebx,ebx
>004F0425    jne         004F042D
 004F0427    mov         eax,dword ptr [ebp-14]
 004F042A    mov         ebx,dword ptr [eax+8]
 004F042D    dec         ebx
 004F042E    mov         edx,ebx
 004F0430    mov         eax,dword ptr [ebp-14]
 004F0433    call        TList.Get
 004F0438    mov         edi,eax
 004F043A    mov         eax,edi
 004F043C    mov         si,0FFB4
 004F0440    call        @CallDynaInst
 004F0445    test        al,al
>004F0447    je          004F0469
 004F0449    cmp         byte ptr [ebp+0C],0
>004F044D    je          004F0458
 004F044F    cmp         byte ptr [edi+1FC],0
>004F0456    je          004F0469
 004F0458    cmp         byte ptr [ebp+8],0
>004F045C    je          004F0466
 004F045E    mov         eax,dword ptr [edi+40]
 004F0461    cmp         eax,dword ptr [ebp-4]
>004F0464    jne         004F0469
 004F0466    mov         dword ptr [ebp-0C],edi
 004F0469    cmp         dword ptr [ebp-0C],0
>004F046D    jne         004F0474
 004F046F    cmp         ebx,dword ptr [ebp-10]
>004F0472    jne         004F0410
 004F0474    xor         eax,eax
 004F0476    pop         edx
 004F0477    pop         ecx
 004F0478    pop         ecx
 004F0479    mov         dword ptr fs:[eax],edx
 004F047C    push        4F0491
 004F0481    mov         eax,dword ptr [ebp-14]
 004F0484    call        TObject.Free
 004F0489    ret
>004F048A    jmp         @HandleFinally
>004F048F    jmp         004F0481
 004F0491    mov         eax,dword ptr [ebp-0C]
 004F0494    pop         edi
 004F0495    pop         esi
 004F0496    pop         ebx
 004F0497    mov         esp,ebp
 004F0499    pop         ebp
 004F049A    ret         8
*}
end;

//004F04A0
{*procedure sub_004F04A0(?:TWinControl; ?:TWinControl; ?:?);
begin
 004F04A0    push        ebp
 004F04A1    mov         ebp,esp
 004F04A3    push        esi
 004F04A4    mov         esi,edx
 004F04A6    mov         edx,dword ptr [ebp+8]
 004F04A9    push        edx
 004F04AA    xor         dl,1
 004F04AD    push        edx
 004F04AE    mov         edx,esi
 004F04B0    call        TWinControl.FindNextControl
 004F04B5    mov         esi,eax
 004F04B7    test        esi,esi
>004F04B9    je          004F04C5
 004F04BB    mov         eax,esi
 004F04BD    mov         edx,dword ptr [eax]
 004F04BF    call        dword ptr [edx+104];TWinControl.SetFocus
 004F04C5    pop         esi
 004F04C6    pop         ebp
 004F04C7    ret         4
end;*}

//004F04CC
procedure TWinControl.SelectFirst;
begin
{*
 004F04CC    push        ebx
 004F04CD    push        esi
 004F04CE    mov         ebx,eax
 004F04D0    mov         dl,1
 004F04D2    mov         eax,ebx
 004F04D4    call        GetParentForm
 004F04D9    mov         esi,eax
 004F04DB    test        esi,esi
>004F04DD    je          004F050E
 004F04DF    push        1
 004F04E1    push        0
 004F04E3    mov         cl,1
 004F04E5    xor         edx,edx
 004F04E7    mov         eax,ebx
 004F04E9    call        TWinControl.FindNextControl
 004F04EE    test        eax,eax
>004F04F0    jne         004F0501
 004F04F2    push        0
 004F04F4    push        0
 004F04F6    mov         cl,1
 004F04F8    xor         edx,edx
 004F04FA    mov         eax,ebx
 004F04FC    call        TWinControl.FindNextControl
 004F0501    test        eax,eax
>004F0503    je          004F050E
 004F0505    mov         edx,eax
 004F0507    mov         eax,esi
 004F0509    call        TCustomForm.SetActiveControl
 004F050E    pop         esi
 004F050F    pop         ebx
 004F0510    ret
*}
end;

//004F0514
procedure TWinControl.GetChildren(Root:TComponent; Proc:TGetChildProc);
begin
{*
 004F0514    push        ebp
 004F0515    mov         ebp,esp
 004F0517    add         esp,0FFFFFFF8
 004F051A    push        ebx
 004F051B    push        esi
 004F051C    mov         dword ptr [ebp-8],edx
 004F051F    mov         dword ptr [ebp-4],eax
 004F0522    mov         eax,dword ptr [ebp-4]
 004F0525    call        TWinControl.GetControlCount
 004F052A    mov         ebx,eax
 004F052C    dec         ebx
 004F052D    test        ebx,ebx
>004F052F    jl          004F0552
 004F0531    inc         ebx
 004F0532    xor         esi,esi
 004F0534    mov         edx,esi
 004F0536    mov         eax,dword ptr [ebp-4]
 004F0539    call        TWinControl.GetControl
 004F053E    mov         edx,dword ptr [eax+4]
 004F0541    cmp         edx,dword ptr [ebp-8]
>004F0544    jne         004F054E
 004F0546    mov         edx,eax
 004F0548    mov         eax,dword ptr [ebp+0C]
 004F054B    call        dword ptr [ebp+8]
 004F054E    inc         esi
 004F054F    dec         ebx
>004F0550    jne         004F0534
 004F0552    pop         esi
 004F0553    pop         ebx
 004F0554    pop         ecx
 004F0555    pop         ecx
 004F0556    pop         ebp
 004F0557    ret         8
*}
end;

//004F055C
procedure TWinControl.SetChildOrder(Child:Classes.TComponent; Order:Integer);
begin
{*
 004F055C    push        ebx
 004F055D    push        esi
 004F055E    mov         esi,ecx
 004F0560    mov         ebx,edx
 004F0562    mov         eax,ebx
 004F0564    mov         edx,dword ptr ds:[4DE8CC];TWinControl
 004F056A    call        @IsClass
 004F056F    test        al,al
>004F0571    je          004F057F
 004F0573    mov         edx,esi
 004F0575    mov         eax,ebx
 004F0577    call        TWinControl.SetZOrderPosition
 004F057C    pop         esi
 004F057D    pop         ebx
 004F057E    ret
 004F057F    mov         eax,ebx
 004F0581    mov         edx,dword ptr ds:[4DC470];TControl
 004F0587    call        @IsClass
 004F058C    test        al,al
>004F058E    je          004F0599
 004F0590    mov         edx,esi
 004F0592    mov         eax,ebx
 004F0594    call        TControl.SetZOrderPosition
 004F0599    pop         esi
 004F059A    pop         ebx
 004F059B    ret
*}
end;

//004F059C
procedure sub_004F059C;
begin
{*
 004F059C    call        004E80A8
 004F05A1    ret
*}
end;

//004F05A4
{*procedure sub_004F05A4(?:?; ?:?; ?:?; ?:?; ?:?);
begin
 004F05A4    push        ebp
 004F05A5    mov         ebp,esp
 004F05A7    push        ecx
 004F05A8    push        ebx
 004F05A9    push        esi
 004F05AA    push        edi
 004F05AB    mov         dword ptr [ebp-4],ecx
 004F05AE    mov         edi,edx
 004F05B0    mov         esi,eax
 004F05B2    mov         eax,dword ptr [esi+80]
 004F05B8    mov         edx,dword ptr [eax+14]
 004F05BB    test        edx,edx
>004F05BD    jbe         004F05C3
 004F05BF    mov         dword ptr [edi],edx
>004F05C1    jmp         004F05C7
 004F05C3    xor         edx,edx
 004F05C5    mov         dword ptr [edi],edx
 004F05C7    mov         edx,dword ptr [eax+10]
 004F05CA    test        edx,edx
>004F05CC    jbe         004F05D5
 004F05CE    mov         ecx,dword ptr [ebp-4]
 004F05D1    mov         dword ptr [ecx],edx
>004F05D3    jmp         004F05DC
 004F05D5    mov         edx,dword ptr [ebp-4]
 004F05D8    xor         ecx,ecx
 004F05DA    mov         dword ptr [edx],ecx
 004F05DC    mov         edx,dword ptr [eax+0C]
 004F05DF    test        edx,edx
>004F05E1    jbe         004F05EA
 004F05E3    mov         ecx,dword ptr [ebp+0C]
 004F05E6    mov         dword ptr [ecx],edx
>004F05E8    jmp         004F05F1
 004F05EA    mov         edx,dword ptr [ebp+0C]
 004F05ED    xor         ecx,ecx
 004F05EF    mov         dword ptr [edx],ecx
 004F05F1    mov         edx,dword ptr [eax+8]
 004F05F4    test        edx,edx
>004F05F6    jbe         004F05FF
 004F05F8    mov         eax,dword ptr [ebp+8]
 004F05FB    mov         dword ptr [eax],edx
>004F05FD    jmp         004F0606
 004F05FF    mov         eax,dword ptr [ebp+8]
 004F0602    xor         edx,edx
 004F0604    mov         dword ptr [eax],edx
 004F0606    test        byte ptr [esi+62],10
>004F060A    je          004F064A
 004F060C    mov         edx,dword ptr [esi+84]
 004F0612    mov         eax,dword ptr [edx+8]
 004F0615    add         eax,dword ptr [edx+10]
 004F0618    cmp         dword ptr [edi],0
>004F061B    jle         004F061F
 004F061D    add         dword ptr [edi],eax
 004F061F    mov         ecx,dword ptr [ebp+0C]
 004F0622    cmp         eax,dword ptr [ecx]
>004F0624    jg          004F062B
 004F0626    mov         ecx,dword ptr [ebp+0C]
 004F0629    sub         dword ptr [ecx],eax
 004F062B    mov         eax,dword ptr [edx+0C]
 004F062E    add         eax,dword ptr [edx+14]
 004F0631    mov         edx,dword ptr [ebp-4]
 004F0634    cmp         dword ptr [edx],0
>004F0637    jle         004F063E
 004F0639    mov         edx,dword ptr [ebp-4]
 004F063C    add         dword ptr [edx],eax
 004F063E    mov         edx,dword ptr [ebp+8]
 004F0641    cmp         eax,dword ptr [edx]
>004F0643    jg          004F064A
 004F0645    mov         edx,dword ptr [ebp+8]
 004F0648    sub         dword ptr [edx],eax
 004F064A    mov         eax,dword ptr [ebp+0C]
 004F064D    push        eax
 004F064E    mov         eax,dword ptr [ebp+8]
 004F0651    push        eax
 004F0652    mov         ecx,dword ptr [ebp-4]
 004F0655    mov         edx,edi
 004F0657    mov         eax,esi
 004F0659    mov         ebx,dword ptr [eax]
 004F065B    call        dword ptr [ebx+4C]
 004F065E    pop         edi
 004F065F    pop         esi
 004F0660    pop         ebx
 004F0661    pop         ecx
 004F0662    pop         ebp
 004F0663    ret         8
end;*}

//004F0668
procedure TWinControl.CalcConstraints(var MinWidth:Integer; var MinHeight:Integer; var MaxWidth:Integer; var MaxHeight:Integer);
begin
{*
 004F0668    push        ebp
 004F0669    mov         ebp,esp
 004F066B    add         esp,0FFFFFFA0
 004F066E    push        ebx
 004F066F    push        esi
 004F0670    push        edi
 004F0671    mov         dword ptr [ebp-8],ecx
 004F0674    mov         dword ptr [ebp-4],edx
 004F0677    mov         esi,eax
 004F0679    mov         eax,esi
 004F067B    call        TWinControl.HandleAllocated
 004F0680    test        al,al
>004F0682    je          004F0B04
 004F0688    mov         eax,esi
 004F068A    call        TWinControl.GetControlCount
 004F068F    test        eax,eax
>004F0691    je          004F0B04
 004F0697    lea         edx,[ebp-60]
 004F069A    mov         eax,esi
 004F069C    mov         ecx,dword ptr [eax]
 004F069E    call        dword ptr [ecx+64]
 004F06A1    lea         edx,[ebp-60]
 004F06A4    mov         eax,esi
 004F06A6    mov         ecx,dword ptr [eax]
 004F06A8    call        dword ptr [ecx+0B8]
 004F06AE    lea         eax,[ebp-60]
 004F06B1    call        IsRectEmpty
 004F06B6    test        al,al
>004F06B8    jne         004F0B04
 004F06BE    mov         eax,dword ptr [esi+84]
 004F06C4    mov         edx,2
 004F06C9    mov         ecx,dword ptr [eax]
 004F06CB    call        dword ptr [ecx+10]
 004F06CE    mov         edx,dword ptr [ebp-58]
 004F06D1    sub         edx,dword ptr [ebp-60]
 004F06D4    sub         eax,edx
 004F06D6    mov         dword ptr [ebp-0C],eax
 004F06D9    mov         eax,dword ptr [esi+84]
 004F06DF    mov         edx,3
 004F06E4    mov         ecx,dword ptr [eax]
 004F06E6    call        dword ptr [ecx+10]
 004F06E9    mov         edx,dword ptr [ebp-54]
 004F06EC    sub         edx,dword ptr [ebp-5C]
 004F06EF    sub         eax,edx
 004F06F1    mov         dword ptr [ebp-10],eax
 004F06F4    mov         eax,dword ptr [esi+84]
 004F06FA    mov         edx,2
 004F06FF    mov         ecx,dword ptr [eax]
 004F0701    call        dword ptr [ecx+10]
 004F0704    mov         edx,dword ptr [ebp-58]
 004F0707    sub         edx,dword ptr [ebp-60]
 004F070A    sub         eax,edx
 004F070C    mov         dword ptr [ebp-14],eax
 004F070F    mov         eax,dword ptr [esi+84]
 004F0715    mov         edx,3
 004F071A    mov         ecx,dword ptr [eax]
 004F071C    call        dword ptr [ecx+10]
 004F071F    mov         edx,dword ptr [ebp-54]
 004F0722    sub         edx,dword ptr [ebp-5C]
 004F0725    sub         eax,edx
 004F0727    mov         dword ptr [ebp-18],eax
 004F072A    mov         eax,dword ptr [ebp-4]
 004F072D    cmp         dword ptr [eax],0
>004F0730    jle         004F073A
 004F0732    mov         eax,dword ptr [ebp-4]
 004F0735    mov         edx,dword ptr [ebp-0C]
 004F0738    sub         dword ptr [eax],edx
 004F073A    mov         eax,dword ptr [ebp-8]
 004F073D    cmp         dword ptr [eax],0
>004F0740    jle         004F074A
 004F0742    mov         eax,dword ptr [ebp-8]
 004F0745    mov         edx,dword ptr [ebp-10]
 004F0748    sub         dword ptr [eax],edx
 004F074A    mov         eax,dword ptr [ebp+0C]
 004F074D    cmp         dword ptr [eax],0
>004F0750    jle         004F075A
 004F0752    mov         eax,dword ptr [ebp+0C]
 004F0755    mov         edx,dword ptr [ebp-14]
 004F0758    sub         dword ptr [eax],edx
 004F075A    mov         eax,dword ptr [ebp+8]
 004F075D    cmp         dword ptr [eax],0
>004F0760    jle         004F076A
 004F0762    mov         eax,dword ptr [ebp+8]
 004F0765    mov         edx,dword ptr [ebp-18]
 004F0768    sub         dword ptr [eax],edx
 004F076A    xor         eax,eax
 004F076C    push        ebp
 004F076D    push        4F0AFD
 004F0772    push        dword ptr fs:[eax]
 004F0775    mov         dword ptr fs:[eax],esp
 004F0778    xor         eax,eax
 004F077A    mov         dword ptr [ebp-20],eax
 004F077D    xor         eax,eax
 004F077F    mov         dword ptr [ebp-30],eax
 004F0782    xor         eax,eax
 004F0784    mov         dword ptr [ebp-24],eax
 004F0787    xor         eax,eax
 004F0789    mov         dword ptr [ebp-34],eax
 004F078C    xor         eax,eax
 004F078E    mov         dword ptr [ebp-28],eax
 004F0791    xor         eax,eax
 004F0793    mov         dword ptr [ebp-38],eax
 004F0796    xor         eax,eax
 004F0798    mov         dword ptr [ebp-2C],eax
 004F079B    xor         eax,eax
 004F079D    mov         dword ptr [ebp-3C],eax
 004F07A0    mov         eax,esi
 004F07A2    call        TWinControl.GetControlCount
 004F07A7    mov         edi,eax
 004F07A9    dec         edi
 004F07AA    test        edi,edi
>004F07AC    jl          004F0A27
 004F07B2    inc         edi
 004F07B3    mov         dword ptr [ebp-1C],0
 004F07BA    mov         edx,dword ptr [ebp-1C]
 004F07BD    mov         eax,esi
 004F07BF    call        TWinControl.GetControl
 004F07C4    mov         ebx,eax
 004F07C6    cmp         byte ptr [ebx+69],0
>004F07CA    jne         004F07E0
 004F07CC    test        byte ptr [ebx+1C],10
>004F07D0    je          004F0A1D
 004F07D6    test        byte ptr [ebx+61],4
>004F07DA    jne         004F0A1D
 004F07E0    lea         eax,[ebp-44]
 004F07E3    push        eax
 004F07E4    lea         eax,[ebp-4C]
 004F07E7    push        eax
 004F07E8    lea         ecx,[ebp-48]
 004F07EB    lea         edx,[ebp-40]
 004F07EE    mov         eax,ebx
 004F07F0    call        004F05A4
 004F07F5    movzx       eax,byte ptr [ebx+6D]
 004F07F9    sub         al,1
>004F07FB    jb          004F0813
 004F07FD    sub         al,2
>004F07FF    jb          004F0807
 004F0801    sub         al,2
>004F0803    je          004F080D
>004F0805    jmp         004F087C
 004F0807    mov         byte ptr [ebp-4D],1
>004F080B    jmp         004F0880
 004F080D    mov         byte ptr [ebp-4D],2
>004F0811    jmp         004F0880
 004F0813    movzx       eax,byte ptr [ebx+73]
 004F0817    and         al,byte ptr ds:[4F0B10]
 004F081D    movzx       edx,byte ptr ds:[4F0B10]
 004F0824    cmp         dl,al
>004F0826    jne         004F0876
 004F0828    mov         byte ptr [ebp-4D],1
 004F082C    cmp         dword ptr [ebp-40],0
>004F0830    jle         004F0850
 004F0832    mov         eax,dword ptr [ebx+84]
 004F0838    mov         edx,2
 004F083D    mov         ecx,dword ptr [eax]
 004F083F    call        dword ptr [ecx+10]
 004F0842    mov         edx,dword ptr [ebp-58]
 004F0845    sub         edx,dword ptr [ebp-60]
 004F0848    sub         edx,eax
 004F084A    sub         edx,dword ptr [ebp-40]
 004F084D    mov         dword ptr [ebp-40],edx
 004F0850    cmp         dword ptr [ebp-44],0
>004F0854    jle         004F0880
 004F0856    mov         eax,dword ptr [ebx+84]
 004F085C    mov         edx,2
 004F0861    mov         ecx,dword ptr [eax]
 004F0863    call        dword ptr [ecx+10]
 004F0866    mov         edx,dword ptr [ebp-58]
 004F0869    sub         edx,dword ptr [ebp-60]
 004F086C    add         edx,dword ptr [ebp-44]
 004F086F    sub         edx,eax
 004F0871    mov         dword ptr [ebp-44],edx
>004F0874    jmp         004F0880
 004F0876    mov         byte ptr [ebp-4D],0
>004F087A    jmp         004F0880
 004F087C    mov         byte ptr [ebp-4D],3
 004F0880    movzx       eax,byte ptr [ebx+6D]
 004F0884    sub         al,1
>004F0886    jb          004F089E
 004F0888    add         al,0FE
 004F088A    sub         al,2
>004F088C    jb          004F0892
>004F088E    je          004F0898
>004F0890    jmp         004F0907
 004F0892    mov         byte ptr [ebp-4E],1
>004F0896    jmp         004F090B
 004F0898    mov         byte ptr [ebp-4E],2
>004F089C    jmp         004F090B
 004F089E    movzx       eax,byte ptr [ebx+73]
 004F08A2    and         al,byte ptr ds:[4F0B14]
 004F08A8    movzx       edx,byte ptr ds:[4F0B14]
 004F08AF    cmp         dl,al
>004F08B1    jne         004F0901
 004F08B3    mov         byte ptr [ebp-4E],1
 004F08B7    cmp         dword ptr [ebp-48],0
>004F08BB    jle         004F08DB
 004F08BD    mov         eax,dword ptr [ebx+84]
 004F08C3    mov         edx,3
 004F08C8    mov         ecx,dword ptr [eax]
 004F08CA    call        dword ptr [ecx+10]
 004F08CD    mov         edx,dword ptr [ebp-54]
 004F08D0    sub         edx,dword ptr [ebp-5C]
 004F08D3    sub         edx,eax
 004F08D5    sub         edx,dword ptr [ebp-48]
 004F08D8    mov         dword ptr [ebp-48],edx
 004F08DB    cmp         dword ptr [ebp-4C],0
>004F08DF    jle         004F090B
 004F08E1    mov         eax,dword ptr [ebx+84]
 004F08E7    mov         edx,3
 004F08EC    mov         ecx,dword ptr [eax]
 004F08EE    call        dword ptr [ecx+10]
 004F08F1    mov         edx,dword ptr [ebp-54]
 004F08F4    sub         edx,dword ptr [ebp-5C]
 004F08F7    add         edx,dword ptr [ebp-4C]
 004F08FA    sub         edx,eax
 004F08FC    mov         dword ptr [ebp-4C],edx
>004F08FF    jmp         004F090B
 004F0901    mov         byte ptr [ebp-4E],0
>004F0905    jmp         004F090B
 004F0907    mov         byte ptr [ebp-4E],3
 004F090B    movzx       eax,byte ptr [ebp-4D]
 004F090F    dec         eax
 004F0910    sub         al,2
>004F0912    jb          004F0918
>004F0914    je          004F096E
>004F0916    jmp         004F0994
 004F0918    cmp         dword ptr [ebp-40],0
>004F091C    jle         004F0942
 004F091E    mov         eax,dword ptr [ebp-4]
 004F0921    mov         eax,dword ptr [eax]
 004F0923    cmp         eax,dword ptr [ebp-40]
>004F0926    jge         004F0942
 004F0928    mov         eax,dword ptr [ebp-4]
 004F092B    mov         edx,dword ptr [ebp-40]
 004F092E    mov         dword ptr [eax],edx
 004F0930    mov         eax,dword ptr [ebp-4]
 004F0933    mov         eax,dword ptr [eax]
 004F0935    cmp         eax,dword ptr [ebp-20]
>004F0938    jle         004F0942
 004F093A    mov         eax,dword ptr [ebp-4]
 004F093D    mov         eax,dword ptr [eax]
 004F093F    mov         dword ptr [ebp-20],eax
 004F0942    cmp         dword ptr [ebp-44],0
>004F0946    jle         004F0994
 004F0948    mov         eax,dword ptr [ebp+0C]
 004F094B    mov         eax,dword ptr [eax]
 004F094D    cmp         eax,dword ptr [ebp-44]
>004F0950    jle         004F0994
 004F0952    mov         eax,dword ptr [ebp+0C]
 004F0955    mov         edx,dword ptr [ebp-44]
 004F0958    mov         dword ptr [eax],edx
 004F095A    mov         eax,dword ptr [ebp+0C]
 004F095D    mov         eax,dword ptr [eax]
 004F095F    cmp         eax,dword ptr [ebp-24]
>004F0962    jle         004F0994
 004F0964    mov         eax,dword ptr [ebp+0C]
 004F0967    mov         eax,dword ptr [eax]
 004F0969    mov         dword ptr [ebp-24],eax
>004F096C    jmp         004F0994
 004F096E    mov         eax,dword ptr [ebx+84]
 004F0974    mov         edx,2
 004F0979    mov         ecx,dword ptr [eax]
 004F097B    call        dword ptr [ecx+10]
 004F097E    add         dword ptr [ebp-30],eax
 004F0981    mov         eax,dword ptr [ebx+84]
 004F0987    mov         edx,2
 004F098C    mov         ecx,dword ptr [eax]
 004F098E    call        dword ptr [ecx+10]
 004F0991    add         dword ptr [ebp-34],eax
 004F0994    movzx       eax,byte ptr [ebp-4E]
 004F0998    dec         eax
 004F0999    sub         al,2
>004F099B    jb          004F09A1
>004F099D    je          004F09F7
>004F099F    jmp         004F0A1D
 004F09A1    cmp         dword ptr [ebp-48],0
>004F09A5    jle         004F09CB
 004F09A7    mov         eax,dword ptr [ebp-8]
 004F09AA    mov         eax,dword ptr [eax]
 004F09AC    cmp         eax,dword ptr [ebp-48]
>004F09AF    jge         004F09CB
 004F09B1    mov         eax,dword ptr [ebp-8]
 004F09B4    mov         edx,dword ptr [ebp-48]
 004F09B7    mov         dword ptr [eax],edx
 004F09B9    mov         eax,dword ptr [ebp-8]
 004F09BC    mov         eax,dword ptr [eax]
 004F09BE    cmp         eax,dword ptr [ebp-28]
>004F09C1    jle         004F09CB
 004F09C3    mov         eax,dword ptr [ebp-8]
 004F09C6    mov         eax,dword ptr [eax]
 004F09C8    mov         dword ptr [ebp-28],eax
 004F09CB    cmp         dword ptr [ebp-4C],0
>004F09CF    jle         004F0A1D
 004F09D1    mov         eax,dword ptr [ebp+8]
 004F09D4    mov         eax,dword ptr [eax]
 004F09D6    cmp         eax,dword ptr [ebp-4C]
>004F09D9    jle         004F0A1D
 004F09DB    mov         eax,dword ptr [ebp+8]
 004F09DE    mov         edx,dword ptr [ebp-4C]
 004F09E1    mov         dword ptr [eax],edx
 004F09E3    mov         eax,dword ptr [ebp+8]
 004F09E6    mov         eax,dword ptr [eax]
 004F09E8    cmp         eax,dword ptr [ebp-2C]
>004F09EB    jle         004F0A1D
 004F09ED    mov         eax,dword ptr [ebp+8]
 004F09F0    mov         eax,dword ptr [eax]
 004F09F2    mov         dword ptr [ebp-2C],eax
>004F09F5    jmp         004F0A1D
 004F09F7    mov         eax,dword ptr [ebx+84]
 004F09FD    mov         edx,3
 004F0A02    mov         ecx,dword ptr [eax]
 004F0A04    call        dword ptr [ecx+10]
 004F0A07    add         dword ptr [ebp-38],eax
 004F0A0A    mov         eax,dword ptr [ebx+84]
 004F0A10    mov         edx,3
 004F0A15    mov         ecx,dword ptr [eax]
 004F0A17    call        dword ptr [ecx+10]
 004F0A1A    add         dword ptr [ebp-3C],eax
 004F0A1D    inc         dword ptr [ebp-1C]
 004F0A20    dec         edi
>004F0A21    jne         004F07BA
 004F0A27    cmp         dword ptr [ebp-20],0
>004F0A2B    jle         004F0A45
 004F0A2D    mov         eax,dword ptr [ebp-20]
 004F0A30    add         eax,dword ptr [ebp-30]
 004F0A33    mov         edx,dword ptr [ebp-4]
 004F0A36    cmp         eax,dword ptr [edx]
>004F0A38    jle         004F0A45
 004F0A3A    mov         eax,dword ptr [ebp-20]
 004F0A3D    add         eax,dword ptr [ebp-30]
 004F0A40    mov         edx,dword ptr [ebp-4]
 004F0A43    mov         dword ptr [edx],eax
 004F0A45    cmp         dword ptr [ebp-24],0
>004F0A49    jle         004F0A6B
 004F0A4B    mov         eax,dword ptr [ebp+0C]
 004F0A4E    cmp         dword ptr [eax],0
>004F0A51    je          004F0A60
 004F0A53    mov         eax,dword ptr [ebp-24]
 004F0A56    add         eax,dword ptr [ebp-34]
 004F0A59    mov         edx,dword ptr [ebp+0C]
 004F0A5C    cmp         eax,dword ptr [edx]
>004F0A5E    jle         004F0A6B
 004F0A60    mov         eax,dword ptr [ebp-24]
 004F0A63    add         eax,dword ptr [ebp-34]
 004F0A66    mov         edx,dword ptr [ebp+0C]
 004F0A69    mov         dword ptr [edx],eax
 004F0A6B    cmp         dword ptr [ebp-28],0
>004F0A6F    jle         004F0A89
 004F0A71    mov         eax,dword ptr [ebp-28]
 004F0A74    add         eax,dword ptr [ebp-38]
 004F0A77    mov         edx,dword ptr [ebp-8]
 004F0A7A    cmp         eax,dword ptr [edx]
>004F0A7C    jle         004F0A89
 004F0A7E    mov         eax,dword ptr [ebp-28]
 004F0A81    add         eax,dword ptr [ebp-38]
 004F0A84    mov         edx,dword ptr [ebp-8]
 004F0A87    mov         dword ptr [edx],eax
 004F0A89    cmp         dword ptr [ebp-2C],0
>004F0A8D    jle         004F0AAF
 004F0A8F    mov         eax,dword ptr [ebp+8]
 004F0A92    cmp         dword ptr [eax],0
>004F0A95    je          004F0AA4
 004F0A97    mov         eax,dword ptr [ebp-2C]
 004F0A9A    add         eax,dword ptr [ebp-3C]
 004F0A9D    mov         edx,dword ptr [ebp+8]
 004F0AA0    cmp         eax,dword ptr [edx]
>004F0AA2    jle         004F0AAF
 004F0AA4    mov         eax,dword ptr [ebp-2C]
 004F0AA7    add         eax,dword ptr [ebp-3C]
 004F0AAA    mov         edx,dword ptr [ebp+8]
 004F0AAD    mov         dword ptr [edx],eax
 004F0AAF    xor         eax,eax
 004F0AB1    pop         edx
 004F0AB2    pop         ecx
 004F0AB3    pop         ecx
 004F0AB4    mov         dword ptr fs:[eax],edx
 004F0AB7    push        4F0B04
 004F0ABC    mov         eax,dword ptr [ebp-4]
 004F0ABF    cmp         dword ptr [eax],0
>004F0AC2    jle         004F0ACC
 004F0AC4    mov         eax,dword ptr [ebp-4]
 004F0AC7    mov         edx,dword ptr [ebp-0C]
 004F0ACA    add         dword ptr [eax],edx
 004F0ACC    mov         eax,dword ptr [ebp-8]
 004F0ACF    cmp         dword ptr [eax],0
>004F0AD2    jle         004F0ADC
 004F0AD4    mov         eax,dword ptr [ebp-8]
 004F0AD7    mov         edx,dword ptr [ebp-10]
 004F0ADA    add         dword ptr [eax],edx
 004F0ADC    mov         eax,dword ptr [ebp+0C]
 004F0ADF    cmp         dword ptr [eax],0
>004F0AE2    jle         004F0AEC
 004F0AE4    mov         eax,dword ptr [ebp+0C]
 004F0AE7    mov         edx,dword ptr [ebp-14]
 004F0AEA    add         dword ptr [eax],edx
 004F0AEC    mov         eax,dword ptr [ebp+8]
 004F0AEF    cmp         dword ptr [eax],0
>004F0AF2    jle         004F0AFC
 004F0AF4    mov         eax,dword ptr [ebp+8]
 004F0AF7    mov         edx,dword ptr [ebp-18]
 004F0AFA    add         dword ptr [eax],edx
 004F0AFC    ret
>004F0AFD    jmp         @HandleFinally
>004F0B02    jmp         004F0ABC
 004F0B04    pop         edi
 004F0B05    pop         esi
 004F0B06    pop         ebx
 004F0B07    mov         esp,ebp
 004F0B09    pop         ebp
 004F0B0A    ret         8
*}
end;

//004F0B18
procedure TWinControl.ConstrainedResize(var MinWidth:Integer; var MinHeight:Integer; var MaxWidth:Integer; var MaxHeight:Integer);
begin
{*
 004F0B18    push        ebp
 004F0B19    mov         ebp,esp
 004F0B1B    push        ebx
 004F0B1C    push        esi
 004F0B1D    push        edi
 004F0B1E    mov         edi,ecx
 004F0B20    mov         esi,edx
 004F0B22    mov         ebx,eax
 004F0B24    mov         eax,dword ptr [ebp+0C]
 004F0B27    push        eax
 004F0B28    mov         eax,dword ptr [ebp+8]
 004F0B2B    push        eax
 004F0B2C    mov         ecx,edi
 004F0B2E    mov         edx,esi
 004F0B30    mov         eax,ebx
 004F0B32    call        TWinControl.CalcConstraints
 004F0B37    mov         eax,dword ptr [ebp+0C]
 004F0B3A    push        eax
 004F0B3B    mov         eax,dword ptr [ebp+8]
 004F0B3E    push        eax
 004F0B3F    mov         ecx,edi
 004F0B41    mov         edx,esi
 004F0B43    mov         eax,ebx
 004F0B45    call        TControl.ConstrainedResize
 004F0B4A    pop         edi
 004F0B4B    pop         esi
 004F0B4C    pop         ebx
 004F0B4D    pop         ebp
 004F0B4E    ret         8
*}
end;

//004F0B54
procedure sub_004F0B54;
begin
{*
 004F0B54    call        TWinControl.RecreateWnd
 004F0B59    ret
*}
end;

//004F0B5C
{*function sub_004F0B5C(?:?):?;
begin
 004F0B5C    push        ebp
 004F0B5D    mov         ebp,esp
 004F0B5F    add         esp,0FFFFFFF8
 004F0B62    mov         eax,dword ptr [ebp+8]
 004F0B65    mov         eax,dword ptr [eax-4]
 004F0B68    mov         eax,dword ptr [eax+28C]
 004F0B6E    mov         dword ptr [ebp-8],eax
 004F0B71    call        TMonitor.CheckMonitorSupport
 004F0B76    mov         eax,dword ptr [ebp-8]
 004F0B79    call        TMonitor.GetMonitor
 004F0B7E    or          edx,0FFFFFFFF
 004F0B81    call        TMonitor.Enter
 004F0B86    xor         edx,edx
 004F0B88    push        ebp
 004F0B89    push        4F0BE9
 004F0B8E    push        dword ptr fs:[edx]
 004F0B91    mov         dword ptr fs:[edx],esp
 004F0B94    mov         eax,dword ptr [ebp+8]
 004F0B97    mov         eax,dword ptr [eax-4]
 004F0B9A    mov         eax,dword ptr [eax+28C]
 004F0BA0    cmp         dword ptr [eax+8],0
>004F0BA4    jle         004F0BC5
 004F0BA6    xor         edx,edx
 004F0BA8    call        TList.Get
 004F0BAD    mov         dword ptr [ebp-4],eax
 004F0BB0    mov         eax,dword ptr [ebp+8]
 004F0BB3    mov         eax,dword ptr [eax-4]
 004F0BB6    mov         eax,dword ptr [eax+28C]
 004F0BBC    xor         edx,edx
 004F0BBE    call        TList.Delete
>004F0BC3    jmp         004F0BCA
 004F0BC5    xor         eax,eax
 004F0BC7    mov         dword ptr [ebp-4],eax
 004F0BCA    xor         eax,eax
 004F0BCC    pop         edx
 004F0BCD    pop         ecx
 004F0BCE    pop         ecx
 004F0BCF    mov         dword ptr fs:[eax],edx
 004F0BD2    push        4F0BF0
 004F0BD7    mov         eax,dword ptr [ebp+8]
 004F0BDA    mov         eax,dword ptr [eax-4]
 004F0BDD    mov         eax,dword ptr [eax+28C]
 004F0BE3    call        TMonitor.Exit
 004F0BE8    ret
>004F0BE9    jmp         @HandleFinally
>004F0BEE    jmp         004F0BD7
 004F0BF0    mov         eax,dword ptr [ebp-4]
 004F0BF3    pop         ecx
 004F0BF4    pop         ecx
 004F0BF5    pop         ebp
 004F0BF6    ret
end;*}

//004F0BF8
procedure sub_004F0BF8(?:TWinControl);
begin
{*
 004F0BF8    push        ebp
 004F0BF9    mov         ebp,esp
 004F0BFB    push        ecx
 004F0BFC    push        ebx
 004F0BFD    mov         dword ptr [ebp-4],eax
 004F0C00    mov         eax,dword ptr [ebp-4]
 004F0C03    cmp         dword ptr [eax+28C],0;TWinControl.FAsyncList:TList
>004F0C0A    je          004F0C2D
 004F0C0C    push        ebp
 004F0C0D    call        004F0B5C
 004F0C12    pop         ecx
 004F0C13    mov         ebx,eax
 004F0C15    test        ebx,ebx
>004F0C17    je          004F0C2D
 004F0C19    mov         eax,ebx
 004F0C1B    call        004A2414
 004F0C20    push        ebp
 004F0C21    call        004F0B5C
 004F0C26    pop         ecx
 004F0C27    mov         ebx,eax
 004F0C29    test        ebx,ebx
>004F0C2B    jne         004F0C19
 004F0C2D    pop         ebx
 004F0C2E    pop         ecx
 004F0C2F    pop         ebp
 004F0C30    ret
*}
end;

//004F0C34
{*procedure sub_004F0C34(?:?);
begin
 004F0C34    push        ebp
 004F0C35    mov         ebp,esp
 004F0C37    add         esp,0FFFFFFDC
 004F0C3A    push        ebx
 004F0C3B    push        esi
 004F0C3C    push        edi
 004F0C3D    xor         ecx,ecx
 004F0C3F    mov         dword ptr [ebp-1C],ecx
 004F0C42    mov         edi,edx
 004F0C44    mov         dword ptr [ebp-4],eax
 004F0C47    xor         eax,eax
 004F0C49    push        ebp
 004F0C4A    push        4F0DF4
 004F0C4F    push        dword ptr fs:[eax]
 004F0C52    mov         dword ptr fs:[eax],esp
 004F0C55    mov         eax,dword ptr [ebp-4]
 004F0C58    movzx       esi,word ptr [eax+1C];TMainForm.FComponentState:TComponentState
 004F0C5C    mov         ebx,dword ptr [ebp-4]
>004F0C5F    jmp         004F0C64
 004F0C61    mov         ebx,dword ptr [ebx+40];TMainForm.FParent:TWinControl
 004F0C64    test        ebx,ebx
>004F0C66    je          004F0C73
 004F0C68    mov         eax,ebx
 004F0C6A    call        TWinControl.HandleAllocated
 004F0C6F    test        al,al
>004F0C71    je          004F0C61
 004F0C73    test        ebx,ebx
>004F0C75    jne         004F0C8E
 004F0C77    mov         ecx,dword ptr ds:[7C4538];^SResString345:TResStringRec
 004F0C7D    mov         dl,1
 004F0C7F    mov         eax,[0046BE9C];EInvalidOperation
 004F0C84    call        Exception.CreateRes;EInvalidOperation.Create
 004F0C89    call        @RaiseExcept
 004F0C8E    movzx       eax,word ptr [ebx+1C];TWinControl.FComponentState:TComponentState
 004F0C92    or          si,ax
 004F0C95    test        si,8
>004F0C9A    je          004F0CB3
 004F0C9C    mov         ecx,dword ptr ds:[7C4774];^SResString207:TResStringRec
 004F0CA2    mov         dl,1
 004F0CA4    mov         eax,[0046BE9C];EInvalidOperation
 004F0CA9    call        Exception.CreateRes;EInvalidOperation.Create
 004F0CAE    call        @RaiseExcept
 004F0CB3    push        0
 004F0CB5    mov         eax,dword ptr [ebp-4]
 004F0CB8    mov         eax,dword ptr [eax+278];TMainForm.FHandle:HWND
 004F0CBE    push        eax
 004F0CBF    call        user32.GetWindowThreadProcessId
 004F0CC4    mov         ebx,eax
 004F0CC6    call        TThread.GetCurrentThread
 004F0CCB    cmp         ebx,dword ptr [eax+4];TThread.FThreadID:Cardinal
>004F0CCE    je          004F0DD7
 004F0CD4    mov         eax,dword ptr [ebp-4]
 004F0CD7    cmp         dword ptr [eax+28C],0;TMainForm.FAsyncList:TList
>004F0CDE    jne         004F0D1F
 004F0CE0    mov         dl,1
 004F0CE2    mov         eax,[0046C204];TList
 004F0CE7    call        TObject.Create;TList.Create
 004F0CEC    mov         edx,dword ptr [ebp-4]
 004F0CEF    add         edx,28C;TMainForm.FAsyncList:TList
 004F0CF5    mov         dword ptr [ebp-8],edx
 004F0CF8    mov         dword ptr [ebp-0C],eax
 004F0CFB    xor         eax,eax
 004F0CFD    mov         dword ptr [ebp-10],eax
 004F0D00    lea         eax,[ebp-10]
 004F0D03    mov         ecx,dword ptr [eax]
 004F0D05    lea         eax,[ebp-0C]
 004F0D08    mov         edx,dword ptr [eax]
 004F0D0A    mov         eax,dword ptr [ebp-8]
 004F0D0D    call        TInterlocked.CompareExchange
 004F0D12    lea         edx,[ebp-14]
 004F0D15    mov         dword ptr [edx],eax
 004F0D17    mov         eax,dword ptr [ebp-14]
 004F0D1A    call        TObject.Free
 004F0D1F    mov         eax,dword ptr [ebp-4]
 004F0D22    mov         eax,dword ptr [eax+28C];TMainForm.FAsyncList:TList
 004F0D28    mov         dword ptr [ebp-18],eax
 004F0D2B    call        TMonitor.CheckMonitorSupport
 004F0D30    mov         eax,dword ptr [ebp-18]
 004F0D33    call        TMonitor.GetMonitor
 004F0D38    or          edx,0FFFFFFFF
 004F0D3B    call        TMonitor.Enter
 004F0D40    xor         eax,eax
 004F0D42    push        ebp
 004F0D43    push        4F0D7A
 004F0D48    push        dword ptr fs:[eax]
 004F0D4B    mov         dword ptr fs:[eax],esp
 004F0D4E    mov         eax,dword ptr [ebp-4]
 004F0D51    mov         eax,dword ptr [eax+28C];TMainForm.FAsyncList:TList
 004F0D57    mov         edx,edi
 004F0D59    call        TList.Add
 004F0D5E    xor         eax,eax
 004F0D60    pop         edx
 004F0D61    pop         ecx
 004F0D62    pop         ecx
 004F0D63    mov         dword ptr fs:[eax],edx
 004F0D66    push        4F0D81
 004F0D6B    mov         eax,dword ptr [ebp-4]
 004F0D6E    mov         eax,dword ptr [eax+28C];TMainForm.FAsyncList:TList
 004F0D74    call        TMonitor.Exit
 004F0D79    ret
>004F0D7A    jmp         @HandleFinally
>004F0D7F    jmp         004F0D6B
 004F0D81    cmp         dword ptr ds:[7CA5D0],0;gvar_007CA5D0:LongWord
>004F0D88    jne         004F0DBC
 004F0D8A    lea         eax,[ebp-1C]
 004F0D8D    push        eax
 004F0D8E    mov         eax,4F0E04
 004F0D93    mov         dword ptr [ebp-24],eax
 004F0D96    mov         byte ptr [ebp-20],10
 004F0D9A    lea         edx,[ebp-24]
 004F0D9D    xor         ecx,ecx
 004F0D9F    mov         eax,4F0E18;'%d_AsyncMessage'
 004F0DA4    call        Format
 004F0DA9    mov         eax,dword ptr [ebp-1C]
 004F0DAC    call        @UStrToPWChar
 004F0DB1    push        eax
 004F0DB2    call        user32.RegisterWindowMessageW
 004F0DB7    mov         [007CA5D0],eax;gvar_007CA5D0:LongWord
 004F0DBC    push        0
 004F0DBE    push        0
 004F0DC0    mov         eax,[007CA5D0];gvar_007CA5D0:LongWord
 004F0DC5    push        eax
 004F0DC6    mov         eax,dword ptr [ebp-4]
 004F0DC9    mov         eax,dword ptr [eax+278];TMainForm.FHandle:HWND
 004F0DCF    push        eax
 004F0DD0    call        user32.PostMessageW
>004F0DD5    jmp         004F0DDE
 004F0DD7    mov         eax,edi
 004F0DD9    call        004A2414
 004F0DDE    xor         eax,eax
 004F0DE0    pop         edx
 004F0DE1    pop         ecx
 004F0DE2    pop         ecx
 004F0DE3    mov         dword ptr fs:[eax],edx
 004F0DE6    push        4F0DFB
 004F0DEB    lea         eax,[ebp-1C]
 004F0DEE    call        @UStrClr
 004F0DF3    ret
>004F0DF4    jmp         @HandleFinally
>004F0DF9    jmp         004F0DEB
 004F0DFB    pop         edi
 004F0DFC    pop         esi
 004F0DFD    pop         ebx
 004F0DFE    mov         esp,ebp
 004F0E00    pop         ebp
 004F0E01    ret
end;*}

//004F0E38
{*procedure TWinControl.sub_004E980C(?:?; ?:?);
begin
 004F0E38    push        ebx
 004F0E39    push        esi
 004F0E3A    push        edi
 004F0E3B    mov         ebx,ecx
 004F0E3D    mov         esi,edx
 004F0E3F    mov         edi,eax
 004F0E41    mov         ecx,ebx
 004F0E43    mov         edx,esi
 004F0E45    mov         eax,edi
 004F0E47    call        TControl.sub_004E980C
 004F0E4C    mov         eax,esi
 004F0E4E    mov         edx,dword ptr ds:[4D55AC];TCustomAction
 004F0E54    call        @IsClass
 004F0E59    test        al,al
>004F0E5B    je          004F0E74
 004F0E5D    test        bl,bl
>004F0E5F    je          004F0E6A
 004F0E61    cmp         dword ptr [edi+178],0;TWinControl.FHelpContext:THelpContext
>004F0E68    jne         004F0E74
 004F0E6A    mov         edx,dword ptr [esi+78]
 004F0E6D    mov         eax,edi
 004F0E6F    call        TControl.SetHelpKeyword
 004F0E74    pop         edi
 004F0E75    pop         esi
 004F0E76    pop         ebx
 004F0E77    ret
end;*}

//004F0E78
procedure TWinControl.sub_004E9934;
begin
{*
 004F0E78    mov         eax,[004DE298];TWinControlActionLink
 004F0E7D    ret
*}
end;

//004F0E80
procedure TWinControl.AssignTo(Dest:TPersistent);
begin
{*
 004F0E80    push        ebx
 004F0E81    push        esi
 004F0E82    mov         esi,edx
 004F0E84    mov         ebx,eax
 004F0E86    mov         edx,esi
 004F0E88    mov         eax,ebx
 004F0E8A    call        TControl.AssignTo
 004F0E8F    mov         eax,esi
 004F0E91    mov         edx,dword ptr ds:[4D55AC];TCustomAction
 004F0E97    call        @IsClass
 004F0E9C    test        al,al
>004F0E9E    je          004F0EAD
 004F0EA0    mov         edx,dword ptr [ebx+178];TWinControl.FHelpContext:THelpContext
 004F0EA6    mov         eax,esi
 004F0EA8    mov         ecx,dword ptr [eax]
 004F0EAA    call        dword ptr [ecx+7C]
 004F0EAD    pop         esi
 004F0EAE    pop         ebx
 004F0EAF    ret
*}
end;

//004F0EB0
{*function sub_004F0EB0(?:?; ?:?):?;
begin
 004F0EB0    push        ebp
 004F0EB1    mov         ebp,esp
 004F0EB3    add         esp,0FFFFFFC4
 004F0EB6    push        ebx
 004F0EB7    push        esi
 004F0EB8    push        edi
 004F0EB9    mov         dword ptr [ebp-0C],ecx
 004F0EBC    mov         dword ptr [ebp-8],edx
 004F0EBF    mov         dword ptr [ebp-4],eax
 004F0EC2    mov         byte ptr [ebp-0D],1
 004F0EC6    mov         eax,dword ptr [ebp-4]
 004F0EC9    call        TWinControl.HandleAllocated
 004F0ECE    test        al,al
>004F0ED0    je          004F107C
 004F0ED6    mov         eax,dword ptr [ebp-4]
 004F0ED9    cmp         byte ptr [eax+6D],5;TMainForm.FAlign:TAlign
>004F0EDD    je          004F107C
 004F0EE3    mov         eax,dword ptr [ebp-4]
 004F0EE6    test        byte ptr [eax+1C],10;TMainForm.FComponentState:TComponentState
>004F0EEA    je          004F0EFC
 004F0EEC    mov         eax,dword ptr [ebp-4]
 004F0EEF    call        TWinControl.GetControlCount
 004F0EF4    test        eax,eax
>004F0EF6    jle         004F107C
 004F0EFC    lea         edx,[ebp-2C]
 004F0EFF    mov         eax,dword ptr [ebp-4]
 004F0F02    mov         ecx,dword ptr [eax]
 004F0F04    call        dword ptr [ecx+0E8];TMainForm.sub_004EFE14
 004F0F0A    lea         edx,[ebp-3C]
 004F0F0D    mov         eax,dword ptr [ebp-4]
 004F0F10    mov         ecx,dword ptr [eax]
 004F0F12    call        dword ptr [ecx+64];TCustomForm.GetClientRect
 004F0F15    lea         edx,[ebp-3C]
 004F0F18    mov         eax,dword ptr [ebp-4]
 004F0F1B    mov         ecx,dword ptr [eax]
 004F0F1D    call        dword ptr [ecx+0B8];TMainForm.sub_005C0538
 004F0F23    mov         eax,dword ptr [ebp-4]
 004F0F26    inc         word ptr [eax+1BC];TMainForm.FAlignLevel:Word
 004F0F2D    xor         edx,edx
 004F0F2F    push        ebp
 004F0F30    push        4F0FEF
 004F0F35    push        dword ptr fs:[edx]
 004F0F38    mov         dword ptr fs:[edx],esp
 004F0F3B    mov         eax,dword ptr [ebp-4]
 004F0F3E    call        TWinControl.GetControlCount
 004F0F43    mov         edi,eax
 004F0F45    dec         edi
 004F0F46    test        edi,edi
>004F0F48    jl          004F0FD2
 004F0F4E    inc         edi
 004F0F4F    mov         dword ptr [ebp-14],0
 004F0F56    mov         edx,dword ptr [ebp-14]
 004F0F59    mov         eax,dword ptr [ebp-4]
 004F0F5C    call        TWinControl.GetControl
 004F0F61    mov         esi,eax
 004F0F63    cmp         byte ptr [esi+69],0;TControl.FVisible:Boolean
>004F0F67    jne         004F0F75
 004F0F69    test        byte ptr [esi+1C],10;TControl.FComponentState:TComponentState
>004F0F6D    je          004F0FCC
 004F0F6F    test        byte ptr [esi+61],4;TControl.FVisible:Boolean
>004F0F73    jne         004F0FCC
 004F0F75    mov         eax,dword ptr [ebp-4]
 004F0F78    movzx       eax,byte ptr [eax+6D];TMainForm.FAlign:TAlign
 004F0F7C    mov         edx,eax
 004F0F7E    test        dl,dl
>004F0F80    je          004F0F8A
 004F0F82    add         dl,0FD
 004F0F85    sub         dl,2
>004F0F88    jae         004F0F95
 004F0F8A    mov         edx,dword ptr [ebp-2C]
 004F0F8D    sub         edx,dword ptr [ebp-3C]
 004F0F90    mov         dword ptr [ebp-18],edx
>004F0F93    jmp         004F0F9A
 004F0F95    xor         edx,edx
 004F0F97    mov         dword ptr [ebp-18],edx
 004F0F9A    sub         al,3
>004F0F9C    jae         004F0FA9
 004F0F9E    mov         eax,dword ptr [ebp-28]
 004F0FA1    sub         eax,dword ptr [ebp-38]
 004F0FA4    mov         dword ptr [ebp-1C],eax
>004F0FA7    jmp         004F0FAE
 004F0FA9    xor         eax,eax
 004F0FAB    mov         dword ptr [ebp-1C],eax
 004F0FAE    mov         eax,dword ptr [esi+58];TControl.FWidth:Integer
 004F0FB1    push        eax
 004F0FB2    mov         eax,dword ptr [esi+5C];TControl.FHeight:Integer
 004F0FB5    push        eax
 004F0FB6    mov         ecx,dword ptr [esi+54];TControl.FTop:Integer
 004F0FB9    sub         ecx,dword ptr [ebp-1C]
 004F0FBC    mov         edx,dword ptr [esi+50];TControl.FLeft:Integer
 004F0FBF    sub         edx,dword ptr [ebp-18]
 004F0FC2    mov         eax,esi
 004F0FC4    mov         ebx,dword ptr [eax]
 004F0FC6    call        dword ptr [ebx+0B0];TControl.SetBounds
 004F0FCC    inc         dword ptr [ebp-14]
 004F0FCF    dec         edi
>004F0FD0    jne         004F0F56
 004F0FD2    xor         eax,eax
 004F0FD4    pop         edx
 004F0FD5    pop         ecx
 004F0FD6    pop         ecx
 004F0FD7    mov         dword ptr fs:[eax],edx
 004F0FDA    push        4F0FF6
 004F0FDF    mov         eax,dword ptr [ebp-4]
 004F0FE2    and         dword ptr [eax+64],0FFFFFFEF;TMainForm.FControlState:TControlState
 004F0FE6    mov         eax,dword ptr [ebp-4]
 004F0FE9    call        TWinControl.EnableAlign
 004F0FEE    ret
>004F0FEF    jmp         @HandleFinally
>004F0FF4    jmp         004F0FDF
 004F0FF6    mov         eax,dword ptr [ebp-4]
 004F0FF9    movzx       edx,byte ptr [eax+6D];TMainForm.FAlign:TAlign
 004F0FFD    mov         eax,edx
 004F0FFF    test        al,al
>004F1001    je          004F1009
 004F1003    add         al,0FD
 004F1005    sub         al,2
>004F1007    jae         004F103C
 004F1009    mov         eax,dword ptr [ebp-24]
 004F100C    sub         eax,dword ptr [ebp-2C]
 004F100F    test        eax,eax
>004F1011    jle         004F1035
 004F1013    mov         ecx,dword ptr [ebp-4]
 004F1016    add         eax,dword ptr [ecx+58]
 004F1019    mov         ecx,dword ptr [ebp-34]
 004F101C    sub         ecx,dword ptr [ebp-3C]
 004F101F    sub         eax,ecx
 004F1021    mov         ecx,dword ptr [ebp-8]
 004F1024    mov         dword ptr [ecx],eax
 004F1026    cmp         dl,4
>004F1029    jne         004F103C
 004F102B    mov         eax,dword ptr [ebp-4]
 004F102E    mov         edx,dword ptr [eax]
 004F1030    call        dword ptr [edx+78];TMainForm.sub_005C6E6C
>004F1033    jmp         004F103C
 004F1035    mov         eax,dword ptr [ebp-8]
 004F1038    xor         edx,edx
 004F103A    mov         dword ptr [eax],edx
 004F103C    mov         eax,dword ptr [ebp-4]
 004F103F    movzx       edx,byte ptr [eax+6D];TMainForm.FAlign:TAlign
 004F1043    mov         eax,edx
 004F1045    sub         al,3
>004F1047    jae         004F107C
 004F1049    mov         eax,dword ptr [ebp-20]
 004F104C    sub         eax,dword ptr [ebp-28]
 004F104F    test        eax,eax
>004F1051    jle         004F1075
 004F1053    mov         ecx,dword ptr [ebp-4]
 004F1056    add         eax,dword ptr [ecx+5C]
 004F1059    mov         ecx,dword ptr [ebp-30]
 004F105C    sub         ecx,dword ptr [ebp-38]
 004F105F    sub         eax,ecx
 004F1061    mov         ecx,dword ptr [ebp-0C]
 004F1064    mov         dword ptr [ecx],eax
 004F1066    cmp         dl,2
>004F1069    jne         004F107C
 004F106B    mov         eax,dword ptr [ebp-4]
 004F106E    mov         edx,dword ptr [eax]
 004F1070    call        dword ptr [edx+78];TMainForm.sub_005C6E6C
>004F1073    jmp         004F107C
 004F1075    mov         eax,dword ptr [ebp-0C]
 004F1078    xor         edx,edx
 004F107A    mov         dword ptr [eax],edx
 004F107C    movzx       eax,byte ptr [ebp-0D]
 004F1080    pop         edi
 004F1081    pop         esi
 004F1082    pop         ebx
 004F1083    mov         esp,ebp
 004F1085    pop         ebp
 004F1086    ret
end;*}

//004F1088
{*procedure TEdit.SetBevelInner(Value:TBevelCut; ?:?);
begin
 004F1088    sub         edx,1
>004F108B    jb          004F1091
>004F108D    je          004F10AE
>004F108F    jmp         004F10CA
 004F1091    cmp         cl,byte ptr [eax+1BF];TEdit.FBevelInner:TBevelCut
>004F1097    je          004F10CA
 004F1099    mov         byte ptr [eax+1BF],cl;TEdit.FBevelInner:TBevelCut
 004F109F    push        0
 004F10A1    xor         ecx,ecx
 004F10A3    mov         edx,0B03B
 004F10A8    call        TControl.Perform
 004F10AD    ret
 004F10AE    cmp         cl,byte ptr [eax+1C0];TEdit.FBevelOuter:TBevelCut
>004F10B4    je          004F10CA
 004F10B6    mov         byte ptr [eax+1C0],cl;TEdit.FBevelOuter:TBevelCut
 004F10BC    push        0
 004F10BE    xor         ecx,ecx
 004F10C0    mov         edx,0B03B
 004F10C5    call        TControl.Perform
 004F10CA    ret
end;*}

//004F10CC
procedure TEdit.SetBevelEdges(Value:TBevelEdges);
begin
{*
 004F10CC    push        ebx
 004F10CD    push        ecx
 004F10CE    mov         byte ptr [esp],dl
 004F10D1    mov         ebx,eax
 004F10D3    movzx       eax,byte ptr [ebx+1BE];TEdit.FBevelEdges:TBevelEdges
 004F10DA    cmp         al,byte ptr [esp]
>004F10DD    je          004F10F9
 004F10DF    movzx       eax,byte ptr [esp]
 004F10E3    mov         byte ptr [ebx+1BE],al;TEdit.FBevelEdges:TBevelEdges
 004F10E9    push        0
 004F10EB    xor         ecx,ecx
 004F10ED    mov         edx,0B03B
 004F10F2    mov         eax,ebx
 004F10F4    call        TControl.Perform
 004F10F9    pop         edx
 004F10FA    pop         ebx
 004F10FB    ret
*}
end;

//004F10FC
procedure TEdit.SetBevelKind(Value:TBevelKind);
begin
{*
 004F10FC    cmp         dl,byte ptr [eax+1C1];TEdit.FBevelKind:TBevelKind
>004F1102    je          004F1118
 004F1104    mov         byte ptr [eax+1C1],dl;TEdit.FBevelKind:TBevelKind
 004F110A    push        0
 004F110C    xor         ecx,ecx
 004F110E    mov         edx,0B03B
 004F1113    call        TControl.Perform
 004F1118    ret
*}
end;

//004F111C
procedure TEdit.SetBevelWidth(Value:TBevelWidth);
begin
{*
 004F111C    cmp         edx,dword ptr [eax+1C4];TEdit.FBevelWidth:TBevelWidth
>004F1122    je          004F1138
 004F1124    mov         dword ptr [eax+1C4],edx;TEdit.FBevelWidth:TBevelWidth
 004F112A    push        0
 004F112C    xor         ecx,ecx
 004F112E    mov         edx,0B03B
 004F1133    call        TControl.Perform
 004F1138    ret
*}
end;

//004F113C
{*procedure TWinControl.WMNCCalcSize(?:?);
begin
 004F113C    push        ebx
 004F113D    push        esi
 004F113E    push        edi
 004F113F    mov         esi,edx
 004F1141    mov         ebx,eax
 004F1143    mov         edx,esi
 004F1145    mov         eax,ebx
 004F1147    mov         ecx,dword ptr [eax]
 004F1149    call        dword ptr [ecx-10];TWinControl.DefaultHandler
 004F114C    mov         eax,dword ptr [esi+8]
 004F114F    mov         esi,eax
 004F1151    mov         eax,dword ptr [ebx+1C8];TWinControl.FBorderWidth:TBorderWidth
 004F1157    neg         eax
 004F1159    mov         ecx,eax
 004F115B    mov         edx,eax
 004F115D    mov         edi,esi
 004F115F    mov         eax,edi
 004F1161    call        InflateRect
 004F1166    cmp         byte ptr [ebx+1C1],0;TWinControl.FBevelKind:TBevelKind
>004F116D    je          004F11C4
 004F116F    xor         eax,eax
 004F1171    cmp         byte ptr [ebx+1BF],0;TWinControl.FBevelInner:TBevelCut
>004F1178    je          004F1182
 004F117A    mov         edx,dword ptr [ebx+1C4];TWinControl.FBevelWidth:TBevelWidth
 004F1180    add         eax,edx
 004F1182    cmp         byte ptr [ebx+1C0],0;TWinControl.FBevelOuter:TBevelCut
>004F1189    je          004F1193
 004F118B    mov         edx,dword ptr [ebx+1C4];TWinControl.FBevelWidth:TBevelWidth
 004F1191    add         eax,edx
 004F1193    mov         esi,edi
 004F1195    test        byte ptr [ebx+1BE],1;TWinControl.FBevelEdges:TBevelEdges
>004F119C    je          004F11A0
 004F119E    add         dword ptr [esi],eax
 004F11A0    test        byte ptr [ebx+1BE],2;TWinControl.FBevelEdges:TBevelEdges
>004F11A7    je          004F11AC
 004F11A9    add         dword ptr [esi+4],eax
 004F11AC    test        byte ptr [ebx+1BE],4;TWinControl.FBevelEdges:TBevelEdges
>004F11B3    je          004F11B8
 004F11B5    sub         dword ptr [esi+8],eax
 004F11B8    test        byte ptr [ebx+1BE],8;TWinControl.FBevelEdges:TBevelEdges
>004F11BF    je          004F11C4
 004F11C1    sub         dword ptr [esi+0C],eax
 004F11C4    pop         edi
 004F11C5    pop         esi
 004F11C6    pop         ebx
 004F11C7    ret
end;*}

//004F11C8
{*procedure TWinControl.WMNCPaint(?:?);
begin
 004F11C8    push        ebp
 004F11C9    mov         ebp,esp
 004F11CB    add         esp,0FFFFFFC4
 004F11CE    push        ebx
 004F11CF    push        esi
 004F11D0    push        edi
 004F11D1    mov         dword ptr [ebp-8],edx
 004F11D4    mov         dword ptr [ebp-4],eax
 004F11D7    mov         eax,dword ptr [ebp-4]
 004F11DA    cmp         byte ptr [eax+1C1],0;TWinControl.FBevelKind:TBevelKind
>004F11E1    jne         004F11F3
 004F11E3    mov         eax,dword ptr [ebp-4]
 004F11E6    cmp         dword ptr [eax+1C8],0;TWinControl.FBorderWidth:TBorderWidth
>004F11ED    jbe         004F156C
 004F11F3    mov         eax,dword ptr [ebp-4]
 004F11F6    call        TWinControl.GetHandle
 004F11FB    push        eax
 004F11FC    call        user32.GetWindowDC
 004F1201    mov         dword ptr [ebp-0C],eax
 004F1204    xor         edx,edx
 004F1206    push        ebp
 004F1207    push        4F1565
 004F120C    push        dword ptr fs:[edx]
 004F120F    mov         dword ptr fs:[edx],esp
 004F1212    lea         eax,[ebp-1C]
 004F1215    push        eax
 004F1216    mov         eax,dword ptr [ebp-4]
 004F1219    call        TWinControl.GetHandle
 004F121E    push        eax
 004F121F    call        user32.GetClientRect
 004F1224    lea         eax,[ebp-2C]
 004F1227    push        eax
 004F1228    mov         eax,dword ptr [ebp-4]
 004F122B    call        TWinControl.GetHandle
 004F1230    push        eax
 004F1231    call        user32.GetWindowRect
 004F1236    push        2
 004F1238    lea         eax,[ebp-2C]
 004F123B    push        eax
 004F123C    mov         eax,dword ptr [ebp-4]
 004F123F    call        TWinControl.GetHandle
 004F1244    push        eax
 004F1245    push        0
 004F1247    call        user32.MapWindowPoints
 004F124C    mov         ecx,dword ptr [ebp-28]
 004F124F    neg         ecx
 004F1251    mov         edx,dword ptr [ebp-2C]
 004F1254    neg         edx
 004F1256    lea         eax,[ebp-1C]
 004F1259    call        OffsetRect
 004F125E    mov         eax,dword ptr [ebp-10]
 004F1261    push        eax
 004F1262    mov         eax,dword ptr [ebp-14]
 004F1265    push        eax
 004F1266    mov         eax,dword ptr [ebp-18]
 004F1269    push        eax
 004F126A    mov         eax,dword ptr [ebp-1C]
 004F126D    push        eax
 004F126E    mov         eax,dword ptr [ebp-0C]
 004F1271    push        eax
 004F1272    call        gdi32.ExcludeClipRect
 004F1277    lea         esi,[ebp-2C]
 004F127A    lea         edi,[ebp-3C]
 004F127D    movs        dword ptr [edi],dword ptr [esi]
 004F127E    movs        dword ptr [edi],dword ptr [esi]
 004F127F    movs        dword ptr [edi],dword ptr [esi]
 004F1280    movs        dword ptr [edi],dword ptr [esi]
 004F1281    mov         eax,dword ptr [ebp-4]
 004F1284    mov         eax,dword ptr [eax+1C8];TWinControl.FBorderWidth:TBorderWidth
 004F128A    mov         ecx,eax
 004F128C    mov         edx,eax
 004F128E    lea         eax,[ebp-1C]
 004F1291    call        InflateRect
 004F1296    lea         esi,[ebp-1C]
 004F1299    lea         edi,[ebp-2C]
 004F129C    movs        dword ptr [edi],dword ptr [esi]
 004F129D    movs        dword ptr [edi],dword ptr [esi]
 004F129E    movs        dword ptr [edi],dword ptr [esi]
 004F129F    movs        dword ptr [edi],dword ptr [esi]
 004F12A0    mov         eax,dword ptr [ebp-4]
 004F12A3    call        TWinControl.GetHandle
 004F12A8    push        0F0
 004F12AA    push        eax
 004F12AB    call        user32.GetWindowLongW
 004F12B0    mov         ebx,eax
 004F12B2    test        ebx,200000
>004F12B8    je          004F12DC
 004F12BA    mov         eax,dword ptr [ebp-4]
 004F12BD    call        TControl.UseRightToLeftScrollBar
 004F12C2    test        al,al
>004F12C4    je          004F12D2
 004F12C6    push        14
 004F12C8    call        user32.GetSystemMetrics
 004F12CD    sub         dword ptr [ebp-2C],eax
>004F12D0    jmp         004F12DC
 004F12D2    push        14
 004F12D4    call        user32.GetSystemMetrics
 004F12D9    add         dword ptr [ebp-24],eax
 004F12DC    test        ebx,100000
>004F12E2    je          004F12EE
 004F12E4    push        15
 004F12E6    call        user32.GetSystemMetrics
 004F12EB    add         dword ptr [ebp-20],eax
 004F12EE    mov         eax,dword ptr [ebp-4]
 004F12F1    cmp         byte ptr [eax+1C1],0;TWinControl.FBevelKind:TBevelKind
>004F12F8    je          004F144C
 004F12FE    xor         eax,eax
 004F1300    mov         edx,dword ptr [ebp-4]
 004F1303    cmp         byte ptr [edx+1BF],0;TWinControl.FBevelInner:TBevelCut
>004F130A    je          004F1317
 004F130C    mov         edx,dword ptr [ebp-4]
 004F130F    mov         edx,dword ptr [edx+1C4];TWinControl.FBevelWidth:TBevelWidth
 004F1315    add         eax,edx
 004F1317    mov         edx,dword ptr [ebp-4]
 004F131A    cmp         byte ptr [edx+1C0],0;TWinControl.FBevelOuter:TBevelCut
>004F1321    je          004F132E
 004F1323    mov         edx,dword ptr [ebp-4]
 004F1326    mov         edx,dword ptr [edx+1C4];TWinControl.FBevelWidth:TBevelWidth
 004F132C    add         eax,edx
 004F132E    mov         edx,dword ptr [ebp-4]
 004F1331    test        byte ptr [edx+1BE],1;TWinControl.FBevelEdges:TBevelEdges
>004F1338    je          004F133D
 004F133A    sub         dword ptr [ebp-2C],eax
 004F133D    mov         edx,dword ptr [ebp-4]
 004F1340    test        byte ptr [edx+1BE],2;TWinControl.FBevelEdges:TBevelEdges
>004F1347    je          004F134C
 004F1349    sub         dword ptr [ebp-28],eax
 004F134C    mov         edx,dword ptr [ebp-4]
 004F134F    test        byte ptr [edx+1BE],4;TWinControl.FBevelEdges:TBevelEdges
>004F1356    je          004F135B
 004F1358    add         dword ptr [ebp-24],eax
 004F135B    mov         edx,dword ptr [ebp-4]
 004F135E    test        byte ptr [edx+1BE],8;TWinControl.FBevelEdges:TBevelEdges
>004F1365    je          004F136A
 004F1367    add         dword ptr [ebp-20],eax
 004F136A    call        TStyleManager.GetIsCustomStyleActive
 004F136F    test        al,al
>004F1371    je          004F13EA
 004F1373    mov         eax,dword ptr [ebp-4]
 004F1376    movzx       eax,byte ptr [eax+1BE];TWinControl.FBevelEdges:TBevelEdges
 004F137D    mov         edx,dword ptr [ebp-4]
 004F1380    movzx       edx,byte ptr [edx+1C1];TWinControl.FBevelKind:TBevelKind
 004F1387    or          eax,dword ptr [edx*4+7A11E8]
 004F138E    mov         edx,dword ptr [ebp-4]
 004F1391    movzx       edx,byte ptr [edx+204];TWinControl.FCtl3D:Boolean
 004F1398    or          eax,dword ptr [edx*4+7A11F8]
 004F139F    or          eax,2000
 004F13A4    call        TStyleElementEdgeFlags.&op_Implicit
 004F13A9    call        TStyleElementEdgeFlags.&op_Implicit
 004F13AE    push        eax
 004F13AF    mov         eax,dword ptr [ebp-4]
 004F13B2    movzx       eax,byte ptr [eax+1BF];TWinControl.FBevelInner:TBevelCut
 004F13B9    mov         eax,dword ptr [eax*4+7A11C8]
 004F13C0    mov         edx,dword ptr [ebp-4]
 004F13C3    movzx       edx,byte ptr [edx+1C0];TWinControl.FBevelOuter:TBevelCut
 004F13CA    or          eax,dword ptr [edx*4+7A11D8]
 004F13D1    call        TStyleElementEdges.&op_Implicit
 004F13D6    call        TStyleElementEdges.&op_Implicit
 004F13DB    mov         ecx,eax
 004F13DD    lea         edx,[ebp-2C]
 004F13E0    mov         eax,dword ptr [ebp-0C]
 004F13E3    call        DrawStyleEdge
>004F13E8    jmp         004F144C
 004F13EA    mov         eax,dword ptr [ebp-4]
 004F13ED    movzx       eax,byte ptr [eax+1BE];TWinControl.FBevelEdges:TBevelEdges
 004F13F4    mov         edx,dword ptr [ebp-4]
 004F13F7    movzx       edx,byte ptr [edx+1C1];TWinControl.FBevelKind:TBevelKind
 004F13FE    or          eax,dword ptr [edx*4+7A11E8]
 004F1405    mov         edx,dword ptr [ebp-4]
 004F1408    movzx       edx,byte ptr [edx+204];TWinControl.FCtl3D:Boolean
 004F140F    or          eax,dword ptr [edx*4+7A11F8]
 004F1416    or          eax,2000
 004F141B    push        eax
 004F141C    mov         eax,dword ptr [ebp-4]
 004F141F    movzx       eax,byte ptr [eax+1BF];TWinControl.FBevelInner:TBevelCut
 004F1426    mov         eax,dword ptr [eax*4+7A11C8]
 004F142D    mov         edx,dword ptr [ebp-4]
 004F1430    movzx       edx,byte ptr [edx+1C0];TWinControl.FBevelOuter:TBevelCut
 004F1437    or          eax,dword ptr [edx*4+7A11D8]
 004F143E    push        eax
 004F143F    lea         eax,[ebp-2C]
 004F1442    push        eax
 004F1443    mov         eax,dword ptr [ebp-0C]
 004F1446    push        eax
 004F1447    call        user32.DrawEdge
 004F144C    mov         eax,dword ptr [ebp-20]
 004F144F    push        eax
 004F1450    mov         eax,dword ptr [ebp-24]
 004F1453    push        eax
 004F1454    mov         eax,dword ptr [ebp-28]
 004F1457    push        eax
 004F1458    mov         eax,dword ptr [ebp-2C]
 004F145B    push        eax
 004F145C    mov         eax,dword ptr [ebp-0C]
 004F145F    push        eax
 004F1460    call        gdi32.IntersectClipRect
 004F1465    lea         esi,[ebp-3C]
 004F1468    lea         edi,[ebp-2C]
 004F146B    movs        dword ptr [edi],dword ptr [esi]
 004F146C    movs        dword ptr [edi],dword ptr [esi]
 004F146D    movs        dword ptr [edi],dword ptr [esi]
 004F146E    movs        dword ptr [edi],dword ptr [esi]
 004F146F    mov         eax,dword ptr [ebp-8]
 004F1472    mov         eax,dword ptr [eax+4]
 004F1475    cmp         eax,1
>004F1478    jne         004F148E
 004F147A    mov         ecx,dword ptr [ebp-28]
 004F147D    neg         ecx
 004F147F    mov         edx,dword ptr [ebp-2C]
 004F1482    neg         edx
 004F1484    lea         eax,[ebp-2C]
 004F1487    call        OffsetRect
>004F148C    jmp         004F14CE
 004F148E    lea         edx,[ebp-1C]
 004F1491    push        edx
 004F1492    push        eax
 004F1493    call        gdi32.GetRgnBox
 004F1498    push        2
 004F149A    lea         eax,[ebp-1C]
 004F149D    push        eax
 004F149E    mov         eax,dword ptr [ebp-4]
 004F14A1    call        TWinControl.GetHandle
 004F14A6    push        eax
 004F14A7    push        0
 004F14A9    call        user32.MapWindowPoints
 004F14AE    lea         ecx,[ebp-1C]
 004F14B1    lea         edx,[ebp-2C]
 004F14B4    lea         eax,[ebp-2C]
 004F14B7    call        IntersectRect
 004F14BC    mov         ecx,dword ptr [ebp-38]
 004F14BF    neg         ecx
 004F14C1    mov         edx,dword ptr [ebp-3C]
 004F14C4    neg         edx
 004F14C6    lea         eax,[ebp-2C]
 004F14C9    call        OffsetRect
 004F14CE    call        TStyleManager.GetIsCustomStyleActive
 004F14D3    test        al,al
>004F14D5    je          004F1529
 004F14D7    call        TStyleManager.GetActiveStyle
 004F14DC    mov         ebx,eax
 004F14DE    mov         dl,1D
 004F14E0    mov         eax,ebx
 004F14E2    call        TCustomStyleServices.GetStyleColor
 004F14E7    mov         edx,eax
 004F14E9    mov         eax,dword ptr [ebp-4]
 004F14EC    mov         eax,dword ptr [eax+1D0];TWinControl.FBrush:TBrush
 004F14F2    call        TBrush.SetColor
 004F14F7    mov         eax,dword ptr [ebp-4]
 004F14FA    mov         eax,dword ptr [eax+1D0];TWinControl.FBrush:TBrush
 004F1500    call        TBrush.GetHandle
 004F1505    push        eax
 004F1506    lea         eax,[ebp-2C]
 004F1509    push        eax
 004F150A    mov         eax,dword ptr [ebp-0C]
 004F150D    push        eax
 004F150E    call        user32.FillRect
 004F1513    mov         eax,dword ptr [ebp-4]
 004F1516    mov         edx,dword ptr [eax+7C];TWinControl.FColor:TColor
 004F1519    mov         eax,dword ptr [ebp-4]
 004F151C    mov         eax,dword ptr [eax+1D0];TWinControl.FBrush:TBrush
 004F1522    call        TBrush.SetColor
>004F1527    jmp         004F1545
 004F1529    mov         eax,dword ptr [ebp-4]
 004F152C    mov         eax,dword ptr [eax+1D0];TWinControl.FBrush:TBrush
 004F1532    call        TBrush.GetHandle
 004F1537    push        eax
 004F1538    lea         eax,[ebp-2C]
 004F153B    push        eax
 004F153C    mov         eax,dword ptr [ebp-0C]
 004F153F    push        eax
 004F1540    call        user32.FillRect
 004F1545    xor         eax,eax
 004F1547    pop         edx
 004F1548    pop         ecx
 004F1549    pop         ecx
 004F154A    mov         dword ptr fs:[eax],edx
 004F154D    push        4F156C
 004F1552    mov         eax,dword ptr [ebp-0C]
 004F1555    push        eax
 004F1556    mov         eax,dword ptr [ebp-4]
 004F1559    call        TWinControl.GetHandle
 004F155E    push        eax
 004F155F    call        user32.ReleaseDC
 004F1564    ret
>004F1565    jmp         @HandleFinally
>004F156A    jmp         004F1552
 004F156C    mov         edx,dword ptr [ebp-8]
 004F156F    mov         eax,dword ptr [ebp-4]
 004F1572    mov         ecx,dword ptr [eax]
 004F1574    call        dword ptr [ecx-10];TWinControl.DefaultHandler
 004F1577    mov         eax,dword ptr [ebp-4]
 004F157A    call        00585D90
 004F157F    test        al,al
>004F1581    je          004F159E
 004F1583    mov         eax,dword ptr [ebp-4]
 004F1586    test        byte ptr [eax+62],2;TWinControl.FEnabled:Boolean
>004F158A    je          004F159E
 004F158C    call        TStyleManager.GetActiveStyle
 004F1591    xor         ecx,ecx
 004F1593    mov         edx,dword ptr [ebp-4]
 004F1596    mov         ebx,dword ptr [eax]
 004F1598    call        dword ptr [ebx+114];TCustomStyleServices.PaintBorder
 004F159E    pop         edi
 004F159F    pop         esi
 004F15A0    pop         ebx
 004F15A1    mov         esp,ebp
 004F15A3    pop         ebp
 004F15A4    ret
end;*}

//004F15A8
{*procedure TWinControl.WMContextMenu(?:?);
begin
 004F15A8    push        ebx
 004F15A9    push        esi
 004F15AA    push        edi
 004F15AB    add         esp,0FFFFFFD8
 004F15AE    mov         ebx,edx
 004F15B0    mov         esi,eax
 004F15B2    cmp         dword ptr [ebx+0C],0
>004F15B6    jne         004F165E
 004F15BC    lea         eax,[ebx+8]
 004F15BF    mov         dword ptr [esp],eax
 004F15C2    mov         eax,dword ptr [esp]
 004F15C5    movsx       eax,word ptr [eax]
 004F15C8    mov         dword ptr [esp+4],eax
 004F15CC    mov         eax,dword ptr [esp]
 004F15CF    movsx       eax,word ptr [eax+2]
 004F15D3    mov         dword ptr [esp+8],eax
 004F15D7    push        0
 004F15D9    push        0
 004F15DB    lea         ecx,[esp+28]
 004F15DF    lea         edx,[esp+0C]
 004F15E3    mov         eax,esi
 004F15E5    call        TControl.ScreenToClient
 004F15EA    lea         edx,[esp+28]
 004F15EE    xor         ecx,ecx
 004F15F0    mov         eax,esi
 004F15F2    call        TWinControl.ControlAtPos
 004F15F7    mov         edi,eax
 004F15F9    test        edi,edi
>004F15FB    je          004F164F
 004F15FD    lea         eax,[ebx+8]
 004F1600    mov         dword ptr [esp+0C],eax
 004F1604    mov         eax,dword ptr [esp+0C]
 004F1608    movsx       eax,word ptr [eax]
 004F160B    mov         dword ptr [esp+10],eax
 004F160F    mov         eax,dword ptr [esp+0C]
 004F1613    movsx       eax,word ptr [eax+2]
 004F1617    mov         dword ptr [esp+14],eax
 004F161B    mov         eax,dword ptr [esp+10]
 004F161F    mov         dword ptr [esp+18],eax
 004F1623    mov         eax,dword ptr [esp+14]
 004F1627    mov         dword ptr [esp+1C],eax
 004F162B    mov         eax,dword ptr [esp+18]
 004F162F    and         eax,0FFFF
 004F1634    mov         edx,dword ptr [esp+1C]
 004F1638    shl         edx,10
 004F163B    or          eax,edx
 004F163D    push        eax
 004F163E    xor         ecx,ecx
 004F1640    mov         edx,7B
 004F1645    mov         eax,edi
 004F1647    call        TControl.Perform
 004F164C    mov         dword ptr [ebx+0C],eax
 004F164F    cmp         dword ptr [ebx+0C],0
>004F1653    jne         004F165E
 004F1655    mov         edx,ebx
 004F1657    mov         eax,esi
 004F1659    call        TControl.WMContextMenu
 004F165E    add         esp,28
 004F1661    pop         edi
 004F1662    pop         esi
 004F1663    pop         ebx
 004F1664    ret
end;*}

//004F1668
procedure TWinControl.UpdateUIState(CharCode:Word);
begin
{*
 004F1668    push        ebx
 004F1669    mov         ebx,edx
 004F166B    mov         dl,1
 004F166D    call        GetParentForm
 004F1672    test        eax,eax
>004F1674    je          004F16AF
 004F1676    sub         bx,9
>004F167A    je          004F168B
 004F167C    sub         bx,9
>004F1680    je          004F169E
 004F1682    add         ebx,0FFFFFFED
 004F1685    sub         bx,4
>004F1689    jae         004F16AF
 004F168B    push        0
 004F168D    mov         ecx,10002
 004F1692    mov         edx,127
 004F1697    call        TControl.Perform
>004F169C    jmp         004F16AF
 004F169E    push        0
 004F16A0    mov         ecx,20002
 004F16A5    mov         edx,127
 004F16AA    call        TControl.Perform
 004F16AF    pop         ebx
 004F16B0    ret
*}
end;

//004F16B4
{*procedure TWinControl.sub_004F16B4(?:?);
begin
 004F16B4    push        ebp
 004F16B5    mov         ebp,esp
 004F16B7    add         esp,0FFFFFFF0
 004F16BA    mov         dword ptr [ebp-8],edx
 004F16BD    mov         dword ptr [ebp-4],eax
 004F16C0    mov         eax,dword ptr [ebp-4]
 004F16C3    test        byte ptr [eax+66],1;TWinControl.FAutoSize:Boolean
 004F16C7    setne       al
 004F16CA    mov         byte ptr [ebp-0D],al
 004F16CD    mov         eax,dword ptr [ebp-4]
 004F16D0    or          dword ptr [eax+64],10000;TWinControl.FControlState:TControlState
 004F16D7    xor         eax,eax
 004F16D9    push        ebp
 004F16DA    push        4F1783
 004F16DF    push        dword ptr fs:[eax]
 004F16E2    mov         dword ptr fs:[eax],esp
 004F16E5    mov         eax,dword ptr [ebp-8]
 004F16E8    cmp         dword ptr [eax+0C],1
>004F16EC    je          004F175A
 004F16EE    mov         eax,dword ptr [ebp-8]
 004F16F1    test        byte ptr [eax+8],1
>004F16F5    je          004F1700
 004F16F7    mov         eax,dword ptr [ebp-4]
 004F16FA    cmp         byte ptr [eax+69],0;TWinControl.FVisible:Boolean
>004F16FE    je          004F174D
 004F1700    mov         eax,dword ptr [ebp-8]
 004F1703    mov         eax,dword ptr [eax+4]
 004F1706    push        eax
 004F1707    call        gdi32.SaveDC
 004F170C    mov         dword ptr [ebp-0C],eax
 004F170F    xor         eax,eax
 004F1711    push        ebp
 004F1712    push        4F1746
 004F1717    push        dword ptr fs:[eax]
 004F171A    mov         dword ptr fs:[eax],esp
 004F171D    mov         edx,dword ptr [ebp-8]
 004F1720    mov         eax,dword ptr [ebp-4]
 004F1723    call        004ED25C
 004F1728    xor         eax,eax
 004F172A    pop         edx
 004F172B    pop         ecx
 004F172C    pop         ecx
 004F172D    mov         dword ptr fs:[eax],edx
 004F1730    push        4F1765
 004F1735    mov         eax,dword ptr [ebp-0C]
 004F1738    push        eax
 004F1739    mov         eax,dword ptr [ebp-8]
 004F173C    mov         eax,dword ptr [eax+4]
 004F173F    push        eax
 004F1740    call        gdi32.RestoreDC
 004F1745    ret
>004F1746    jmp         @HandleFinally
>004F174B    jmp         004F1735
 004F174D    mov         edx,dword ptr [ebp-8]
 004F1750    mov         eax,dword ptr [ebp-4]
 004F1753    mov         ecx,dword ptr [eax]
 004F1755    call        dword ptr [ecx-10];TWinControl.DefaultHandler
>004F1758    jmp         004F1765
 004F175A    mov         edx,dword ptr [ebp-8]
 004F175D    mov         eax,dword ptr [ebp-4]
 004F1760    mov         ecx,dword ptr [eax]
 004F1762    call        dword ptr [ecx-10];TWinControl.DefaultHandler
 004F1765    xor         eax,eax
 004F1767    pop         edx
 004F1768    pop         ecx
 004F1769    pop         ecx
 004F176A    mov         dword ptr fs:[eax],edx
 004F176D    push        4F178A
 004F1772    cmp         byte ptr [ebp-0D],0
>004F1776    jne         004F1782
 004F1778    mov         eax,dword ptr [ebp-4]
 004F177B    and         dword ptr [eax+64],0FFFEFFFF;TWinControl.FControlState:TControlState
 004F1782    ret
>004F1783    jmp         @HandleFinally
>004F1788    jmp         004F1772
 004F178A    mov         esp,ebp
 004F178C    pop         ebp
 004F178D    ret
end;*}

//004F1790
{*procedure TWinControl.sub_004F1790(?:?);
begin
 004F1790    push        ebp
 004F1791    mov         ebp,esp
 004F1793    add         esp,0FFFFFF64
 004F1799    push        ebx
 004F179A    push        esi
 004F179B    mov         dword ptr [ebp-8],edx
 004F179E    mov         dword ptr [ebp-4],eax
 004F17A1    mov         eax,dword ptr [ebp-4]
 004F17A4    cmp         dword ptr [eax+270],0;TWinControl.FTouchControl:TControl
>004F17AB    jne         004F17DA
 004F17AD    mov         eax,dword ptr [ebp-8]
 004F17B0    mov         eax,dword ptr [eax+8]
 004F17B3    push        eax
 004F17B4    mov         eax,dword ptr [ebp-8]
 004F17B7    mov         eax,dword ptr [eax+4]
 004F17BA    push        eax
 004F17BB    mov         eax,dword ptr [ebp-8]
 004F17BE    mov         eax,dword ptr [eax]
 004F17C0    push        eax
 004F17C1    mov         eax,dword ptr [ebp-4]
 004F17C4    call        TWinControl.GetHandle
 004F17C9    push        eax
 004F17CA    call        user32.DefWindowProcW
 004F17CF    mov         edx,dword ptr [ebp-8]
 004F17D2    mov         dword ptr [edx+0C],eax
>004F17D5    jmp         004F1B0B
 004F17DA    lea         eax,[ebp-70]
 004F17DD    xor         ecx,ecx
 004F17DF    mov         edx,30
 004F17E4    call        @FillChar
 004F17E9    mov         dword ptr [ebp-70],30
 004F17F0    lea         eax,[ebp-70]
 004F17F3    push        eax
 004F17F4    mov         eax,dword ptr [ebp-8]
 004F17F7    mov         eax,dword ptr [eax+8]
 004F17FA    push        eax
 004F17FB    call        004116B0
 004F1800    test        eax,eax
>004F1802    je          004F1B0B
 004F1808    xor         ecx,ecx
 004F180A    push        ebp
 004F180B    push        4F1B04
 004F1810    push        dword ptr fs:[ecx]
 004F1813    mov         dword ptr fs:[ecx],esp
 004F1816    lea         eax,[ebp-90]
 004F181C    xor         ecx,ecx
 004F181E    mov         edx,20
 004F1823    call        @FillChar
 004F1828    movzx       eax,word ptr [ebp-68]
 004F182C    add         ax,100
 004F1830    mov         word ptr [ebp-90],ax
 004F1837    movzx       eax,word ptr [ebp-90]
 004F183E    cmp         ax,101
>004F1842    je          004F1AAB
 004F1848    cmp         ax,102
>004F184C    je          004F1AAB
 004F1852    mov         eax,dword ptr [ebp-4]
 004F1855    mov         ebx,dword ptr [eax+270];TWinControl.FTouchControl:TControl
>004F185B    jmp         004F185F
 004F185D    mov         ebx,eax
 004F185F    mov         eax,dword ptr [ebx+40];TWinControl.FParent:TWinControl
 004F1862    test        eax,eax
>004F1864    je          004F1897
 004F1866    mov         edx,dword ptr [ebx+0BC];TWinControl.FTouchManager:TTouchManager
 004F186C    test        byte ptr [edx+11],10;TTouchManager.FInteractiveGestureOptions:TInteractiveGestureOptions
>004F1870    je          004F1897
 004F1872    movsx       edx,word ptr [ebp-90]
 004F1879    movzx       edx,byte ptr [edx+7A10FD]
 004F1880    mov         ecx,dword ptr [ebx+0BC];TWinControl.FTouchManager:TTouchManager
 004F1886    cmp         dl,7
>004F1889    ja          004F1895
 004F188B    and         edx,7F
 004F188E    movzx       ecx,byte ptr [ecx+10];TTouchManager.FInteractiveGestures:TInteractiveGestures
 004F1892    bt          ecx,edx
>004F1895    jae         004F185D
 004F1897    movsx       eax,word ptr [ebp-60]
 004F189B    movsx       edx,word ptr [ebp-5E]
 004F189F    mov         dword ptr [ebp-18],eax
 004F18A2    mov         dword ptr [ebp-14],edx
 004F18A5    mov         eax,dword ptr [ebp-18]
 004F18A8    mov         dword ptr [ebp-10],eax
 004F18AB    mov         eax,dword ptr [ebp-14]
 004F18AE    mov         dword ptr [ebp-0C],eax
 004F18B1    lea         eax,[ebp-10]
 004F18B4    push        eax
 004F18B5    mov         eax,dword ptr [ebp-4]
 004F18B8    mov         eax,dword ptr [eax+278];TWinControl.FHandle:HWND
 004F18BE    push        eax
 004F18BF    call        00411308
 004F18C4    lea         ecx,[ebp-98]
 004F18CA    lea         edx,[ebp-10]
 004F18CD    mov         eax,ebx
 004F18CF    call        TControl.ScreenToClient
 004F18D4    mov         eax,dword ptr [ebp-98]
 004F18DA    mov         dword ptr [ebp-8C],eax
 004F18E0    mov         eax,dword ptr [ebp-94]
 004F18E6    mov         dword ptr [ebp-88],eax
 004F18EC    movzx       eax,byte ptr ds:[4F1B14];0x0 gvar_004F1B14
 004F18F3    mov         byte ptr [ebp-84],al
 004F18F9    mov         esi,dword ptr [ebp-6C]
 004F18FC    mov         eax,esi
 004F18FE    and         eax,1
 004F1901    cmp         eax,1
>004F1904    jne         004F190D
 004F1906    or          byte ptr [ebp-84],1
 004F190D    mov         eax,esi
 004F190F    and         eax,2
 004F1912    cmp         eax,2
>004F1915    jne         004F191E
 004F1917    or          byte ptr [ebp-84],2
 004F191E    and         esi,4
 004F1921    cmp         esi,4
>004F1924    jne         004F192D
 004F1926    or          byte ptr [ebp-84],4
 004F192D    movsx       eax,word ptr [ebp-90]
 004F1934    add         eax,0FFFFFEFD
 004F1939    cmp         eax,4
>004F193C    ja          004F1A60
 004F1942    jmp         dword ptr [eax*4+4F1949]
 004F1942    dd          004F198F
 004F1942    dd          004F195D
 004F1942    dd          004F1A21
 004F1942    dd          004F198F
 004F1942    dd          004F199A
 004F195D    mov         eax,dword ptr [ebp-50]
 004F1960    mov         dword ptr [ebp-74],eax
 004F1963    mov         eax,dword ptr [ebp-50]
 004F1966    mov         dword ptr [ebp-20],eax
 004F1969    mov         eax,dword ptr [ebp-4C]
 004F196C    mov         dword ptr [ebp-1C],eax
 004F196F    mov         eax,dword ptr [ebp-1C]
 004F1972    xor         edx,edx
 004F1974    mov         word ptr [ebp-24],ax
 004F1978    mov         eax,dword ptr [ebp-1C]
 004F197B    xor         edx,edx
 004F197D    shr         eax,10
 004F1980    mov         word ptr [ebp-22],ax
 004F1984    mov         eax,dword ptr [ebp-24]
 004F1987    mov         dword ptr [ebp-78],eax
>004F198A    jmp         004F1A60
 004F198F    mov         eax,dword ptr [ebp-50]
 004F1992    mov         dword ptr [ebp-74],eax
>004F1995    jmp         004F1A60
 004F199A    mov         eax,dword ptr [ebp-50]
 004F199D    movsx       edx,ax
 004F19A0    mov         dword ptr [ebp-2C],edx
 004F19A3    shr         eax,10
 004F19A6    movsx       eax,ax
 004F19A9    mov         dword ptr [ebp-28],eax
 004F19AC    mov         eax,dword ptr [ebp-2C]
 004F19AF    mov         dword ptr [ebp-10],eax
 004F19B2    mov         eax,dword ptr [ebp-28]
 004F19B5    mov         dword ptr [ebp-0C],eax
 004F19B8    movsx       eax,word ptr [ebp-60]
 004F19BC    add         dword ptr [ebp-10],eax
 004F19BF    movsx       eax,word ptr [ebp-5E]
 004F19C3    add         dword ptr [ebp-0C],eax
 004F19C6    mov         eax,ebx
 004F19C8    mov         edx,dword ptr ds:[4DE8CC];TWinControl
 004F19CE    call        @IsClass
 004F19D3    test        al,al
>004F19D5    je          004F19EA
 004F19D7    lea         eax,[ebp-10]
 004F19DA    push        eax
 004F19DB    mov         eax,ebx
 004F19DD    call        TWinControl.GetHandle
 004F19E2    push        eax
 004F19E3    call        00411308
>004F19E8    jmp         004F19FC
 004F19EA    lea         eax,[ebp-10]
 004F19ED    push        eax
 004F19EE    mov         eax,dword ptr [ebx+40];TWinControl.FParent:TWinControl
 004F19F1    call        TWinControl.GetHandle
 004F19F6    push        eax
 004F19F7    call        00411308
 004F19FC    lea         ecx,[ebp-34]
 004F19FF    lea         edx,[ebp-10]
 004F1A02    mov         eax,ebx
 004F1A04    call        TControl.ScreenToClient
 004F1A09    movzx       eax,word ptr [ebp-34]
 004F1A0D    mov         word ptr [ebp-38],ax
 004F1A11    movzx       eax,word ptr [ebp-30]
 004F1A15    mov         word ptr [ebp-36],ax
 004F1A19    mov         eax,dword ptr [ebp-38]
 004F1A1C    mov         dword ptr [ebp-74],eax
>004F1A1F    jmp         004F1A60
 004F1A21    movzx       eax,word ptr [ebp-50]
 004F1A25    movzx       eax,ax
 004F1A28    mov         dword ptr [ebp-9C],eax
 004F1A2E    fild        dword ptr [ebp-9C]
 004F1A34    fdiv        dword ptr ds:[4F1B18];65535:Single
 004F1A3A    fmul        dword ptr ds:[4F1B1C];4:Single
 004F1A40    fld         tbyte ptr ds:[4F1B20];3,14159265:Extended
 004F1A46    fmulp       st(1),st
 004F1A48    fld         tbyte ptr ds:[4F1B2C];6,2831853:Extended
 004F1A4E    fsubp       st(1),st
 004F1A50    fstp        qword ptr [ebp-40]
 004F1A53    wait
 004F1A54    mov         eax,dword ptr [ebp-40]
 004F1A57    mov         dword ptr [ebp-80],eax
 004F1A5A    mov         eax,dword ptr [ebp-3C]
 004F1A5D    mov         dword ptr [ebp-7C],eax
 004F1A60    lea         eax,[ebp-90]
 004F1A66    push        eax
 004F1A67    xor         ecx,ecx
 004F1A69    mov         edx,0B052
 004F1A6E    mov         eax,ebx
 004F1A70    call        TControl.Perform
 004F1A75    mov         esi,eax
 004F1A77    mov         eax,dword ptr [ebp-8]
 004F1A7A    mov         dword ptr [eax+0C],esi
 004F1A7D    dec         esi
>004F1A7E    je          004F1AD4
 004F1A80    mov         eax,dword ptr [ebp-8]
 004F1A83    mov         eax,dword ptr [eax+8]
 004F1A86    push        eax
 004F1A87    mov         eax,dword ptr [ebp-8]
 004F1A8A    mov         eax,dword ptr [eax+4]
 004F1A8D    push        eax
 004F1A8E    mov         eax,dword ptr [ebp-8]
 004F1A91    mov         eax,dword ptr [eax]
 004F1A93    push        eax
 004F1A94    mov         eax,dword ptr [ebp-4]
 004F1A97    mov         eax,dword ptr [eax+278];TWinControl.FHandle:HWND
 004F1A9D    push        eax
 004F1A9E    call        user32.DefWindowProcW
 004F1AA3    mov         edx,dword ptr [ebp-8]
 004F1AA6    mov         dword ptr [edx+0C],eax
>004F1AA9    jmp         004F1AD4
 004F1AAB    mov         eax,dword ptr [ebp-8]
 004F1AAE    mov         eax,dword ptr [eax+8]
 004F1AB1    push        eax
 004F1AB2    mov         eax,dword ptr [ebp-8]
 004F1AB5    mov         eax,dword ptr [eax+4]
 004F1AB8    push        eax
 004F1AB9    mov         eax,dword ptr [ebp-8]
 004F1ABC    mov         eax,dword ptr [eax]
 004F1ABE    push        eax
 004F1ABF    mov         eax,dword ptr [ebp-4]
 004F1AC2    mov         eax,dword ptr [eax+278];TWinControl.FHandle:HWND
 004F1AC8    push        eax
 004F1AC9    call        user32.DefWindowProcW
 004F1ACE    mov         edx,dword ptr [ebp-8]
 004F1AD1    mov         dword ptr [edx+0C],eax
 004F1AD4    xor         eax,eax
 004F1AD6    pop         edx
 004F1AD7    pop         ecx
 004F1AD8    pop         ecx
 004F1AD9    mov         dword ptr fs:[eax],edx
 004F1ADC    push        4F1B0B
 004F1AE1    mov         eax,dword ptr [ebp-8]
 004F1AE4    mov         eax,dword ptr [eax+8]
 004F1AE7    push        eax
 004F1AE8    call        004116C8
 004F1AED    cmp         word ptr [ebp-90],102
>004F1AF6    jne         004F1B03
 004F1AF8    mov         eax,dword ptr [ebp-4]
 004F1AFB    xor         edx,edx
 004F1AFD    mov         dword ptr [eax+270],edx;TWinControl.FTouchControl:TControl
 004F1B03    ret
>004F1B04    jmp         @HandleFinally
>004F1B09    jmp         004F1AE1
 004F1B0B    pop         esi
 004F1B0C    pop         ebx
 004F1B0D    mov         esp,ebp
 004F1B0F    pop         ebp
 004F1B10    ret
end;*}

//004F1B70
{*procedure TWinControl.sub_004F1B70(?:?);
begin
 004F1B70    push        ebp
 004F1B71    mov         ebp,esp
 004F1B73    add         esp,0FFFFFFC8
 004F1B76    push        ebx
 004F1B77    push        esi
 004F1B78    push        edi
 004F1B79    xor         ecx,ecx
 004F1B7B    mov         dword ptr [ebp-4],ecx
 004F1B7E    mov         dword ptr [ebp-8],edx
 004F1B81    mov         esi,eax
 004F1B83    xor         eax,eax
 004F1B85    push        ebp
 004F1B86    push        4F1F45
 004F1B8B    push        dword ptr fs:[eax]
 004F1B8E    mov         dword ptr fs:[eax],esp
 004F1B91    mov         eax,dword ptr [ebp-8]
 004F1B94    mov         eax,dword ptr [eax+8]
 004F1B97    add         eax,0C
 004F1B9A    mov         dword ptr [ebp-18],eax
 004F1B9D    mov         eax,dword ptr [ebp-18]
 004F1BA0    movsx       eax,word ptr [eax]
 004F1BA3    mov         dword ptr [ebp-20],eax
 004F1BA6    mov         eax,dword ptr [ebp-18]
 004F1BA9    movsx       eax,word ptr [eax+2]
 004F1BAD    mov         dword ptr [ebp-1C],eax
 004F1BB0    mov         eax,dword ptr [ebp-20]
 004F1BB3    mov         dword ptr [ebp-10],eax
 004F1BB6    mov         eax,dword ptr [ebp-1C]
 004F1BB9    mov         dword ptr [ebp-0C],eax
 004F1BBC    lea         eax,[ebp-10]
 004F1BBF    push        eax
 004F1BC0    mov         eax,dword ptr [esi+278];TWinControl.FHandle:HWND
 004F1BC6    push        eax
 004F1BC7    call        00411308
 004F1BCC    lea         ecx,[ebp-38]
 004F1BCF    lea         edx,[ebp-10]
 004F1BD2    mov         eax,esi
 004F1BD4    call        TControl.ScreenToClient
 004F1BD9    mov         eax,dword ptr [ebp-38]
 004F1BDC    mov         dword ptr [ebp-10],eax
 004F1BDF    mov         eax,dword ptr [ebp-34]
 004F1BE2    mov         dword ptr [ebp-0C],eax
 004F1BE5    lea         edx,[ebp-30]
 004F1BE8    mov         eax,esi
 004F1BEA    mov         ecx,dword ptr [eax]
 004F1BEC    call        dword ptr [ecx+64];TWinControl.GetClientRect
 004F1BEF    lea         eax,[ebp-30]
 004F1BF2    lea         edx,[ebp-10]
 004F1BF5    call        TRect.Contains
 004F1BFA    test        al,al
>004F1BFC    jne         004F1C55
 004F1BFE    push        1
 004F1C00    lea         eax,[ebp-4]
 004F1C03    mov         ecx,1
 004F1C08    mov         edx,dword ptr ds:[4F1B38];:TWinControl.:3
 004F1C0E    call        @DynArraySetLength
 004F1C13    add         esp,4
 004F1C16    mov         eax,dword ptr [ebp-4]
 004F1C19    xor         edx,edx
 004F1C1B    mov         dword ptr [eax],edx
 004F1C1D    mov         eax,dword ptr [ebp-4]
 004F1C20    xor         edx,edx
 004F1C22    mov         dword ptr [eax+4],edx
 004F1C25    mov         eax,dword ptr [ebp-4]
 004F1C28    mov         dword ptr [eax+8],1
 004F1C2F    push        0C
 004F1C31    mov         eax,dword ptr [ebp-4]
 004F1C34    push        eax
 004F1C35    push        1
 004F1C37    push        0
 004F1C39    mov         eax,esi
 004F1C3B    call        TWinControl.GetHandle
 004F1C40    push        eax
 004F1C41    call        004116E0
 004F1C46    mov         eax,dword ptr [ebp-8]
 004F1C49    mov         dword ptr [eax+0C],1
>004F1C50    jmp         004F1F29
 004F1C55    push        0
 004F1C57    push        0
 004F1C59    lea         edx,[ebp-10]
 004F1C5C    mov         cl,1
 004F1C5E    mov         eax,esi
 004F1C60    call        TWinControl.ControlAtPos
 004F1C65    mov         ebx,eax
 004F1C67    mov         dword ptr [esi+270],ebx;TWinControl.FTouchControl:TControl
 004F1C6D    test        ebx,ebx
>004F1C6F    jne         004F1C77
 004F1C71    mov         dword ptr [esi+270],esi;TWinControl.FTouchControl:TControl
 004F1C77    mov         ebx,dword ptr [esi+270];TWinControl.FTouchControl:TControl
 004F1C7D    lea         ecx,[ebp-13]
 004F1C80    lea         edx,[ebp-11]
 004F1C83    mov         eax,ebx
 004F1C85    mov         edi,dword ptr [eax]
 004F1C87    call        dword ptr [edi+58];TControl.sub_004E7864
>004F1C8A    jmp         004F1CC1
 004F1C8C    mov         ebx,dword ptr [ebx+40];TControl.FParent:TWinControl
 004F1C8F    lea         ecx,[ebp-14]
 004F1C92    lea         edx,[ebp-12]
 004F1C95    mov         eax,ebx
 004F1C97    mov         edi,dword ptr [eax]
 004F1C99    call        dword ptr [edi+58];TWinControl.sub_004E7864
 004F1C9C    test        byte ptr [ebp-11],2
>004F1CA0    je          004F1CB3
 004F1CA2    movzx       eax,byte ptr ds:[7A1205];0xF gvar_007A1205
 004F1CA9    not         eax
 004F1CAB    and         al,byte ptr [ebp-14]
 004F1CAE    or          byte ptr [ebp-13],al
>004F1CB1    jmp         004F1CBA
 004F1CB3    movzx       eax,byte ptr [ebp-14]
 004F1CB7    or          byte ptr [ebp-13],al
 004F1CBA    movzx       eax,byte ptr [ebp-12]
 004F1CBE    or          byte ptr [ebp-11],al
 004F1CC1    cmp         dword ptr [ebx+40],0;TWinControl.FParent:TWinControl
>004F1CC5    je          004F1CD3
 004F1CC7    mov         eax,dword ptr [ebx+0BC];TWinControl.FTouchManager:TTouchManager
 004F1CCD    test        byte ptr [eax+11],10;TTouchManager.FInteractiveGestureOptions:TInteractiveGestureOptions
>004F1CD1    jne         004F1C8C
 004F1CD3    movzx       eax,byte ptr ds:[4F1F54];0x0 gvar_004F1F54
 004F1CDA    cmp         al,byte ptr [ebp-11]
>004F1CDD    jne         004F1D15
 004F1CDF    push        1
 004F1CE1    lea         eax,[ebp-4]
 004F1CE4    mov         ecx,1
 004F1CE9    mov         edx,dword ptr ds:[4F1B38];:TWinControl.:3
 004F1CEF    call        @DynArraySetLength
 004F1CF4    add         esp,4
 004F1CF7    mov         eax,dword ptr [ebp-4]
 004F1CFA    xor         edx,edx
 004F1CFC    mov         dword ptr [eax],edx
 004F1CFE    mov         eax,dword ptr [ebp-4]
 004F1D01    xor         edx,edx
 004F1D03    mov         dword ptr [eax+4],edx
 004F1D06    mov         eax,dword ptr [ebp-4]
 004F1D09    mov         dword ptr [eax+8],1
>004F1D10    jmp         004F1EF1
 004F1D15    push        5
 004F1D17    lea         eax,[ebp-4]
 004F1D1A    mov         ecx,1
 004F1D1F    mov         edx,dword ptr ds:[4F1B38];:TWinControl.:3
 004F1D25    call        @DynArraySetLength
 004F1D2A    add         esp,4
 004F1D2D    mov         eax,dword ptr [ebp-4]
 004F1D30    xor         ecx,ecx
 004F1D32    mov         edx,3C
 004F1D37    call        @FillChar
 004F1D3C    mov         eax,dword ptr [ebp-4]
 004F1D3F    mov         dword ptr [eax],4
 004F1D45    test        byte ptr [ebp-11],2
 004F1D49    setne       al
 004F1D4C    and         eax,7F
 004F1D4F    mov         eax,dword ptr [eax*4+7A1208]
 004F1D56    test        byte ptr [ebp-13],2
 004F1D5A    setne       dl
 004F1D5D    and         edx,7F
 004F1D60    or          eax,dword ptr [edx*4+7A1230]
 004F1D67    test        byte ptr [ebp-13],1
 004F1D6B    setne       dl
 004F1D6E    and         edx,7F
 004F1D71    or          eax,dword ptr [edx*4+7A1238]
 004F1D78    test        byte ptr [ebp-13],8
 004F1D7C    setne       dl
 004F1D7F    and         edx,7F
 004F1D82    or          eax,dword ptr [edx*4+7A1240]
 004F1D89    test        byte ptr [ebp-13],4
 004F1D8D    setne       dl
 004F1D90    and         edx,7F
 004F1D93    or          eax,dword ptr [edx*4+7A1248]
 004F1D9A    mov         edx,dword ptr [ebp-4]
 004F1D9D    mov         dword ptr [edx+4],eax
 004F1DA0    test        byte ptr [ebp-11],2
 004F1DA4    setne       al
 004F1DA7    xor         al,1
 004F1DA9    and         eax,7F
 004F1DAC    mov         eax,dword ptr [eax*4+7A1208]
 004F1DB3    test        byte ptr [ebp-13],2
 004F1DB7    setne       dl
 004F1DBA    xor         dl,1
 004F1DBD    and         edx,7F
 004F1DC0    or          eax,dword ptr [edx*4+7A1230]
 004F1DC7    test        byte ptr [ebp-13],1
 004F1DCB    setne       dl
 004F1DCE    xor         dl,1
 004F1DD1    and         edx,7F
 004F1DD4    or          eax,dword ptr [edx*4+7A1238]
 004F1DDB    test        byte ptr [ebp-13],8
 004F1DDF    setne       dl
 004F1DE2    xor         dl,1
 004F1DE5    and         edx,7F
 004F1DE8    or          eax,dword ptr [edx*4+7A1240]
 004F1DEF    test        byte ptr [ebp-13],4
 004F1DF3    setne       dl
 004F1DF6    xor         dl,1
 004F1DF9    and         edx,7F
 004F1DFC    or          eax,dword ptr [edx*4+7A1248]
 004F1E03    mov         edx,dword ptr [ebp-4]
 004F1E06    mov         dword ptr [edx+8],eax
 004F1E09    mov         eax,dword ptr [ebp-4]
 004F1E0C    mov         dword ptr [eax+0C],3
 004F1E13    test        byte ptr [ebp-11],1
 004F1E17    setne       al
 004F1E1A    and         eax,7F
 004F1E1D    mov         eax,dword ptr [eax*4+7A1210]
 004F1E24    mov         edx,dword ptr [ebp-4]
 004F1E27    mov         dword ptr [edx+10],eax
 004F1E2A    test        byte ptr [ebp-11],1
 004F1E2E    setne       al
 004F1E31    xor         al,1
 004F1E33    and         eax,7F
 004F1E36    mov         eax,dword ptr [eax*4+7A1210]
 004F1E3D    mov         edx,dword ptr [ebp-4]
 004F1E40    mov         dword ptr [edx+14],eax
 004F1E43    mov         eax,dword ptr [ebp-4]
 004F1E46    mov         dword ptr [eax+18],5
 004F1E4D    test        byte ptr [ebp-11],4
 004F1E51    setne       al
 004F1E54    and         eax,7F
 004F1E57    mov         eax,dword ptr [eax*4+7A1218]
 004F1E5E    mov         edx,dword ptr [ebp-4]
 004F1E61    mov         dword ptr [edx+1C],eax
 004F1E64    test        byte ptr [ebp-11],4
 004F1E68    setne       al
 004F1E6B    xor         al,1
 004F1E6D    and         eax,7F
 004F1E70    mov         eax,dword ptr [eax*4+7A1218]
 004F1E77    mov         edx,dword ptr [ebp-4]
 004F1E7A    mov         dword ptr [edx+20],eax
 004F1E7D    mov         eax,dword ptr [ebp-4]
 004F1E80    mov         dword ptr [eax+24],6
 004F1E87    test        byte ptr [ebp-11],8
 004F1E8B    setne       al
 004F1E8E    and         eax,7F
 004F1E91    mov         eax,dword ptr [eax*4+7A1228]
 004F1E98    mov         edx,dword ptr [ebp-4]
 004F1E9B    mov         dword ptr [edx+28],eax
 004F1E9E    test        byte ptr [ebp-11],8
 004F1EA2    setne       al
 004F1EA5    xor         al,1
 004F1EA7    and         eax,7F
 004F1EAA    mov         eax,dword ptr [eax*4+7A1228]
 004F1EB1    mov         edx,dword ptr [ebp-4]
 004F1EB4    mov         dword ptr [edx+2C],eax
 004F1EB7    mov         eax,dword ptr [ebp-4]
 004F1EBA    mov         dword ptr [eax+30],7
 004F1EC1    test        byte ptr [ebp-11],10
 004F1EC5    setne       al
 004F1EC8    and         eax,7F
 004F1ECB    mov         eax,dword ptr [eax*4+7A1220]
 004F1ED2    mov         edx,dword ptr [ebp-4]
 004F1ED5    mov         dword ptr [edx+34],eax
 004F1ED8    test        byte ptr [ebp-11],10
 004F1EDC    setne       al
 004F1EDF    xor         al,1
 004F1EE1    and         eax,7F
 004F1EE4    mov         eax,dword ptr [eax*4+7A1220]
 004F1EEB    mov         edx,dword ptr [ebp-4]
 004F1EEE    mov         dword ptr [edx+38],eax
 004F1EF1    mov         eax,esi
 004F1EF3    call        TWinControl.GetHandle
 004F1EF8    mov         edx,eax
 004F1EFA    mov         eax,dword ptr [ebp-4]
 004F1EFD    test        eax,eax
>004F1EFF    je          004F1F06
 004F1F01    sub         eax,4
 004F1F04    mov         eax,dword ptr [eax]
 004F1F06    push        0C
 004F1F08    mov         ecx,dword ptr [ebp-4]
 004F1F0B    push        ecx
 004F1F0C    push        eax
 004F1F0D    push        0
 004F1F0F    push        edx
 004F1F10    call        004116E0
 004F1F15    mov         eax,dword ptr [ebp-8]
 004F1F18    mov         dword ptr [eax+0C],1
 004F1F1F    mov         eax,esi
 004F1F21    mov         edx,dword ptr [eax]
 004F1F23    call        dword ptr [edx+100];TWinControl.UpdateTIPStatus
 004F1F29    xor         eax,eax
 004F1F2B    pop         edx
 004F1F2C    pop         ecx
 004F1F2D    pop         ecx
 004F1F2E    mov         dword ptr fs:[eax],edx
 004F1F31    push        4F1F4C
 004F1F36    lea         eax,[ebp-4]
 004F1F39    mov         edx,dword ptr ds:[4F1B38];:TWinControl.:3
 004F1F3F    call        @DynArrayClear
 004F1F44    ret
>004F1F45    jmp         @HandleFinally
>004F1F4A    jmp         004F1F36
 004F1F4C    pop         edi
 004F1F4D    pop         esi
 004F1F4E    pop         ebx
 004F1F4F    mov         esp,ebp
 004F1F51    pop         ebp
 004F1F52    ret
end;*}

//004F1F58
{*procedure TWinControl.sub_004F1F58(?:?);
begin
 004F1F58    push        ebx
 004F1F59    push        esi
 004F1F5A    push        edi
 004F1F5B    add         esp,0FFFFFFE8
 004F1F5E    mov         edi,edx
 004F1F60    mov         ebx,eax
 004F1F62    movzx       eax,word ptr [edi+8]
 004F1F66    movzx       edx,word ptr [edi+0A]
 004F1F6A    mov         dword ptr [esp+8],eax
 004F1F6E    mov         dword ptr [esp+0C],edx
 004F1F72    mov         eax,dword ptr [esp+8]
 004F1F76    mov         dword ptr [esp],eax
 004F1F79    mov         eax,dword ptr [esp+0C]
 004F1F7D    mov         dword ptr [esp+4],eax
 004F1F81    push        esp
 004F1F82    mov         eax,dword ptr [ebx+278];TWinControl.FHandle:HWND
 004F1F88    push        eax
 004F1F89    call        00411308
 004F1F8E    lea         ecx,[esp+10]
 004F1F92    mov         edx,esp
 004F1F94    mov         eax,ebx
 004F1F96    call        TControl.ScreenToClient
 004F1F9B    mov         eax,dword ptr [esp+10]
 004F1F9F    mov         dword ptr [esp],eax
 004F1FA2    mov         eax,dword ptr [esp+14]
 004F1FA6    mov         dword ptr [esp+4],eax
 004F1FAA    push        0
 004F1FAC    push        0
 004F1FAE    lea         edx,[esp+8]
 004F1FB2    mov         cl,1
 004F1FB4    mov         eax,ebx
 004F1FB6    call        TWinControl.ControlAtPos
 004F1FBB    mov         esi,eax
 004F1FBD    test        esi,esi
>004F1FBF    jne         004F1FC3
 004F1FC1    mov         esi,ebx
 004F1FC3    mov         dword ptr [edi+0C],198319
 004F1FCA    xor         eax,eax
 004F1FCC    mov         edx,7A1250
 004F1FD1    mov         ecx,dword ptr [esi+0BC];TControl.FTouchManager:TTouchManager
 004F1FD7    mov         ebx,eax
 004F1FD9    cmp         bl,0F
>004F1FDC    ja          004F1FE6
 004F1FDE    and         ebx,7F
 004F1FE1    bt          word ptr [ecx+1E],bx;TTouchManager.FTabletOptions:TTabletOptions
>004F1FE6    jae         004F1FEF
 004F1FE8    mov         ecx,dword ptr [edx]
 004F1FEA    not         ecx
 004F1FEC    and         dword ptr [edi+0C],ecx
 004F1FEF    inc         eax
 004F1FF0    add         edx,4
 004F1FF3    cmp         al,9
>004F1FF5    jne         004F1FD1
 004F1FF7    add         esp,18
 004F1FFA    pop         edi
 004F1FFB    pop         esi
 004F1FFC    pop         ebx
 004F1FFD    ret
end;*}

//004F2000
function TGroupBox.GetParentBackground:Boolean;
begin
{*
 004F2000    test        byte ptr [eax+62],4;TGroupBox.FEnabled:Boolean
 004F2004    setne       al
 004F2007    ret
*}
end;

//004F2008
procedure TGroupBox.SetParentBackground(Value:Boolean);
begin
{*
 004F2008    push        esi
 004F2009    mov         esi,eax
 004F200B    test        byte ptr [esi+62],4;TGroupBox.FEnabled:Boolean
 004F200F    setne       al
 004F2012    cmp         dl,al
>004F2014    je          004F2038
 004F2016    test        dl,dl
>004F2018    je          004F2024
 004F201A    mov         eax,[004F203C];0x40000 gvar_004F203C
 004F201F    or          dword ptr [esi+60],eax;TGroupBox.FControlStyle:TControlStyle
>004F2022    jmp         004F202E
 004F2024    mov         eax,[004F203C];0x40000 gvar_004F203C
 004F2029    not         eax
 004F202B    and         dword ptr [esi+60],eax;TGroupBox.FControlStyle:TControlStyle
 004F202E    mov         eax,esi
 004F2030    mov         edx,dword ptr [eax]
 004F2032    call        dword ptr [edx+0A8];TWinControl.Invalidate
 004F2038    pop         esi
 004F2039    ret
*}
end;

//004F2040
procedure TWinControl.CMTextChanged;
begin
{*
 004F2040    push        ebx
 004F2041    mov         ebx,eax
 004F2043    mov         eax,ebx
 004F2045    mov         ecx,dword ptr [eax]
 004F2047    call        dword ptr [ecx-10];TWinControl.DefaultHandler
 004F204A    xor         edx,edx
 004F204C    mov         eax,ebx
 004F204E    call        004F2058
 004F2053    pop         ebx
 004F2054    ret
*}
end;

//004F2058
{*procedure sub_004F2058(?:TWinControl; ?:?);
begin
 004F2058    push        esi
 004F2059    mov         esi,eax
 004F205B    mov         ecx,dword ptr [eax+40];TWinControl.FParent:TWinControl
>004F205E    jmp         004F2065
 004F2060    mov         esi,ecx
 004F2062    mov         ecx,dword ptr [ecx+40];TWinControl.FParent:TWinControl
 004F2065    cmp         dword ptr [esi+0A0],0;TWinControl.FHostDockSite:TWinControl
>004F206C    jne         004F2072
 004F206E    test        ecx,ecx
>004F2070    jne         004F2060
 004F2072    test        esi,esi
>004F2074    je          004F2088
 004F2076    and         edx,7F
 004F2079    push        edx
 004F207A    mov         ecx,eax
 004F207C    mov         eax,esi
 004F207E    mov         edx,0B046
 004F2083    call        004E6A58
 004F2088    pop         esi
 004F2089    ret
end;*}

//004F208C
function TWinControl.DockReplaceDockClient(Client:TControl; NewDockSite:TWinControl; DropControl:TControl; ControlSide:TAlign; ReplacementClient:TControl):Boolean;
begin
{*
 004F208C    push        ebp
 004F208D    mov         ebp,esp
 004F208F    xor         eax,eax
 004F2091    pop         ebp
 004F2092    ret         0C
*}
end;

//004F2098
procedure TWinControl.PreProcessMessage(var Msg:tagMSG);
begin
{*
 004F2098    xor         eax,eax
 004F209A    ret
*}
end;

//004F209C
procedure sub_004F209C(?:TWinControl);
begin
{*
 004F209C    push        ebx
 004F209D    mov         ebx,eax
 004F209F    movzx       eax,word ptr ds:[7CA5EA];gvar_007CA5EA
 004F20A6    push        eax
 004F20A7    mov         eax,dword ptr [ebx+278];TWinControl.FHandle:HWND
 004F20AD    push        eax
 004F20AE    call        user32.RemovePropW
 004F20B3    movzx       eax,word ptr ds:[7CA5E8];gvar_007CA5E8
 004F20BA    push        eax
 004F20BB    mov         eax,dword ptr [ebx+278];TWinControl.FHandle:HWND
 004F20C1    push        eax
 004F20C2    call        user32.RemovePropW
 004F20C7    pop         ebx
 004F20C8    ret
*}
end;

//004F20CC
{*procedure TWinControl.sub_004F20CC(?:?);
begin
 004F20CC    push        ebx
 004F20CD    push        esi
 004F20CE    mov         esi,edx
 004F20D0    mov         ebx,eax
 004F20D2    cmp         ebx,dword ptr [esi+0A0]
>004F20D8    jne         004F20E9
 004F20DA    mov         eax,ebx
 004F20DC    call        004EE690
 004F20E1    dec         eax
>004F20E2    jg          004F20E9
 004F20E4    xor         eax,eax
 004F20E6    pop         esi
 004F20E7    pop         ebx
 004F20E8    ret
 004F20E9    mov         al,1
 004F20EB    pop         esi
 004F20EC    pop         ebx
 004F20ED    ret
end;*}

//004F20F0
procedure TWinControl.Realign;
begin
{*
 004F20F0    xor         edx,edx
 004F20F2    call        TWinControl.AlignControl
 004F20F7    ret
*}
end;

//004F20F8
procedure TGroupBox.SetPadding(Value:TPadding);
begin
{*
 004F20F8    mov         eax,dword ptr [eax+1CC];TGroupBox.FPadding:TPadding
 004F20FE    mov         ecx,dword ptr [eax]
 004F2100    call        dword ptr [ecx+8];TPersistent.Assign
 004F2103    ret
*}
end;

//004F2104
{*procedure sub_004F2104(?:TWinControl; ?:?);
begin
 004F2104    push        ebx
 004F2105    push        esi
 004F2106    push        edi
 004F2107    push        ebp
 004F2108    mov         ebx,edx
 004F210A    mov         ebp,eax
 004F210C    test        bl,bl
>004F210E    je          004F2119
 004F2110    or          dword ptr [ebp+64],2000;TWinControl.FControlState:TControlState
>004F2117    jmp         004F2120
 004F2119    and         dword ptr [ebp+64],0FFFFDFFF;TWinControl.FControlState:TControlState
 004F2120    mov         eax,dword ptr [ebp+1F4];TWinControl.FWinControls:TList
 004F2126    test        eax,eax
>004F2128    je          004F214D
 004F212A    mov         esi,dword ptr [eax+8];TList.FCount:Integer
 004F212D    dec         esi
 004F212E    test        esi,esi
>004F2130    jl          004F214D
 004F2132    inc         esi
 004F2133    xor         edi,edi
 004F2135    mov         edx,edi
 004F2137    mov         eax,dword ptr [ebp+1F4];TWinControl.FWinControls:TList
 004F213D    call        TList.Get
 004F2142    mov         edx,ebx
 004F2144    call        004F2104
 004F2149    inc         edi
 004F214A    dec         esi
>004F214B    jne         004F2135
 004F214D    pop         ebp
 004F214E    pop         edi
 004F214F    pop         esi
 004F2150    pop         ebx
 004F2151    ret
end;*}

//004F2154
{*procedure sub_004F2154(?:?);
begin
 004F2154    push        ebp
 004F2155    mov         ebp,esp
 004F2157    push        0
 004F2159    xor         eax,eax
 004F215B    push        ebp
 004F215C    push        4F21A1
 004F2161    push        dword ptr fs:[eax]
 004F2164    mov         dword ptr fs:[eax],esp
 004F2167    push        1
 004F2169    lea         eax,[ebp-4]
 004F216C    mov         edx,dword ptr [ebp+8]
 004F216F    mov         edx,dword ptr [edx-4]
 004F2172    mov         edx,dword ptr [edx+200]
 004F2178    mov         ecx,4F21AC;['{6B6A65A5-6AF3-46C2-B6EA-56CD1F80DF71}']
 004F217D    call        @IntfCast
 004F2182    mov         eax,dword ptr [ebp-4]
 004F2185    push        eax
 004F2186    mov         eax,dword ptr [eax]
 004F2188    call        dword ptr [eax+5C]
 004F218B    xor         eax,eax
 004F218D    pop         edx
 004F218E    pop         ecx
 004F218F    pop         ecx
 004F2190    mov         dword ptr fs:[eax],edx
 004F2193    push        4F21A8
 004F2198    lea         eax,[ebp-4]
 004F219B    call        @IntfClear
 004F21A0    ret
>004F21A1    jmp         @HandleFinally
>004F21A6    jmp         004F2198
 004F21A8    pop         ecx
 004F21A9    pop         ebp
 004F21AA    ret
end;*}

//004F21BC
{*procedure sub_004F21BC(?:?);
begin
 004F21BC    push        ebp
 004F21BD    mov         ebp,esp
 004F21BF    push        0
 004F21C1    xor         eax,eax
 004F21C3    push        ebp
 004F21C4    push        4F2209
 004F21C9    push        dword ptr fs:[eax]
 004F21CC    mov         dword ptr fs:[eax],esp
 004F21CF    push        0
 004F21D1    lea         eax,[ebp-4]
 004F21D4    mov         edx,dword ptr [ebp+8]
 004F21D7    mov         edx,dword ptr [edx-4]
 004F21DA    mov         edx,dword ptr [edx+200]
 004F21E0    mov         ecx,4F2214;['{6B6A65A5-6AF3-46C2-B6EA-56CD1F80DF71}']
 004F21E5    call        @IntfCast
 004F21EA    mov         eax,dword ptr [ebp-4]
 004F21ED    push        eax
 004F21EE    mov         eax,dword ptr [eax]
 004F21F0    call        dword ptr [eax+5C]
 004F21F3    xor         eax,eax
 004F21F5    pop         edx
 004F21F6    pop         ecx
 004F21F7    pop         ecx
 004F21F8    mov         dword ptr fs:[eax],edx
 004F21FB    push        4F2210
 004F2200    lea         eax,[ebp-4]
 004F2203    call        @IntfClear
 004F2208    ret
>004F2209    jmp         @HandleFinally
>004F220E    jmp         004F2200
 004F2210    pop         ecx
 004F2211    pop         ebp
 004F2212    ret
end;*}

//004F2224
procedure SetTextInputPanelStatus(Control:TWinControl; OpenTIP:Boolean);
begin
{*
 004F2224    push        ebp
 004F2225    mov         ebp,esp
 004F2227    push        ecx
 004F2228    mov         dword ptr [ebp-4],eax
 004F222B    mov         eax,dword ptr [ebp-4]
 004F222E    cmp         dword ptr [eax+200],0
>004F2235    je          004F224B
 004F2237    test        dl,dl
>004F2239    je          004F2244
 004F223B    push        ebp
 004F223C    call        004F2154
 004F2241    pop         ecx
>004F2242    jmp         004F224B
 004F2244    push        ebp
 004F2245    call        004F21BC
 004F224A    pop         ecx
 004F224B    pop         ecx
 004F224C    pop         ebp
 004F224D    ret
*}
end;

//004F2250
procedure TWinControl.UpdateTIPStatus;
begin
{*
 004F2250    cmp         dword ptr [eax+200],0
>004F2257    je          004F2279
 004F2259    movzx       edx,byte ptr [eax+1EC]
 004F2260    cmp         dl,1
>004F2263    jne         004F226E
 004F2265    mov         dl,1
 004F2267    call        SetTextInputPanelStatus
>004F226C    jmp         004F2279
 004F226E    test        dl,dl
>004F2270    jne         004F2279
 004F2272    xor         edx,edx
 004F2274    call        SetTextInputPanelStatus
 004F2279    ret
*}
end;

//004F227C
{*procedure sub_004F227C(?:?; ?:?);
begin
 004F227C    push        ebx
 004F227D    push        esi
 004F227E    add         esp,0FFFFFFF0
 004F2281    mov         esi,ecx
 004F2283    mov         ebx,eax
 004F2285    test        byte ptr [ebx+1C],2;TMainForm.FComponentState:TComponentState
>004F2289    je          004F22A4
 004F228B    test        byte ptr [edx+1C],10
>004F228F    jne         004F22D2
 004F2291    mov         eax,dword ptr [ebx+284];TMainForm.FDesignSize:TPoint
 004F2297    mov         dword ptr [esi],eax
 004F2299    mov         eax,dword ptr [ebx+288]
 004F229F    mov         dword ptr [esi+4],eax
>004F22A2    jmp         004F22D2
 004F22A4    mov         eax,ebx
 004F22A6    call        TWinControl.HandleAllocated
 004F22AB    test        al,al
>004F22AD    je          004F22C7
 004F22AF    mov         edx,esp
 004F22B1    mov         eax,ebx
 004F22B3    mov         ecx,dword ptr [eax]
 004F22B5    call        dword ptr [ecx+64];TCustomForm.GetClientRect
 004F22B8    mov         eax,dword ptr [esp+8]
 004F22BC    mov         dword ptr [esi],eax
 004F22BE    mov         eax,dword ptr [esp+0C]
 004F22C2    mov         dword ptr [esi+4],eax
>004F22C5    jmp         004F22D2
 004F22C7    mov         eax,dword ptr [ebx+58];TMainForm.FWidth:Integer
 004F22CA    mov         dword ptr [esi],eax
 004F22CC    mov         eax,dword ptr [ebx+5C];TMainForm.FHeight:Integer
 004F22CF    mov         dword ptr [esi+4],eax
 004F22D2    mov         eax,dword ptr [ebx+1CC];TMainForm.FPadding:TPadding
 004F22D8    mov         edx,dword ptr [eax+8];TPadding.FLeft:TMarginSize
 004F22DB    add         edx,dword ptr [eax+10];TPadding.FRight:TMarginSize
 004F22DE    sub         dword ptr [esi],edx
 004F22E0    mov         eax,dword ptr [ebx+1CC];TMainForm.FPadding:TPadding
 004F22E6    mov         edx,dword ptr [eax+0C];TPadding.FTop:TMarginSize
 004F22E9    add         edx,dword ptr [eax+14];TPadding.FBottom:TMarginSize
 004F22EC    sub         dword ptr [esi+4],edx
 004F22EF    add         esp,10
 004F22F2    pop         esi
 004F22F3    pop         ebx
 004F22F4    ret
end;*}

//004F22F8
{*procedure sub_004F22F8(?:?);
begin
 004F22F8    push        ebp
 004F22F9    mov         ebp,esp
 004F22FB    add         esp,0FFFFFFF8
 004F22FE    push        ebx
 004F22FF    mov         ebx,edx
 004F2301    mov         dword ptr [ebp-4],eax
 004F2304    mov         eax,dword ptr [ebp-4]
 004F2307    call        TWinControl.HandleAllocated
 004F230C    test        al,al
>004F230E    je          004F2319
 004F2310    mov         eax,dword ptr [ebp-4]
 004F2313    test        byte ptr [eax+65],20;TStringGrid.FAlign:TAlign
>004F2317    je          004F231D
 004F2319    xor         eax,eax
>004F231B    jmp         004F231F
 004F231D    mov         al,1
 004F231F    mov         byte ptr [ebp-5],al
 004F2322    cmp         byte ptr [ebp-5],0
>004F2326    je          004F2332
 004F2328    mov         dl,1
 004F232A    mov         eax,dword ptr [ebp-4]
 004F232D    call        004F2104
 004F2332    xor         eax,eax
 004F2334    push        ebp
 004F2335    push        4F2372
 004F233A    push        dword ptr fs:[eax]
 004F233D    mov         dword ptr fs:[eax],esp
 004F2340    mov         edx,ebx
 004F2342    mov         eax,dword ptr [ebp-4]
 004F2345    call        004E6DA4
 004F234A    mov         eax,dword ptr [ebp-4]
 004F234D    mov         byte ptr [eax+268],0;TStringGrid.FMouseInClient:Boolean
 004F2354    xor         eax,eax
 004F2356    pop         edx
 004F2357    pop         ecx
 004F2358    pop         ecx
 004F2359    mov         dword ptr fs:[eax],edx
 004F235C    push        4F2379
 004F2361    cmp         byte ptr [ebp-5],0
>004F2365    je          004F2371
 004F2367    xor         edx,edx
 004F2369    mov         eax,dword ptr [ebp-4]
 004F236C    call        004F2104
 004F2371    ret
>004F2372    jmp         @HandleFinally
>004F2377    jmp         004F2361
 004F2379    pop         ebx
 004F237A    pop         ecx
 004F237B    pop         ecx
 004F237C    pop         ebp
 004F237D    ret
end;*}

//004F2380
constructor TGraphicControl.Create(AOwner:TComponent);
begin
{*
 004F2380    push        ebp
 004F2381    mov         ebp,esp
 004F2383    push        ecx
 004F2384    push        ebx
 004F2385    push        esi
 004F2386    test        dl,dl
>004F2388    je          004F2392
 004F238A    add         esp,0FFFFFFF0
 004F238D    call        @ClassCreate
 004F2392    mov         byte ptr [ebp-1],dl
 004F2395    mov         ebx,eax
 004F2397    xor         edx,edx
 004F2399    mov         eax,ebx
 004F239B    call        TControl.Create
 004F23A0    mov         dl,1
 004F23A2    mov         eax,[004D9044];TControlCanvas
 004F23A7    call        TCanvas.Create;TControlCanvas.Create
 004F23AC    mov         esi,eax
 004F23AE    mov         dword ptr [ebx+1B8],esi;TGraphicControl.FCanvas:TCanvas
 004F23B4    mov         eax,esi
 004F23B6    mov         edx,ebx
 004F23B8    call        TControlCanvas.SetControl
 004F23BD    mov         eax,ebx
 004F23BF    cmp         byte ptr [ebp-1],0
>004F23C3    je          004F23D4
 004F23C5    call        @AfterConstruction
 004F23CA    pop         dword ptr fs:[0]
 004F23D1    add         esp,0C
 004F23D4    mov         eax,ebx
 004F23D6    pop         esi
 004F23D7    pop         ebx
 004F23D8    pop         ecx
 004F23D9    pop         ebp
 004F23DA    ret
*}
end;

//004F23DC
destructor TGraphicControl.Destroy();
begin
{*
 004F23DC    push        ebx
 004F23DD    push        esi
 004F23DE    call        @BeforeDestruction
 004F23E3    mov         ebx,edx
 004F23E5    mov         esi,eax
 004F23E7    cmp         esi,dword ptr ds:[7A11B4];gvar_007A11B4:TControl
>004F23ED    jne         004F23F6
 004F23EF    xor         eax,eax
 004F23F1    call        SetCaptureControl
 004F23F6    mov         eax,dword ptr [esi+1B8]
 004F23FC    call        TObject.Free
 004F2401    mov         dl,0FC
 004F2403    and         dl,bl
 004F2405    mov         eax,esi
 004F2407    call        TControl.Destroy
 004F240C    test        bl,bl
>004F240E    jle         004F2417
 004F2410    mov         eax,esi
 004F2412    call        @ClassDestroy
 004F2417    pop         esi
 004F2418    pop         ebx
 004F2419    ret
*}
end;

//004F241C
{*procedure TGraphicControl.WMPaint(?:?);
begin
 004F241C    push        ebp
 004F241D    mov         ebp,esp
 004F241F    push        ecx
 004F2420    push        ebx
 004F2421    mov         ebx,edx
 004F2423    mov         dword ptr [ebp-4],eax
 004F2426    cmp         dword ptr [ebx+4],0
>004F242A    je          004F24CB
 004F2430    mov         eax,dword ptr [ebp-4]
 004F2433    test        byte ptr [eax+1C],8;TGraphicControl.FComponentState:TComponentState
>004F2437    jne         004F24CB
 004F243D    mov         eax,dword ptr [ebp-4]
 004F2440    mov         eax,dword ptr [eax+1B8];TGraphicControl.FCanvas:TCanvas
 004F2446    call        TCustomCanvas.Lock
 004F244B    xor         eax,eax
 004F244D    push        ebp
 004F244E    push        4F24C4
 004F2453    push        dword ptr fs:[eax]
 004F2456    mov         dword ptr fs:[eax],esp
 004F2459    mov         edx,dword ptr [ebx+4]
 004F245C    mov         eax,dword ptr [ebp-4]
 004F245F    mov         eax,dword ptr [eax+1B8];TGraphicControl.FCanvas:TCanvas
 004F2465    call        TCanvas.SetHandle
 004F246A    xor         eax,eax
 004F246C    push        ebp
 004F246D    push        4F24A1
 004F2472    push        dword ptr fs:[eax]
 004F2475    mov         dword ptr fs:[eax],esp
 004F2478    mov         eax,dword ptr [ebp-4]
 004F247B    mov         edx,dword ptr [eax]
 004F247D    call        dword ptr [edx+0B8];TGraphicControl.sub_004F24D0
 004F2483    xor         eax,eax
 004F2485    pop         edx
 004F2486    pop         ecx
 004F2487    pop         ecx
 004F2488    mov         dword ptr fs:[eax],edx
 004F248B    push        4F24A8
 004F2490    mov         eax,dword ptr [ebp-4]
 004F2493    mov         eax,dword ptr [eax+1B8];TGraphicControl.FCanvas:TCanvas
 004F2499    xor         edx,edx
 004F249B    call        TCanvas.SetHandle
 004F24A0    ret
>004F24A1    jmp         @HandleFinally
>004F24A6    jmp         004F2490
 004F24A8    xor         eax,eax
 004F24AA    pop         edx
 004F24AB    pop         ecx
 004F24AC    pop         ecx
 004F24AD    mov         dword ptr fs:[eax],edx
 004F24B0    push        4F24CB
 004F24B5    mov         eax,dword ptr [ebp-4]
 004F24B8    mov         eax,dword ptr [eax+1B8];TGraphicControl.FCanvas:TCanvas
 004F24BE    call        TCustomCanvas.Unlock
 004F24C3    ret
>004F24C4    jmp         @HandleFinally
>004F24C9    jmp         004F24B5
 004F24CB    pop         ebx
 004F24CC    pop         ecx
 004F24CD    pop         ebp
 004F24CE    ret
end;*}

//004F24D0
procedure sub_004F24D0;
begin
{*
 004F24D0    ret
*}
end;

//004F24D4
constructor THintWindow.Create(AOwner:TComponent);
begin
{*
 004F24D4    push        ebx
 004F24D5    push        esi
 004F24D6    test        dl,dl
>004F24D8    je          004F24E2
 004F24DA    add         esp,0FFFFFFF0
 004F24DD    call        @ClassCreate
 004F24E2    mov         ebx,edx
 004F24E4    mov         esi,eax
 004F24E6    xor         edx,edx
 004F24E8    mov         eax,esi
 004F24EA    call        TCustomControl.Create
 004F24EF    mov         edx,80FFFF
 004F24F4    mov         eax,esi
 004F24F6    call        TGroupBox.SetColor
 004F24FB    mov         eax,[007C4E78];^Screen:TScreen
 004F2500    mov         eax,dword ptr [eax]
 004F2502    mov         edx,dword ptr [eax+88];TScreen.FHintFont:TFont
 004F2508    mov         eax,dword ptr [esi+290];THintWindow.FCanvas:TCanvas
 004F250E    call        TCanvas.SetFont
 004F2513    mov         eax,dword ptr [esi+290];THintWindow.FCanvas:TCanvas
 004F2519    mov         eax,dword ptr [eax+48];TCanvas.FBrush:TBrush
 004F251C    mov         dl,1
 004F251E    call        TBrush.SetStyle
 004F2523    mov         eax,esi
 004F2525    test        bl,bl
>004F2527    je          004F2538
 004F2529    call        @AfterConstruction
 004F252E    pop         dword ptr fs:[0]
 004F2535    add         esp,0C
 004F2538    mov         eax,esi
 004F253A    pop         esi
 004F253B    pop         ebx
 004F253C    ret
*}
end;

//004F2540
procedure THintWindow.CreateParams(var Params:TCreateParams);
begin
{*
 004F2540    push        ebx
 004F2541    push        esi
 004F2542    mov         ebx,edx
 004F2544    mov         esi,eax
 004F2546    mov         edx,ebx
 004F2548    mov         eax,esi
 004F254A    call        TWinControl.CreateParams
 004F254F    mov         dword ptr [ebx+4],80800000
 004F2556    or          dword ptr [ebx+24],800
 004F255D    mov         edx,1
 004F2562    mov         eax,5
 004F2567    call        CheckWin32Version
 004F256C    test        al,al
>004F256E    je          004F2577
 004F2570    or          dword ptr [ebx+24],20000
 004F2577    cmp         byte ptr ds:[7CA5E0],0;gvar_007CA5E0
>004F257E    je          004F2587
 004F2580    mov         dword ptr [ebx+8],80
 004F2587    lea         edx,[ebx+8]
 004F258A    mov         eax,esi
 004F258C    call        TWinControl.AddBiDiModeExStyle
 004F2591    pop         esi
 004F2592    pop         ebx
 004F2593    ret
*}
end;

//004F2594
procedure TCustomHintWindow.WMNCHitTest(var Message:Messages.TWMNCHitTest);
begin
{*
 004F2594    mov         dword ptr [edx+0C],0FFFFFFFF
 004F259B    ret
*}
end;

//004F259C
{*procedure THintWindow.WMNCPaint(?:?);
begin
 004F259C    push        ebp
 004F259D    mov         ebp,esp
 004F259F    add         esp,0FFFFFFF8
 004F25A2    mov         dword ptr [ebp-4],eax
 004F25A5    mov         eax,dword ptr [ebp-4]
 004F25A8    call        TWinControl.GetHandle
 004F25AD    push        eax
 004F25AE    call        user32.GetWindowDC
 004F25B3    mov         dword ptr [ebp-8],eax
 004F25B6    xor         eax,eax
 004F25B8    push        ebp
 004F25B9    push        4F25F2
 004F25BE    push        dword ptr fs:[eax]
 004F25C1    mov         dword ptr fs:[eax],esp
 004F25C4    mov         edx,dword ptr [ebp-8]
 004F25C7    mov         eax,dword ptr [ebp-4]
 004F25CA    mov         ecx,dword ptr [eax]
 004F25CC    call        dword ptr [ecx+10C];THintWindow.sub_004F2C10
 004F25D2    xor         eax,eax
 004F25D4    pop         edx
 004F25D5    pop         ecx
 004F25D6    pop         ecx
 004F25D7    mov         dword ptr fs:[eax],edx
 004F25DA    push        4F25F9
 004F25DF    mov         eax,dword ptr [ebp-8]
 004F25E2    push        eax
 004F25E3    mov         eax,dword ptr [ebp-4]
 004F25E6    call        TWinControl.GetHandle
 004F25EB    push        eax
 004F25EC    call        user32.ReleaseDC
 004F25F1    ret
>004F25F2    jmp         @HandleFinally
>004F25F7    jmp         004F25DF
 004F25F9    pop         ecx
 004F25FA    pop         ecx
 004F25FB    pop         ebp
 004F25FC    ret
end;*}

//004F2600
procedure sub_004F2600;
begin
{*
 004F2600    push        ebp
 004F2601    mov         ebp,esp
 004F2603    add         esp,0FFFFFFB0
 004F2606    push        ebx
 004F2607    push        esi
 004F2608    push        edi
 004F2609    xor         edx,edx
 004F260B    mov         dword ptr [ebp-4C],edx
 004F260E    mov         ebx,eax
 004F2610    xor         eax,eax
 004F2612    push        ebp
 004F2613    push        4F27EE
 004F2618    push        dword ptr fs:[eax]
 004F261B    mov         dword ptr fs:[eax],esp
 004F261E    lea         edx,[ebp-20]
 004F2621    mov         eax,ebx
 004F2623    mov         ecx,dword ptr [eax]
 004F2625    call        dword ptr [ecx+64];TWinControl.GetClientRect
 004F2628    call        TStyleManager.GetActiveStyle
 004F262D    mov         esi,eax
 004F262F    mov         eax,[007C4E78];^Screen:TScreen
 004F2634    mov         eax,dword ptr [eax]
 004F2636    mov         eax,dword ptr [eax+88];TScreen.FHintFont:TFont
 004F263C    mov         eax,dword ptr [eax+18];TFont.FColor:TColor
 004F263F    mov         dword ptr [ebp-0C],eax
 004F2642    mov         eax,esi
 004F2644    mov         edx,dword ptr [eax]
 004F2646    call        dword ptr [edx+4C];TCustomStyleServices.GetEnabled
 004F2649    test        al,al
>004F264B    je          004F277E
 004F2651    push        esi
 004F2652    lea         esi,[ebp-20]
 004F2655    lea         edi,[ebp-30]
 004F2658    movs        dword ptr [edi],dword ptr [esi]
 004F2659    movs        dword ptr [edi],dword ptr [esi]
 004F265A    movs        dword ptr [edi],dword ptr [esi]
 004F265B    movs        dword ptr [edi],dword ptr [esi]
 004F265C    pop         esi
 004F265D    lea         eax,[ebp-20]
 004F2660    mov         ecx,4
 004F2665    mov         edx,4
 004F266A    call        InflateRect
 004F266F    mov         eax,[007C4364];^gvar_007C7DC0
 004F2674    cmp         dword ptr [eax],6
 004F2677    setge       al
 004F267A    test        al,al
>004F267C    je          004F2687
 004F267E    mov         eax,esi
 004F2680    call        TCustomStyleServices.GetIsSystemStyle
>004F2685    jmp         004F2689
 004F2687    xor         eax,eax
 004F2689    test        al,al
>004F268B    je          004F26C4
 004F268D    mov         eax,dword ptr [ebx+290];THintWindow.FCanvas:TCanvas
 004F2693    call        TCanvas.GetHandle
 004F2698    mov         dword ptr [ebp-10],eax
 004F269B    lea         ecx,[ebp-48]
 004F269E    mov         dl,2
 004F26A0    mov         eax,esi
 004F26A2    mov         edi,dword ptr [eax]
 004F26A4    call        dword ptr [edi+0FC];TCustomStyleServices.GetElementDetails
 004F26AA    lea         eax,[ebp-20]
 004F26AD    push        eax
 004F26AE    lea         eax,[ebp-30]
 004F26B1    push        eax
 004F26B2    lea         ecx,[ebp-48]
 004F26B5    mov         edx,dword ptr [ebp-10]
 004F26B8    mov         eax,esi
 004F26BA    call        TCustomStyleServices.DrawElement
>004F26BF    jmp         004F2774
 004F26C4    lea         ecx,[ebp-3C]
 004F26C7    mov         dl,2
 004F26C9    mov         eax,esi
 004F26CB    mov         edi,dword ptr [eax]
 004F26CD    call        dword ptr [edi+98];TCustomStyleServices.GetElementDetails
 004F26D3    lea         eax,[ebp-4]
 004F26D6    push        eax
 004F26D7    mov         cl,9
 004F26D9    lea         edx,[ebp-3C]
 004F26DC    mov         eax,esi
 004F26DE    call        TCustomStyleServices.GetElementColor
 004F26E3    test        al,al
>004F26E5    je          004F26F5
 004F26E7    cmp         dword ptr [ebp-4],1FFFFFFF
>004F26EE    je          004F26F5
 004F26F0    mov         edi,dword ptr [ebp-4]
>004F26F3    jmp         004F26FA
 004F26F5    mov         edi,0FF000018
 004F26FA    lea         eax,[ebp-4]
 004F26FD    push        eax
 004F26FE    mov         cl,0A
 004F2700    lea         edx,[ebp-3C]
 004F2703    mov         eax,esi
 004F2705    call        TCustomStyleServices.GetElementColor
 004F270A    test        al,al
>004F270C    je          004F271F
 004F270E    cmp         dword ptr [ebp-4],1FFFFFFF
>004F2715    je          004F271F
 004F2717    mov         eax,dword ptr [ebp-4]
 004F271A    mov         dword ptr [ebp-8],eax
>004F271D    jmp         004F2726
 004F271F    mov         dword ptr [ebp-8],0FF000018
 004F2726    lea         eax,[ebp-4]
 004F2729    push        eax
 004F272A    mov         cl,2
 004F272C    lea         edx,[ebp-3C]
 004F272F    mov         eax,esi
 004F2731    call        TCustomStyleServices.GetElementColor
 004F2736    test        al,al
>004F2738    je          004F274B
 004F273A    cmp         dword ptr [ebp-4],1FFFFFFF
>004F2741    je          004F274B
 004F2743    mov         eax,dword ptr [ebp-4]
 004F2746    mov         dword ptr [ebp-0C],eax
>004F2749    jmp         004F275E
 004F274B    mov         eax,[007C4E78];^Screen:TScreen
 004F2750    mov         eax,dword ptr [eax]
 004F2752    mov         eax,dword ptr [eax+88];TScreen.FHintFont:TFont
 004F2758    mov         eax,dword ptr [eax+18];TFont.FColor:TColor
 004F275B    mov         dword ptr [ebp-0C],eax
 004F275E    lea         eax,[ebp-20]
 004F2761    push        eax
 004F2762    push        1
 004F2764    mov         ecx,dword ptr [ebp-8]
 004F2767    mov         edx,edi
 004F2769    mov         eax,dword ptr [ebx+290];THintWindow.FCanvas:TCanvas
 004F276F    call        004D7C44
 004F2774    lea         esi,[ebp-30]
 004F2777    lea         edi,[ebp-20]
 004F277A    movs        dword ptr [edi],dword ptr [esi]
 004F277B    movs        dword ptr [edi],dword ptr [esi]
 004F277C    movs        dword ptr [edi],dword ptr [esi]
 004F277D    movs        dword ptr [edi],dword ptr [esi]
 004F277E    add         dword ptr [ebp-20],2
 004F2782    add         dword ptr [ebp-1C],2
 004F2786    mov         eax,dword ptr [ebx+290];THintWindow.FCanvas:TCanvas
 004F278C    mov         eax,dword ptr [eax+40];TCanvas.FFont:TFont
 004F278F    mov         edx,dword ptr [ebp-0C]
 004F2792    call        TFont.SetColor
 004F2797    mov         eax,dword ptr [ebx+290];THintWindow.FCanvas:TCanvas
 004F279D    call        TCanvas.GetHandle
 004F27A2    mov         esi,eax
 004F27A4    lea         edx,[ebp-4C]
 004F27A7    mov         eax,ebx
 004F27A9    call        TControl.GetText
 004F27AE    mov         edi,dword ptr [ebp-4C]
 004F27B1    mov         eax,ebx
 004F27B3    call        TControl.DrawTextBiDiModeFlagsReadingOnly
 004F27B8    or          eax,810
 004F27BD    mov         ebx,eax
 004F27BF    push        ebx
 004F27C0    lea         eax,[ebp-20]
 004F27C3    push        eax
 004F27C4    push        0FF
 004F27C6    mov         dword ptr [ebp-50],edi
 004F27C9    mov         eax,dword ptr [ebp-50]
 004F27CC    call        @UStrToPWChar
 004F27D1    push        eax
 004F27D2    push        esi
 004F27D3    call        user32.DrawTextW
 004F27D8    xor         eax,eax
 004F27DA    pop         edx
 004F27DB    pop         ecx
 004F27DC    pop         ecx
 004F27DD    mov         dword ptr fs:[eax],edx
 004F27E0    push        4F27F5
 004F27E5    lea         eax,[ebp-4C]
 004F27E8    call        @UStrClr
 004F27ED    ret
>004F27EE    jmp         @HandleFinally
>004F27F3    jmp         004F27E5
 004F27F5    pop         edi
 004F27F6    pop         esi
 004F27F7    pop         ebx
 004F27F8    mov         esp,ebp
 004F27FA    pop         ebp
 004F27FB    ret
*}
end;

//004F27FC
function THintWindow.IsHintMsg(var Msg:tagMSG):Boolean;
begin
{*
 004F27FC    push        esi
 004F27FD    mov         eax,dword ptr [edx+4]
 004F2800    cmp         eax,100
>004F2805    jb          004F280E
 004F2807    cmp         eax,109
>004F280C    jbe         004F285C
 004F280E    mov         ecx,dword ptr [edx+4]
 004F2811    cmp         ecx,0B000
>004F2817    je          004F285C
 004F2819    cmp         ecx,0B001
>004F281F    je          004F285C
 004F2821    cmp         dword ptr [edx+4],0B016
>004F2828    je          004F285C
 004F282A    cmp         dword ptr [edx+4],0B017
>004F2831    je          004F285C
 004F2833    cmp         dword ptr [edx+4],111
>004F283A    je          004F285C
 004F283C    mov         esi,dword ptr [edx+4]
 004F283F    cmp         esi,200
>004F2845    jbe         004F284F
 004F2847    cmp         esi,20E
>004F284D    jbe         004F285C
 004F284F    cmp         dword ptr [edx+4],0A0
>004F2856    je          004F285C
 004F2858    xor         eax,eax
 004F285A    pop         esi
 004F285B    ret
 004F285C    mov         al,1
 004F285E    pop         esi
 004F285F    ret
*}
end;

//004F2860
procedure THintWindow.ReleaseHandle;
begin
{*
 004F2860    push        esi
 004F2861    mov         esi,eax
 004F2863    mov         eax,esi
 004F2865    mov         edx,dword ptr [eax]
 004F2867    call        dword ptr [edx+0D8];THintWindow.sub_004EC288
 004F286D    pop         esi
 004F286E    ret
*}
end;

//004F2870
procedure THintWindow.CMTextChanged;
begin
{*
 004F2870    push        ebp
 004F2871    mov         ebp,esp
 004F2873    push        0
 004F2875    push        0
 004F2877    push        ebx
 004F2878    mov         ebx,eax
 004F287A    xor         eax,eax
 004F287C    push        ebp
 004F287D    push        4F28FB
 004F2882    push        dword ptr fs:[eax]
 004F2885    mov         dword ptr fs:[eax],esp
 004F2888    mov         eax,ebx
 004F288A    call        TWinControl.CMTextChanged
 004F288F    cmp         byte ptr [ebx+298],0;THintWindow.FActivating:Boolean
>004F2896    jne         004F28E0
 004F2898    lea         edx,[ebp-4]
 004F289B    mov         eax,ebx
 004F289D    call        TControl.GetText
 004F28A2    mov         edx,dword ptr [ebp-4]
 004F28A5    mov         eax,dword ptr [ebx+290];THintWindow.FCanvas:TCanvas
 004F28AB    call        TCustomCanvas.TextWidth
 004F28B0    mov         edx,eax
 004F28B2    add         edx,6
 004F28B5    mov         eax,ebx
 004F28B7    call        TControl.SetWidth
 004F28BC    lea         edx,[ebp-8]
 004F28BF    mov         eax,ebx
 004F28C1    call        TControl.GetText
 004F28C6    mov         edx,dword ptr [ebp-8]
 004F28C9    mov         eax,dword ptr [ebx+290];THintWindow.FCanvas:TCanvas
 004F28CF    call        TCustomCanvas.TextHeight
 004F28D4    mov         edx,eax
 004F28D6    add         edx,4
 004F28D9    mov         eax,ebx
 004F28DB    call        TControl.SetHeight
 004F28E0    xor         eax,eax
 004F28E2    pop         edx
 004F28E3    pop         ecx
 004F28E4    pop         ecx
 004F28E5    mov         dword ptr fs:[eax],edx
 004F28E8    push        4F2902
 004F28ED    lea         eax,[ebp-8]
 004F28F0    mov         edx,2
 004F28F5    call        @UStrArrayClr
 004F28FA    ret
>004F28FB    jmp         @HandleFinally
>004F2900    jmp         004F28ED
 004F2902    pop         ebx
 004F2903    pop         ecx
 004F2904    pop         ecx
 004F2905    pop         ebp
 004F2906    ret
*}
end;

//004F2908
procedure THintWindow.ActivateHint(Rect:TRect; AHint:string);
begin
{*
 004F2908    push        ebp
 004F2909    mov         ebp,esp
 004F290B    add         esp,0FFFFFFD8
 004F290E    push        ebx
 004F290F    push        esi
 004F2910    push        edi
 004F2911    mov         esi,edx
 004F2913    lea         edi,[ebp-20]
 004F2916    movs        dword ptr [edi],dword ptr [esi]
 004F2917    movs        dword ptr [edi],dword ptr [esi]
 004F2918    movs        dword ptr [edi],dword ptr [esi]
 004F2919    movs        dword ptr [edi],dword ptr [esi]
 004F291A    mov         esi,ecx
 004F291C    mov         dword ptr [ebp-4],eax
 004F291F    mov         eax,dword ptr [ebp-4]
 004F2922    mov         byte ptr [eax+298],1;THintWindow.FActivating:Boolean
 004F2929    xor         edx,edx
 004F292B    push        ebp
 004F292C    push        4F2B74
 004F2931    push        dword ptr fs:[edx]
 004F2934    mov         dword ptr fs:[edx],esp
 004F2937    mov         edx,esi
 004F2939    mov         eax,dword ptr [ebp-4]
 004F293C    call        TControl.SetText
 004F2941    add         dword ptr [ebp-14],4
 004F2945    lea         edx,[ebp-20]
 004F2948    mov         eax,dword ptr [ebp-4]
 004F294B    call        004E83E8
 004F2950    mov         eax,dword ptr [ebp-1C]
 004F2953    mov         edx,dword ptr [ebp-20]
 004F2956    mov         dword ptr [ebp-10],edx
 004F2959    mov         dword ptr [ebp-0C],eax
 004F295C    lea         edx,[ebp-10]
 004F295F    mov         eax,[007C4E78];^Screen:TScreen
 004F2964    mov         eax,dword ptr [eax]
 004F2966    xor         ecx,ecx
 004F2968    call        TScreen.MonitorFromPoint
 004F296D    mov         ebx,eax
 004F296F    mov         eax,ebx
 004F2971    call        TMonitor.GetWidth
 004F2976    mov         edx,dword ptr [ebp-4]
 004F2979    cmp         eax,dword ptr [edx+58];THintWindow.FWidth:Integer
>004F297C    jge         004F298F
 004F297E    mov         eax,ebx
 004F2980    call        TMonitor.GetWidth
 004F2985    mov         edx,eax
 004F2987    mov         eax,dword ptr [ebp-4]
 004F298A    call        TControl.SetWidth
 004F298F    mov         eax,ebx
 004F2991    call        TMonitor.GetHeight
 004F2996    mov         edx,dword ptr [ebp-4]
 004F2999    cmp         eax,dword ptr [edx+5C];THintWindow.FHeight:Integer
>004F299C    jge         004F29AF
 004F299E    mov         eax,ebx
 004F29A0    call        TMonitor.GetHeight
 004F29A5    mov         edx,eax
 004F29A7    mov         eax,dword ptr [ebp-4]
 004F29AA    call        TControl.SetHeight
 004F29AF    mov         eax,ebx
 004F29B1    call        005C7BC4
 004F29B6    mov         edi,eax
 004F29B8    mov         eax,ebx
 004F29BA    call        TMonitor.GetHeight
 004F29BF    add         edi,eax
 004F29C1    mov         eax,dword ptr [ebp-4]
 004F29C4    mov         eax,dword ptr [eax+5C];THintWindow.FHeight:Integer
 004F29C7    add         eax,dword ptr [ebp-1C]
 004F29CA    cmp         edi,eax
>004F29CC    jge         004F29E9
 004F29CE    mov         eax,ebx
 004F29D0    call        005C7BC4
 004F29D5    mov         edi,eax
 004F29D7    mov         eax,ebx
 004F29D9    call        TMonitor.GetHeight
 004F29DE    add         edi,eax
 004F29E0    mov         eax,dword ptr [ebp-4]
 004F29E3    sub         edi,dword ptr [eax+5C]
 004F29E6    mov         dword ptr [ebp-1C],edi
 004F29E9    mov         eax,ebx
 004F29EB    call        005C7B90
 004F29F0    mov         edi,eax
 004F29F2    mov         eax,ebx
 004F29F4    call        TMonitor.GetWidth
 004F29F9    add         edi,eax
 004F29FB    mov         eax,dword ptr [ebp-4]
 004F29FE    mov         eax,dword ptr [eax+58];THintWindow.FWidth:Integer
 004F2A01    add         eax,dword ptr [ebp-20]
 004F2A04    cmp         edi,eax
>004F2A06    jge         004F2A23
 004F2A08    mov         eax,ebx
 004F2A0A    call        005C7B90
 004F2A0F    mov         edi,eax
 004F2A11    mov         eax,ebx
 004F2A13    call        TMonitor.GetWidth
 004F2A18    add         edi,eax
 004F2A1A    mov         eax,dword ptr [ebp-4]
 004F2A1D    sub         edi,dword ptr [eax+58]
 004F2A20    mov         dword ptr [ebp-20],edi
 004F2A23    mov         eax,ebx
 004F2A25    call        005C7B90
 004F2A2A    cmp         eax,dword ptr [ebp-20]
>004F2A2D    jle         004F2A39
 004F2A2F    mov         eax,ebx
 004F2A31    call        005C7B90
 004F2A36    mov         dword ptr [ebp-20],eax
 004F2A39    mov         eax,ebx
 004F2A3B    call        005C7BC4
 004F2A40    cmp         eax,dword ptr [ebp-14]
>004F2A43    jle         004F2A4F
 004F2A45    mov         eax,ebx
 004F2A47    call        005C7BC4
 004F2A4C    mov         dword ptr [ebp-1C],eax
 004F2A4F    mov         eax,[007C4A18];^Application:TApplication
 004F2A54    mov         eax,dword ptr [eax]
 004F2A56    mov         edx,dword ptr [eax+188];TApplication.FHandle:HWND
 004F2A5C    mov         eax,dword ptr [ebp-4]
 004F2A5F    call        004EC5F4
 004F2A64    push        10
 004F2A66    mov         eax,dword ptr [ebp-4]
 004F2A69    mov         eax,dword ptr [eax+5C];THintWindow.FHeight:Integer
 004F2A6C    push        eax
 004F2A6D    mov         eax,dword ptr [ebp-4]
 004F2A70    mov         eax,dword ptr [eax+58];THintWindow.FWidth:Integer
 004F2A73    push        eax
 004F2A74    mov         eax,dword ptr [ebp-1C]
 004F2A77    push        eax
 004F2A78    mov         eax,dword ptr [ebp-20]
 004F2A7B    push        eax
 004F2A7C    push        0FF
 004F2A7E    mov         eax,dword ptr [ebp-4]
 004F2A81    call        TWinControl.GetHandle
 004F2A86    push        eax
 004F2A87    call        user32.SetWindowPos
 004F2A8C    call        kernel32.GetTickCount
 004F2A91    mov         edx,dword ptr [ebp-4]
 004F2A94    sub         eax,dword ptr [edx+29C]
 004F2A9A    cmp         eax,0FA
>004F2A9F    jbe         004F2AB4
 004F2AA1    mov         eax,esi
 004F2AA3    test        eax,eax
>004F2AA5    je          004F2AAC
 004F2AA7    sub         eax,4
 004F2AAA    mov         eax,dword ptr [eax]
 004F2AAC    cmp         eax,64
 004F2AAF    setl        al
>004F2AB2    jmp         004F2AB6
 004F2AB4    xor         eax,eax
 004F2AB6    test        al,al
>004F2AB8    je          004F2B33
 004F2ABA    cmp         dword ptr ds:[7A11A0],0;gvar_007A11A0
>004F2AC1    je          004F2B33
 004F2AC3    push        0
 004F2AC5    lea         eax,[ebp-8]
 004F2AC8    push        eax
 004F2AC9    push        0
 004F2ACB    push        1016
 004F2AD0    call        user32.SystemParametersInfoW
 004F2AD5    cmp         dword ptr [ebp-8],0
>004F2AD9    je          004F2B33
 004F2ADB    push        0
 004F2ADD    lea         eax,[ebp-8]
 004F2AE0    push        eax
 004F2AE1    push        0
 004F2AE3    push        1018
 004F2AE8    call        user32.SystemParametersInfoW
 004F2AED    cmp         dword ptr [ebp-8],0
>004F2AF1    je          004F2AF7
 004F2AF3    mov         bl,2
>004F2AF5    jmp         004F2B12
 004F2AF7    lea         edx,[ebp-28]
 004F2AFA    mov         eax,[007CA5D4];gvar_007CA5D4
 004F2AFF    call        TMouse.GetCursorPos
 004F2B04    mov         eax,dword ptr [ebp-24]
 004F2B07    cmp         eax,dword ptr [ebp-1C]
>004F2B0A    jle         004F2B10
 004F2B0C    xor         ebx,ebx
>004F2B0E    jmp         004F2B12
 004F2B10    mov         bl,1
 004F2B12    movzx       eax,bl
 004F2B15    mov         eax,dword ptr [eax*4+7A1274]
 004F2B1C    or          eax,40000
 004F2B21    push        eax
 004F2B22    push        64
 004F2B24    mov         eax,dword ptr [ebp-4]
 004F2B27    call        TWinControl.GetHandle
 004F2B2C    push        eax
 004F2B2D    call        dword ptr ds:[7A11A0]
 004F2B33    push        4
 004F2B35    mov         eax,dword ptr [ebp-4]
 004F2B38    call        TWinControl.GetHandle
 004F2B3D    push        eax
 004F2B3E    call        user32.ShowWindow
 004F2B43    mov         eax,dword ptr [ebp-4]
 004F2B46    mov         edx,dword ptr [eax]
 004F2B48    call        dword ptr [edx+0A8];TWinControl.Invalidate
 004F2B4E    xor         eax,eax
 004F2B50    pop         edx
 004F2B51    pop         ecx
 004F2B52    pop         ecx
 004F2B53    mov         dword ptr fs:[eax],edx
 004F2B56    push        4F2B7B
 004F2B5B    call        kernel32.GetTickCount
 004F2B60    mov         edx,dword ptr [ebp-4]
 004F2B63    mov         dword ptr [edx+29C],eax;THintWindow.FLastActive:Cardinal
 004F2B69    mov         eax,dword ptr [ebp-4]
 004F2B6C    mov         byte ptr [eax+298],0;THintWindow.FActivating:Boolean
 004F2B73    ret
>004F2B74    jmp         @HandleFinally
>004F2B79    jmp         004F2B5B
 004F2B7B    pop         edi
 004F2B7C    pop         esi
 004F2B7D    pop         ebx
 004F2B7E    mov         esp,ebp
 004F2B80    pop         ebp
 004F2B81    ret
*}
end;

//004F2B84
procedure THintWindow.ActivateHintData(Rect:TRect; AHint:string; AData:Pointer);
begin
{*
 004F2B84    push        ebp
 004F2B85    mov         ebp,esp
 004F2B87    add         esp,0FFFFFFF0
 004F2B8A    push        ebx
 004F2B8B    push        esi
 004F2B8C    push        edi
 004F2B8D    mov         esi,edx
 004F2B8F    lea         edi,[ebp-10]
 004F2B92    movs        dword ptr [edi],dword ptr [esi]
 004F2B93    movs        dword ptr [edi],dword ptr [esi]
 004F2B94    movs        dword ptr [edi],dword ptr [esi]
 004F2B95    movs        dword ptr [edi],dword ptr [esi]
 004F2B96    lea         edx,[ebp-10]
 004F2B99    mov         ebx,dword ptr [eax]
 004F2B9B    call        dword ptr [ebx+110];THintWindow.ActivateHint
 004F2BA1    pop         edi
 004F2BA2    pop         esi
 004F2BA3    pop         ebx
 004F2BA4    mov         esp,ebp
 004F2BA6    pop         ebp
 004F2BA7    ret         4
*}
end;

//004F2BAC
{*procedure THintWindow.CalcHintRect(MaxWidth:Integer; AHint:string; ?:?; AData:Pointer);
begin
 004F2BAC    push        ebp
 004F2BAD    mov         ebp,esp
 004F2BAF    push        ebx
 004F2BB0    push        esi
 004F2BB1    push        edi
 004F2BB2    mov         edi,ecx
 004F2BB4    mov         esi,edx
 004F2BB6    mov         ebx,eax
 004F2BB8    push        0
 004F2BBA    mov         eax,dword ptr [ebp+8]
 004F2BBD    push        eax
 004F2BBE    mov         ecx,esi
 004F2BC0    xor         edx,edx
 004F2BC2    xor         eax,eax
 004F2BC4    call        Rect
 004F2BC9    mov         eax,dword ptr [ebx+290];THintWindow.FCanvas:TCanvas
 004F2BCF    call        TCanvas.GetHandle
 004F2BD4    mov         esi,eax
 004F2BD6    mov         eax,ebx
 004F2BD8    call        TControl.DrawTextBiDiModeFlagsReadingOnly
 004F2BDD    or          eax,0C10
 004F2BE2    mov         ebx,eax
 004F2BE4    push        ebx
 004F2BE5    mov         eax,dword ptr [ebp+8]
 004F2BE8    push        eax
 004F2BE9    push        0FF
 004F2BEB    mov         eax,edi
 004F2BED    call        @UStrToPWChar
 004F2BF2    push        eax
 004F2BF3    push        esi
 004F2BF4    call        user32.DrawTextW
 004F2BF9    mov         eax,dword ptr [ebp+8]
 004F2BFC    add         dword ptr [eax+8],6
 004F2C00    mov         eax,dword ptr [ebp+8]
 004F2C03    add         dword ptr [eax+0C],2
 004F2C07    pop         edi
 004F2C08    pop         esi
 004F2C09    pop         ebx
 004F2C0A    pop         ebp
 004F2C0B    ret         8
end;*}

//004F2C10
{*procedure sub_004F2C10(?:?);
begin
 004F2C10    push        ebx
 004F2C11    push        esi
 004F2C12    add         esp,0FFFFFFE4
 004F2C15    mov         esi,edx
 004F2C17    mov         ebx,eax
 004F2C19    mov         eax,dword ptr [ebx+5C];THintWindow.FHeight:Integer
 004F2C1C    push        eax
 004F2C1D    lea         eax,[esp+4]
 004F2C21    push        eax
 004F2C22    mov         ecx,dword ptr [ebx+58];THintWindow.FWidth:Integer
 004F2C25    xor         edx,edx
 004F2C27    xor         eax,eax
 004F2C29    call        Rect
 004F2C2E    call        TStyleManager.GetActiveStyle
 004F2C33    mov         ebx,eax
 004F2C35    mov         eax,ebx
 004F2C37    mov         edx,dword ptr [eax]
 004F2C39    call        dword ptr [edx+4C];TCustomStyleServices.GetEnabled
 004F2C3C    test        al,al
>004F2C3E    jne         004F2C51
 004F2C40    push        0F
 004F2C42    push        1
 004F2C44    lea         eax,[esp+8]
 004F2C48    push        eax
 004F2C49    push        esi
 004F2C4A    call        user32.DrawEdge
>004F2C4F    jmp         004F2C8A
 004F2C51    call        TStyleManager.GetActiveStyle
 004F2C56    mov         ebx,eax
 004F2C58    lea         ecx,[esp+10]
 004F2C5C    mov         dl,1
 004F2C5E    mov         eax,ebx
 004F2C60    mov         ebx,dword ptr [eax]
 004F2C62    call        dword ptr [ebx+10C];TCustomStyleServices.GetElementDetails
 004F2C68    call        TStyleManager.GetActiveStyle
 004F2C6D    push        esp
 004F2C6E    movzx       edx,byte ptr ds:[4F2C90];0x4 gvar_004F2C90
 004F2C75    push        edx
 004F2C76    mov         edx,dword ptr ds:[4F2C94];0x100 gvar_004F2C94
 004F2C7C    push        edx
 004F2C7D    push        0
 004F2C7F    lea         ecx,[esp+20]
 004F2C83    mov         edx,esi
 004F2C85    call        TCustomStyleServices.DrawEdge
 004F2C8A    add         esp,1C
 004F2C8D    pop         esi
 004F2C8E    pop         ebx
 004F2C8F    ret
end;*}

//004F2C98
{*procedure THintWindow.sub_004F2C98(?:?);
begin
 004F2C98    push        ebx
 004F2C99    push        esi
 004F2C9A    mov         esi,edx
 004F2C9C    mov         ebx,eax
 004F2C9E    push        0
 004F2CA0    mov         edx,dword ptr [esi+4]
 004F2CA3    xor         ecx,ecx
 004F2CA5    mov         eax,ebx
 004F2CA7    call        TWinControl.PaintTo
 004F2CAC    mov         edx,dword ptr [esi+4]
 004F2CAF    mov         eax,ebx
 004F2CB1    mov         ecx,dword ptr [eax]
 004F2CB3    call        dword ptr [ecx+10C];THintWindow.sub_004F2C10
 004F2CB9    pop         esi
 004F2CBA    pop         ebx
 004F2CBB    ret
end;*}

//004F2CBC
function THintWindow.ShouldHideHint:Boolean;
begin
{*
 004F2CBC    mov         al,1
 004F2CBE    ret
*}
end;

//004F2CC0
function ClientToWindow(Handle:Windows.HWND; X:Integer; Y:Integer):TPoint;
begin
{*
 004F2CC0    push        ebp
 004F2CC1    mov         ebp,esp
 004F2CC3    add         esp,0FFFFFFE8
 004F2CC6    push        ebx
 004F2CC7    push        esi
 004F2CC8    mov         ebx,eax
 004F2CCA    mov         esi,dword ptr [ebp+8]
 004F2CCD    mov         dword ptr [ebp-8],edx
 004F2CD0    mov         dword ptr [ebp-4],ecx
 004F2CD3    lea         eax,[ebp-8]
 004F2CD6    push        eax
 004F2CD7    push        ebx
 004F2CD8    call        user32.ClientToScreen
 004F2CDD    lea         eax,[ebp-18]
 004F2CE0    push        eax
 004F2CE1    push        ebx
 004F2CE2    call        user32.GetWindowRect
 004F2CE7    mov         eax,dword ptr [ebp-8]
 004F2CEA    sub         eax,dword ptr [ebp-18]
 004F2CED    mov         dword ptr [esi],eax
 004F2CEF    mov         eax,dword ptr [ebp-4]
 004F2CF2    sub         eax,dword ptr [ebp-14]
 004F2CF5    mov         dword ptr [esi+4],eax
 004F2CF8    pop         esi
 004F2CF9    pop         ebx
 004F2CFA    mov         esp,ebp
 004F2CFC    pop         ebp
 004F2CFD    ret         4
*}
end;

//004F2D00
procedure TDragImageList.Initialize;
begin
{*
 004F2D00    push        ebx
 004F2D01    mov         ebx,eax
 004F2D03    mov         eax,ebx
 004F2D05    call        TCustomImageList.Initialize
 004F2D0A    or          edx,0FFFFFFFF
 004F2D0D    mov         eax,ebx
 004F2D0F    call        TDragImageList.SetDragCursor
 004F2D14    pop         ebx
 004F2D15    ret
*}
end;

//004F2D18
function TDragImageList.SetDragImage(Index:Integer; HotSpotX:Integer; HotSpotY:Integer):Boolean;
begin
{*
 004F2D18    push        ebp
 004F2D19    mov         ebp,esp
 004F2D1B    push        ebx
 004F2D1C    push        esi
 004F2D1D    push        edi
 004F2D1E    mov         edi,ecx
 004F2D20    mov         esi,edx
 004F2D22    mov         ebx,eax
 004F2D24    mov         eax,ebx
 004F2D26    call        TCustomImageList.HandleAllocated
 004F2D2B    test        al,al
>004F2D2D    je          004F2D61
 004F2D2F    mov         dword ptr [ebx+0A8],esi;TDragImageList.FDragIndex:Integer
 004F2D35    mov         dword ptr [ebx+0A0],edi;TDragImageList.FDragHotspot:TPoint
 004F2D3B    mov         eax,dword ptr [ebp+8]
 004F2D3E    mov         dword ptr [ebx+0A4],eax
 004F2D44    mov         eax,dword ptr [ebp+8]
 004F2D47    push        eax
 004F2D48    push        edi
 004F2D49    push        esi
 004F2D4A    mov         eax,ebx
 004F2D4C    call        TCustomImageList.GetHandle
 004F2D51    push        eax
 004F2D52    call        comctl32.ImageList_BeginDrag
 004F2D57    mov         al,1
 004F2D59    mov         byte ptr [ebx+9A],al;TDragImageList.FDragging:Boolean
>004F2D5F    jmp         004F2D63
 004F2D61    xor         eax,eax
 004F2D63    pop         edi
 004F2D64    pop         esi
 004F2D65    pop         ebx
 004F2D66    pop         ebp
 004F2D67    ret         4
*}
end;

//004F2D6C
procedure TDragImageList.SetDragCursor(Value:UITypes.TCursor);
begin
{*
 004F2D6C    cmp         dx,word ptr [eax+98]
>004F2D73    je          004F2D97
 004F2D75    mov         ecx,edx
 004F2D77    mov         word ptr [eax+98],cx
 004F2D7E    cmp         byte ptr [eax+9A],0
>004F2D85    je          004F2D97
 004F2D87    mov         edx,dword ptr ds:[7C4E78];^Screen:TScreen
 004F2D8D    mov         edx,dword ptr [edx]
 004F2D8F    mov         eax,ecx
 004F2D91    xchg        eax,edx
 004F2D92    call        005C86F0
 004F2D97    ret
*}
end;

//004F2D98
{*procedure TDragImageList.GetHotSpot(?:?);
begin
 004F2D98    push        ebx
 004F2D99    push        esi
 004F2D9A    mov         esi,edx
 004F2D9C    mov         ebx,eax
 004F2D9E    mov         edx,esi
 004F2DA0    mov         eax,ebx
 004F2DA2    call        TCustomImageList.GetHotSpot
 004F2DA7    mov         eax,ebx
 004F2DA9    call        TCustomImageList.HandleAllocated
 004F2DAE    test        al,al
>004F2DB0    je          004F2DC3
 004F2DB2    cmp         byte ptr [ebx+9A],0;TDragImageList.FDragging:Boolean
>004F2DB9    je          004F2DC3
 004F2DBB    push        esi
 004F2DBC    push        0
 004F2DBE    call        comctl32.ImageList_GetDragImage
 004F2DC3    pop         esi
 004F2DC4    pop         ebx
 004F2DC5    ret
end;*}

//004F2DC8
function TDragImageList.BeginDrag(Window:HWND; X:Integer; Y:Integer):Boolean;
begin
{*
 004F2DC8    push        ebp
 004F2DC9    mov         ebp,esp
 004F2DCB    push        ecx
 004F2DCC    push        ebx
 004F2DCD    push        esi
 004F2DCE    push        edi
 004F2DCF    mov         dword ptr [ebp-4],ecx
 004F2DD2    mov         edi,edx
 004F2DD4    mov         esi,eax
 004F2DD6    xor         ebx,ebx
 004F2DD8    mov         eax,esi
 004F2DDA    call        TCustomImageList.HandleAllocated
 004F2DDF    test        al,al
>004F2DE1    je          004F2E41
 004F2DE3    cmp         byte ptr [esi+9A],0;TDragImageList.FDragging:Boolean
>004F2DEA    jne         004F2E06
 004F2DEC    mov         eax,dword ptr [esi+0A4]
 004F2DF2    push        eax
 004F2DF3    mov         ecx,dword ptr [esi+0A0];TDragImageList.FDragHotspot:TPoint
 004F2DF9    mov         edx,dword ptr [esi+0A8];TDragImageList.FDragIndex:Integer
 004F2DFF    mov         eax,esi
 004F2E01    call        TDragImageList.SetDragImage
 004F2E06    mov         eax,dword ptr [ebp+8]
 004F2E09    push        eax
 004F2E0A    mov         ecx,dword ptr [ebp-4]
 004F2E0D    mov         edx,edi
 004F2E0F    mov         eax,esi
 004F2E11    call        TDragImageList.DragLock
 004F2E16    mov         ebx,eax
 004F2E18    test        bl,bl
>004F2E1A    je          004F2E41
 004F2E1C    mov         eax,[007C4E78];^Screen:TScreen
 004F2E21    mov         eax,dword ptr [eax]
 004F2E23    movzx       eax,word ptr [eax+54];TScreen.FCursor:TCursor
 004F2E27    mov         word ptr [esi+0AC],ax;TDragImageList.FOldCursor:TCursor
 004F2E2E    mov         eax,[007C4E78];^Screen:TScreen
 004F2E33    mov         eax,dword ptr [eax]
 004F2E35    movzx       edx,word ptr [esi+98];TDragImageList.FDragCursor:TCursor
 004F2E3C    call        005C86F0
 004F2E41    mov         eax,ebx
 004F2E43    pop         edi
 004F2E44    pop         esi
 004F2E45    pop         ebx
 004F2E46    pop         ecx
 004F2E47    pop         ebp
 004F2E48    ret         4
*}
end;

//004F2E4C
function TDragImageList.DragLock(Window:HWND; XPos:Integer; YPos:Integer):Boolean;
begin
{*
 004F2E4C    push        ebp
 004F2E4D    mov         ebp,esp
 004F2E4F    add         esp,0FFFFFFF4
 004F2E52    push        ebx
 004F2E53    push        esi
 004F2E54    push        edi
 004F2E55    mov         dword ptr [ebp-4],ecx
 004F2E58    mov         esi,edx
 004F2E5A    mov         edi,eax
 004F2E5C    xor         ebx,ebx
 004F2E5E    mov         eax,edi
 004F2E60    call        TCustomImageList.HandleAllocated
 004F2E65    test        al,al
>004F2E67    je          004F2EAB
 004F2E69    cmp         esi,dword ptr [edi+9C];TDragImageList.FDragHandle:HWND
>004F2E6F    je          004F2EAB
 004F2E71    mov         eax,edi
 004F2E73    call        TDragImageList.DragUnlock
 004F2E78    mov         ebx,esi
 004F2E7A    mov         dword ptr [edi+9C],ebx;TDragImageList.FDragHandle:HWND
 004F2E80    lea         eax,[ebp-0C]
 004F2E83    push        eax
 004F2E84    mov         ecx,dword ptr [ebp+8]
 004F2E87    mov         edx,dword ptr [ebp-4]
 004F2E8A    mov         eax,ebx
 004F2E8C    call        ClientToWindow
 004F2E91    mov         eax,dword ptr [ebp-8]
 004F2E94    push        eax
 004F2E95    mov         eax,dword ptr [ebp-0C]
 004F2E98    push        eax
 004F2E99    mov         eax,dword ptr [edi+9C];TDragImageList.FDragHandle:HWND
 004F2E9F    push        eax
 004F2EA0    call        comctl32.ImageList_DragEnter
 004F2EA5    cmp         eax,1
 004F2EA8    sbb         ebx,ebx
 004F2EAA    inc         ebx
 004F2EAB    mov         eax,ebx
 004F2EAD    pop         edi
 004F2EAE    pop         esi
 004F2EAF    pop         ebx
 004F2EB0    mov         esp,ebp
 004F2EB2    pop         ebp
 004F2EB3    ret         4
*}
end;

//004F2EB8
procedure TDragImageList.DragUnlock;
begin
{*
 004F2EB8    push        ebx
 004F2EB9    mov         ebx,eax
 004F2EBB    mov         eax,ebx
 004F2EBD    call        TCustomImageList.HandleAllocated
 004F2EC2    test        al,al
>004F2EC4    je          004F2EE3
 004F2EC6    cmp         dword ptr [ebx+9C],0;TDragImageList.FDragHandle:HWND
>004F2ECD    je          004F2EE3
 004F2ECF    mov         eax,dword ptr [ebx+9C];TDragImageList.FDragHandle:HWND
 004F2ED5    push        eax
 004F2ED6    call        comctl32.ImageList_DragLeave
 004F2EDB    xor         eax,eax
 004F2EDD    mov         dword ptr [ebx+9C],eax;TDragImageList.FDragHandle:HWND
 004F2EE3    pop         ebx
 004F2EE4    ret
*}
end;

//004F2EE8
function TDragImageList.DragMove(X:Integer; Y:Integer):Boolean;
begin
{*
 004F2EE8    push        ebx
 004F2EE9    push        esi
 004F2EEA    push        edi
 004F2EEB    add         esp,0FFFFFFF8
 004F2EEE    mov         edi,ecx
 004F2EF0    mov         esi,edx
 004F2EF2    mov         ebx,eax
 004F2EF4    mov         eax,ebx
 004F2EF6    call        TCustomImageList.HandleAllocated
 004F2EFB    test        al,al
>004F2EFD    je          004F2F26
 004F2EFF    push        esp
 004F2F00    mov         ecx,edi
 004F2F02    mov         edx,esi
 004F2F04    mov         eax,dword ptr [ebx+9C];TDragImageList.FDragHandle:HWND
 004F2F0A    call        ClientToWindow
 004F2F0F    mov         eax,dword ptr [esp+4]
 004F2F13    push        eax
 004F2F14    mov         eax,dword ptr [esp+4]
 004F2F18    push        eax
 004F2F19    call        comctl32.ImageList_DragMove
 004F2F1E    cmp         eax,1
 004F2F21    sbb         eax,eax
 004F2F23    inc         eax
>004F2F24    jmp         004F2F28
 004F2F26    xor         eax,eax
 004F2F28    pop         ecx
 004F2F29    pop         edx
 004F2F2A    pop         edi
 004F2F2B    pop         esi
 004F2F2C    pop         ebx
 004F2F2D    ret
*}
end;

//004F2F30
procedure TDragImageList.ShowDragImage;
begin
{*
 004F2F30    push        ebx
 004F2F31    mov         ebx,eax
 004F2F33    mov         eax,ebx
 004F2F35    call        TCustomImageList.HandleAllocated
 004F2F3A    test        al,al
>004F2F3C    je          004F2F45
 004F2F3E    push        0FF
 004F2F40    call        comctl32.ImageList_DragShowNolock
 004F2F45    pop         ebx
 004F2F46    ret
*}
end;

//004F2F48
procedure TDragImageList.HideDragImage;
begin
{*
 004F2F48    push        ebx
 004F2F49    mov         ebx,eax
 004F2F4B    mov         eax,ebx
 004F2F4D    call        TCustomImageList.HandleAllocated
 004F2F52    test        al,al
>004F2F54    je          004F2F5D
 004F2F56    push        0
 004F2F58    call        comctl32.ImageList_DragShowNolock
 004F2F5D    pop         ebx
 004F2F5E    ret
*}
end;

//004F2F60
function TDragImageList.EndDrag:Boolean;
begin
{*
 004F2F60    push        ebx
 004F2F61    push        esi
 004F2F62    mov         esi,eax
 004F2F64    mov         eax,esi
 004F2F66    call        TCustomImageList.HandleAllocated
 004F2F6B    test        al,al
>004F2F6D    je          004F2FB0
 004F2F6F    cmp         byte ptr [esi+9A],0;TDragImageList.FDragging:Boolean
>004F2F76    je          004F2FB0
 004F2F78    mov         eax,esi
 004F2F7A    call        TDragImageList.DragUnlock
 004F2F7F    call        comctl32.ImageList_EndDrag
 004F2F84    cmp         eax,1
 004F2F87    sbb         ebx,ebx
 004F2F89    inc         ebx
 004F2F8A    mov         byte ptr [esi+9A],0;TDragImageList.FDragging:Boolean
 004F2F91    or          edx,0FFFFFFFF
 004F2F94    mov         eax,esi
 004F2F96    call        TDragImageList.SetDragCursor
 004F2F9B    mov         eax,[007C4E78];^Screen:TScreen
 004F2FA0    mov         eax,dword ptr [eax]
 004F2FA2    movzx       edx,word ptr [esi+0AC];TDragImageList.FOldCursor:TCursor
 004F2FA9    call        005C86F0
>004F2FAE    jmp         004F2FB2
 004F2FB0    xor         ebx,ebx
 004F2FB2    mov         eax,ebx
 004F2FB4    pop         esi
 004F2FB5    pop         ebx
 004F2FB6    ret
*}
end;

//004F2FB8
constructor TCustomControl.Create(AOwner:TComponent);
begin
{*
 004F2FB8    push        ebp
 004F2FB9    mov         ebp,esp
 004F2FBB    push        ecx
 004F2FBC    push        ebx
 004F2FBD    push        esi
 004F2FBE    test        dl,dl
>004F2FC0    je          004F2FCA
 004F2FC2    add         esp,0FFFFFFF0
 004F2FC5    call        @ClassCreate
 004F2FCA    mov         byte ptr [ebp-1],dl
 004F2FCD    mov         ebx,eax
 004F2FCF    xor         edx,edx
 004F2FD1    mov         eax,ebx
 004F2FD3    call        TWinControl.Create
 004F2FD8    mov         dl,1
 004F2FDA    mov         eax,[004D9044];TControlCanvas
 004F2FDF    call        TCanvas.Create;TControlCanvas.Create
 004F2FE4    mov         esi,eax
 004F2FE6    mov         dword ptr [ebx+290],esi;TCustomControl.FCanvas:TCanvas
 004F2FEC    mov         eax,esi
 004F2FEE    mov         edx,ebx
 004F2FF0    call        TControlCanvas.SetControl
 004F2FF5    mov         eax,ebx
 004F2FF7    cmp         byte ptr [ebp-1],0
>004F2FFB    je          004F300C
 004F2FFD    call        @AfterConstruction
 004F3002    pop         dword ptr fs:[0]
 004F3009    add         esp,0C
 004F300C    mov         eax,ebx
 004F300E    pop         esi
 004F300F    pop         ebx
 004F3010    pop         ecx
 004F3011    pop         ebp
 004F3012    ret
*}
end;

//004F3014
destructor TCustomControl.Destroy();
begin
{*
 004F3014    push        ebx
 004F3015    push        esi
 004F3016    call        @BeforeDestruction
 004F301B    mov         ebx,edx
 004F301D    mov         esi,eax
 004F301F    mov         eax,dword ptr [esi+290];TCustomControl.FCanvas:TCanvas
 004F3025    call        TObject.Free
 004F302A    mov         dl,0FC
 004F302C    and         dl,bl
 004F302E    mov         eax,esi
 004F3030    call        TWinControl.Destroy
 004F3035    test        bl,bl
>004F3037    jle         004F3040
 004F3039    mov         eax,esi
 004F303B    call        @ClassDestroy
 004F3040    pop         esi
 004F3041    pop         ebx
 004F3042    ret
*}
end;

//004F3044
{*procedure TCustomControl.WMPaint(?:?);
begin
 004F3044    push        ebx
 004F3045    push        esi
 004F3046    mov         esi,edx
 004F3048    mov         ebx,eax
 004F304A    or          dword ptr [ebx+64],100;TCustomControl.FControlState:TControlState
 004F3051    mov         edx,esi
 004F3053    mov         eax,ebx
 004F3055    call        TWinControl.WMPaint
 004F305A    and         dword ptr [ebx+64],0FFFFFEFF;TCustomControl.FControlState:TControlState
 004F3061    pop         esi
 004F3062    pop         ebx
 004F3063    ret
end;*}

//004F3064
{*procedure sub_004F3064(?:?);
begin
 004F3064    push        ebp
 004F3065    mov         ebp,esp
 004F3067    push        ecx
 004F3068    push        ebx
 004F3069    mov         ebx,edx
 004F306B    mov         dword ptr [ebp-4],eax
 004F306E    mov         eax,dword ptr [ebp-4]
 004F3071    mov         eax,dword ptr [eax+290];TCustomControl.FCanvas:TCanvas
 004F3077    call        TCustomCanvas.Lock
 004F307C    xor         eax,eax
 004F307E    push        ebp
 004F307F    push        4F3102
 004F3084    push        dword ptr fs:[eax]
 004F3087    mov         dword ptr fs:[eax],esp
 004F308A    mov         eax,dword ptr [ebp-4]
 004F308D    mov         eax,dword ptr [eax+290];TCustomControl.FCanvas:TCanvas
 004F3093    mov         edx,ebx
 004F3095    call        TCanvas.SetHandle
 004F309A    xor         eax,eax
 004F309C    push        ebp
 004F309D    push        4F30DF
 004F30A2    push        dword ptr fs:[eax]
 004F30A5    mov         dword ptr fs:[eax],esp
 004F30A8    mov         eax,dword ptr [ebp-4]
 004F30AB    mov         eax,dword ptr [eax+290];TCustomControl.FCanvas:TCanvas
 004F30B1    call        TControlCanvas.UpdateTextFlags
 004F30B6    mov         eax,dword ptr [ebp-4]
 004F30B9    mov         edx,dword ptr [eax]
 004F30BB    call        dword ptr [edx+108];TCustomControl.sub_004F3110
 004F30C1    xor         eax,eax
 004F30C3    pop         edx
 004F30C4    pop         ecx
 004F30C5    pop         ecx
 004F30C6    mov         dword ptr fs:[eax],edx
 004F30C9    push        4F30E6
 004F30CE    mov         eax,dword ptr [ebp-4]
 004F30D1    mov         eax,dword ptr [eax+290];TCustomControl.FCanvas:TCanvas
 004F30D7    xor         edx,edx
 004F30D9    call        TCanvas.SetHandle
 004F30DE    ret
>004F30DF    jmp         @HandleFinally
>004F30E4    jmp         004F30CE
 004F30E6    xor         eax,eax
 004F30E8    pop         edx
 004F30E9    pop         ecx
 004F30EA    pop         ecx
 004F30EB    mov         dword ptr fs:[eax],edx
 004F30EE    push        4F3109
 004F30F3    mov         eax,dword ptr [ebp-4]
 004F30F6    mov         eax,dword ptr [eax+290];TCustomControl.FCanvas:TCanvas
 004F30FC    call        TCustomCanvas.Unlock
 004F3101    ret
>004F3102    jmp         @HandleFinally
>004F3107    jmp         004F30F3
 004F3109    pop         ebx
 004F310A    pop         ecx
 004F310B    pop         ebp
 004F310C    ret
end;*}

//004F3110
procedure sub_004F3110;
begin
{*
 004F3110    ret
*}
end;

//004F3114
function NextVisibleZone(StartZone:TDockZone):TDockZone;
begin
{*
 004F3114    push        ebx
 004F3115    mov         ebx,eax
>004F3117    jmp         004F311C
 004F3119    mov         ebx,dword ptr [ebx+0C]
 004F311C    test        ebx,ebx
>004F311E    je          004F312B
 004F3120    mov         eax,ebx
 004F3122    call        TDockZone.GetVisible
 004F3127    test        al,al
>004F3129    je          004F3119
 004F312B    mov         eax,ebx
 004F312D    pop         ebx
 004F312E    ret
*}
end;

//004F3130
function IsOrientationSet(Zone:TDockZone):Boolean;
begin
{*
 004F3130    mov         edx,dword ptr [eax+14]
 004F3133    test        edx,edx
>004F3135    je          004F313D
 004F3137    cmp         byte ptr [edx+10],0
>004F313B    jne         004F314E
 004F313D    mov         edx,dword ptr [eax+1C]
 004F3140    cmp         eax,dword ptr [edx+64]
>004F3143    jne         004F314B
 004F3145    cmp         byte ptr [eax+10],0
>004F3149    jne         004F314E
 004F314B    xor         eax,eax
 004F314D    ret
 004F314E    mov         al,1
 004F3150    ret
*}
end;

//004F3154
constructor TDockZone.Create;
begin
{*
 004F3154    push        ebx
 004F3155    push        esi
 004F3156    push        edi
 004F3157    test        dl,dl
>004F3159    je          004F3163
 004F315B    add         esp,0FFFFFFF0
 004F315E    call        @ClassCreate
 004F3163    mov         esi,ecx
 004F3165    mov         ebx,edx
 004F3167    mov         edi,eax
 004F3169    xor         edx,edx
 004F316B    mov         eax,edi
 004F316D    call        TObject.Create
 004F3172    mov         dword ptr [edi+1C],esi
 004F3175    mov         eax,edi
 004F3177    test        bl,bl
>004F3179    je          004F318A
 004F317B    call        @AfterConstruction
 004F3180    pop         dword ptr fs:[0]
 004F3187    add         esp,0C
 004F318A    mov         eax,edi
 004F318C    pop         edi
 004F318D    pop         esi
 004F318E    pop         ebx
 004F318F    ret
*}
end;

//004F3190
function TDockZone.GetChildCount:Integer;
begin
{*
 004F3190    xor         edx,edx
 004F3192    mov         eax,dword ptr [eax+8]
 004F3195    test        eax,eax
>004F3197    je          004F31A1
 004F3199    mov         eax,dword ptr [eax+0C]
 004F319C    inc         edx
 004F319D    test        eax,eax
>004F319F    jne         004F3199
 004F31A1    mov         eax,edx
 004F31A3    ret
*}
end;

//004F31A4
function TDockZone.GetVisibleChildCount:Integer;
begin
{*
 004F31A4    push        ebx
 004F31A5    push        esi
 004F31A6    xor         esi,esi
 004F31A8    call        TDockZone.FirstVisibleChild
 004F31AD    mov         ebx,eax
 004F31AF    test        ebx,ebx
>004F31B1    je          004F31C1
 004F31B3    mov         eax,ebx
 004F31B5    call        TDockZone.NextVisible
 004F31BA    mov         ebx,eax
 004F31BC    inc         esi
 004F31BD    test        ebx,ebx
>004F31BF    jne         004F31B3
 004F31C1    mov         eax,esi
 004F31C3    pop         esi
 004F31C4    pop         ebx
 004F31C5    ret
*}
end;

//004F31C8
function TDockZone.GetVisible:Boolean;
begin
{*
 004F31C8    push        ebx
 004F31C9    push        esi
 004F31CA    mov         edx,dword ptr [eax+4]
 004F31CD    test        edx,edx
>004F31CF    je          004F31D7
 004F31D1    movzx       ebx,byte ptr [edx+69]
>004F31D5    jmp         004F31F8
 004F31D7    mov         bl,1
 004F31D9    call        TDockZone.FirstVisibleChild
 004F31DE    mov         esi,eax
 004F31E0    test        esi,esi
>004F31E2    je          004F31F6
 004F31E4    mov         eax,esi
 004F31E6    call        TDockZone.GetVisible
 004F31EB    test        al,al
>004F31ED    jne         004F31F8
 004F31EF    mov         esi,dword ptr [esi+0C]
 004F31F2    test        esi,esi
>004F31F4    jne         004F31E4
 004F31F6    xor         ebx,ebx
 004F31F8    mov         eax,ebx
 004F31FA    pop         esi
 004F31FB    pop         ebx
 004F31FC    ret
*}
end;

//004F3200
function TDockZone.GetLimitBegin:Integer;
begin
{*
 004F3200    mov         edx,dword ptr [eax+1C]
 004F3203    cmp         eax,dword ptr [edx+64]
>004F3206    jne         004F320C
 004F3208    mov         edx,eax
>004F320A    jmp         004F320F
 004F320C    mov         edx,dword ptr [eax+14]
 004F320F    movzx       ecx,byte ptr [edx+10]
 004F3213    cmp         cl,1
>004F3216    jne         004F3223
 004F3218    mov         edx,1
 004F321D    call        TDockZone.GetTopLeft
 004F3222    ret
 004F3223    cmp         cl,2
>004F3226    jne         004F3234
 004F3228    mov         edx,2
 004F322D    call        TDockZone.GetTopLeft
>004F3232    jmp         004F3247
 004F3234    xor         ecx,ecx
 004F3236    mov         dl,1
 004F3238    mov         eax,[004174D0];Exception
 004F323D    call        Exception.Create
 004F3242    call        @RaiseExcept
 004F3247    ret
*}
end;

//004F3248
function TDockZone.GetLimitSize:Integer;
begin
{*
 004F3248    mov         edx,dword ptr [eax+1C]
 004F324B    cmp         eax,dword ptr [edx+64]
>004F324E    jne         004F3254
 004F3250    mov         edx,eax
>004F3252    jmp         004F3257
 004F3254    mov         edx,dword ptr [eax+14]
 004F3257    movzx       ecx,byte ptr [edx+10]
 004F325B    cmp         cl,1
>004F325E    jne         004F326B
 004F3260    mov         edx,1
 004F3265    call        TDockZone.GetHeightWidth
 004F326A    ret
 004F326B    cmp         cl,2
>004F326E    jne         004F327C
 004F3270    mov         edx,2
 004F3275    call        TDockZone.GetHeightWidth
>004F327A    jmp         004F328F
 004F327C    xor         ecx,ecx
 004F327E    mov         dl,1
 004F3280    mov         eax,[004174D0];Exception
 004F3285    call        Exception.Create
 004F328A    call        @RaiseExcept
 004F328F    ret
*}
end;

//004F3290
function TDockZone.GetTopLeft(Orient:Integer):Integer;
begin
{*
 004F3290    push        ebx
 004F3291    push        esi
 004F3292    push        edi
 004F3293    push        ebp
 004F3294    add         esp,0FFFFFFEC
 004F3297    mov         edi,edx
 004F3299    mov         esi,eax
 004F329B    mov         ebx,esi
>004F329D    jmp         004F32BE
 004F329F    mov         eax,edi
 004F32A1    mov         ebp,dword ptr [ebx+14]
 004F32A4    cmp         al,byte ptr [ebp+10]
>004F32A7    jne         004F32BC
 004F32A9    cmp         dword ptr [ebx+18],0
>004F32AD    je          004F32BC
 004F32AF    mov         eax,dword ptr [ebx+18]
 004F32B2    call        TDockZone.GetZoneLimit
 004F32B7    mov         dword ptr [esp],eax
>004F32BA    jmp         004F3308
 004F32BC    mov         ebx,ebp
 004F32BE    mov         eax,dword ptr [esi+1C]
 004F32C1    cmp         ebx,dword ptr [eax+64]
>004F32C4    jne         004F329F
 004F32C6    lea         edx,[esp+4]
 004F32CA    mov         eax,dword ptr [esi+1C]
 004F32CD    mov         eax,dword ptr [eax+14]
 004F32D0    mov         ecx,dword ptr [eax]
 004F32D2    call        dword ptr [ecx+64]
 004F32D5    lea         edx,[esp+4]
 004F32D9    mov         eax,dword ptr [esi+1C]
 004F32DC    mov         eax,dword ptr [eax+14]
 004F32DF    mov         ecx,dword ptr [eax]
 004F32E1    call        dword ptr [ecx+0B8]
 004F32E7    mov         eax,edi
 004F32E9    dec         al
>004F32EB    je          004F32FA
 004F32ED    dec         al
>004F32EF    jne         004F3303
 004F32F1    mov         eax,dword ptr [esp+4]
 004F32F5    mov         dword ptr [esp],eax
>004F32F8    jmp         004F3308
 004F32FA    mov         eax,dword ptr [esp+8]
 004F32FE    mov         dword ptr [esp],eax
>004F3301    jmp         004F3308
 004F3303    xor         eax,eax
 004F3305    mov         dword ptr [esp],eax
 004F3308    mov         eax,dword ptr [esp]
 004F330B    add         esp,14
 004F330E    pop         ebp
 004F330F    pop         edi
 004F3310    pop         esi
 004F3311    pop         ebx
 004F3312    ret
*}
end;

//004F3314
function TDockZone.GetHeightWidth(Orient:Integer):Integer;
begin
{*
 004F3314    push        ebx
 004F3315    push        esi
 004F3316    push        edi
 004F3317    push        ebp
 004F3318    add         esp,0FFFFFFF0
 004F331B    mov         edi,edx
 004F331D    mov         ebx,eax
 004F331F    mov         eax,dword ptr [ebx+1C]
 004F3322    cmp         ebx,dword ptr [eax+64]
>004F3325    je          004F3342
 004F3327    mov         eax,dword ptr [ebx+1C]
 004F332A    mov         esi,dword ptr [eax+64]
 004F332D    cmp         esi,dword ptr [ebx+14]
>004F3330    jne         004F3378
 004F3332    cmp         dword ptr [ebx+4],0
>004F3336    je          004F3378
 004F3338    mov         eax,esi
 004F333A    call        TDockZone.GetVisibleChildCount
 004F333F    dec         eax
>004F3340    jne         004F3378
 004F3342    mov         edx,esp
 004F3344    mov         eax,dword ptr [ebx+1C]
 004F3347    mov         eax,dword ptr [eax+14]
 004F334A    mov         ecx,dword ptr [eax]
 004F334C    call        dword ptr [ecx+64]
 004F334F    mov         edx,esp
 004F3351    mov         eax,dword ptr [ebx+1C]
 004F3354    mov         eax,dword ptr [eax+14]
 004F3357    mov         ecx,dword ptr [eax]
 004F3359    call        dword ptr [ecx+0B8]
 004F335F    mov         eax,edi
 004F3361    cmp         al,1
>004F3363    jne         004F336F
 004F3365    mov         ebp,dword ptr [esp+0C]
 004F3369    sub         ebp,dword ptr [esp+4]
>004F336D    jmp         004F33C0
 004F336F    mov         ebp,dword ptr [esp+8]
 004F3373    sub         ebp,dword ptr [esp]
>004F3376    jmp         004F33C0
 004F3378    mov         esi,ebx
>004F337A    jmp         004F339D
 004F337C    mov         eax,edi
 004F337E    mov         edx,dword ptr [esi+14]
 004F3381    cmp         al,byte ptr [edx+10]
>004F3384    jne         004F339A
 004F3386    mov         eax,esi
 004F3388    call        TDockZone.GetZoneLimit
 004F338D    mov         ebp,eax
 004F338F    mov         eax,esi
 004F3391    call        TDockZone.GetLimitBegin
 004F3396    sub         ebp,eax
>004F3398    jmp         004F33C0
 004F339A    mov         esi,dword ptr [esi+14]
 004F339D    mov         eax,dword ptr [ebx+1C]
 004F33A0    cmp         esi,dword ptr [eax+64]
>004F33A3    jne         004F337C
 004F33A5    mov         ecx,edi
 004F33A7    mov         eax,dword ptr [ebx+1C]
 004F33AA    mov         edx,dword ptr [eax+64]
 004F33AD    cmp         cl,byte ptr [edx+10]
>004F33B0    jne         004F33B7
 004F33B2    mov         ebp,dword ptr [eax+68]
>004F33B5    jmp         004F33C0
 004F33B7    mov         eax,edx
 004F33B9    call        TDockZone.GetZoneLimit
 004F33BE    mov         ebp,eax
 004F33C0    mov         eax,ebp
 004F33C2    add         esp,10
 004F33C5    pop         ebp
 004F33C6    pop         edi
 004F33C7    pop         esi
 004F33C8    pop         ebx
 004F33C9    ret
*}
end;

//004F33CC
procedure TDockZone.ResetChildren;
begin
{*
 004F33CC    push        ebx
 004F33CD    push        esi
 004F33CE    push        edi
 004F33CF    mov         esi,eax
 004F33D1    mov         eax,esi
 004F33D3    call        TDockZone.GetVisibleChildCount
 004F33D8    test        eax,eax
>004F33DA    je          004F3470
 004F33E0    cmp         byte ptr [esi+10],0
>004F33E4    je          004F3470
 004F33EA    mov         eax,esi
 004F33EC    call        TDockZone.FirstVisibleChild
 004F33F1    mov         ebx,eax
 004F33F3    movzx       eax,byte ptr [esi+10]
 004F33F7    dec         al
>004F33F9    je          004F3401
 004F33FB    dec         al
>004F33FD    je          004F3411
>004F33FF    jmp         004F3421
 004F3401    mov         edx,1
 004F3406    mov         eax,esi
 004F3408    call        TDockZone.GetHeightWidth
 004F340D    mov         edi,eax
>004F340F    jmp         004F3423
 004F3411    mov         edx,2
 004F3416    mov         eax,esi
 004F3418    call        TDockZone.GetHeightWidth
 004F341D    mov         edi,eax
>004F341F    jmp         004F3423
 004F3421    xor         edi,edi
 004F3423    mov         eax,esi
 004F3425    call        TDockZone.GetVisibleChildCount
 004F342A    push        eax
 004F342B    mov         eax,edi
 004F342D    pop         edx
 004F342E    mov         ecx,edx
 004F3430    cdq
 004F3431    idiv        eax,ecx
 004F3433    mov         esi,eax
 004F3435    test        ebx,ebx
>004F3437    je          004F3470
 004F3439    cmp         dword ptr [ebx+0C],0
>004F343D    jne         004F344A
 004F343F    mov         edx,edi
 004F3441    mov         eax,ebx
 004F3443    call        TDockZone.SetZoneLimit
>004F3448    jmp         004F345C
 004F344A    mov         eax,ebx
 004F344C    call        TDockZone.GetLimitBegin
 004F3451    mov         edx,eax
 004F3453    add         edx,esi
 004F3455    mov         eax,ebx
 004F3457    call        TDockZone.SetZoneLimit
 004F345C    mov         eax,ebx
 004F345E    call        TDockZone.Update
 004F3463    mov         eax,ebx
 004F3465    call        TDockZone.NextVisible
 004F346A    mov         ebx,eax
 004F346C    test        ebx,ebx
>004F346E    jne         004F3439
 004F3470    pop         edi
 004F3471    pop         esi
 004F3472    pop         ebx
 004F3473    ret
*}
end;

//004F3474
function TDockZone.GetControlName:UnicodeString;
begin
{*
 004F3474    push        ebx
 004F3475    push        esi
 004F3476    push        edi
 004F3477    mov         esi,edx
 004F3479    mov         ebx,eax
 004F347B    mov         eax,esi
 004F347D    call        @UStrClr
 004F3482    mov         edi,dword ptr [ebx+4]
 004F3485    test        edi,edi
>004F3487    je          004F34B3
 004F3489    cmp         dword ptr [edi+8],0
>004F348D    jne         004F34A6
 004F348F    mov         ecx,dword ptr ds:[7C47B8];^SResString318:TResStringRec
 004F3495    mov         dl,1
 004F3497    mov         eax,[004174D0];Exception
 004F349C    call        Exception.CreateRes
 004F34A1    call        @RaiseExcept
 004F34A6    mov         eax,esi
 004F34A8    mov         edx,dword ptr [ebx+4]
 004F34AB    mov         edx,dword ptr [edx+8]
 004F34AE    call        @UStrAsg
 004F34B3    pop         edi
 004F34B4    pop         esi
 004F34B5    pop         ebx
 004F34B6    ret
*}
end;

//004F34B8
{*function sub_004F34B8(?:TDockZone; ?:?):?;
begin
 004F34B8    push        ebp
 004F34B9    mov         ebp,esp
 004F34BB    add         esp,0FFFFFFF4
 004F34BE    push        esi
 004F34BF    push        edi
 004F34C0    mov         esi,edx
 004F34C2    mov         edi,eax
 004F34C4    xor         eax,eax
 004F34C6    mov         dword ptr [ebp-8],eax
 004F34C9    mov         eax,dword ptr [edi+1C]
 004F34CC    mov         dword ptr [ebp-0C],eax
 004F34CF    lea         ecx,[ebp-8]
 004F34D2    mov         eax,dword ptr [ebp-0C]
 004F34D5    mov         eax,dword ptr [eax+14]
 004F34D8    mov         edx,esi
 004F34DA    mov         si,0FFB5
 004F34DE    call        @CallDynaInst
 004F34E3    cmp         dword ptr [ebp-8],0
 004F34E7    setne       byte ptr [ebp-1]
 004F34EB    cmp         byte ptr [ebp-1],0
>004F34EF    je          004F3534
 004F34F1    mov         eax,dword ptr [ebp-0C]
 004F34F4    mov         dword ptr [eax+38],edi
 004F34F7    xor         eax,eax
 004F34F9    push        ebp
 004F34FA    push        4F352D
 004F34FF    push        dword ptr fs:[eax]
 004F3502    mov         dword ptr fs:[eax],esp
 004F3505    push        0
 004F3507    mov         eax,dword ptr [ebp-0C]
 004F350A    mov         edx,dword ptr [eax+14]
 004F350D    xor         ecx,ecx
 004F350F    mov         eax,dword ptr [ebp-8]
 004F3512    call        TControl.ManualDock
 004F3517    xor         eax,eax
 004F3519    pop         edx
 004F351A    pop         ecx
 004F351B    pop         ecx
 004F351C    mov         dword ptr fs:[eax],edx
 004F351F    push        4F3534
 004F3524    mov         eax,dword ptr [ebp-0C]
 004F3527    xor         edx,edx
 004F3529    mov         dword ptr [eax+38],edx
 004F352C    ret
>004F352D    jmp         @HandleFinally
>004F3532    jmp         004F3524
 004F3534    movzx       eax,byte ptr [ebp-1]
 004F3538    pop         edi
 004F3539    pop         esi
 004F353A    mov         esp,ebp
 004F353C    pop         ebp
 004F353D    ret
end;*}

//004F3540
function ParentNotLast:Boolean;
begin
{*
 004F3540    push        ebp
 004F3541    mov         ebp,esp
 004F3543    push        ebx
 004F3544    push        esi
 004F3545    xor         ebx,ebx
 004F3547    mov         eax,dword ptr [ebp+8]
 004F354A    mov         eax,dword ptr [eax-4]
 004F354D    mov         esi,dword ptr [eax+14]
 004F3550    test        esi,esi
>004F3552    je          004F356A
 004F3554    mov         eax,esi
 004F3556    call        TDockZone.NextVisible
 004F355B    test        eax,eax
>004F355D    je          004F3563
 004F355F    mov         bl,1
>004F3561    jmp         004F356A
 004F3563    mov         esi,dword ptr [esi+14]
 004F3566    test        esi,esi
>004F3568    jne         004F3554
 004F356A    mov         eax,ebx
 004F356C    pop         esi
 004F356D    pop         ebx
 004F356E    pop         ebp
 004F356F    ret
*}
end;

//004F3570
procedure TDockZone.Update;
begin
{*
 004F3570    push        ebp
 004F3571    mov         ebp,esp
 004F3573    add         esp,0FFFFFFEC
 004F3576    push        ebx
 004F3577    push        esi
 004F3578    push        edi
 004F3579    mov         dword ptr [ebp-4],eax
 004F357C    mov         eax,dword ptr [ebp-4]
 004F357F    mov         eax,dword ptr [eax+4]
 004F3582    test        eax,eax
>004F3584    je          004F36E2
 004F358A    cmp         byte ptr [eax+69],0
>004F358E    je          004F36E2
 004F3594    mov         edx,dword ptr [ebp-4]
 004F3597    mov         edx,dword ptr [edx+1C]
 004F359A    cmp         dword ptr [edx+6C],0
>004F359E    jne         004F36E2
 004F35A4    mov         edx,dword ptr [ebp-4]
 004F35A7    mov         edx,dword ptr [edx+14]
 004F35AA    movzx       edx,byte ptr [edx+10]
 004F35AE    mov         byte ptr [eax+9C],dl
 004F35B4    mov         edx,2
 004F35B9    mov         eax,dword ptr [ebp-4]
 004F35BC    call        TDockZone.GetHeightWidth
 004F35C1    mov         ebx,eax
 004F35C3    mov         edx,1
 004F35C8    mov         eax,dword ptr [ebp-4]
 004F35CB    call        TDockZone.GetHeightWidth
 004F35D0    mov         esi,eax
 004F35D2    push        ebp
 004F35D3    call        ParentNotLast
 004F35D8    pop         ecx
 004F35D9    test        al,al
>004F35DB    je          004F35FD
 004F35DD    mov         eax,dword ptr [ebp-4]
 004F35E0    mov         eax,dword ptr [eax+14]
 004F35E3    cmp         byte ptr [eax+10],1
>004F35E7    jne         004F35F4
 004F35E9    mov         eax,dword ptr [ebp-4]
 004F35EC    mov         eax,dword ptr [eax+1C]
 004F35EF    sub         ebx,dword ptr [eax+0C]
>004F35F2    jmp         004F35FD
 004F35F4    mov         eax,dword ptr [ebp-4]
 004F35F7    mov         eax,dword ptr [eax+1C]
 004F35FA    sub         esi,dword ptr [eax+0C]
 004F35FD    mov         eax,dword ptr [ebp-4]
 004F3600    call        TDockZone.NextVisible
 004F3605    test        eax,eax
>004F3607    jne         004F3679
 004F3609    mov         eax,dword ptr [ebp-4]
 004F360C    mov         eax,dword ptr [eax+14]
 004F360F    mov         edx,dword ptr [ebp-4]
 004F3612    mov         edx,dword ptr [edx+1C]
 004F3615    cmp         eax,dword ptr [edx+64]
>004F3618    je          004F3645
 004F361A    mov         eax,dword ptr [ebp-4]
 004F361D    mov         eax,dword ptr [eax+14]
 004F3620    movzx       eax,byte ptr [eax+10]
 004F3624    mov         edx,dword ptr [ebp-4]
 004F3627    mov         edx,dword ptr [edx+1C]
 004F362A    mov         edx,dword ptr [edx+64]
 004F362D    cmp         al,byte ptr [edx+10]
>004F3630    jne         004F3645
 004F3632    mov         eax,dword ptr [ebp-4]
 004F3635    call        TDockZone.GetZoneLimit
 004F363A    mov         edx,dword ptr [ebp-4]
 004F363D    mov         edx,dword ptr [edx+1C]
 004F3640    cmp         eax,dword ptr [edx+68]
>004F3643    jl          004F3679
 004F3645    mov         eax,dword ptr [ebp-4]
 004F3648    mov         eax,dword ptr [eax+14]
 004F364B    movzx       eax,byte ptr [eax+10]
 004F364F    mov         edx,dword ptr [ebp-4]
 004F3652    mov         edx,dword ptr [edx+1C]
 004F3655    mov         edx,dword ptr [edx+64]
 004F3658    cmp         al,byte ptr [edx+10]
>004F365B    je          004F3699
 004F365D    mov         eax,dword ptr [ebp-4]
 004F3660    call        TDockZone.GetZoneLimit
 004F3665    mov         edi,eax
 004F3667    mov         eax,dword ptr [ebp-4]
 004F366A    mov         eax,dword ptr [eax+1C]
 004F366D    mov         eax,dword ptr [eax+64]
 004F3670    call        TDockZone.GetZoneLimit
 004F3675    cmp         edi,eax
>004F3677    jge         004F3699
 004F3679    mov         eax,dword ptr [ebp-4]
 004F367C    mov         eax,dword ptr [eax+14]
 004F367F    cmp         byte ptr [eax+10],1
>004F3683    jne         004F3690
 004F3685    mov         eax,dword ptr [ebp-4]
 004F3688    mov         eax,dword ptr [eax+1C]
 004F368B    sub         esi,dword ptr [eax+0C]
>004F368E    jmp         004F3699
 004F3690    mov         eax,dword ptr [ebp-4]
 004F3693    mov         eax,dword ptr [eax+1C]
 004F3696    sub         ebx,dword ptr [eax+0C]
 004F3699    push        esi
 004F369A    lea         eax,[ebp-14]
 004F369D    push        eax
 004F369E    mov         edx,1
 004F36A3    mov         eax,dword ptr [ebp-4]
 004F36A6    call        TDockZone.GetTopLeft
 004F36AB    push        eax
 004F36AC    mov         edx,2
 004F36B1    mov         eax,dword ptr [ebp-4]
 004F36B4    call        TDockZone.GetTopLeft
 004F36B9    mov         ecx,ebx
 004F36BB    pop         edx
 004F36BC    call        Bounds
 004F36C1    lea         ecx,[ebp-14]
 004F36C4    mov         eax,dword ptr [ebp-4]
 004F36C7    mov         edx,dword ptr [eax+4]
 004F36CA    mov         eax,dword ptr [ebp-4]
 004F36CD    mov         eax,dword ptr [eax+1C]
 004F36D0    mov         ebx,dword ptr [eax]
 004F36D2    call        dword ptr [ebx]
 004F36D4    lea         edx,[ebp-14]
 004F36D7    mov         eax,dword ptr [ebp-4]
 004F36DA    mov         eax,dword ptr [eax+4]
 004F36DD    call        004E6768
 004F36E2    pop         edi
 004F36E3    pop         esi
 004F36E4    pop         ebx
 004F36E5    mov         esp,ebp
 004F36E7    pop         ebp
 004F36E8    ret
*}
end;

//004F36EC
function TDockZone.GetZoneLimit:Integer;
begin
{*
 004F36EC    push        ebx
 004F36ED    mov         ebx,eax
 004F36EF    mov         eax,ebx
 004F36F1    call        TDockZone.GetVisible
 004F36F6    test        al,al
>004F36F8    jne         004F370E
 004F36FA    mov         eax,ebx
 004F36FC    call        IsOrientationSet
 004F3701    test        al,al
>004F3703    je          004F370E
 004F3705    mov         eax,ebx
 004F3707    call        TDockZone.GetLimitBegin
 004F370C    pop         ebx
 004F370D    ret
 004F370E    mov         eax,dword ptr [ebx+20]
 004F3711    pop         ebx
 004F3712    ret
*}
end;

//004F3714
procedure TDockZone.SetZoneLimit(const Value:Integer);
begin
{*
 004F3714    mov         dword ptr [eax+20],edx
 004F3717    ret
*}
end;

//004F3718
function GetLastChildZone(Zone:TDockZone):TDockZone;
begin
{*
 004F3718    mov         eax,dword ptr [eax+8]
>004F371B    jmp         004F371F
 004F371D    mov         eax,edx
 004F371F    mov         edx,dword ptr [eax+0C]
 004F3722    test        edx,edx
>004F3724    jne         004F371D
 004F3726    ret
*}
end;

//004F3728
procedure TDockZone.ExpandZoneLimit(NewLimit:Integer);
begin
{*
 004F3728    push        ebx
 004F3729    push        esi
 004F372A    push        edi
 004F372B    mov         edi,edx
 004F372D    mov         edx,eax
 004F372F    mov         dword ptr [edx+20],edi
 004F3732    mov         ebx,dword ptr [eax+8]
 004F3735    test        ebx,ebx
>004F3737    je          004F375D
 004F3739    mov         eax,ebx
 004F373B    call        TDockZone.GetChildCount
 004F3740    test        eax,eax
>004F3742    jle         004F3756
 004F3744    mov         eax,ebx
 004F3746    call        GetLastChildZone
 004F374B    mov         esi,eax
 004F374D    mov         edx,edi
 004F374F    mov         eax,esi
 004F3751    call        TDockZone.ExpandZoneLimit
 004F3756    mov         ebx,dword ptr [ebx+0C]
 004F3759    test        ebx,ebx
>004F375B    jne         004F3739
 004F375D    pop         edi
 004F375E    pop         esi
 004F375F    pop         ebx
 004F3760    ret
*}
end;

//004F3764
procedure TDockZone.ResetZoneLimits;
begin
{*
 004F3764    push        ebx
 004F3765    push        esi
 004F3766    push        edi
 004F3767    mov         esi,eax
 004F3769    mov         ebx,dword ptr [esi+8]
 004F376C    test        ebx,ebx
>004F376E    je          004F37BF
 004F3770    mov         eax,ebx
 004F3772    call        TDockZone.GetZoneLimit
 004F3777    mov         edi,eax
 004F3779    mov         eax,ebx
 004F377B    call        TDockZone.GetLimitBegin
 004F3780    cmp         edi,eax
>004F3782    jl          004F3798
 004F3784    mov         eax,ebx
 004F3786    call        TDockZone.GetZoneLimit
 004F378B    mov         edi,eax
 004F378D    mov         eax,esi
 004F378F    call        TDockZone.GetLimitSize
 004F3794    cmp         edi,eax
>004F3796    jle         004F37B1
 004F3798    mov         eax,esi
 004F379A    call        TDockZone.ResetChildren
 004F379F    mov         edi,dword ptr [esi+1C]
 004F37A2    push        edi
 004F37A3    push        4F5710;TDockTree.UpdateZone
 004F37A8    mov         edx,esi
 004F37AA    mov         eax,edi
 004F37AC    call        TDockTree.ForEachAt
 004F37B1    mov         eax,ebx
 004F37B3    call        TDockZone.ResetZoneLimits
 004F37B8    mov         ebx,dword ptr [ebx+0C]
 004F37BB    test        ebx,ebx
>004F37BD    jne         004F3770
 004F37BF    pop         edi
 004F37C0    pop         esi
 004F37C1    pop         ebx
 004F37C2    ret
*}
end;

//004F37C4
function TDockZone.NextVisible:TDockZone;
begin
{*
 004F37C4    mov         eax,dword ptr [eax+0C]
 004F37C7    call        NextVisibleZone
 004F37CC    ret
*}
end;

//004F37D0
function TDockZone.PrevVisible:TDockZone;
begin
{*
 004F37D0    push        ebx
 004F37D1    mov         ebx,dword ptr [eax+18]
>004F37D4    jmp         004F37D9
 004F37D6    mov         ebx,dword ptr [ebx+18]
 004F37D9    test        ebx,ebx
>004F37DB    je          004F37E8
 004F37DD    mov         eax,ebx
 004F37DF    call        TDockZone.GetVisible
 004F37E4    test        al,al
>004F37E6    je          004F37D6
 004F37E8    mov         eax,ebx
 004F37EA    pop         ebx
 004F37EB    ret
*}
end;

//004F37EC
function TDockZone.FirstVisibleChild:TDockZone;
begin
{*
 004F37EC    mov         eax,dword ptr [eax+8]
 004F37EF    call        NextVisibleZone
 004F37F4    ret
*}
end;

//004F37F8
constructor sub_004F37F8(DockSite:TWinControl);
begin
{*
 004F37F8    push        ebp
 004F37F9    mov         ebp,esp
 004F37FB    add         esp,0FFFFFFF4
 004F37FE    push        ebx
 004F37FF    push        esi
 004F3800    push        edi
 004F3801    test        dl,dl
>004F3803    je          004F380D
 004F3805    add         esp,0FFFFFFF0
 004F3808    call        @ClassCreate
 004F380D    mov         dword ptr [ebp-0C],ecx
 004F3810    mov         byte ptr [ebp-5],dl
 004F3813    mov         dword ptr [ebp-4],eax
 004F3816    xor         edx,edx
 004F3818    mov         eax,dword ptr [ebp-4]
 004F381B    call        TObject.Create
 004F3820    mov         eax,dword ptr [ebp-4]
 004F3823    mov         dword ptr [eax+0C],4;TDockTree.FBorderWidth:Integer
 004F382A    mov         eax,dword ptr [ebp-4]
 004F382D    mov         edx,dword ptr [ebp-0C]
 004F3830    mov         dword ptr [eax+14],edx;TDockTree.FDockSite:TWinControl
 004F3833    mov         eax,dword ptr [ebp-4]
 004F3836    mov         dword ptr [eax+70],80000;TDockTree.FVersion:Integer
 004F383D    mov         eax,dword ptr [ebp-4]
 004F3840    mov         dword ptr [eax+18],0C;TDockTree.FGrabberSize:Integer
 004F3847    mov         eax,dword ptr [ebp-0C]
 004F384A    movzx       eax,byte ptr [eax+6D];TWinControl.FAlign:TAlign
 004F384E    cmp         al,1
>004F3850    je          004F3856
 004F3852    cmp         al,2
>004F3854    jne         004F385A
 004F3856    xor         eax,eax
>004F3858    jmp         004F385C
 004F385A    mov         al,1
 004F385C    mov         edx,dword ptr [ebp-4]
 004F385F    mov         byte ptr [edx+1C],al;TDockTree.FGrabbersOnTop:Boolean
 004F3862    mov         ecx,dword ptr [ebp-4]
 004F3865    mov         dl,1
 004F3867    mov         eax,[004E0F90];TDockZone
 004F386C    call        TDockZone.Create;TDockZone.Create
 004F3871    mov         edx,dword ptr [ebp-4]
 004F3874    mov         dword ptr [edx+64],eax;TDockTree.FTopZone:TDockZone
 004F3877    mov         dl,1
 004F3879    mov         eax,[004BE308];TBrush
 004F387E    call        TBrush.Create;TBrush.Create
 004F3883    mov         ebx,eax
 004F3885    mov         eax,dword ptr [ebp-4]
 004F3888    mov         dword ptr [eax+10],ebx;TDockTree.FBrush:TBrush
 004F388B    mov         edx,0FFFFFF
 004F3890    xor         eax,eax
 004F3892    call        AllocPatternBitmap
 004F3897    mov         edx,eax
 004F3899    mov         eax,ebx
 004F389B    call        TBrush.SetBitmap
 004F38A0    mov         eax,dword ptr [ebp-4]
 004F38A3    call        004F39CC
 004F38A8    xor         eax,eax
 004F38AA    push        ebp
 004F38AB    push        4F3905
 004F38B0    push        dword ptr fs:[eax]
 004F38B3    mov         dword ptr fs:[eax],esp
 004F38B6    mov         eax,dword ptr [ebp-0C]
 004F38B9    call        TWinControl.GetControlCount
 004F38BE    mov         ebx,eax
 004F38C0    dec         ebx
 004F38C1    test        ebx,ebx
>004F38C3    jl          004F38E4
 004F38C5    inc         ebx
 004F38C6    xor         esi,esi
 004F38C8    push        0
 004F38CA    mov         edx,esi
 004F38CC    mov         eax,dword ptr [ebp-0C]
 004F38CF    call        TWinControl.GetControl
 004F38D4    mov         edx,eax
 004F38D6    mov         cl,3
 004F38D8    mov         eax,dword ptr [ebp-4]
 004F38DB    mov         edi,dword ptr [eax]
 004F38DD    call        dword ptr [edi+0C];TDockTree.sub_004F3B44
 004F38E0    inc         esi
 004F38E1    dec         ebx
>004F38E2    jne         004F38C8
 004F38E4    mov         eax,dword ptr [ebp-4]
 004F38E7    mov         eax,dword ptr [eax+64];TDockTree.FTopZone:TDockZone
 004F38EA    call        TDockZone.ResetChildren
 004F38EF    xor         eax,eax
 004F38F1    pop         edx
 004F38F2    pop         ecx
 004F38F3    pop         ecx
 004F38F4    mov         dword ptr fs:[eax],edx
 004F38F7    push        4F390C
 004F38FC    mov         eax,dword ptr [ebp-4]
 004F38FF    call        TDockTree.EndUpdate
 004F3904    ret
>004F3905    jmp         @HandleFinally
>004F390A    jmp         004F38FC
 004F390C    mov         eax,dword ptr [ebp-0C]
 004F390F    test        byte ptr [eax+1C],10;TWinControl.FComponentState:TComponentState
>004F3913    jne         004F393D
 004F3915    mov         eax,dword ptr [ebp-4]
 004F3918    mov         edx,dword ptr [ebp-4]
 004F391B    mov         edx,dword ptr [edx+14];TDockTree.FDockSite:TWinControl
 004F391E    mov         ecx,dword ptr [edx+48];TWinControl.FWindowProc:TWndMethod
 004F3921    mov         dword ptr [eax+30],ecx;TDockTree.FOldWndProc:TWndMethod
 004F3924    mov         ecx,dword ptr [edx+4C];TWinControl.FTop:Integer
 004F3927    mov         dword ptr [eax+34],ecx;TDockTree.?f34:Integer
 004F392A    mov         eax,dword ptr [ebp-4]
 004F392D    mov         eax,dword ptr [eax+14];TDockTree.FDockSite:TWinControl
 004F3930    mov         edx,dword ptr [ebp-4]
 004F3933    mov         dword ptr [eax+4C],edx;TWinControl.FTop:Integer
 004F3936    mov         dword ptr [eax+48],4F5720;TWinControl.FWindowProc:TWndMethod sub_004F5720
 004F393D    mov         eax,dword ptr [ebp-4]
 004F3940    cmp         byte ptr [ebp-5],0
>004F3944    je          004F3955
 004F3946    call        @AfterConstruction
 004F394B    pop         dword ptr fs:[0]
 004F3952    add         esp,0C
 004F3955    mov         eax,dword ptr [ebp-4]
 004F3958    pop         edi
 004F3959    pop         esi
 004F395A    pop         ebx
 004F395B    mov         esp,ebp
 004F395D    pop         ebp
 004F395E    ret
*}
end;

//004F3960
destructor TDockTree.Destroy();
begin
{*
 004F3960    push        ebx
 004F3961    push        esi
 004F3962    call        @BeforeDestruction
 004F3967    mov         ebx,edx
 004F3969    mov         esi,eax
 004F396B    cmp         word ptr [esi+32],0;TDockTree.?f32:word
>004F3970    je          004F3989
 004F3972    mov         eax,dword ptr [esi+14];TDockTree.FDockSite:TWinControl
 004F3975    mov         edx,dword ptr [esi+30];TDockTree.FOldWndProc:TWndMethod
 004F3978    mov         dword ptr [eax+48],edx;TWinControl.FWindowProc:TWndMethod
 004F397B    mov         edx,dword ptr [esi+34];TDockTree.?f34:Integer
 004F397E    mov         dword ptr [eax+4C],edx;TWinControl.FTop:Integer
 004F3981    xor         eax,eax
 004F3983    mov         dword ptr [esi+30],eax;TDockTree.FOldWndProc:TWndMethod
 004F3986    mov         dword ptr [esi+34],eax;TDockTree.?f34:Integer
 004F3989    mov         edx,dword ptr [esi+64];TDockTree.FTopZone:TDockZone
 004F398C    mov         eax,esi
 004F398E    call        TDockTree.PruneZone
 004F3993    mov         eax,dword ptr [esi+10];TDockTree.FBrush:TBrush
 004F3996    call        TObject.Free
 004F399B    mov         dl,0FC
 004F399D    and         dl,bl
 004F399F    mov         eax,esi
 004F39A1    call        TObject.Destroy
 004F39A6    test        bl,bl
>004F39A8    jle         004F39B1
 004F39AA    mov         eax,esi
 004F39AC    call        @ClassDestroy
 004F39B1    pop         esi
 004F39B2    pop         ebx
 004F39B3    ret
*}
end;

//004F39B4
{*procedure sub_004F39B4(?:?; ?:?);
begin
 004F39B4    mov         eax,dword ptr [eax+14];TDockTree.FDockSite:TWinControl
 004F39B7    movzx       eax,byte ptr [eax+6D];TWinControl.FAlign:TAlign
 004F39BB    dec         eax
 004F39BC    sub         al,2
>004F39BE    jae         004F39C4
 004F39C0    add         dword ptr [ecx],0C
 004F39C3    ret
 004F39C4    add         dword ptr [ecx+4],0C
 004F39C8    ret
end;*}

//004F39CC
procedure sub_004F39CC(?:TDockTree);
begin
{*
 004F39CC    inc         dword ptr [eax+6C];TDockTree.FUpdateCount:Integer
 004F39CF    ret
*}
end;

//004F39D0
procedure TDockTree.EndUpdate;
begin
{*
 004F39D0    dec         dword ptr [eax+6C]
 004F39D3    cmp         dword ptr [eax+6C],0
>004F39D7    jg          004F39E3
 004F39D9    xor         edx,edx
 004F39DB    mov         dword ptr [eax+6C],edx
 004F39DE    call        TDockTree.UpdateAll
 004F39E3    ret
*}
end;

//004F39E4
procedure DoFindControlZone(StartZone:TDockZone);
begin
{*
 004F39E4    push        ebp
 004F39E5    mov         ebp,esp
 004F39E7    push        ebx
 004F39E8    mov         ebx,eax
 004F39EA    mov         eax,dword ptr [ebp+8]
 004F39ED    mov         eax,dword ptr [eax-4]
 004F39F0    cmp         eax,dword ptr [ebx+4]
>004F39F3    jne         004F39FE
 004F39F5    mov         eax,dword ptr [ebp+8]
 004F39F8    mov         dword ptr [eax-8],ebx
 004F39FB    pop         ebx
 004F39FC    pop         ebp
 004F39FD    ret
 004F39FE    mov         eax,dword ptr [ebp+8]
 004F3A01    cmp         dword ptr [eax-8],0
>004F3A05    jne         004F3A1A
 004F3A07    cmp         dword ptr [ebx+0C],0
>004F3A0B    je          004F3A1A
 004F3A0D    mov         eax,dword ptr [ebp+8]
 004F3A10    push        eax
 004F3A11    mov         eax,dword ptr [ebx+0C]
 004F3A14    call        DoFindControlZone
 004F3A19    pop         ecx
 004F3A1A    mov         eax,dword ptr [ebp+8]
 004F3A1D    cmp         dword ptr [eax-8],0
>004F3A21    jne         004F3A36
 004F3A23    cmp         dword ptr [ebx+8],0
>004F3A27    je          004F3A36
 004F3A29    mov         eax,dword ptr [ebp+8]
 004F3A2C    push        eax
 004F3A2D    mov         eax,dword ptr [ebx+8]
 004F3A30    call        DoFindControlZone
 004F3A35    pop         ecx
 004F3A36    pop         ebx
 004F3A37    pop         ebp
 004F3A38    ret
*}
end;

//004F3A3C
function TDockTree.FindControlZone(Control:TControl):TDockZone;
begin
{*
 004F3A3C    push        ebp
 004F3A3D    mov         ebp,esp
 004F3A3F    add         esp,0FFFFFFF8
 004F3A42    mov         dword ptr [ebp-4],edx
 004F3A45    xor         edx,edx
 004F3A47    mov         dword ptr [ebp-8],edx
 004F3A4A    cmp         dword ptr [ebp-4],0
>004F3A4E    je          004F3A60
 004F3A50    cmp         dword ptr [eax+64],0
>004F3A54    je          004F3A60
 004F3A56    push        ebp
 004F3A57    mov         eax,dword ptr [eax+64]
 004F3A5A    call        DoFindControlZone
 004F3A5F    pop         ecx
 004F3A60    mov         eax,dword ptr [ebp-8]
 004F3A63    pop         ecx
 004F3A64    pop         ecx
 004F3A65    pop         ebp
 004F3A66    ret
*}
end;

//004F3A68
procedure DoForEach(Zone:TDockZone);
begin
{*
 004F3A68    push        ebp
 004F3A69    mov         ebp,esp
 004F3A6B    push        ebx
 004F3A6C    push        esi
 004F3A6D    mov         ebx,eax
 004F3A6F    mov         eax,dword ptr [ebp+8]
 004F3A72    lea         esi,[eax+8]
 004F3A75    mov         edx,ebx
 004F3A77    mov         eax,dword ptr [esi+4]
 004F3A7A    call        dword ptr [esi]
 004F3A7C    mov         eax,dword ptr [ebx+0C]
 004F3A7F    test        eax,eax
>004F3A81    je          004F3A8D
 004F3A83    mov         edx,dword ptr [ebp+8]
 004F3A86    push        edx
 004F3A87    call        DoForEach
 004F3A8C    pop         ecx
 004F3A8D    mov         eax,dword ptr [ebx+8]
 004F3A90    test        eax,eax
>004F3A92    je          004F3A9E
 004F3A94    mov         edx,dword ptr [ebp+8]
 004F3A97    push        edx
 004F3A98    call        DoForEach
 004F3A9D    pop         ecx
 004F3A9E    pop         esi
 004F3A9F    pop         ebx
 004F3AA0    pop         ebp
 004F3AA1    ret
*}
end;

//004F3AA4
procedure TDockTree.ForEachAt(Zone:TDockZone; Proc:TForEachZoneProc);
begin
{*
 004F3AA4    push        ebp
 004F3AA5    mov         ebp,esp
 004F3AA7    test        edx,edx
>004F3AA9    jne         004F3AAE
 004F3AAB    mov         edx,dword ptr [eax+64]
 004F3AAE    push        ebp
 004F3AAF    mov         eax,edx
 004F3AB1    call        DoForEach
 004F3AB6    pop         ecx
 004F3AB7    pop         ebp
 004F3AB8    ret         8
*}
end;

//004F3ABC
procedure TDockTree.GetControlBounds(Control:TControl; var CtlBounds:Types.TRect);
begin
{*
 004F3ABC    push        ebx
 004F3ABD    push        esi
 004F3ABE    push        edi
 004F3ABF    add         esp,0FFFFFFF0
 004F3AC2    mov         esi,ecx
 004F3AC4    call        TDockTree.FindControlZone
 004F3AC9    mov         ebx,eax
 004F3ACB    test        ebx,ebx
>004F3ACD    jne         004F3AE4
 004F3ACF    xor         eax,eax
 004F3AD1    mov         dword ptr [esi],eax
 004F3AD3    xor         eax,eax
 004F3AD5    mov         dword ptr [esi+8],eax
 004F3AD8    xor         eax,eax
 004F3ADA    mov         dword ptr [esi+4],eax
 004F3ADD    xor         eax,eax
 004F3ADF    mov         dword ptr [esi+0C],eax
>004F3AE2    jmp         004F3B2B
 004F3AE4    mov         edx,1
 004F3AE9    mov         eax,ebx
 004F3AEB    call        TDockZone.GetHeightWidth
 004F3AF0    push        eax
 004F3AF1    lea         eax,[esp+4]
 004F3AF5    push        eax
 004F3AF6    mov         edx,2
 004F3AFB    mov         eax,ebx
 004F3AFD    call        TDockZone.GetHeightWidth
 004F3B02    push        eax
 004F3B03    mov         edx,1
 004F3B08    mov         eax,ebx
 004F3B0A    call        TDockZone.GetTopLeft
 004F3B0F    push        eax
 004F3B10    mov         edx,2
 004F3B15    mov         eax,ebx
 004F3B17    call        TDockZone.GetTopLeft
 004F3B1C    pop         edx
 004F3B1D    pop         ecx
 004F3B1E    call        Bounds
 004F3B23    mov         edi,esi
 004F3B25    mov         esi,esp
 004F3B27    movs        dword ptr [edi],dword ptr [esi]
 004F3B28    movs        dword ptr [edi],dword ptr [esi]
 004F3B29    movs        dword ptr [edi],dword ptr [esi]
 004F3B2A    movs        dword ptr [edi],dword ptr [esi]
 004F3B2B    add         esp,10
 004F3B2E    pop         edi
 004F3B2F    pop         esi
 004F3B30    pop         ebx
 004F3B31    ret
*}
end;

//004F3B34
function TDockTree.HitTest(const MousePos:Types.TPoint; var HTFlag:Integer):TControl;
begin
{*
 004F3B34    call        TDockTree.InternalHitTest
 004F3B39    test        eax,eax
>004F3B3B    je          004F3B41
 004F3B3D    mov         eax,dword ptr [eax+4]
 004F3B40    ret
 004F3B41    xor         eax,eax
 004F3B43    ret
*}
end;

//004F3B44
{*procedure sub_004F3B44(?:?; ?:?; ?:?);
begin
 004F3B44    push        ebp
 004F3B45    mov         ebp,esp
 004F3B47    add         esp,0FFFFFFC0
 004F3B4A    push        ebx
 004F3B4B    push        esi
 004F3B4C    push        edi
 004F3B4D    mov         byte ptr [ebp-1],cl
 004F3B50    mov         ebx,edx
 004F3B52    mov         esi,eax
 004F3B54    cmp         byte ptr [ebx+69],0
>004F3B58    je          004F3D60
 004F3B5E    mov         eax,dword ptr [esi+38];TDockTree.FReplacementZone:TDockZone
 004F3B61    test        eax,eax
>004F3B63    je          004F3B72
 004F3B65    mov         dword ptr [eax+4],ebx;TDockZone.FChildControl:TControl
 004F3B68    call        TDockZone.Update
>004F3B6D    jmp         004F3D55
 004F3B72    mov         eax,dword ptr [esi+64];TDockTree.FTopZone:TDockZone
 004F3B75    cmp         dword ptr [eax+8],0;TDockZone.FChildZones:TDockZone
>004F3B79    jne         004F3C22
 004F3B7F    lea         edx,[ebp-30]
 004F3B82    mov         eax,dword ptr [esi+14];TDockTree.FDockSite:TWinControl
 004F3B85    mov         ecx,dword ptr [eax]
 004F3B87    call        dword ptr [ecx+64];TWinControl.GetClientRect
 004F3B8A    lea         edx,[ebp-30]
 004F3B8D    mov         eax,dword ptr [esi+14];TDockTree.FDockSite:TWinControl
 004F3B90    mov         ecx,dword ptr [eax]
 004F3B92    call        dword ptr [ecx+0B8];TWinControl.sub_004EA530
 004F3B98    mov         edi,dword ptr [ebp-28]
 004F3B9B    sub         edi,dword ptr [ebp-30]
 004F3B9E    mov         eax,dword ptr [ebp-24]
 004F3BA1    sub         eax,dword ptr [ebp-2C]
 004F3BA4    mov         dword ptr [ebp-10],eax
 004F3BA7    mov         eax,dword ptr [esi+14];TDockTree.FDockSite:TWinControl
 004F3BAA    cmp         byte ptr [eax+6E],0;TWinControl.FAutoSize:Boolean
>004F3BAE    je          004F3BCD
 004F3BB0    test        edi,edi
>004F3BB2    jne         004F3BBD
 004F3BB4    mov         eax,ebx
 004F3BB6    call        004E6E88
 004F3BBB    mov         edi,eax
 004F3BBD    cmp         dword ptr [ebp-10],0
>004F3BC1    jne         004F3BCD
 004F3BC3    mov         eax,ebx
 004F3BC5    call        004E6E74
 004F3BCA    mov         dword ptr [ebp-10],eax
 004F3BCD    mov         eax,dword ptr [ebp-10]
 004F3BD0    push        eax
 004F3BD1    lea         eax,[ebp-40]
 004F3BD4    push        eax
 004F3BD5    mov         ecx,edi
 004F3BD7    mov         edx,dword ptr [ebp-2C]
 004F3BDA    mov         eax,dword ptr [ebp-30]
 004F3BDD    call        Bounds
 004F3BE2    push        esi
 004F3BE3    lea         esi,[ebp-40]
 004F3BE6    lea         edi,[ebp-30]
 004F3BE9    movs        dword ptr [edi],dword ptr [esi]
 004F3BEA    movs        dword ptr [edi],dword ptr [esi]
 004F3BEB    movs        dword ptr [edi],dword ptr [esi]
 004F3BEC    movs        dword ptr [edi],dword ptr [esi]
 004F3BED    pop         esi
 004F3BEE    lea         ecx,[ebp-30]
 004F3BF1    mov         edx,ebx
 004F3BF3    mov         eax,esi
 004F3BF5    mov         edi,dword ptr [eax]
 004F3BF7    call        dword ptr [edi];TDockTree.sub_004F39B4
 004F3BF9    lea         edx,[ebp-30]
 004F3BFC    mov         eax,ebx
 004F3BFE    call        004E6768
 004F3C03    mov         ecx,esi
 004F3C05    mov         dl,1
 004F3C07    mov         eax,[004E0F90];TDockZone
 004F3C0C    call        TDockZone.Create;TDockZone.Create
 004F3C11    mov         edx,dword ptr [esi+64];TDockTree.FTopZone:TDockZone
 004F3C14    mov         dword ptr [edx+8],eax;TDockZone.FChildZones:TDockZone
 004F3C17    mov         dword ptr [eax+14],edx;TDockZone.FParentZone:TDockZone
 004F3C1A    mov         dword ptr [eax+4],ebx;TDockZone.FChildControl:TControl
>004F3C1D    jmp         004F3D55
 004F3C22    movzx       eax,byte ptr [ebp-1]
 004F3C26    test        al,al
>004F3C28    je          004F3C2E
 004F3C2A    sub         al,5
>004F3C2C    jne         004F3C32
 004F3C2E    mov         byte ptr [ebp-1],4
 004F3C32    mov         edx,ebx
 004F3C34    mov         eax,esi
 004F3C36    call        TDockTree.FindControlZone
 004F3C3B    test        eax,eax
>004F3C3D    je          004F3C48
 004F3C3F    mov         edx,eax
 004F3C41    mov         eax,esi
 004F3C43    call        004F4D40
 004F3C48    mov         edx,dword ptr [ebp+8]
 004F3C4B    mov         eax,esi
 004F3C4D    call        TDockTree.FindControlZone
 004F3C52    mov         dword ptr [ebp-8],eax
 004F3C55    movzx       eax,byte ptr [ebp-1]
 004F3C59    movzx       eax,byte ptr [eax+7A1280]
 004F3C60    mov         byte ptr [ebp-9],al
 004F3C63    mov         eax,dword ptr [esi+64];TDockTree.FTopZone:TDockZone
 004F3C66    call        TDockZone.GetChildCount
 004F3C6B    dec         eax
>004F3C6C    jne         004F3CE6
 004F3C6E    movzx       eax,byte ptr [ebp-9]
 004F3C72    mov         edi,dword ptr [esi+64];TDockTree.FTopZone:TDockZone
 004F3C75    mov         byte ptr [edi+10],al;TDockZone.FOrientation:TDockOrientation
 004F3C78    movzx       eax,byte ptr [ebp-9]
 004F3C7C    dec         al
>004F3C7E    je          004F3C86
 004F3C80    dec         al
>004F3C82    je          004F3CB7
>004F3C84    jmp         004F3CE6
 004F3C86    mov         dword ptr [ebp-14],edi
 004F3C89    mov         eax,dword ptr [edi+8];TDockZone.FChildZones:TDockZone
 004F3C8C    mov         edx,2
 004F3C91    call        TDockZone.GetHeightWidth
 004F3C96    mov         dword ptr [ebp-18],eax
 004F3C99    mov         eax,dword ptr [ebp-14]
 004F3C9C    mov         edx,dword ptr [ebp-18]
 004F3C9F    mov         dword ptr [eax+20],edx;TDockZone.FZoneLimit:Integer
 004F3CA2    mov         eax,dword ptr [esi+64];TDockTree.FTopZone:TDockZone
 004F3CA5    mov         eax,dword ptr [eax+8];TDockZone.FChildZones:TDockZone
 004F3CA8    mov         edx,1
 004F3CAD    call        TDockZone.GetHeightWidth
 004F3CB2    mov         dword ptr [esi+68],eax;TDockTree.FTopXYLimit:Integer
>004F3CB5    jmp         004F3CE6
 004F3CB7    mov         dword ptr [ebp-1C],edi
 004F3CBA    mov         eax,dword ptr [edi+8];TDockZone.FChildZones:TDockZone
 004F3CBD    mov         edx,1
 004F3CC2    call        TDockZone.GetHeightWidth
 004F3CC7    mov         dword ptr [ebp-20],eax
 004F3CCA    mov         eax,dword ptr [ebp-1C]
 004F3CCD    mov         edx,dword ptr [ebp-20]
 004F3CD0    mov         dword ptr [eax+20],edx;TDockZone.FZoneLimit:Integer
 004F3CD3    mov         eax,dword ptr [esi+64];TDockTree.FTopZone:TDockZone
 004F3CD6    mov         eax,dword ptr [eax+8];TDockZone.FChildZones:TDockZone
 004F3CD9    mov         edx,2
 004F3CDE    call        TDockZone.GetHeightWidth
 004F3CE3    mov         dword ptr [esi+68],eax;TDockTree.FTopXYLimit:Integer
 004F3CE6    mov         ecx,esi
 004F3CE8    mov         dl,1
 004F3CEA    mov         eax,[004E0F90];TDockZone
 004F3CEF    call        TDockZone.Create;TDockZone.Create
 004F3CF4    mov         dword ptr [eax+4],ebx;TDockZone.FChildControl:TControl
 004F3CF7    cmp         dword ptr [ebp-8],0
>004F3CFB    je          004F3D09
 004F3CFD    mov         edx,dword ptr [ebp-8]
 004F3D00    mov         edx,dword ptr [edx+14];TDockZone.FParentZone:TDockZone
 004F3D03    movzx       edx,byte ptr [edx+10];TDockZone.FOrientation:TDockOrientation
>004F3D07    jmp         004F3D10
 004F3D09    mov         edx,dword ptr [esi+64];TDockTree.FTopZone:TDockZone
 004F3D0C    movzx       edx,byte ptr [edx+10];TDockZone.FOrientation:TDockOrientation
 004F3D10    cmp         byte ptr [ebp-9],0
>004F3D14    jne         004F3D19
 004F3D16    mov         byte ptr [ebp-9],dl
 004F3D19    cmp         dl,byte ptr [ebp-9]
>004F3D1C    jne         004F3D38
 004F3D1E    movzx       edx,byte ptr [ebp-1]
 004F3D22    movzx       edx,byte ptr [edx+7A1287]
 004F3D29    push        edx
 004F3D2A    mov         ecx,dword ptr [ebp-8]
 004F3D2D    mov         edx,eax
 004F3D2F    mov         eax,esi
 004F3D31    call        TDockTree.InsertSibling
>004F3D36    jmp         004F3D55
 004F3D38    movzx       edx,byte ptr [ebp-9]
 004F3D3C    push        edx
 004F3D3D    movzx       edx,byte ptr [ebp-1]
 004F3D41    movzx       edx,byte ptr [edx+7A1287]
 004F3D48    push        edx
 004F3D49    mov         ecx,dword ptr [ebp-8]
 004F3D4C    mov         edx,eax
 004F3D4E    mov         eax,esi
 004F3D50    call        004F3D6C
 004F3D55    mov         eax,dword ptr [esi+14];TDockTree.FDockSite:TWinControl
 004F3D58    mov         edx,dword ptr [eax]
 004F3D5A    call        dword ptr [edx+0A8];TWinControl.Invalidate
 004F3D60    pop         edi
 004F3D61    pop         esi
 004F3D62    pop         ebx
 004F3D63    mov         esp,ebp
 004F3D65    pop         ebp
 004F3D66    ret         4
end;*}

//004F3D6C
{*procedure sub_004F3D6C(?:TDockTree; ?:TDockZone; ?:TDockZone; ?:?; ?:?);
begin
 004F3D6C    push        ebp
 004F3D6D    mov         ebp,esp
 004F3D6F    add         esp,0FFFFFFEC
 004F3D72    push        ebx
 004F3D73    push        esi
 004F3D74    push        edi
 004F3D75    mov         edi,ecx
 004F3D77    mov         dword ptr [ebp-4],edx
 004F3D7A    mov         esi,eax
 004F3D7C    mov         ecx,esi
 004F3D7E    mov         dl,1
 004F3D80    mov         eax,[004E0F90];TDockZone
 004F3D85    call        TDockZone.Create;TDockZone.Create
 004F3D8A    mov         ebx,eax
 004F3D8C    movzx       eax,byte ptr [ebp+0C]
 004F3D90    mov         byte ptr [ebx+10],al;TDockZone.FOrientation:TDockOrientation
 004F3D93    test        edi,edi
>004F3D95    jne         004F3E7F
 004F3D9B    mov         eax,ebx
 004F3D9D    mov         edx,dword ptr [esi+68];TDockTree.FTopXYLimit:Integer
 004F3DA0    mov         dword ptr [ebp-8],edx
 004F3DA3    mov         edx,dword ptr [ebp-8]
 004F3DA6    mov         dword ptr [eax+20],edx;TDockZone.FZoneLimit:Integer
 004F3DA9    mov         eax,dword ptr [esi+64];TDockTree.FTopZone:TDockZone
 004F3DAC    call        TDockZone.GetZoneLimit
 004F3DB1    mov         dword ptr [esi+68],eax;TDockTree.FTopXYLimit:Integer
 004F3DB4    movzx       eax,byte ptr [ebp+0C]
 004F3DB8    mov         byte ptr [esi+48],al;TDockTree.FShiftScaleOrient:TDockOrientation
 004F3DBB    xor         eax,eax
 004F3DBD    mov         dword ptr [esi+40],eax;TDockTree.FScaleBy:Double
 004F3DC0    mov         dword ptr [esi+44],3FE00000;TDockTree.?f44:dword
 004F3DC7    cmp         byte ptr [ebp+8],0
>004F3DCB    je          004F3E00
 004F3DCD    mov         eax,dword ptr [esi+64];TDockTree.FTopZone:TDockZone
 004F3DD0    mov         dword ptr [ebx+8],eax;TDockZone.FChildZones:TDockZone
 004F3DD3    mov         eax,dword ptr [esi+64];TDockTree.FTopZone:TDockZone
 004F3DD6    mov         dword ptr [eax+14],ebx;TDockZone.FParentZone:TDockZone
 004F3DD9    mov         edx,dword ptr [ebp-4]
 004F3DDC    mov         dword ptr [eax+0C],edx;TDockZone.FNextSibling:TDockZone
 004F3DDF    mov         edx,dword ptr [ebp-4]
 004F3DE2    mov         dword ptr [edx+18],eax;TDockZone.FPrevSibling:TDockZone
 004F3DE5    mov         eax,dword ptr [ebp-4]
 004F3DE8    mov         dword ptr [eax+14],ebx;TDockZone.FParentZone:TDockZone
 004F3DEB    mov         dword ptr [esi+64],ebx;TDockTree.FTopZone:TDockZone
 004F3DEE    push        esi
 004F3DEF    push        4F50D8
 004F3DF4    mov         edx,dword ptr [ebx+8];TDockZone.FChildZones:TDockZone
 004F3DF7    mov         eax,esi
 004F3DF9    call        TDockTree.ForEachAt
>004F3DFE    jmp         004F3E6E
 004F3E00    mov         eax,dword ptr [ebp-4]
 004F3E03    mov         dword ptr [ebx+8],eax;TDockZone.FChildZones:TDockZone
 004F3E06    mov         eax,dword ptr [esi+64];TDockTree.FTopZone:TDockZone
 004F3E09    mov         dword ptr [eax+14],ebx;TDockZone.FParentZone:TDockZone
 004F3E0C    mov         edx,dword ptr [ebp-4]
 004F3E0F    mov         dword ptr [eax+18],edx;TDockZone.FPrevSibling:TDockZone
 004F3E12    mov         edx,dword ptr [ebp-4]
 004F3E15    mov         dword ptr [edx+0C],eax;TDockZone.FNextSibling:TDockZone
 004F3E18    mov         eax,dword ptr [ebp-4]
 004F3E1B    mov         dword ptr [eax+14],ebx;TDockZone.FParentZone:TDockZone
 004F3E1E    mov         dword ptr [esi+64],ebx;TDockTree.FTopZone:TDockZone
 004F3E21    push        esi
 004F3E22    push        4F50D8
 004F3E27    mov         edx,dword ptr [ebx+8];TDockZone.FChildZones:TDockZone
 004F3E2A    mov         eax,esi
 004F3E2C    call        TDockTree.ForEachAt
 004F3E31    mov         eax,dword ptr [esi+64];TDockTree.FTopZone:TDockZone
 004F3E34    call        TDockZone.GetZoneLimit
 004F3E39    sar         eax,1
>004F3E3B    jns         004F3E40
 004F3E3D    adc         eax,0
 004F3E40    mov         dword ptr [esi+4C],eax;TDockTree.FShiftBy:Integer
 004F3E43    push        esi
 004F3E44    push        4F55C4
 004F3E49    mov         edx,dword ptr [ebx+8];TDockZone.FChildZones:TDockZone
 004F3E4C    mov         eax,esi
 004F3E4E    call        TDockTree.ForEachAt
 004F3E53    mov         edi,dword ptr [ebp-4]
 004F3E56    mov         eax,dword ptr [esi+64];TDockTree.FTopZone:TDockZone
 004F3E59    call        TDockZone.GetZoneLimit
 004F3E5E    sar         eax,1
>004F3E60    jns         004F3E65
 004F3E62    adc         eax,0
 004F3E65    mov         dword ptr [ebp-0C],eax
 004F3E68    mov         eax,dword ptr [ebp-0C]
 004F3E6B    mov         dword ptr [edi+20],eax;TDockZone.FZoneLimit:Integer
 004F3E6E    push        esi
 004F3E6F    push        4F5710;TDockTree.UpdateZone
 004F3E74    xor         edx,edx
 004F3E76    mov         eax,esi
 004F3E78    call        TDockTree.ForEachAt
>004F3E7D    jmp         004F3EFC
 004F3E7F    mov         dword ptr [ebp-10],ebx
 004F3E82    mov         eax,edi
 004F3E84    call        TDockZone.GetZoneLimit
 004F3E89    mov         dword ptr [ebp-14],eax
 004F3E8C    mov         eax,dword ptr [ebp-10]
 004F3E8F    mov         edx,dword ptr [ebp-14]
 004F3E92    mov         dword ptr [eax+20],edx;TDockZone.FZoneLimit:Integer
 004F3E95    mov         eax,dword ptr [edi+14];TDockZone.FParentZone:TDockZone
 004F3E98    mov         dword ptr [ebx+14],eax;TDockZone.FParentZone:TDockZone
 004F3E9B    mov         eax,dword ptr [edi+18];TDockZone.FPrevSibling:TDockZone
 004F3E9E    mov         dword ptr [ebx+18],eax;TDockZone.FPrevSibling:TDockZone
 004F3EA1    test        eax,eax
>004F3EA3    je          004F3EA8
 004F3EA5    mov         dword ptr [eax+0C],ebx;TDockZone.FNextSibling:TDockZone
 004F3EA8    mov         eax,dword ptr [edi+0C];TDockZone.FNextSibling:TDockZone
 004F3EAB    mov         dword ptr [ebx+0C],eax;TDockZone.FNextSibling:TDockZone
 004F3EAE    test        eax,eax
>004F3EB0    je          004F3EB5
 004F3EB2    mov         dword ptr [eax+18],ebx;TDockZone.FPrevSibling:TDockZone
 004F3EB5    mov         eax,dword ptr [ebx+14];TDockZone.FParentZone:TDockZone
 004F3EB8    cmp         edi,dword ptr [eax+8];TDockZone.FChildZones:TDockZone
>004F3EBB    jne         004F3EC0
 004F3EBD    mov         dword ptr [eax+8],ebx;TDockZone.FChildZones:TDockZone
 004F3EC0    mov         eax,dword ptr [ebp-4]
 004F3EC3    mov         dword ptr [eax+14],ebx;TDockZone.FParentZone:TDockZone
 004F3EC6    mov         dword ptr [edi+14],ebx;TDockZone.FParentZone:TDockZone
 004F3EC9    cmp         byte ptr [ebp+8],0
>004F3ECD    je          004F3EE5
 004F3ECF    mov         dword ptr [ebx+8],edi;TDockZone.FChildZones:TDockZone
 004F3ED2    xor         eax,eax
 004F3ED4    mov         dword ptr [edi+18],eax;TDockZone.FPrevSibling:TDockZone
 004F3ED7    mov         eax,dword ptr [ebp-4]
 004F3EDA    mov         dword ptr [edi+0C],eax;TDockZone.FNextSibling:TDockZone
 004F3EDD    mov         eax,dword ptr [ebp-4]
 004F3EE0    mov         dword ptr [eax+18],edi;TDockZone.FPrevSibling:TDockZone
>004F3EE3    jmp         004F3EFC
 004F3EE5    mov         eax,dword ptr [ebp-4]
 004F3EE8    mov         dword ptr [ebx+8],eax;TDockZone.FChildZones:TDockZone
 004F3EEB    mov         eax,dword ptr [ebp-4]
 004F3EEE    mov         dword ptr [edi+18],eax;TDockZone.FPrevSibling:TDockZone
 004F3EF1    xor         eax,eax
 004F3EF3    mov         dword ptr [edi+0C],eax;TDockZone.FNextSibling:TDockZone
 004F3EF6    mov         eax,dword ptr [ebp-4]
 004F3EF9    mov         dword ptr [eax+0C],edi;TDockZone.FNextSibling:TDockZone
 004F3EFC    mov         eax,ebx
 004F3EFE    call        TDockZone.ResetChildren
 004F3F03    mov         eax,ebx
 004F3F05    call        TDockZone.ResetZoneLimits
 004F3F0A    push        esi
 004F3F0B    push        4F5710;TDockTree.UpdateZone
 004F3F10    xor         edx,edx
 004F3F12    mov         eax,esi
 004F3F14    call        TDockTree.ForEachAt
 004F3F19    pop         edi
 004F3F1A    pop         esi
 004F3F1B    pop         ebx
 004F3F1C    mov         esp,ebp
 004F3F1E    pop         ebp
 004F3F1F    ret         8
end;*}

//004F3F24
procedure TDockTree.InsertSibling(NewZone:TDockZone; SiblingZone:TDockZone; InsertLast:Boolean);
begin
{*
 004F3F24    push        ebp
 004F3F25    mov         ebp,esp
 004F3F27    push        ebx
 004F3F28    mov         ebx,ecx
 004F3F2A    mov         ecx,dword ptr [ebp+8]
 004F3F2D    test        ebx,ebx
>004F3F2F    jne         004F3F46
 004F3F31    mov         eax,dword ptr [eax+64]
 004F3F34    mov         ebx,dword ptr [eax+8]
 004F3F37    test        cl,cl
>004F3F39    je          004F3F46
>004F3F3B    jmp         004F3F3F
 004F3F3D    mov         ebx,eax
 004F3F3F    mov         eax,dword ptr [ebx+0C]
 004F3F42    test        eax,eax
>004F3F44    jne         004F3F3D
 004F3F46    test        cl,cl
>004F3F48    je          004F3F65
 004F3F4A    mov         eax,dword ptr [ebx+14]
 004F3F4D    mov         dword ptr [edx+14],eax
 004F3F50    mov         dword ptr [edx+18],ebx
 004F3F53    mov         eax,dword ptr [ebx+0C]
 004F3F56    mov         dword ptr [edx+0C],eax
 004F3F59    test        eax,eax
>004F3F5B    je          004F3F60
 004F3F5D    mov         dword ptr [eax+18],edx
 004F3F60    mov         dword ptr [ebx+0C],edx
>004F3F63    jmp         004F3F86
 004F3F65    mov         dword ptr [edx+0C],ebx
 004F3F68    mov         eax,dword ptr [ebx+18]
 004F3F6B    mov         dword ptr [edx+18],eax
 004F3F6E    test        eax,eax
>004F3F70    je          004F3F75
 004F3F72    mov         dword ptr [eax+0C],edx
 004F3F75    mov         dword ptr [ebx+18],edx
 004F3F78    mov         eax,dword ptr [ebx+14]
 004F3F7B    mov         dword ptr [edx+14],eax
 004F3F7E    cmp         ebx,dword ptr [eax+8]
>004F3F81    jne         004F3F86
 004F3F83    mov         dword ptr [eax+8],edx
 004F3F86    mov         eax,dword ptr [ebx+14]
 004F3F89    call        TDockZone.ResetChildren
 004F3F8E    mov         eax,dword ptr [ebx+14]
 004F3F91    call        TDockZone.ResetZoneLimits
 004F3F96    pop         ebx
 004F3F97    pop         ebp
 004F3F98    ret         4
*}
end;

//004F3F9C
{*function sub_004F3F9C(?:?; ?:?; ?:?):?;
begin
 004F3F9C    push        ebp
 004F3F9D    mov         ebp,esp
 004F3F9F    add         esp,0FFFFFFF4
 004F3FA2    push        ebx
 004F3FA3    push        esi
 004F3FA4    push        edi
 004F3FA5    mov         ebx,ecx
 004F3FA7    mov         esi,edx
 004F3FA9    mov         dword ptr [ebp-4],eax
 004F3FAC    mov         byte ptr [ebp-5],0
 004F3FB0    mov         edx,1
 004F3FB5    mov         eax,esi
 004F3FB7    call        TDockZone.GetTopLeft
 004F3FBC    mov         edi,eax
 004F3FBE    mov         edx,2
 004F3FC3    mov         eax,esi
 004F3FC5    call        TDockZone.GetTopLeft
 004F3FCA    mov         dword ptr [ebp-0C],eax
 004F3FCD    mov         eax,dword ptr [ebp-4]
 004F3FD0    cmp         byte ptr [eax+1C],0;TDockTree.FGrabbersOnTop:Boolean
>004F3FD4    je          004F403C
 004F3FD6    cmp         edi,dword ptr [ebx+4]
>004F3FD9    jg          004F4092
 004F3FDF    mov         eax,dword ptr [ebx+4]
 004F3FE2    mov         edx,dword ptr [ebp-4]
 004F3FE5    add         edi,dword ptr [edx+18];TDockTree.FGrabberSize:Integer
 004F3FE8    cmp         eax,edi
>004F3FEA    jg          004F4092
 004F3FF0    mov         eax,dword ptr [ebx]
 004F3FF2    cmp         eax,dword ptr [ebp-0C]
>004F3FF5    jl          004F4092
 004F3FFB    mov         edx,2
 004F4000    mov         eax,esi
 004F4002    call        TDockZone.GetHeightWidth
 004F4007    add         eax,dword ptr [ebp-0C]
 004F400A    cmp         eax,dword ptr [ebx]
>004F400C    jl          004F4092
 004F4012    mov         byte ptr [ebp-5],1
 004F4016    mov         eax,dword ptr [esi+4]
 004F4019    mov         edx,dword ptr [eax+50]
 004F401C    add         edx,dword ptr [eax+58]
 004F401F    sub         edx,0F
 004F4022    cmp         edx,dword ptr [ebx]
>004F4024    jge         004F4031
 004F4026    mov         eax,dword ptr [ebp+8]
 004F4029    mov         dword ptr [eax],14
>004F402F    jmp         004F4092
 004F4031    mov         eax,dword ptr [ebp+8]
 004F4034    mov         dword ptr [eax],2
>004F403A    jmp         004F4092
 004F403C    mov         eax,dword ptr [ebx]
 004F403E    cmp         eax,dword ptr [ebp-0C]
>004F4041    jl          004F4092
 004F4043    mov         eax,dword ptr [ebx]
 004F4045    mov         edx,dword ptr [ebp-4]
 004F4048    mov         edx,dword ptr [edx+18];TDockTree.FGrabberSize:Integer
 004F404B    add         edx,dword ptr [ebp-0C]
 004F404E    cmp         eax,edx
>004F4050    jg          004F4092
 004F4052    cmp         edi,dword ptr [ebx+4]
>004F4055    jg          004F4092
 004F4057    mov         edx,1
 004F405C    mov         eax,esi
 004F405E    call        TDockZone.GetHeightWidth
 004F4063    add         edi,eax
 004F4065    cmp         edi,dword ptr [ebx+4]
>004F4068    jl          004F4092
 004F406A    mov         byte ptr [ebp-5],1
 004F406E    mov         eax,dword ptr [ebx+4]
 004F4071    mov         edx,dword ptr [esi+4]
 004F4074    mov         edx,dword ptr [edx+54]
 004F4077    add         edx,0F
 004F407A    cmp         eax,edx
>004F407C    jge         004F4089
 004F407E    mov         eax,dword ptr [ebp+8]
 004F4081    mov         dword ptr [eax],14
>004F4087    jmp         004F4092
 004F4089    mov         eax,dword ptr [ebp+8]
 004F408C    mov         dword ptr [eax],2
 004F4092    movzx       eax,byte ptr [ebp-5]
 004F4096    pop         edi
 004F4097    pop         esi
 004F4098    pop         ebx
 004F4099    mov         esp,ebp
 004F409B    pop         ebp
 004F409C    ret         4
end;*}

//004F40A0
{*function sub_004F40A0(?:?; ?:?):?;
begin
 004F40A0    push        ebx
 004F40A1    push        esi
 004F40A2    push        edi
 004F40A3    push        ebp
 004F40A4    add         esp,0FFFFFFE0
 004F40A7    mov         edi,edx
 004F40A9    mov         ebp,eax
 004F40AB    mov         eax,dword ptr [ebp+14]
 004F40AE    call        TWinControl.GetControlCount
 004F40B3    mov         esi,eax
 004F40B5    dec         esi
 004F40B6    cmp         esi,0
>004F40B9    jl          004F4129
 004F40BB    mov         eax,dword ptr [ebp+14]
 004F40BE    mov         edx,esi
 004F40C0    call        TWinControl.GetControl
 004F40C5    mov         ebx,eax
 004F40C7    cmp         byte ptr [ebx+69],0;TControl.FVisible:Boolean
>004F40CB    je          004F4123
 004F40CD    mov         eax,ebx
 004F40CF    mov         edx,dword ptr ds:[4DE8CC];TWinControl
 004F40D5    call        @IsClass
 004F40DA    test        al,al
>004F40DC    je          004F40E7
 004F40DE    cmp         byte ptr [ebx+205],0
>004F40E5    je          004F4123
 004F40E7    mov         eax,dword ptr [edi]
 004F40E9    sub         eax,dword ptr [ebx+50]
 004F40EC    mov         edx,dword ptr [edi+4]
 004F40EF    sub         edx,dword ptr [ebx+54]
 004F40F2    mov         dword ptr [esp+8],eax
 004F40F6    mov         dword ptr [esp+0C],edx
 004F40FA    mov         eax,dword ptr [esp+8]
 004F40FE    mov         dword ptr [esp],eax
 004F4101    mov         eax,dword ptr [esp+0C]
 004F4105    mov         dword ptr [esp+4],eax
 004F4109    lea         edx,[esp+10]
 004F410D    mov         eax,ebx
 004F410F    mov         ecx,dword ptr [eax]
 004F4111    call        dword ptr [ecx+64];TControl.sub_004E6794
 004F4114    lea         eax,[esp+10]
 004F4118    mov         edx,esp
 004F411A    call        TRect.Contains
 004F411F    test        al,al
>004F4121    jne         004F412B
 004F4123    dec         esi
 004F4124    cmp         esi,0FFFFFFFF
>004F4127    jne         004F40BB
 004F4129    xor         ebx,ebx
 004F412B    mov         eax,ebx
 004F412D    add         esp,20
 004F4130    pop         ebp
 004F4131    pop         edi
 004F4132    pop         esi
 004F4133    pop         ebx
 004F4134    ret
end;*}

//004F4138
procedure DoFindZone(Zone:TDockZone);
begin
{*
 004F4138    push        ebp
 004F4139    mov         ebp,esp
 004F413B    push        ebx
 004F413C    push        esi
 004F413D    mov         ebx,eax
 004F413F    mov         eax,dword ptr [ebx+14]
 004F4142    cmp         byte ptr [eax+10],1
>004F4146    jne         004F4189
 004F4148    mov         eax,ebx
 004F414A    call        TDockZone.GetZoneLimit
 004F414F    mov         edx,dword ptr [ebp+8]
 004F4152    mov         edx,dword ptr [edx-4]
 004F4155    cmp         eax,dword ptr [edx+4]
>004F4158    jl          004F4189
 004F415A    mov         eax,ebx
 004F415C    call        TDockZone.GetZoneLimit
 004F4161    mov         edx,dword ptr [ebp+8]
 004F4164    mov         edx,dword ptr [edx-8]
 004F4167    sub         eax,dword ptr [edx+0C]
 004F416A    mov         edx,dword ptr [ebp+8]
 004F416D    mov         edx,dword ptr [edx-4]
 004F4170    cmp         eax,dword ptr [edx+4]
>004F4173    jg          004F4189
 004F4175    mov         eax,dword ptr [ebp+8]
 004F4178    mov         eax,dword ptr [eax-0C]
 004F417B    mov         dword ptr [eax],12
 004F4181    mov         eax,dword ptr [ebp+8]
 004F4184    mov         dword ptr [eax-10],ebx
>004F4187    jmp         004F41FB
 004F4189    mov         eax,dword ptr [ebx+14]
 004F418C    cmp         byte ptr [eax+10],2
>004F4190    jne         004F41D1
 004F4192    mov         eax,ebx
 004F4194    call        TDockZone.GetZoneLimit
 004F4199    mov         edx,dword ptr [ebp+8]
 004F419C    mov         edx,dword ptr [edx-4]
 004F419F    cmp         eax,dword ptr [edx]
>004F41A1    jl          004F41D1
 004F41A3    mov         eax,ebx
 004F41A5    call        TDockZone.GetZoneLimit
 004F41AA    mov         edx,dword ptr [ebp+8]
 004F41AD    mov         edx,dword ptr [edx-8]
 004F41B0    sub         eax,dword ptr [edx+0C]
 004F41B3    mov         edx,dword ptr [ebp+8]
 004F41B6    mov         edx,dword ptr [edx-4]
 004F41B9    cmp         eax,dword ptr [edx]
>004F41BB    jg          004F41D1
 004F41BD    mov         eax,dword ptr [ebp+8]
 004F41C0    mov         eax,dword ptr [eax-0C]
 004F41C3    mov         dword ptr [eax],12
 004F41C9    mov         eax,dword ptr [ebp+8]
 004F41CC    mov         dword ptr [eax-10],ebx
>004F41CF    jmp         004F41FB
 004F41D1    cmp         dword ptr [ebx+4],0
>004F41D5    je          004F41FB
 004F41D7    mov         eax,dword ptr [ebp+8]
 004F41DA    mov         eax,dword ptr [eax-0C]
 004F41DD    push        eax
 004F41DE    mov         eax,dword ptr [ebp+8]
 004F41E1    mov         ecx,dword ptr [eax-4]
 004F41E4    mov         eax,dword ptr [ebp+8]
 004F41E7    mov         eax,dword ptr [eax-8]
 004F41EA    mov         edx,ebx
 004F41EC    mov         esi,dword ptr [eax]
 004F41EE    call        dword ptr [esi+40]
 004F41F1    test        al,al
>004F41F3    je          004F41FB
 004F41F5    mov         eax,dword ptr [ebp+8]
 004F41F8    mov         dword ptr [eax-10],ebx
 004F41FB    mov         eax,dword ptr [ebp+8]
 004F41FE    cmp         dword ptr [eax-10],0
>004F4202    jne         004F4220
 004F4204    mov         eax,ebx
 004F4206    call        TDockZone.NextVisible
 004F420B    test        eax,eax
>004F420D    je          004F4220
 004F420F    mov         eax,dword ptr [ebp+8]
 004F4212    push        eax
 004F4213    mov         eax,ebx
 004F4215    call        TDockZone.NextVisible
 004F421A    call        DoFindZone
 004F421F    pop         ecx
 004F4220    mov         eax,dword ptr [ebp+8]
 004F4223    cmp         dword ptr [eax-10],0
>004F4227    jne         004F4245
 004F4229    mov         eax,ebx
 004F422B    call        TDockZone.FirstVisibleChild
 004F4230    test        eax,eax
>004F4232    je          004F4245
 004F4234    mov         eax,dword ptr [ebp+8]
 004F4237    push        eax
 004F4238    mov         eax,ebx
 004F423A    call        TDockZone.FirstVisibleChild
 004F423F    call        DoFindZone
 004F4244    pop         ecx
 004F4245    pop         esi
 004F4246    pop         ebx
 004F4247    pop         ebp
 004F4248    ret
*}
end;

//004F424C
function TDockTree.InternalHitTest(const MousePos:Types.TPoint; var HTFlag:Integer):TDockZone;
begin
{*
 004F424C    push        ebp
 004F424D    mov         ebp,esp
 004F424F    add         esp,0FFFFFFF0
 004F4252    push        ebx
 004F4253    mov         dword ptr [ebp-0C],ecx
 004F4256    mov         dword ptr [ebp-4],edx
 004F4259    mov         dword ptr [ebp-8],eax
 004F425C    xor         eax,eax
 004F425E    mov         dword ptr [ebp-10],eax
 004F4261    mov         eax,dword ptr [ebp-0C]
 004F4264    xor         edx,edx
 004F4266    mov         dword ptr [eax],edx
 004F4268    mov         edx,dword ptr [ebp-4]
 004F426B    mov         eax,dword ptr [ebp-8]
 004F426E    call        004F40A0
 004F4273    mov         ebx,eax
 004F4275    test        ebx,ebx
>004F4277    je          004F42A5
 004F4279    mov         eax,dword ptr [ebp-8]
 004F427C    mov         eax,dword ptr [eax+14]
 004F427F    cmp         eax,dword ptr [ebx+0A0]
>004F4285    jne         004F42A5
 004F4287    mov         edx,ebx
 004F4289    mov         eax,dword ptr [ebp-8]
 004F428C    call        TDockTree.FindControlZone
 004F4291    mov         dword ptr [ebp-10],eax
 004F4294    cmp         dword ptr [ebp-10],0
>004F4298    je          004F42CA
 004F429A    mov         eax,dword ptr [ebp-0C]
 004F429D    mov         dword ptr [eax],1
>004F42A3    jmp         004F42CA
 004F42A5    mov         eax,dword ptr [ebp-8]
 004F42A8    mov         eax,dword ptr [eax+64]
 004F42AB    call        TDockZone.FirstVisibleChild
 004F42B0    test        eax,eax
>004F42B2    je          004F42CA
 004F42B4    test        ebx,ebx
>004F42B6    jne         004F42CA
 004F42B8    push        ebp
 004F42B9    mov         eax,dword ptr [ebp-8]
 004F42BC    mov         eax,dword ptr [eax+64]
 004F42BF    call        TDockZone.FirstVisibleChild
 004F42C4    call        DoFindZone
 004F42C9    pop         ecx
 004F42CA    mov         eax,dword ptr [ebp-10]
 004F42CD    pop         ebx
 004F42CE    mov         esp,ebp
 004F42D0    pop         ebp
 004F42D1    ret
*}
end;

//004F42D4
{*procedure sub_004F42D4(?:?; ?:?);
begin
 004F42D4    push        ebp
 004F42D5    mov         ebp,esp
 004F42D7    push        0
 004F42D9    push        0
 004F42DB    push        0
 004F42DD    push        ebx
 004F42DE    push        esi
 004F42DF    push        edi
 004F42E0    mov         esi,eax
 004F42E2    xor         eax,eax
 004F42E4    push        ebp
 004F42E5    push        4F438D
 004F42EA    push        dword ptr fs:[eax]
 004F42ED    mov         dword ptr fs:[eax],esp
 004F42F0    mov         eax,esi
 004F42F2    call        @UStrClr
 004F42F7    lea         edx,[ebp-0C]
 004F42FA    mov         eax,dword ptr [ebp+8]
 004F42FD    mov         eax,dword ptr [eax-4]
 004F4300    mov         ecx,4
 004F4305    call        TStream.ReadBuffer
 004F430A    cmp         dword ptr [ebp-0C],0
>004F430E    jle         004F4369
 004F4310    mov         eax,dword ptr [ebp-0C]
 004F4313    push        eax
 004F4314    lea         eax,[ebp-4]
 004F4317    mov         ecx,1
 004F431C    mov         edx,dword ptr ds:[402DD4];TArray<System.Byte>
 004F4322    call        @DynArraySetLength
 004F4327    add         esp,4
 004F432A    mov         edx,dword ptr [ebp-4]
 004F432D    mov         eax,dword ptr [ebp+8]
 004F4330    mov         eax,dword ptr [eax-4]
 004F4333    mov         ecx,dword ptr [ebp-0C]
 004F4336    call        TStream.ReadBuffer
 004F433B    call        004276C0
 004F4340    mov         edi,eax
 004F4342    mov         ebx,dword ptr [ebp-4]
 004F4345    test        ebx,ebx
>004F4347    je          004F434E
 004F4349    sub         ebx,4
 004F434C    mov         ebx,dword ptr [ebx]
 004F434E    push        ebx
 004F434F    lea         eax,[ebp-8]
 004F4352    push        eax
 004F4353    xor         ecx,ecx
 004F4355    mov         edx,dword ptr [ebp-4]
 004F4358    mov         eax,edi
 004F435A    call        TEncoding.GetString
 004F435F    mov         eax,esi
 004F4361    mov         edx,dword ptr [ebp-8]
 004F4364    call        @UStrAsg
 004F4369    xor         eax,eax
 004F436B    pop         edx
 004F436C    pop         ecx
 004F436D    pop         ecx
 004F436E    mov         dword ptr fs:[eax],edx
 004F4371    push        4F4394
 004F4376    lea         eax,[ebp-8]
 004F4379    call        @UStrClr
 004F437E    lea         eax,[ebp-4]
 004F4381    mov         edx,dword ptr ds:[402DD4];TArray<System.Byte>
 004F4387    call        @DynArrayClear
 004F438C    ret
>004F438D    jmp         @HandleFinally
>004F4392    jmp         004F4376
 004F4394    pop         edi
 004F4395    pop         esi
 004F4396    pop         ebx
 004F4397    mov         esp,ebp
 004F4399    pop         ebp
 004F439A    ret
end;*}

//004F439C
{*procedure sub_004F439C(?:?);
begin
 004F439C    push        ebp
 004F439D    mov         ebp,esp
 004F439F    add         esp,0FFFFFFC0
 004F43A2    push        ebx
 004F43A3    push        esi
 004F43A4    push        edi
 004F43A5    xor         ecx,ecx
 004F43A7    mov         dword ptr [ebp-40],ecx
 004F43AA    mov         dword ptr [ebp-8],ecx
 004F43AD    mov         dword ptr [ebp-4],edx
 004F43B0    mov         dword ptr [ebp-0C],eax
 004F43B3    xor         eax,eax
 004F43B5    push        ebp
 004F43B6    push        4F46CA
 004F43BB    push        dword ptr fs:[eax]
 004F43BE    mov         dword ptr fs:[eax],esp
 004F43C1    mov         eax,dword ptr [ebp-0C]
 004F43C4    mov         edx,dword ptr [eax+64];TDockTree.FTopZone:TDockZone
 004F43C7    mov         eax,dword ptr [ebp-0C]
 004F43CA    call        TDockTree.PruneZone
 004F43CF    mov         eax,dword ptr [ebp-0C]
 004F43D2    movzx       eax,byte ptr [eax+74];TDockTree.FRelativeSizes:Boolean
 004F43D6    mov         byte ptr [ebp-21],al
 004F43D9    mov         eax,dword ptr [ebp-0C]
 004F43DC    call        004F39CC
 004F43E1    xor         eax,eax
 004F43E3    push        ebp
 004F43E4    push        4F46A5
 004F43E9    push        dword ptr fs:[eax]
 004F43EC    mov         dword ptr fs:[eax],esp
 004F43EF    lea         edx,[ebp-18]
 004F43F2    mov         ecx,4
 004F43F7    mov         eax,dword ptr [ebp-4]
 004F43FA    call        TStream.ReadBuffer
 004F43FF    cmp         dword ptr [ebp-18],40000
>004F4406    jne         004F4415
 004F4408    mov         eax,dword ptr [ebp-0C]
 004F440B    mov         byte ptr [eax+74],0;TDockTree.FRelativeSizes:Boolean
 004F440F    mov         byte ptr [ebp-22],0
>004F4413    jmp         004F4483
 004F4415    mov         eax,dword ptr [ebp-0C]
 004F4418    mov         eax,dword ptr [eax+70];TDockTree.FVersion:Integer
 004F441B    cmp         eax,dword ptr [ebp-18]
>004F441E    jne         004F4445
 004F4420    mov         eax,dword ptr [ebp-0C]
 004F4423    lea         edx,[eax+74];TDockTree.FRelativeSizes:Boolean
 004F4426    mov         ecx,1
 004F442B    mov         eax,dword ptr [ebp-4]
 004F442E    call        TStream.ReadBuffer
 004F4433    lea         edx,[ebp-22]
 004F4436    mov         ecx,1
 004F443B    mov         eax,dword ptr [ebp-4]
 004F443E    call        TStream.ReadBuffer
>004F4443    jmp         004F4483
 004F4445    mov         eax,dword ptr [ebp-0C]
 004F4448    mov         eax,dword ptr [eax+70];TDockTree.FVersion:Integer
 004F444B    mov         dword ptr [ebp-3C],eax
 004F444E    mov         byte ptr [ebp-38],0
 004F4452    mov         eax,dword ptr [ebp-18]
 004F4455    mov         dword ptr [ebp-34],eax
 004F4458    mov         byte ptr [ebp-30],0
 004F445C    lea         eax,[ebp-3C]
 004F445F    push        eax
 004F4460    push        1
 004F4462    lea         edx,[ebp-40]
 004F4465    mov         eax,[007C4440];^SResString322:TResStringRec
 004F446A    call        LoadResString
 004F446F    mov         ecx,dword ptr [ebp-40]
 004F4472    mov         dl,1
 004F4474    mov         eax,[004174D0];Exception
 004F4479    call        Exception.CreateFmt;Exception.Create
 004F447E    call        @RaiseExcept
 004F4483    lea         edx,[ebp-1C]
 004F4486    mov         ecx,4
 004F448B    mov         eax,dword ptr [ebp-4]
 004F448E    call        TStream.ReadBuffer
 004F4493    mov         eax,dword ptr [ebp-1C]
 004F4496    dec         eax
 004F4497    test        eax,eax
>004F4499    jl          004F44F5
 004F449B    inc         eax
 004F449C    mov         dword ptr [ebp-2C],eax
 004F449F    mov         dword ptr [ebp-18],0
 004F44A6    push        ebp
 004F44A7    lea         eax,[ebp-8]
 004F44AA    call        004F42D4
 004F44AF    pop         ecx
 004F44B0    cmp         dword ptr [ebp-8],0
>004F44B4    je          004F44ED
 004F44B6    lea         ecx,[ebp-10]
 004F44B9    mov         eax,dword ptr [ebp-0C]
 004F44BC    mov         eax,dword ptr [eax+14];TDockTree.FDockSite:TWinControl
 004F44BF    mov         edx,dword ptr [ebp-8]
 004F44C2    mov         si,0FFB5
 004F44C6    call        @CallDynaInst;TWinControl.ReloadDockedControl
 004F44CB    cmp         dword ptr [ebp-10],0
>004F44CF    je          004F44ED
 004F44D1    xor         edx,edx
 004F44D3    mov         eax,dword ptr [ebp-10]
 004F44D6    call        TControl.SetVisible
 004F44DB    push        0
 004F44DD    mov         eax,dword ptr [ebp-0C]
 004F44E0    mov         edx,dword ptr [eax+14];TDockTree.FDockSite:TWinControl
 004F44E3    xor         ecx,ecx
 004F44E5    mov         eax,dword ptr [ebp-10]
 004F44E8    call        TControl.ManualDock
 004F44ED    inc         dword ptr [ebp-18]
 004F44F0    dec         dword ptr [ebp-2C]
>004F44F3    jne         004F44A6
 004F44F5    mov         eax,dword ptr [ebp-0C]
 004F44F8    lea         edx,[eax+68];TDockTree.FTopXYLimit:Integer
 004F44FB    mov         ecx,4
 004F4500    mov         eax,dword ptr [ebp-4]
 004F4503    call        TStream.ReadBuffer
 004F4508    mov         eax,dword ptr [ebp-0C]
 004F450B    cmp         byte ptr [eax+74],0;TDockTree.FRelativeSizes:Boolean
>004F450F    je          004F4533
 004F4511    movzx       edx,byte ptr [ebp-22]
 004F4515    mov         eax,dword ptr [ebp-0C]
 004F4518    mov         ecx,dword ptr [eax]
 004F451A    call        dword ptr [ecx+28];TDockTree.ReferenceFromOrient
 004F451D    mov         ecx,eax
 004F451F    mov         eax,dword ptr [ebp-0C]
 004F4522    mov         edx,dword ptr [eax+68];TDockTree.FTopXYLimit:Integer
 004F4525    mov         eax,dword ptr [ebp-0C]
 004F4528    call        004F5E80
 004F452D    mov         edx,dword ptr [ebp-0C]
 004F4530    mov         dword ptr [edx+68],eax;TDockTree.FTopXYLimit:Integer
 004F4533    xor         edi,edi
 004F4535    xor         esi,esi
 004F4537    lea         edx,[ebp-14]
 004F453A    mov         ecx,4
 004F453F    mov         eax,dword ptr [ebp-4]
 004F4542    call        TStream.ReadBuffer
 004F4547    mov         eax,dword ptr [ebp-14]
 004F454A    cmp         eax,dword ptr ds:[7A1290];0xFFFFFFFF gvar_007A1290
>004F4550    je          004F4667
 004F4556    mov         ecx,dword ptr [ebp-0C]
 004F4559    mov         dl,1
 004F455B    mov         eax,[004E0F90];TDockZone
 004F4560    call        TDockZone.Create;TDockZone.Create
 004F4565    mov         ebx,eax
 004F4567    lea         edx,[ebx+10];TDockZone.FOrientation:TDockOrientation
 004F456A    mov         ecx,1
 004F456F    mov         eax,dword ptr [ebp-4]
 004F4572    call        TStream.ReadBuffer
 004F4577    lea         edx,[ebx+20];TDockZone.FZoneLimit:Integer
 004F457A    mov         ecx,4
 004F457F    mov         eax,dword ptr [ebp-4]
 004F4582    call        TStream.ReadBuffer
 004F4587    mov         eax,dword ptr [ebp-0C]
 004F458A    cmp         byte ptr [eax+74],0;TDockTree.FRelativeSizes:Boolean
>004F458E    je          004F45AC
 004F4590    movzx       edx,byte ptr [ebx+10];TDockZone.FOrientation:TDockOrientation
 004F4594    mov         eax,dword ptr [ebp-0C]
 004F4597    mov         ecx,dword ptr [eax]
 004F4599    call        dword ptr [ecx+28];TDockTree.ReferenceFromOrient
 004F459C    mov         ecx,eax
 004F459E    mov         edx,dword ptr [ebx+20];TDockZone.FZoneLimit:Integer
 004F45A1    mov         eax,dword ptr [ebp-0C]
 004F45A4    call        004F5E80
 004F45A9    mov         dword ptr [ebx+20],eax;TDockZone.FZoneLimit:Integer
 004F45AC    push        ebp
 004F45AD    lea         eax,[ebp-8]
 004F45B0    call        004F42D4
 004F45B5    pop         ecx
 004F45B6    cmp         dword ptr [ebp-8],0
>004F45BA    je          004F45D6
 004F45BC    mov         edx,dword ptr [ebp-8]
 004F45BF    mov         eax,ebx
 004F45C1    call        004F34B8
 004F45C6    test        al,al
>004F45C8    jne         004F45D6
 004F45CA    mov         eax,ebx
 004F45CC    call        TObject.Free
>004F45D1    jmp         004F4537
 004F45D6    cmp         dword ptr [ebp-14],0
>004F45DA    jne         004F45E4
 004F45DC    mov         eax,dword ptr [ebp-0C]
 004F45DF    mov         dword ptr [eax+64],ebx;TDockTree.FTopZone:TDockZone
>004F45E2    jmp         004F465D
 004F45E4    cmp         edi,dword ptr [ebp-14]
>004F45E7    jne         004F4611
 004F45E9    cmp         dword ptr [esi+18],0
>004F45ED    je          004F4603
 004F45EF    cmp         dword ptr [esi+4],0
>004F45F3    jne         004F4603
 004F45F5    mov         dword ptr [ebp-28],esi
 004F45F8    mov         esi,dword ptr [esi+18]
 004F45FB    mov         eax,dword ptr [ebp-28]
 004F45FE    call        TObject.Free
 004F4603    mov         dword ptr [esi+0C],ebx
 004F4606    mov         dword ptr [ebx+18],esi;TDockZone.FPrevSibling:TDockZone
 004F4609    mov         eax,dword ptr [esi+14]
 004F460C    mov         dword ptr [ebx+14],eax;TDockZone.FParentZone:TDockZone
>004F460F    jmp         004F465D
 004F4611    cmp         edi,dword ptr [ebp-14]
>004F4614    jge         004F461E
 004F4616    mov         dword ptr [esi+8],ebx
 004F4619    mov         dword ptr [ebx+14],esi;TDockZone.FParentZone:TDockZone
>004F461C    jmp         004F465D
 004F461E    cmp         edi,dword ptr [ebp-14]
>004F4621    jle         004F465D
 004F4623    mov         dword ptr [ebp-20],esi
 004F4626    sub         edi,dword ptr [ebp-14]
 004F4629    test        edi,edi
>004F462B    jle         004F4648
 004F462D    mov         dword ptr [ebp-2C],edi
 004F4630    mov         dword ptr [ebp-18],1
 004F4637    mov         eax,dword ptr [ebp-20]
 004F463A    mov         eax,dword ptr [eax+14]
 004F463D    mov         dword ptr [ebp-20],eax
 004F4640    inc         dword ptr [ebp-18]
 004F4643    dec         dword ptr [ebp-2C]
>004F4646    jne         004F4637
 004F4648    mov         eax,dword ptr [ebp-20]
 004F464B    mov         dword ptr [eax+0C],ebx
 004F464E    mov         eax,dword ptr [ebp-20]
 004F4651    mov         dword ptr [ebx+18],eax;TDockZone.FPrevSibling:TDockZone
 004F4654    mov         eax,dword ptr [ebp-20]
 004F4657    mov         eax,dword ptr [eax+14]
 004F465A    mov         dword ptr [ebx+14],eax;TDockZone.FParentZone:TDockZone
 004F465D    mov         edi,dword ptr [ebp-14]
 004F4660    mov         esi,ebx
>004F4662    jmp         004F4537
 004F4667    xor         eax,eax
 004F4669    pop         edx
 004F466A    pop         ecx
 004F466B    pop         ecx
 004F466C    mov         dword ptr fs:[eax],edx
 004F466F    push        4F46AC
 004F4674    mov         eax,dword ptr [ebp-0C]
 004F4677    movzx       edx,byte ptr [ebp-21]
 004F467B    mov         byte ptr [eax+74],dl;TDockTree.FRelativeSizes:Boolean
 004F467E    mov         eax,dword ptr [ebp-0C]
 004F4681    cmp         dword ptr [eax+64],0;TDockTree.FTopZone:TDockZone
>004F4685    jne         004F469C
 004F4687    mov         ecx,dword ptr [ebp-0C]
 004F468A    mov         dl,1
 004F468C    mov         eax,[004E0F90];TDockZone
 004F4691    call        TDockZone.Create;TDockZone.Create
 004F4696    mov         edx,dword ptr [ebp-0C]
 004F4699    mov         dword ptr [edx+64],eax;TDockTree.FTopZone:TDockZone
 004F469C    mov         eax,dword ptr [ebp-0C]
 004F469F    call        TDockTree.EndUpdate
 004F46A4    ret
>004F46A5    jmp         @HandleFinally
>004F46AA    jmp         004F4674
 004F46AC    xor         eax,eax
 004F46AE    pop         edx
 004F46AF    pop         ecx
 004F46B0    pop         ecx
 004F46B1    mov         dword ptr fs:[eax],edx
 004F46B4    push        4F46D1
 004F46B9    lea         eax,[ebp-40]
 004F46BC    call        @UStrClr
 004F46C1    lea         eax,[ebp-8]
 004F46C4    call        @UStrClr
 004F46C9    ret
>004F46CA    jmp         @HandleFinally
>004F46CF    jmp         004F46B9
 004F46D1    pop         edi
 004F46D2    pop         esi
 004F46D3    pop         ebx
 004F46D4    mov         esp,ebp
 004F46D6    pop         ebp
 004F46D7    ret
end;*}

//004F46D8
{*procedure sub_004F46D8(?:?; ?:?; ?:?);
begin
 004F46D8    push        ebp
 004F46D9    mov         ebp,esp
 004F46DB    add         esp,0FFFFFFE4
 004F46DE    push        ebx
 004F46DF    push        esi
 004F46E0    push        edi
 004F46E1    mov         esi,edx
 004F46E3    mov         ebx,eax
 004F46E5    mov         eax,dword ptr [ebp+8]
 004F46E8    mov         eax,dword ptr [eax-4]
 004F46EB    mov         edi,dword ptr [eax+18]
 004F46EE    mov         eax,edi
 004F46F0    add         eax,esi
 004F46F2    sub         eax,2
 004F46F5    push        eax
 004F46F6    lea         eax,[ebp-1C]
 004F46F9    push        eax
 004F46FA    mov         ecx,edi
 004F46FC    add         ecx,ebx
 004F46FE    sub         ecx,2
 004F4701    mov         edx,esi
 004F4703    mov         eax,ebx
 004F4705    call        Rect
 004F470A    call        TStyleManager.GetActiveStyle
 004F470F    mov         ebx,eax
 004F4711    mov         eax,ebx
 004F4713    mov         edx,dword ptr [eax]
 004F4715    call        dword ptr [edx+4C];TCustomStyleServices.GetEnabled
 004F4718    test        al,al
>004F471A    je          004F4758
 004F471C    call        TStyleManager.GetActiveStyle
 004F4721    mov         ebx,eax
 004F4723    lea         ecx,[ebp-0C]
 004F4726    mov         dl,34
 004F4728    mov         eax,ebx
 004F472A    mov         ebx,dword ptr [eax]
 004F472C    call        dword ptr [ebx+10C];TCustomStyleServices.GetElementDetails
 004F4732    call        TStyleManager.GetActiveStyle
 004F4737    mov         ebx,eax
 004F4739    lea         eax,[ebp-1C]
 004F473C    push        eax
 004F473D    push        0
 004F473F    mov         eax,dword ptr [ebp+8]
 004F4742    mov         eax,dword ptr [eax-8]
 004F4745    call        TCanvas.GetHandle
 004F474A    mov         edx,eax
 004F474C    lea         ecx,[ebp-0C]
 004F474F    mov         eax,ebx
 004F4751    call        TCustomStyleServices.DrawElement
>004F4756    jmp         004F4771
 004F4758    push        0
 004F475A    push        1
 004F475C    lea         eax,[ebp-1C]
 004F475F    push        eax
 004F4760    mov         eax,dword ptr [ebp+8]
 004F4763    mov         eax,dword ptr [eax-8]
 004F4766    call        TCanvas.GetHandle
 004F476B    push        eax
 004F476C    call        user32.DrawFrameControl
 004F4771    pop         edi
 004F4772    pop         esi
 004F4773    pop         ebx
 004F4774    mov         esp,ebp
 004F4776    pop         ebp
 004F4777    ret
end;*}

//004F4778
procedure DrawGrabberLine(Left:Integer; Top:Integer; Right:Integer; Bottom:Integer);
begin
{*
 004F4778    push        ebp
 004F4779    mov         ebp,esp
 004F477B    push        ecx
 004F477C    push        ebx
 004F477D    push        esi
 004F477E    push        edi
 004F477F    mov         esi,ecx
 004F4781    mov         ebx,edx
 004F4783    mov         dword ptr [ebp-4],eax
 004F4786    mov         eax,dword ptr [ebp+0C]
 004F4789    mov         eax,dword ptr [eax-8]
 004F478C    mov         eax,dword ptr [eax+44]
 004F478F    mov         edx,0FF000014
 004F4794    call        TPen.SetColor
 004F4799    mov         eax,dword ptr [ebp+0C]
 004F479C    mov         eax,dword ptr [eax-8]
 004F479F    mov         ecx,ebx
 004F47A1    mov         edx,esi
 004F47A3    mov         edi,dword ptr [eax]
 004F47A5    call        dword ptr [edi+64]
 004F47A8    mov         eax,dword ptr [ebp+0C]
 004F47AB    mov         eax,dword ptr [eax-8]
 004F47AE    mov         ecx,ebx
 004F47B0    mov         edx,dword ptr [ebp-4]
 004F47B3    mov         edi,dword ptr [eax]
 004F47B5    call        dword ptr [edi+60]
 004F47B8    mov         eax,dword ptr [ebp+0C]
 004F47BB    mov         eax,dword ptr [eax-8]
 004F47BE    mov         ecx,dword ptr [ebp+8]
 004F47C1    mov         edx,dword ptr [ebp-4]
 004F47C4    mov         edi,dword ptr [eax]
 004F47C6    call        dword ptr [edi+60]
 004F47C9    mov         eax,dword ptr [ebp+0C]
 004F47CC    mov         eax,dword ptr [eax-8]
 004F47CF    mov         eax,dword ptr [eax+44]
 004F47D2    mov         edx,0FF000010
 004F47D7    call        TPen.SetColor
 004F47DC    mov         eax,dword ptr [ebp+0C]
 004F47DF    mov         eax,dword ptr [eax-8]
 004F47E2    mov         ecx,dword ptr [ebp+8]
 004F47E5    mov         edx,esi
 004F47E7    mov         edi,dword ptr [eax]
 004F47E9    call        dword ptr [edi+60]
 004F47EC    mov         ecx,ebx
 004F47EE    dec         ecx
 004F47EF    mov         eax,dword ptr [ebp+0C]
 004F47F2    mov         eax,dword ptr [eax-8]
 004F47F5    mov         edx,esi
 004F47F7    mov         ebx,dword ptr [eax]
 004F47F9    call        dword ptr [ebx+60]
 004F47FC    pop         edi
 004F47FD    pop         esi
 004F47FE    pop         ebx
 004F47FF    pop         ecx
 004F4800    pop         ebp
 004F4801    ret         4
*}
end;

//004F4804
{*procedure sub_004F4804(?:?; ?:?; ?:?; ?:?; ?:?; ?:?);
begin
 004F4804    push        ebp
 004F4805    mov         ebp,esp
 004F4807    add         esp,0FFFFFFE4
 004F480A    push        ebx
 004F480B    push        esi
 004F480C    push        edi
 004F480D    mov         edi,ecx
 004F480F    mov         esi,edx
 004F4811    mov         ebx,eax
 004F4813    mov         eax,dword ptr [ebp+8]
 004F4816    push        eax
 004F4817    lea         eax,[ebp-1C]
 004F481A    push        eax
 004F481B    mov         ecx,dword ptr [ebp+0C]
 004F481E    mov         edx,edi
 004F4820    mov         eax,esi
 004F4822    call        Rect
 004F4827    call        TStyleManager.GetActiveStyle
 004F482C    mov         esi,eax
 004F482E    mov         edx,ebx
 004F4830    lea         ecx,[ebp-0C]
 004F4833    mov         eax,esi
 004F4835    mov         ebx,dword ptr [eax]
 004F4837    call        dword ptr [ebx+0C0];TCustomStyleServices.GetElementDetails
 004F483D    call        TStyleManager.GetActiveStyle
 004F4842    mov         ebx,eax
 004F4844    lea         eax,[ebp-1C]
 004F4847    push        eax
 004F4848    push        0
 004F484A    mov         eax,dword ptr [ebp+10]
 004F484D    mov         eax,dword ptr [eax-8]
 004F4850    call        TCanvas.GetHandle
 004F4855    mov         edx,eax
 004F4857    lea         ecx,[ebp-0C]
 004F485A    mov         eax,ebx
 004F485C    call        TCustomStyleServices.DrawElement
 004F4861    pop         edi
 004F4862    pop         esi
 004F4863    pop         ebx
 004F4864    mov         esp,ebp
 004F4866    pop         ebp
 004F4867    ret         8
end;*}

//004F486C
{*procedure sub_004F486C(?:?; ?:?);
begin
 004F486C    push        ebp
 004F486D    mov         ebp,esp
 004F486F    add         esp,0FFFFFFF8
 004F4872    push        ebx
 004F4873    push        esi
 004F4874    mov         dword ptr [ebp-8],edx
 004F4877    mov         dword ptr [ebp-4],eax
 004F487A    mov         ebx,dword ptr [ebp+8]
 004F487D    mov         eax,dword ptr [ebp-4]
 004F4880    mov         eax,dword ptr [eax+14];TDockTree.FDockSite:TWinControl
 004F4883    movzx       eax,byte ptr [eax+6D];TWinControl.FAlign:TAlign
 004F4887    dec         eax
 004F4888    sub         al,2
>004F488A    jae         004F4923
 004F4890    push        ebp
 004F4891    mov         edx,dword ptr [ebx+4]
 004F4894    inc         edx
 004F4895    mov         eax,dword ptr [ebx]
 004F4897    inc         eax
 004F4898    call        004F46D8
 004F489D    pop         ecx
 004F489E    call        TStyleManager.GetActiveStyle
 004F48A3    mov         esi,eax
 004F48A5    mov         eax,esi
 004F48A7    mov         edx,dword ptr [eax]
 004F48A9    call        dword ptr [edx+4C];TCustomStyleServices.GetEnabled
 004F48AC    test        al,al
>004F48AE    je          004F48DA
 004F48B0    push        ebp
 004F48B1    mov         eax,dword ptr [ebx]
 004F48B3    mov         edx,eax
 004F48B5    add         edx,0A
 004F48B8    push        edx
 004F48B9    mov         edx,dword ptr [ebx+0C]
 004F48BC    sub         edx,2
 004F48BF    push        edx
 004F48C0    mov         ecx,dword ptr [ebx+4]
 004F48C3    mov         edx,dword ptr [ebp-4]
 004F48C6    add         ecx,dword ptr [edx+18];TDockTree.FGrabberSize:Integer
 004F48C9    inc         ecx
 004F48CA    mov         edx,eax
 004F48CC    inc         edx
 004F48CD    mov         al,3
 004F48CF    call        004F4804
 004F48D4    pop         ecx
>004F48D5    jmp         004F49BF
 004F48DA    push        ebp
 004F48DB    mov         edx,dword ptr [ebx+0C]
 004F48DE    sub         edx,2
 004F48E1    push        edx
 004F48E2    mov         edx,dword ptr [ebx+4]
 004F48E5    mov         ecx,dword ptr [ebp-4]
 004F48E8    add         edx,dword ptr [ecx+18]
 004F48EB    inc         edx
 004F48EC    mov         eax,dword ptr [ebx]
 004F48EE    mov         ecx,eax
 004F48F0    add         ecx,5
 004F48F3    add         eax,3
 004F48F6    call        DrawGrabberLine
 004F48FB    pop         ecx
 004F48FC    push        ebp
 004F48FD    mov         edx,dword ptr [ebx+0C]
 004F4900    sub         edx,2
 004F4903    push        edx
 004F4904    mov         edx,dword ptr [ebx+4]
 004F4907    mov         ecx,dword ptr [ebp-4]
 004F490A    add         edx,dword ptr [ecx+18]
 004F490D    inc         edx
 004F490E    mov         eax,dword ptr [ebx]
 004F4910    mov         ecx,eax
 004F4912    add         ecx,8
 004F4915    add         eax,6
 004F4918    call        DrawGrabberLine
 004F491D    pop         ecx
>004F491E    jmp         004F49BF
 004F4923    push        ebp
 004F4924    mov         eax,dword ptr [ebx+8]
 004F4927    mov         edx,dword ptr [ebp-4]
 004F492A    sub         eax,dword ptr [edx+18]
 004F492D    inc         eax
 004F492E    mov         edx,dword ptr [ebx+4]
 004F4931    inc         edx
 004F4932    call        004F46D8
 004F4937    pop         ecx
 004F4938    call        TStyleManager.GetActiveStyle
 004F493D    mov         esi,eax
 004F493F    mov         eax,esi
 004F4941    mov         edx,dword ptr [eax]
 004F4943    call        dword ptr [edx+4C];TCustomStyleServices.GetEnabled
 004F4946    test        al,al
>004F4948    je          004F4973
 004F494A    push        ebp
 004F494B    mov         edx,dword ptr [ebx+8]
 004F494E    mov         ecx,dword ptr [ebp-4]
 004F4951    sub         edx,dword ptr [ecx+18]
 004F4954    sub         edx,2
 004F4957    push        edx
 004F4958    mov         eax,dword ptr [ebx+4]
 004F495B    mov         edx,eax
 004F495D    add         edx,0A
 004F4960    push        edx
 004F4961    mov         ecx,eax
 004F4963    inc         ecx
 004F4964    mov         edx,dword ptr [ebx]
 004F4966    add         edx,2
 004F4969    mov         al,2
 004F496B    call        004F4804
 004F4970    pop         ecx
>004F4971    jmp         004F49BF
 004F4973    push        ebp
 004F4974    mov         eax,dword ptr [ebx+4]
 004F4977    mov         edx,eax
 004F4979    add         edx,5
 004F497C    push        edx
 004F497D    mov         ecx,dword ptr [ebx+8]
 004F4980    mov         edx,dword ptr [ebp-4]
 004F4983    sub         ecx,dword ptr [edx+18]
 004F4986    sub         ecx,2
 004F4989    mov         edx,eax
 004F498B    add         edx,3
 004F498E    mov         eax,dword ptr [ebx]
 004F4990    add         eax,2
 004F4993    call        DrawGrabberLine
 004F4998    pop         ecx
 004F4999    push        ebp
 004F499A    mov         eax,dword ptr [ebx+4]
 004F499D    mov         edx,eax
 004F499F    add         edx,8
 004F49A2    push        edx
 004F49A3    mov         ecx,dword ptr [ebx+8]
 004F49A6    mov         edx,dword ptr [ebp-4]
 004F49A9    sub         ecx,dword ptr [edx+18]
 004F49AC    sub         ecx,2
 004F49AF    mov         edx,eax
 004F49B1    add         edx,6
 004F49B4    mov         eax,dword ptr [ebx]
 004F49B6    add         eax,2
 004F49B9    call        DrawGrabberLine
 004F49BE    pop         ecx
 004F49BF    pop         esi
 004F49C0    pop         ebx
 004F49C1    pop         ecx
 004F49C2    pop         ecx
 004F49C3    pop         ebp
 004F49C4    ret         4
end;*}

//004F49C8
procedure TDockTree.PaintSite(DC:HDC);
begin
{*
 004F49C8    push        ebp
 004F49C9    mov         ebp,esp
 004F49CB    add         esp,0FFFFFFE4
 004F49CE    push        ebx
 004F49CF    push        esi
 004F49D0    push        edi
 004F49D1    mov         ebx,edx
 004F49D3    mov         esi,eax
 004F49D5    mov         dl,1
 004F49D7    mov         eax,[004D9044];TControlCanvas
 004F49DC    call        TCanvas.Create;TControlCanvas.Create
 004F49E1    mov         dword ptr [ebp-4],eax
 004F49E4    xor         eax,eax
 004F49E6    push        ebp
 004F49E7    push        4F4AEC
 004F49EC    push        dword ptr fs:[eax]
 004F49EF    mov         dword ptr fs:[eax],esp
 004F49F2    mov         edx,dword ptr [esi+14];TDockTree.FDockSite:TWinControl
 004F49F5    mov         eax,dword ptr [ebp-4]
 004F49F8    call        TControlCanvas.SetControl
 004F49FD    mov         eax,dword ptr [ebp-4]
 004F4A00    call        TCustomCanvas.Lock
 004F4A05    xor         eax,eax
 004F4A07    push        ebp
 004F4A08    push        4F4ACF
 004F4A0D    push        dword ptr fs:[eax]
 004F4A10    mov         dword ptr fs:[eax],esp
 004F4A13    mov         edx,ebx
 004F4A15    mov         eax,dword ptr [ebp-4]
 004F4A18    call        TCanvas.SetHandle
 004F4A1D    xor         eax,eax
 004F4A1F    push        ebp
 004F4A20    push        4F4AB2
 004F4A25    push        dword ptr fs:[eax]
 004F4A28    mov         dword ptr fs:[eax],esp
 004F4A2B    mov         eax,dword ptr [esi+14];TDockTree.FDockSite:TWinControl
 004F4A2E    call        TWinControl.GetControlCount
 004F4A33    dec         eax
 004F4A34    test        eax,eax
>004F4A36    jl          004F4A9A
 004F4A38    inc         eax
 004F4A39    mov         dword ptr [ebp-0C],eax
 004F4A3C    mov         dword ptr [ebp-8],0
 004F4A43    mov         eax,dword ptr [esi+14];TDockTree.FDockSite:TWinControl
 004F4A46    mov         edx,dword ptr [ebp-8]
 004F4A49    call        TWinControl.GetControl
 004F4A4E    mov         ebx,eax
 004F4A50    cmp         byte ptr [ebx+69],0;TControl.FVisible:Boolean
>004F4A54    je          004F4A92
 004F4A56    mov         eax,dword ptr [ebx+0A0];TControl.FHostDockSite:TWinControl
 004F4A5C    cmp         eax,dword ptr [esi+14];TDockTree.FDockSite:TWinControl
>004F4A5F    jne         004F4A92
 004F4A61    lea         edx,[ebp-1C]
 004F4A64    mov         eax,ebx
 004F4A66    call        TControl.GetBoundsRect
 004F4A6B    lea         ecx,[ebp-1C]
 004F4A6E    mov         edx,ebx
 004F4A70    mov         eax,esi
 004F4A72    mov         edi,dword ptr [eax]
 004F4A74    call        dword ptr [edi];TDockTree.sub_004F39B4
 004F4A76    lea         ecx,[ebp-1C]
 004F4A79    mov         edx,ebx
 004F4A7B    mov         eax,esi
 004F4A7D    mov         edi,dword ptr [eax]
 004F4A7F    call        dword ptr [edi+4];TDockTree.sub_004F5F0C
 004F4A82    lea         eax,[ebp-1C]
 004F4A85    push        eax
 004F4A86    mov         ecx,ebx
 004F4A88    mov         edx,dword ptr [ebp-4]
 004F4A8B    mov         eax,esi
 004F4A8D    mov         ebx,dword ptr [eax]
 004F4A8F    call        dword ptr [ebx+20];TDockTree.sub_004F486C
 004F4A92    inc         dword ptr [ebp-8]
 004F4A95    dec         dword ptr [ebp-0C]
>004F4A98    jne         004F4A43
 004F4A9A    xor         eax,eax
 004F4A9C    pop         edx
 004F4A9D    pop         ecx
 004F4A9E    pop         ecx
 004F4A9F    mov         dword ptr fs:[eax],edx
 004F4AA2    push        4F4AB9
 004F4AA7    xor         edx,edx
 004F4AA9    mov         eax,dword ptr [ebp-4]
 004F4AAC    call        TCanvas.SetHandle
 004F4AB1    ret
>004F4AB2    jmp         @HandleFinally
>004F4AB7    jmp         004F4AA7
 004F4AB9    xor         eax,eax
 004F4ABB    pop         edx
 004F4ABC    pop         ecx
 004F4ABD    pop         ecx
 004F4ABE    mov         dword ptr fs:[eax],edx
 004F4AC1    push        4F4AD6
 004F4AC6    mov         eax,dword ptr [ebp-4]
 004F4AC9    call        TCustomCanvas.Unlock
 004F4ACE    ret
>004F4ACF    jmp         @HandleFinally
>004F4AD4    jmp         004F4AC6
 004F4AD6    xor         eax,eax
 004F4AD8    pop         edx
 004F4AD9    pop         ecx
 004F4ADA    pop         ecx
 004F4ADB    mov         dword ptr fs:[eax],edx
 004F4ADE    push        4F4AF3
 004F4AE3    mov         eax,dword ptr [ebp-4]
 004F4AE6    call        TObject.Free
 004F4AEB    ret
>004F4AEC    jmp         @HandleFinally
>004F4AF1    jmp         004F4AE3
 004F4AF3    pop         edi
 004F4AF4    pop         esi
 004F4AF5    pop         ebx
 004F4AF6    mov         esp,ebp
 004F4AF8    pop         ebp
 004F4AF9    ret
*}
end;

//004F4AFC
{*procedure sub_004F4AFC(?:?; ?:?; ?:?; ?:?);
begin
 004F4AFC    push        ebp
 004F4AFD    mov         ebp,esp
 004F4AFF    add         esp,0FFFFFFE4
 004F4B02    push        ebx
 004F4B03    push        esi
 004F4B04    push        edi
 004F4B05    mov         ebx,ecx
 004F4B07    mov         esi,eax
 004F4B09    mov         eax,dword ptr [esi+14];TDockTree.FDockSite:TWinControl
 004F4B0C    call        004EE690
 004F4B11    mov         edi,eax
 004F4B13    test        ebx,ebx
>004F4B15    je          004F4B29
 004F4B17    cmp         byte ptr [ebx+9C],0
>004F4B1E    je          004F4B29
 004F4B20    cmp         edi,2
>004F4B23    jge         004F4BD0
 004F4B29    mov         eax,dword ptr [esi+14];TDockTree.FDockSite:TWinControl
 004F4B2C    call        TControl.GetClientHeight
 004F4B31    push        eax
 004F4B32    lea         eax,[ebp-1C]
 004F4B35    push        eax
 004F4B36    mov         eax,dword ptr [esi+14];TDockTree.FDockSite:TWinControl
 004F4B39    call        TControl.GetClientWidth
 004F4B3E    mov         ecx,eax
 004F4B40    xor         edx,edx
 004F4B42    xor         eax,eax
 004F4B44    call        Rect
 004F4B49    mov         eax,dword ptr [ebp+8]
 004F4B4C    push        esi
 004F4B4D    push        edi
 004F4B4E    lea         esi,[ebp-1C]
 004F4B51    mov         edi,eax
 004F4B53    movs        dword ptr [edi],dword ptr [esi]
 004F4B54    movs        dword ptr [edi],dword ptr [esi]
 004F4B55    movs        dword ptr [edi],dword ptr [esi]
 004F4B56    movs        dword ptr [edi],dword ptr [esi]
 004F4B57    pop         edi
 004F4B58    pop         esi
 004F4B59    test        edi,edi
>004F4B5B    jle         004F4C4E
 004F4B61    movzx       eax,byte ptr [ebp+0C]
 004F4B65    dec         al
>004F4B67    je          004F4BA6
 004F4B69    dec         al
>004F4B6B    je          004F4BBB
 004F4B6D    dec         al
>004F4B6F    je          004F4B7A
 004F4B71    dec         al
>004F4B73    je          004F4B8F
>004F4B75    jmp         004F4C4E
 004F4B7A    mov         eax,dword ptr [ebp+8]
 004F4B7D    mov         edx,dword ptr [eax+8]
 004F4B80    sar         edx,1
>004F4B82    jns         004F4B87
 004F4B84    adc         edx,0
 004F4B87    mov         dword ptr [eax+8],edx
>004F4B8A    jmp         004F4C4E
 004F4B8F    mov         eax,dword ptr [ebp+8]
 004F4B92    mov         eax,dword ptr [eax+8]
 004F4B95    sar         eax,1
>004F4B97    jns         004F4B9C
 004F4B99    adc         eax,0
 004F4B9C    mov         edx,dword ptr [ebp+8]
 004F4B9F    mov         dword ptr [edx],eax
>004F4BA1    jmp         004F4C4E
 004F4BA6    mov         eax,dword ptr [ebp+8]
 004F4BA9    mov         edx,dword ptr [eax+0C]
 004F4BAC    sar         edx,1
>004F4BAE    jns         004F4BB3
 004F4BB0    adc         edx,0
 004F4BB3    mov         dword ptr [eax+0C],edx
>004F4BB6    jmp         004F4C4E
 004F4BBB    mov         eax,dword ptr [ebp+8]
 004F4BBE    mov         eax,dword ptr [eax+0C]
 004F4BC1    sar         eax,1
>004F4BC3    jns         004F4BC8
 004F4BC5    adc         eax,0
 004F4BC8    mov         edx,dword ptr [ebp+8]
 004F4BCB    mov         dword ptr [edx+4],eax
>004F4BCE    jmp         004F4C4E
 004F4BD0    mov         eax,dword ptr [ebx+50]
 004F4BD3    mov         dword ptr [ebp-4],eax
 004F4BD6    mov         eax,dword ptr [ebx+54]
 004F4BD9    mov         dword ptr [ebp-8],eax
 004F4BDC    mov         eax,dword ptr [ebx+58]
 004F4BDF    mov         edi,eax
 004F4BE1    mov         edx,dword ptr [ebx+5C]
 004F4BE4    mov         dword ptr [ebp-0C],edx
 004F4BE7    movzx       edx,byte ptr [ebp+0C]
 004F4BEB    add         dl,0FD
 004F4BEE    sub         dl,2
>004F4BF1    jae         004F4BFE
 004F4BF3    mov         edi,eax
 004F4BF5    sar         edi,1
>004F4BF7    jns         004F4C14
 004F4BF9    adc         edi,0
>004F4BFC    jmp         004F4C14
 004F4BFE    movzx       eax,byte ptr [ebp+0C]
 004F4C02    dec         eax
 004F4C03    sub         al,2
>004F4C05    jae         004F4C14
 004F4C07    mov         eax,dword ptr [ebx+5C]
 004F4C0A    sar         eax,1
>004F4C0C    jns         004F4C11
 004F4C0E    adc         eax,0
 004F4C11    mov         dword ptr [ebp-0C],eax
 004F4C14    movzx       eax,byte ptr [ebp+0C]
 004F4C18    sub         al,2
>004F4C1A    je          004F4C25
 004F4C1C    sub         al,2
>004F4C1E    jne         004F4C2B
 004F4C20    add         dword ptr [ebp-4],edi
>004F4C23    jmp         004F4C2B
 004F4C25    mov         eax,dword ptr [ebp-0C]
 004F4C28    add         dword ptr [ebp-8],eax
 004F4C2B    mov         eax,dword ptr [ebp-0C]
 004F4C2E    push        eax
 004F4C2F    lea         eax,[ebp-1C]
 004F4C32    push        eax
 004F4C33    mov         ecx,edi
 004F4C35    mov         edx,dword ptr [ebp-8]
 004F4C38    mov         eax,dword ptr [ebp-4]
 004F4C3B    call        Bounds
 004F4C40    mov         eax,dword ptr [ebp+8]
 004F4C43    push        esi
 004F4C44    lea         esi,[ebp-1C]
 004F4C47    mov         edi,eax
 004F4C49    movs        dword ptr [edi],dword ptr [esi]
 004F4C4A    movs        dword ptr [edi],dword ptr [esi]
 004F4C4B    movs        dword ptr [edi],dword ptr [esi]
 004F4C4C    movs        dword ptr [edi],dword ptr [esi]
 004F4C4D    pop         esi
 004F4C4E    push        2
 004F4C50    mov         eax,dword ptr [ebp+8]
 004F4C53    push        eax
 004F4C54    push        0
 004F4C56    mov         eax,dword ptr [esi+14];TDockTree.FDockSite:TWinControl
 004F4C59    call        TWinControl.GetHandle
 004F4C5E    push        eax
 004F4C5F    call        user32.MapWindowPoints
 004F4C64    pop         edi
 004F4C65    pop         esi
 004F4C66    pop         ebx
 004F4C67    mov         esp,ebp
 004F4C69    pop         ebp
 004F4C6A    ret         8
end;*}

//004F4C70
procedure DoPrune(Zone:TDockZone);
begin
{*
 004F4C70    push        ebp
 004F4C71    mov         ebp,esp
 004F4C73    push        ebx
 004F4C74    mov         ebx,eax
 004F4C76    mov         eax,dword ptr [ebx+0C]
 004F4C79    test        eax,eax
>004F4C7B    je          004F4C87
 004F4C7D    mov         edx,dword ptr [ebp+8]
 004F4C80    push        edx
 004F4C81    call        DoPrune
 004F4C86    pop         ecx
 004F4C87    mov         eax,dword ptr [ebx+8]
 004F4C8A    test        eax,eax
>004F4C8C    je          004F4C98
 004F4C8E    mov         edx,dword ptr [ebp+8]
 004F4C91    push        edx
 004F4C92    call        DoPrune
 004F4C97    pop         ecx
 004F4C98    mov         eax,ebx
 004F4C9A    call        TObject.Free
 004F4C9F    pop         ebx
 004F4CA0    pop         ebp
 004F4CA1    ret
*}
end;

//004F4CA4
procedure TDockTree.PruneZone(Zone:TDockZone);
begin
{*
 004F4CA4    push        ebp
 004F4CA5    mov         ebp,esp
 004F4CA7    push        ebx
 004F4CA8    push        esi
 004F4CA9    mov         ebx,edx
 004F4CAB    mov         esi,eax
 004F4CAD    test        ebx,ebx
>004F4CAF    je          004F4CF9
 004F4CB1    mov         eax,dword ptr [ebx+8]
 004F4CB4    test        eax,eax
>004F4CB6    je          004F4CBF
 004F4CB8    push        ebp
 004F4CB9    call        DoPrune
 004F4CBE    pop         ecx
 004F4CBF    mov         eax,dword ptr [ebx+18]
 004F4CC2    test        eax,eax
>004F4CC4    je          004F4CCE
 004F4CC6    mov         edx,dword ptr [ebx+0C]
 004F4CC9    mov         dword ptr [eax+0C],edx
>004F4CCC    jmp         004F4CDB
 004F4CCE    mov         eax,dword ptr [ebx+14]
 004F4CD1    test        eax,eax
>004F4CD3    je          004F4CDB
 004F4CD5    mov         edx,dword ptr [ebx+0C]
 004F4CD8    mov         dword ptr [eax+8],edx
 004F4CDB    mov         eax,dword ptr [ebx+0C]
 004F4CDE    test        eax,eax
>004F4CE0    je          004F4CE8
 004F4CE2    mov         edx,dword ptr [ebx+18]
 004F4CE5    mov         dword ptr [eax+18],edx
 004F4CE8    cmp         ebx,dword ptr [esi+64]
>004F4CEB    jne         004F4CF2
 004F4CED    xor         eax,eax
 004F4CEF    mov         dword ptr [esi+64],eax
 004F4CF2    mov         eax,ebx
 004F4CF4    call        TObject.Free
 004F4CF9    pop         esi
 004F4CFA    pop         ebx
 004F4CFB    pop         ebp
 004F4CFC    ret
*}
end;

//004F4D00
{*procedure sub_004F4D00(?:?);
begin
 004F4D00    push        ebx
 004F4D01    push        esi
 004F4D02    mov         ebx,edx
 004F4D04    mov         esi,eax
 004F4D06    mov         edx,ebx
 004F4D08    mov         eax,esi
 004F4D0A    call        TDockTree.FindControlZone
 004F4D0F    test        eax,eax
>004F4D11    je          004F4D3A
 004F4D13    cmp         eax,dword ptr [esi+38];TDockTree.FReplacementZone:TDockZone
>004F4D16    jne         004F4D1F
 004F4D18    xor         edx,edx
 004F4D1A    mov         dword ptr [eax+4],edx;TDockZone.FChildControl:TControl
>004F4D1D    jmp         004F4D28
 004F4D1F    mov         edx,eax
 004F4D21    mov         eax,esi
 004F4D23    call        004F4D40
 004F4D28    mov         byte ptr [ebx+9C],0
 004F4D2F    mov         eax,dword ptr [esi+14];TDockTree.FDockSite:TWinControl
 004F4D32    mov         edx,dword ptr [eax]
 004F4D34    call        dword ptr [edx+0A8];TWinControl.Invalidate
 004F4D3A    pop         esi
 004F4D3B    pop         ebx
 004F4D3C    ret
end;*}

//004F4D40
procedure sub_004F4D40(?:TDockTree; ?:TDockZone);
begin
{*
 004F4D40    push        ebp
 004F4D41    mov         ebp,esp
 004F4D43    xor         ecx,ecx
 004F4D45    push        ecx
 004F4D46    push        ecx
 004F4D47    push        ecx
 004F4D48    push        ecx
 004F4D49    push        ecx
 004F4D4A    push        ecx
 004F4D4B    push        ebx
 004F4D4C    push        esi
 004F4D4D    push        edi
 004F4D4E    mov         ebx,edx
 004F4D50    mov         esi,eax
 004F4D52    xor         eax,eax
 004F4D54    push        ebp
 004F4D55    push        4F4FCF
 004F4D5A    push        dword ptr fs:[eax]
 004F4D5D    mov         dword ptr fs:[eax],esp
 004F4D60    test        ebx,ebx
>004F4D62    jne         004F4D9F
 004F4D64    lea         edx,[ebp-0C]
 004F4D67    mov         eax,[007C45EC];^SResString319:TResStringRec
 004F4D6C    call        LoadResString
 004F4D71    lea         eax,[ebp-0C]
 004F4D74    push        eax
 004F4D75    lea         edx,[ebp-10]
 004F4D78    mov         eax,[007C42C8];^SResString320:TResStringRec
 004F4D7D    call        LoadResString
 004F4D82    mov         edx,dword ptr [ebp-10]
 004F4D85    pop         eax
 004F4D86    call        @UStrCat
 004F4D8B    mov         ecx,dword ptr [ebp-0C]
 004F4D8E    mov         dl,1
 004F4D90    mov         eax,[004174D0];Exception
 004F4D95    call        Exception.Create;Exception.Create
 004F4D9A    call        @RaiseExcept
 004F4D9F    cmp         dword ptr [ebx+4],0;TDockZone.FChildControl:TControl
>004F4DA3    jne         004F4DE0
 004F4DA5    lea         edx,[ebp-14]
 004F4DA8    mov         eax,[007C45EC];^SResString319:TResStringRec
 004F4DAD    call        LoadResString
 004F4DB2    lea         eax,[ebp-14]
 004F4DB5    push        eax
 004F4DB6    lea         edx,[ebp-18]
 004F4DB9    mov         eax,[007C4B50];^SResString321:TResStringRec
 004F4DBE    call        LoadResString
 004F4DC3    mov         edx,dword ptr [ebp-18]
 004F4DC6    pop         eax
 004F4DC7    call        @UStrCat
 004F4DCC    mov         ecx,dword ptr [ebp-14]
 004F4DCF    mov         dl,1
 004F4DD1    mov         eax,[004174D0];Exception
 004F4DD6    call        Exception.Create;Exception.Create
 004F4DDB    call        @RaiseExcept
 004F4DE0    mov         eax,dword ptr [ebx+14];TDockZone.FParentZone:TDockZone
 004F4DE3    call        TDockZone.GetChildCount
 004F4DE8    cmp         eax,1
>004F4DEB    jne         004F4DFE
 004F4DED    mov         eax,dword ptr [esi+64];TDockTree.FTopZone:TDockZone
 004F4DF0    xor         edx,edx
 004F4DF2    mov         dword ptr [eax+8],edx;TDockZone.FChildZones:TDockZone
 004F4DF5    mov         byte ptr [eax+10],0;TDockZone.FOrientation:TDockOrientation
>004F4DF9    jmp         004F4FAD
 004F4DFE    cmp         eax,2
>004F4E01    jne         004F4F55
 004F4E07    mov         eax,dword ptr [ebx+18];TDockZone.FPrevSibling:TDockZone
 004F4E0A    test        eax,eax
>004F4E0C    jne         004F4E13
 004F4E0E    mov         edi,dword ptr [ebx+0C];TDockZone.FNextSibling:TDockZone
>004F4E11    jmp         004F4E15
 004F4E13    mov         edi,eax
 004F4E15    cmp         dword ptr [edi+4],0;TDockZone.FChildControl:TControl
>004F4E19    je          004F4E80
 004F4E1B    mov         edx,dword ptr [esi+64];TDockTree.FTopZone:TDockZone
 004F4E1E    mov         eax,dword ptr [ebx+14];TDockZone.FParentZone:TDockZone
 004F4E21    cmp         edx,eax
>004F4E23    jne         004F4E55
 004F4E25    mov         eax,dword ptr [esi+64];TDockTree.FTopZone:TDockZone
 004F4E28    mov         dword ptr [eax+8],edi;TDockZone.FChildZones:TDockZone
 004F4E2B    xor         eax,eax
 004F4E2D    mov         dword ptr [edi+18],eax;TDockZone.FPrevSibling:TDockZone
 004F4E30    xor         eax,eax
 004F4E32    mov         dword ptr [edi+0C],eax;TDockZone.FNextSibling:TDockZone
 004F4E35    mov         dword ptr [ebp-4],edi
 004F4E38    mov         eax,dword ptr [esi+64];TDockTree.FTopZone:TDockZone
 004F4E3B    call        TDockZone.GetLimitSize
 004F4E40    mov         dword ptr [ebp-8],eax
 004F4E43    mov         eax,dword ptr [ebp-4]
 004F4E46    mov         edx,dword ptr [ebp-8]
 004F4E49    mov         dword ptr [eax+20],edx;TDockZone.FZoneLimit:Integer
 004F4E4C    mov         eax,edi
 004F4E4E    call        TDockZone.Update
>004F4E53    jmp         004F4E6B
 004F4E55    mov         byte ptr [eax+10],0;TDockZone.FOrientation:TDockOrientation
 004F4E59    mov         edx,dword ptr [edi+4];TDockZone.FChildControl:TControl
 004F4E5C    mov         dword ptr [eax+4],edx;TDockZone.FChildControl:TControl
 004F4E5F    xor         edx,edx
 004F4E61    mov         dword ptr [eax+8],edx;TDockZone.FChildZones:TDockZone
 004F4E64    mov         eax,edi
 004F4E66    call        TObject.Free
 004F4E6B    push        esi
 004F4E6C    push        4F5710;TDockTree.UpdateZone
 004F4E71    mov         edx,dword ptr [ebx+14];TDockZone.FParentZone:TDockZone
 004F4E74    mov         eax,esi
 004F4E76    call        TDockTree.ForEachAt
>004F4E7B    jmp         004F4FAD
 004F4E80    mov         eax,dword ptr [ebx+14];TDockZone.FParentZone:TDockZone
 004F4E83    cmp         eax,dword ptr [esi+64];TDockTree.FTopZone:TDockZone
>004F4E86    jne         004F4EC3
 004F4E88    mov         edx,dword ptr [esi+68];TDockTree.FTopXYLimit:Integer
 004F4E8B    mov         eax,edi
 004F4E8D    call        TDockZone.ExpandZoneLimit
 004F4E92    mov         eax,dword ptr [esi+64];TDockTree.FTopZone:TDockZone
 004F4E95    call        TDockZone.GetZoneLimit
 004F4E9A    mov         dword ptr [esi+68],eax;TDockTree.FTopXYLimit:Integer
 004F4E9D    mov         eax,dword ptr [esi+64];TDockTree.FTopZone:TDockZone
 004F4EA0    call        TObject.Free
 004F4EA5    mov         dword ptr [esi+64],edi;TDockTree.FTopZone:TDockZone
 004F4EA8    xor         eax,eax
 004F4EAA    mov         dword ptr [edi+0C],eax;TDockZone.FNextSibling:TDockZone
 004F4EAD    xor         eax,eax
 004F4EAF    mov         dword ptr [edi+18],eax;TDockZone.FPrevSibling:TDockZone
 004F4EB2    xor         eax,eax
 004F4EB4    mov         dword ptr [edi+14],eax;TDockZone.FParentZone:TDockZone
 004F4EB7    mov         eax,esi
 004F4EB9    call        TDockTree.UpdateAll
>004F4EBE    jmp         004F4FAD
 004F4EC3    mov         eax,dword ptr [edi+8];TDockZone.FChildZones:TDockZone
 004F4EC6    test        eax,eax
>004F4EC8    je          004F4F44
 004F4ECA    mov         edx,dword ptr [ebx+14];TDockZone.FParentZone:TDockZone
 004F4ECD    mov         edx,dword ptr [edx+18];TDockZone.FPrevSibling:TDockZone
 004F4ED0    mov         dword ptr [eax+18],edx;TDockZone.FPrevSibling:TDockZone
 004F4ED3    cmp         dword ptr [eax+18],0;TDockZone.FPrevSibling:TDockZone
>004F4ED7    jne         004F4EE4
 004F4ED9    mov         edx,dword ptr [ebx+14];TDockZone.FParentZone:TDockZone
 004F4EDC    mov         edx,dword ptr [edx+14];TDockZone.FParentZone:TDockZone
 004F4EDF    mov         dword ptr [edx+8],eax;TDockZone.FChildZones:TDockZone
>004F4EE2    jmp         004F4EEA
 004F4EE4    mov         edx,dword ptr [eax+18];TDockZone.FPrevSibling:TDockZone
 004F4EE7    mov         dword ptr [edx+0C],eax;TDockZone.FNextSibling:TDockZone
 004F4EEA    mov         eax,dword ptr [edi+8];TDockZone.FChildZones:TDockZone
 004F4EED    mov         edx,dword ptr [ebx+14];TDockZone.FParentZone:TDockZone
 004F4EF0    mov         edx,dword ptr [edx+14];TDockZone.FParentZone:TDockZone
 004F4EF3    mov         dword ptr [eax+14],edx;TDockZone.FParentZone:TDockZone
 004F4EF6    cmp         dword ptr [eax+0C],0;TDockZone.FNextSibling:TDockZone
>004F4EFA    je          004F4F0E
 004F4EFC    mov         eax,dword ptr [eax+0C];TDockZone.FNextSibling:TDockZone
 004F4EFF    mov         edx,dword ptr [ebx+14];TDockZone.FParentZone:TDockZone
 004F4F02    mov         edx,dword ptr [edx+14];TDockZone.FParentZone:TDockZone
 004F4F05    mov         dword ptr [eax+14],edx;TDockZone.FParentZone:TDockZone
 004F4F08    cmp         dword ptr [eax+0C],0;TDockZone.FNextSibling:TDockZone
>004F4F0C    jne         004F4EFC
 004F4F0E    mov         edx,dword ptr [ebx+14];TDockZone.FParentZone:TDockZone
 004F4F11    mov         edx,dword ptr [edx+0C];TDockZone.FNextSibling:TDockZone
 004F4F14    mov         dword ptr [eax+0C],edx;TDockZone.FNextSibling:TDockZone
 004F4F17    cmp         dword ptr [eax+0C],0;TDockZone.FNextSibling:TDockZone
>004F4F1B    je          004F4F23
 004F4F1D    mov         edx,dword ptr [eax+0C];TDockZone.FNextSibling:TDockZone
 004F4F20    mov         dword ptr [edx+18],eax;TDockZone.FPrevSibling:TDockZone
 004F4F23    push        esi
 004F4F24    push        4F5710;TDockTree.UpdateZone
 004F4F29    mov         edx,dword ptr [eax+14];TDockZone.FParentZone:TDockZone
 004F4F2C    mov         eax,esi
 004F4F2E    call        TDockTree.ForEachAt
 004F4F33    mov         eax,dword ptr [ebx+14];TDockZone.FParentZone:TDockZone
 004F4F36    call        TObject.Free
 004F4F3B    mov         eax,edi
 004F4F3D    call        TObject.Free
>004F4F42    jmp         004F4FAD
 004F4F44    mov         eax,dword ptr [edi+14];TDockZone.FParentZone:TDockZone
 004F4F47    xor         edx,edx
 004F4F49    mov         dword ptr [eax+8],edx;TDockZone.FChildZones:TDockZone
 004F4F4C    mov         eax,edi
 004F4F4E    call        TObject.Free
>004F4F53    jmp         004F4FAD
 004F4F55    mov         eax,dword ptr [ebx+18];TDockZone.FPrevSibling:TDockZone
 004F4F58    test        eax,eax
>004F4F5A    jne         004F4F74
 004F4F5C    mov         eax,dword ptr [ebx+14];TDockZone.FParentZone:TDockZone
 004F4F5F    mov         edx,dword ptr [ebx+0C];TDockZone.FNextSibling:TDockZone
 004F4F62    mov         dword ptr [eax+8],edx;TDockZone.FChildZones:TDockZone
 004F4F65    mov         eax,dword ptr [ebx+0C];TDockZone.FNextSibling:TDockZone
 004F4F68    xor         edx,edx
 004F4F6A    mov         dword ptr [eax+18],edx;TDockZone.FPrevSibling:TDockZone
 004F4F6D    call        TDockZone.Update
>004F4F72    jmp         004F4F9D
 004F4F74    mov         edx,dword ptr [ebx+0C];TDockZone.FNextSibling:TDockZone
 004F4F77    mov         dword ptr [eax+0C],edx;TDockZone.FNextSibling:TDockZone
 004F4F7A    mov         edx,dword ptr [ebx+0C];TDockZone.FNextSibling:TDockZone
 004F4F7D    test        edx,edx
>004F4F7F    je          004F4F84
 004F4F81    mov         dword ptr [edx+18],eax;TDockZone.FPrevSibling:TDockZone
 004F4F84    mov         eax,ebx
 004F4F86    call        TDockZone.GetZoneLimit
 004F4F8B    mov         edx,eax
 004F4F8D    mov         eax,dword ptr [ebx+18];TDockZone.FPrevSibling:TDockZone
 004F4F90    call        TDockZone.ExpandZoneLimit
 004F4F95    mov         eax,dword ptr [ebx+18];TDockZone.FPrevSibling:TDockZone
 004F4F98    call        TDockZone.Update
 004F4F9D    push        esi
 004F4F9E    push        4F5710;TDockTree.UpdateZone
 004F4FA3    mov         edx,dword ptr [ebx+14];TDockZone.FParentZone:TDockZone
 004F4FA6    mov         eax,esi
 004F4FA8    call        TDockTree.ForEachAt
 004F4FAD    mov         eax,ebx
 004F4FAF    call        TObject.Free
 004F4FB4    xor         eax,eax
 004F4FB6    pop         edx
 004F4FB7    pop         ecx
 004F4FB8    pop         ecx
 004F4FB9    mov         dword ptr fs:[eax],edx
 004F4FBC    push        4F4FD6
 004F4FC1    lea         eax,[ebp-18]
 004F4FC4    mov         edx,4
 004F4FC9    call        @UStrArrayClr
 004F4FCE    ret
>004F4FCF    jmp         @HandleFinally
>004F4FD4    jmp         004F4FC1
 004F4FD6    pop         edi
 004F4FD7    pop         esi
 004F4FD8    pop         ebx
 004F4FD9    mov         esp,ebp
 004F4FDB    pop         ebp
 004F4FDC    ret
*}
end;

//004F4FE0
{*procedure sub_004F4FE0(?:?);
begin
 004F4FE0    push        ebx
 004F4FE1    push        esi
 004F4FE2    push        edi
 004F4FE3    add         esp,0FFFFFFE8
 004F4FE6    mov         ebx,edx
 004F4FE8    mov         edi,eax
 004F4FEA    mov         esi,dword ptr [edi+14];TDockTree.FDockSite:TWinControl
 004F4FED    test        byte ptr [esi+1C],1;TWinControl.FComponentState:TComponentState
>004F4FF1    jne         004F50D1
 004F4FF7    cmp         dword ptr [edi+38],0;TDockTree.FReplacementZone:TDockZone
>004F4FFB    jne         004F50D1
 004F5001    cmp         dword ptr [edi+64],0;TDockTree.FTopZone:TDockZone
>004F5005    je          004F50D1
 004F500B    mov         eax,esi
 004F500D    call        004EE690
 004F5012    test        eax,eax
>004F5014    jle         004F50D1
 004F501A    lea         edx,[esp+8]
 004F501E    mov         eax,dword ptr [edi+14];TDockTree.FDockSite:TWinControl
 004F5021    mov         ecx,dword ptr [eax]
 004F5023    call        dword ptr [ecx+64];TWinControl.GetClientRect
 004F5026    lea         edx,[esp+8]
 004F502A    mov         eax,dword ptr [edi+14];TDockTree.FDockSite:TWinControl
 004F502D    mov         ecx,dword ptr [eax]
 004F502F    call        dword ptr [ecx+0B8];TWinControl.sub_004EA530
 004F5035    test        bl,bl
>004F5037    jne         004F504D
 004F5039    lea         edx,[edi+20];TDockTree.FOldRect:TRect
 004F503C    lea         eax,[esp+8]
 004F5040    call        EqualRect
 004F5045    test        al,al
>004F5047    jne         004F50D1
 004F504D    push        edi
 004F504E    lea         esi,[esp+0C]
 004F5052    add         edi,20;TDockTree.FOldRect:TRect
 004F5055    movs        dword ptr [edi],dword ptr [esi]
 004F5056    movs        dword ptr [edi],dword ptr [esi]
 004F5057    movs        dword ptr [edi],dword ptr [esi]
 004F5058    movs        dword ptr [edi],dword ptr [esi]
 004F5059    pop         edi
 004F505A    mov         eax,dword ptr [edi+64];TDockTree.FTopZone:TDockZone
 004F505D    movzx       edx,byte ptr [eax+10];TDockZone.FOrientation:TDockOrientation
 004F5061    dec         dl
>004F5063    je          004F506B
 004F5065    dec         dl
>004F5067    je          004F5089
>004F5069    jmp         004F50A7
 004F506B    mov         edx,dword ptr [esp+10]
 004F506F    sub         edx,dword ptr [esp+8]
 004F5073    mov         dword ptr [esp],edx
 004F5076    mov         edx,dword ptr [esp]
 004F5079    mov         dword ptr [eax+20],edx;TDockZone.FZoneLimit:Integer
 004F507C    mov         eax,dword ptr [esp+14]
 004F5080    sub         eax,dword ptr [esp+0C]
 004F5084    mov         dword ptr [edi+68],eax;TDockTree.FTopXYLimit:Integer
>004F5087    jmp         004F50A7
 004F5089    mov         edx,dword ptr [esp+14]
 004F508D    sub         edx,dword ptr [esp+0C]
 004F5091    mov         dword ptr [esp+4],edx
 004F5095    mov         edx,dword ptr [esp+4]
 004F5099    mov         dword ptr [eax+20],edx;TDockZone.FZoneLimit:Integer
 004F509C    mov         eax,dword ptr [esp+10]
 004F50A0    sub         eax,dword ptr [esp+8]
 004F50A4    mov         dword ptr [edi+68],eax;TDockTree.FTopXYLimit:Integer
 004F50A7    mov         eax,dword ptr [edi+14];TDockTree.FDockSite:TWinControl
 004F50AA    call        TWinControl.GetDockClientCount
 004F50AF    test        eax,eax
>004F50B1    jle         004F50D1
 004F50B3    xor         edx,edx
 004F50B5    mov         eax,edi
 004F50B7    call        004F557C
 004F50BC    cmp         dword ptr [edi+6C],0;TDockTree.FUpdateCount:Integer
>004F50C0    jne         004F50D1
 004F50C2    push        edi
 004F50C3    push        4F5710;TDockTree.UpdateZone
 004F50C8    xor         edx,edx
 004F50CA    mov         eax,edi
 004F50CC    call        TDockTree.ForEachAt
 004F50D1    add         esp,18
 004F50D4    pop         edi
 004F50D5    pop         esi
 004F50D6    pop         ebx
 004F50D7    ret
end;*}

//004F5158
procedure WriteControlName(const ControlName:UnicodeString);
begin
{*
 004F5158    push        ebp
 004F5159    mov         ebp,esp
 004F515B    add         esp,0FFFFFFF8
 004F515E    push        ebx
 004F515F    xor         edx,edx
 004F5161    mov         dword ptr [ebp-4],edx
 004F5164    mov         ebx,eax
 004F5166    xor         eax,eax
 004F5168    push        ebp
 004F5169    push        4F51D8
 004F516E    push        dword ptr fs:[eax]
 004F5171    mov         dword ptr fs:[eax],esp
 004F5174    call        004276C0
 004F5179    lea         ecx,[ebp-4]
 004F517C    mov         edx,ebx
 004F517E    call        TEncoding.GetBytes
 004F5183    mov         eax,dword ptr [ebp-4]
 004F5186    test        eax,eax
>004F5188    je          004F518F
 004F518A    sub         eax,4
 004F518D    mov         eax,dword ptr [eax]
 004F518F    mov         dword ptr [ebp-8],eax
 004F5192    lea         edx,[ebp-8]
 004F5195    mov         eax,dword ptr [ebp+8]
 004F5198    mov         eax,dword ptr [eax-4]
 004F519B    mov         ecx,4
 004F51A0    mov         ebx,dword ptr [eax]
 004F51A2    call        dword ptr [ebx+10]
 004F51A5    cmp         dword ptr [ebp-8],0
>004F51A9    jle         004F51BC
 004F51AB    mov         edx,dword ptr [ebp-4]
 004F51AE    mov         eax,dword ptr [ebp+8]
 004F51B1    mov         eax,dword ptr [eax-4]
 004F51B4    mov         ecx,dword ptr [ebp-8]
 004F51B7    mov         ebx,dword ptr [eax]
 004F51B9    call        dword ptr [ebx+10]
 004F51BC    xor         eax,eax
 004F51BE    pop         edx
 004F51BF    pop         ecx
 004F51C0    pop         ecx
 004F51C1    mov         dword ptr fs:[eax],edx
 004F51C4    push        4F51DF
 004F51C9    lea         eax,[ebp-4]
 004F51CC    mov         edx,dword ptr ds:[402DD4];TArray<System.Byte>
 004F51D2    call        @DynArrayClear
 004F51D7    ret
>004F51D8    jmp         @HandleFinally
>004F51DD    jmp         004F51C9
 004F51DF    pop         ebx
 004F51E0    pop         ecx
 004F51E1    pop         ecx
 004F51E2    pop         ebp
 004F51E3    ret
*}
end;

//004F51E4
procedure DoSaveZone(Zone:TDockZone; Level:Integer);
begin
{*
 004F51E4    push        ebp
 004F51E5    mov         ebp,esp
 004F51E7    add         esp,0FFFFFFF0
 004F51EA    push        ebx
 004F51EB    push        esi
 004F51EC    xor         ecx,ecx
 004F51EE    mov         dword ptr [ebp-10],ecx
 004F51F1    mov         dword ptr [ebp-4],edx
 004F51F4    mov         ebx,eax
 004F51F6    xor         eax,eax
 004F51F8    push        ebp
 004F51F9    push        4F52EB
 004F51FE    push        dword ptr fs:[eax]
 004F5201    mov         dword ptr fs:[eax],esp
 004F5204    mov         eax,dword ptr [ebp+8]
 004F5207    mov         eax,dword ptr [eax-8]
 004F520A    cmp         ebx,dword ptr [eax+64]
>004F520D    je          004F521F
 004F520F    cmp         dword ptr [ebx+8],0
>004F5213    jne         004F521F
 004F5215    cmp         dword ptr [ebx+4],0
>004F5219    je          004F52AC
 004F521F    lea         edx,[ebp-4]
 004F5222    mov         eax,dword ptr [ebp+8]
 004F5225    mov         eax,dword ptr [eax-4]
 004F5228    mov         ecx,4
 004F522D    mov         esi,dword ptr [eax]
 004F522F    call        dword ptr [esi+10]
 004F5232    movzx       eax,byte ptr [ebx+10]
 004F5236    mov         dword ptr [ebp-0C],eax
 004F5239    lea         edx,[ebp-0C]
 004F523C    mov         eax,dword ptr [ebp+8]
 004F523F    mov         eax,dword ptr [eax-4]
 004F5242    mov         ecx,1
 004F5247    mov         esi,dword ptr [eax]
 004F5249    call        dword ptr [esi+10]
 004F524C    mov         eax,dword ptr [ebp+8]
 004F524F    mov         eax,dword ptr [eax-8]
 004F5252    cmp         byte ptr [eax+74],0
>004F5256    je          004F527C
 004F5258    movzx       edx,byte ptr [ebx+10]
 004F525C    mov         eax,dword ptr [ebp+8]
 004F525F    mov         eax,dword ptr [eax-8]
 004F5262    mov         ecx,dword ptr [eax]
 004F5264    call        dword ptr [ecx+28]
 004F5267    mov         ecx,eax
 004F5269    mov         eax,dword ptr [ebp+8]
 004F526C    mov         eax,dword ptr [eax-8]
 004F526F    mov         edx,dword ptr [ebx+20]
 004F5272    call        TDockTree.RelativeSize
 004F5277    mov         dword ptr [ebp-8],eax
>004F527A    jmp         004F5282
 004F527C    mov         eax,dword ptr [ebx+20]
 004F527F    mov         dword ptr [ebp-8],eax
 004F5282    lea         edx,[ebp-8]
 004F5285    mov         eax,dword ptr [ebp+8]
 004F5288    mov         eax,dword ptr [eax-4]
 004F528B    mov         ecx,4
 004F5290    mov         esi,dword ptr [eax]
 004F5292    call        dword ptr [esi+10]
 004F5295    mov         eax,dword ptr [ebp+8]
 004F5298    push        eax
 004F5299    lea         edx,[ebp-10]
 004F529C    mov         eax,ebx
 004F529E    call        TDockZone.GetControlName
 004F52A3    mov         eax,dword ptr [ebp-10]
 004F52A6    call        WriteControlName
 004F52AB    pop         ecx
 004F52AC    mov         eax,dword ptr [ebx+8]
 004F52AF    test        eax,eax
>004F52B1    je          004F52C1
 004F52B3    mov         edx,dword ptr [ebp+8]
 004F52B6    push        edx
 004F52B7    mov         edx,dword ptr [ebp-4]
 004F52BA    inc         edx
 004F52BB    call        DoSaveZone
 004F52C0    pop         ecx
 004F52C1    mov         eax,dword ptr [ebx+0C]
 004F52C4    test        eax,eax
>004F52C6    je          004F52D5
 004F52C8    mov         edx,dword ptr [ebp+8]
 004F52CB    push        edx
 004F52CC    mov         edx,dword ptr [ebp-4]
 004F52CF    call        DoSaveZone
 004F52D4    pop         ecx
 004F52D5    xor         eax,eax
 004F52D7    pop         edx
 004F52D8    pop         ecx
 004F52D9    pop         ecx
 004F52DA    mov         dword ptr fs:[eax],edx
 004F52DD    push        4F52F2
 004F52E2    lea         eax,[ebp-10]
 004F52E5    call        @UStrClr
 004F52EA    ret
>004F52EB    jmp         @HandleFinally
>004F52F0    jmp         004F52E2
 004F52F2    pop         esi
 004F52F3    pop         ebx
 004F52F4    mov         esp,ebp
 004F52F6    pop         ebp
 004F52F7    ret
*}
end;

//004F52F8
{*procedure sub_004F52F8(?:?);
begin
 004F52F8    push        ebp
 004F52F9    mov         ebp,esp
 004F52FB    add         esp,0FFFFFFE4
 004F52FE    push        ebx
 004F52FF    push        esi
 004F5300    xor         ecx,ecx
 004F5302    mov         dword ptr [ebp-1C],ecx
 004F5305    mov         dword ptr [ebp-0C],ecx
 004F5308    mov         dword ptr [ebp-4],edx
 004F530B    mov         dword ptr [ebp-8],eax
 004F530E    xor         eax,eax
 004F5310    push        ebp
 004F5311    push        4F54DA
 004F5316    push        dword ptr fs:[eax]
 004F5319    mov         dword ptr fs:[eax],esp
 004F531C    mov         eax,dword ptr [ebp-8]
 004F531F    lea         edx,[eax+70];TDockTree.FVersion:Integer
 004F5322    mov         ecx,4
 004F5327    mov         eax,dword ptr [ebp-4]
 004F532A    mov         ebx,dword ptr [eax]
 004F532C    call        dword ptr [ebx+10]
 004F532F    push        1
 004F5331    lea         eax,[ebp-0C]
 004F5334    mov         ecx,1
 004F5339    mov         edx,dword ptr ds:[4F5120];:TDockTree.:2
 004F533F    call        @DynArraySetLength
 004F5344    add         esp,4
 004F5347    mov         eax,dword ptr [ebp-8]
 004F534A    movzx       eax,byte ptr [eax+74];TDockTree.FRelativeSizes:Boolean
 004F534E    mov         edx,dword ptr [ebp-0C]
 004F5351    mov         byte ptr [edx],al
 004F5353    mov         edx,dword ptr [ebp-0C]
 004F5356    mov         ecx,1
 004F535B    mov         eax,dword ptr [ebp-4]
 004F535E    mov         ebx,dword ptr [eax]
 004F5360    call        dword ptr [ebx+10]
 004F5363    mov         eax,dword ptr [ebp-8]
 004F5366    mov         eax,dword ptr [eax+64];TDockTree.FTopZone:TDockZone
 004F5369    movzx       eax,byte ptr [eax+10];TDockZone.FOrientation:TDockOrientation
 004F536D    mov         edx,dword ptr [ebp-0C]
 004F5370    mov         byte ptr [edx],al
 004F5372    mov         edx,dword ptr [ebp-0C]
 004F5375    mov         ecx,1
 004F537A    mov         eax,dword ptr [ebp-4]
 004F537D    mov         ebx,dword ptr [eax]
 004F537F    call        dword ptr [ebx+10]
 004F5382    mov         dl,1
 004F5384    mov         eax,[0046F9A0];TStringList
 004F5389    call        TStringList.Create;TStringList.Create
 004F538E    mov         dword ptr [ebp-18],eax
 004F5391    xor         eax,eax
 004F5393    push        ebp
 004F5394    push        4F5445
 004F5399    push        dword ptr fs:[eax]
 004F539C    mov         dword ptr fs:[eax],esp
 004F539F    mov         eax,dword ptr [ebp-8]
 004F53A2    mov         eax,dword ptr [eax+14];TDockTree.FDockSite:TWinControl
 004F53A5    call        TWinControl.GetDockClientCount
 004F53AA    mov         ebx,eax
 004F53AC    dec         ebx
 004F53AD    test        ebx,ebx
>004F53AF    jl          004F53E6
 004F53B1    inc         ebx
 004F53B2    mov         dword ptr [ebp-10],0
 004F53B9    mov         eax,dword ptr [ebp-8]
 004F53BC    mov         eax,dword ptr [eax+14];TDockTree.FDockSite:TWinControl
 004F53BF    mov         edx,dword ptr [ebp-10]
 004F53C2    call        TWinControl.GetDockClients
 004F53C7    mov         esi,eax
 004F53C9    cmp         byte ptr [esi+69],0;TControl.FVisible:Boolean
>004F53CD    jne         004F53E0
 004F53CF    cmp         dword ptr [esi+8],0;TControl.FName:TComponentName
>004F53D3    je          004F53E0
 004F53D5    mov         edx,dword ptr [esi+8];TControl.FName:TComponentName
 004F53D8    mov         eax,dword ptr [ebp-18]
 004F53DB    mov         ecx,dword ptr [eax]
 004F53DD    call        dword ptr [ecx+3C];TStringList.Add
 004F53E0    inc         dword ptr [ebp-10]
 004F53E3    dec         ebx
>004F53E4    jne         004F53B9
 004F53E6    mov         eax,dword ptr [ebp-18]
 004F53E9    mov         edx,dword ptr [eax]
 004F53EB    call        dword ptr [edx+14];TStringList.GetCount
 004F53EE    mov         dword ptr [ebp-14],eax
 004F53F1    lea         edx,[ebp-14]
 004F53F4    mov         ecx,4
 004F53F9    mov         eax,dword ptr [ebp-4]
 004F53FC    mov         ebx,dword ptr [eax]
 004F53FE    call        dword ptr [ebx+10]
 004F5401    mov         ebx,dword ptr [ebp-14]
 004F5404    dec         ebx
 004F5405    test        ebx,ebx
>004F5407    jl          004F542F
 004F5409    inc         ebx
 004F540A    mov         dword ptr [ebp-10],0
 004F5411    push        ebp
 004F5412    lea         ecx,[ebp-1C]
 004F5415    mov         edx,dword ptr [ebp-10]
 004F5418    mov         eax,dword ptr [ebp-18]
 004F541B    mov         esi,dword ptr [eax]
 004F541D    call        dword ptr [esi+0C];TStringList.Get
 004F5420    mov         eax,dword ptr [ebp-1C]
 004F5423    call        WriteControlName
 004F5428    pop         ecx
 004F5429    inc         dword ptr [ebp-10]
 004F542C    dec         ebx
>004F542D    jne         004F5411
 004F542F    xor         eax,eax
 004F5431    pop         edx
 004F5432    pop         ecx
 004F5433    pop         ecx
 004F5434    mov         dword ptr fs:[eax],edx
 004F5437    push        4F544C
 004F543C    mov         eax,dword ptr [ebp-18]
 004F543F    call        TObject.Free
 004F5444    ret
>004F5445    jmp         @HandleFinally
>004F544A    jmp         004F543C
 004F544C    mov         eax,dword ptr [ebp-8]
 004F544F    cmp         byte ptr [eax+74],0;TDockTree.FRelativeSizes:Boolean
>004F5453    je          004F547C
 004F5455    mov         eax,dword ptr [ebp-8]
 004F5458    mov         eax,dword ptr [eax+64];TDockTree.FTopZone:TDockZone
 004F545B    movzx       edx,byte ptr [eax+10];TDockZone.FOrientation:TDockOrientation
 004F545F    mov         eax,dword ptr [ebp-8]
 004F5462    mov         ecx,dword ptr [eax]
 004F5464    call        dword ptr [ecx+28];TDockTree.ReferenceFromOrient
 004F5467    mov         ecx,eax
 004F5469    mov         eax,dword ptr [ebp-8]
 004F546C    mov         edx,dword ptr [eax+68];TDockTree.FTopXYLimit:Integer
 004F546F    mov         eax,dword ptr [ebp-8]
 004F5472    call        TDockTree.RelativeSize
 004F5477    mov         dword ptr [ebp-10],eax
>004F547A    jmp         004F5485
 004F547C    mov         eax,dword ptr [ebp-8]
 004F547F    mov         eax,dword ptr [eax+68];TDockTree.FTopXYLimit:Integer
 004F5482    mov         dword ptr [ebp-10],eax
 004F5485    lea         edx,[ebp-10]
 004F5488    mov         ecx,4
 004F548D    mov         eax,dword ptr [ebp-4]
 004F5490    mov         ebx,dword ptr [eax]
 004F5492    call        dword ptr [ebx+10]
 004F5495    push        ebp
 004F5496    mov         eax,dword ptr [ebp-8]
 004F5499    mov         eax,dword ptr [eax+64];TDockTree.FTopZone:TDockZone
 004F549C    xor         edx,edx
 004F549E    call        DoSaveZone
 004F54A3    pop         ecx
 004F54A4    mov         edx,7A1290;gvar_007A1290
 004F54A9    mov         ecx,4
 004F54AE    mov         eax,dword ptr [ebp-4]
 004F54B1    mov         ebx,dword ptr [eax]
 004F54B3    call        dword ptr [ebx+10]
 004F54B6    xor         eax,eax
 004F54B8    pop         edx
 004F54B9    pop         ecx
 004F54BA    pop         ecx
 004F54BB    mov         dword ptr fs:[eax],edx
 004F54BE    push        4F54E1
 004F54C3    lea         eax,[ebp-1C]
 004F54C6    call        @UStrClr
 004F54CB    lea         eax,[ebp-0C]
 004F54CE    mov         edx,dword ptr ds:[4F5120];:TDockTree.:2
 004F54D4    call        @DynArrayClear
 004F54D9    ret
>004F54DA    jmp         @HandleFinally
>004F54DF    jmp         004F54C3
 004F54E1    pop         esi
 004F54E2    pop         ebx
 004F54E3    mov         esp,ebp
 004F54E5    pop         ebp
 004F54E6    ret
end;*}

//004F54E8
{*procedure sub_004F54E8(?:TDockZone; ?:?);
begin
 004F54E8    push        ebp
 004F54E9    mov         ebp,esp
 004F54EB    add         esp,0FFFFFFF8
 004F54EE    push        ebx
 004F54EF    push        esi
 004F54F0    push        edi
 004F54F1    mov         ebx,eax
 004F54F3    test        ebx,ebx
>004F54F5    je          004F5573
 004F54F7    mov         eax,ebx
 004F54F9    call        TDockZone.NextVisible
 004F54FE    test        eax,eax
>004F5500    jne         004F5551
 004F5502    mov         eax,dword ptr [ebp+8]
 004F5505    mov         eax,dword ptr [eax-4]
 004F5508    cmp         ebx,dword ptr [eax+64]
>004F550B    je          004F5551
 004F550D    mov         eax,ebx
 004F550F    call        TDockZone.GetVisible
 004F5514    test        al,al
>004F5516    je          004F5551
 004F5518    mov         eax,dword ptr [ebp+8]
 004F551B    mov         eax,dword ptr [eax-4]
 004F551E    mov         eax,dword ptr [eax+64]
 004F5521    mov         edi,dword ptr [ebx+14]
 004F5524    cmp         eax,edi
>004F5526    jne         004F553E
 004F5528    mov         eax,ebx
 004F552A    mov         edx,dword ptr [ebp+8]
 004F552D    mov         edx,dword ptr [edx-4]
 004F5530    mov         edx,dword ptr [edx+68]
 004F5533    mov         dword ptr [ebp-4],edx
 004F5536    mov         edx,dword ptr [ebp-4]
 004F5539    mov         dword ptr [eax+20],edx
>004F553C    jmp         004F5551
 004F553E    mov         esi,ebx
 004F5540    mov         eax,dword ptr [edi+14]
 004F5543    call        TDockZone.GetZoneLimit
 004F5548    mov         dword ptr [ebp-8],eax
 004F554B    mov         eax,dword ptr [ebp-8]
 004F554E    mov         dword ptr [esi+20],eax
 004F5551    mov         eax,dword ptr [ebp+8]
 004F5554    push        eax
 004F5555    mov         eax,ebx
 004F5557    call        TDockZone.FirstVisibleChild
 004F555C    call        004F54E8
 004F5561    pop         ecx
 004F5562    mov         eax,dword ptr [ebp+8]
 004F5565    push        eax
 004F5566    mov         eax,ebx
 004F5568    call        TDockZone.NextVisible
 004F556D    call        004F54E8
 004F5572    pop         ecx
 004F5573    pop         edi
 004F5574    pop         esi
 004F5575    pop         ebx
 004F5576    pop         ecx
 004F5577    pop         ecx
 004F5578    pop         ebp
 004F5579    ret
end;*}

//004F557C
{*procedure sub_004F557C(?:TDockTree; ?:?);
begin
 004F557C    push        ebp
 004F557D    mov         ebp,esp
 004F557F    push        ecx
 004F5580    mov         dword ptr [ebp-4],eax
 004F5583    test        edx,edx
>004F5585    jne         004F5590
 004F5587    mov         eax,dword ptr [ebp-4]
 004F558A    mov         eax,dword ptr [eax+64];TDockTree.FTopZone:TDockZone
 004F558D    mov         edx,dword ptr [eax+8];TDockZone.FChildZones:TDockZone
 004F5590    push        ebp
 004F5591    mov         eax,edx
 004F5593    call        004F54E8
 004F5598    pop         ecx
 004F5599    mov         eax,dword ptr [ebp-4]
 004F559C    mov         eax,dword ptr [eax+14];TDockTree.FDockSite:TWinControl
 004F559F    mov         edx,dword ptr [eax]
 004F55A1    call        dword ptr [edx+0A8];TWinControl.Invalidate
 004F55A7    pop         ecx
 004F55A8    pop         ebp
 004F55A9    ret
end;*}

//004F55AC
procedure TDockTree.SetReplacingControl(Control:TControl);
begin
{*
 004F55AC    push        ebx
 004F55AD    push        esi
 004F55AE    mov         esi,edx
 004F55B0    mov         ebx,eax
 004F55B2    mov         edx,esi
 004F55B4    mov         eax,ebx
 004F55B6    call        TDockTree.FindControlZone
 004F55BB    mov         dword ptr [ebx+38],eax
 004F55BE    pop         esi
 004F55BF    pop         ebx
 004F55C0    ret
*}
end;

//004F55FC
procedure TDockTree.SplitterMouseDown(OnZone:TDockZone; MousePos:Types.TPoint);
begin
{*
 004F55FC    push        ebx
 004F55FD    push        esi
 004F55FE    push        edi
 004F55FF    add         esp,0FFFFFFF8
 004F5602    mov         esi,ecx
 004F5604    lea         edi,[esp]
 004F5607    movs        dword ptr [edi],dword ptr [esi]
 004F5608    movs        dword ptr [edi],dword ptr [esi]
 004F5609    mov         ebx,eax
 004F560B    mov         dword ptr [ebx+60],edx
 004F560E    mov         eax,dword ptr [ebx+14]
 004F5611    call        TWinControl.GetHandle
 004F5616    mov         edx,eax
 004F5618    mov         eax,[007CA5D4];gvar_007CA5D4
 004F561D    call        TMouse.SetCapture
 004F5622    mov         eax,dword ptr [ebx+14]
 004F5625    call        TWinControl.GetHandle
 004F562A    mov         esi,eax
 004F562C    mov         dword ptr [ebx+5C],esi
 004F562F    push        412
 004F5634    push        0
 004F5636    push        esi
 004F5637    call        user32.GetDCEx
 004F563C    mov         dword ptr [ebx+58],eax
 004F563F    mov         eax,dword ptr [esp]
 004F5642    mov         dword ptr [ebx+50],eax
 004F5645    mov         eax,dword ptr [esp+4]
 004F5649    mov         dword ptr [ebx+54],eax
 004F564C    mov         eax,ebx
 004F564E    call        TDockTree.DrawSizeSplitter
 004F5653    pop         ecx
 004F5654    pop         edx
 004F5655    pop         edi
 004F5656    pop         esi
 004F5657    pop         ebx
 004F5658    ret
*}
end;

//004F565C
procedure TDockTree.SplitterMouseUp;
begin
{*
 004F565C    push        ebx
 004F565D    add         esp,0FFFFFFF8
 004F5660    mov         ebx,eax
 004F5662    xor         edx,edx
 004F5664    mov         eax,[007CA5D4];gvar_007CA5D4
 004F5669    call        TMouse.SetCapture
 004F566E    mov         eax,ebx
 004F5670    call        TDockTree.DrawSizeSplitter
 004F5675    mov         eax,dword ptr [ebx+58]
 004F5678    push        eax
 004F5679    mov         eax,dword ptr [ebx+5C]
 004F567C    push        eax
 004F567D    call        user32.ReleaseDC
 004F5682    mov         eax,dword ptr [ebx+60]
 004F5685    mov         edx,dword ptr [eax+14]
 004F5688    cmp         byte ptr [edx+10],1
>004F568C    jne         004F56A6
 004F568E    mov         edx,dword ptr [ebx+0C]
 004F5691    sar         edx,1
>004F5693    jns         004F5698
 004F5695    adc         edx,0
 004F5698    add         edx,dword ptr [ebx+54]
 004F569B    mov         dword ptr [esp],edx
 004F569E    mov         edx,dword ptr [esp]
 004F56A1    mov         dword ptr [eax+20],edx
>004F56A4    jmp         004F56BE
 004F56A6    mov         edx,dword ptr [ebx+0C]
 004F56A9    sar         edx,1
>004F56AB    jns         004F56B0
 004F56AD    adc         edx,0
 004F56B0    add         edx,dword ptr [ebx+50]
 004F56B3    mov         dword ptr [esp+4],edx
 004F56B7    mov         edx,dword ptr [esp+4]
 004F56BB    mov         dword ptr [eax+20],edx
 004F56BE    mov         eax,dword ptr [ebx+60]
 004F56C1    mov         edx,dword ptr [eax+14]
 004F56C4    mov         eax,ebx
 004F56C6    call        004F557C
 004F56CB    push        ebx
 004F56CC    push        4F5710;TDockTree.UpdateZone
 004F56D1    mov         eax,dword ptr [ebx+60]
 004F56D4    mov         edx,dword ptr [eax+14]
 004F56D7    mov         eax,ebx
 004F56D9    call        TDockTree.ForEachAt
 004F56DE    xor         eax,eax
 004F56E0    mov         dword ptr [ebx+60],eax
 004F56E3    pop         ecx
 004F56E4    pop         edx
 004F56E5    pop         ebx
 004F56E6    ret
*}
end;

//004F56E8
procedure TDockTree.UpdateAll;
begin
{*
 004F56E8    push        ebx
 004F56E9    mov         ebx,eax
 004F56EB    cmp         dword ptr [ebx+6C],0
>004F56EF    jne         004F570C
 004F56F1    mov         eax,dword ptr [ebx+14]
 004F56F4    call        TWinControl.GetDockClientCount
 004F56F9    test        eax,eax
>004F56FB    jle         004F570C
 004F56FD    push        ebx
 004F56FE    push        4F5710;TDockTree.UpdateZone
 004F5703    xor         edx,edx
 004F5705    mov         eax,ebx
 004F5707    call        TDockTree.ForEachAt
 004F570C    pop         ebx
 004F570D    ret
*}
end;

//004F5710
procedure TDockTree.UpdateZone(Zone:TDockZone);
begin
{*
 004F5710    cmp         dword ptr [eax+6C],0
>004F5714    jne         004F571D
 004F5716    mov         eax,edx
 004F5718    call        TDockZone.Update
 004F571D    ret
*}
end;

//004F5720
{*procedure sub_004F5720(?:?);
begin
 004F5720    push        esi
 004F5721    mov         esi,eax
 004F5723    mov         eax,esi
 004F5725    mov         ecx,dword ptr [eax]
 004F5727    call        dword ptr [ecx+3C]
 004F572A    pop         esi
 004F572B    ret
end;*}

//004F572C
procedure TDockTree.DrawSizeSplitter;
begin
{*
 004F572C    push        ebx
 004F572D    push        esi
 004F572E    add         esp,0FFFFFFF0
 004F5731    mov         ebx,eax
 004F5733    mov         esi,dword ptr [ebx+60]
 004F5736    test        esi,esi
>004F5738    je          004F580F
 004F573E    mov         eax,dword ptr [esi+14]
 004F5741    cmp         byte ptr [eax+10],1
>004F5745    jne         004F578A
 004F5747    mov         edx,2
 004F574C    mov         eax,esi
 004F574E    call        TDockZone.GetTopLeft
 004F5753    mov         dword ptr [esp],eax
 004F5756    mov         eax,dword ptr [ebx+0C]
 004F5759    sar         eax,1
>004F575B    jns         004F5760
 004F575D    adc         eax,0
 004F5760    mov         edx,dword ptr [ebx+54]
 004F5763    sub         edx,eax
 004F5765    mov         dword ptr [esp+4],edx
 004F5769    mov         edx,2
 004F576E    mov         eax,dword ptr [ebx+60]
 004F5771    call        TDockZone.GetHeightWidth
 004F5776    add         eax,dword ptr [esp]
 004F5779    mov         dword ptr [esp+8],eax
 004F577D    mov         eax,dword ptr [esp+4]
 004F5781    add         eax,dword ptr [ebx+0C]
 004F5784    mov         dword ptr [esp+0C],eax
>004F5788    jmp         004F57CB
 004F578A    mov         eax,dword ptr [ebx+0C]
 004F578D    sar         eax,1
>004F578F    jns         004F5794
 004F5791    adc         eax,0
 004F5794    mov         edx,dword ptr [ebx+50]
 004F5797    sub         edx,eax
 004F5799    mov         dword ptr [esp],edx
 004F579C    mov         edx,1
 004F57A1    mov         eax,esi
 004F57A3    call        TDockZone.GetTopLeft
 004F57A8    mov         dword ptr [esp+4],eax
 004F57AC    mov         eax,dword ptr [esp]
 004F57AF    add         eax,dword ptr [ebx+0C]
 004F57B2    mov         dword ptr [esp+8],eax
 004F57B6    mov         edx,1
 004F57BB    mov         eax,dword ptr [ebx+60]
 004F57BE    call        TDockZone.GetHeightWidth
 004F57C3    add         eax,dword ptr [esp+4]
 004F57C7    mov         dword ptr [esp+0C],eax
 004F57CB    mov         eax,dword ptr [ebx+10]
 004F57CE    call        TBrush.GetHandle
 004F57D3    push        eax
 004F57D4    mov         eax,dword ptr [ebx+58]
 004F57D7    push        eax
 004F57D8    call        gdi32.SelectObject
 004F57DD    mov         esi,eax
 004F57DF    push        5A0049
 004F57E4    mov         ecx,dword ptr [esp+10]
 004F57E8    mov         edx,dword ptr [esp+8]
 004F57EC    sub         ecx,edx
 004F57EE    push        ecx
 004F57EF    mov         ecx,dword ptr [esp+10]
 004F57F3    mov         eax,dword ptr [esp+8]
 004F57F7    sub         ecx,eax
 004F57F9    push        ecx
 004F57FA    push        edx
 004F57FB    push        eax
 004F57FC    mov         eax,dword ptr [ebx+58]
 004F57FF    push        eax
 004F5800    call        gdi32.PatBlt
 004F5805    push        esi
 004F5806    mov         eax,dword ptr [ebx+58]
 004F5809    push        eax
 004F580A    call        gdi32.SelectObject
 004F580F    add         esp,10
 004F5812    pop         esi
 004F5813    pop         ebx
 004F5814    ret
*}
end;

//004F5818
procedure DoGetNextLimit(Zone:TDockZone);
begin
{*
 004F5818    push        ebp
 004F5819    mov         ebp,esp
 004F581B    add         esp,0FFFFFFF8
 004F581E    push        ebx
 004F581F    push        esi
 004F5820    push        edi
 004F5821    mov         ebx,eax
 004F5823    mov         eax,dword ptr [ebp+8]
 004F5826    cmp         ebx,dword ptr [eax-4]
>004F5829    je          004F5894
 004F582B    mov         eax,dword ptr [ebx+14]
 004F582E    movzx       eax,byte ptr [eax+10]
 004F5832    mov         edx,dword ptr [ebp+8]
 004F5835    mov         edx,dword ptr [edx-4]
 004F5838    mov         edx,dword ptr [edx+14]
 004F583B    cmp         al,byte ptr [edx+10]
>004F583E    jne         004F5894
 004F5840    mov         eax,ebx
 004F5842    call        TDockZone.GetZoneLimit
 004F5847    mov         edi,eax
 004F5849    mov         eax,dword ptr [ebp+8]
 004F584C    mov         eax,dword ptr [eax-4]
 004F584F    call        TDockZone.GetZoneLimit
 004F5854    cmp         edi,eax
>004F5856    jle         004F5894
 004F5858    cmp         dword ptr [ebx+4],0
>004F585C    je          004F586B
 004F585E    mov         esi,dword ptr [ebx+4]
 004F5861    test        esi,esi
>004F5863    je          004F5894
 004F5865    cmp         byte ptr [esi+69],0
>004F5869    je          004F5894
 004F586B    mov         eax,dword ptr [ebp+8]
 004F586E    mov         eax,dword ptr [eax-8]
 004F5871    mov         dword ptr [ebp-4],eax
 004F5874    mov         eax,ebx
 004F5876    call        TDockZone.GetZoneLimit
 004F587B    mov         dword ptr [ebp-8],eax
 004F587E    mov         eax,dword ptr [ebp-4]
 004F5881    cmp         eax,dword ptr [ebp-8]
>004F5884    jge         004F588B
 004F5886    mov         eax,dword ptr [ebp-4]
>004F5889    jmp         004F588E
 004F588B    mov         eax,dword ptr [ebp-8]
 004F588E    mov         edx,dword ptr [ebp+8]
 004F5891    mov         dword ptr [edx-8],eax
 004F5894    mov         eax,dword ptr [ebx+0C]
 004F5897    test        eax,eax
>004F5899    je          004F58A5
 004F589B    mov         edx,dword ptr [ebp+8]
 004F589E    push        edx
 004F589F    call        DoGetNextLimit
 004F58A4    pop         ecx
 004F58A5    mov         eax,dword ptr [ebx+8]
 004F58A8    test        eax,eax
>004F58AA    je          004F58B6
 004F58AC    mov         edx,dword ptr [ebp+8]
 004F58AF    push        edx
 004F58B0    call        DoGetNextLimit
 004F58B5    pop         ecx
 004F58B6    pop         edi
 004F58B7    pop         esi
 004F58B8    pop         ebx
 004F58B9    pop         ecx
 004F58BA    pop         ecx
 004F58BB    pop         ebp
 004F58BC    ret
*}
end;

//004F58C0
function TDockTree.GetNextLimit(AZone:TDockZone):Integer;
begin
{*
 004F58C0    push        ebp
 004F58C1    mov         ebp,esp
 004F58C3    add         esp,0FFFFFFF8
 004F58C6    push        ebx
 004F58C7    push        esi
 004F58C8    mov         dword ptr [ebp-4],edx
 004F58CB    mov         ebx,eax
 004F58CD    mov         eax,dword ptr [ebp-4]
 004F58D0    call        TDockZone.NextVisible
 004F58D5    test        eax,eax
>004F58D7    je          004F58EB
 004F58D9    mov         eax,dword ptr [ebp-4]
 004F58DC    call        TDockZone.NextVisible
 004F58E1    call        TDockZone.GetZoneLimit
 004F58E6    mov         dword ptr [ebp-8],eax
>004F58E9    jmp         004F5902
 004F58EB    mov         eax,dword ptr [ebp-4]
 004F58EE    call        TDockZone.GetZoneLimit
 004F58F3    mov         esi,eax
 004F58F5    mov         eax,dword ptr [ebp-4]
 004F58F8    call        TDockZone.GetLimitSize
 004F58FD    add         esi,eax
 004F58FF    mov         dword ptr [ebp-8],esi
 004F5902    push        ebp
 004F5903    mov         eax,dword ptr [ebx+64]
 004F5906    mov         eax,dword ptr [eax+8]
 004F5909    call        DoGetNextLimit
 004F590E    pop         ecx
 004F590F    mov         eax,dword ptr [ebp-8]
 004F5912    pop         esi
 004F5913    pop         ebx
 004F5914    pop         ecx
 004F5915    pop         ecx
 004F5916    pop         ebp
 004F5917    ret
*}
end;

//004F5918
function GetDockAlign(Client:TControl; DropCtl:TControl):TAlign;
begin
{*
 004F5918    push        ebp
 004F5919    mov         ebp,esp
 004F591B    add         esp,0FFFFFFE0
 004F591E    push        ebx
 004F591F    push        esi
 004F5920    push        edi
 004F5921    mov         esi,edx
 004F5923    mov         edi,eax
 004F5925    mov         bl,4
 004F5927    test        esi,esi
>004F5929    je          004F598B
 004F592B    lea         edx,[ebp-10]
 004F592E    mov         eax,edi
 004F5930    call        TControl.GetBoundsRect
 004F5935    lea         edx,[ebp-20]
 004F5938    mov         eax,esi
 004F593A    call        TControl.GetBoundsRect
 004F593F    mov         eax,dword ptr [ebp-0C]
 004F5942    cmp         eax,dword ptr [ebp-1C]
>004F5945    jg          004F595B
 004F5947    mov         eax,dword ptr [ebp-4]
 004F594A    cmp         eax,dword ptr [ebp-14]
>004F594D    jge         004F595B
 004F594F    mov         eax,dword ptr [ebp-8]
 004F5952    cmp         eax,dword ptr [ebp-18]
>004F5955    jl          004F595B
 004F5957    mov         bl,1
>004F5959    jmp         004F598B
 004F595B    mov         eax,dword ptr [ebp-10]
 004F595E    cmp         eax,dword ptr [ebp-20]
>004F5961    jg          004F5977
 004F5963    mov         eax,dword ptr [ebp-8]
 004F5966    cmp         eax,dword ptr [ebp-18]
>004F5969    jge         004F5977
 004F596B    mov         eax,dword ptr [ebp-4]
 004F596E    cmp         eax,dword ptr [ebp-14]
>004F5971    jl          004F5977
 004F5973    mov         bl,3
>004F5975    jmp         004F598B
 004F5977    mov         eax,dword ptr [ebp-1C]
 004F597A    add         eax,dword ptr [ebp-14]
 004F597D    sar         eax,1
>004F597F    jns         004F5984
 004F5981    adc         eax,0
 004F5984    cmp         eax,dword ptr [ebp-0C]
>004F5987    jg          004F598B
 004F5989    mov         bl,2
 004F598B    mov         eax,ebx
 004F598D    pop         edi
 004F598E    pop         esi
 004F598F    pop         ebx
 004F5990    mov         esp,ebp
 004F5992    pop         ebp
 004F5993    ret
*}
end;

//004F5994
procedure HideZone(const Zone:TDockZone);
begin
{*
 004F5994    push        ebp
 004F5995    mov         ebp,esp
 004F5997    push        ebx
 004F5998    push        esi
 004F5999    mov         ebx,eax
 004F599B    mov         eax,ebx
 004F599D    call        IsOrientationSet
 004F59A2    test        al,al
>004F59A4    je          004F59B7
 004F59A6    mov         eax,ebx
 004F59A8    call        TDockZone.GetLimitBegin
 004F59AD    mov         edx,dword ptr [ebx+20]
 004F59B0    sub         edx,eax
 004F59B2    mov         dword ptr [ebx+24],edx
>004F59B5    jmp         004F59BC
 004F59B7    xor         eax,eax
 004F59B9    mov         dword ptr [ebx+24],eax
 004F59BC    mov         esi,dword ptr [ebx+14]
 004F59BF    test        esi,esi
>004F59C1    je          004F59DB
 004F59C3    mov         eax,esi
 004F59C5    call        TDockZone.GetVisible
 004F59CA    test        al,al
>004F59CC    jne         004F59DB
 004F59CE    mov         eax,dword ptr [ebp+8]
 004F59D1    push        eax
 004F59D2    mov         eax,dword ptr [ebx+14]
 004F59D5    call        HideZone
 004F59DA    pop         ecx
 004F59DB    mov         eax,ebx
 004F59DD    call        TDockZone.PrevVisible
 004F59E2    test        eax,eax
>004F59E4    je          004F59F5
 004F59E6    mov         eax,ebx
 004F59E8    call        TDockZone.PrevVisible
 004F59ED    mov         edx,dword ptr [ebx+20]
 004F59F0    call        TDockZone.ExpandZoneLimit
 004F59F5    mov         eax,dword ptr [ebp+8]
 004F59F8    mov         eax,dword ptr [eax-4]
 004F59FB    push        eax
 004F59FC    push        4F5710;TDockTree.UpdateZone
 004F5A01    mov         eax,dword ptr [ebp+8]
 004F5A04    mov         eax,dword ptr [eax-4]
 004F5A07    mov         edx,dword ptr [ebx+14]
 004F5A0A    call        TDockTree.ForEachAt
 004F5A0F    pop         esi
 004F5A10    pop         ebx
 004F5A11    pop         ebp
 004F5A12    ret
*}
end;

//004F5A14
{*procedure sub_004F5A14(?:TDockZone; ?:?);
begin
 004F5A14    push        ebp
 004F5A15    mov         ebp,esp
 004F5A17    add         esp,0FFFFFFE8
 004F5A1A    push        ebx
 004F5A1B    push        esi
 004F5A1C    push        edi
 004F5A1D    mov         edi,eax
 004F5A1F    mov         esi,dword ptr [edi+14]
 004F5A22    test        esi,esi
>004F5A24    je          004F5A48
 004F5A26    mov         eax,dword ptr [ebp+8]
 004F5A29    mov         eax,dword ptr [eax-4]
 004F5A2C    cmp         esi,dword ptr [eax+64]
>004F5A2F    je          004F5A48
 004F5A31    mov         eax,esi
 004F5A33    call        TDockZone.GetVisibleChildCount
 004F5A38    dec         eax
>004F5A39    jne         004F5A48
 004F5A3B    mov         eax,dword ptr [ebp+8]
 004F5A3E    push        eax
 004F5A3F    mov         eax,dword ptr [edi+14]
 004F5A42    call        004F5A14
 004F5A47    pop         ecx
 004F5A48    mov         eax,dword ptr [edi+14]
 004F5A4B    call        TDockZone.GetVisibleChildCount
 004F5A50    dec         eax
>004F5A51    je          004F5A59
 004F5A53    cmp         dword ptr [edi+24],0
>004F5A57    jne         004F5A60
 004F5A59    mov         bl,1
>004F5A5B    jmp         004F5B33
 004F5A60    xor         ebx,ebx
 004F5A62    mov         eax,dword ptr [ebp+8]
 004F5A65    mov         eax,dword ptr [eax-4]
 004F5A68    mov         eax,dword ptr [eax+18]
 004F5A6B    mov         edx,dword ptr [ebp+8]
 004F5A6E    mov         edx,dword ptr [edx-4]
 004F5A71    add         eax,dword ptr [edx+0C]
 004F5A74    add         eax,0E
 004F5A77    mov         dword ptr [ebp-4],eax
 004F5A7A    mov         eax,edi
 004F5A7C    call        TDockZone.PrevVisible
 004F5A81    test        eax,eax
>004F5A83    je          004F5AEF
 004F5A85    mov         eax,edi
 004F5A87    call        TDockZone.PrevVisible
 004F5A8C    mov         esi,eax
 004F5A8E    mov         eax,esi
 004F5A90    call        TDockZone.GetZoneLimit
 004F5A95    push        eax
 004F5A96    mov         eax,esi
 004F5A98    call        TDockZone.GetLimitBegin
 004F5A9D    pop         edx
 004F5A9E    sub         edx,eax
 004F5AA0    sub         edx,dword ptr [edi+24]
 004F5AA3    cmp         edx,dword ptr [ebp-4]
>004F5AA6    jge         004F5AAF
 004F5AA8    mov         bl,1
>004F5AAA    jmp         004F5B33
 004F5AAF    mov         dword ptr [ebp-8],esi
 004F5AB2    mov         eax,esi
 004F5AB4    call        TDockZone.GetZoneLimit
 004F5AB9    sub         eax,dword ptr [edi+24]
 004F5ABC    mov         dword ptr [ebp-0C],eax
 004F5ABF    mov         eax,dword ptr [ebp-8]
 004F5AC2    mov         edx,dword ptr [ebp-0C]
 004F5AC5    mov         dword ptr [eax+20],edx;TDockZone.FZoneLimit:Integer
 004F5AC8    mov         dword ptr [ebp-10],edi
 004F5ACB    mov         eax,esi
 004F5ACD    call        TDockZone.GetZoneLimit
 004F5AD2    add         eax,dword ptr [edi+24]
 004F5AD5    mov         dword ptr [ebp-14],eax
 004F5AD8    mov         eax,dword ptr [ebp-10]
 004F5ADB    mov         edx,dword ptr [ebp-14]
 004F5ADE    mov         dword ptr [eax+20],edx
 004F5AE1    mov         eax,edi
 004F5AE3    call        TDockZone.PrevVisible
 004F5AE8    call        TDockZone.ResetZoneLimits
>004F5AED    jmp         004F5B33
 004F5AEF    mov         eax,edi
 004F5AF1    call        TDockZone.NextVisible
 004F5AF6    test        eax,eax
>004F5AF8    je          004F5B33
 004F5AFA    mov         eax,edi
 004F5AFC    call        TDockZone.NextVisible
 004F5B01    call        TDockZone.GetZoneLimit
 004F5B06    sub         eax,dword ptr [edi+24]
 004F5B09    cmp         eax,dword ptr [ebp-4]
>004F5B0C    jge         004F5B12
 004F5B0E    mov         bl,1
>004F5B10    jmp         004F5B33
 004F5B12    mov         esi,edi
 004F5B14    mov         eax,edi
 004F5B16    call        TDockZone.GetLimitBegin
 004F5B1B    add         eax,dword ptr [edi+24]
 004F5B1E    mov         dword ptr [ebp-18],eax
 004F5B21    mov         eax,dword ptr [ebp-18]
 004F5B24    mov         dword ptr [esi+20],eax
 004F5B27    mov         eax,edi
 004F5B29    call        TDockZone.NextVisible
 004F5B2E    call        TDockZone.ResetZoneLimits
 004F5B33    test        bl,bl
>004F5B35    je          004F5B3F
 004F5B37    mov         eax,dword ptr [edi+14]
 004F5B3A    call        TDockZone.ResetChildren
 004F5B3F    mov         eax,dword ptr [ebp+8]
 004F5B42    mov         eax,dword ptr [eax-4]
 004F5B45    push        eax
 004F5B46    push        4F5710;TDockTree.UpdateZone
 004F5B4B    mov         eax,dword ptr [ebp+8]
 004F5B4E    mov         eax,dword ptr [eax-4]
 004F5B51    mov         edx,dword ptr [edi+14]
 004F5B54    call        TDockTree.ForEachAt
 004F5B59    pop         edi
 004F5B5A    pop         esi
 004F5B5B    pop         ebx
 004F5B5C    mov         esp,ebp
 004F5B5E    pop         ebp
 004F5B5F    ret
end;*}

//004F5B60
{*procedure sub_004F5B60(?:TDockTree; ?:?; ?:?);
begin
 004F5B60    push        ebp
 004F5B61    mov         ebp,esp
 004F5B63    add         esp,0FFFFFFF0
 004F5B66    push        ebx
 004F5B67    push        esi
 004F5B68    mov         ebx,ecx
 004F5B6A    mov         esi,edx
 004F5B6C    mov         dword ptr [ebp-4],eax
 004F5B6F    mov         edx,esi
 004F5B71    mov         eax,dword ptr [ebp-4]
 004F5B74    call        TDockTree.FindControlZone
 004F5B79    test        eax,eax
>004F5B7B    je          004F5BA1
 004F5B7D    test        bl,bl
>004F5B7F    je          004F5B8A
 004F5B81    push        ebp
 004F5B82    call        004F5A14
 004F5B87    pop         ecx
>004F5B88    jmp         004F5B91
 004F5B8A    push        ebp
 004F5B8B    call        HideZone
 004F5B90    pop         ecx
 004F5B91    mov         eax,dword ptr [ebp-4]
 004F5B94    mov         eax,dword ptr [eax+14]
 004F5B97    mov         edx,dword ptr [eax]
 004F5B99    call        dword ptr [edx+0A8]
>004F5B9F    jmp         004F5BE0
 004F5BA1    test        bl,bl
>004F5BA3    je          004F5BE0
 004F5BA5    mov         eax,dword ptr [esi+50]
 004F5BA8    mov         edx,dword ptr [esi+54]
 004F5BAB    mov         dword ptr [ebp-10],eax
 004F5BAE    mov         dword ptr [ebp-0C],edx
 004F5BB1    lea         ecx,[ebp-8]
 004F5BB4    lea         edx,[ebp-10]
 004F5BB7    mov         eax,dword ptr [ebp-4]
 004F5BBA    call        TDockTree.InternalHitTest
 004F5BBF    test        eax,eax
>004F5BC1    je          004F5BC8
 004F5BC3    mov         ebx,dword ptr [eax+4];TDockZone.FChildControl:TControl
>004F5BC6    jmp         004F5BCA
 004F5BC8    xor         ebx,ebx
 004F5BCA    push        ebx
 004F5BCB    mov         edx,ebx
 004F5BCD    mov         eax,esi
 004F5BCF    call        GetDockAlign
 004F5BD4    mov         ecx,eax
 004F5BD6    mov         edx,esi
 004F5BD8    mov         eax,dword ptr [ebp-4]
 004F5BDB    mov         ebx,dword ptr [eax]
 004F5BDD    call        dword ptr [ebx+0C]
 004F5BE0    pop         esi
 004F5BE1    pop         ebx
 004F5BE2    mov         esp,ebp
 004F5BE4    pop         ebp
 004F5BE5    ret
end;*}

//004F5BE8
{*procedure sub_004F5BE8(?:?);
begin
 004F5BE8    push        ebx
 004F5BE9    push        esi
 004F5BEA    push        edi
 004F5BEB    add         esp,0FFFFFFE8
 004F5BEE    mov         ebx,edx
 004F5BF0    mov         esi,eax
 004F5BF2    mov         byte ptr [esp+0C],0
 004F5BF7    mov         eax,dword ptr [ebx]
 004F5BF9    cmp         eax,204
>004F5BFE    jg          004F5C3B
>004F5C00    je          004F5D2D
 004F5C06    cmp         eax,201
>004F5C0B    jg          004F5C28
>004F5C0D    je          004F5D05
 004F5C13    sub         eax,20
>004F5C16    je          004F5DA5
 004F5C1C    sub         eax,1E0
>004F5C21    je          004F5C82
>004F5C23    jmp         004F5E5C
 004F5C28    sub         eax,202
>004F5C2D    je          004F5D55
 004F5C33    dec         eax
>004F5C34    je          004F5CA7
>004F5C36    jmp         004F5E5C
 004F5C3B    sub         eax,205
>004F5C40    je          004F5D7D
 004F5C46    dec         eax
>004F5C47    je          004F5CD6
 004F5C4D    sub         eax,0AE2A
>004F5C52    je          004F5E35
 004F5C58    sub         eax,12
>004F5C5B    jne         004F5E5C
 004F5C61    mov         eax,dword ptr [ebx+8]
 004F5C64    cmp         dword ptr [eax],0B00B
>004F5C6A    jne         004F5E5C
 004F5C70    mov         ecx,dword ptr [eax+4]
 004F5C73    mov         edx,dword ptr [ebx+4]
 004F5C76    mov         eax,esi
 004F5C78    call        004F5B60
>004F5C7D    jmp         004F5E5C
 004F5C82    movsx       eax,word ptr [ebx+0A]
 004F5C86    push        eax
 004F5C87    lea         eax,[esp+10]
 004F5C8B    push        eax
 004F5C8C    movzx       eax,word ptr [ebx+4]
 004F5C90    call        KeysToShiftState
 004F5C95    mov         edx,eax
 004F5C97    movsx       ecx,word ptr [ebx+8]
 004F5C9B    mov         eax,esi
 004F5C9D    mov         edi,dword ptr [eax]
 004F5C9F    call        dword ptr [edi+18];TDockTree.MouseMove
>004F5CA2    jmp         004F5E5C
 004F5CA7    movsx       eax,word ptr [ebx+8]
 004F5CAB    push        eax
 004F5CAC    movsx       eax,word ptr [ebx+0A]
 004F5CB0    push        eax
 004F5CB1    lea         eax,[esp+14]
 004F5CB5    push        eax
 004F5CB6    movzx       eax,word ptr [ebx+4]
 004F5CBA    call        KeysToShiftState
 004F5CBF    mov         ecx,eax
 004F5CC1    or          cx,word ptr ds:[4F5E7C];0x40 gvar_004F5E7C
 004F5CC8    xor         edx,edx
 004F5CCA    mov         eax,esi
 004F5CCC    mov         edi,dword ptr [eax]
 004F5CCE    call        dword ptr [edi+14];TDockTree.sub_004F5F4C
>004F5CD1    jmp         004F5E5C
 004F5CD6    movsx       eax,word ptr [ebx+8]
 004F5CDA    push        eax
 004F5CDB    movsx       eax,word ptr [ebx+0A]
 004F5CDF    push        eax
 004F5CE0    lea         eax,[esp+14]
 004F5CE4    push        eax
 004F5CE5    movzx       eax,word ptr [ebx+4]
 004F5CE9    call        KeysToShiftState
 004F5CEE    mov         ecx,eax
 004F5CF0    or          cx,word ptr ds:[4F5E7C];0x40 gvar_004F5E7C
 004F5CF7    mov         dl,1
 004F5CF9    mov         eax,esi
 004F5CFB    mov         edi,dword ptr [eax]
 004F5CFD    call        dword ptr [edi+14];TDockTree.sub_004F5F4C
>004F5D00    jmp         004F5E5C
 004F5D05    movsx       eax,word ptr [ebx+8]
 004F5D09    push        eax
 004F5D0A    movsx       eax,word ptr [ebx+0A]
 004F5D0E    push        eax
 004F5D0F    lea         eax,[esp+14]
 004F5D13    push        eax
 004F5D14    movzx       eax,word ptr [ebx+4]
 004F5D18    call        KeysToShiftState
 004F5D1D    mov         ecx,eax
 004F5D1F    xor         edx,edx
 004F5D21    mov         eax,esi
 004F5D23    mov         edi,dword ptr [eax]
 004F5D25    call        dword ptr [edi+14];TDockTree.sub_004F5F4C
>004F5D28    jmp         004F5E5C
 004F5D2D    movsx       eax,word ptr [ebx+8]
 004F5D31    push        eax
 004F5D32    movsx       eax,word ptr [ebx+0A]
 004F5D36    push        eax
 004F5D37    lea         eax,[esp+14]
 004F5D3B    push        eax
 004F5D3C    movzx       eax,word ptr [ebx+4]
 004F5D40    call        KeysToShiftState
 004F5D45    mov         ecx,eax
 004F5D47    mov         dl,1
 004F5D49    mov         eax,esi
 004F5D4B    mov         edi,dword ptr [eax]
 004F5D4D    call        dword ptr [edi+14];TDockTree.sub_004F5F4C
>004F5D50    jmp         004F5E5C
 004F5D55    movsx       eax,word ptr [ebx+8]
 004F5D59    push        eax
 004F5D5A    movsx       eax,word ptr [ebx+0A]
 004F5D5E    push        eax
 004F5D5F    lea         eax,[esp+14]
 004F5D63    push        eax
 004F5D64    movzx       eax,word ptr [ebx+4]
 004F5D68    call        KeysToShiftState
 004F5D6D    mov         ecx,eax
 004F5D6F    xor         edx,edx
 004F5D71    mov         eax,esi
 004F5D73    mov         edi,dword ptr [eax]
 004F5D75    call        dword ptr [edi+1C];TDockTree.MouseUp
>004F5D78    jmp         004F5E5C
 004F5D7D    movsx       eax,word ptr [ebx+8]
 004F5D81    push        eax
 004F5D82    movsx       eax,word ptr [ebx+0A]
 004F5D86    push        eax
 004F5D87    lea         eax,[esp+14]
 004F5D8B    push        eax
 004F5D8C    movzx       eax,word ptr [ebx+4]
 004F5D90    call        KeysToShiftState
 004F5D95    mov         ecx,eax
 004F5D97    mov         dl,1
 004F5D99    mov         eax,esi
 004F5D9B    mov         edi,dword ptr [eax]
 004F5D9D    call        dword ptr [edi+1C];TDockTree.MouseUp
>004F5DA0    jmp         004F5E5C
 004F5DA5    push        esp
 004F5DA6    call        user32.GetCursorPos
 004F5DAB    lea         ecx,[esp+10]
 004F5DAF    mov         edx,esp
 004F5DB1    mov         eax,dword ptr [esi+14];TDockTree.FDockSite:TWinControl
 004F5DB4    call        TControl.ScreenToClient
 004F5DB9    mov         eax,dword ptr [esp+10]
 004F5DBD    mov         dword ptr [esp],eax
 004F5DC0    mov         eax,dword ptr [esp+14]
 004F5DC4    mov         dword ptr [esp+4],eax
 004F5DC8    cmp         word ptr [ebx+8],1
>004F5DCD    jne         004F5E5C
 004F5DD3    mov         eax,dword ptr [esi+14];TDockTree.FDockSite:TWinControl
 004F5DD6    call        TWinControl.GetHandle
 004F5DDB    cmp         eax,dword ptr [ebx+4]
>004F5DDE    jne         004F5E5C
 004F5DE0    mov         eax,dword ptr [esi+14];TDockTree.FDockSite:TWinControl
 004F5DE3    call        004EE690
 004F5DE8    test        eax,eax
>004F5DEA    jle         004F5E5C
 004F5DEC    lea         ecx,[esp+8]
 004F5DF0    mov         edx,esp
 004F5DF2    mov         eax,esi
 004F5DF4    call        TDockTree.InternalHitTest
 004F5DF9    mov         edi,eax
 004F5DFB    test        edi,edi
>004F5DFD    je          004F5E5C
 004F5DFF    cmp         dword ptr [esp+8],12
>004F5E04    jne         004F5E5C
 004F5E06    mov         eax,dword ptr [edi+14];TDockZone.FParentZone:TDockZone
 004F5E09    movzx       eax,byte ptr [eax+10];TDockZone.FOrientation:TDockOrientation
 004F5E0D    movsx       edx,word ptr [eax*2+7A1294]
 004F5E15    mov         eax,[007C4E78];^Screen:TScreen
 004F5E1A    mov         eax,dword ptr [eax]
 004F5E1C    call        TScreen.GetCursors
 004F5E21    push        eax
 004F5E22    call        user32.SetCursor
 004F5E27    mov         dword ptr [ebx+0C],1
 004F5E2E    mov         byte ptr [esp+0C],1
>004F5E33    jmp         004F5E5C
 004F5E35    mov         edx,ebx
 004F5E37    mov         eax,dword ptr [esi+34];TDockTree.?f34:Integer
 004F5E3A    call        dword ptr [esi+30];TDockTree.FOldWndProc
 004F5E3D    cmp         dword ptr [ebx+0C],0
>004F5E41    jne         004F5E57
 004F5E43    mov         edi,dword ptr [ebx+8]
 004F5E46    lea         eax,[edi+38]
 004F5E49    push        eax
 004F5E4A    lea         ecx,[edi+18]
 004F5E4D    lea         edx,[edi+28]
 004F5E50    mov         eax,esi
 004F5E52    mov         edi,dword ptr [eax]
 004F5E54    call        dword ptr [edi+34];TDockTree.sub_004F61BC
 004F5E57    mov         byte ptr [esp+0C],1
 004F5E5C    cmp         byte ptr [esp+0C],0
>004F5E61    jne         004F5E72
 004F5E63    cmp         word ptr [esi+32],0;TDockTree.?f32:word
>004F5E68    je          004F5E72
 004F5E6A    mov         edx,ebx
 004F5E6C    mov         eax,dword ptr [esi+34];TDockTree.?f34:Integer
 004F5E6F    call        dword ptr [esi+30];TDockTree.FOldWndProc
 004F5E72    add         esp,18
 004F5E75    pop         edi
 004F5E76    pop         esi
 004F5E77    pop         ebx
 004F5E78    ret
end;*}

//004F5E80
{*function sub_004F5E80(?:TDockTree; ?:Integer; ?:Integer):?;
begin
 004F5E80    push        ebx
 004F5E81    push        esi
 004F5E82    push        ecx
 004F5E83    mov         esi,ecx
 004F5E85    mov         ebx,edx
 004F5E87    mov         dword ptr [esp],ebx
 004F5E8A    fild        dword ptr [esp]
 004F5E8D    fdiv        dword ptr ds:[4F5EA4];10000:Single
 004F5E93    mov         dword ptr [esp],esi
 004F5E96    fild        dword ptr [esp]
 004F5E99    fmulp       st(1),st
 004F5E9B    call        @ROUND
 004F5EA0    pop         edx
 004F5EA1    pop         esi
 004F5EA2    pop         ebx
 004F5EA3    ret
end;*}

//004F5EA8
function TDockTree.RelativeSize(const ActualSize:Integer; const Reference:Integer):Integer;
begin
{*
 004F5EA8    push        ebx
 004F5EA9    push        esi
 004F5EAA    add         esp,0FFFFFFF8
 004F5EAD    mov         ebx,ecx
 004F5EAF    mov         esi,edx
 004F5EB1    test        ebx,ebx
>004F5EB3    je          004F5ED2
 004F5EB5    mov         dword ptr [esp],esi
 004F5EB8    fild        dword ptr [esp]
 004F5EBB    mov         dword ptr [esp+4],ebx
 004F5EBF    fild        dword ptr [esp+4]
 004F5EC3    fdivp       st(1),st
 004F5EC5    fmul        dword ptr ds:[4F5EDC]
 004F5ECB    call        @ROUND
>004F5ED0    jmp         004F5ED4
 004F5ED2    xor         eax,eax
 004F5ED4    pop         ecx
 004F5ED5    pop         edx
 004F5ED6    pop         esi
 004F5ED7    pop         ebx
 004F5ED8    ret
*}
end;

//004F5EE0
function TDockTree.ReferenceFromOrient(const Orient:TDockOrientation):Integer;
begin
{*
 004F5EE0    cmp         dl,1
>004F5EE3    jne         004F5EF7
 004F5EE5    mov         eax,[007C4E78];^Screen:TScreen
 004F5EEA    mov         eax,dword ptr [eax]
 004F5EEC    call        TScreen.GetPrimaryMonitor
 004F5EF1    call        TMonitor.GetWidth
 004F5EF6    ret
 004F5EF7    mov         eax,[007C4E78];^Screen:TScreen
 004F5EFC    mov         eax,dword ptr [eax]
 004F5EFE    call        TScreen.GetPrimaryMonitor
 004F5F03    call        TMonitor.GetHeight
 004F5F08    ret
*}
end;

//004F5F0C
{*procedure sub_004F5F0C(?:?; ?:?);
begin
 004F5F0C    push        ebx
 004F5F0D    mov         eax,dword ptr [ecx]
 004F5F0F    sub         eax,dword ptr [edx+50]
 004F5F12    add         eax,eax
 004F5F14    sub         dword ptr [ecx],eax
 004F5F16    mov         eax,dword ptr [ecx+4]
 004F5F19    sub         eax,dword ptr [edx+54]
 004F5F1C    add         eax,eax
 004F5F1E    sub         dword ptr [ecx+4],eax
 004F5F21    mov         eax,dword ptr [ecx+8]
 004F5F24    sub         eax,dword ptr [ecx]
 004F5F26    mov         ebx,dword ptr [edx+58]
 004F5F29    sub         ebx,eax
 004F5F2B    mov         eax,ebx
 004F5F2D    add         eax,eax
 004F5F2F    sub         dword ptr [ecx+8],eax
 004F5F32    mov         eax,dword ptr [ecx+0C]
 004F5F35    sub         eax,dword ptr [ecx+4]
 004F5F38    mov         edx,dword ptr [edx+5C]
 004F5F3B    sub         edx,eax
 004F5F3D    mov         eax,edx
 004F5F3F    add         eax,eax
 004F5F41    test        eax,eax
>004F5F43    jle         004F5F48
 004F5F45    sub         dword ptr [ecx+0C],eax
 004F5F48    pop         ebx
 004F5F49    ret
end;*}

//004F5F4C
{*procedure sub_004F5F4C(?:?; ?:?; ?:?; ?:?; ?:?);
begin
 004F5F4C    push        ebp
 004F5F4D    mov         ebp,esp
 004F5F4F    add         esp,0FFFFFFC4
 004F5F52    push        ebx
 004F5F53    push        esi
 004F5F54    mov         word ptr [ebp-2],cx
 004F5F58    mov         ebx,eax
 004F5F5A    test        dl,dl
>004F5F5C    jne         004F6069
 004F5F62    test        byte ptr [ebp-2],40
>004F5F66    je          004F5FB7
 004F5F68    mov         eax,dword ptr [ebp+10]
 004F5F6B    mov         dword ptr [ebp-10],eax
 004F5F6E    mov         eax,dword ptr [ebp+0C]
 004F5F71    mov         dword ptr [ebp-0C],eax
 004F5F74    lea         ecx,[ebp-8]
 004F5F77    lea         edx,[ebp-10]
 004F5F7A    mov         eax,ebx
 004F5F7C    call        TDockTree.InternalHitTest
 004F5F81    mov         esi,eax
 004F5F83    test        esi,esi
>004F5F85    je          004F6069
 004F5F8B    cmp         dword ptr [esi+4],0;TDockZone.FChildControl:TControl
>004F5F8F    je          004F6069
 004F5F95    cmp         dword ptr [ebp-8],2
>004F5F99    jne         004F6069
 004F5F9F    call        CancelDrag
 004F5FA4    push        1
 004F5FA6    xor         ecx,ecx
 004F5FA8    xor         edx,edx
 004F5FAA    mov         eax,dword ptr [esi+4];TDockZone.FChildControl:TControl
 004F5FAD    call        TControl.ManualDock
>004F5FB2    jmp         004F6069
 004F5FB7    mov         eax,dword ptr [ebp+10]
 004F5FBA    mov         dword ptr [ebp-18],eax
 004F5FBD    mov         eax,dword ptr [ebp+0C]
 004F5FC0    mov         dword ptr [ebp-14],eax
 004F5FC3    lea         ecx,[ebp-8]
 004F5FC6    lea         edx,[ebp-18]
 004F5FC9    mov         eax,ebx
 004F5FCB    call        TDockTree.InternalHitTest
 004F5FD0    mov         esi,eax
 004F5FD2    test        esi,esi
>004F5FD4    je          004F6069
 004F5FDA    cmp         dword ptr [ebp-8],12
>004F5FDE    jne         004F5FFA
 004F5FE0    mov         eax,dword ptr [ebp+10]
 004F5FE3    mov         dword ptr [ebp-20],eax
 004F5FE6    mov         eax,dword ptr [ebp+0C]
 004F5FE9    mov         dword ptr [ebp-1C],eax
 004F5FEC    lea         ecx,[ebp-20]
 004F5FEF    mov         edx,esi
 004F5FF1    mov         eax,ebx
 004F5FF3    call        TDockTree.SplitterMouseDown
>004F5FF8    jmp         004F6069
 004F5FFA    cmp         dword ptr [ebp-8],2
>004F5FFE    jne         004F6069
 004F6000    push        0
 004F6002    push        203
 004F6007    push        203
 004F600C    mov         eax,dword ptr [ebx+14];TDockTree.FDockSite:TWinControl
 004F600F    call        TWinControl.GetHandle
 004F6014    push        eax
 004F6015    lea         eax,[ebp-3C]
 004F6018    push        eax
 004F6019    call        user32.PeekMessageW
 004F601E    test        eax,eax
>004F6020    jne         004F603F
 004F6022    mov         eax,dword ptr [esi+4];TDockZone.FChildControl:TControl
 004F6025    mov         edx,dword ptr ds:[4DE8CC];TWinControl
 004F602B    call        @IsClass
 004F6030    test        al,al
>004F6032    je          004F603F
 004F6034    mov         eax,dword ptr [esi+4];TDockZone.FChildControl:TControl
 004F6037    mov         edx,dword ptr [eax]
 004F6039    call        dword ptr [edx+104]
 004F603F    mov         ebx,dword ptr [esi+4];TDockZone.FChildControl:TControl
 004F6042    cmp         byte ptr [ebx+9B],1;TControl.FDragKind:TDragKind
>004F6049    jne         004F6063
 004F604B    mov         eax,ebx
 004F604D    call        TGroupBox.GetDragMode
 004F6052    cmp         al,1
>004F6054    jne         004F6063
 004F6056    or          ecx,0FFFFFFFF
 004F6059    xor         edx,edx
 004F605B    mov         eax,dword ptr [esi+4];TDockZone.FChildControl:TControl
 004F605E    call        TControl.BeginDrag
 004F6063    mov         eax,dword ptr [ebp+8]
 004F6066    mov         byte ptr [eax],1
 004F6069    pop         esi
 004F606A    pop         ebx
 004F606B    mov         esp,ebp
 004F606D    pop         ebp
 004F606E    ret         0C
end;*}

//004F6074
procedure CalcSplitterPos;
begin
{*
 004F6074    push        ebp
 004F6075    mov         ebp,esp
 004F6077    push        ebx
 004F6078    push        esi
 004F6079    push        edi
 004F607A    mov         edi,dword ptr [ebp+8]
 004F607D    add         edi,0FFFFFFFC
 004F6080    mov         eax,dword ptr [edi]
 004F6082    mov         ebx,dword ptr [eax+18]
 004F6085    mov         eax,dword ptr [edi]
 004F6087    mov         esi,dword ptr [eax+60]
 004F608A    mov         eax,dword ptr [esi+14]
 004F608D    cmp         byte ptr [eax+10],1
>004F6091    jne         004F60C9
 004F6093    mov         eax,esi
 004F6095    mov         edx,1
 004F609A    call        TDockZone.GetTopLeft
 004F609F    add         eax,ebx
 004F60A1    mov         edx,dword ptr [edi]
 004F60A3    cmp         eax,dword ptr [edx+54]
>004F60A6    jl          004F60AD
 004F60A8    mov         edx,dword ptr [edi]
 004F60AA    mov         dword ptr [edx+54],eax
 004F60AD    mov         eax,dword ptr [edi]
 004F60AF    mov         edx,dword ptr [eax+60]
 004F60B2    mov         eax,dword ptr [edi]
 004F60B4    call        TDockTree.GetNextLimit
 004F60B9    sub         eax,ebx
 004F60BB    mov         edx,dword ptr [edi]
 004F60BD    cmp         eax,dword ptr [edx+54]
>004F60C0    jg          004F60FD
 004F60C2    mov         edx,dword ptr [edi]
 004F60C4    mov         dword ptr [edx+54],eax
>004F60C7    jmp         004F60FD
 004F60C9    mov         eax,esi
 004F60CB    mov         edx,2
 004F60D0    call        TDockZone.GetTopLeft
 004F60D5    add         eax,ebx
 004F60D7    mov         edx,dword ptr [edi]
 004F60D9    cmp         eax,dword ptr [edx+50]
>004F60DC    jl          004F60E3
 004F60DE    mov         edx,dword ptr [edi]
 004F60E0    mov         dword ptr [edx+50],eax
 004F60E3    mov         eax,dword ptr [edi]
 004F60E5    mov         edx,dword ptr [eax+60]
 004F60E8    mov         eax,dword ptr [edi]
 004F60EA    call        TDockTree.GetNextLimit
 004F60EF    sub         eax,ebx
 004F60F1    mov         edx,dword ptr [edi]
 004F60F3    cmp         eax,dword ptr [edx+50]
>004F60F6    jg          004F60FD
 004F60F8    mov         edx,dword ptr [edi]
 004F60FA    mov         dword ptr [edx+50],eax
 004F60FD    pop         edi
 004F60FE    pop         esi
 004F60FF    pop         ebx
 004F6100    pop         ebp
 004F6101    ret
*}
end;

//004F6104
procedure TDockTree.MouseMove(Shift:Classes.TShiftState; X:Integer; Y:Integer; var Handled:Boolean);
begin
{*
 004F6104    push        ebp
 004F6105    mov         ebp,esp
 004F6107    add         esp,0FFFFFFF4
 004F610A    push        ebx
 004F610B    mov         ebx,ecx
 004F610D    mov         dword ptr [ebp-4],eax
 004F6110    mov         eax,dword ptr [ebp-4]
 004F6113    cmp         dword ptr [eax+60],0
>004F6117    je          004F6148
 004F6119    mov         eax,dword ptr [ebp-4]
 004F611C    call        TDockTree.DrawSizeSplitter
 004F6121    mov         dword ptr [ebp-0C],ebx
 004F6124    mov         eax,dword ptr [ebp+0C]
 004F6127    mov         dword ptr [ebp-8],eax
 004F612A    mov         eax,dword ptr [ebp-4]
 004F612D    mov         edx,dword ptr [ebp-0C]
 004F6130    mov         dword ptr [eax+50],edx
 004F6133    mov         edx,dword ptr [ebp-8]
 004F6136    mov         dword ptr [eax+54],edx
 004F6139    push        ebp
 004F613A    call        CalcSplitterPos
 004F613F    pop         ecx
 004F6140    mov         eax,dword ptr [ebp-4]
 004F6143    call        TDockTree.DrawSizeSplitter
 004F6148    pop         ebx
 004F6149    mov         esp,ebp
 004F614B    pop         ebp
 004F614C    ret         8
*}
end;

//004F6150
procedure TDockTree.MouseUp(Button:UITypes.TMouseButton; Shift:Classes.TShiftState; X:Integer; Y:Integer; var Handled:Boolean);
begin
{*
 004F6150    push        ebp
 004F6151    mov         ebp,esp
 004F6153    add         esp,0FFFFFFF4
 004F6156    push        ebx
 004F6157    push        esi
 004F6158    test        dl,dl
>004F615A    jne         004F61B2
 004F615C    cmp         dword ptr [eax+60],0
>004F6160    jne         004F61AD
 004F6162    mov         edx,dword ptr [ebp+10]
 004F6165    mov         dword ptr [ebp-0C],edx
 004F6168    mov         edx,dword ptr [ebp+0C]
 004F616B    mov         dword ptr [ebp-8],edx
 004F616E    lea         ecx,[ebp-4]
 004F6171    lea         edx,[ebp-0C]
 004F6174    call        TDockTree.InternalHitTest
 004F6179    mov         ebx,eax
 004F617B    test        ebx,ebx
>004F617D    je          004F61B2
 004F617F    cmp         dword ptr [ebp-4],14
>004F6183    jne         004F61B2
 004F6185    mov         esi,dword ptr [ebx+4]
 004F6188    mov         eax,esi
 004F618A    mov         edx,dword ptr ds:[5B7120];TCustomForm
 004F6190    call        @IsClass
 004F6195    test        al,al
>004F6197    je          004F61A2
 004F6199    mov         eax,esi
 004F619B    call        TCustomForm.Close
>004F61A0    jmp         004F61B2
 004F61A2    mov         eax,esi
 004F61A4    xor         edx,edx
 004F61A6    call        TControl.SetVisible
>004F61AB    jmp         004F61B2
 004F61AD    call        TDockTree.SplitterMouseUp
 004F61B2    pop         esi
 004F61B3    pop         ebx
 004F61B4    mov         esp,ebp
 004F61B6    pop         ebp
 004F61B7    ret         0C
*}
end;

//004F61BC
{*procedure sub_004F61BC(?:?; ?:?; ?:?);
begin
 004F61BC    push        ebp
 004F61BD    mov         ebp,esp
 004F61BF    add         esp,0FFFFFFDC
 004F61C2    push        ebx
 004F61C3    push        esi
 004F61C4    push        edi
 004F61C5    xor         ebx,ebx
 004F61C7    mov         dword ptr [ebp-24],ebx
 004F61CA    mov         esi,edx
 004F61CC    lea         edi,[ebp-8]
 004F61CF    movs        dword ptr [edi],dword ptr [esi]
 004F61D0    movs        dword ptr [edi],dword ptr [esi]
 004F61D1    mov         dword ptr [ebp-0C],ecx
 004F61D4    mov         esi,eax
 004F61D6    xor         eax,eax
 004F61D8    push        ebp
 004F61D9    push        4F629D
 004F61DE    push        dword ptr fs:[eax]
 004F61E1    mov         dword ptr fs:[eax],esp
 004F61E4    lea         ecx,[ebp-10]
 004F61E7    lea         edx,[ebp-8]
 004F61EA    mov         eax,esi
 004F61EC    mov         ebx,dword ptr [eax]
 004F61EE    call        dword ptr [ebx+8];TDockTree.HitTest
 004F61F1    mov         ebx,eax
 004F61F3    cmp         dword ptr [ebp-10],12
>004F61F7    jne         004F6206
 004F61F9    mov         eax,dword ptr [ebp+8]
 004F61FC    call        @UStrClr
>004F6201    jmp         004F6287
 004F6206    test        ebx,ebx
>004F6208    je          004F6287
 004F620A    mov         eax,dword ptr [ebp-10]
 004F620D    sub         eax,2
>004F6210    je          004F6217
 004F6212    sub         eax,12
>004F6215    jne         004F6287
 004F6217    lea         edx,[ebp-20]
 004F621A    mov         eax,ebx
 004F621C    call        TControl.GetBoundsRect
 004F6221    lea         ecx,[ebp-20]
 004F6224    mov         edx,ebx
 004F6226    mov         eax,esi
 004F6228    mov         esi,dword ptr [eax]
 004F622A    call        dword ptr [esi];TDockTree.sub_004F39B4
 004F622C    mov         eax,dword ptr [ebp-20]
 004F622F    sub         eax,dword ptr [ebx+50]
 004F6232    add         eax,eax
 004F6234    sub         dword ptr [ebp-20],eax
 004F6237    mov         eax,dword ptr [ebp-1C]
 004F623A    sub         eax,dword ptr [ebx+54]
 004F623D    add         eax,eax
 004F623F    sub         dword ptr [ebp-1C],eax
 004F6242    mov         eax,dword ptr [ebp-18]
 004F6245    sub         eax,dword ptr [ebp-20]
 004F6248    mov         edx,dword ptr [ebx+58];TControl.FWidth:Integer
 004F624B    sub         edx,eax
 004F624D    mov         eax,edx
 004F624F    add         eax,eax
 004F6251    sub         dword ptr [ebp-18],eax
 004F6254    mov         eax,dword ptr [ebp-14]
 004F6257    sub         eax,dword ptr [ebp-1C]
 004F625A    mov         edx,dword ptr [ebx+5C];TControl.FHeight:Integer
 004F625D    sub         edx,eax
 004F625F    mov         eax,edx
 004F6261    add         eax,eax
 004F6263    sub         dword ptr [ebp-14],eax
 004F6266    lea         edx,[ebp-24]
 004F6269    mov         eax,ebx
 004F626B    call        TControl.GetText
 004F6270    mov         edx,dword ptr [ebp-24]
 004F6273    mov         eax,dword ptr [ebp+8]
 004F6276    call        @UStrAsg
 004F627B    mov         eax,dword ptr [ebp-0C]
 004F627E    mov         edi,eax
 004F6280    lea         esi,[ebp-20]
 004F6283    movs        dword ptr [edi],dword ptr [esi]
 004F6284    movs        dword ptr [edi],dword ptr [esi]
 004F6285    movs        dword ptr [edi],dword ptr [esi]
 004F6286    movs        dword ptr [edi],dword ptr [esi]
 004F6287    xor         eax,eax
 004F6289    pop         edx
 004F628A    pop         ecx
 004F628B    pop         ecx
 004F628C    mov         dword ptr fs:[eax],edx
 004F628F    push        4F62A4
 004F6294    lea         eax,[ebp-24]
 004F6297    call        @UStrClr
 004F629C    ret
>004F629D    jmp         @HandleFinally
>004F62A2    jmp         004F6294
 004F62A4    pop         edi
 004F62A5    pop         esi
 004F62A6    pop         ebx
 004F62A7    mov         esp,ebp
 004F62A9    pop         ebp
 004F62AA    ret         4
end;*}

//004F62B0
constructor TMouse.Create();
begin
{*
 004F62B0    push        ebx
 004F62B1    push        esi
 004F62B2    test        dl,dl
>004F62B4    je          004F62BE
 004F62B6    add         esp,0FFFFFFF0
 004F62B9    call        @ClassCreate
 004F62BE    mov         ebx,edx
 004F62C0    mov         esi,eax
 004F62C2    xor         edx,edx
 004F62C4    mov         eax,esi
 004F62C6    call        TObject.Create
 004F62CB    mov         byte ptr [esi+4],1
 004F62CF    mov         dword ptr [esi+8],5
 004F62D6    mov         eax,[007C4EC4];^gvar_0079EDDC
 004F62DB    cmp         dword ptr [eax],2
>004F62DE    jne         004F62EA
 004F62E0    mov         eax,[007C4590];^gvar_0079EDE0
 004F62E5    cmp         dword ptr [eax],4
>004F62E8    jge         004F6316
 004F62EA    mov         eax,[007C4EC4];^gvar_0079EDDC
 004F62EF    cmp         dword ptr [eax],1
>004F62F2    jne         004F6312
 004F62F4    mov         eax,[007C4590];^gvar_0079EDE0
 004F62F9    cmp         dword ptr [eax],4
>004F62FC    jg          004F6316
 004F62FE    mov         eax,[007C4590];^gvar_0079EDE0
 004F6303    cmp         dword ptr [eax],4
>004F6306    jne         004F6312
 004F6308    mov         eax,[007C4B24];^gvar_0079EDE4
 004F630D    cmp         dword ptr [eax],0A
>004F6310    jge         004F6316
 004F6312    xor         eax,eax
>004F6314    jmp         004F6318
 004F6316    mov         al,1
 004F6318    mov         byte ptr [esi+0D],al
 004F631B    xor         edx,edx
 004F631D    mov         eax,esi
 004F631F    call        TMouse.SettingChanged
 004F6324    mov         eax,esi
 004F6326    test        bl,bl
>004F6328    je          004F6339
 004F632A    call        @AfterConstruction
 004F632F    pop         dword ptr fs:[0]
 004F6336    add         esp,0C
 004F6339    mov         eax,esi
 004F633B    pop         esi
 004F633C    pop         ebx
 004F633D    ret
*}
end;

//004F6340
procedure TMouse.CreatePanningWindow;
begin
{*
 004F6340    push        ebx
 004F6341    mov         ebx,eax
 004F6343    xor         eax,eax
 004F6345    cmp         dword ptr [ebx+2C],0;TMouse.FPanningWindowClass:TPanningWindowClass
>004F6349    je          004F6367
 004F634B    cmp         byte ptr [ebx+20],0;TMouse.FWheelPresent:Boolean
>004F634F    je          004F6367
 004F6351    xor         edx,edx
 004F6353    mov         eax,ebx
 004F6355    call        TMouse.SetPanningWindow
 004F635A    xor         ecx,ecx
 004F635C    mov         dl,1
 004F635E    mov         eax,dword ptr [ebx+2C];TMouse.FPanningWindowClass:TPanningWindowClass
 004F6361    call        dword ptr [eax+3C]
 004F6364    mov         dword ptr [ebx+28],eax;TMouse.FPanningWindow:TCustomPanningWindow
 004F6367    pop         ebx
 004F6368    ret
*}
end;

//004F636C
destructor TMouse.Destroy();
begin
{*
 004F636C    push        ebx
 004F636D    push        esi
 004F636E    call        @BeforeDestruction
 004F6373    mov         ebx,edx
 004F6375    mov         esi,eax
 004F6377    xor         edx,edx
 004F6379    mov         eax,esi
 004F637B    call        TMouse.SetCapture
 004F6380    mov         dl,0FC
 004F6382    and         dl,bl
 004F6384    mov         eax,esi
 004F6386    call        TObject.Destroy
 004F638B    test        bl,bl
>004F638D    jle         004F6396
 004F638F    mov         eax,esi
 004F6391    call        @ClassDestroy
 004F6396    pop         esi
 004F6397    pop         ebx
 004F6398    ret
*}
end;

//004F639C
function TMouse.GetCapture:HWND;
begin
{*
 004F639C    call        user32.GetCapture
 004F63A1    ret
*}
end;

//004F63A4
function TMouse.GetCursorPos:TPoint;
begin
{*
 004F63A4    push        ebx
 004F63A5    add         esp,0FFFFFFF8
 004F63A8    mov         ebx,edx
 004F63AA    push        ebx
 004F63AB    call        user32.GetCursorPos
 004F63B0    test        eax,eax
>004F63B2    jne         004F63CB
 004F63B4    xor         eax,eax
 004F63B6    mov         dword ptr [esp],eax
 004F63B9    xor         eax,eax
 004F63BB    mov         dword ptr [esp+4],eax
 004F63BF    mov         eax,dword ptr [esp]
 004F63C2    mov         dword ptr [ebx],eax
 004F63C4    mov         eax,dword ptr [esp+4]
 004F63C8    mov         dword ptr [ebx+4],eax
 004F63CB    pop         ecx
 004F63CC    pop         edx
 004F63CD    pop         ebx
 004F63CE    ret
*}
end;

//004F63D0
function TMouse.GetIsDragging:Boolean;
begin
{*
 004F63D0    cmp         byte ptr ds:[7CA618],0;gvar_007CA618
 004F63D7    setne       al
 004F63DA    ret
*}
end;

//004F63DC
{*function sub_004F63DC(?:?):?;
begin
 004F63DC    push        ebx
 004F63DD    push        esi
 004F63DE    mov         ebx,eax
 004F63E0    mov         esi,dword ptr [ebx+28]
 004F63E3    test        esi,esi
>004F63E5    je          004F63F5
 004F63E7    mov         eax,esi
 004F63E9    mov         edx,dword ptr [eax]
 004F63EB    call        dword ptr [edx+10C]
 004F63F1    test        al,al
>004F63F3    jne         004F63FA
 004F63F5    xor         eax,eax
 004F63F7    pop         esi
 004F63F8    pop         ebx
 004F63F9    ret
 004F63FA    mov         al,1
 004F63FC    pop         esi
 004F63FD    pop         ebx
 004F63FE    ret
end;*}

//004F6400
procedure TMouse.GetMouseData;
begin
{*
 004F6400    push        ebx
 004F6401    mov         ebx,eax
 004F6403    push        13
 004F6405    call        user32.GetSystemMetrics
 004F640A    cmp         eax,1
 004F640D    sbb         eax,eax
 004F640F    inc         eax
 004F6410    mov         byte ptr [ebx+0C],al
 004F6413    pop         ebx
 004F6414    ret
*}
end;

//004F6418
procedure TMouse.GetNativeData;
begin
{*
 004F6418    push        ebx
 004F6419    push        esi
 004F641A    mov         esi,eax
 004F641C    push        4B
 004F641E    call        user32.GetSystemMetrics
 004F6423    cmp         eax,1
 004F6426    sbb         ebx,ebx
 004F6428    inc         ebx
 004F6429    mov         byte ptr [esi+20],bl
 004F642C    test        bl,bl
>004F642E    je          004F643F
 004F6430    push        0
 004F6432    lea         eax,[esi+10]
 004F6435    push        eax
 004F6436    push        0
 004F6438    push        68
 004F643A    call        user32.SystemParametersInfoW
 004F643F    pop         esi
 004F6440    pop         ebx
 004F6441    ret
*}
end;

//004F6444
procedure TMouse.GetRegisteredData;
begin
{*
 004F6444    push        ebx
 004F6445    push        ecx
 004F6446    mov         ebx,eax
 004F6448    push        esp
 004F6449    lea         eax,[ebx+10]
 004F644C    push        eax
 004F644D    lea         ecx,[ebx+14]
 004F6450    lea         edx,[ebx+24]
 004F6453    lea         eax,[ebx+1C]
 004F6456    call        HwndMSWheel
 004F645B    mov         dword ptr [ebx+18],eax
 004F645E    cmp         dword ptr [ebx+1C],0
 004F6462    setne       al
 004F6465    mov         byte ptr [ebx+20],al
 004F6468    pop         edx
 004F6469    pop         ebx
 004F646A    ret
*}
end;

//004F646C
procedure TMouse.SetCapture(const Value:Windows.HWND);
begin
{*
 004F646C    push        ebx
 004F646D    push        esi
 004F646E    mov         esi,edx
 004F6470    mov         ebx,eax
 004F6472    mov         eax,ebx
 004F6474    call        TMouse.GetCapture
 004F6479    cmp         esi,eax
>004F647B    je          004F648E
 004F647D    test        esi,esi
>004F647F    jne         004F6488
 004F6481    call        user32.ReleaseCapture
>004F6486    jmp         004F648E
 004F6488    push        esi
 004F6489    call        user32.SetCapture
 004F648E    pop         esi
 004F648F    pop         ebx
 004F6490    ret
*}
end;

//004F6494
procedure TMouse.SetCursorPos(const Value:Types.TPoint);
begin
{*
 004F6494    mov         eax,dword ptr [edx+4]
 004F6497    push        eax
 004F6498    mov         eax,dword ptr [edx]
 004F649A    push        eax
 004F649B    call        user32.SetCursorPos
 004F64A0    ret
*}
end;

//004F64A4
procedure TMouse.SetPanningWindow(const Value:TCustomPanningWindow);
begin
{*
 004F64A4    push        ebx
 004F64A5    push        esi
 004F64A6    push        ecx
 004F64A7    mov         esi,edx
 004F64A9    mov         ebx,eax
 004F64AB    mov         eax,dword ptr [ebx+28]
 004F64AE    cmp         esi,eax
>004F64B0    je          004F64D0
 004F64B2    test        eax,eax
>004F64B4    je          004F64CD
 004F64B6    lea         eax,[ebx+28]
 004F64B9    mov         dword ptr [esp],eax
 004F64BC    mov         eax,dword ptr [esp]
 004F64BF    mov         eax,dword ptr [eax]
 004F64C1    mov         edx,dword ptr [esp]
 004F64C4    xor         ecx,ecx
 004F64C6    mov         dword ptr [edx],ecx
 004F64C8    call        TObject.Free
 004F64CD    mov         dword ptr [ebx+28],esi
 004F64D0    pop         edx
 004F64D1    pop         esi
 004F64D2    pop         ebx
 004F64D3    ret
*}
end;

//004F64D4
procedure TMouse.SettingChanged(Setting:Integer);
begin
{*
 004F64D4    push        ebx
 004F64D5    mov         ebx,eax
 004F64D7    sub         edx,1
>004F64DA    jb          004F64E3
 004F64DC    sub         edx,67
>004F64DF    je          004F6502
>004F64E1    jmp         004F6533
 004F64E3    mov         eax,ebx
 004F64E5    call        TMouse.GetMouseData
 004F64EA    cmp         byte ptr [ebx+0D],0
>004F64EE    jne         004F64F9
 004F64F0    mov         eax,ebx
 004F64F2    call        TMouse.GetRegisteredData
>004F64F7    jmp         004F6533
 004F64F9    mov         eax,ebx
 004F64FB    call        TMouse.GetNativeData
 004F6500    pop         ebx
 004F6501    ret
 004F6502    cmp         byte ptr [ebx+20],0
>004F6506    je          004F6533
 004F6508    cmp         byte ptr [ebx+0D],0
>004F650C    je          004F651F
 004F650E    push        0
 004F6510    lea         eax,[ebx+10]
 004F6513    push        eax
 004F6514    push        0
 004F6516    push        68
 004F6518    call        user32.SystemParametersInfoW
>004F651D    jmp         004F6533
 004F651F    push        0
 004F6521    push        0
 004F6523    mov         eax,dword ptr [ebx+14]
 004F6526    push        eax
 004F6527    mov         eax,dword ptr [ebx+18]
 004F652A    push        eax
 004F652B    call        user32.SendMessageW
 004F6530    mov         dword ptr [ebx+10],eax
 004F6533    pop         ebx
 004F6534    ret
*}
end;

//004F6538
procedure InitIMM32;
begin
{*
 004F6538    mov         eax,[007C4EF4];^gvar_007C7CB8:Cardinal
 004F653D    cmp         byte ptr [eax+0C],0
>004F6541    je          004F6560
 004F6543    cmp         dword ptr ds:[7A129C],0;gvar_007A129C
>004F654A    jne         004F6560
 004F654C    mov         edx,8000
 004F6551    mov         eax,4F6570;'imm32.dll'
 004F6556    call        SafeLoadLibrary
 004F655B    mov         [007A129C],eax;gvar_007A129C
 004F6560    ret
*}
end;

//004F6584
{*procedure sub_004F6584(?:HWND; ?:?);
begin
 004F6584    push        ebx
 004F6585    push        esi
 004F6586    push        edi
 004F6587    add         esp,0FFFFFFF8
 004F658A    mov         ebx,edx
 004F658C    mov         edi,eax
 004F658E    cmp         bl,3
>004F6591    je          004F667E
 004F6597    cmp         dword ptr ds:[7A129C],0;gvar_007A129C
>004F659E    je          004F667E
 004F65A4    test        bl,bl
>004F65A6    jne         004F65B7
 004F65A8    push        0
 004F65AA    push        0
 004F65AC    push        edi
 004F65AD    call        004D50B0
>004F65B2    jmp         004F667E
 004F65B7    push        10
 004F65B9    push        0
 004F65BB    push        edi
 004F65BC    call        004D50B0
 004F65C1    mov         eax,ebx
 004F65C3    dec         eax
 004F65C4    sub         al,2
>004F65C6    jae         004F6612
 004F65C8    push        edi
 004F65C9    call        004D5080
 004F65CE    mov         esi,eax
 004F65D0    test        esi,esi
>004F65D2    je          004F667E
 004F65D8    lea         eax,[esp+4]
 004F65DC    push        eax
 004F65DD    lea         eax,[esp+4]
 004F65E1    push        eax
 004F65E2    push        esi
 004F65E3    call        004D50C8
 004F65E8    cmp         bl,2
 004F65EB    sete        al
 004F65EE    neg         al
 004F65F0    sbb         eax,eax
 004F65F2    push        eax
 004F65F3    push        esi
 004F65F4    call        004D50F8
 004F65F9    mov         eax,dword ptr [esp+4]
 004F65FD    push        eax
 004F65FE    mov         eax,dword ptr [esp+4]
 004F6602    push        eax
 004F6603    push        esi
 004F6604    call        004D50E0
 004F6609    push        esi
 004F660A    push        edi
 004F660B    call        004D5098
>004F6610    jmp         004F667E
 004F6612    call        004D71D4
 004F6617    test        al,al
>004F6619    je          004F662E
 004F661B    movzx       eax,bl
 004F661E    mov         eax,dword ptr [eax*4+7A1290];gvar_007A1290
 004F6625    push        eax
 004F6626    push        edi
 004F6627    call        004D716C
>004F662C    jmp         004F667E
 004F662E    push        edi
 004F662F    call        004D5080
 004F6634    mov         esi,eax
 004F6636    test        esi,esi
>004F6638    je          004F667E
 004F663A    push        0FF
 004F663C    push        esi
 004F663D    call        004D50F8
 004F6642    lea         eax,[esp+4]
 004F6646    push        eax
 004F6647    lea         eax,[esp+4]
 004F664B    push        eax
 004F664C    push        esi
 004F664D    call        004D50C8
 004F6652    mov         eax,dword ptr [esp]
 004F6655    and         eax,0FFFFFFF4
 004F6658    movzx       edx,bl
 004F665B    movzx       edx,byte ptr [edx+7A12BC]
 004F6662    or          eax,edx
 004F6664    mov         dword ptr [esp],eax
 004F6667    mov         eax,dword ptr [esp+4]
 004F666B    push        eax
 004F666C    mov         eax,dword ptr [esp+4]
 004F6670    push        eax
 004F6671    push        esi
 004F6672    call        004D50E0
 004F6677    push        esi
 004F6678    push        edi
 004F6679    call        004D5098
 004F667E    pop         ecx
 004F667F    pop         edx
 004F6680    pop         edi
 004F6681    pop         esi
 004F6682    pop         ebx
 004F6683    ret
end;*}

//004F6684
{*function sub_004F6684(?:?):?;
begin
 004F6684    push        ebx
 004F6685    mov         ebx,eax
 004F6687    cmp         dword ptr ds:[7A129C],0;gvar_007A129C
>004F668E    je          004F669E
 004F6690    push        ebx
 004F6691    call        004D5068
 004F6696    cmp         eax,1
 004F6699    sbb         eax,eax
 004F669B    inc         eax
 004F669C    pop         ebx
 004F669D    ret
 004F669E    xor         eax,eax
 004F66A0    pop         ebx
 004F66A1    ret
end;*}

//004F66A4
procedure DoneControls;
begin
{*
 004F66A4    mov         eax,[007CA630]
 004F66A9    xor         edx,edx
 004F66AB    mov         dword ptr ds:[7CA630],edx
 004F66B1    call        TObject.Free
 004F66B6    mov         eax,[007C4A18];^Application:TApplication
 004F66BB    mov         eax,dword ptr [eax]
 004F66BD    call        TObject.Free
 004F66C2    mov         eax,[007C4A18];^Application:TApplication
 004F66C7    xor         edx,edx
 004F66C9    mov         dword ptr [eax],edx
 004F66CB    mov         eax,[007C4E78];^Screen:TScreen
 004F66D0    mov         eax,dword ptr [eax]
 004F66D2    call        TObject.Free
 004F66D7    mov         eax,[007C4E78];^Screen:TScreen
 004F66DC    xor         edx,edx
 004F66DE    mov         dword ptr [eax],edx
 004F66E0    mov         eax,[007CA5D4];gvar_007CA5D4
 004F66E5    call        TObject.Free
 004F66EA    xor         eax,eax
 004F66EC    mov         [007CA5D4],eax;gvar_007CA5D4
 004F66F1    mov         eax,[007CA62C];gvar_007CA62C
 004F66F6    call        TObject.Free
 004F66FB    mov         eax,[00573D6C];TStyleManager
 004F6700    call        TStyleManager.UnInitialize
 004F6705    movzx       eax,word ptr ds:[7CA5EA];gvar_007CA5EA
 004F670C    push        eax
 004F670D    call        kernel32.GlobalDeleteAtom
 004F6712    mov         eax,7CA5F0
 004F6717    call        @UStrClr
 004F671C    movzx       eax,word ptr ds:[7CA5E8];gvar_007CA5E8
 004F6723    push        eax
 004F6724    call        kernel32.GlobalDeleteAtom
 004F6729    mov         eax,7CA5EC
 004F672E    call        @UStrClr
 004F6733    cmp         dword ptr ds:[7A129C],0;gvar_007A129C
>004F673A    je          004F6747
 004F673C    mov         eax,[007A129C];gvar_007A129C
 004F6741    push        eax
 004F6742    call        kernel32.FreeLibrary
 004F6747    ret
*}
end;

//004F6748
procedure InitControls;
begin
{*
 004F6748    push        ebp
 004F6749    mov         ebp,esp
 004F674B    add         esp,0FFFFFFE0
 004F674E    push        ebx
 004F674F    xor         eax,eax
 004F6751    mov         dword ptr [ebp-10],eax
 004F6754    mov         dword ptr [ebp-4],eax
 004F6757    xor         eax,eax
 004F6759    push        ebp
 004F675A    push        4F68E5
 004F675F    push        dword ptr fs:[eax]
 004F6762    mov         dword ptr fs:[eax],esp
 004F6765    lea         eax,[ebp-4]
 004F6768    push        eax
 004F6769    call        kernel32.GetCurrentProcessId
 004F676E    mov         dword ptr [ebp-0C],eax
 004F6771    mov         byte ptr [ebp-8],0
 004F6775    lea         edx,[ebp-0C]
 004F6778    xor         ecx,ecx
 004F677A    mov         eax,4F6900;'Delphi%.8X'
 004F677F    call        Format
 004F6784    mov         edx,dword ptr [ebp-4]
 004F6787    mov         eax,7CA5EC
 004F678C    call        @UStrAsg
 004F6791    mov         eax,[007CA5EC]
 004F6796    call        @UStrToPWChar
 004F679B    push        eax
 004F679C    call        kernel32.GlobalAddAtomW
 004F67A1    mov         [007CA5E8],ax;gvar_007CA5E8
 004F67A7    lea         eax,[ebp-10]
 004F67AA    push        eax
 004F67AB    mov         eax,[007C7C54];gvar_007C7C54
 004F67B0    mov         dword ptr [ebp-20],eax
 004F67B3    mov         byte ptr [ebp-1C],0
 004F67B7    call        kernel32.GetCurrentThreadId
 004F67BC    mov         dword ptr [ebp-18],eax
 004F67BF    mov         byte ptr [ebp-14],0
 004F67C3    lea         edx,[ebp-20]
 004F67C6    mov         ecx,1
 004F67CB    mov         eax,4F6924;'ControlOfs%.8X%.8X'
 004F67D0    call        Format
 004F67D5    mov         edx,dword ptr [ebp-10]
 004F67D8    mov         eax,7CA5F0
 004F67DD    call        @UStrAsg
 004F67E2    mov         eax,[007CA5F0]
 004F67E7    call        @UStrToPWChar
 004F67EC    push        eax
 004F67ED    call        kernel32.GlobalAddAtomW
 004F67F2    mov         [007CA5EA],ax;gvar_007CA5EA
 004F67F8    push        4F694C
 004F67FD    call        user32.RegisterWindowMessageW
 004F6802    mov         [007CA5F4],eax
 004F6807    mov         dl,1
 004F6809    mov         eax,[0046C9C0];TThreadList
 004F680E    call        TThreadList.Create
 004F6813    mov         [007CA62C],eax;gvar_007CA62C
 004F6818    call        InitIMM32
 004F681D    mov         dl,1
 004F681F    mov         eax,[004E1BD4];TMouse
 004F6824    call        TMouse.Create
 004F6829    mov         [007CA5D4],eax;gvar_007CA5D4
 004F682E    xor         ecx,ecx
 004F6830    mov         dl,1
 004F6832    mov         eax,[005BA1FC];TScreen
 004F6837    call        TScreen.Create
 004F683C    mov         edx,dword ptr ds:[7C4E78];^Screen:TScreen
 004F6842    mov         dword ptr [edx],eax
 004F6844    mov         eax,[00573D6C];TStyleManager
 004F6849    call        TStyleManager.Initialize
 004F684E    xor         ecx,ecx
 004F6850    mov         dl,1
 004F6852    mov         eax,[005BB5E4];TApplication
 004F6857    call        TApplication.Create
 004F685C    mov         edx,dword ptr ds:[7C4A18];^Application:TApplication
 004F6862    mov         dword ptr [edx],eax
 004F6864    mov         eax,[007C4A18];^Application:TApplication
 004F6869    mov         eax,dword ptr [eax]
 004F686B    mov         dl,1
 004F686D    call        TApplication.SetShowHint
 004F6872    xor         ecx,ecx
 004F6874    mov         dl,1
 004F6876    mov         eax,[004DC470];TControl
 004F687B    call        TControl.Create
 004F6880    mov         [007CA630],eax
 004F6885    push        4F6984
 004F688A    call        kernel32.GetModuleHandleW
 004F688F    mov         ebx,eax
 004F6891    mov         eax,[0040F70C];TCursor
 004F6896    call        FindIntToIdent
 004F689B    test        eax,eax
>004F689D    jne         004F68B3
 004F689F    mov         ecx,4E36B0
 004F68A4    mov         edx,4E36B8
 004F68A9    mov         eax,[0040F70C];TCursor
 004F68AE    call        RegisterIntegerConsts
 004F68B3    test        ebx,ebx
>004F68B5    je          004F68C7
 004F68B7    push        4F6994
 004F68BC    push        ebx
 004F68BD    call        GetProcAddress
 004F68C2    mov         [007A11A0],eax;gvar_007A11A0
 004F68C7    xor         eax,eax
 004F68C9    pop         edx
 004F68CA    pop         ecx
 004F68CB    pop         ecx
 004F68CC    mov         dword ptr fs:[eax],edx
 004F68CF    push        4F68EC
 004F68D4    lea         eax,[ebp-10]
 004F68D7    call        @UStrClr
 004F68DC    lea         eax,[ebp-4]
 004F68DF    call        @UStrClr
 004F68E4    ret
>004F68E5    jmp         @HandleFinally
>004F68EA    jmp         004F68D4
 004F68EC    pop         ebx
 004F68ED    mov         esp,ebp
 004F68EF    pop         ebp
 004F68F0    ret
*}
end;

//004F69B0
constructor TCustomListControl.Create(AOwner:TComponent);
begin
{*
 004F69B0    push        ebp
 004F69B1    mov         ebp,esp
 004F69B3    push        ecx
 004F69B4    push        ebx
 004F69B5    test        dl,dl
>004F69B7    je          004F69C1
 004F69B9    add         esp,0FFFFFFF0
 004F69BC    call        @ClassCreate
 004F69C1    mov         byte ptr [ebp-1],dl
 004F69C4    mov         ebx,eax
 004F69C6    xor         edx,edx
 004F69C8    mov         eax,ebx
 004F69CA    call        TWinControl.Create
 004F69CF    mov         eax,dword ptr [ebx+0BC];TCustomListControl.FTouchManager:TTouchManager
 004F69D5    movzx       edx,byte ptr ds:[4F6A08];0x12 gvar_004F6A08
 004F69DC    mov         byte ptr [eax+10],dl;TTouchManager.FInteractiveGestures:TInteractiveGestures
 004F69DF    movzx       edx,byte ptr ds:[4F6A0C];0x1F gvar_004F6A0C
 004F69E6    mov         byte ptr [eax+11],dl;TTouchManager.FInteractiveGestureOptions:TInteractiveGestureOptions
 004F69E9    mov         eax,ebx
 004F69EB    cmp         byte ptr [ebp-1],0
>004F69EF    je          004F6A00
 004F69F1    call        @AfterConstruction
 004F69F6    pop         dword ptr fs:[0]
 004F69FD    add         esp,0C
 004F6A00    mov         eax,ebx
 004F6A02    pop         ebx
 004F6A03    pop         ecx
 004F6A04    pop         ebp
 004F6A05    ret
*}
end;

//004F6A10
{*procedure TCustomListControl.sub_004E5F1C(?:?);
begin
 004F6A10    push        ebx
 004F6A11    push        esi
 004F6A12    mov         ebx,edx
 004F6A14    mov         esi,eax
 004F6A16    mov         edx,ebx
 004F6A18    mov         eax,esi
 004F6A1A    call        TControl.sub_004E5F1C
 004F6A1F    sub         bl,1
>004F6A22    jb          004F6A28
>004F6A24    je          004F6A3E
>004F6A26    jmp         004F6A51
 004F6A28    mov         eax,dword ptr [esi+0BC];TCustomListControl.FTouchManager:TTouchManager
 004F6A2E    movzx       edx,byte ptr ds:[4F6A54];0x12 gvar_004F6A54
 004F6A35    cmp         dl,byte ptr [eax+10];TTouchManager.FInteractiveGestures:TInteractiveGestures
 004F6A38    setne       al
 004F6A3B    pop         esi
 004F6A3C    pop         ebx
 004F6A3D    ret
 004F6A3E    mov         eax,dword ptr [esi+0BC];TCustomListControl.FTouchManager:TTouchManager
 004F6A44    movzx       edx,byte ptr ds:[4F6A58];0x1F gvar_004F6A58
 004F6A4B    cmp         dl,byte ptr [eax+11];TTouchManager.FInteractiveGestureOptions:TInteractiveGestureOptions
 004F6A4E    setne       al
 004F6A51    pop         esi
 004F6A52    pop         ebx
 004F6A53    ret
end;*}

//004F6A5C
procedure TCustomListControl.MoveSelection(Destination:TCustomListControl);
begin
{*
 004F6A5C    push        ebx
 004F6A5D    mov         ebx,eax
 004F6A5F    mov         eax,ebx
 004F6A61    mov         ecx,dword ptr [eax]
 004F6A63    call        dword ptr [ecx+11C];TCustomListControl.CopySelection
 004F6A69    mov         eax,ebx
 004F6A6B    mov         edx,dword ptr [eax]
 004F6A6D    call        dword ptr [edx+120];TCustomListControl.DeleteSelected
 004F6A73    pop         ebx
 004F6A74    ret
*}
end;

//004F6A78
constructor TMargins.Create;
begin
{*
 004F6A78    push        ebx
 004F6A79    push        esi
 004F6A7A    push        edi
 004F6A7B    test        dl,dl
>004F6A7D    je          004F6A87
 004F6A7F    add         esp,0FFFFFFF0
 004F6A82    call        @ClassCreate
 004F6A87    mov         esi,ecx
 004F6A89    mov         ebx,edx
 004F6A8B    mov         edi,eax
 004F6A8D    xor         edx,edx
 004F6A8F    mov         eax,edi
 004F6A91    call        TObject.Create
 004F6A96    mov         dword ptr [edi+4],esi
 004F6A99    mov         eax,dword ptr [edi]
 004F6A9B    mov         edx,edi
 004F6A9D    call        dword ptr [eax+14]
 004F6AA0    mov         eax,edi
 004F6AA2    test        bl,bl
>004F6AA4    je          004F6AB5
 004F6AA6    call        @AfterConstruction
 004F6AAB    pop         dword ptr fs:[0]
 004F6AB2    add         esp,0C
 004F6AB5    mov         eax,edi
 004F6AB7    pop         edi
 004F6AB8    pop         esi
 004F6AB9    pop         ebx
 004F6ABA    ret
*}
end;

//004F6ABC
procedure TMargins.AssignTo(Dest:Classes.TPersistent);
begin
{*
 004F6ABC    push        ebx
 004F6ABD    push        esi
 004F6ABE    mov         ebx,edx
 004F6AC0    mov         esi,eax
 004F6AC2    mov         eax,ebx
 004F6AC4    mov         edx,dword ptr ds:[4D99E8];TMargins
 004F6ACA    call        @IsClass
 004F6ACF    test        al,al
>004F6AD1    je          004F6AF5
 004F6AD3    mov         eax,ebx
 004F6AD5    mov         edx,dword ptr [esi+8]
 004F6AD8    mov         dword ptr [eax+8],edx
 004F6ADB    mov         edx,dword ptr [esi+0C]
 004F6ADE    mov         dword ptr [eax+0C],edx
 004F6AE1    mov         edx,dword ptr [esi+10]
 004F6AE4    mov         dword ptr [eax+10],edx
 004F6AE7    mov         edx,dword ptr [esi+14]
 004F6AEA    mov         dword ptr [eax+14],edx
 004F6AED    mov         edx,dword ptr [eax]
 004F6AEF    call        dword ptr [edx+0C]
 004F6AF2    pop         esi
 004F6AF3    pop         ebx
 004F6AF4    ret
 004F6AF5    mov         edx,ebx
 004F6AF7    mov         eax,esi
 004F6AF9    call        TPersistent.AssignTo
 004F6AFE    pop         esi
 004F6AFF    pop         ebx
 004F6B00    ret
*}
end;

//004F6B04
procedure TSizeConstraints.Change;
begin
{*
 004F6B04    push        ebx
 004F6B05    cmp         word ptr [eax+1A],0
>004F6B0A    je          004F6B16
 004F6B0C    mov         ebx,eax
 004F6B0E    mov         edx,eax
 004F6B10    mov         eax,dword ptr [ebx+1C]
 004F6B13    call        dword ptr [ebx+18]
 004F6B16    pop         ebx
 004F6B17    ret
*}
end;

//004F6B18
procedure TMargins.InitDefaults(Margins:TMargins);
begin
{*
 004F6B18    mov         dword ptr [edx+8],3
 004F6B1F    mov         dword ptr [edx+10],3
 004F6B26    mov         dword ptr [edx+0C],3
 004F6B2D    mov         dword ptr [edx+14],3
 004F6B34    ret
*}
end;

//004F6B38
procedure TMargins.SetLeft(Value:TMarginSize; ?:Integer);
begin
{*
 004F6B38    sub         edx,1
>004F6B3B    jb          004F6B47
>004F6B3D    je          004F6B55
 004F6B3F    dec         edx
>004F6B40    je          004F6B63
 004F6B42    dec         edx
>004F6B43    je          004F6B71
>004F6B45    jmp         004F6B7E
 004F6B47    cmp         ecx,dword ptr [eax+8];TMargins.FLeft:TMarginSize
>004F6B4A    je          004F6B7E
 004F6B4C    mov         dword ptr [eax+8],ecx;TMargins.FLeft:TMarginSize
 004F6B4F    mov         edx,dword ptr [eax]
 004F6B51    call        dword ptr [edx+0C];TSizeConstraints.Change
 004F6B54    ret
 004F6B55    cmp         ecx,dword ptr [eax+0C];TMargins.FTop:TMarginSize
>004F6B58    je          004F6B7E
 004F6B5A    mov         dword ptr [eax+0C],ecx;TMargins.FTop:TMarginSize
 004F6B5D    mov         edx,dword ptr [eax]
 004F6B5F    call        dword ptr [edx+0C];TSizeConstraints.Change
 004F6B62    ret
 004F6B63    cmp         ecx,dword ptr [eax+10];TMargins.FRight:TMarginSize
>004F6B66    je          004F6B7E
 004F6B68    mov         dword ptr [eax+10],ecx;TMargins.FRight:TMarginSize
 004F6B6B    mov         edx,dword ptr [eax]
 004F6B6D    call        dword ptr [edx+0C];TSizeConstraints.Change
 004F6B70    ret
 004F6B71    cmp         ecx,dword ptr [eax+14];TMargins.FBottom:TMarginSize
>004F6B74    je          004F6B7E
 004F6B76    mov         dword ptr [eax+14],ecx;TMargins.FBottom:TMarginSize
 004F6B79    mov         edx,dword ptr [eax]
 004F6B7B    call        dword ptr [edx+0C];TSizeConstraints.Change
 004F6B7E    ret
*}
end;

//004F6B80
procedure TMargins.SetControlBounds(ALeft:Integer; ATop:Integer; Aligning:Boolean; AHeight:Integer; AWidth:Integer);
begin
{*
 004F6B80    push        ebp
 004F6B81    mov         ebp,esp
 004F6B83    add         esp,0FFFFFFF8
 004F6B86    push        ebx
 004F6B87    push        esi
 004F6B88    push        edi
 004F6B89    mov         dword ptr [ebp-8],ecx
 004F6B8C    mov         edi,edx
 004F6B8E    mov         dword ptr [ebp-4],eax
 004F6B91    mov         eax,dword ptr [ebp-4]
 004F6B94    mov         ebx,dword ptr [eax+4];TMargins.FControl:TControl
 004F6B97    test        ebx,ebx
>004F6B99    je          004F6C6A
 004F6B9F    cmp         byte ptr [ebp+8],0
>004F6BA3    je          004F6BB3
 004F6BA5    mov         byte ptr [ebx+189],1;TControl.FAnchorMove:Boolean
 004F6BAC    or          dword ptr [ebx+64],4000;TControl.FControlState:TControlState
 004F6BB3    xor         edx,edx
 004F6BB5    push        ebp
 004F6BB6    push        4F6C63
 004F6BBB    push        dword ptr fs:[edx]
 004F6BBE    mov         dword ptr fs:[edx],esp
 004F6BC1    mov         eax,dword ptr [ebp-4]
 004F6BC4    mov         esi,dword ptr [eax+4];TMargins.FControl:TControl
 004F6BC7    mov         eax,esi
 004F6BC9    test        byte ptr [eax+62],10;TControl.FEnabled:Boolean
 004F6BCD    setne       al
 004F6BD0    test        al,al
>004F6BD2    je          004F6BDD
 004F6BD4    cmp         dword ptr [esi+40],0;TControl.FParent:TWinControl
 004F6BD8    setne       al
>004F6BDB    jmp         004F6BDF
 004F6BDD    xor         eax,eax
 004F6BDF    test        al,al
>004F6BE1    je          004F6C24
 004F6BE3    mov         eax,dword ptr [ebp-4]
 004F6BE6    mov         eax,dword ptr [eax+8];TMargins.FLeft:TMarginSize
 004F6BE9    mov         edx,dword ptr [ebp-4]
 004F6BEC    add         eax,dword ptr [edx+10];TMargins.FRight:TMarginSize
 004F6BEF    mov         edx,dword ptr [ebp+10]
 004F6BF2    sub         edx,eax
 004F6BF4    push        edx
 004F6BF5    mov         eax,dword ptr [ebp-4]
 004F6BF8    mov         eax,dword ptr [eax+0C];TMargins.FTop:TMarginSize
 004F6BFB    mov         edx,dword ptr [ebp-4]
 004F6BFE    add         eax,dword ptr [edx+14];TMargins.FBottom:TMarginSize
 004F6C01    mov         edx,dword ptr [ebp+0C]
 004F6C04    sub         edx,eax
 004F6C06    push        edx
 004F6C07    mov         eax,dword ptr [ebp-4]
 004F6C0A    mov         ecx,dword ptr [eax+0C];TMargins.FTop:TMarginSize
 004F6C0D    add         ecx,dword ptr [ebp-8]
 004F6C10    mov         eax,dword ptr [ebp-4]
 004F6C13    mov         edx,dword ptr [eax+8];TMargins.FLeft:TMarginSize
 004F6C16    add         edx,edi
 004F6C18    mov         eax,esi
 004F6C1A    mov         ebx,dword ptr [eax]
 004F6C1C    call        dword ptr [ebx+0B0];TControl.SetBounds
>004F6C22    jmp         004F6C3B
 004F6C24    mov         eax,dword ptr [ebp+10]
 004F6C27    push        eax
 004F6C28    mov         eax,dword ptr [ebp+0C]
 004F6C2B    push        eax
 004F6C2C    mov         eax,esi
 004F6C2E    mov         ecx,dword ptr [ebp-8]
 004F6C31    mov         edx,edi
 004F6C33    mov         ebx,dword ptr [eax]
 004F6C35    call        dword ptr [ebx+0B0];TControl.SetBounds
 004F6C3B    xor         eax,eax
 004F6C3D    pop         edx
 004F6C3E    pop         ecx
 004F6C3F    pop         ecx
 004F6C40    mov         dword ptr fs:[eax],edx
 004F6C43    push        4F6C6A
 004F6C48    cmp         byte ptr [ebp+8],0
>004F6C4C    je          004F6C62
 004F6C4E    mov         eax,dword ptr [ebp-4]
 004F6C51    mov         ebx,dword ptr [eax+4];TMargins.FControl:TControl
 004F6C54    mov         byte ptr [ebx+189],0;TControl.FAnchorMove:Boolean
 004F6C5B    and         dword ptr [ebx+64],0FFFFBFFF;TControl.FControlState:TControlState
 004F6C62    ret
>004F6C63    jmp         @HandleFinally
>004F6C68    jmp         004F6C48
 004F6C6A    pop         edi
 004F6C6B    pop         esi
 004F6C6C    pop         ebx
 004F6C6D    pop         ecx
 004F6C6E    pop         ecx
 004F6C6F    pop         ebp
 004F6C70    ret         0C
*}
end;

//004F6C74
{*function sub_004F6C74(?:?):?;
begin
 004F6C74    push        esi
 004F6C75    xor         ecx,ecx
 004F6C77    mov         esi,dword ptr [eax+4];TMargins.FControl:TControl
 004F6C7A    test        esi,esi
>004F6C7C    je          004F6E3A
 004F6C82    cmp         edx,7
>004F6C85    ja          004F6E3A
 004F6C8B    jmp         dword ptr [edx*4+4F6C92]
 004F6C8B    dd          004F6CB2
 004F6C8B    dd          004F6CE1
 004F6C8B    dd          004F6D10
 004F6C8B    dd          004F6D42
 004F6C8B    dd          004F6D74
 004F6C8B    dd          004F6DA9
 004F6C8B    dd          004F6DD8
 004F6C8B    dd          004F6E0A
 004F6CB2    mov         edx,esi
 004F6CB4    test        byte ptr [edx+62],10;TControl.FEnabled:Boolean
 004F6CB8    setne       dl
 004F6CBB    test        dl,dl
>004F6CBD    je          004F6CC8
 004F6CBF    cmp         dword ptr [esi+40],0;TControl.FParent:TWinControl
 004F6CC3    setne       dl
>004F6CC6    jmp         004F6CCA
 004F6CC8    xor         edx,edx
 004F6CCA    test        dl,dl
>004F6CCC    je          004F6CD9
 004F6CCE    mov         ecx,dword ptr [esi+50];TControl.FLeft:Integer
 004F6CD1    sub         ecx,dword ptr [eax+8]
>004F6CD4    jmp         004F6E3A
 004F6CD9    mov         ecx,dword ptr [esi+50];TControl.FLeft:Integer
>004F6CDC    jmp         004F6E3A
 004F6CE1    mov         edx,esi
 004F6CE3    test        byte ptr [edx+62],10;TControl.FEnabled:Boolean
 004F6CE7    setne       dl
 004F6CEA    test        dl,dl
>004F6CEC    je          004F6CF7
 004F6CEE    cmp         dword ptr [esi+40],0;TControl.FParent:TWinControl
 004F6CF2    setne       dl
>004F6CF5    jmp         004F6CF9
 004F6CF7    xor         edx,edx
 004F6CF9    test        dl,dl
>004F6CFB    je          004F6D08
 004F6CFD    mov         ecx,dword ptr [esi+54];TControl.FTop:Integer
 004F6D00    sub         ecx,dword ptr [eax+0C]
>004F6D03    jmp         004F6E3A
 004F6D08    mov         ecx,dword ptr [esi+54];TControl.FTop:Integer
>004F6D0B    jmp         004F6E3A
 004F6D10    mov         edx,esi
 004F6D12    test        byte ptr [edx+62],10;TControl.FEnabled:Boolean
 004F6D16    setne       dl
 004F6D19    test        dl,dl
>004F6D1B    je          004F6D26
 004F6D1D    cmp         dword ptr [esi+40],0;TControl.FParent:TWinControl
 004F6D21    setne       dl
>004F6D24    jmp         004F6D28
 004F6D26    xor         edx,edx
 004F6D28    test        dl,dl
>004F6D2A    je          004F6D3A
 004F6D2C    mov         ecx,dword ptr [esi+58];TControl.FWidth:Integer
 004F6D2F    add         ecx,dword ptr [eax+8];TMargins.FLeft:TMarginSize
 004F6D32    add         ecx,dword ptr [eax+10];TMargins.FRight:TMarginSize
>004F6D35    jmp         004F6E3A
 004F6D3A    mov         ecx,dword ptr [esi+58];TControl.FWidth:Integer
>004F6D3D    jmp         004F6E3A
 004F6D42    mov         edx,esi
 004F6D44    test        byte ptr [edx+62],10;TControl.FEnabled:Boolean
 004F6D48    setne       dl
 004F6D4B    test        dl,dl
>004F6D4D    je          004F6D58
 004F6D4F    cmp         dword ptr [esi+40],0;TControl.FParent:TWinControl
 004F6D53    setne       dl
>004F6D56    jmp         004F6D5A
 004F6D58    xor         edx,edx
 004F6D5A    test        dl,dl
>004F6D5C    je          004F6D6C
 004F6D5E    mov         ecx,dword ptr [esi+5C];TControl.FHeight:Integer
 004F6D61    add         ecx,dword ptr [eax+0C];TMargins.FTop:TMarginSize
 004F6D64    add         ecx,dword ptr [eax+14];TMargins.FBottom:TMarginSize
>004F6D67    jmp         004F6E3A
 004F6D6C    mov         ecx,dword ptr [esi+5C];TControl.FHeight:Integer
>004F6D6F    jmp         004F6E3A
 004F6D74    mov         edx,esi
 004F6D76    test        byte ptr [edx+62],10;TControl.FEnabled:Boolean
 004F6D7A    setne       dl
 004F6D7D    test        dl,dl
>004F6D7F    je          004F6D8A
 004F6D81    cmp         dword ptr [esi+40],0;TControl.FParent:TWinControl
 004F6D85    setne       dl
>004F6D88    jmp         004F6D8C
 004F6D8A    xor         edx,edx
 004F6D8C    test        dl,dl
>004F6D8E    je          004F6D9E
 004F6D90    mov         ecx,dword ptr [esi+1A4];TControl.FExplicitLeft:Integer
 004F6D96    sub         ecx,dword ptr [eax+8]
>004F6D99    jmp         004F6E3A
 004F6D9E    mov         ecx,dword ptr [esi+1A4];TControl.FExplicitLeft:Integer
>004F6DA4    jmp         004F6E3A
 004F6DA9    mov         edx,esi
 004F6DAB    test        byte ptr [edx+62],10;TControl.FEnabled:Boolean
 004F6DAF    setne       dl
 004F6DB2    test        dl,dl
>004F6DB4    je          004F6DBF
 004F6DB6    cmp         dword ptr [esi+40],0;TControl.FParent:TWinControl
 004F6DBA    setne       dl
>004F6DBD    jmp         004F6DC1
 004F6DBF    xor         edx,edx
 004F6DC1    test        dl,dl
>004F6DC3    je          004F6DD0
 004F6DC5    mov         ecx,dword ptr [esi+1A8];TControl.FExplicitTop:Integer
 004F6DCB    sub         ecx,dword ptr [eax+0C]
>004F6DCE    jmp         004F6E3A
 004F6DD0    mov         ecx,dword ptr [esi+1A8];TControl.FExplicitTop:Integer
>004F6DD6    jmp         004F6E3A
 004F6DD8    mov         edx,esi
 004F6DDA    test        byte ptr [edx+62],10;TControl.FEnabled:Boolean
 004F6DDE    setne       dl
 004F6DE1    test        dl,dl
>004F6DE3    je          004F6DEE
 004F6DE5    cmp         dword ptr [esi+40],0;TControl.FParent:TWinControl
 004F6DE9    setne       dl
>004F6DEC    jmp         004F6DF0
 004F6DEE    xor         edx,edx
 004F6DF0    test        dl,dl
>004F6DF2    je          004F6E02
 004F6DF4    mov         ecx,dword ptr [esi+1AC];TControl.FExplicitWidth:Integer
 004F6DFA    add         ecx,dword ptr [eax+8];TMargins.FLeft:TMarginSize
 004F6DFD    add         ecx,dword ptr [eax+10];TMargins.FRight:TMarginSize
>004F6E00    jmp         004F6E3A
 004F6E02    mov         ecx,dword ptr [esi+1AC];TControl.FExplicitWidth:Integer
>004F6E08    jmp         004F6E3A
 004F6E0A    mov         edx,esi
 004F6E0C    test        byte ptr [edx+62],10;TControl.FEnabled:Boolean
 004F6E10    setne       dl
 004F6E13    test        dl,dl
>004F6E15    je          004F6E20
 004F6E17    cmp         dword ptr [esi+40],0;TControl.FParent:TWinControl
 004F6E1B    setne       dl
>004F6E1E    jmp         004F6E22
 004F6E20    xor         edx,edx
 004F6E22    test        dl,dl
>004F6E24    je          004F6E34
 004F6E26    mov         ecx,dword ptr [esi+1B0];TControl.FExplicitHeight:Integer
 004F6E2C    add         ecx,dword ptr [eax+0C];TMargins.FTop:TMarginSize
 004F6E2F    add         ecx,dword ptr [eax+14];TMargins.FBottom:TMarginSize
>004F6E32    jmp         004F6E3A
 004F6E34    mov         ecx,dword ptr [esi+1B0];TControl.FExplicitHeight:Integer
 004F6E3A    mov         eax,ecx
 004F6E3C    pop         esi
 004F6E3D    ret
end;*}

//004F6E40
procedure TPadding.InitDefaults(Margins:TMargins);
begin
{*
 004F6E40    ret
*}
end;

//004F6E44
procedure TCustomHintWindow.AutoSize;
begin
{*
 004F6E44    mov         edx,eax
 004F6E46    mov         eax,dword ptr [eax+298];TCustomHintWindow.FHintParent:TCustomHint
 004F6E4C    mov         ecx,dword ptr [eax]
 004F6E4E    call        dword ptr [ecx+4C];TCustomHint.SetHintSize
 004F6E51    ret
*}
end;

//004F6E54
procedure TCustomHintWindow.CMTextChanged;
begin
{*
 004F6E54    call        TWinControl.CMTextChanged
 004F6E59    ret
*}
end;

//004F6E5C
constructor TCustomHintWindow.Create(AOwner:TComponent);
begin
{*
 004F6E5C    push        ebx
 004F6E5D    push        esi
 004F6E5E    test        dl,dl
>004F6E60    je          004F6E6A
 004F6E62    add         esp,0FFFFFFF0
 004F6E65    call        @ClassCreate
 004F6E6A    mov         ebx,edx
 004F6E6C    mov         esi,eax
 004F6E6E    xor         edx,edx
 004F6E70    mov         eax,esi
 004F6E72    call        TCustomControl.Create
 004F6E77    xor         edx,edx
 004F6E79    mov         eax,esi
 004F6E7B    call        TControl.SetVisible
 004F6E80    mov         edx,80FFFF
 004F6E85    mov         eax,esi
 004F6E87    call        TGroupBox.SetColor
 004F6E8C    mov         eax,[007C4E78];^Screen:TScreen
 004F6E91    mov         eax,dword ptr [eax]
 004F6E93    mov         edx,dword ptr [eax+88];TScreen.FHintFont:TFont
 004F6E99    mov         eax,dword ptr [esi+290];TCustomHintWindow.FCanvas:TCanvas
 004F6E9F    call        TCanvas.SetFont
 004F6EA4    mov         eax,dword ptr [esi+290];TCustomHintWindow.FCanvas:TCanvas
 004F6EAA    mov         eax,dword ptr [eax+48];TCanvas.FBrush:TBrush
 004F6EAD    mov         dl,1
 004F6EAF    call        TBrush.SetStyle
 004F6EB4    xor         edx,edx
 004F6EB6    mov         eax,esi
 004F6EB8    call        TControl.SetWidth
 004F6EBD    xor         edx,edx
 004F6EBF    mov         eax,esi
 004F6EC1    call        TControl.SetHeight
 004F6EC6    mov         eax,esi
 004F6EC8    test        bl,bl
>004F6ECA    je          004F6EDB
 004F6ECC    call        @AfterConstruction
 004F6ED1    pop         dword ptr fs:[0]
 004F6ED8    add         esp,0C
 004F6EDB    mov         eax,esi
 004F6EDD    pop         esi
 004F6EDE    pop         ebx
 004F6EDF    ret
*}
end;

//004F6EE0
procedure TCustomHintWindow.CreateParams(var Params:TCreateParams);
begin
{*
 004F6EE0    push        ebx
 004F6EE1    mov         ebx,edx
 004F6EE3    mov         edx,ebx
 004F6EE5    call        TWinControl.CreateParams
 004F6EEA    mov         dword ptr [ebx+4],80000000
 004F6EF1    mov         dword ptr [ebx+8],88
 004F6EF8    pop         ebx
 004F6EF9    ret
*}
end;

//004F6EFC
procedure TCustomHintWindow.CreateWnd;
begin
{*
 004F6EFC    push        ebx
 004F6EFD    push        esi
 004F6EFE    mov         ebx,eax
 004F6F00    mov         eax,ebx
 004F6F02    call        TWinControl.CreateWnd
 004F6F07    call        TStyleManager.GetActiveStyle
 004F6F0C    mov         esi,eax
 004F6F0E    mov         eax,esi
 004F6F10    mov         edx,dword ptr [eax]
 004F6F12    call        dword ptr [edx+4C];TCustomStyleServices.GetEnabled
 004F6F15    test        al,al
>004F6F17    je          004F6F59
 004F6F19    mov         eax,ebx
 004F6F1B    call        TWinControl.GetHandle
 004F6F20    mov         esi,eax
 004F6F22    mov         eax,ebx
 004F6F24    call        TWinControl.GetHandle
 004F6F29    push        0EC
 004F6F2B    push        eax
 004F6F2C    call        user32.GetWindowLongW
 004F6F31    or          eax,80000
 004F6F36    push        eax
 004F6F37    push        0EC
 004F6F39    push        esi
 004F6F3A    call        user32.SetWindowLongW
 004F6F3F    push        3
 004F6F41    push        0
 004F6F43    push        0FF00
 004F6F48    mov         eax,ebx
 004F6F4A    call        TWinControl.GetHandle
 004F6F4F    push        eax
 004F6F50    mov         eax,[007C4810];^gvar_007A1CA8:Pointer
 004F6F55    mov         eax,dword ptr [eax]
 004F6F57    call        eax
 004F6F59    pop         esi
 004F6F5A    pop         ebx
 004F6F5B    ret
*}
end;

//004F6F5C
{*procedure sub_004F6F5C(?:?);
begin
 004F6F5C    push        ebx
 004F6F5D    mov         ecx,edx
 004F6F5F    mov         edx,dword ptr [eax+298];TCustomHintWindow.FHintParent:TCustomHint
 004F6F65    xchg        eax,edx
 004F6F66    mov         ebx,dword ptr [eax]
 004F6F68    call        dword ptr [ebx+48];TCustomHint.NCPaintHint
 004F6F6B    pop         ebx
 004F6F6C    ret
end;*}

//004F6F70
procedure sub_004F6F70;
begin
{*
 004F6F70    mov         edx,eax
 004F6F72    mov         eax,dword ptr [eax+298];TCustomHintWindow.FHintParent:TCustomHint
 004F6F78    mov         ecx,dword ptr [eax]
 004F6F7A    call        dword ptr [ecx+44];TCustomHint.PaintHint
 004F6F7D    ret
*}
end;

//004F6F80
procedure TCustomHintWindow.PositionAt(Rect:TRect);
begin
{*
 004F6F80    push        ebx
 004F6F81    push        esi
 004F6F82    push        edi
 004F6F83    add         esp,0FFFFFFF0
 004F6F86    mov         esi,edx
 004F6F88    lea         edi,[esp]
 004F6F8B    movs        dword ptr [edi],dword ptr [esi]
 004F6F8C    movs        dword ptr [edi],dword ptr [esi]
 004F6F8D    movs        dword ptr [edi],dword ptr [esi]
 004F6F8E    movs        dword ptr [edi],dword ptr [esi]
 004F6F8F    mov         esi,eax
 004F6F91    mov         eax,esi
 004F6F93    call        TCustomHintWindow.AutoSize
 004F6F98    mov         edx,dword ptr [esp+0C]
 004F6F9C    mov         eax,esi
 004F6F9E    call        TControl.SetTop
 004F6FA3    mov         edx,dword ptr [esp+8]
 004F6FA7    mov         eax,dword ptr [esp]
 004F6FAA    sub         edx,eax
 004F6FAC    sar         edx,1
>004F6FAE    jns         004F6FB3
 004F6FB0    adc         edx,0
 004F6FB3    add         edx,eax
 004F6FB5    mov         eax,dword ptr [esi+58];TCustomHintWindow.FWidth:Integer
 004F6FB8    sar         eax,1
>004F6FBA    jns         004F6FBF
 004F6FBC    adc         eax,0
 004F6FBF    sub         edx,eax
 004F6FC1    mov         eax,esi
 004F6FC3    call        TControl.SetLeft
 004F6FC8    mov         eax,dword ptr [esi+298];TCustomHintWindow.FHintParent:TCustomHint
 004F6FCE    cmp         byte ptr [eax+50],1;TCustomHint.FStyle:TBalloonHintStyle
>004F6FD2    jne         004F6FE1
 004F6FD4    mov         edx,dword ptr [esi+50];TCustomHintWindow.FLeft:Integer
 004F6FD7    add         edx,0A
 004F6FDA    mov         eax,esi
 004F6FDC    call        TControl.SetLeft
 004F6FE1    mov         eax,[007C4E78];^Screen:TScreen
 004F6FE6    mov         eax,dword ptr [eax]
 004F6FE8    call        005C80C0
 004F6FED    sar         eax,1
>004F6FEF    jns         004F6FF4
 004F6FF1    adc         eax,0
 004F6FF4    cmp         eax,dword ptr [esi+54];TCustomHintWindow.FTop:Integer
 004F6FF7    setl        bl
 004F6FFA    mov         byte ptr [esi+29C],bl;TCustomHintWindow.FPopAbove:Boolean
 004F7000    test        bl,bl
>004F7002    je          004F701B
 004F7004    mov         edx,dword ptr [esi+54];TCustomHintWindow.FTop:Integer
 004F7007    sub         edx,dword ptr [esi+5C]
 004F700A    mov         eax,dword ptr [esp+0C]
 004F700E    sub         eax,dword ptr [esp+4]
 004F7012    sub         edx,eax
 004F7014    mov         eax,esi
 004F7016    call        TControl.SetTop
 004F701B    add         esp,10
 004F701E    pop         edi
 004F701F    pop         esi
 004F7020    pop         ebx
 004F7021    ret
*}
end;

//004F7024
procedure THintWindow.WMNCHitTest(var Message:Messages.TWMNCHitTest);
begin
{*
 004F7024    mov         dword ptr [edx+0C],0FFFFFFFF
 004F702B    ret
*}
end;

//004F702C
{*procedure TCustomHintWindow.WMNCPaint(?:?);
begin
 004F702C    push        ebp
 004F702D    mov         ebp,esp
 004F702F    add         esp,0FFFFFFF8
 004F7032    mov         dword ptr [ebp-4],eax
 004F7035    mov         eax,dword ptr [ebp-4]
 004F7038    call        TWinControl.GetHandle
 004F703D    push        eax
 004F703E    call        user32.GetWindowDC
 004F7043    mov         dword ptr [ebp-8],eax
 004F7046    xor         eax,eax
 004F7048    push        ebp
 004F7049    push        4F7082
 004F704E    push        dword ptr fs:[eax]
 004F7051    mov         dword ptr fs:[eax],esp
 004F7054    mov         edx,dword ptr [ebp-8]
 004F7057    mov         eax,dword ptr [ebp-4]
 004F705A    mov         ecx,dword ptr [eax]
 004F705C    call        dword ptr [ecx+10C];TCustomHintWindow.sub_004F6F5C
 004F7062    xor         eax,eax
 004F7064    pop         edx
 004F7065    pop         ecx
 004F7066    pop         ecx
 004F7067    mov         dword ptr fs:[eax],edx
 004F706A    push        4F7089
 004F706F    mov         eax,dword ptr [ebp-8]
 004F7072    push        eax
 004F7073    mov         eax,dword ptr [ebp-4]
 004F7076    call        TWinControl.GetHandle
 004F707B    push        eax
 004F707C    call        user32.ReleaseDC
 004F7081    ret
>004F7082    jmp         @HandleFinally
>004F7087    jmp         004F706F
 004F7089    pop         ecx
 004F708A    pop         ecx
 004F708B    pop         ebp
 004F708C    ret
end;*}

//004F7090
{*procedure TCustomHintWindow.sub_004F7090(?:?);
begin
 004F7090    push        ebx
 004F7091    push        esi
 004F7092    mov         esi,edx
 004F7094    mov         ebx,eax
 004F7096    push        0
 004F7098    mov         edx,dword ptr [esi+4]
 004F709B    xor         ecx,ecx
 004F709D    mov         eax,ebx
 004F709F    call        TWinControl.PaintTo
 004F70A4    mov         edx,dword ptr [esi+4]
 004F70A7    mov         eax,ebx
 004F70A9    mov         ecx,dword ptr [eax]
 004F70AB    call        dword ptr [ecx+10C];TCustomHintWindow.sub_004F6F5C
 004F70B1    pop         esi
 004F70B2    pop         ebx
 004F70B3    ret
end;*}

//004F70B4
procedure TCustomHint.SetHintSize(HintWindow:TCustomHintWindow);
begin
{*
 004F70B4    push        ebx
 004F70B5    push        esi
 004F70B6    push        edi
 004F70B7    push        ebp
 004F70B8    add         esp,0FFFFFFCC
 004F70BB    mov         ebx,edx
 004F70BD    xor         eax,eax
 004F70BF    mov         dword ptr [esp],eax
 004F70C2    xor         eax,eax
 004F70C4    mov         dword ptr [esp+4],eax
 004F70C8    xor         eax,eax
 004F70CA    mov         dword ptr [esp+8],eax
 004F70CE    xor         esi,esi
 004F70D0    mov         edi,dword ptr [ebx+298];TCustomHintWindow.FHintParent:TCustomHint
 004F70D6    cmp         dword ptr [edi+40],0;TCustomHint.FTitle:string
>004F70DA    je          004F719A
 004F70E0    mov         eax,dword ptr [ebx+290];TCustomHintWindow.FCanvas:TCanvas
 004F70E6    mov         ebp,dword ptr [eax+40];TCanvas.FFont:TFont
 004F70E9    mov         dword ptr [esp+10],ebp
 004F70ED    mov         eax,dword ptr [esp+10]
 004F70F1    mov         eax,dword ptr [eax+10]
 004F70F4    movzx       eax,byte ptr [eax+21]
 004F70F8    mov         byte ptr [esp+14],al
 004F70FC    test        byte ptr [esp+14],1
 004F7101    setne       al
 004F7104    mov         byte ptr [esp+0C],al
 004F7108    mov         dword ptr [esp+18],ebp
 004F710C    mov         eax,dword ptr [esp+18]
 004F7110    mov         eax,dword ptr [eax+10]
 004F7113    movzx       eax,byte ptr [eax+21]
 004F7117    mov         byte ptr [esp+1C],al
 004F711B    movzx       edx,byte ptr ds:[4F7218];0x1 gvar_004F7218
 004F7122    or          dl,byte ptr [esp+1C]
 004F7126    mov         eax,ebp
 004F7128    call        TFont.SetStyle
 004F712D    mov         eax,[004F721C];0x102 gvar_004F721C
 004F7132    push        eax
 004F7133    lea         ecx,[edi+40];TCustomHint.FTitle:string
 004F7136    lea         edx,[esp+28]
 004F713A    mov         eax,dword ptr [ebx+290];TCustomHintWindow.FCanvas:TCanvas
 004F7140    mov         ebp,dword ptr [eax]
 004F7142    call        dword ptr [ebp+94];TCanvas.TextRect
 004F7148    cmp         byte ptr [esp+0C],0
>004F714D    jne         004F717E
 004F714F    mov         eax,dword ptr [ebx+290];TCustomHintWindow.FCanvas:TCanvas
 004F7155    mov         eax,dword ptr [eax+40];TCanvas.FFont:TFont
 004F7158    mov         eax,dword ptr [eax+10];TFont.FResource:PResource
 004F715B    movzx       eax,byte ptr [eax+21]
 004F715F    mov         byte ptr [esp+1D],al
 004F7163    movzx       edx,byte ptr ds:[4F7218];0x1 gvar_004F7218
 004F716A    not         edx
 004F716C    and         dl,byte ptr [esp+1D]
 004F7170    mov         eax,dword ptr [ebx+290];TCustomHintWindow.FCanvas:TCanvas
 004F7176    mov         eax,dword ptr [eax+40];TCanvas.FFont:TFont
 004F7179    call        TFont.SetStyle
 004F717E    mov         eax,dword ptr [esp+2C]
 004F7182    sub         eax,dword ptr [esp+24]
 004F7186    add         eax,8
 004F7189    mov         dword ptr [esp+8],eax
 004F718D    mov         eax,dword ptr [esp+30]
 004F7191    sub         eax,dword ptr [esp+28]
 004F7195    add         esi,eax
 004F7197    add         esi,4
 004F719A    cmp         dword ptr [edi+44],0;TCustomHint.FDescription:string
>004F719E    je          004F71EF
 004F71A0    mov         eax,[004F721C];0x102 gvar_004F721C
 004F71A5    push        eax
 004F71A6    lea         ecx,[edi+44];TCustomHint.FDescription:string
 004F71A9    lea         edx,[esp+28]
 004F71AD    mov         eax,dword ptr [ebx+290];TCustomHintWindow.FCanvas:TCanvas
 004F71B3    mov         edi,dword ptr [eax]
 004F71B5    call        dword ptr [edi+94];TCanvas.TextRect
 004F71BB    mov         eax,dword ptr [esp+2C]
 004F71BF    sub         eax,dword ptr [esp+24]
 004F71C3    add         eax,8
 004F71C6    mov         dword ptr [esp+20],eax
 004F71CA    mov         eax,dword ptr [esp+8]
 004F71CE    cmp         eax,dword ptr [esp+20]
>004F71D2    jle         004F71DA
 004F71D4    mov         eax,dword ptr [esp+8]
>004F71D8    jmp         004F71DE
 004F71DA    mov         eax,dword ptr [esp+20]
 004F71DE    mov         dword ptr [esp+8],eax
 004F71E2    mov         eax,dword ptr [esp+30]
 004F71E6    sub         eax,dword ptr [esp+28]
 004F71EA    add         esi,eax
 004F71EC    add         esi,4
 004F71EF    add         dword ptr [esp+4],esi
 004F71F3    mov         eax,dword ptr [esp+8]
 004F71F7    add         dword ptr [esp],eax
 004F71FA    mov         edx,dword ptr [esp+4]
 004F71FE    mov         eax,ebx
 004F7200    call        TControl.SetHeight
 004F7205    mov         edx,dword ptr [esp]
 004F7208    mov         eax,ebx
 004F720A    call        TControl.SetWidth
 004F720F    add         esp,34
 004F7212    pop         ebp
 004F7213    pop         edi
 004F7214    pop         esi
 004F7215    pop         ebx
 004F7216    ret
*}
end;

//004F7220
procedure TCustomHint.SetImages(Value:TImageList);
begin
{*
 004F7220    cmp         edx,dword ptr [eax+48];TCustomHint.FImages:TImageList
>004F7223    je          004F7237
 004F7225    mov         ecx,edx
 004F7227    mov         dword ptr [eax+48],ecx;TCustomHint.FImages:TImageList
 004F722A    test        ecx,ecx
>004F722C    je          004F7237
 004F722E    mov         edx,eax
 004F7230    mov         eax,ecx
 004F7232    call        TComponent.FreeNotification
 004F7237    ret
*}
end;

//004F7238
constructor TCustomHint.Create(AOwner:TComponent);
begin
{*
 004F7238    push        ebx
 004F7239    push        esi
 004F723A    test        dl,dl
>004F723C    je          004F7246
 004F723E    add         esp,0FFFFFFF0
 004F7241    call        @ClassCreate
 004F7246    mov         ebx,edx
 004F7248    mov         esi,eax
 004F724A    xor         edx,edx
 004F724C    mov         eax,esi
 004F724E    call        TComponent.Create
 004F7253    mov         dword ptr [esi+60],0FFFFFFFF;TCustomHint.FHideAfter:Integer
 004F725A    mov         byte ptr [esi+50],1;TCustomHint.FStyle:TBalloonHintStyle
 004F725E    xor         eax,eax
 004F7260    mov         dword ptr [esi+54],eax;TCustomHint.FAnimateThread:TCustomHintShowHideThread
 004F7263    mov         dword ptr [esi+58],1F4;TCustomHint.FShowDelay:Cardinal
 004F726A    mov         byte ptr [esi+5C],1;TCustomHint.FShow:Boolean
 004F726E    mov         eax,esi
 004F7270    test        bl,bl
>004F7272    je          004F7283
 004F7274    call        @AfterConstruction
 004F7279    pop         dword ptr fs:[0]
 004F7280    add         esp,0C
 004F7283    mov         eax,esi
 004F7285    pop         esi
 004F7286    pop         ebx
 004F7287    ret
*}
end;

//004F7288
destructor TCustomHint.Destroy();
begin
{*
 004F7288    push        ebx
 004F7289    push        esi
 004F728A    call        @BeforeDestruction
 004F728F    mov         ebx,edx
 004F7291    mov         esi,eax
 004F7293    mov         eax,esi
 004F7295    call        TCustomHint.HideHint
 004F729A    mov         byte ptr [esi+68],1;TCustomHint.FWorkComplete:Boolean
 004F729E    mov         eax,dword ptr [esi+54];TCustomHint.FAnimateThread:TCustomHintShowHideThread
 004F72A1    test        eax,eax
>004F72A3    je          004F72BF
 004F72A5    call        TCustomHintShowHideThread.ResumeWork
 004F72AA    mov         eax,dword ptr [esi+54];TCustomHint.FAnimateThread:TCustomHintShowHideThread
 004F72AD    call        TThread.Terminate
 004F72B2    mov         eax,dword ptr [esi+54];TCustomHint.FAnimateThread:TCustomHintShowHideThread
 004F72B5    call        TObject.Free
 004F72BA    xor         eax,eax
 004F72BC    mov         dword ptr [esi+54],eax;TCustomHint.FAnimateThread:TCustomHintShowHideThread
 004F72BF    mov         dl,0FC
 004F72C1    and         dl,bl
 004F72C3    mov         eax,esi
 004F72C5    call        TComponent.Destroy
 004F72CA    test        bl,bl
>004F72CC    jle         004F72D5
 004F72CE    mov         eax,esi
 004F72D0    call        @ClassDestroy
 004F72D5    pop         esi
 004F72D6    pop         ebx
 004F72D7    ret
*}
end;

//004F72D8
procedure TCustomHint.HideHint(HidingControl:TControl);
begin
{*
 004F72D8    cmp         edx,dword ptr [eax+64];TCustomHint.FLatestHintControl:TControl
>004F72DB    jne         004F72E2
 004F72DD    call        TCustomHint.HideHint
 004F72E2    ret
*}
end;

//004F72E4
procedure TCustomHint.HideHint;
begin
{*
 004F72E4    mov         byte ptr [eax+5C],0;TCustomHint.FShow:Boolean
 004F72E8    ret
*}
end;

//004F72EC
procedure TCustomHint.NCPaintHint(HintWindow:TCustomHintWindow; DC:HDC);
begin
{*
 004F72EC    ret
*}
end;

//004F72F0
procedure TCustomHint.Notification(AComponent:TComponent; Operation:TOperation);
begin
{*
 004F72F0    push        ebx
 004F72F1    push        esi
 004F72F2    push        edi
 004F72F3    mov         ebx,ecx
 004F72F5    mov         edi,edx
 004F72F7    mov         esi,eax
 004F72F9    mov         ecx,ebx
 004F72FB    mov         edx,edi
 004F72FD    mov         eax,esi
 004F72FF    call        TComponent.Notification
 004F7304    cmp         bl,1
>004F7307    jne         004F7317
 004F7309    cmp         edi,dword ptr [esi+48];TCustomHint.FImages:TImageList
>004F730C    jne         004F7317
 004F730E    xor         edx,edx
 004F7310    mov         eax,esi
 004F7312    call        TCustomHint.SetImages
 004F7317    pop         edi
 004F7318    pop         esi
 004F7319    pop         ebx
 004F731A    ret
*}
end;

//004F731C
procedure TCustomHint.PaintHint(HintWindow:TCustomHintWindow);
begin
{*
 004F731C    push        ebp
 004F731D    mov         ebp,esp
 004F731F    add         esp,0FFFFFFA4
 004F7322    push        ebx
 004F7323    push        esi
 004F7324    push        edi
 004F7325    mov         dword ptr [ebp-4],edx
 004F7328    lea         eax,[ebp-1C]
 004F732B    push        eax
 004F732C    lea         edx,[ebp-5C]
 004F732F    mov         eax,dword ptr [ebp-4]
 004F7332    mov         ecx,dword ptr [eax]
 004F7334    call        dword ptr [ecx+64];TWinControl.GetClientRect
 004F7337    lea         eax,[ebp-5C]
 004F733A    mov         edx,dword ptr [ebp-4]
 004F733D    mov         ecx,dword ptr [edx+5C];TCustomHintWindow.FHeight:Integer
 004F7340    mov         dl,3
 004F7342    call        SplitRect
 004F7347    mov         eax,dword ptr [ebp-4]
 004F734A    mov         eax,dword ptr [eax+290];TCustomHintWindow.FCanvas:TCanvas
 004F7350    mov         eax,dword ptr [eax+48];TCanvas.FBrush:TBrush
 004F7353    mov         edx,0F0FFFF
 004F7358    call        TBrush.SetColor
 004F735D    lea         edx,[ebp-5C]
 004F7360    mov         eax,dword ptr [ebp-4]
 004F7363    mov         ecx,dword ptr [eax]
 004F7365    call        dword ptr [ecx+64];TWinControl.GetClientRect
 004F7368    lea         edx,[ebp-5C]
 004F736B    mov         eax,dword ptr [ebp-4]
 004F736E    mov         eax,dword ptr [eax+290];TCustomHintWindow.FCanvas:TCanvas
 004F7374    mov         ecx,dword ptr [eax]
 004F7376    call        dword ptr [ecx+54];TCanvas.FillRect
 004F7379    mov         eax,dword ptr [ebp-10]
 004F737C    push        eax
 004F737D    mov         eax,dword ptr [ebp-14]
 004F7380    push        eax
 004F7381    mov         eax,dword ptr [ebp-18]
 004F7384    push        eax
 004F7385    mov         eax,dword ptr [ebp-1C]
 004F7388    push        eax
 004F7389    call        gdi32.CreateRectRgn
 004F738E    mov         dword ptr [ebp-8],eax
 004F7391    mov         eax,dword ptr [ebp-8]
 004F7394    push        eax
 004F7395    mov         eax,dword ptr [ebp-4]
 004F7398    mov         eax,dword ptr [eax+290];TCustomHintWindow.FCanvas:TCanvas
 004F739E    call        TCanvas.GetHandle
 004F73A3    push        eax
 004F73A4    call        gdi32.SelectObject
 004F73A9    mov         dword ptr [ebp-0C],eax
 004F73AC    xor         eax,eax
 004F73AE    push        ebp
 004F73AF    push        4F7551
 004F73B4    push        dword ptr fs:[eax]
 004F73B7    mov         dword ptr fs:[eax],esp
 004F73BA    mov         eax,dword ptr [ebp-4]
 004F73BD    mov         eax,dword ptr [eax+290];TCustomHintWindow.FCanvas:TCanvas
 004F73C3    mov         eax,dword ptr [eax+48];TCanvas.FBrush:TBrush
 004F73C6    xor         edx,edx
 004F73C8    call        TBrush.SetColor
 004F73CD    push        1
 004F73CF    push        1
 004F73D1    mov         eax,dword ptr [ebp-4]
 004F73D4    mov         eax,dword ptr [eax+290];TCustomHintWindow.FCanvas:TCanvas
 004F73DA    mov         eax,dword ptr [eax+48];TCanvas.FBrush:TBrush
 004F73DD    call        TBrush.GetHandle
 004F73E2    push        eax
 004F73E3    mov         eax,dword ptr [ebp-8]
 004F73E6    push        eax
 004F73E7    mov         eax,dword ptr [ebp-4]
 004F73EA    mov         eax,dword ptr [eax+290];TCustomHintWindow.FCanvas:TCanvas
 004F73F0    call        TCanvas.GetHandle
 004F73F5    push        eax
 004F73F6    call        gdi32.FrameRgn
 004F73FB    mov         eax,dword ptr [ebp-4]
 004F73FE    cmp         dword ptr [eax+2A4],0;TCustomHintWindow.FDescription:string
>004F7405    je          004F741D
 004F7407    push        3FE00000
 004F740C    push        0
 004F740E    lea         ecx,[ebp-2C]
 004F7411    lea         eax,[ebp-1C]
 004F7414    mov         dl,2
 004F7416    call        SplitRect
>004F741B    jmp         004F7427
 004F741D    lea         esi,[ebp-1C]
 004F7420    lea         edi,[ebp-2C]
 004F7423    movs        dword ptr [edi],dword ptr [esi]
 004F7424    movs        dword ptr [edi],dword ptr [esi]
 004F7425    movs        dword ptr [edi],dword ptr [esi]
 004F7426    movs        dword ptr [edi],dword ptr [esi]
 004F7427    mov         eax,dword ptr [ebp-4]
 004F742A    cmp         dword ptr [eax+2A0],0;TCustomHintWindow.FTitle:string
>004F7431    je          004F7449
 004F7433    push        3FE00000
 004F7438    push        0
 004F743A    lea         ecx,[ebp-3C]
 004F743D    lea         eax,[ebp-1C]
 004F7440    mov         dl,3
 004F7442    call        SplitRect
>004F7447    jmp         004F7453
 004F7449    lea         esi,[ebp-1C]
 004F744C    lea         edi,[ebp-3C]
 004F744F    movs        dword ptr [edi],dword ptr [esi]
 004F7450    movs        dword ptr [edi],dword ptr [esi]
 004F7451    movs        dword ptr [edi],dword ptr [esi]
 004F7452    movs        dword ptr [edi],dword ptr [esi]
 004F7453    mov         eax,dword ptr [ebp-4]
 004F7456    mov         eax,dword ptr [eax+290];TCustomHintWindow.FCanvas:TCanvas
 004F745C    mov         eax,dword ptr [eax+48];TCanvas.FBrush:TBrush
 004F745F    mov         dl,1
 004F7461    call        TBrush.SetStyle
 004F7466    mov         eax,[004F7560];0x2 gvar_004F7560
 004F746B    push        eax
 004F746C    mov         eax,dword ptr [ebp-4]
 004F746F    lea         ecx,[eax+2A0];TCustomHintWindow.FTitle:string
 004F7475    lea         edx,[ebp-4C]
 004F7478    mov         eax,dword ptr [ebp-4]
 004F747B    mov         eax,dword ptr [eax+290];TCustomHintWindow.FCanvas:TCanvas
 004F7481    mov         ebx,dword ptr [eax]
 004F7483    call        dword ptr [ebx+94];TCanvas.TextRect
 004F7489    lea         ecx,[ebp-5C]
 004F748C    lea         edx,[ebp-4C]
 004F748F    lea         eax,[ebp-2C]
 004F7492    call        CenteredRect
 004F7497    lea         esi,[ebp-5C]
 004F749A    lea         edi,[ebp-2C]
 004F749D    movs        dword ptr [edi],dword ptr [esi]
 004F749E    movs        dword ptr [edi],dword ptr [esi]
 004F749F    movs        dword ptr [edi],dword ptr [esi]
 004F74A0    movs        dword ptr [edi],dword ptr [esi]
 004F74A1    mov         eax,[004F7564];0x28500 gvar_004F7564
 004F74A6    push        eax
 004F74A7    mov         eax,dword ptr [ebp-4]
 004F74AA    lea         ecx,[eax+2A0];TCustomHintWindow.FTitle:string
 004F74B0    lea         edx,[ebp-2C]
 004F74B3    mov         eax,dword ptr [ebp-4]
 004F74B6    mov         eax,dword ptr [eax+290];TCustomHintWindow.FCanvas:TCanvas
 004F74BC    mov         ebx,dword ptr [eax]
 004F74BE    call        dword ptr [ebx+94];TCanvas.TextRect
 004F74C4    mov         eax,[004F7560];0x2 gvar_004F7560
 004F74C9    push        eax
 004F74CA    mov         eax,dword ptr [ebp-4]
 004F74CD    lea         ecx,[eax+2A4];TCustomHintWindow.FDescription:string
 004F74D3    lea         edx,[ebp-4C]
 004F74D6    mov         eax,dword ptr [ebp-4]
 004F74D9    mov         eax,dword ptr [eax+290];TCustomHintWindow.FCanvas:TCanvas
 004F74DF    mov         ebx,dword ptr [eax]
 004F74E1    call        dword ptr [ebx+94];TCanvas.TextRect
 004F74E7    lea         ecx,[ebp-5C]
 004F74EA    lea         edx,[ebp-4C]
 004F74ED    lea         eax,[ebp-3C]
 004F74F0    call        CenteredRect
 004F74F5    lea         esi,[ebp-5C]
 004F74F8    lea         edi,[ebp-3C]
 004F74FB    movs        dword ptr [edi],dword ptr [esi]
 004F74FC    movs        dword ptr [edi],dword ptr [esi]
 004F74FD    movs        dword ptr [edi],dword ptr [esi]
 004F74FE    movs        dword ptr [edi],dword ptr [esi]
 004F74FF    mov         eax,[004F7564];0x28500 gvar_004F7564
 004F7504    push        eax
 004F7505    mov         eax,dword ptr [ebp-4]
 004F7508    lea         ecx,[eax+2A4];TCustomHintWindow.FDescription:string
 004F750E    lea         edx,[ebp-3C]
 004F7511    mov         eax,dword ptr [ebp-4]
 004F7514    mov         eax,dword ptr [eax+290];TCustomHintWindow.FCanvas:TCanvas
 004F751A    mov         ebx,dword ptr [eax]
 004F751C    call        dword ptr [ebx+94];TCanvas.TextRect
 004F7522    xor         eax,eax
 004F7524    pop         edx
 004F7525    pop         ecx
 004F7526    pop         ecx
 004F7527    mov         dword ptr fs:[eax],edx
 004F752A    push        4F7558
 004F752F    mov         eax,dword ptr [ebp-0C]
 004F7532    push        eax
 004F7533    mov         eax,dword ptr [ebp-4]
 004F7536    mov         eax,dword ptr [eax+290];TCustomHintWindow.FCanvas:TCanvas
 004F753C    call        TCanvas.GetHandle
 004F7541    push        eax
 004F7542    call        gdi32.SelectObject
 004F7547    mov         eax,dword ptr [ebp-8]
 004F754A    push        eax
 004F754B    call        gdi32.DeleteObject
 004F7550    ret
>004F7551    jmp         @HandleFinally
>004F7556    jmp         004F752F
 004F7558    pop         edi
 004F7559    pop         esi
 004F755A    pop         ebx
 004F755B    mov         esp,ebp
 004F755D    pop         ebp
 004F755E    ret
*}
end;

//004F7568
procedure sub_004F7568(?:TCustomHint);
begin
{*
 004F7568    mov         byte ptr [eax+5C],1
 004F756C    ret
*}
end;

//004F7570
procedure TCustomHint.ShowHint(Control:TControl);
begin
{*
 004F7570    push        ebp
 004F7571    mov         ebp,esp
 004F7573    add         esp,0FFFFFFE4
 004F7576    push        ebx
 004F7577    push        esi
 004F7578    push        edi
 004F7579    xor         ecx,ecx
 004F757B    mov         dword ptr [ebp-1C],ecx
 004F757E    mov         dword ptr [ebp-18],ecx
 004F7581    mov         dword ptr [ebp-14],ecx
 004F7584    mov         esi,edx
 004F7586    mov         ebx,eax
 004F7588    xor         eax,eax
 004F758A    push        ebp
 004F758B    push        4F76AB
 004F7590    push        dword ptr fs:[eax]
 004F7593    mov         dword ptr fs:[eax],esp
 004F7596    test        esi,esi
>004F7598    je          004F7690
 004F759E    mov         eax,esi
 004F75A0    call        TControl.GetCustomHint
 004F75A5    cmp         ebx,eax
>004F75A7    jne         004F7666
 004F75AD    cmp         dword ptr [esi+90],0;TControl.FHint:string
>004F75B4    je          004F7690
 004F75BA    mov         edx,dword ptr [esi+90];TControl.FHint:string
 004F75C0    mov         eax,4F76C8;'|'
 004F75C5    call        AnsiPos
 004F75CA    mov         edi,eax
 004F75CC    lea         edx,[ebp-14]
 004F75CF    mov         eax,dword ptr [esi+90];TControl.FHint:string
 004F75D5    call        GetShortHint
 004F75DA    mov         edx,dword ptr [ebp-14]
 004F75DD    lea         eax,[ebx+40];TCustomHint.FTitle:string
 004F75E0    call        @UStrAsg
 004F75E5    test        edi,edi
>004F75E7    je          004F7604
 004F75E9    lea         edx,[ebp-18]
 004F75EC    mov         eax,dword ptr [esi+90];TControl.FHint:string
 004F75F2    call        GetLongHint
 004F75F7    mov         edx,dword ptr [ebp-18]
 004F75FA    lea         eax,[ebx+44];TCustomHint.FDescription:string
 004F75FD    call        @UStrAsg
>004F7602    jmp         004F760C
 004F7604    lea         eax,[ebx+44];TCustomHint.FDescription:string
 004F7607    call        @UStrClr
 004F760C    mov         edx,dword ptr [ebx+44];TCustomHint.FDescription:string
 004F760F    mov         eax,4F76C8;'|'
 004F7614    call        AnsiPos
 004F7619    mov         edi,eax
 004F761B    test        edi,edi
>004F761D    je          004F7651
 004F761F    lea         eax,[ebp-1C]
 004F7622    push        eax
 004F7623    lea         edx,[edi+1]
 004F7626    mov         ecx,7FFFFFFF
 004F762B    mov         eax,dword ptr [ebx+44];TCustomHint.FDescription:string
 004F762E    call        @UStrCopy
 004F7633    mov         eax,dword ptr [ebp-1C]
 004F7636    call        StrToInt
 004F763B    mov         dword ptr [ebx+4C],eax;TCustomHint.FImageIndex:TImageIndex
 004F763E    lea         eax,[ebx+44];TCustomHint.FDescription:string
 004F7641    push        eax
 004F7642    mov         ecx,edi
 004F7644    dec         ecx
 004F7645    xor         edx,edx
 004F7647    mov         eax,dword ptr [ebx+44];TCustomHint.FDescription:string
 004F764A    call        @UStrCopy
>004F764F    jmp         004F7658
 004F7651    mov         dword ptr [ebx+4C],0FFFFFFFF;TCustomHint.FImageIndex:TImageIndex
 004F7658    mov         dword ptr [ebx+64],esi;TCustomHint.FLatestHintControl:TControl
 004F765B    lea         eax,[ebp-8]
 004F765E    push        eax
 004F765F    call        user32.GetCursorPos
>004F7664    jmp         004F7686
 004F7666    mov         eax,dword ptr [esi+58];TControl.FWidth:Integer
 004F7669    sar         eax,1
>004F766B    jns         004F7670
 004F766D    adc         eax,0
 004F7670    mov         edx,dword ptr [esi+5C];TControl.FHeight:Integer
 004F7673    mov         dword ptr [ebp-10],eax
 004F7676    mov         dword ptr [ebp-0C],edx
 004F7679    lea         ecx,[ebp-8]
 004F767C    lea         edx,[ebp-10]
 004F767F    mov         eax,esi
 004F7681    call        TControl.ClientToScreen
 004F7686    lea         edx,[ebp-8]
 004F7689    mov         eax,ebx
 004F768B    call        TCustomHint.ShowHint
 004F7690    xor         eax,eax
 004F7692    pop         edx
 004F7693    pop         ecx
 004F7694    pop         ecx
 004F7695    mov         dword ptr fs:[eax],edx
 004F7698    push        4F76B2
 004F769D    lea         eax,[ebp-1C]
 004F76A0    mov         edx,3
 004F76A5    call        @UStrArrayClr
 004F76AA    ret
>004F76AB    jmp         @HandleFinally
>004F76B0    jmp         004F769D
 004F76B2    pop         edi
 004F76B3    pop         esi
 004F76B4    pop         ebx
 004F76B5    mov         esp,ebp
 004F76B7    pop         ebp
 004F76B8    ret
*}
end;

//004F76CC
procedure TCustomHint.ShowHint(Rect:TRect);
begin
{*
 004F76CC    push        ebx
 004F76CD    push        esi
 004F76CE    push        edi
 004F76CF    add         esp,0FFFFFFF0
 004F76D2    mov         esi,edx
 004F76D4    lea         edi,[esp]
 004F76D7    movs        dword ptr [edi],dword ptr [esi]
 004F76D8    movs        dword ptr [edi],dword ptr [esi]
 004F76D9    movs        dword ptr [edi],dword ptr [esi]
 004F76DA    movs        dword ptr [edi],dword ptr [esi]
 004F76DB    mov         ebx,eax
 004F76DD    mov         byte ptr [ebx+5C],1;TCustomHint.FShow:Boolean
 004F76E1    xor         ecx,ecx
 004F76E3    mov         dl,1
 004F76E5    mov         eax,[004E27A0];TCustomHintWindow
 004F76EA    call        TCustomHintWindow.Create;TCustomHintWindow.Create
 004F76EF    mov         esi,eax
 004F76F1    mov         dword ptr [esi+298],ebx;TCustomHintWindow.FHintParent:TCustomHint
 004F76F7    mov         eax,esi
 004F76F9    call        TWinControl.HandleNeeded
 004F76FE    lea         eax,[esi+2A0];TCustomHintWindow.FTitle:string
 004F7704    mov         edx,dword ptr [ebx+40];TCustomHint.FTitle:string
 004F7707    call        @UStrAsg
 004F770C    lea         eax,[esi+2A4];TCustomHintWindow.FDescription:string
 004F7712    mov         edx,dword ptr [ebx+44];TCustomHint.FDescription:string
 004F7715    call        @UStrAsg
 004F771A    mov         eax,dword ptr [ebx+4C];TCustomHint.FImageIndex:TImageIndex
 004F771D    mov         dword ptr [esi+2A8],eax;TCustomHintWindow.FImageIndex:TImageIndex
 004F7723    mov         edx,esp
 004F7725    mov         eax,esi
 004F7727    call        TCustomHintWindow.PositionAt
 004F772C    mov         byte ptr [ebx+68],0;TCustomHint.FWorkComplete:Boolean
 004F7730    mov         eax,dword ptr [ebx+54];TCustomHint.FAnimateThread:TCustomHintShowHideThread
 004F7733    test        eax,eax
>004F7735    jne         004F774B
 004F7737    push        ebx
 004F7738    mov         ecx,esi
 004F773A    mov         dl,1
 004F773C    mov         eax,[004E2BFC];TCustomHintShowHideThread
 004F7741    call        TCustomHintShowHideThread.Create;TCustomHintShowHideThread.Create
 004F7746    mov         dword ptr [ebx+54],eax;TCustomHint.FAnimateThread:TCustomHintShowHideThread
>004F7749    jmp         004F775A
 004F774B    mov         edx,esi
 004F774D    call        TCustomHintShowHideThread.QueHintWindow
 004F7752    mov         eax,dword ptr [ebx+54];TCustomHint.FAnimateThread:TCustomHintShowHideThread
 004F7755    call        TCustomHintShowHideThread.ResumeWork
 004F775A    add         esp,10
 004F775D    pop         edi
 004F775E    pop         esi
 004F775F    pop         ebx
 004F7760    ret
*}
end;

//004F7764
procedure TCustomHint.ShowHint(Point:TPoint);
begin
{*
 004F7764    push        ebx
 004F7765    push        esi
 004F7766    push        edi
 004F7767    add         esp,0FFFFFFE8
 004F776A    mov         esi,edx
 004F776C    lea         edi,[esp]
 004F776F    movs        dword ptr [edi],dword ptr [esi]
 004F7770    movs        dword ptr [edi],dword ptr [esi]
 004F7771    mov         ebx,eax
 004F7773    mov         edi,dword ptr [esp+4]
 004F7777    push        edi
 004F7778    lea         eax,[esp+0C]
 004F777C    push        eax
 004F777D    mov         esi,dword ptr [esp+8]
 004F7781    mov         ecx,esi
 004F7783    mov         edx,edi
 004F7785    mov         eax,esi
 004F7787    call        Rect
 004F778C    lea         edx,[esp+8]
 004F7790    mov         eax,ebx
 004F7792    call        TCustomHint.ShowHint
 004F7797    add         esp,18
 004F779A    pop         edi
 004F779B    pop         esi
 004F779C    pop         ebx
 004F779D    ret
*}
end;

//004F77A0
constructor TCustomHintShowHideThread.Create(HintObject:TCustomHint);
begin
{*
 004F77A0    push        ebp
 004F77A1    mov         ebp,esp
 004F77A3    push        ecx
 004F77A4    push        ebx
 004F77A5    push        esi
 004F77A6    push        edi
 004F77A7    test        dl,dl
>004F77A9    je          004F77B3
 004F77AB    add         esp,0FFFFFFF0
 004F77AE    call        @ClassCreate
 004F77B3    mov         edi,ecx
 004F77B5    mov         byte ptr [ebp-1],dl
 004F77B8    mov         ebx,eax
 004F77BA    xor         ecx,ecx
 004F77BC    xor         edx,edx
 004F77BE    mov         eax,ebx
 004F77C0    call        TThread.Create
 004F77C5    xor         ecx,ecx
 004F77C7    mov         dl,1
 004F77C9    mov         eax,[004D285C];TEvent
 004F77CE    call        TEvent.Create
 004F77D3    mov         dword ptr [ebx+50],eax
 004F77D6    mov         dl,1
 004F77D8    mov         eax,[0046C9C0];TThreadList
 004F77DD    call        TThreadList.Create
 004F77E2    mov         esi,eax
 004F77E4    mov         dword ptr [ebx+40],esi
 004F77E7    mov         byte ptr [esi+0C],1
 004F77EB    mov         edx,edi
 004F77ED    mov         eax,ebx
 004F77EF    call        TCustomHintShowHideThread.QueHintWindow
 004F77F4    mov         byte ptr [ebx+48],0
 004F77F8    mov         byte ptr [ebx+49],1
 004F77FC    mov         eax,dword ptr [ebp+8]
 004F77FF    mov         dword ptr [ebx+44],eax
 004F7802    mov         eax,ebx
 004F7804    cmp         byte ptr [ebp-1],0
>004F7808    je          004F7819
 004F780A    call        @AfterConstruction
 004F780F    pop         dword ptr fs:[0]
 004F7816    add         esp,0C
 004F7819    mov         eax,ebx
 004F781B    pop         edi
 004F781C    pop         esi
 004F781D    pop         ebx
 004F781E    pop         ecx
 004F781F    pop         ebp
 004F7820    ret         4
*}
end;

//004F7824
destructor TCustomHintShowHideThread.Destroy();
begin
{*
 004F7824    push        ebp
 004F7825    mov         ebp,esp
 004F7827    add         esp,0FFFFFFF8
 004F782A    push        ebx
 004F782B    push        esi
 004F782C    push        edi
 004F782D    call        @BeforeDestruction
 004F7832    mov         byte ptr [ebp-5],dl
 004F7835    mov         dword ptr [ebp-4],eax
 004F7838    mov         eax,dword ptr [ebp-4]
 004F783B    mov         byte ptr [eax+49],0;TCustomHintShowHideThread.FActive:Boolean
 004F783F    mov         eax,dword ptr [ebp-4]
 004F7842    call        TCustomHintShowHideThread.ResumeWork
 004F7847    movzx       edx,byte ptr [ebp-5]
 004F784B    and         dl,0FC
 004F784E    mov         eax,dword ptr [ebp-4]
 004F7851    call        TThread.Destroy
 004F7856    mov         eax,dword ptr [ebp-4]
 004F7859    mov         eax,dword ptr [eax+40];TCustomHintShowHideThread.FHintWindowQueue:TThreadList
 004F785C    call        TThreadList.LockList
 004F7861    mov         edi,eax
 004F7863    xor         edx,edx
 004F7865    push        ebp
 004F7866    push        4F78AA
 004F786B    push        dword ptr fs:[edx]
 004F786E    mov         dword ptr fs:[edx],esp
 004F7871    mov         ebx,dword ptr [edi+8];TList.FCount:Integer
 004F7874    dec         ebx
 004F7875    test        ebx,ebx
>004F7877    jl          004F788E
 004F7879    inc         ebx
 004F787A    xor         esi,esi
 004F787C    mov         edx,esi
 004F787E    mov         eax,edi
 004F7880    call        TList.Get
 004F7885    call        TObject.Free
 004F788A    inc         esi
 004F788B    dec         ebx
>004F788C    jne         004F787C
 004F788E    xor         eax,eax
 004F7890    pop         edx
 004F7891    pop         ecx
 004F7892    pop         ecx
 004F7893    mov         dword ptr fs:[eax],edx
 004F7896    push        4F78B1
 004F789B    mov         eax,dword ptr [ebp-4]
 004F789E    mov         eax,dword ptr [eax+40];TCustomHintShowHideThread.FHintWindowQueue:TThreadList
 004F78A1    mov         eax,dword ptr [eax+8];TThreadList.FLock:TObject
 004F78A4    call        TMonitor.Exit
 004F78A9    ret
>004F78AA    jmp         @HandleFinally
>004F78AF    jmp         004F789B
 004F78B1    mov         eax,dword ptr [ebp-4]
 004F78B4    mov         eax,dword ptr [eax+40];TCustomHintShowHideThread.FHintWindowQueue:TThreadList
 004F78B7    call        TThreadList.Clear
 004F78BC    mov         eax,dword ptr [ebp-4]
 004F78BF    mov         eax,dword ptr [eax+40];TCustomHintShowHideThread.FHintWindowQueue:TThreadList
 004F78C2    call        TObject.Free
 004F78C7    mov         eax,dword ptr [ebp-4]
 004F78CA    mov         eax,dword ptr [eax+50];TCustomHintShowHideThread.FWaitEvent:TEvent
 004F78CD    call        TObject.Free
 004F78D2    cmp         byte ptr [ebp-5],0
>004F78D6    jle         004F78E0
 004F78D8    mov         eax,dword ptr [ebp-4]
 004F78DB    call        @ClassDestroy
 004F78E0    pop         edi
 004F78E1    pop         esi
 004F78E2    pop         ebx
 004F78E3    pop         ecx
 004F78E4    pop         ecx
 004F78E5    pop         ebp
 004F78E6    ret
*}
end;

//004F78E8
function LatestHintWindow:TCustomHintWindow;
begin
{*
 004F78E8    push        ebp
 004F78E9    mov         ebp,esp
 004F78EB    add         esp,0FFFFFFF4
 004F78EE    push        ebx
 004F78EF    push        esi
 004F78F0    push        edi
 004F78F1    xor         eax,eax
 004F78F3    mov         dword ptr [ebp-4],eax
 004F78F6    mov         dl,1
 004F78F8    mov         eax,[0046C204];TList
 004F78FD    call        TObject.Create
 004F7902    mov         dword ptr [ebp-0C],eax
 004F7905    xor         edx,edx
 004F7907    push        ebp
 004F7908    push        4F79E1
 004F790D    push        dword ptr fs:[edx]
 004F7910    mov         dword ptr fs:[edx],esp
 004F7913    mov         eax,dword ptr [ebp+8]
 004F7916    mov         eax,dword ptr [eax-4]
 004F7919    mov         eax,dword ptr [eax+40]
 004F791C    call        TThreadList.LockList
 004F7921    mov         edi,eax
 004F7923    xor         edx,edx
 004F7925    push        ebp
 004F7926    push        4F7997
 004F792B    push        dword ptr fs:[edx]
 004F792E    mov         dword ptr fs:[edx],esp
 004F7931    mov         eax,dword ptr [edi+8]
 004F7934    mov         dword ptr [ebp-8],eax
 004F7937    mov         ebx,dword ptr [ebp-8]
 004F793A    dec         ebx
 004F793B    test        ebx,ebx
>004F793D    jl          004F7978
 004F793F    inc         ebx
 004F7940    xor         esi,esi
 004F7942    mov         eax,dword ptr [ebp-8]
 004F7945    dec         eax
 004F7946    cmp         esi,eax
>004F7948    jne         004F7958
 004F794A    xor         edx,edx
 004F794C    mov         eax,edi
 004F794E    call        TList.Get
 004F7953    mov         dword ptr [ebp-4],eax
>004F7956    jmp         004F7974
 004F7958    xor         edx,edx
 004F795A    mov         eax,edi
 004F795C    call        TList.Get
 004F7961    mov         edx,eax
 004F7963    mov         eax,dword ptr [ebp-0C]
 004F7966    call        TList.Add
 004F796B    xor         edx,edx
 004F796D    mov         eax,edi
 004F796F    call        TList.Delete
 004F7974    inc         esi
 004F7975    dec         ebx
>004F7976    jne         004F7942
 004F7978    xor         eax,eax
 004F797A    pop         edx
 004F797B    pop         ecx
 004F797C    pop         ecx
 004F797D    mov         dword ptr fs:[eax],edx
 004F7980    push        4F799E
 004F7985    mov         eax,dword ptr [ebp+8]
 004F7988    mov         eax,dword ptr [eax-4]
 004F798B    mov         eax,dword ptr [eax+40]
 004F798E    mov         eax,dword ptr [eax+8]
 004F7991    call        TMonitor.Exit
 004F7996    ret
>004F7997    jmp         @HandleFinally
>004F799C    jmp         004F7985
 004F799E    mov         eax,dword ptr [ebp-0C]
 004F79A1    mov         ebx,dword ptr [eax+8]
 004F79A4    dec         ebx
 004F79A5    test        ebx,ebx
>004F79A7    jl          004F79CB
 004F79A9    inc         ebx
 004F79AA    xor         esi,esi
 004F79AC    mov         edx,esi
 004F79AE    mov         eax,dword ptr [ebp-0C]
 004F79B1    call        TList.Get
 004F79B6    push        eax
 004F79B7    push        406D98;TObject.Free
 004F79BC    mov         eax,dword ptr [ebp+8]
 004F79BF    mov         eax,dword ptr [eax-4]
 004F79C2    call        TThread.Synchronize
 004F79C7    inc         esi
 004F79C8    dec         ebx
>004F79C9    jne         004F79AC
 004F79CB    xor         eax,eax
 004F79CD    pop         edx
 004F79CE    pop         ecx
 004F79CF    pop         ecx
 004F79D0    mov         dword ptr fs:[eax],edx
 004F79D3    push        4F79E8
 004F79D8    mov         eax,dword ptr [ebp-0C]
 004F79DB    call        TObject.Free
 004F79E0    ret
>004F79E1    jmp         @HandleFinally
>004F79E6    jmp         004F79D8
 004F79E8    mov         eax,dword ptr [ebp-4]
 004F79EB    pop         edi
 004F79EC    pop         esi
 004F79ED    pop         ebx
 004F79EE    mov         esp,ebp
 004F79F0    pop         ebp
 004F79F1    ret
*}
end;

//004F79F4
procedure TCustomHintShowHideThread.Execute;
begin
{*
 004F79F4    push        ebp
 004F79F5    mov         ebp,esp
 004F79F7    add         esp,0FFFFFFCC
 004F79FA    push        ebx
 004F79FB    push        esi
 004F79FC    push        edi
 004F79FD    mov         dword ptr [ebp-4],eax
>004F7A00    jmp         004F7E60
 004F7A05    mov         byte ptr [ebp-12],1
 004F7A09    push        ebp
 004F7A0A    call        LatestHintWindow
 004F7A0F    pop         ecx
 004F7A10    mov         dword ptr [ebp-10],eax
 004F7A13    mov         eax,dword ptr [ebp-4]
 004F7A16    mov         eax,dword ptr [eax+44];TCustomHintShowHideThread.FHintObject:TCustomHint
 004F7A19    mov         dword ptr [ebp-0C],eax
 004F7A1C    cmp         dword ptr [ebp-10],0
>004F7A20    je          004F7E2E
 004F7A26    xor         eax,eax
 004F7A28    push        ebp
 004F7A29    push        4F7E27
 004F7A2E    push        dword ptr fs:[eax]
 004F7A31    mov         dword ptr fs:[eax],esp
 004F7A34    mov         eax,dword ptr [ebp-10]
 004F7A37    call        TWinControl.HandleAllocated
 004F7A3C    test        al,al
>004F7A3E    je          004F7A5B
 004F7A40    push        3
 004F7A42    push        0
 004F7A44    push        0FF00
 004F7A49    mov         eax,dword ptr [ebp-10]
 004F7A4C    call        TWinControl.GetHandle
 004F7A51    push        eax
 004F7A52    mov         eax,[007C4810];^gvar_007A1CA8:Pointer
 004F7A57    mov         eax,dword ptr [eax]
 004F7A59    call        eax
 004F7A5B    mov         eax,dword ptr [ebp-10]
 004F7A5E    mov         eax,dword ptr [eax+298];TCustomHintWindow.FHintParent:TCustomHint
 004F7A64    mov         eax,dword ptr [eax+58];TCustomHint.FShowDelay:Cardinal
 004F7A67    call        TThread.Sleep
 004F7A6C    mov         eax,dword ptr [ebp-10]
 004F7A6F    mov         eax,dword ptr [eax+298];TCustomHintWindow.FHintParent:TCustomHint
 004F7A75    cmp         byte ptr [eax+5C],0;TCustomHint.FShow:Boolean
>004F7A79    je          004F7DB9
>004F7A7F    jmp         004F7DAC
 004F7A84    mov         byte ptr [ebp-11],0
 004F7A88    mov         eax,dword ptr [ebp-10]
 004F7A8B    call        TWinControl.HandleAllocated
 004F7A90    test        al,al
>004F7A92    je          004F7AB9
 004F7A94    mov         eax,dword ptr [ebp-10]
 004F7A97    push        eax
 004F7A98    mov         eax,dword ptr [eax]
 004F7A9A    mov         eax,dword ptr [eax+108];TCustomHintWindow.FOnEndDock:TEndDragEvent
 004F7AA0    push        eax
 004F7AA1    mov         eax,dword ptr [ebp-4]
 004F7AA4    call        TThread.Synchronize
 004F7AA9    push        4
 004F7AAB    mov         eax,dword ptr [ebp-10]
 004F7AAE    call        TWinControl.GetHandle
 004F7AB3    push        eax
 004F7AB4    call        user32.ShowWindow
 004F7AB9    cmp         byte ptr [ebp-12],0
>004F7ABD    je          004F7B8B
 004F7AC3    mov         byte ptr [ebp-12],0
 004F7AC7    mov         dword ptr [ebp-8],1
 004F7ACE    mov         eax,dword ptr [ebp-10]
 004F7AD1    call        TWinControl.HandleAllocated
 004F7AD6    test        al,al
>004F7AD8    je          004F7B08
 004F7ADA    push        3
 004F7ADC    fild        dword ptr [ebp-8]
 004F7ADF    fdiv        dword ptr ds:[4F7E74];10:Single
 004F7AE5    fmul        dword ptr ds:[4F7E78];255:Single
 004F7AEB    call        @TRUNC
 004F7AF0    push        eax
 004F7AF1    push        0FF00
 004F7AF6    mov         eax,dword ptr [ebp-10]
 004F7AF9    call        TWinControl.GetHandle
 004F7AFE    push        eax
 004F7AFF    mov         eax,[007C4810];^gvar_007A1CA8:Pointer
 004F7B04    mov         eax,dword ptr [eax]
 004F7B06    call        eax
 004F7B08    mov         eax,dword ptr [ebp-4]
 004F7B0B    mov         eax,dword ptr [eax+40];TCustomHintShowHideThread.FHintWindowQueue:TThreadList
 004F7B0E    call        TThreadList.LockList
 004F7B13    mov         dword ptr [ebp-1C],eax
 004F7B16    xor         eax,eax
 004F7B18    push        ebp
 004F7B19    push        4F7B4F
 004F7B1E    push        dword ptr fs:[eax]
 004F7B21    mov         dword ptr fs:[eax],esp
 004F7B24    mov         eax,dword ptr [ebp-1C]
 004F7B27    mov         eax,dword ptr [eax+8];TList.FCount:Integer
 004F7B2A    mov         dword ptr [ebp-18],eax
 004F7B2D    xor         eax,eax
 004F7B2F    pop         edx
 004F7B30    pop         ecx
 004F7B31    pop         ecx
 004F7B32    mov         dword ptr fs:[eax],edx
 004F7B35    push        4F7B56
 004F7B3A    mov         eax,dword ptr [ebp-4]
 004F7B3D    mov         eax,dword ptr [eax+40];TCustomHintShowHideThread.FHintWindowQueue:TThreadList
 004F7B40    mov         dword ptr [ebp-28],eax
 004F7B43    mov         eax,dword ptr [ebp-28]
 004F7B46    mov         eax,dword ptr [eax+8];TThreadList.FLock:TObject
 004F7B49    call        TMonitor.Exit
 004F7B4E    ret
>004F7B4F    jmp         @HandleFinally
>004F7B54    jmp         004F7B3A
 004F7B56    cmp         dword ptr [ebp-18],1
>004F7B5A    jle         004F7B74
 004F7B5C    push        ebp
 004F7B5D    call        LatestHintWindow
 004F7B62    pop         ecx
 004F7B63    mov         dword ptr [ebp-10],eax
 004F7B66    mov         byte ptr [ebp-11],1
 004F7B6A    mov         eax,dword ptr [ebp-0C]
 004F7B6D    call        004F7568
>004F7B72    jmp         004F7B8B
 004F7B74    mov         eax,14
 004F7B79    call        TThread.Sleep
 004F7B7E    inc         dword ptr [ebp-8]
 004F7B81    cmp         dword ptr [ebp-8],0B
>004F7B85    jne         004F7ACE
 004F7B8B    cmp         byte ptr [ebp-11],0
>004F7B8F    jne         004F7DAC
 004F7B95    call        TThread.GetTickCount
 004F7B9A    mov         edx,dword ptr [ebp-4]
 004F7B9D    mov         dword ptr [edx+4C],eax;TCustomHintShowHideThread.FDisplayTime:Cardinal
 004F7BA0    mov         eax,dword ptr [ebp-10]
 004F7BA3    call        TWinControl.HandleAllocated
 004F7BA8    test        al,al
>004F7BAA    je          004F7C75
 004F7BB0    push        3
 004F7BB2    push        0FF
 004F7BB7    push        0FF00
 004F7BBC    mov         eax,dword ptr [ebp-10]
 004F7BBF    call        TWinControl.GetHandle
 004F7BC4    push        eax
 004F7BC5    mov         eax,[007C4810];^gvar_007A1CA8:Pointer
 004F7BCA    mov         eax,dword ptr [eax]
 004F7BCC    call        eax
>004F7BCE    jmp         004F7C75
 004F7BD3    mov         eax,14
 004F7BD8    call        TThread.Sleep
 004F7BDD    mov         eax,dword ptr [ebp-4]
 004F7BE0    mov         eax,dword ptr [eax+40];TCustomHintShowHideThread.FHintWindowQueue:TThreadList
 004F7BE3    call        TThreadList.LockList
 004F7BE8    mov         ebx,eax
 004F7BEA    xor         eax,eax
 004F7BEC    push        ebp
 004F7BED    push        4F7C1A
 004F7BF2    push        dword ptr fs:[eax]
 004F7BF5    mov         dword ptr fs:[eax],esp
 004F7BF8    mov         eax,dword ptr [ebx+8];TList.FCount:Integer
 004F7BFB    mov         dword ptr [ebp-18],eax
 004F7BFE    xor         eax,eax
 004F7C00    pop         edx
 004F7C01    pop         ecx
 004F7C02    pop         ecx
 004F7C03    mov         dword ptr fs:[eax],edx
 004F7C06    push        4F7C21
 004F7C0B    mov         eax,dword ptr [ebp-4]
 004F7C0E    mov         edi,dword ptr [eax+40];TCustomHintShowHideThread.FHintWindowQueue:TThreadList
 004F7C11    mov         eax,dword ptr [edi+8];TThreadList.FLock:TObject
 004F7C14    call        TMonitor.Exit
 004F7C19    ret
>004F7C1A    jmp         @HandleFinally
>004F7C1F    jmp         004F7C0B
 004F7C21    cmp         dword ptr [ebp-18],1
>004F7C25    jle         004F7C3F
 004F7C27    push        ebp
 004F7C28    call        LatestHintWindow
 004F7C2D    pop         ecx
 004F7C2E    mov         dword ptr [ebp-10],eax
 004F7C31    mov         byte ptr [ebp-11],1
 004F7C35    mov         eax,dword ptr [ebp-0C]
 004F7C38    call        004F7568
>004F7C3D    jmp         004F7C88
 004F7C3F    mov         eax,dword ptr [ebp-10]
 004F7C42    mov         eax,dword ptr [eax+298];TCustomHintWindow.FHintParent:TCustomHint
 004F7C48    cmp         dword ptr [eax+60],0FFFFFFFF;TCustomHint.FHideAfter:Integer
>004F7C4C    je          004F7C75
 004F7C4E    call        TThread.GetTickCount
 004F7C53    mov         edx,dword ptr [ebp-4]
 004F7C56    sub         eax,dword ptr [edx+4C]
 004F7C59    mov         edx,dword ptr [ebp-10]
 004F7C5C    mov         edx,dword ptr [edx+298];TCustomHintWindow.FHintParent:TCustomHint
 004F7C62    cmp         eax,dword ptr [edx+60];TCustomHint.FHideAfter:Integer
>004F7C65    jbe         004F7C75
 004F7C67    mov         eax,dword ptr [ebp-10]
 004F7C6A    mov         eax,dword ptr [eax+298];TCustomHintWindow.FHintParent:TCustomHint
 004F7C70    call        TCustomHint.HideHint
 004F7C75    mov         eax,dword ptr [ebp-10]
 004F7C78    mov         eax,dword ptr [eax+298];TCustomHintWindow.FHintParent:TCustomHint
 004F7C7E    cmp         byte ptr [eax+5C],0;TCustomHint.FShow:Boolean
>004F7C82    jne         004F7BD3
 004F7C88    cmp         byte ptr [ebp-11],0
>004F7C8C    jne         004F7DAC
 004F7C92    mov         dword ptr [ebp-8],0A
 004F7C99    mov         eax,dword ptr [ebp-10]
 004F7C9C    call        TWinControl.HandleAllocated
 004F7CA1    test        al,al
>004F7CA3    je          004F7CD3
 004F7CA5    push        3
 004F7CA7    fild        dword ptr [ebp-8]
 004F7CAA    fdiv        dword ptr ds:[4F7E74];10:Single
 004F7CB0    fmul        dword ptr ds:[4F7E78];255:Single
 004F7CB6    call        @TRUNC
 004F7CBB    push        eax
 004F7CBC    push        0FF00
 004F7CC1    mov         eax,dword ptr [ebp-10]
 004F7CC4    call        TWinControl.GetHandle
 004F7CC9    push        eax
 004F7CCA    mov         eax,[007C4810];^gvar_007A1CA8:Pointer
 004F7CCF    mov         eax,dword ptr [eax]
 004F7CD1    call        eax
 004F7CD3    mov         eax,dword ptr [ebp-4]
 004F7CD6    mov         eax,dword ptr [eax+40];TCustomHintShowHideThread.FHintWindowQueue:TThreadList
 004F7CD9    call        TThreadList.LockList
 004F7CDE    mov         esi,eax
 004F7CE0    xor         eax,eax
 004F7CE2    push        ebp
 004F7CE3    push        4F7D16
 004F7CE8    push        dword ptr fs:[eax]
 004F7CEB    mov         dword ptr fs:[eax],esp
 004F7CEE    mov         eax,dword ptr [esi+8];TList.FCount:Integer
 004F7CF1    mov         dword ptr [ebp-18],eax
 004F7CF4    xor         eax,eax
 004F7CF6    pop         edx
 004F7CF7    pop         ecx
 004F7CF8    pop         ecx
 004F7CF9    mov         dword ptr fs:[eax],edx
 004F7CFC    push        4F7D1D
 004F7D01    mov         eax,dword ptr [ebp-4]
 004F7D04    mov         eax,dword ptr [eax+40];TCustomHintShowHideThread.FHintWindowQueue:TThreadList
 004F7D07    mov         dword ptr [ebp-2C],eax
 004F7D0A    mov         eax,dword ptr [ebp-2C]
 004F7D0D    mov         eax,dword ptr [eax+8];TThreadList.FLock:TObject
 004F7D10    call        TMonitor.Exit
 004F7D15    ret
>004F7D16    jmp         @HandleFinally
>004F7D1B    jmp         004F7D01
 004F7D1D    cmp         dword ptr [ebp-18],1
>004F7D21    jle         004F7D3B
 004F7D23    push        ebp
 004F7D24    call        LatestHintWindow
 004F7D29    pop         ecx
 004F7D2A    mov         dword ptr [ebp-10],eax
 004F7D2D    mov         byte ptr [ebp-11],1
 004F7D31    mov         eax,dword ptr [ebp-0C]
 004F7D34    call        004F7568
>004F7D39    jmp         004F7D52
 004F7D3B    mov         eax,14
 004F7D40    call        TThread.Sleep
 004F7D45    dec         dword ptr [ebp-8]
 004F7D48    cmp         dword ptr [ebp-8],0FFFFFFFF
>004F7D4C    jne         004F7C99
 004F7D52    cmp         byte ptr [ebp-11],0
>004F7D56    jne         004F7DAC
 004F7D58    mov         eax,dword ptr [ebp-4]
 004F7D5B    mov         eax,dword ptr [eax+40];TCustomHintShowHideThread.FHintWindowQueue:TThreadList
 004F7D5E    call        TThreadList.LockList
 004F7D63    mov         dword ptr [ebp-20],eax
 004F7D66    xor         eax,eax
 004F7D68    push        ebp
 004F7D69    push        4F7D9F
 004F7D6E    push        dword ptr fs:[eax]
 004F7D71    mov         dword ptr fs:[eax],esp
 004F7D74    mov         eax,dword ptr [ebp-20]
 004F7D77    mov         eax,dword ptr [eax+8];TList.FCount:Integer
 004F7D7A    mov         dword ptr [ebp-18],eax
 004F7D7D    xor         eax,eax
 004F7D7F    pop         edx
 004F7D80    pop         ecx
 004F7D81    pop         ecx
 004F7D82    mov         dword ptr fs:[eax],edx
 004F7D85    push        4F7DA6
 004F7D8A    mov         eax,dword ptr [ebp-4]
 004F7D8D    mov         eax,dword ptr [eax+40];TCustomHintShowHideThread.FHintWindowQueue:TThreadList
 004F7D90    mov         dword ptr [ebp-30],eax
 004F7D93    mov         eax,dword ptr [ebp-30]
 004F7D96    mov         eax,dword ptr [eax+8];TThreadList.FLock:TObject
 004F7D99    call        TMonitor.Exit
 004F7D9E    ret
>004F7D9F    jmp         @HandleFinally
>004F7DA4    jmp         004F7D8A
 004F7DA6    cmp         dword ptr [ebp-18],1
>004F7DAA    je          004F7DB9
 004F7DAC    mov         eax,dword ptr [ebp-4]
 004F7DAF    cmp         byte ptr [eax+0E],0;TCustomHintShowHideThread.FTerminated:Boolean
>004F7DB3    je          004F7A84
 004F7DB9    xor         eax,eax
 004F7DBB    pop         edx
 004F7DBC    pop         ecx
 004F7DBD    pop         ecx
 004F7DBE    mov         dword ptr fs:[eax],edx
 004F7DC1    push        4F7E2E
 004F7DC6    mov         eax,dword ptr [ebp-10]
 004F7DC9    push        eax
 004F7DCA    push        406D98;TObject.Free
 004F7DCF    mov         eax,dword ptr [ebp-4]
 004F7DD2    call        TThread.Synchronize
 004F7DD7    mov         eax,dword ptr [ebp-4]
 004F7DDA    mov         eax,dword ptr [eax+40];TCustomHintShowHideThread.FHintWindowQueue:TThreadList
 004F7DDD    call        TThreadList.LockList
 004F7DE2    mov         dword ptr [ebp-24],eax
 004F7DE5    xor         eax,eax
 004F7DE7    push        ebp
 004F7DE8    push        4F7E1F
 004F7DED    push        dword ptr fs:[eax]
 004F7DF0    mov         dword ptr fs:[eax],esp
 004F7DF3    xor         edx,edx
 004F7DF5    mov         eax,dword ptr [ebp-24]
 004F7DF8    call        TList.Delete
 004F7DFD    xor         eax,eax
 004F7DFF    pop         edx
 004F7E00    pop         ecx
 004F7E01    pop         ecx
 004F7E02    mov         dword ptr fs:[eax],edx
 004F7E05    push        4F7E26
 004F7E0A    mov         eax,dword ptr [ebp-4]
 004F7E0D    mov         eax,dword ptr [eax+40];TCustomHintShowHideThread.FHintWindowQueue:TThreadList
 004F7E10    mov         dword ptr [ebp-34],eax
 004F7E13    mov         eax,dword ptr [ebp-34]
 004F7E16    mov         eax,dword ptr [eax+8];TThreadList.FLock:TObject
 004F7E19    call        TMonitor.Exit
 004F7E1E    ret
>004F7E1F    jmp         @HandleFinally
>004F7E24    jmp         004F7E0A
 004F7E26    ret
>004F7E27    jmp         @HandleFinally
>004F7E2C    jmp         004F7DC6
 004F7E2E    mov         eax,dword ptr [ebp-0C]
 004F7E31    cmp         byte ptr [eax+68],0;TCustomHint.FWorkComplete:Boolean
>004F7E35    jne         004F7E60
 004F7E37    mov         eax,[007C4A18];^Application:TApplication
 004F7E3C    mov         eax,dword ptr [eax]
 004F7E3E    cmp         byte ptr [eax+0BC],0;TApplication.FTerminate:Boolean
>004F7E45    jne         004F7E60
 004F7E47    mov         eax,dword ptr [ebp-4]
 004F7E4A    mov         eax,dword ptr [eax+50];TCustomHintShowHideThread.FWaitEvent:TEvent
 004F7E4D    call        TEvent.ResetEvent
 004F7E52    mov         eax,dword ptr [ebp-4]
 004F7E55    mov         eax,dword ptr [eax+50];TCustomHintShowHideThread.FWaitEvent:TEvent
 004F7E58    or          edx,0FFFFFFFF
 004F7E5B    mov         ecx,dword ptr [eax]
 004F7E5D    call        dword ptr [ecx+8];THandleObject.WaitFor
 004F7E60    mov         eax,dword ptr [ebp-4]
 004F7E63    cmp         byte ptr [eax+49],0;TCustomHintShowHideThread.FActive:Boolean
>004F7E67    jne         004F7A05
 004F7E6D    pop         edi
 004F7E6E    pop         esi
 004F7E6F    pop         ebx
 004F7E70    mov         esp,ebp
 004F7E72    pop         ebp
 004F7E73    ret
*}
end;

//004F7E7C
procedure TCustomHintShowHideThread.QueHintWindow(Value:TCustomHintWindow);
begin
{*
 004F7E7C    mov         eax,dword ptr [eax+40]
 004F7E7F    call        TThreadList.Add
 004F7E84    ret
*}
end;

//004F7E88
procedure TCustomHintShowHideThread.ResumeWork;
begin
{*
 004F7E88    mov         eax,dword ptr [eax+50]
 004F7E8B    call        TEvent.SetEvent
 004F7E90    ret
*}
end;

//004F7E94
function TCustomGestureEngine.Supported:Boolean;
begin
{*
 004F7E94    xor         eax,eax
 004F7E96    ret
*}
end;

//004F7E98
constructor TCustomTouchManager.Create;
begin
{*
 004F7E98    push        ebp
 004F7E99    mov         ebp,esp
 004F7E9B    push        ecx
 004F7E9C    push        ebx
 004F7E9D    push        esi
 004F7E9E    push        edi
 004F7E9F    test        dl,dl
>004F7EA1    je          004F7EAB
 004F7EA3    add         esp,0FFFFFFF0
 004F7EA6    call        @ClassCreate
 004F7EAB    mov         esi,ecx
 004F7EAD    mov         byte ptr [ebp-1],dl
 004F7EB0    mov         ebx,eax
 004F7EB2    xor         edx,edx
 004F7EB4    mov         eax,ebx
 004F7EB6    call        TObject.Create
 004F7EBB    mov         dword ptr [ebx+4],esi
 004F7EBE    xor         eax,eax
 004F7EC0    mov         dword ptr [ebx+8],eax
 004F7EC3    xor         eax,eax
 004F7EC5    mov         dword ptr [ebx+0C],eax
 004F7EC8    mov         dl,1
 004F7ECA    mov         eax,[0046C204];TList
 004F7ECF    call        TObject.Create
 004F7ED4    mov         edi,eax
 004F7ED6    mov         dword ptr [ebx+14],edi
 004F7ED9    mov         eax,edi
 004F7EDB    mov         edx,esi
 004F7EDD    call        TList.Add
 004F7EE2    mov         eax,ebx
 004F7EE4    cmp         byte ptr [ebp-1],0
>004F7EE8    je          004F7EF9
 004F7EEA    call        @AfterConstruction
 004F7EEF    pop         dword ptr fs:[0]
 004F7EF6    add         esp,0C
 004F7EF9    mov         eax,ebx
 004F7EFB    pop         edi
 004F7EFC    pop         esi
 004F7EFD    pop         ebx
 004F7EFE    pop         ecx
 004F7EFF    pop         ebp
 004F7F00    ret
*}
end;

//004F7F04
destructor TCustomTouchManager.Destroy();
begin
{*
 004F7F04    push        ebx
 004F7F05    push        esi
 004F7F06    push        ecx
 004F7F07    call        @BeforeDestruction
 004F7F0C    mov         ebx,edx
 004F7F0E    mov         esi,eax
 004F7F10    cmp         dword ptr [esi+0C],0;TCustomTouchManager.FGestureManager:TCustomGestureManager
>004F7F14    je          004F7F1F
 004F7F16    xor         edx,edx
 004F7F18    mov         eax,esi
 004F7F1A    call        TTouchManager.SetGestureManager
 004F7F1F    lea         eax,[esi+14];TCustomTouchManager.FNotifyList:TList
 004F7F22    mov         dword ptr [esp],eax
 004F7F25    mov         eax,dword ptr [esp]
 004F7F28    mov         eax,dword ptr [eax]
 004F7F2A    mov         edx,dword ptr [esp]
 004F7F2D    xor         ecx,ecx
 004F7F2F    mov         dword ptr [edx],ecx
 004F7F31    call        TObject.Free
 004F7F36    mov         dl,0FC
 004F7F38    and         dl,bl
 004F7F3A    mov         eax,esi
 004F7F3C    call        TMemoryStream.Destroy
 004F7F41    test        bl,bl
>004F7F43    jle         004F7F4C
 004F7F45    mov         eax,esi
 004F7F47    call        @ClassDestroy
 004F7F4C    pop         edx
 004F7F4D    pop         esi
 004F7F4E    pop         ebx
 004F7F4F    ret
*}
end;

//004F7F50
procedure TCustomTouchManager.AssignTo(Dest:Classes.TPersistent);
begin
{*
 004F7F50    push        ebx
 004F7F51    push        esi
 004F7F52    push        edi
 004F7F53    mov         esi,edx
 004F7F55    mov         ebx,eax
 004F7F57    mov         eax,esi
 004F7F59    mov         edx,dword ptr ds:[4DAEEC];TCustomTouchManager
 004F7F5F    call        @IsClass
 004F7F64    test        al,al
>004F7F66    je          004F7FAF
 004F7F68    mov         edi,esi
 004F7F6A    mov         eax,dword ptr [ebx+4]
 004F7F6D    mov         dword ptr [edi+4],eax
 004F7F70    mov         eax,dword ptr [ebx+0C]
 004F7F73    mov         dword ptr [edi+0C],eax
 004F7F76    mov         eax,dword ptr [ebx+8]
 004F7F79    mov         dword ptr [edi+8],eax
 004F7F7C    movzx       eax,byte ptr [ebx+10]
 004F7F80    mov         byte ptr [edi+10],al
 004F7F83    movzx       eax,byte ptr [ebx+11]
 004F7F87    mov         byte ptr [edi+11],al
 004F7F8A    push        0
 004F7F8C    mov         eax,dword ptr [edi+14]
 004F7F8F    xor         ecx,ecx
 004F7F91    mov         edx,dword ptr [ebx+14]
 004F7F94    call        TList.Assign
 004F7F99    mov         eax,dword ptr [ebx+19]
 004F7F9C    mov         dword ptr [edi+19],eax
 004F7F9F    mov         al,byte ptr [ebx+1D]
 004F7FA2    mov         byte ptr [edi+1D],al
 004F7FA5    movzx       eax,word ptr [ebx+1E]
 004F7FA9    mov         word ptr [edi+1E],ax
>004F7FAD    jmp         004F7FB8
 004F7FAF    mov         edx,esi
 004F7FB1    mov         eax,ebx
 004F7FB3    call        TPersistent.AssignTo
 004F7FB8    pop         edi
 004F7FB9    pop         esi
 004F7FBA    pop         ebx
 004F7FBB    ret
*}
end;

//004F8024
procedure TTouchManager.IsStoredInteractiveGestureOptions(Value:TInteractiveGestureOptions);
begin
{*
 004F8024    push        esi
 004F8025    mov         esi,eax
 004F8027    mov         dl,1
 004F8029    mov         eax,dword ptr [esi+4];TTouchManager.FControl:TControl
 004F802C    mov         si,0FFD6
 004F8030    call        @CallDynaInst;TControl.sub_004E5F1C
 004F8035    pop         esi
 004F8036    ret
*}
end;

//004F8038
procedure TTouchManager.IsStoredInteractiveGestures(Value:TInteractiveGestures);
begin
{*
 004F8038    push        esi
 004F8039    mov         esi,eax
 004F803B    xor         edx,edx
 004F803D    mov         eax,dword ptr [esi+4];TTouchManager.FControl:TControl
 004F8040    mov         si,0FFD6
 004F8044    call        @CallDynaInst;TControl.sub_004E5F1C
 004F8049    pop         esi
 004F804A    ret
*}
end;

//004F804C
procedure TTouchManager.IsStoredParentTabletOptions(Value:Boolean);
begin
{*
 004F804C    push        esi
 004F804D    mov         esi,eax
 004F804F    mov         dl,2
 004F8051    mov         eax,dword ptr [esi+4];TTouchManager.FControl:TControl
 004F8054    mov         si,0FFD6
 004F8058    call        @CallDynaInst;TControl.sub_004E5F1C
 004F805D    pop         esi
 004F805E    ret
*}
end;

//004F8060
procedure TTouchManager.IsStoredTabletOptions(Value:TTabletOptions);
begin
{*
 004F8060    push        esi
 004F8061    mov         esi,eax
 004F8063    mov         dl,3
 004F8065    mov         eax,dword ptr [esi+4];TTouchManager.FControl:TControl
 004F8068    mov         si,0FFD6
 004F806C    call        @CallDynaInst;TControl.sub_004E5F1C
 004F8071    pop         esi
 004F8072    ret
*}
end;

//004F8074
{*procedure sub_004F8074(?:TTouchManager; ?:?);
begin
 004F8074    push        ebx
 004F8075    push        esi
 004F8076    mov         esi,edx
 004F8078    mov         ebx,eax
 004F807A    cmp         esi,dword ptr [ebx+8];TTouchManager.FGestureEngine:TCustomGestureEngine
>004F807D    je          004F80B9
 004F807F    mov         eax,dword ptr [ebx+4];TTouchManager.FControl:TControl
 004F8082    mov         edx,dword ptr ds:[4DE8CC];TWinControl
 004F8088    call        @IsClass
 004F808D    test        al,al
>004F808F    je          004F80B9
 004F8091    mov         dword ptr [ebx+8],esi;TTouchManager.FGestureEngine:TCustomGestureEngine
 004F8094    cmp         dword ptr [ebx+8],0;TTouchManager.FGestureEngine:TCustomGestureEngine
>004F8098    je          004F80B9
 004F809A    mov         eax,dword ptr [ebx+4];TTouchManager.FControl:TControl
 004F809D    call        TWinControl.HandleAllocated
 004F80A2    test        al,al
>004F80A4    je          004F80B9
 004F80A6    mov         eax,dword ptr [ebx+4];TTouchManager.FControl:TControl
 004F80A9    test        byte ptr [eax+62],20;TControl.FEnabled:Boolean
>004F80AD    je          004F80B9
 004F80AF    mov         dl,1
 004F80B1    mov         eax,dword ptr [ebx+8];TTouchManager.FGestureEngine:TCustomGestureEngine
 004F80B4    mov         ecx,dword ptr [eax]
 004F80B6    call        dword ptr [ecx+8];@AbstractError
 004F80B9    pop         esi
 004F80BA    pop         ebx
 004F80BB    ret
end;*}

//004F80BC
procedure TTouchManager.SetGestureManager(Value:TCustomGestureManager);
begin
{*
 004F80BC    push        ebx
 004F80BD    push        esi
 004F80BE    push        edi
 004F80BF    mov         esi,edx
 004F80C1    mov         ebx,eax
 004F80C3    mov         eax,dword ptr [ebx+0C];TTouchManager.FGestureManager:TCustomGestureManager
 004F80C6    cmp         esi,eax
>004F80C8    je          004F812B
 004F80CA    test        eax,eax
>004F80CC    je          004F80E6
 004F80CE    mov         edx,dword ptr [ebx+4];TTouchManager.FControl:TControl
 004F80D1    call        TComponent.RemoveFreeNotification
 004F80D6    mov         edx,dword ptr [ebx+4];TTouchManager.FControl:TControl
 004F80D9    mov         eax,dword ptr [ebx+0C];TTouchManager.FGestureManager:TCustomGestureManager
 004F80DC    mov         ecx,dword ptr [eax]
 004F80DE    call        dword ptr [ecx+78];@AbstractError
 004F80E1    xor         eax,eax
 004F80E3    mov         dword ptr [ebx+0C],eax;TTouchManager.FGestureManager:TCustomGestureManager
 004F80E6    test        esi,esi
>004F80E8    je          004F80FE
 004F80EA    mov         edx,dword ptr [ebx+4];TTouchManager.FControl:TControl
 004F80ED    mov         eax,esi
 004F80EF    call        TComponent.FreeNotification
 004F80F4    mov         edx,dword ptr [ebx+4];TTouchManager.FControl:TControl
 004F80F7    mov         eax,esi
 004F80F9    mov         ecx,dword ptr [eax]
 004F80FB    call        dword ptr [ecx+64];@AbstractError
 004F80FE    mov         dword ptr [ebx+0C],esi;TTouchManager.FGestureManager:TCustomGestureManager
 004F8101    mov         eax,dword ptr [ebx+14];TTouchManager.FNotifyList:TList
 004F8104    mov         esi,dword ptr [eax+8];TList.FCount:Integer
 004F8107    dec         esi
 004F8108    test        esi,esi
>004F810A    jl          004F812B
 004F810C    inc         esi
 004F810D    xor         edi,edi
 004F810F    push        0
 004F8111    mov         edx,edi
 004F8113    mov         eax,dword ptr [ebx+14];TTouchManager.FNotifyList:TList
 004F8116    call        TList.Get
 004F811B    xor         ecx,ecx
 004F811D    mov         edx,0B054
 004F8122    call        TControl.Perform
 004F8127    inc         edi
 004F8128    dec         esi
>004F8129    jne         004F810F
 004F812B    pop         edi
 004F812C    pop         esi
 004F812D    pop         ebx
 004F812E    ret
*}
end;

//004F8130
procedure TTouchManager.SetParentTabletOptions(Value:Boolean);
begin
{*
 004F8130    cmp         dl,byte ptr [eax+18];TTouchManager.FParentTabletOptions:Boolean
>004F8133    je          004F8157
 004F8135    mov         byte ptr [eax+18],dl;TTouchManager.FParentTabletOptions:Boolean
 004F8138    mov         edx,dword ptr [eax+4];TTouchManager.FControl:TControl
 004F813B    cmp         dword ptr [edx+40],0;TControl.FParent:TWinControl
>004F813F    je          004F8157
 004F8141    test        byte ptr [edx+1C],2;TControl.FComponentState:TComponentState
>004F8145    jne         004F8157
 004F8147    push        0
 004F8149    xor         ecx,ecx
 004F814B    mov         eax,edx
 004F814D    mov         edx,0B058
 004F8152    call        TControl.Perform
 004F8157    ret
*}
end;

//004F818C
procedure TCustomTouchManager.SetTabletOptions(const Value:TTabletOptions);
begin
{*
 004F818C    push        ebx
 004F818D    push        ecx
 004F818E    mov         word ptr [esp],dx
 004F8192    mov         ebx,eax
 004F8194    movzx       eax,word ptr [ebx+1E]
 004F8198    cmp         ax,word ptr [esp]
>004F819C    je          004F81BB
 004F819E    movzx       eax,word ptr [esp]
 004F81A2    mov         word ptr [ebx+1E],ax
 004F81A6    mov         byte ptr [ebx+18],0
 004F81AA    push        0
 004F81AC    xor         ecx,ecx
 004F81AE    mov         edx,0B057
 004F81B3    mov         eax,dword ptr [ebx+4]
 004F81B6    call        TControl.Perform
 004F81BB    pop         edx
 004F81BC    pop         ebx
 004F81BD    ret
*}
end;

Initialization
//0079CF90
{*
 0079CF90    push        ebp
 0079CF91    mov         ebp,esp
 0079CF93    xor         eax,eax
 0079CF95    push        ebp
 0079CF96    push        79D01F
 0079CF9B    push        dword ptr fs:[eax]
 0079CF9E    mov         dword ptr fs:[eax],esp
 0079CFA1    sub         dword ptr ds:[7CA5E4],1
>0079CFA8    jae         0079D011
 0079CFAA    call        kernel32.GetVersion
 0079CFAF    cmp         al,4
 0079CFB1    setae       byte ptr ds:[7CA5E0];gvar_007CA5E0
 0079CFB8    call        InitControls
 0079CFBD    mov         eax,[004DC470];TControl
 0079CFC2    call        StartClassGroup
 0079CFC7    mov         eax,[004DC470];TControl
 0079CFCC    call        ActivateClassGroup
 0079CFD1    mov         edx,dword ptr ds:[4DC470];TControl
 0079CFD7    mov         eax,[005A6FD8];TCustomImageList
 0079CFDC    call        GroupDescendentsWith
 0079CFE1    mov         edx,dword ptr ds:[4DC470];TControl
 0079CFE7    mov         eax,[004D55AC];TCustomAction
 0079CFEC    call        GroupDescendentsWith
 0079CFF1    mov         edx,dword ptr ds:[4DC470];TControl
 0079CFF7    mov         eax,[004D5100];TCustomActionList
 0079CFFC    call        GroupDescendentsWith
 0079D001    mov         edx,dword ptr ds:[4DC470];TControl
 0079D007    mov         eax,[004DA644];TCustomGestureManager
 0079D00C    call        GroupDescendentsWith
 0079D011    xor         eax,eax
 0079D013    pop         edx
 0079D014    pop         ecx
 0079D015    pop         ecx
 0079D016    mov         dword ptr fs:[eax],edx
 0079D019    push        79D026
 0079D01E    ret
>0079D01F    jmp         @HandleFinally
>0079D024    jmp         0079D01E
 0079D026    pop         ebp
 0079D027    ret
*}
Finalization
//004F81C0
{*
 004F81C0    push        ebp
 004F81C1    mov         ebp,esp
 004F81C3    xor         eax,eax
 004F81C5    push        ebp
 004F81C6    push        4F8212
 004F81CB    push        dword ptr fs:[eax]
 004F81CE    mov         dword ptr fs:[eax],esp
 004F81D1    inc         dword ptr ds:[7CA5E4]
>004F81D7    jne         004F8204
 004F81D9    mov         eax,[007CA620]
 004F81DE    xor         edx,edx
 004F81E0    mov         dword ptr ds:[7CA620],edx
 004F81E6    call        TObject.Free
 004F81EB    call        DoneControls
 004F81F0    mov         eax,7CA5EC
 004F81F5    call        @UStrClr
 004F81FA    mov         eax,7CA5F0
 004F81FF    call        @UStrClr
 004F8204    xor         eax,eax
 004F8206    pop         edx
 004F8207    pop         ecx
 004F8208    pop         ecx
 004F8209    mov         dword ptr fs:[eax],edx
 004F820C    push        4F8219
 004F8211    ret
>004F8212    jmp         @HandleFinally
>004F8217    jmp         004F8211
 004F8219    pop         ebp
 004F821A    ret
*}
end.